
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _main = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  _miot.Package.disableAutoCheckUpgrade = false;

  _miot.Package.entry(_main.default, function () {});
},10001,[14305,10074,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[8]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[9]);

  var _MainPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _SettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _protocol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _TunnelPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _PlayLocalPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _SheetListPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _PlayWavPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var App = function (_React$Component) {
    (0, _inherits2.default)(App, _React$Component);

    function App(props) {
      var _this;

      (0, _classCallCheck2.default)(this, App);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).call(this, props));

      _this.initData();

      return _this;
    }

    (0, _createClass2.default)(App, [{
      key: "initData",
      value: function initData() {
        this.initPage = 'MainPage';

        switch (_miot.Package.entrance) {
          case _miot.Entrance.Scene:
            switch (_miot.Package.entryInfo.payload.plug_id) {
              case 'PlayLocalPage':
                this.initPage = 'PlayLocalPage';
                break;

              case 'PlayListPage':
                this.initPage = 'SheetListPage';
                break;

              case 'PlayWavPage':
                this.initPage = 'PlayWavPage';
                break;
            }

            break;

          default:
            this.initPage = 'MainPage';
            break;
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.checkToAlertLegalInformationAuthorization();
      }
    }, {
      key: "render",
      value: function render() {
        var RootStack = createRootStack(this.initPage);
        return _react.default.createElement(RootStack, null);
      }
    }, {
      key: "checkToAlertLegalInformationAuthorization",
      value: function checkToAlertLegalInformationAuthorization() {
        var _this2 = this;

        _miot.Service.smarthome.batchGetDeviceDatas([{
          did: _miot.Device.deviceID,
          props: ["prop.s_auth_config"]
        }]).then(function (res) {
          var alreadyAuthed = true;
          var result = res[_miot.Device.deviceID];
          var config;

          if (result && result['prop.s_auth_config']) {
            config = result['prop.s_auth_config'];
          }

          if (config) {
            try {
              var authJson = JSON.parse(config);
              alreadyAuthed = authJson.privacyAuthed && true;
            } catch (err) {}
          } else {
            alreadyAuthed = false;
          }

          if (alreadyAuthed) {
            return;
          }

          _this2.alertLegalInformationAuthorization();
        }).catch(function (error) {
          _miot.Service.smarthome.reportLog(_miot.Device.model, "Service.smarthome.batchGetDeviceDatas error: " + JSON.stringify(error));
        });
      }
    }, {
      key: "alertLegalInformationAuthorization",
      value: function alertLegalInformationAuthorization() {
        _protocol.default.getProtocol().then(function (protocol) {
          _miot.Host.ui.alertLegalInformationAuthorization(protocol).then(function (res) {
            if (res === 'ok' || res === true || res === 'true') {
              _miot.Service.smarthome.batchSetDeviceDatas([{
                did: _miot.Device.deviceID,
                props: {
                  "prop.s_auth_config": JSON.stringify({
                    'privacyAuthed': true
                  })
                }
              }]);

              _miot.PackageEvent.packageAuthorizationAgreed.emit();
            }
          }).catch(function (error) {
            _miot.Service.smarthome.reportLog(_miot.Device.model, "Host.ui.alertLegalInformationAuthorization error: " + JSON.stringify(error));
          });
        }).catch(function (error) {
          _miot.Service.smarthome.reportLog(_miot.Device.model, "Service.getServerName() error: " + JSON.stringify(error));
        });
      }
    }]);
    return App;
  }(_react.default.Component);

  exports.default = App;

  function createRootStack(initPage) {
    return (0, _reactNavigation.createStackNavigator)({
      TunnelPage: _TunnelPage.default,
      MainPage: _MainPage.default,
      SettingPage: _SettingPage.default,
      PlayLocalPage: _PlayLocalPage.default,
      SheetListPage: _SheetListPage.default,
      PlayWavPage: _PlayWavPage.default,
      FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
      MoreSetting: _CommonSetting.MoreSetting
    }, {
      initialRouteName: initPage,
      navigationOptions: function navigationOptions(_ref) {
        var navigation = _ref.navigation;

        var _ref2 = navigation.state.params || {},
            titleProps = _ref2.titleProps,
            title = _ref2.title;

        if (!titleProps && !title) return {
          header: null
        };

        if (!titleProps) {
          titleProps = {
            title: title
          };
        }

        if (!titleProps.left) {
          titleProps.left = [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              navigation.goBack();
            }
          }];
        }

        return {
          header: _react.default.createElement(_NavigationBar.default, titleProps)
        };
      },
      transitionConfig: function transitionConfig() {
        return {
          screenInterpolator: interpolator
        };
      }
    });
  }

  function interpolator(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return function (props) {
        var navigation = props.navigation,
            scene = props.scene;
        var focused = navigation.state.index === scene.index;
        var opacity = focused ? 1 : 0;
        var translate = focused ? 0 : 1000000;
        return {
          opacity: opacity,
          transform: [{
            translateX: translate
          }, {
            translateY: translate
          }]
        };
      };
    }

    var interpolate = function interpolate(props) {
      var scene = props.scene,
          scenes = props.scenes;
      var index = scene.index;
      var lastSceneIndexInScenes = scenes.length - 1;
      var isBack = !scenes[lastSceneIndexInScenes].isActive;

      if (isBack) {
        var currentSceneIndexInScenes = scenes.findIndex(function (item) {
          return item === scene;
        });
        var targetSceneIndexInScenes = scenes.findIndex(function (item) {
          return item.isActive;
        });
        var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
        var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

        if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
          return {
            first: Math.min(targetSceneIndex, index - 1),
            last: index + 1
          };
        } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
          return {
            first: index - 1,
            last: Math.max(lastSceneIndex, index + 1)
          };
        } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
          return null;
        } else {
          return {
            first: index - 1,
            last: index + 1
          };
        }
      } else {
        return {
          first: index - 1,
          last: index + 1
        };
      }
    };

    if (!interpolate) return {
      opacity: 0
    };
    var p = interpolate(props);
    if (!p) return;
    var first = p.first,
        last = p.last;
    var index = scene.index;
    var opacity = position.interpolate({
      inputRange: [first, first + 0.01, index, last - 0.01, last],
      outputRange: [0, 1, 1, 0.85, 0]
    });
    var width = layout.initWidth;
    var translateX = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [width, 0, width * -0.3]
    });
    var translateY = 0;
    return {
      opacity: opacity,
      transform: [{
        translateX: translateX
      }, {
        translateY: translateY
      }]
    };
  }
},10004,[14305,14320,14323,14371,14377,14386,10297,10074,10918,10353,10007,10571,10719,10574,10637,10640,10643,10646]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNativeModalDropdown = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _utils = _$$_REQUIRE(_dependencyMap[14]);

  var _widgets = _$$_REQUIRE(_dependencyMap[15]);

  var _resources = _$$_REQUIRE(_dependencyMap[16]);

  var SdkFontStyle = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[17]));

  var _network = _$$_REQUIRE(_dependencyMap[18]);

  var _api = _$$_REQUIRE(_dependencyMap[19]);

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[20]);

  var Normal = _widgets.TextTool.Normal,
      Tip = _widgets.TextTool.Tip;

  var MainPage = function (_React$Component) {
    (0, _inherits2.default)(MainPage, _React$Component);

    function MainPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MainPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MainPage).call(this, props));

      _this.getPlayList = function (refresh) {
        if (refresh) {
          _this.setState({
            playListLoading: true
          });
        }

        if (_this.deviceId === '' || _this.authCode === '') {
          _utils.miotTools.getDeviceAutoCode(function (res) {
            var value = JSON.parse(res[0].value);
            _this.authCode = value.authCode;
            _this.deviceId = value.deviceId;
          });

          _this.setState({
            playListLoading: false
          });
        }

        _network.hopeRequestTools.hopeRequest(_api.CURRENT_PLAY_LIST, {
          deviceId: _this.deviceId,
          authCode: _this.authCode,
          sheetCata: 1,
          pageSize: 20,
          currentPage: _this.state.source === 0 ? _this.playListPage : _this.minorPlayListPage
        }, function (res) {
          var newPlayList = [];

          if (!refresh) {
            newPlayList = _this.state.source === 0 ? _this.state.playList : _this.state.minorPlayList;
          }

          newPlayList = newPlayList.concat(res.rows);

          _this.funSplitBySource(function () {
            _this.setState({
              playList: newPlayList,
              playListLength: res.total
            });
          }, function () {
            _this.setState({
              minorPlayList: newPlayList,
              minorPlayListLength: res.total
            });
          });

          if (refresh) {
            _this.setState({
              playListLoading: false
            });
          }
        }, function (error) {
          _this.setState({
            playListLoading: false
          });
        });
      };

      _this.topAnimate = function () {
        var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

        _this.animatedTop.setValue(start);

        _reactNative.Animated.timing(_this.animatedTop, {
          toValue: end,
          duration: 150,
          easing: _reactNative.Easing.linear
        }).start();
      };

      _this.initPlayAnimated = function () {
        _this.playerAnimated = _reactNative.Animated.timing(_this.state.rotateValue, {
          toValue: 1,
          duration: 12000,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        });
      };

      _this.rotating = function () {
        if (_this.state.source == 0 && _this.state.playing || _this.state.source == 1 && _this.state.minorPlaying) {
          _this.state.rotateValue.setValue(0);

          _this.playerAnimated.start(function () {
            _this.rotating();
          });
        }
      };

      _this.goBack = function () {
        var backAction = _reactNavigation.NavigationActions.back();

        _this.props.navigation.goBack();
      };

      _this.sliderChangeComplete = function (value) {
        _this.state.sliderChangeing = false;

        _this.funSplitBySource(function () {
          _this.setState({
            position: value
          });

          _utils.miotTools.setMainProgress(value);
        }, function () {
          _this.setState({
            minorPosition: value
          });

          _utils.miotTools.setMinorProgress(value);
        });
      };

      _this.goTunnel = function () {
        _this.props.navigation.navigate('TunnelPage', {
          title: (0, _MHLocalizableString.getString)('tunnel_setting')
        });
      };

      _this._sliderChangeing = function (value) {
        _this.state.sliderChangeing = true;
      };

      _this.playing = function (playing) {
        _this.funSplitBySource(function () {
          _this.setState({
            playing: !_this.state.playing
          });

          if (!playing) {
            _utils.miotTools.pause();

            _this.stopRotating();
          } else {
            _utils.miotTools.play();

            _this.startRotating();
          }
        }, function () {
          _this.setState({
            minorPlaying: !_this.state.minorPlaying
          });

          if (!playing) {
            _utils.miotTools.pauseMinor();

            _this.stopRotating();
          } else {
            _utils.miotTools.playMinor();

            _this.startRotating();
          }
        });
      };

      _this.setMute = function (value) {
        _this.setState({
          mute: !value
        });

        if (!value) {
          _this.prevVolume = _this.state.volum;

          _utils.miotTools.setSystemVolume(0);
        } else {
          _this.setState({
            volum: _this.prevVolume
          });

          _utils.miotTools.setSystemVolume(_this.prevVolume);
        }
      };

      _this.dropdownClick = function (text) {
        return _react.default.createElement(_reactNative.Text, {
          color: '#aaaaaa',
          style: {
            fontSize: 14,
            marginBottom: 2
          }
        }, "" + text, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 10,
            height: 7
          },
          source: _$$_REQUIRE(_dependencyMap[21])
        }));
      };

      _this.dropdownRenderRow = function (option, index, isSelected) {
        switch (index) {
          case '0':
            return _react.default.createElement(_reactNative.Text, {
              style: styles.dropdownRenderRow
            }, (0, _MHLocalizableString.getString)('source_local'));

          case '1':
            return _react.default.createElement(_reactNative.Text, {
              style: styles.dropdownRenderRow
            }, (0, _MHLocalizableString.getString)('source_blue'));

          case '2':
            return _react.default.createElement(_reactNative.Text, {
              style: styles.dropdownRenderRow
            }, (0, _MHLocalizableString.getString)('source_out'));
        }
      };

      _this.dropdownOnSelected = function (index, option) {
        switch (index) {
          case '0':
            _utils.miotTools.setMediaSource(1);

            _this.setState({
              media: 1,
              mediaStr: (0, _MHLocalizableString.getString)('source_local')
            });

            break;

          case '1':
            _utils.miotTools.setMediaSource(3);

            _this.setState({
              media: 3,
              mediaStr: (0, _MHLocalizableString.getString)('source_blue')
            });

            break;

          case '2':
            _utils.miotTools.setMediaSource(2);

            _this.setState({
              media: 2,
              mediaStr: (0, _MHLocalizableString.getString)('source_out')
            });

            break;
        }
      };

      _this.playModeClick = function (playMode) {
        switch (playMode) {
          case 1:
            _this.setState({
              playMode: 2
            });

            break;

          case 2:
            _this.setState({
              playMode: 3
            });

            break;

          case 3:
            _this.setState({
              playMode: 4
            });

            break;

          case 4:
            _this.setState({
              playMode: 1
            });

            break;
        }

        setTimeout(function () {
          _this.funSplitBySource(function () {
            _utils.miotTools.setPlayMode(_this.state.playMode);
          }, function () {
            _utils.miotTools.setMinorPlayMode(_this.state.playMode);
          });
        }, 200);
      };

      _this.nextPlayClick = function () {
        _this.funSplitBySource(function () {
          _utils.miotTools.next();
        }, function () {
          _utils.miotTools.nextMinor();
        });
      };

      _this.prevPlayClick = function () {
        _this.funSplitBySource(function () {
          _utils.miotTools.previous();
        }, function () {
          _utils.miotTools.previousMinor();
        });
      };

      _this.playListClick = function () {
        _this.funSplitBySource(function () {
          if (_this.state.playList.length === 0) {
            _this.getPlayList(true);
          }
        }, function () {
          if (_this.state.minorPlayList.length === 0) {
            _this.getPlayList(true);
          }
        });

        _this.playListDialog.topAnimate(0, 1);
      };

      _this.toggleBtnLeftClick = function () {
        if (_this.state.playing && !_this.state.minorPlaying) {
          _this.startRotating();
        }

        if (!_this.state.playing && _this.state.minorPlaying) {
          _this.stopRotating();
        }

        _this.setState({
          source: 0
        });
      };

      _this.toggleBtnRightClick = function (value) {
        if (_this.state.tunnelMerge) {
          _reactNative.Alert.alert('双路独立播放未打开,请在设备上开启该功能');

          value.setState({
            selected: true
          });
        } else {
          if (!_this.state.playing && _this.state.minorPlaying) {
            _this.startRotating();
          }

          if (_this.state.playing && !_this.state.minorPlaying) {
            _this.stopRotating();
          }

          _this.setState({
            source: 1
          });
        }
      };

      _this.volumeClick = function () {
        _this.setState({
          showVolume: !_this.state.showVolume
        });
      };

      _this.volumeSliderChange = function (value) {
        _this.setState({
          volum: value
        });

        if (value === 0) {
          _this.setState({
            mute: true
          });
        } else {
          _this.setState({
            mute: false
          });
        }

        _utils.miotTools.setSystemVolume(value);
      };

      _this.playListRefresh = function () {
        _this.funSplitBySource(function () {
          _this.playListPage = 1;
        }, function () {
          _this.minorPlayListPage = 1;
        });

        _this.getPlayList(true);
      };

      _this.playListLoadMore = function () {
        _this.funSplitBySource(function () {
          if (_this.state.playList.length >= 20) {
            _this.playListPage++;

            _this.getPlayList(false);
          }
        }, function () {
          if (_this.state.minorPlayList.length >= 20) {
            _this.minorPlayListPage++;

            _this.getPlayList(false);
          }
        });
      };

      _this.playListItemClick = function (value, index) {
        _utils.miotTools.setPlaySong({
          type: 'currentPlay',
          data: {
            musicId: value.musicId,
            source: _this.state.source
          }
        });
      };

      _this.playListItemDeleteClick = function (value) {};

      _this.funSplitBySource = function (fun1, fun2) {
        if (_this.state.source === 0) {
          fun1();
        } else if (_this.state.source === 1) {
          fun2();
        }
      };

      _this.initNavigationBar();

      _this.playListPage = 1;
      _this.minorPlayListPage = 1;
      _this.authCode = '';
      _this.deviceId = '';
      _this.state = {
        rotateValue: new _reactNative.Animated.Value(0),
        source: 0,
        tunnelMerge: false,
        showVolume: false,
        volum: 0,
        mute: false,
        playing: false,
        minorPlaying: false,
        playMode: 0,
        minorPlayMode: 0,
        duration: 0,
        minorDuration: 0,
        position: 0,
        minorPosition: 0,
        songName: '',
        minorSongName: '',
        artist: '',
        minorArtist: '',
        picUrl: '',
        minorPicUrl: '',
        sliderChangeing: false,
        showPlayList: false,
        playList: [],
        minorPlayList: [],
        playListLength: '0',
        minorPlayListLength: '0',
        playListLoading: false,
        detail: {},
        lyric: '',
        lyricArr: [],
        currentLrc: '',
        showLyic: false,
        lyricScroll: 0,
        media: 1,
        mediaStr: (0, _MHLocalizableString.getString)('source_local')
      };

      _this.initPlayAnimated();

      _this.animatedTop = new _reactNative.Animated.Value(0);

      _this.initDeviceSubscribe();

      return _this;
    }

    (0, _createClass2.default)(MainPage, [{
      key: "getDeviceInitialState",
      value: function getDeviceInitialState() {
        var _this2 = this;

        _utils.miotTools.getDeviceVolume(function (res) {
          _this2.setState({
            volum: res[0].value,
            mute: res[0].value === 0
          });
        });

        _utils.miotTools.getDeviceMute(function (res) {
          _this2.setState({
            mute: res[0].value
          });
        });

        _utils.miotTools.getDevicePlayStatus(function (res) {
          if (res[0].value === 1) {
            _this2.startRotating();
          }

          _this2.setState({
            playing: res[0].value === 1
          });
        });

        _utils.miotTools.getDevicePlayMode(function (res) {
          _this2.setState({
            playMode: res[0].value
          });
        });

        _utils.miotTools.getDeviceMinorPlayStatus(function (res) {
          _this2.setState({
            minorPlaying: res[0].value === 1
          });
        });

        _utils.miotTools.getDeviceMinorPlayMode(function (res) {
          _this2.setState({
            minorPlayMode: res[0].value
          });
        });

        _utils.miotTools.getDeviceAutoCode(function (res) {
          var value = JSON.parse(res[0].value);
          _this2.authCode = value.authCode;
          _this2.deviceId = value.deviceId;
        });

        _utils.miotTools.getDeviceMusic(function (res) {
          var value = JSON.parse(res[0].value);

          _this2.setState({
            songName: value.title,
            artist: value.artist,
            duration: value.duration
          });
        });

        _utils.miotTools.getDeviceMinorMusic(function (res) {
          var value = JSON.parse(res[0].value);

          _this2.setState({
            minorSongName: value.title,
            minorArtist: value.artist,
            minorDuration: value.duration
          });
        });

        _utils.miotTools.getMainProgress(function (res) {
          _this2.setState({
            position: res[0].value
          });
        });

        _utils.miotTools.getMinorProgress(function (res) {
          _this2.setState({
            minorPosition: res[0].value
          });
        });

        _utils.miotTools.getTunnelMergeStatus(function (res) {
          _this2.setState({
            tunnelMerge: res[0].value
          });
        });

        _utils.miotTools.getTunnelStatus(function (res) {
          var value;
          var valueStr;

          switch (JSON.parse(res[0].value).tunnelSource) {
            case 1:
              value = 1;
              valueStr = (0, _MHLocalizableString.getString)('source_local');
              break;

            case 2:
              value = 2;
              valueStr = (0, _MHLocalizableString.getString)('source_out');
              break;

            case 3:
              value = 3;
              valueStr = (0, _MHLocalizableString.getString)('source_blue');
              break;

            default:
              value = 1;
              valueStr = (0, _MHLocalizableString.getString)('source_local');
              break;
          }

          _this2.setState({
            media: value,
            mediaStr: valueStr
          });
        });
      }
    }, {
      key: "initDeviceSubscribe",
      value: function initDeviceSubscribe() {
        _utils.miotTools.subscribeVolume();

        _utils.miotTools.subscribeMute();

        _utils.miotTools.subscribePlayStatus();

        _utils.miotTools.subscribePlayMode();

        _utils.miotTools.subscribeMinorPlayMode();

        _utils.miotTools.subscribeMinorPlayStatus();

        _utils.miotTools.subscribeAuthCode();

        _utils.miotTools.subscribeMusic();

        _utils.miotTools.subscribeMinorMusic();

        _utils.miotTools.subscribeProgress();

        _utils.miotTools.subscribeMinorProgress();

        _utils.miotTools.subscribeTunnelStatus();

        _utils.miotTools.subscribeTunnelMerge();
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this3 = this;

        this.packageAuthorizationAgreed = _miot.PackageEvent.packageAuthorizationAgreed.addListener(function () {});
        this.deviceReceivedMessages = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, map, data) {
          var value = data[0].value;

          switch (data[0].key) {
            case 'prop.2.1':
              _this3.setState({
                volum: value[0],
                mute: value[0] === 0
              });

              break;

            case 'prop.2.2':
              _this3.setState({
                mute: value[0]
              });

              break;

            case 'prop.3.1':
              _this3.setState({
                playing: value[0] === 1
              });

              break;

            case 'prop.3.3':
              _this3.setState({
                playMode: value[0]
              });

              break;

            case 'prop.4.1':
              _this3.setState({
                minorPlaying: value[0] === 1
              });

              break;

            case 'prop.4.3':
              _this3.setState({
                minorPlayMode: value[0]
              });

              break;

            case 'prop.4.4':
              _this3.setState({
                tunnelMerge: value[0]
              });

              break;

            case 'prop.5.1':
              _this3.setState({
                authCode: value[0]
              });

              break;

            case 'prop.6.1':
              value = JSON.parse(value[0]);

              _this3.setState({
                songName: value.title,
                artist: value.artist,
                duration: value.duration,
                position: value.position
              });

              break;

            case 'prop.6.2':
              value = JSON.parse(value[0]);

              _this3.setState({
                minorSongName: value.title,
                minorArtist: value.artist,
                minorDuration: value.duration,
                minorPosition: value.position
              });

              break;

            case 'prop.6.5':
              _this3.setState({
                position: value[0]
              });

              break;

            case 'prop.6.6':
              _this3.setState({
                minorPosition: value[0]
              });

              break;

            case 'prop.7.1':
              var mediaInt;
              var mediaStr;

              switch (JSON.parse(value[0]).tunnelSource) {
                case 1:
                  mediaInt = 1;
                  mediaStr = (0, _MHLocalizableString.getString)('source_local');
                  break;

                case 2:
                  mediaInt = 2;
                  mediaStr = (0, _MHLocalizableString.getString)('source_out');
                  break;

                case 3:
                  mediaInt = 3;
                  mediaStr = (0, _MHLocalizableString.getString)('source_blue');
                  break;

                default:
                  mediaInt = 1;
                  mediaStr = (0, _MHLocalizableString.getString)('source_local');
                  break;
              }

              _this3.setState({
                media: mediaInt,
                mediaStr: mediaStr
              });

              break;
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deviceReceivedMessages && this.deviceReceivedMessages.remove();
        this.packageAuthorizationAgreed && this.packageAuthorizationAgreed.remove();
        clearInterval(this.interval);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this4 = this;

        this.getDeviceInitialState();
        this.interval = setInterval(function () {
          return _this4.sliderTick();
        }, 500);
      }
    }, {
      key: "startRotating",
      value: function startRotating() {
        var _this5 = this;

        setTimeout(function () {
          if (_this5.state.source == 0 && _this5.state.playing || _this5.state.source == 1 && _this5.state.minorPlaying) {
            _this5.playerAnimated.start(function () {
              _this5.playerAnimated = _reactNative.Animated.timing(_this5.state.rotateValue, {
                toValue: 1,
                duration: 12000,
                easing: _reactNative.Easing.linear
              });

              _this5.rotating();
            });
          }
        }, 2);
      }
    }, {
      key: "stopRotating",
      value: function stopRotating() {
        var _this6 = this;

        setTimeout(function () {
          if (!(_this6.state.source == 0 && _this6.state.playing) || !(_this6.state.source == 1 && _this6.state.minorPlaying)) {
            _this6.state.rotateValue.stopAnimation(function (oneTimeRotate) {
              _this6.playerAnimated = _reactNative.Animated.timing(_this6.state.rotateValue, {
                toValue: 1,
                duration: (1 - oneTimeRotate) * 12000,
                easing: _reactNative.Easing.linear
              });
            });
          }
        }, 2);
      }
    }, {
      key: "sliderTick",
      value: function sliderTick() {
        if (this.state.sliderChangeing) {
          return;
        }

        if (this.state.playing && (this.state.position || this.state.position == 0) && this.state.duration && this.state.position <= this.state.duration) {
          this.setState({
            position: this.state.position + 500
          });
        }

        if (this.state.minorPlaying && (this.state.minorPosition || this.state.minorPosition == 0) && this.state.minorDuration && this.state.minorPosition <= this.state.minorDuration) {
          this.setState({
            minorPosition: this.state.minorPosition + 500
          });
        }
      }
    }, {
      key: "initNavigationBar",
      value: function initNavigationBar() {
        var _this7 = this;

        this.props.navigation.setParams({
          titleProps: {
            title: _miot.Device.name,
            left: [{
              key: _NavigationBar.default.ICON.BACK,
              onPress: function onPress() {
                _miot.Package.exit();
              }
            }],
            right: [{
              key: _NavigationBar.default.ICON.MORE,
              onPress: function onPress() {
                _this7.props.navigation.navigate('SettingPage', {
                  title: _resources.strings.setting
                });
              }
            }],
            type: _NavigationBar.default.TYPE.DARK,
            backgroundColor: '#232425'
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var interpolatedAnimation = this.state.rotateValue.interpolate({
          inputRange: [0, 1],
          outputRange: ['0deg', '360deg']
        });
        var _this$state = this.state,
            playMode = _this$state.playMode,
            minorPlayMode = _this$state.minorPlayMode,
            showVolume = _this$state.showVolume,
            source = _this$state.source,
            mute = _this$state.mute,
            volum = _this$state.volum,
            playing = _this$state.playing,
            minorPlaying = _this$state.minorPlaying,
            duration = _this$state.duration,
            minorDuration = _this$state.minorDuration,
            position = _this$state.position,
            minorPosition = _this$state.minorPosition,
            songName = _this$state.songName,
            minorSongName = _this$state.minorSongName,
            artist = _this$state.artist,
            minorArtist = _this$state.minorArtist,
            picUrl = _this$state.picUrl,
            minorPicUrl = _this$state.minorPicUrl,
            playList = _this$state.playList,
            minorPlayList = _this$state.minorPlayList,
            playListLength = _this$state.playListLength,
            minorPlayListLength = _this$state.minorPlayListLength,
            playListLoading = _this$state.playListLoading,
            media = _this$state.media,
            mediaStr = _this$state.mediaStr;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: {
            zIndex: 5,
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: 'space-between',
            alignItems: 'center'
          }
        }, _react.default.createElement(Normal, {
          color: _utils.color.white,
          style: {
            fontSize: 20,
            marginBottom: 5,
            marginTop: 10,
            textAlign: 'center',
            marginStart: 10,
            marginEnd: 10
          }
        }, source === 0 ? songName : minorSongName), _react.default.createElement(Tip, {
          color: '#666666',
          style: {
            fontSize: 17
          }
        }, source === 0 ? "--" + artist + "--" : "--" + minorArtist + "--")), _react.default.createElement(_reactNative.View, {
          style: styles.cdContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.circle
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: source === 0 ? picUrl === '' ? _$$_REQUIRE(_dependencyMap[22]) : {
            uri: picUrl
          } : minorPicUrl === '' ? _$$_REQUIRE(_dependencyMap[22]) : {
            uri: minorPicUrl
          },
          style: [{
            width: _utils.screen.width - 152,
            height: _utils.screen.width - 152,
            borderRadius: (_utils.screen.width - 152) / 2
          }, {
            transform: [{
              rotate: interpolatedAnimation
            }]
          }]
        }))), showVolume && _react.default.createElement(_reactNative.View, {
          style: styles.volumeDialog
        }, _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: 'rgba(0, 0, 0, 0.61)',
            position: 'absolute',
            width: _utils.screen.width - 35,
            heigth: 60,
            margin: 20,
            borderRadius: 4
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.sliderBtn
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          onPress: function onPress(value) {
            return _this8.setMute(mute);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: mute ? _$$_REQUIRE(_dependencyMap[23]) : _$$_REQUIRE(_dependencyMap[24]),
          style: styles.icon
        })), _react.default.createElement(_reactNativeSlider.default, {
          maximumTrackTintColor: '#c6c4c4',
          minimumTrackTintColor: '#007aff',
          thumbStyle: styles.thumb,
          trackStyle: {
            height: 2
          },
          style: {
            width: _utils.screen.width - 140,
            marginStart: 10,
            marginEnd: 10
          },
          value: mute ? 0 : volum,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this8.volumeSliderChange(value);
          },
          maximumValue: 100,
          minimumValue: 0,
          step: 1
        }), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[25]),
          style: styles.icon
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.sliderBtn
        }, _react.default.createElement(Tip, {
          style: {
            width: 35
          },
          color: _utils.color.white
        }, source === 0 ? _utils.miotTools.transTime(position / 1000) : _utils.miotTools.transTime(minorPosition / 1000)), _react.default.createElement(_reactNativeSlider.default, {
          maximumTrackTintColor: '#c6c4c4',
          minimumTrackTintColor: '#007aff',
          thumbStyle: styles.thumb,
          trackStyle: {
            height: 2
          },
          style: {
            width: _utils.screen.width - 100
          },
          value: source === 0 ? position : minorPosition,
          maximumValue: source === 0 ? duration : minorDuration,
          step: 1,
          onSlidingComplete: function onSlidingComplete(value) {
            return _this8.sliderChangeComplete(value);
          },
          onValueChange: function onValueChange(value) {
            return _this8._sliderChangeing(value);
          }
        }), _react.default.createElement(Tip, {
          style: {
            width: 35
          },
          color: "#ffffff"
        }, source === 0 ? _utils.miotTools.transTime(duration / 1000) : _utils.miotTools.transTime(minorDuration / 1000))), _react.default.createElement(_reactNative.View, {
          style: styles.topBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this8.volumeClick();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: mute ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]),
          style: styles.icon
        })), _react.default.createElement(_reactNative.View, {
          style: styles.dropdownView
        }, _react.default.createElement(_reactNativeModalDropdown.default, {
          options: [(0, _MHLocalizableString.getString)('source_local'), (0, _MHLocalizableString.getString)('source_blue'), (0, _MHLocalizableString.getString)('source_out')],
          defaultIndex: media,
          style: styles.dropdown,
          textStyle: styles.dropdownText,
          dropdownTextStyle: styles.dropdownListText,
          dropdownStyle: styles.dropdownList,
          showsVerticalScrollIndicator: false,
          renderButtonText: this.dropdownClick,
          renderRow: this.dropdownRenderRow,
          onSelect: this.dropdownOnSelected
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#ffffff',
            fontSize: 14,
            marginStart: 4
          }
        }, " " + mediaStr + " ", _react.default.createElement(_reactNative.Image, {
          style: {
            width: 10,
            height: 7
          },
          source: _$$_REQUIRE(_dependencyMap[21])
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.icon
        })), _react.default.createElement(_reactNative.View, {
          style: styles.footerBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this8.playModeClick(source === 0 ? playMode : minorPlayMode);
          }
        }, function () {
          if (source === 0) {
            switch (playMode) {
              case 1:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[28]),
                  style: styles.icon
                });

              case 2:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[29]),
                  style: styles.icon
                });

              case 3:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[30]),
                  style: styles.icon
                });

              case 4:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[31]),
                  style: styles.icon
                });

              default:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[31]),
                  style: styles.icon
                });
            }
          } else if (source === 1) {
            switch (minorPlayMode) {
              case 1:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[28]),
                  style: styles.icon
                });

              case 2:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[29]),
                  style: styles.icon
                });

              case 3:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[30]),
                  style: styles.icon
                });

              case 4:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[31]),
                  style: styles.icon
                });

              default:
                return _react.default.createElement(_reactNative.Image, {
                  source: _$$_REQUIRE(_dependencyMap[31]),
                  style: styles.icon
                });
            }
          }
        }()), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this8.prevPlayClick();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[32]),
          style: styles.icon
        })), source === 0 && playing || source === 1 && minorPlaying ? _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _utils.miotTools.callOnceInInterval(function () {
              return _this8.playing(false);
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[33]),
          style: styles.iconBig
        })) : _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _utils.miotTools.callOnceInInterval(function () {
              return _this8.playing(true);
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[34]),
          style: styles.iconBig
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this8.nextPlayClick();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[35]),
          style: styles.icon
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return _this8.playListClick();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[36]),
          style: styles.icon
        })))), _react.default.createElement(_widgets.PlayListDialog, {
          ref: function ref(playListDialog) {
            return _this8.playListDialog = playListDialog;
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 0.2,
            paddingLeft: 10,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 15,
            color: '#333333',
            fontWeight: 'bold'
          }
        }, source === 0 ? (0, _MHLocalizableString.getString)('play_list') + "(" + (playListLength === undefined ? 0 : playListLength) + ") " : (0, _MHLocalizableString.getString)('play_list') + "(" + (minorPlayListLength === undefined ? 0 : minorPlayListLength) + ")")), _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_widgets.PlayList, {
          id: 'musicId',
          dataArray: source === 0 ? playList : minorPlayList,
          refresh: this.playListRefresh,
          loadMore: this.playListLoadMore,
          isLoading: playListLoading,
          itemClick: this.playListItemClick,
          renderItem: _widgets.PlayListItem._renderItem
        }), _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 0.55,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this8.playListDialog.topAnimate(1, 0);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 16,
            color: '#878787',
            padding: 10
          }
        }, (0, _MHLocalizableString.getString)('close'))))));
      }
    }, {
      key: "_getState",
      value: function _getState() {
        alert('获取状态');
      }
    }]);
    return MainPage;
  }(_react.default.Component);

  exports.default = MainPage;

  MainPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;

    var _ref2 = navigation.state.params || {},
        titleProps = _ref2.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#232425',
      flex: 1
    },
    textStyle: {
      fontSize: 16,
      lineHeight: 18,
      color: '#666666',
      marginBottom: 10
    },
    textStyle1: {
      fontSize: 20,
      lineHeight: 22,
      color: '#333333',
      fontFamily: SdkFontStyle.FontKmedium,
      marginBottom: 20
    },
    toggleBtn: {
      height: 44,
      backgroundColor: 'rgba(255, 255, 255, 0.03)',
      alignItems: 'center',
      justifyContent: 'center'
    },
    headerContainer: {
      height: 50,
      width: _utils.screen.width,
      paddingLeft: 15,
      paddingRight: 15,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      borderBottomWidth: _utils.screen.onePixel,
      borderColor: 'rgba(245, 245, 245, 0.21)'
    },
    cdContainer: {
      flex: 1.3,
      width: _utils.screen.width,
      justifyContent: 'center',
      alignItems: 'center'
    },
    topBtn: {
      flex: 0.3,
      width: _utils.screen.width,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    footerBtn: {
      flex: 0.4,
      width: _utils.screen.width,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    circle: {
      width: _utils.screen.width - 130,
      height: _utils.screen.width - 130,
      justifyContent: 'center',
      alignItems: 'center',
      borderColor: '#00bdc1',
      borderStyle: 'solid',
      borderRadius: 10000,
      borderWidth: 1
    },
    sliderBtn: {
      height: 40,
      paddingLeft: 10,
      paddingRight: 10,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    thumb: {
      width: 20,
      height: 20,
      backgroundColor: _utils.color.white,
      borderColor: _utils.color.white,
      borderWidth: 10,
      borderRadius: 10
    },
    icon: {
      width: 25,
      height: 25
    },
    iconBig: {
      width: 40,
      height: 40
    },
    dropdownView: {
      flex: 0.5,
      width: _utils.screen.width,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    dropdown: {
      borderColor: '#aaaaaa',
      borderStyle: 'solid',
      borderRadius: 4,
      alignSelf: 'flex-start',
      paddingStart: 10,
      paddingEnd: 10,
      height: 25,
      alignItems: 'center',
      borderWidth: 1
    },
    dropdownText: {
      fontSize: 20,
      textAlign: 'center',
      alignItems: 'center',
      justifyContent: 'center',
      lineHeight: 20,
      color: '#aaaaaa'
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    dropdownListText: {
      fontSize: 16,
      textAlign: 'center',
      lineHeight: 10,
      color: '#aaaaaa'
    },
    dropdownList: {
      borderColor: '#aaaaaa',
      borderStyle: 'solid',
      marginStart: -10,
      borderRadius: 4,
      borderWidth: 1,
      height: 83,
      marginTop: 3,
      backgroundColor: '#232425',
      justifyContent: 'center',
      alignItems: 'center'
    },
    dropdownRenderRow: {
      alignSelf: 'flex-start',
      paddingStart: 10,
      paddingEnd: 10,
      height: 25,
      fontSize: 16,
      textAlign: 'center',
      marginTop: 2,
      justifyContent: 'center',
      alignItems: 'center',
      color: '#aaaaaa'
    },
    volumeDialog: {
      width: _utils.screen.width,
      height: 60,
      borderRadius: 4,
      position: 'absolute',
      marginTop: -150,
      marginEnd: 50,
      padding: 10,
      marginLeft: -_utils.screen.width / 2,
      top: '50%',
      left: '50%',
      zIndex: 10
    },
    volumeDialogTwo: {
      width: _utils.screen.width,
      height: 60,
      borderRadius: 4,
      position: 'absolute',
      marginTop: -60,
      marginEnd: 50,
      padding: 10,
      marginLeft: -_utils.screen.width / 2,
      top: '50%',
      left: '50%',
      zIndex: 10
    }
  });
},10007,[14308,14305,14320,14323,14371,14377,14386,10297,10074,10033,10918,10719,13687,10010,10022,10040,10077,10782,10508,10520,10034,10523,10526,10529,10532,10535,10538,10541,10544,10547,10550,10553,10556,10559,10562,10565,10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ModalDropdown = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _ModalDropdown.default;
  exports.default = _default;
  module.exports = _ModalDropdown.default;
},10010,[14305,10013]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _deprecatedReactNativeListview = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var TOUCHABLE_ELEMENTS = ['TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'TouchableNativeFeedback'];

  var ModalDropdown = function (_Component) {
    (0, _inherits2.default)(ModalDropdown, _Component);

    function ModalDropdown(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, ModalDropdown);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModalDropdown).call(this, _props));

      _this._onButtonPress = function () {
        var onDropdownWillShow = _this.props.onDropdownWillShow;

        if (!onDropdownWillShow || onDropdownWillShow() !== false) {
          _this.show();
        }
      };

      _this._onRequestClose = function () {
        var onDropdownWillHide = _this.props.onDropdownWillHide;

        if (!onDropdownWillHide || onDropdownWillHide() !== false) {
          _this.hide();
        }
      };

      _this._onModalPress = function () {
        var onDropdownWillHide = _this.props.onDropdownWillHide;

        if (!onDropdownWillHide || onDropdownWillHide() !== false) {
          _this.hide();
        }
      };

      _this._renderRow = function (rowData, sectionID, rowID, highlightRow) {
        var _this$props = _this.props,
            renderRow = _this$props.renderRow,
            dropdownTextStyle = _this$props.dropdownTextStyle,
            dropdownTextHighlightStyle = _this$props.dropdownTextHighlightStyle,
            accessible = _this$props.accessible;
        var selectedIndex = _this.state.selectedIndex;
        var key = "row_" + rowID;
        var highlighted = rowID == selectedIndex;
        var row = !renderRow ? _react.default.createElement(_reactNative.Text, {
          style: [styles.rowText, dropdownTextStyle, highlighted && styles.highlightedRowText, highlighted && dropdownTextHighlightStyle]
        }, rowData) : renderRow(rowData, rowID, highlighted);
        var preservedProps = {
          key: key,
          accessible: accessible,
          onPress: function onPress() {
            return _this._onRowPress(rowData, sectionID, rowID, highlightRow);
          }
        };

        if (TOUCHABLE_ELEMENTS.find(function (name) {
          return name == row.type.displayName;
        })) {
          var props = (0, _objectSpread2.default)({}, row.props);
          props.key = preservedProps.key;
          props.onPress = preservedProps.onPress;
          var children = row.props.children;

          switch (row.type.displayName) {
            case 'TouchableHighlight':
              {
                return _react.default.createElement(_reactNative.TouchableHighlight, props, children);
              }

            case 'TouchableOpacity':
              {
                return _react.default.createElement(_reactNative.TouchableOpacity, props, children);
              }

            case 'TouchableWithoutFeedback':
              {
                return _react.default.createElement(_reactNative.TouchableWithoutFeedback, props, children);
              }

            case 'TouchableNativeFeedback':
              {
                return _react.default.createElement(_reactNative.TouchableNativeFeedback, props, children);
              }

            default:
              break;
          }
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, preservedProps, row);
      };

      _this._renderSeparator = function (sectionID, rowID, adjacentRowHighlighted) {
        var key = "spr_" + rowID;
        return _react.default.createElement(_reactNative.View, {
          style: styles.separator,
          key: key
        });
      };

      _this._button = null;
      _this._buttonFrame = null;
      _this._nextValue = null;
      _this._nextIndex = null;
      _this.state = {
        accessible: !!_props.accessible,
        loading: !_props.options,
        showDropdown: false,
        buttonText: _props.defaultValue,
        selectedIndex: _props.defaultIndex
      };
      return _this;
    }

    (0, _createClass2.default)(ModalDropdown, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var _this$state = this.state,
            buttonText = _this$state.buttonText,
            selectedIndex = _this$state.selectedIndex;
        var defaultIndex = nextProps.defaultIndex,
            defaultValue = nextProps.defaultValue,
            options = nextProps.options;
        buttonText = this._nextValue == null ? buttonText : this._nextValue;
        selectedIndex = this._nextIndex == null ? selectedIndex : this._nextIndex;

        if (selectedIndex < 0) {
          selectedIndex = defaultIndex;

          if (selectedIndex < 0) {
            buttonText = defaultValue;
          }
        }

        this._nextValue = null;
        this._nextIndex = null;
        this.setState({
          loading: !options,
          buttonText: buttonText,
          selectedIndex: selectedIndex
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, this.props, this._renderButton(), this._renderModal());
      }
    }, {
      key: "_updatePosition",
      value: function _updatePosition(callback) {
        var _this2 = this;

        if (this._button && this._button.measure) {
          this._button.measure(function (fx, fy, width, height, px, py) {
            _this2._buttonFrame = {
              x: px,
              y: py,
              w: width,
              h: height
            };
            callback && callback();
          });
        }
      }
    }, {
      key: "show",
      value: function show() {
        var _this3 = this;

        this._updatePosition(function () {
          _this3.setState({
            showDropdown: true
          });
        });
      }
    }, {
      key: "hide",
      value: function hide() {
        this.setState({
          showDropdown: false
        });
      }
    }, {
      key: "select",
      value: function select(idx) {
        var _this$props2 = this.props,
            defaultValue = _this$props2.defaultValue,
            options = _this$props2.options,
            defaultIndex = _this$props2.defaultIndex,
            renderButtonText = _this$props2.renderButtonText;
        var value = defaultValue;

        if (idx == null || !options || idx >= options.length) {
          idx = defaultIndex;
        }

        if (idx >= 0) {
          value = renderButtonText ? renderButtonText(options[idx]) : options[idx].toString();
        }

        this._nextValue = value;
        this._nextIndex = idx;
        this.setState({
          buttonText: value,
          selectedIndex: idx
        });
      }
    }, {
      key: "_renderButton",
      value: function _renderButton() {
        var _this4 = this;

        var _this$props3 = this.props,
            disabled = _this$props3.disabled,
            accessible = _this$props3.accessible,
            children = _this$props3.children,
            textStyle = _this$props3.textStyle;
        var buttonText = this.state.buttonText;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          ref: function ref(button) {
            return _this4._button = button;
          },
          disabled: disabled,
          accessible: accessible,
          onPress: this._onButtonPress
        }, children || _react.default.createElement(_reactNative.View, {
          style: styles.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, textStyle],
          numberOfLines: 1
        }, buttonText)));
      }
    }, {
      key: "_renderModal",
      value: function _renderModal() {
        var _this$props4 = this.props,
            animated = _this$props4.animated,
            accessible = _this$props4.accessible,
            dropdownStyle = _this$props4.dropdownStyle;
        var _this$state2 = this.state,
            showDropdown = _this$state2.showDropdown,
            loading = _this$state2.loading;

        if (showDropdown && this._buttonFrame) {
          var frameStyle = this._calcPosition();

          var animationType = animated ? 'fade' : 'none';
          return _react.default.createElement(_reactNative.Modal, {
            animationType: animationType,
            visible: true,
            transparent: true,
            onRequestClose: this._onRequestClose,
            supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right']
          }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
            accessible: accessible,
            disabled: !showDropdown,
            onPress: this._onModalPress
          }, _react.default.createElement(_reactNative.View, {
            style: styles.modal
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.dropdown, dropdownStyle, frameStyle]
          }, loading ? this._renderLoading() : this._renderDropdown()))));
        }
      }
    }, {
      key: "_calcPosition",
      value: function _calcPosition() {
        var _this$props5 = this.props,
            dropdownStyle = _this$props5.dropdownStyle,
            style = _this$props5.style,
            adjustFrame = _this$props5.adjustFrame;

        var dimensions = _reactNative.Dimensions.get('window');

        var windowWidth = dimensions.width;
        var windowHeight = dimensions.height;

        var dropdownHeight = dropdownStyle && _reactNative.StyleSheet.flatten(dropdownStyle).height || _reactNative.StyleSheet.flatten(styles.dropdown).height;

        var bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;
        var rightSpace = windowWidth - this._buttonFrame.x;
        var showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;
        var showInLeft = rightSpace >= this._buttonFrame.x;
        var positionStyle = {
          height: dropdownHeight,
          top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight)
        };

        if (showInLeft) {
          positionStyle.left = this._buttonFrame.x;
        } else {
          var dropdownWidth = dropdownStyle && _reactNative.StyleSheet.flatten(dropdownStyle).width || style && _reactNative.StyleSheet.flatten(style).width || -1;

          if (dropdownWidth !== -1) {
            positionStyle.width = dropdownWidth;
          }

          positionStyle.right = rightSpace - this._buttonFrame.w;
        }

        return adjustFrame ? adjustFrame(positionStyle) : positionStyle;
      }
    }, {
      key: "_renderLoading",
      value: function _renderLoading() {
        return _react.default.createElement(_reactNative.ActivityIndicator, {
          size: "small"
        });
      }
    }, {
      key: "_renderDropdown",
      value: function _renderDropdown() {
        var _this$props6 = this.props,
            scrollEnabled = _this$props6.scrollEnabled,
            renderSeparator = _this$props6.renderSeparator,
            showsVerticalScrollIndicator = _this$props6.showsVerticalScrollIndicator,
            keyboardShouldPersistTaps = _this$props6.keyboardShouldPersistTaps;
        return _react.default.createElement(_deprecatedReactNativeListview.default, {
          scrollEnabled: scrollEnabled,
          style: styles.list,
          dataSource: this._dataSource,
          renderRow: this._renderRow,
          renderSeparator: renderSeparator || this._renderSeparator,
          automaticallyAdjustContentInsets: false,
          showsVerticalScrollIndicator: showsVerticalScrollIndicator,
          keyboardShouldPersistTaps: keyboardShouldPersistTaps
        });
      }
    }, {
      key: "_onRowPress",
      value: function _onRowPress(rowData, sectionID, rowID, highlightRow) {
        var _this$props7 = this.props,
            onSelect = _this$props7.onSelect,
            renderButtonText = _this$props7.renderButtonText,
            onDropdownWillHide = _this$props7.onDropdownWillHide;

        if (!onSelect || onSelect(rowID, rowData) !== false) {
          highlightRow(sectionID, rowID);
          var value = renderButtonText && renderButtonText(rowData) || rowData.toString();
          this._nextValue = value;
          this._nextIndex = rowID;
          this.setState({
            buttonText: value,
            selectedIndex: rowID
          });
        }

        if (!onDropdownWillHide || onDropdownWillHide() !== false) {
          this.setState({
            showDropdown: false
          });
        }
      }
    }, {
      key: "_dataSource",
      get: function get() {
        var options = this.props.options;
        var ds = new _deprecatedReactNativeListview.default.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        });
        return ds.cloneWithRows(options);
      }
    }]);
    return ModalDropdown;
  }(_react.Component);

  exports.default = ModalDropdown;
  ModalDropdown.propTypes = {
    disabled: _propTypes.default.bool,
    scrollEnabled: _propTypes.default.bool,
    defaultIndex: _propTypes.default.number,
    defaultValue: _propTypes.default.string,
    options: _propTypes.default.array,
    accessible: _propTypes.default.bool,
    animated: _propTypes.default.bool,
    showsVerticalScrollIndicator: _propTypes.default.bool,
    keyboardShouldPersistTaps: _propTypes.default.string,
    style: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.array]),
    textStyle: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.array]),
    dropdownStyle: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.array]),
    dropdownTextStyle: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.array]),
    dropdownTextHighlightStyle: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.array]),
    adjustFrame: _propTypes.default.func,
    renderRow: _propTypes.default.func,
    renderSeparator: _propTypes.default.func,
    renderButtonText: _propTypes.default.func,
    onDropdownWillShow: _propTypes.default.func,
    onDropdownWillHide: _propTypes.default.func,
    onSelect: _propTypes.default.func
  };
  ModalDropdown.defaultProps = {
    disabled: false,
    scrollEnabled: true,
    defaultIndex: -1,
    defaultValue: 'Please select...',
    options: null,
    animated: true,
    showsVerticalScrollIndicator: true,
    keyboardShouldPersistTaps: 'never'
  };

  var styles = _reactNative.StyleSheet.create({
    button: {
      justifyContent: 'center'
    },
    buttonText: {
      fontSize: 12
    },
    modal: {
      flexGrow: 1
    },
    dropdown: {
      position: 'absolute',
      height: (33 + _reactNative.StyleSheet.hairlineWidth) * 5,
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'lightgray',
      borderRadius: 2,
      backgroundColor: 'white',
      justifyContent: 'center'
    },
    loading: {
      alignSelf: 'center'
    },
    list: {},
    rowText: {
      paddingHorizontal: 6,
      paddingVertical: 10,
      fontSize: 11,
      color: 'gray',
      backgroundColor: 'white',
      textAlignVertical: 'center'
    },
    highlightedRowText: {
      color: 'black'
    },
    separator: {
      height: _reactNative.StyleSheet.hairlineWidth,
      backgroundColor: 'lightgray'
    }
  });
},10013,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,14716,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyObject = {};
  module.exports = emptyObject;
},10016,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function validateFormat(format) {};

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},10019,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "color", {
    enumerable: true,
    get: function get() {
      return _color.default;
    }
  });
  Object.defineProperty(exports, "screen", {
    enumerable: true,
    get: function get() {
      return _screen.default;
    }
  });
  exports.miotTools = undefined;

  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _screen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var miotTools = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  exports.miotTools = miotTools;
},10022,[14308,14305,10025,10028,10031]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    theme: '#D43C33',
    backgroundColor: '#FBFCFE',
    white: '#ffffff',
    black: '#000000',
    border: '#e0e0e0',
    gray: '#828385',
    blue: '#0c73c2',
    blackCover: 'rgba(0, 0, 0, 0.3)'
  };
  exports.default = _default;
},10025,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = {
    width: _reactNative.Dimensions.get('window').width,
    height: _reactNative.Dimensions.get('window').height,
    onePixel: 1 / _reactNative.PixelRatio.get(),
    pageHeader: 50
  };
  exports.default = _default;
},10028,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.callOnceInInterval = exports.setDeviceStatus = exports.setMediaSource = exports.setTunnelVolume = exports.setTunnelSwitch = exports.setSystemMute = exports.setSystemVolume = exports.setPlaySong = exports.setMinorProgress = exports.setMainProgress = exports.setMinorPlayMode = exports.setPlayMode = exports.doAction = exports.nextMinor = exports.previousMinor = exports.pauseMinor = exports.playMinor = exports.next = exports.previous = exports.pause = exports.play = exports.subscribeMessage = exports.subscribeTunnelStatus = exports.subscribeMinorProgress = exports.subscribeProgress = exports.subscribeMinorMusic = exports.subscribeMusic = exports.subscribeAuthCode = exports.subscribeTunnelMerge = exports.subscribeMinorPlayMode = exports.subscribeMinorPlayStatus = exports.subscribePlayMode = exports.subscribePlayStatus = exports.subscribeMute = exports.subscribeVolume = exports.getDeviceStatus = exports.getTunnelStatus = exports.getMinorProgress = exports.getMainProgress = exports.getDeviceMinorMusic = exports.getDeviceMusic = exports.getDeviceAutoCode = exports.getTunnelMergeStatus = exports.getDeviceMinorPlayMode = exports.getDeviceMinorPlayStatus = exports.getDevicePlayMode = exports.getDevicePlayStatus = exports.getDeviceMute = exports.getDeviceVolume = exports.transTime = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[4]);

  var transTime = function transTime(time) {
    var minute = Math.floor(time / 60);
    var second = Math.floor(time % 60);
    return (minute > 10 ? minute : "0" + minute) + ":" + (second > 9 ? second : "0" + second);
  };

  exports.transTime = transTime;

  var getDeviceVolume = function getDeviceVolume(callback) {
    getDeviceStatus(2, 1, callback);
  };

  exports.getDeviceVolume = getDeviceVolume;

  var getDeviceMute = function getDeviceMute(callback) {
    getDeviceStatus(2, 2, callback);
  };

  exports.getDeviceMute = getDeviceMute;

  var getDevicePlayStatus = function getDevicePlayStatus(callback) {
    getDeviceStatus(3, 1, callback);
  };

  exports.getDevicePlayStatus = getDevicePlayStatus;

  var getDevicePlayMode = function getDevicePlayMode(callback) {
    getDeviceStatus(3, 3, callback);
  };

  exports.getDevicePlayMode = getDevicePlayMode;

  var getDeviceMinorPlayStatus = function getDeviceMinorPlayStatus(callback) {
    getDeviceStatus(4, 1, callback);
  };

  exports.getDeviceMinorPlayStatus = getDeviceMinorPlayStatus;

  var getDeviceMinorPlayMode = function getDeviceMinorPlayMode(callback) {
    getDeviceStatus(4, 3, callback);
  };

  exports.getDeviceMinorPlayMode = getDeviceMinorPlayMode;

  var getTunnelMergeStatus = function getTunnelMergeStatus(callback) {
    getDeviceStatus(4, 4, callback);
  };

  exports.getTunnelMergeStatus = getTunnelMergeStatus;

  var getDeviceAutoCode = function getDeviceAutoCode(callback) {
    getDeviceStatus(5, 1, callback);
  };

  exports.getDeviceAutoCode = getDeviceAutoCode;

  var getDeviceMusic = function getDeviceMusic(callback) {
    getDeviceStatus(6, 1, callback);
  };

  exports.getDeviceMusic = getDeviceMusic;

  var getDeviceMinorMusic = function getDeviceMinorMusic(callback) {
    getDeviceStatus(6, 2, callback);
  };

  exports.getDeviceMinorMusic = getDeviceMinorMusic;

  var getMainProgress = function getMainProgress(callback) {
    getDeviceStatus(6, 3, callback);
  };

  exports.getMainProgress = getMainProgress;

  var getMinorProgress = function getMinorProgress(callback) {
    getDeviceStatus(6, 4, callback);
  };

  exports.getMinorProgress = getMinorProgress;

  var getTunnelStatus = function getTunnelStatus(callback) {
    getDeviceStatus(7, 1, callback);
  };

  exports.getTunnelStatus = getTunnelStatus;

  var getDeviceStatus = function getDeviceStatus(siid, piid, callback) {
    _Service.default.spec.getPropertiesValue([{
      did: _miot.Device.deviceID,
      siid: siid,
      piid: piid
    }]).then(function (res) {
      callback(res);
    }).catch(function (res) {});
  };

  exports.getDeviceStatus = getDeviceStatus;

  var subscribeVolume = function subscribeVolume() {
    subscribeMessage(2, 1);
  };

  exports.subscribeVolume = subscribeVolume;

  var subscribeMute = function subscribeMute() {
    subscribeMessage(2, 2);
  };

  exports.subscribeMute = subscribeMute;

  var subscribePlayStatus = function subscribePlayStatus() {
    subscribeMessage(3, 1);
  };

  exports.subscribePlayStatus = subscribePlayStatus;

  var subscribePlayMode = function subscribePlayMode() {
    subscribeMessage(3, 3);
  };

  exports.subscribePlayMode = subscribePlayMode;

  var subscribeMinorPlayStatus = function subscribeMinorPlayStatus() {
    subscribeMessage(4, 1);
  };

  exports.subscribeMinorPlayStatus = subscribeMinorPlayStatus;

  var subscribeMinorPlayMode = function subscribeMinorPlayMode() {
    subscribeMessage(4, 3);
  };

  exports.subscribeMinorPlayMode = subscribeMinorPlayMode;

  var subscribeTunnelMerge = function subscribeTunnelMerge() {
    subscribeMessage(4, 4);
  };

  exports.subscribeTunnelMerge = subscribeTunnelMerge;

  var subscribeAuthCode = function subscribeAuthCode() {
    subscribeMessage(5, 1);
  };

  exports.subscribeAuthCode = subscribeAuthCode;

  var subscribeMusic = function subscribeMusic() {
    subscribeMessage(6, 1);
  };

  exports.subscribeMusic = subscribeMusic;

  var subscribeMinorMusic = function subscribeMinorMusic() {
    subscribeMessage(6, 2);
  };

  exports.subscribeMinorMusic = subscribeMinorMusic;

  var subscribeProgress = function subscribeProgress() {
    subscribeMessage(6, 5);
  };

  exports.subscribeProgress = subscribeProgress;

  var subscribeMinorProgress = function subscribeMinorProgress() {
    subscribeMessage(6, 6);
  };

  exports.subscribeMinorProgress = subscribeMinorProgress;

  var subscribeTunnelStatus = function subscribeTunnelStatus() {
    subscribeMessage(7, 1);
  };

  exports.subscribeTunnelStatus = subscribeTunnelStatus;

  var subscribeMessage = function subscribeMessage(siid, piid) {
    _miot.Device.getDeviceWifi().subscribeMessages("prop." + siid + "." + piid).then(function (res) {}).catch(function (res) {});
  };

  exports.subscribeMessage = subscribeMessage;

  var play = function play() {
    doAction(3, 2);
  };

  exports.play = play;

  var pause = function pause() {
    doAction(3, 3);
  };

  exports.pause = pause;

  var previous = function previous() {
    doAction(3, 4);
  };

  exports.previous = previous;

  var next = function next() {
    doAction(3, 5);
  };

  exports.next = next;

  var playMinor = function playMinor() {
    doAction(4, 2);
  };

  exports.playMinor = playMinor;

  var pauseMinor = function pauseMinor() {
    doAction(4, 3);
  };

  exports.pauseMinor = pauseMinor;

  var previousMinor = function previousMinor() {
    doAction(4, 4);
  };

  exports.previousMinor = previousMinor;

  var nextMinor = function nextMinor() {
    doAction(4, 5);
  };

  exports.nextMinor = nextMinor;

  var doAction = function doAction(siid, aiid, res) {
    _Service.default.spec.doAction({
      did: _miot.Device.deviceID,
      siid: siid,
      aiid: aiid,
      in: res
    });
  };

  exports.doAction = doAction;

  var setPlayMode = function setPlayMode(value) {
    setDeviceStatus(3, 3, value);
  };

  exports.setPlayMode = setPlayMode;

  var setMinorPlayMode = function setMinorPlayMode(value) {
    setDeviceStatus(4, 3, value);
  };

  exports.setMinorPlayMode = setMinorPlayMode;

  var setMainProgress = function setMainProgress(value) {
    setDeviceStatus(6, 5, value);
  };

  exports.setMainProgress = setMainProgress;

  var setMinorProgress = function setMinorProgress(value) {
    setDeviceStatus(6, 6, value);
  };

  exports.setMinorProgress = setMinorProgress;

  var setPlaySong = function setPlaySong(value) {
    setDeviceStatus(6, 7, value);
  };

  exports.setPlaySong = setPlaySong;

  var setSystemVolume = function setSystemVolume(value) {
    setDeviceStatus(2, 1, value);
  };

  exports.setSystemVolume = setSystemVolume;

  var setSystemMute = function setSystemMute(value) {
    setDeviceStatus(2, 2, value);
  };

  exports.setSystemMute = setSystemMute;

  var setTunnelSwitch = function setTunnelSwitch(tunnelId, state) {
    setDeviceStatus(7, 2, {
      tunnel: tunnelId,
      switch: state
    });
  };

  exports.setTunnelSwitch = setTunnelSwitch;

  var setTunnelVolume = function setTunnelVolume(tunnelId, volume) {
    setDeviceStatus(7, 3, {
      tunnel: tunnelId,
      volume: volume
    });
  };

  exports.setTunnelVolume = setTunnelVolume;

  var setMediaSource = function setMediaSource(media) {
    setDeviceStatus(7, 4, media);
  };

  exports.setMediaSource = setMediaSource;

  var setDeviceStatus = function setDeviceStatus(siid, piid, value) {
    _Service.default.spec.setPropertiesValue([{
      did: _miot.Device.deviceID,
      siid: siid,
      piid: piid,
      value: value
    }]).then(function (res) {}).catch(function (res) {});
  };

  exports.setDeviceStatus = setDeviceStatus;
  var isCalled = false,
      timer;

  var callOnceInInterval = function callOnceInInterval(functionTobeCalled) {
    var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;

    if (!isCalled) {
      isCalled = true;
      clearTimeout(timer);
      timer = setTimeout(function () {
        isCalled = false;
      }, interval);
      return functionTobeCalled();
    } else {
      _reactNative.Alert.alert((0, _MHLocalizableString.getString)('warn'), (0, _MHLocalizableString.getString)('tip_fast'));

      isCalled = true;
      clearTimeout(timer);
      timer = setTimeout(function () {
        isCalled = false;
      }, interval);
    }
  };

  exports.callOnceInInterval = callOnceInInterval;
},10031,[14305,10074,10062,10033,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getString = getString;
  exports.localStrings = exports.strings = undefined;

  var _LocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _intlMessageformat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  var strings = {
    en: {
      source_out: 'External',
      source_blue: 'Bluetooth',
      source_local: 'Local',
      source_one: 'Source One',
      source_two: 'Source Two',
      close: 'Close',
      tunnel_setting: 'Partition volume adjustment',
      music_home: 'Intelligent background music',
      play_list: 'Playlist',
      music_classification: 'Classification',
      tip: 'Dual independent playback is not enabled. Please enable this function on the device.',
      rank: 'Ranking list',
      play_local: 'Local Songs',
      play_wav: 'Play The Cue Tone',
      sheet_list: 'Playlist',
      tip_fast: 'It is forbidden to click too fast. Please try again later.',
      tip_playlocal: 'Please select a local song',
      tip_playwav: 'Please select a cue tone',
      tip_playsheet: 'Please select a playlist',
      warn: 'Warn',
      play: 'Play',
      song: 'song',
      wav: 'cue tone',
      sheet_list_low: 'playlist',
      empty_list: 'No data available. Please refresh and try again.'
    },
    zh: {
      source_out: '外接',
      source_blue: '蓝牙',
      source_local: '本地',
      source_one: '音源一',
      source_two: '音源二',
      close: '关闭',
      tunnel_setting: '分区音量调节',
      music_home: '智能背景音乐',
      play_list: '播放列表',
      music_classification: '分类',
      tip: '双路独立播放未打开,请在设备上开启该功能',
      rank: '排行榜',
      play_local: '本地歌曲',
      play_wav: '播放提示音',
      sheet_list: '歌单列表',
      sheet_list_low: '歌单',
      tip_fast: '禁止过快点击',
      tip_playlocal: '请选择一首本地歌曲',
      tip_playwav: '请选择一首提示音',
      tip_playsheet: '请选择一个歌单',
      warn: '警告',
      play: '播放',
      song: '歌曲',
      wav: '提示音',
      empty_list: '暂无数据，请刷新重试'
    },
    'zh-HK': {
      source_out: '外接',
      source_blue: '藍芽',
      source_local: '本地',
      source_one: '音源一',
      source_two: '音源二',
      close: '關閉',
      tunnel_setting: '分區音量調節',
      music_home: '智慧背景音樂',
      play_list: '播放列表',
      music_classification: '分類',
      tip: '雙路獨立播放未開啟,請在裝置上開啟該功能',
      rank: '排行榜',
      play_local: '本地歌曲',
      play_wav: '播放提示音',
      sheet_list: '歌单列表',
      sheet_list_low: '歌单',
      tip_fast: '禁止過快點選',
      tip_playlocal: '請選擇一首本地歌曲',
      tip_playwav: '請選擇一首提示音',
      tip_playsheet: '請選擇一個歌單',
      warn: '警告',
      play: '播放',
      song: '歌曲',
      wav: '提示音',
      empty_list: '暫無資料，請重新整理重試'
    },
    'zh-TW': {
      source_out: '外接',
      source_blue: '蓝牙',
      source_local: '本地',
      source_one: '音源一',
      source_two: '音源二',
      close: '關閉',
      tunnel_setting: '分區音量調節',
      music_home: '智慧背景音樂',
      play_list: '播放列表',
      music_classification: '分類',
      tip: '雙路獨立播放未開啟,請在裝置上開啟該功能',
      rank: '排行榜',
      play_local: '本地歌曲',
      play_wav: '播放提示音',
      sheet_list: '歌单列表',
      sheet_list_low: '歌单',
      tip_fast: '禁止過快點選',
      tip_playlocal: '請選擇一首本地歌曲',
      tip_playwav: '請選擇一首提示音',
      tip_playsheet: '請選擇一個歌單',
      warn: '警告',
      play: '播放',
      song: '歌曲',
      wav: '提示音',
      empty_list: '暫無資料，請重新整理重試'
    }
  };
  exports.strings = strings;
  var localStrings = new _LocalizedStrings.default(strings);
  exports.localStrings = localStrings;

  function getString(key) {
    var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (obj) {
      return new _intlMessageformat.default(localStrings[key], localStrings.language).format(obj);
    } else {
      return localStrings[key];
    }
  }
},10034,[14305,10037,13591,13582,13669,13672,13675,13678]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var localization = _miot.Host.locale.language;

  if (!localization) {}

  var interfaceLanguage = localization.replace(/_/g, '-');

  var LocalizedStrings = function () {
    (0, _createClass2.default)(LocalizedStrings, [{
      key: "_getBestMatchingLanguage",
      value: function _getBestMatchingLanguage(language, props) {
        if (props[language]) return language;
        var idx = language.lastIndexOf("-");

        if (idx >= 0) {
          language = language.substring(0, idx);
          return this._getBestMatchingLanguage(language, props);
        }

        return Object.keys(props)[0];
      }
    }]);

    function LocalizedStrings(props) {
      (0, _classCallCheck2.default)(this, LocalizedStrings);
      this.props = props;
      this.setLanguage(interfaceLanguage);
    }

    (0, _createClass2.default)(LocalizedStrings, [{
      key: "setContent",
      value: function setContent(props) {
        this.props = props;
        this.setLanguage(this.language);
      }
    }, {
      key: "setLanguage",
      value: function setLanguage(language) {
        var bestLanguage = this._getBestMatchingLanguage(language, this.props);

        var defaultLanguage = Object.keys(this.props)[0];
        this.language = bestLanguage;

        if (this.props[bestLanguage]) {
          var localizedStrings = (0, _extends2.default)({}, this.props[defaultLanguage], this.props[this.language]);

          for (var key in localizedStrings) {
            if (localizedStrings.hasOwnProperty(key)) {
              this[key] = localizedStrings[key];
            }
          }

          if (defaultLanguage !== this.language) {
            localizedStrings = this.props[defaultLanguage];

            this._fallbackValues(localizedStrings, this);
          }
        }
      }
    }, {
      key: "_fallbackValues",
      value: function _fallbackValues(defaultStrings, strings) {
        for (var key in defaultStrings) {
          if (defaultStrings.hasOwnProperty(key) && !strings[key]) {
            strings[key] = defaultStrings[key];
          } else {
            if (typeof strings[key] != "string") {
              this._fallbackValues(defaultStrings[key], strings[key]);
            }
          }
        }
      }
    }, {
      key: "getLanguage",
      value: function getLanguage() {
        return this.language;
      }
    }, {
      key: "getInterfaceLanguage",
      value: function getInterfaceLanguage() {
        return interfaceLanguage;
      }
    }, {
      key: "getLocaleObject",
      value: function getLocaleObject() {
        return this.props;
      }
    }, {
      key: "getAvailableLanguages",
      value: function getAvailableLanguages() {
        if (!this.availableLanguages) {
          this.availableLanguages = [];

          for (var language in this.props) {
            this.availableLanguages.push(language);
          }
        }

        return this.availableLanguages;
      }
    }, {
      key: "formatString",
      value: function formatString(str) {
        var res = str;

        for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
          res = this._replaceAll("{" + i + "}", i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1], res);
        }

        return res;
      }
    }, {
      key: "getString",
      value: function getString(key, language) {
        try {
          return this.props[language][key];
        } catch (ex) {}

        return null;
      }
    }, {
      key: "_replaceAll",
      value: function _replaceAll(original, replacement, str) {
        original = original.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
        replacement = ("" + replacement).replace(/([$])/g, '$$$$');
        return str.replace(new RegExp(original, 'g'), replacement);
      }
    }]);
    return LocalizedStrings;
  }();

  module.exports = LocalizedStrings;
},10037,[14305,14344,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ToggleButton", {
    enumerable: true,
    get: function get() {
      return _ToggleButton.default;
    }
  });
  Object.defineProperty(exports, "PlayList", {
    enumerable: true,
    get: function get() {
      return _PlayList.default;
    }
  });
  Object.defineProperty(exports, "PlayListDialog", {
    enumerable: true,
    get: function get() {
      return _PlayListDialog.default;
    }
  });
  exports.WavListItem = exports.SheetListItem = exports.LocalListItem = exports.PlayListItem = exports.TextTool = undefined;

  var TextTool = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  exports.TextTool = TextTool;

  var _ToggleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _PlayList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PlayListDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var PlayListItem = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));

  exports.PlayListItem = PlayListItem;

  var LocalListItem = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  exports.LocalListItem = LocalListItem;

  var SheetListItem = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  exports.SheetListItem = SheetListItem;

  var WavListItem = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  exports.WavListItem = WavListItem;
},10040,[14305,14308,10043,10046,10049,10052,10055,10058,10502,10505]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Small = exports.Tip = exports.Normal = exports.H4 = exports.H3 = exports.H2 = exports.H1 = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _utils = _$$_REQUIRE(_dependencyMap[3]);

  var H1 = function H1(_ref) {
    var title = _ref.title,
        style = _ref.style,
        numberOfLines = _ref.numberOfLines,
        color = _ref.color,
        children = _ref.children;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.H1, style, {
        color: color || '#000000'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.H1 = H1;

  var H2 = function H2(_ref2) {
    var title = _ref2.title,
        style = _ref2.style,
        numberOfLines = _ref2.numberOfLines,
        color = _ref2.color,
        children = _ref2.children;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.H2, style, {
        color: color || '#000000'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.H2 = H2;

  var H3 = function H3(_ref3) {
    var title = _ref3.title,
        style = _ref3.style,
        numberOfLines = _ref3.numberOfLines,
        color = _ref3.color,
        children = _ref3.children;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.H3, style, {
        color: color || '#000000'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.H3 = H3;

  var H4 = function H4(_ref4) {
    var title = _ref4.title,
        style = _ref4.style,
        numberOfLines = _ref4.numberOfLines,
        color = _ref4.color,
        children = _ref4.children;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.H4, style, {
        color: color || '#000000'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.H4 = H4;

  var Normal = function Normal(_ref5) {
    var title = _ref5.title,
        style = _ref5.style,
        numberOfLines = _ref5.numberOfLines,
        color = _ref5.color,
        children = _ref5.children;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.normal, style, {
        color: color || '#000000'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.Normal = Normal;

  var Tip = function Tip(_ref6) {
    var title = _ref6.title,
        style = _ref6.style,
        numberOfLines = _ref6.numberOfLines,
        children = _ref6.children,
        color = _ref6.color;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.tip, style, {
        color: color || '#ffffff'
      }],
      numberOfLines: numberOfLines || 0
    }, title || children);
  };

  exports.Tip = Tip;

  var Small = function Small(_ref7) {
    var title = _ref7.title,
        style = _ref7.style,
        numberOfLines = _ref7.numberOfLines;
    return _react.default.createElement(_reactNative.Text, {
      style: [styles.small, style],
      numberOfLines: numberOfLines || 0
    }, title);
  };

  exports.Small = Small;

  var styles = _reactNative.StyleSheet.create({
    H1: {
      fontSize: 25,
      fontWeight: '800',
      color: _utils.color.black
    },
    H2: {
      fontSize: 18,
      fontWeight: '500',
      color: _utils.color.black
    },
    H3: {
      fontSize: 16,
      fontWeight: '300',
      color: _utils.color.black
    },
    H4: {
      fontSize: 14,
      fontWeight: '200',
      color: _utils.color.black
    },
    normal: {
      fontSize: 12,
      color: _utils.color.black
    },
    tip: {
      fontSize: 11
    },
    small: {
      fontSize: 10,
      color: _utils.color.black
    }
  });
},10043,[14305,10297,10033,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var ToggleButton = function (_Component) {
    (0, _inherits2.default)(ToggleButton, _Component);

    function ToggleButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ToggleButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToggleButton).call(this, props));
      _this.state = {
        selected: _this.props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ToggleButton, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: styles.fixToText
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.buttonStyle, this.props.buttonStyle, this.state.selected ? this.props.selectedBgStyle : this.props.bgStyle, styles.leftButtonStyle],
          onPress: function onPress() {
            _this2.setState({
              selected: true
            });

            if (_this2.props.onLeftClick) {
              _this2.props.onLeftClick(_this2);
            }
          }
        }, this.props.leftTitle ? _react.default.createElement(_reactNative.Text, {
          style: [this.props.titleStyle, this.state.selected ? this.props.selectedTitleStyle : null]
        }, this.props.leftTitle) : null), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.buttonStyle, this.props.buttonStyle, this.state.selected ? this.props.bgStyle : this.props.selectedBgStyle, styles.rightButtonStyle],
          onPress: function onPress() {
            _this2.setState({
              selected: false
            });

            if (_this2.props.onRightClick) {
              _this2.props.onRightClick(_this2);
            }
          }
        }, this.props.rightTitle ? _react.default.createElement(_reactNative.Text, {
          style: [this.props.selectedTitleStyle, this.state.selected ? this.props.titleStyle : null]
        }, this.props.rightTitle) : null));
      }
    }]);
    return ToggleButton;
  }(_react.Component);

  exports.default = ToggleButton;
  ToggleButton.propTypes = {
    leftTitle: _propTypes.default.string,
    rightTitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    bgStyle: _propTypes.default.object,
    selectedTitleStyle: _propTypes.default.object,
    selectedBgStyle: _propTypes.default.string,
    onLeftClick: _propTypes.default.func,
    onRightClick: _propTypes.default.func,
    selected: _propTypes.default.bool,
    buttonStyle: _propTypes.default.object
  };

  var styles = _reactNative.StyleSheet.create({
    fixToText: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    leftButtonStyle: {
      width: 116,
      height: 29,
      borderColor: '#00bdc1',
      borderTopWidth: 1,
      borderBottomWidth: 1,
      borderLeftWidth: 1,
      borderTopLeftRadius: 5,
      borderBottomLeftRadius: 5,
      paddingLeft: 20,
      paddingRight: 20,
      paddingTop: 4,
      paddingBottom: 4,
      alignItems: 'center'
    },
    rightButtonStyle: {
      width: 116,
      height: 29,
      borderColor: '#00bdc1',
      borderTopWidth: 1,
      borderBottomWidth: 1,
      borderRightWidth: 1,
      borderTopRightRadius: 5,
      borderBottomRightRadius: 5,
      paddingLeft: 20,
      paddingRight: 20,
      paddingTop: 4,
      paddingBottom: 4,
      alignItems: 'center'
    }
  });
},10046,[14308,14305,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _utils = _$$_REQUIRE(_dependencyMap[12]);

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[13]);

  var PlayList = function (_PureComponent) {
    (0, _inherits2.default)(PlayList, _PureComponent);

    function PlayList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayList).call(this, props));

      _this.isChecked = function (item) {
        var isThere = _this.state.items.includes(item);

        return isThere;
      };

      _this.toggleChecked = function (item) {
        var id = _this.props.id;
        var items = _this.props.isSingleCheck ? [item] : [].concat((0, _toConsumableArray2.default)(_this.state.items), [item]);

        if (_this.isChecked(item)) {
          _this.setState((0, _objectSpread2.default)({}, _this.state, {
            items: _this.state.items.filter(function (bean) {
              return bean[id] !== item[id];
            })
          }));
        } else {
          _this.setState((0, _objectSpread2.default)({}, _this.state, {
            items: items
          }));
        }
      };

      _this.state = {
        selectedId: -1,
        items: []
      };
      return _this;
    }

    (0, _createClass2.default)(PlayList, [{
      key: "renderLoadMoreView",
      value: function renderLoadMoreView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.loadMore
        }, _react.default.createElement(_reactNative.ActivityIndicator, {
          style: styles.indicator,
          size: 'large',
          color: 'red',
          animating: true
        }), _react.default.createElement(_reactNative.Text, null, "\u6B63\u5728\u52A0\u8F7D\u66F4\u591A"));
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            dataArray = _this$props.dataArray,
            _renderItem = _this$props.renderItem,
            refresh = _this$props.refresh,
            _itemClick = _this$props.itemClick,
            itemMoreClick = _this$props.itemMoreClick,
            _itemCheckClick = _this$props.itemCheckClick,
            loadMore = _this$props.loadMore,
            isLoading = _this$props.isLoading,
            id = _this$props.id;
        var selectedId = this.state.selectedId;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          extraData: selectedId,
          data: dataArray,
          keyExtractor: function keyExtractor(item, index) {
            return item === undefined ? index : item[id];
          },
          refreshing: isLoading,
          onRefresh: refresh,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index;
            return item === undefined ? _react.default.createElement(_reactNative.Text, {
              style: styles.emptyMessageStyle
            }, (0, _MHLocalizableString.getString)('empty_list')) : _renderItem({
              item: item,
              itemClick: function itemClick() {
                _this2.setState({
                  selectedId: item[id]
                });

                if (_itemClick != undefined) {
                  _itemClick(item, index);
                }
              },
              itemMoreClick: itemMoreClick,
              itemCheckClick: function itemCheckClick() {
                _this2.toggleChecked(item);

                if (_itemCheckClick != undefined) {
                  _itemCheckClick(item, index);
                }
              },
              isChecked: _this2.isChecked(item),
              id: id,
              selectedId: selectedId
            });
          },
          onEndReached: loadMore,
          onEndReachedThreshold: 0.5
        }));
      }
    }]);
    return PlayList;
  }(_react.PureComponent);

  exports.default = PlayList;
  PlayList.propTypes = {
    id: _propTypes.default.string,
    itemClick: _propTypes.default.func,
    itemMoreClick: _propTypes.default.func,
    itemCheckClick: _propTypes.default.func,
    isSingleCheck: _propTypes.default.bool,
    refresh: _propTypes.default.func,
    loadMore: _propTypes.default.func,
    isLoading: _propTypes.default.bool,
    dataArray: _propTypes.default.array,
    renderItem: _propTypes.default.renderItem
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      flex: 1,
      width: _utils.screen.width
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    emptyMessageStyle: {
      textAlign: 'center',
      marginTop: '20%'
    }
  });
},10049,[14308,14305,14314,14359,14320,14323,14371,14377,14386,10297,10033,10318,10022,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _utils = _$$_REQUIRE(_dependencyMap[9]);

  var PlayListDialog = function (_PureComponent) {
    (0, _inherits2.default)(PlayListDialog, _PureComponent);

    function PlayListDialog(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayListDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayListDialog).call(this, props));

      _this.topAnimate = function () {
        var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

        _this.animatedTop.setValue(start);

        _reactNative.Animated.timing(_this.animatedTop, {
          toValue: end,
          duration: 150,
          easing: _reactNative.Easing.linear
        }).start();
      };

      _this.animatedTop = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(PlayListDialog, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var topAnimation = this.animatedTop.interpolate({
          inputRange: [0, 1],
          outputRange: [_utils.screen.height, 0]
        });
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.container, {
            top: topAnimation
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this2.topAnimate(1, 0);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.cover
        })), _react.default.createElement(_reactNative.View, {
          style: styles.menuContainer
        }, this.props.children));
      }
    }]);
    return PlayListDialog;
  }(_react.PureComponent);

  exports.default = PlayListDialog;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: _utils.screen.width,
      height: _utils.screen.height,
      position: 'absolute',
      zIndex: 99,
      backgroundColor: 'transparent'
    },
    cover: {
      width: _utils.screen.width,
      height: _utils.screen.height * 0.4,
      backgroundColor: 'transparent'
    },
    menuContainer: {
      width: _utils.screen.width,
      flex: 1,
      height: _utils.screen.height * 0.6,
      backgroundColor: '#ffffff'
    }
  });
},10052,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._renderItem = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _renderItem = function _renderItem(_ref) {
    var item = _ref.item,
        itemClick = _ref.itemClick,
        id = _ref.id,
        selectedId = _ref.selectedId;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      style: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#fff'
      },
      onPress: function onPress() {
        itemClick();
      }
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: styles.item_container
    }, _react.default.createElement(_reactNative.Text, {
      style: selectedId === item[id] ? styles.musicNameSelect : styles.musicName
    }, item.musicName + " - "), _react.default.createElement(_reactNative.Text, {
      style: selectedId === item[id] ? styles.authorNameSelect : styles.authorName
    }, item.authorName), _react.default.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.line
    })));
  };

  exports._renderItem = _renderItem;

  var styles = _reactNative.StyleSheet.create({
    item_container: {
      height: 46,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      paddingEnd: 15
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    musicName: {
      color: '#555454',
      marginStart: 12
    },
    authorName: {
      color: '#878787',
      fontSize: 11
    },
    musicNameSelect: {
      color: '#33bac0',
      marginStart: 16
    },
    authorNameSelect: {
      color: '#33bac0',
      fontSize: 11
    },
    img: {
      width: 18,
      height: 18
    }
  });
},10055,[14305,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._renderItem = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNativeElements = _$$_REQUIRE(_dependencyMap[3]);

  var _renderItem = function _renderItem(_ref) {
    var item = _ref.item,
        itemClick = _ref.itemClick,
        itemCheckClick = _ref.itemCheckClick,
        isChecked = _ref.isChecked;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      style: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#fff'
      },
      onPress: function onPress() {
        itemClick();
      }
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: styles.item_container
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.musicName
    }, item.musicName + " - "), _react.default.createElement(_reactNative.Text, {
      style: styles.authorName
    }, item.authorName), _react.default.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }), _react.default.createElement(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return itemCheckClick();
      }
    }, isChecked ? _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[4]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }) : _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[5]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }))), _react.default.createElement(_reactNative.View, {
      style: styles.line
    })));
  };

  exports._renderItem = _renderItem;

  var styles = _reactNative.StyleSheet.create({
    item_container: {
      height: 46,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    musicName: {
      color: '#555454',
      marginStart: 12
    },
    authorName: {
      color: '#878787',
      fontSize: 11
    },
    musicNameSelect: {
      color: '#33bac0',
      marginStart: 16
    },
    authorNameSelect: {
      color: '#33bac0',
      fontSize: 11
    },
    img: {
      width: 18,
      height: 18
    }
  });
},10058,[14305,10297,10033,10061,10496,10499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Button", {
    enumerable: true,
    get: function get() {
      return _Button.default;
    }
  });
  Object.defineProperty(exports, "Input", {
    enumerable: true,
    get: function get() {
      return _Input.default;
    }
  });
  Object.defineProperty(exports, "Icon", {
    enumerable: true,
    get: function get() {
      return _Icon.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "SocialIcon", {
    enumerable: true,
    get: function get() {
      return _SocialIcon.default;
    }
  });
  Object.defineProperty(exports, "Overlay", {
    enumerable: true,
    get: function get() {
      return _Overlay.default;
    }
  });
  Object.defineProperty(exports, "SearchBar", {
    enumerable: true,
    get: function get() {
      return _SearchBar.default;
    }
  });
  Object.defineProperty(exports, "Badge", {
    enumerable: true,
    get: function get() {
      return _Badge.default;
    }
  });
  Object.defineProperty(exports, "withBadge", {
    enumerable: true,
    get: function get() {
      return _withBadge.default;
    }
  });
  Object.defineProperty(exports, "CheckBox", {
    enumerable: true,
    get: function get() {
      return _CheckBox.default;
    }
  });
  Object.defineProperty(exports, "Divider", {
    enumerable: true,
    get: function get() {
      return _Divider.default;
    }
  });
  Object.defineProperty(exports, "Slider", {
    enumerable: true,
    get: function get() {
      return _Slider.default;
    }
  });
  Object.defineProperty(exports, "ButtonGroup", {
    enumerable: true,
    get: function get() {
      return _ButtonGroup.default;
    }
  });
  Object.defineProperty(exports, "Image", {
    enumerable: true,
    get: function get() {
      return _Image.default;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "Tile", {
    enumerable: true,
    get: function get() {
      return _Tile.default;
    }
  });
  Object.defineProperty(exports, "Avatar", {
    enumerable: true,
    get: function get() {
      return _Avatar.default;
    }
  });
  Object.defineProperty(exports, "Accessory", {
    enumerable: true,
    get: function get() {
      return _Accessory.default;
    }
  });
  Object.defineProperty(exports, "Header", {
    enumerable: true,
    get: function get() {
      return _Header.default;
    }
  });
  Object.defineProperty(exports, "PricingCard", {
    enumerable: true,
    get: function get() {
      return _PricingCard.default;
    }
  });
  Object.defineProperty(exports, "Tooltip", {
    enumerable: true,
    get: function get() {
      return _Tooltip.default;
    }
  });
  Object.defineProperty(exports, "BottomSheet", {
    enumerable: true,
    get: function get() {
      return _BottomSheet.default;
    }
  });
  Object.defineProperty(exports, "Text", {
    enumerable: true,
    get: function get() {
      return _Text.default;
    }
  });
  Object.defineProperty(exports, "colors", {
    enumerable: true,
    get: function get() {
      return _config.colors;
    }
  });
  Object.defineProperty(exports, "ThemeProvider", {
    enumerable: true,
    get: function get() {
      return _config.ThemeProvider;
    }
  });
  Object.defineProperty(exports, "ThemeConsumer", {
    enumerable: true,
    get: function get() {
      return _config.ThemeConsumer;
    }
  });
  Object.defineProperty(exports, "ThemeContext", {
    enumerable: true,
    get: function get() {
      return _config.ThemeContext;
    }
  });
  Object.defineProperty(exports, "withTheme", {
    enumerable: true,
    get: function get() {
      return _config.withTheme;
    }
  });
  Object.defineProperty(exports, "getIconType", {
    enumerable: true,
    get: function get() {
      return _getIconType.default;
    }
  });
  Object.defineProperty(exports, "registerCustomIconType", {
    enumerable: true,
    get: function get() {
      return _getIconType.registerCustomIconType;
    }
  });
  Object.defineProperty(exports, "normalize", {
    enumerable: true,
    get: function get() {
      return _normalizeText.default;
    }
  });
  exports.AirbnbRating = exports.Rating = undefined;

  var _Button = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Input = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _SocialIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Overlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _SearchBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Badge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _withBadge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CheckBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Divider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Slider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Tile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Avatar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Accessory = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _PricingCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Tooltip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _BottomSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _reactNativeRatings = _$$_REQUIRE(_dependencyMap[24]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _config = _$$_REQUIRE(_dependencyMap[26]);

  var _getIconType = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[27]));

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var AirbnbRating = (0, _config.withTheme)(_reactNativeRatings.AirbnbRating, 'AirbnbRating');
  exports.AirbnbRating = AirbnbRating;
  var Rating = (0, _config.withTheme)(_reactNativeRatings.Rating, 'Rating');
  exports.Rating = Rating;
},10061,[14308,14305,10064,10340,10334,10343,10394,10397,10400,10358,10412,10376,10415,10418,10385,10352,10421,10439,10346,10355,10445,10448,10451,10460,10463,10361,10082,10124,10313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Button = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _config = _$$_REQUIRE(_dependencyMap[14]);

  var _helpers = _$$_REQUIRE(_dependencyMap[15]);

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var defaultLoadingProps = function defaultLoadingProps(type, theme) {
    return {
      color: type === 'solid' ? 'white' : theme.colors.primary,
      size: 'small'
    };
  };

  var Button = function (_Component) {
    (0, _inherits2.default)(Button, _Component);

    function Button() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Button);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.handleOnPress = function () {
        var _this$props = _this.props,
            loading = _this$props.loading,
            onPress = _this$props.onPress;

        if (!loading) {
          onPress();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(Button, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this$props2 = this.props,
            linearGradientProps = _this$props2.linearGradientProps,
            ViewComponent = _this$props2.ViewComponent;

        if (linearGradientProps && !global.Expo && !ViewComponent) {}
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            TouchableComponent = _this$props3.TouchableComponent,
            containerStyle = _this$props3.containerStyle,
            onPress = _this$props3.onPress,
            buttonStyle = _this$props3.buttonStyle,
            type = _this$props3.type,
            loading = _this$props3.loading,
            loadingStyle = _this$props3.loadingStyle,
            passedLoadingProps = _this$props3.loadingProps,
            title = _this$props3.title,
            titleProps = _this$props3.titleProps,
            passedTitleStyle = _this$props3.titleStyle,
            icon = _this$props3.icon,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconRight = _this$props3.iconRight,
            disabled = _this$props3.disabled,
            disabledStyle = _this$props3.disabledStyle,
            disabledTitleStyle = _this$props3.disabledTitleStyle,
            raised = _this$props3.raised,
            linearGradientProps = _this$props3.linearGradientProps,
            _this$props3$ViewComp = _this$props3.ViewComponent,
            ViewComponent = _this$props3$ViewComp === undefined ? !disabled && linearGradientProps && global.Expo ? global.Expo.LinearGradient : _reactNative.View : _this$props3$ViewComp,
            theme = _this$props3.theme,
            attributes = (0, _objectWithoutProperties2.default)(_this$props3, ["TouchableComponent", "containerStyle", "onPress", "buttonStyle", "type", "loading", "loadingStyle", "loadingProps", "title", "titleProps", "titleStyle", "icon", "iconContainerStyle", "iconRight", "disabled", "disabledStyle", "disabledTitleStyle", "raised", "linearGradientProps", "ViewComponent", "theme"]);

        var TouchableComponentInternal = TouchableComponent || _reactNative.Platform.select({
          android: linearGradientProps ? _reactNative.TouchableOpacity : _reactNative.TouchableNativeFeedback,
          default: _reactNative.TouchableOpacity
        });

        var titleStyle = _reactNative.StyleSheet.flatten([styles.title(type, theme), passedTitleStyle, disabled && styles.disabledTitle(theme), disabled && disabledTitleStyle]);

        var background = _reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 21 ? _reactNative.TouchableNativeFeedback.Ripple((0, _color.default)(titleStyle.color).alpha(0.32).rgb().string(), true) : undefined;
        var loadingProps = (0, _objectSpread2.default)({}, defaultLoadingProps(type, theme), passedLoadingProps);
        var accessibilityState = {
          disabled: !!disabled,
          busy: !!loading
        };
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container, {
            borderRadius: buttonStyle.borderRadius || styles.container.borderRadius
          }, containerStyle, raised && !disabled && styles.raised(type)])
        }, _react.default.createElement(TouchableComponentInternal, (0, _extends2.default)({
          onPress: this.handleOnPress,
          delayPressIn: 0,
          activeOpacity: 0.3,
          accessibilityRole: "button",
          accessibilityState: accessibilityState,
          disabled: disabled,
          background: background
        }, attributes), _react.default.createElement(ViewComponent, (0, _extends2.default)({}, linearGradientProps, {
          style: _reactNative.StyleSheet.flatten([styles.button(type, theme), buttonStyle, disabled && styles.disabled(type, theme), disabled && disabledStyle])
        }), loading && _react.default.createElement(_reactNative.ActivityIndicator, (0, _extends2.default)({
          style: _reactNative.StyleSheet.flatten([styles.loading, loadingStyle]),
          color: loadingProps.color,
          size: loadingProps.size
        }, loadingProps)), !loading && icon && !iconRight && (0, _helpers.renderNode)(_Icon.default, icon, {
          containerStyle: _reactNative.StyleSheet.flatten([styles.iconContainer, iconContainerStyle])
        }), !loading && !!title && _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: titleStyle
        }, titleProps), title), !loading && icon && iconRight && (0, _helpers.renderNode)(_Icon.default, icon, {
          containerStyle: _reactNative.StyleSheet.flatten([styles.iconContainer, iconContainerStyle])
        }))));
      }
    }]);
    return Button;
  }(_react.Component);

  exports.Button = Button;
  Button.propTypes = {
    title: _propTypes.default.string,
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    titleProps: _propTypes.default.object,
    buttonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    type: _propTypes.default.oneOf(['solid', 'clear', 'outline']),
    loading: _propTypes.default.bool,
    loadingStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    loadingProps: _propTypes.default.object,
    onPress: _propTypes.default.func,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    icon: _helpers.nodeType,
    iconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    iconRight: _propTypes.default.bool,
    linearGradientProps: _propTypes.default.object,
    TouchableComponent: _propTypes.default.elementType,
    ViewComponent: _propTypes.default.elementType,
    disabled: _propTypes.default.bool,
    disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    disabledTitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    raised: _propTypes.default.bool,
    theme: _propTypes.default.object
  };
  Button.defaultProps = {
    title: '',
    iconRight: false,
    onPress: function onPress() {
      return undefined;
    },
    type: 'solid',
    buttonStyle: {
      borderRadius: 3
    },
    disabled: false,
    raised: false,
    loading: false
  };
  var styles = {
    button: function button(type, theme) {
      return {
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center',
        borderRadius: 3,
        backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',
        padding: 8,
        borderWidth: type === 'outline' ? _reactNative.StyleSheet.hairlineWidth : 0,
        borderColor: theme.colors.primary
      };
    },
    container: {
      overflow: 'hidden',
      borderRadius: 3
    },
    disabled: function disabled(type, theme) {
      return (0, _objectSpread2.default)({}, (0, _helpers.conditionalStyle)(type === 'solid', {
        backgroundColor: theme.colors.disabled
      }), (0, _helpers.conditionalStyle)(type === 'outline', {
        borderColor: (0, _helpers.color)(theme.colors.disabled).darken(0.3).string()
      }));
    },
    disabledTitle: function disabledTitle(theme) {
      return {
        color: (0, _helpers.color)(theme.colors.disabled).darken(0.3).string()
      };
    },
    title: function title(type, theme) {
      return (0, _objectSpread2.default)({
        color: type === 'solid' ? 'white' : theme.colors.primary,
        fontSize: 16,
        textAlign: 'center',
        paddingVertical: 1
      }, _reactNative.Platform.select({
        android: {
          fontFamily: 'sans-serif-medium'
        },
        default: {
          fontSize: 18
        }
      }));
    },
    iconContainer: {
      marginHorizontal: 5
    },
    raised: function raised(type) {
      return type !== 'clear' && (0, _objectSpread2.default)({
        backgroundColor: '#fff',
        overflow: 'visible'
      }, _reactNative.Platform.select({
        android: {
          elevation: 4
        },
        default: {
          shadowColor: 'rgba(0,0,0, .4)',
          shadowOffset: {
            height: 1,
            width: 1
          },
          shadowOpacity: 1,
          shadowRadius: 1
        }
      }));
    },
    loading: {
      marginVertical: 2
    }
  };

  var _default = (0, _config.withTheme)(Button, 'Button');

  exports.default = _default;
},10064,[14308,14305,14344,14314,14407,14320,14323,14371,14377,14386,10318,10297,10033,11518,10082,10118,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = function isArrayish(obj) {
    if (!obj || typeof obj === 'string') {
      return false;
    }

    return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== 'String');
  };
},10067,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var conversions = _$$_REQUIRE(_dependencyMap[0]);

  var route = _$$_REQUIRE(_dependencyMap[1]);

  var convert = {};
  var models = Object.keys(conversions);

  function wrapRaw(fn) {
    var wrappedFn = function wrappedFn(args) {
      if (args === undefined || args === null) {
        return args;
      }

      if (arguments.length > 1) {
        args = Array.prototype.slice.call(arguments);
      }

      return fn(args);
    };

    if ('conversion' in fn) {
      wrappedFn.conversion = fn.conversion;
    }

    return wrappedFn;
  }

  function wrapRounded(fn) {
    var wrappedFn = function wrappedFn(args) {
      if (args === undefined || args === null) {
        return args;
      }

      if (arguments.length > 1) {
        args = Array.prototype.slice.call(arguments);
      }

      var result = fn(args);

      if (typeof result === 'object') {
        for (var len = result.length, i = 0; i < len; i++) {
          result[i] = Math.round(result[i]);
        }
      }

      return result;
    };

    if ('conversion' in fn) {
      wrappedFn.conversion = fn.conversion;
    }

    return wrappedFn;
  }

  models.forEach(function (fromModel) {
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], 'channels', {
      value: conversions[fromModel].channels
    });
    Object.defineProperty(convert[fromModel], 'labels', {
      value: conversions[fromModel].labels
    });
    var routes = route(fromModel);
    var routeModels = Object.keys(routes);
    routeModels.forEach(function (toModel) {
      var fn = routes[toModel];
      convert[fromModel][toModel] = wrapRounded(fn);
      convert[fromModel][toModel].raw = wrapRaw(fn);
    });
  });
  module.exports = convert;
},10070,[10073,10079]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cssKeywords = _$$_REQUIRE(_dependencyMap[0]);

  var reverseKeywords = {};

  for (var key in cssKeywords) {
    if (cssKeywords.hasOwnProperty(key)) {
      reverseKeywords[cssKeywords[key]] = key;
    }
  }

  var convert = module.exports = {
    rgb: {
      channels: 3,
      labels: 'rgb'
    },
    hsl: {
      channels: 3,
      labels: 'hsl'
    },
    hsv: {
      channels: 3,
      labels: 'hsv'
    },
    hwb: {
      channels: 3,
      labels: 'hwb'
    },
    cmyk: {
      channels: 4,
      labels: 'cmyk'
    },
    xyz: {
      channels: 3,
      labels: 'xyz'
    },
    lab: {
      channels: 3,
      labels: 'lab'
    },
    lch: {
      channels: 3,
      labels: 'lch'
    },
    hex: {
      channels: 1,
      labels: ['hex']
    },
    keyword: {
      channels: 1,
      labels: ['keyword']
    },
    ansi16: {
      channels: 1,
      labels: ['ansi16']
    },
    ansi256: {
      channels: 1,
      labels: ['ansi256']
    },
    hcg: {
      channels: 3,
      labels: ['h', 'c', 'g']
    },
    apple: {
      channels: 3,
      labels: ['r16', 'g16', 'b16']
    },
    gray: {
      channels: 1,
      labels: ['gray']
    }
  };

  for (var model in convert) {
    if (convert.hasOwnProperty(model)) {
      if (!('channels' in convert[model])) {
        throw new Error('missing channels property: ' + model);
      }

      if (!('labels' in convert[model])) {
        throw new Error('missing channel labels property: ' + model);
      }

      if (convert[model].labels.length !== convert[model].channels) {
        throw new Error('channel and label counts mismatch: ' + model);
      }

      var channels = convert[model].channels;
      var labels = convert[model].labels;
      delete convert[model].channels;
      delete convert[model].labels;
      Object.defineProperty(convert[model], 'channels', {
        value: channels
      });
      Object.defineProperty(convert[model], 'labels', {
        value: labels
      });
    }
  }

  convert.rgb.hsl = function (rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var min = Math.min(r, g, b);
    var max = Math.max(r, g, b);
    var delta = max - min;
    var h;
    var s;
    var l;

    if (max === min) {
      h = 0;
    } else if (r === max) {
      h = (g - b) / delta;
    } else if (g === max) {
      h = 2 + (b - r) / delta;
    } else if (b === max) {
      h = 4 + (r - g) / delta;
    }

    h = Math.min(h * 60, 360);

    if (h < 0) {
      h += 360;
    }

    l = (min + max) / 2;

    if (max === min) {
      s = 0;
    } else if (l <= 0.5) {
      s = delta / (max + min);
    } else {
      s = delta / (2 - max - min);
    }

    return [h, s * 100, l * 100];
  };

  convert.rgb.hsv = function (rgb) {
    var rdif;
    var gdif;
    var bdif;
    var h;
    var s;
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var v = Math.max(r, g, b);
    var diff = v - Math.min(r, g, b);

    var diffc = function diffc(c) {
      return (v - c) / 6 / diff + 0.5;
    };

    if (diff === 0) {
      h = s = 0;
    } else {
      s = diff / v;
      rdif = diffc(r);
      gdif = diffc(g);
      bdif = diffc(b);

      if (r === v) {
        h = bdif - gdif;
      } else if (g === v) {
        h = 0.3333333333333333 + rdif - bdif;
      } else if (b === v) {
        h = 0.6666666666666666 + gdif - rdif;
      }

      if (h < 0) {
        h += 1;
      } else if (h > 1) {
        h -= 1;
      }
    }

    return [h * 360, s * 100, v * 100];
  };

  convert.rgb.hwb = function (rgb) {
    var r = rgb[0];
    var g = rgb[1];
    var b = rgb[2];
    var h = convert.rgb.hsl(rgb)[0];
    var w = 0.00392156862745098 * Math.min(r, Math.min(g, b));
    b = 1 - 0.00392156862745098 * Math.max(r, Math.max(g, b));
    return [h, w * 100, b * 100];
  };

  convert.rgb.cmyk = function (rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var c;
    var m;
    var y;
    var k;
    k = Math.min(1 - r, 1 - g, 1 - b);
    c = (1 - r - k) / (1 - k) || 0;
    m = (1 - g - k) / (1 - k) || 0;
    y = (1 - b - k) / (1 - k) || 0;
    return [c * 100, m * 100, y * 100, k * 100];
  };

  function comparativeDistance(x, y) {
    return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
  }

  convert.rgb.keyword = function (rgb) {
    var reversed = reverseKeywords[rgb];

    if (reversed) {
      return reversed;
    }

    var currentClosestDistance = Infinity;
    var currentClosestKeyword;

    for (var keyword in cssKeywords) {
      if (cssKeywords.hasOwnProperty(keyword)) {
        var value = cssKeywords[keyword];
        var distance = comparativeDistance(rgb, value);

        if (distance < currentClosestDistance) {
          currentClosestDistance = distance;
          currentClosestKeyword = keyword;
        }
      }
    }

    return currentClosestKeyword;
  };

  convert.keyword.rgb = function (keyword) {
    return cssKeywords[keyword];
  };

  convert.rgb.xyz = function (rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    return [x * 100, y * 100, z * 100];
  };

  convert.rgb.lab = function (rgb) {
    var xyz = convert.rgb.xyz(rgb);
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    var l;
    var a;
    var b;
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? Math.pow(x, 0.3333333333333333) : 7.787 * x + 0.13793103448275862;
    y = y > 0.008856 ? Math.pow(y, 0.3333333333333333) : 7.787 * y + 0.13793103448275862;
    z = z > 0.008856 ? Math.pow(z, 0.3333333333333333) : 7.787 * z + 0.13793103448275862;
    l = 116 * y - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);
    return [l, a, b];
  };

  convert.hsl.rgb = function (hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val * 255;
    }

    return rgb;
  };

  convert.hsl.hsv = function (hsl) {
    var h = hsl[0];
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var smin = s;
    var lmin = Math.max(l, 0.01);
    var sv;
    var v;
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    v = (l + s) / 2;
    sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [h, sv * 100, v * 100];
  };

  convert.hsv.rgb = function (hsv) {
    var h = hsv[0] / 60;
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var hi = Math.floor(h) % 6;
    var f = h - Math.floor(h);
    var p = 255 * v * (1 - s);
    var q = 255 * v * (1 - s * f);
    var t = 255 * v * (1 - s * (1 - f));
    v *= 255;

    switch (hi) {
      case 0:
        return [v, t, p];

      case 1:
        return [q, v, p];

      case 2:
        return [p, v, t];

      case 3:
        return [p, q, v];

      case 4:
        return [t, p, v];

      case 5:
        return [v, p, q];
    }
  };

  convert.hsv.hsl = function (hsv) {
    var h = hsv[0];
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var vmin = Math.max(v, 0.01);
    var lmin;
    var sl;
    var l;
    l = (2 - s) * v;
    lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [h, sl * 100, l * 100];
  };

  convert.hwb.rgb = function (hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r * 255, g * 255, b * 255];
  };

  convert.cmyk.rgb = function (cmyk) {
    var c = cmyk[0] / 100;
    var m = cmyk[1] / 100;
    var y = cmyk[2] / 100;
    var k = cmyk[3] / 100;
    var r;
    var g;
    var b;
    r = 1 - Math.min(1, c * (1 - k) + k);
    g = 1 - Math.min(1, m * (1 - k) + k);
    b = 1 - Math.min(1, y * (1 - k) + k);
    return [r * 255, g * 255, b * 255];
  };

  convert.xyz.rgb = function (xyz) {
    var x = xyz[0] / 100;
    var y = xyz[1] / 100;
    var z = xyz[2] / 100;
    var r;
    var g;
    var b;
    r = x * 3.2406 + y * -1.5372 + z * -0.4986;
    g = x * -0.9689 + y * 1.8758 + z * 0.0415;
    b = x * 0.0557 + y * -0.204 + z * 1.0570;
    r = r > 0.0031308 ? 1.055 * Math.pow(r, 0.4166666666666667) - 0.055 : r * 12.92;
    g = g > 0.0031308 ? 1.055 * Math.pow(g, 0.4166666666666667) - 0.055 : g * 12.92;
    b = b > 0.0031308 ? 1.055 * Math.pow(b, 0.4166666666666667) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);
    return [r * 255, g * 255, b * 255];
  };

  convert.xyz.lab = function (xyz) {
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    var l;
    var a;
    var b;
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? Math.pow(x, 0.3333333333333333) : 7.787 * x + 0.13793103448275862;
    y = y > 0.008856 ? Math.pow(y, 0.3333333333333333) : 7.787 * y + 0.13793103448275862;
    z = z > 0.008856 ? Math.pow(z, 0.3333333333333333) : 7.787 * z + 0.13793103448275862;
    l = 116 * y - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);
    return [l, a, b];
  };

  convert.lab.xyz = function (lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var x;
    var y;
    var z;
    y = (l + 16) / 116;
    x = a / 500 + y;
    z = y - b / 200;
    var y2 = Math.pow(y, 3);
    var x2 = Math.pow(x, 3);
    var z2 = Math.pow(z, 3);
    y = y2 > 0.008856 ? y2 : (y - 0.13793103448275862) / 7.787;
    x = x2 > 0.008856 ? x2 : (x - 0.13793103448275862) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 0.13793103448275862) / 7.787;
    x *= 95.047;
    y *= 100;
    z *= 108.883;
    return [x, y, z];
  };

  convert.lab.lch = function (lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var hr;
    var h;
    var c;
    hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;

    if (h < 0) {
      h += 360;
    }

    c = Math.sqrt(a * a + b * b);
    return [l, c, h];
  };

  convert.lch.lab = function (lch) {
    var l = lch[0];
    var c = lch[1];
    var h = lch[2];
    var a;
    var b;
    var hr;
    hr = h / 360 * 2 * Math.PI;
    a = c * Math.cos(hr);
    b = c * Math.sin(hr);
    return [l, a, b];
  };

  convert.rgb.ansi16 = function (args) {
    var r = args[0];
    var g = args[1];
    var b = args[2];
    var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2];
    value = Math.round(value / 50);

    if (value === 0) {
      return 30;
    }

    var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));

    if (value === 2) {
      ansi += 60;
    }

    return ansi;
  };

  convert.hsv.ansi16 = function (args) {
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
  };

  convert.rgb.ansi256 = function (args) {
    var r = args[0];
    var g = args[1];
    var b = args[2];

    if (r === g && g === b) {
      if (r < 8) {
        return 16;
      }

      if (r > 248) {
        return 231;
      }

      return Math.round((r - 8) / 247 * 24) + 232;
    }

    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
  };

  convert.ansi16.rgb = function (args) {
    var color = args % 10;

    if (color === 0 || color === 7) {
      if (args > 50) {
        color += 3.5;
      }

      color = color / 10.5 * 255;
      return [color, color, color];
    }

    var mult = (~~(args > 50) + 1) * 0.5;
    var r = (color & 1) * mult * 255;
    var g = (color >> 1 & 1) * mult * 255;
    var b = (color >> 2 & 1) * mult * 255;
    return [r, g, b];
  };

  convert.ansi256.rgb = function (args) {
    if (args >= 232) {
      var c = (args - 232) * 10 + 8;
      return [c, c, c];
    }

    args -= 16;
    var rem;
    var r = Math.floor(args / 36) / 5 * 255;
    var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
    var b = rem % 6 / 5 * 255;
    return [r, g, b];
  };

  convert.rgb.hex = function (args) {
    var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
  };

  convert.hex.rgb = function (args) {
    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);

    if (!match) {
      return [0, 0, 0];
    }

    var colorString = match[0];

    if (match[0].length === 3) {
      colorString = colorString.split('').map(function (char) {
        return char + char;
      }).join('');
    }

    var integer = parseInt(colorString, 16);
    var r = integer >> 16 & 0xFF;
    var g = integer >> 8 & 0xFF;
    var b = integer & 0xFF;
    return [r, g, b];
  };

  convert.rgb.hcg = function (rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var max = Math.max(Math.max(r, g), b);
    var min = Math.min(Math.min(r, g), b);
    var chroma = max - min;
    var grayscale;
    var hue;

    if (chroma < 1) {
      grayscale = min / (1 - chroma);
    } else {
      grayscale = 0;
    }

    if (chroma <= 0) {
      hue = 0;
    } else if (max === r) {
      hue = (g - b) / chroma % 6;
    } else if (max === g) {
      hue = 2 + (b - r) / chroma;
    } else {
      hue = 4 + (r - g) / chroma + 4;
    }

    hue /= 6;
    hue %= 1;
    return [hue * 360, chroma * 100, grayscale * 100];
  };

  convert.hsl.hcg = function (hsl) {
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var c = 1;
    var f = 0;

    if (l < 0.5) {
      c = 2.0 * s * l;
    } else {
      c = 2.0 * s * (1.0 - l);
    }

    if (c < 1.0) {
      f = (l - 0.5 * c) / (1.0 - c);
    }

    return [hsl[0], c * 100, f * 100];
  };

  convert.hsv.hcg = function (hsv) {
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var c = s * v;
    var f = 0;

    if (c < 1.0) {
      f = (v - c) / (1 - c);
    }

    return [hsv[0], c * 100, f * 100];
  };

  convert.hcg.rgb = function (hcg) {
    var h = hcg[0] / 360;
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;

    if (c === 0.0) {
      return [g * 255, g * 255, g * 255];
    }

    var pure = [0, 0, 0];
    var hi = h % 1 * 6;
    var v = hi % 1;
    var w = 1 - v;
    var mg = 0;

    switch (Math.floor(hi)) {
      case 0:
        pure[0] = 1;
        pure[1] = v;
        pure[2] = 0;
        break;

      case 1:
        pure[0] = w;
        pure[1] = 1;
        pure[2] = 0;
        break;

      case 2:
        pure[0] = 0;
        pure[1] = 1;
        pure[2] = v;
        break;

      case 3:
        pure[0] = 0;
        pure[1] = w;
        pure[2] = 1;
        break;

      case 4:
        pure[0] = v;
        pure[1] = 0;
        pure[2] = 1;
        break;

      default:
        pure[0] = 1;
        pure[1] = 0;
        pure[2] = w;
    }

    mg = (1.0 - c) * g;
    return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];
  };

  convert.hcg.hsv = function (hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    var f = 0;

    if (v > 0.0) {
      f = c / v;
    }

    return [hcg[0], f * 100, v * 100];
  };

  convert.hcg.hsl = function (hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var l = g * (1.0 - c) + 0.5 * c;
    var s = 0;

    if (l > 0.0 && l < 0.5) {
      s = c / (2 * l);
    } else if (l >= 0.5 && l < 1.0) {
      s = c / (2 * (1 - l));
    }

    return [hcg[0], s * 100, l * 100];
  };

  convert.hcg.hwb = function (hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    return [hcg[0], (v - c) * 100, (1 - v) * 100];
  };

  convert.hwb.hcg = function (hwb) {
    var w = hwb[1] / 100;
    var b = hwb[2] / 100;
    var v = 1 - b;
    var c = v - w;
    var g = 0;

    if (c < 1) {
      g = (v - c) / (1 - c);
    }

    return [hwb[0], c * 100, g * 100];
  };

  convert.apple.rgb = function (apple) {
    return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
  };

  convert.rgb.apple = function (rgb) {
    return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
  };

  convert.gray.rgb = function (args) {
    return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
  };

  convert.gray.hsl = convert.gray.hsv = function (args) {
    return [0, 0, args[0]];
  };

  convert.gray.hwb = function (gray) {
    return [0, 100, gray[0]];
  };

  convert.gray.cmyk = function (gray) {
    return [0, 0, 0, gray[0]];
  };

  convert.gray.lab = function (gray) {
    return [gray[0], 0, 0];
  };

  convert.gray.hex = function (gray) {
    var val = Math.round(gray[0] / 100 * 255) & 0xFF;
    var integer = (val << 16) + (val << 8) + val;
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
  };

  convert.rgb.gray = function (rgb) {
    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [val / 255 * 100];
  };
},10073,[10076]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    "aliceblue": [240, 248, 255],
    "antiquewhite": [250, 235, 215],
    "aqua": [0, 255, 255],
    "aquamarine": [127, 255, 212],
    "azure": [240, 255, 255],
    "beige": [245, 245, 220],
    "bisque": [255, 228, 196],
    "black": [0, 0, 0],
    "blanchedalmond": [255, 235, 205],
    "blue": [0, 0, 255],
    "blueviolet": [138, 43, 226],
    "brown": [165, 42, 42],
    "burlywood": [222, 184, 135],
    "cadetblue": [95, 158, 160],
    "chartreuse": [127, 255, 0],
    "chocolate": [210, 105, 30],
    "coral": [255, 127, 80],
    "cornflowerblue": [100, 149, 237],
    "cornsilk": [255, 248, 220],
    "crimson": [220, 20, 60],
    "cyan": [0, 255, 255],
    "darkblue": [0, 0, 139],
    "darkcyan": [0, 139, 139],
    "darkgoldenrod": [184, 134, 11],
    "darkgray": [169, 169, 169],
    "darkgreen": [0, 100, 0],
    "darkgrey": [169, 169, 169],
    "darkkhaki": [189, 183, 107],
    "darkmagenta": [139, 0, 139],
    "darkolivegreen": [85, 107, 47],
    "darkorange": [255, 140, 0],
    "darkorchid": [153, 50, 204],
    "darkred": [139, 0, 0],
    "darksalmon": [233, 150, 122],
    "darkseagreen": [143, 188, 143],
    "darkslateblue": [72, 61, 139],
    "darkslategray": [47, 79, 79],
    "darkslategrey": [47, 79, 79],
    "darkturquoise": [0, 206, 209],
    "darkviolet": [148, 0, 211],
    "deeppink": [255, 20, 147],
    "deepskyblue": [0, 191, 255],
    "dimgray": [105, 105, 105],
    "dimgrey": [105, 105, 105],
    "dodgerblue": [30, 144, 255],
    "firebrick": [178, 34, 34],
    "floralwhite": [255, 250, 240],
    "forestgreen": [34, 139, 34],
    "fuchsia": [255, 0, 255],
    "gainsboro": [220, 220, 220],
    "ghostwhite": [248, 248, 255],
    "gold": [255, 215, 0],
    "goldenrod": [218, 165, 32],
    "gray": [128, 128, 128],
    "green": [0, 128, 0],
    "greenyellow": [173, 255, 47],
    "grey": [128, 128, 128],
    "honeydew": [240, 255, 240],
    "hotpink": [255, 105, 180],
    "indianred": [205, 92, 92],
    "indigo": [75, 0, 130],
    "ivory": [255, 255, 240],
    "khaki": [240, 230, 140],
    "lavender": [230, 230, 250],
    "lavenderblush": [255, 240, 245],
    "lawngreen": [124, 252, 0],
    "lemonchiffon": [255, 250, 205],
    "lightblue": [173, 216, 230],
    "lightcoral": [240, 128, 128],
    "lightcyan": [224, 255, 255],
    "lightgoldenrodyellow": [250, 250, 210],
    "lightgray": [211, 211, 211],
    "lightgreen": [144, 238, 144],
    "lightgrey": [211, 211, 211],
    "lightpink": [255, 182, 193],
    "lightsalmon": [255, 160, 122],
    "lightseagreen": [32, 178, 170],
    "lightskyblue": [135, 206, 250],
    "lightslategray": [119, 136, 153],
    "lightslategrey": [119, 136, 153],
    "lightsteelblue": [176, 196, 222],
    "lightyellow": [255, 255, 224],
    "lime": [0, 255, 0],
    "limegreen": [50, 205, 50],
    "linen": [250, 240, 230],
    "magenta": [255, 0, 255],
    "maroon": [128, 0, 0],
    "mediumaquamarine": [102, 205, 170],
    "mediumblue": [0, 0, 205],
    "mediumorchid": [186, 85, 211],
    "mediumpurple": [147, 112, 219],
    "mediumseagreen": [60, 179, 113],
    "mediumslateblue": [123, 104, 238],
    "mediumspringgreen": [0, 250, 154],
    "mediumturquoise": [72, 209, 204],
    "mediumvioletred": [199, 21, 133],
    "midnightblue": [25, 25, 112],
    "mintcream": [245, 255, 250],
    "mistyrose": [255, 228, 225],
    "moccasin": [255, 228, 181],
    "navajowhite": [255, 222, 173],
    "navy": [0, 0, 128],
    "oldlace": [253, 245, 230],
    "olive": [128, 128, 0],
    "olivedrab": [107, 142, 35],
    "orange": [255, 165, 0],
    "orangered": [255, 69, 0],
    "orchid": [218, 112, 214],
    "palegoldenrod": [238, 232, 170],
    "palegreen": [152, 251, 152],
    "paleturquoise": [175, 238, 238],
    "palevioletred": [219, 112, 147],
    "papayawhip": [255, 239, 213],
    "peachpuff": [255, 218, 185],
    "peru": [205, 133, 63],
    "pink": [255, 192, 203],
    "plum": [221, 160, 221],
    "powderblue": [176, 224, 230],
    "purple": [128, 0, 128],
    "rebeccapurple": [102, 51, 153],
    "red": [255, 0, 0],
    "rosybrown": [188, 143, 143],
    "royalblue": [65, 105, 225],
    "saddlebrown": [139, 69, 19],
    "salmon": [250, 128, 114],
    "sandybrown": [244, 164, 96],
    "seagreen": [46, 139, 87],
    "seashell": [255, 245, 238],
    "sienna": [160, 82, 45],
    "silver": [192, 192, 192],
    "skyblue": [135, 206, 235],
    "slateblue": [106, 90, 205],
    "slategray": [112, 128, 144],
    "slategrey": [112, 128, 144],
    "snow": [255, 250, 250],
    "springgreen": [0, 255, 127],
    "steelblue": [70, 130, 180],
    "tan": [210, 180, 140],
    "teal": [0, 128, 128],
    "thistle": [216, 191, 216],
    "tomato": [255, 99, 71],
    "turquoise": [64, 224, 208],
    "violet": [238, 130, 238],
    "wheat": [245, 222, 179],
    "white": [255, 255, 255],
    "whitesmoke": [245, 245, 245],
    "yellow": [255, 255, 0],
    "yellowgreen": [154, 205, 50]
  };
},10076,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},10078,[10081]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var conversions = _$$_REQUIRE(_dependencyMap[0]);

  function buildGraph() {
    var graph = {};
    var models = Object.keys(conversions);

    for (var len = models.length, i = 0; i < len; i++) {
      graph[models[i]] = {
        distance: -1,
        parent: null
      };
    }

    return graph;
  }

  function deriveBFS(fromModel) {
    var graph = buildGraph();
    var queue = [fromModel];
    graph[fromModel].distance = 0;

    while (queue.length) {
      var current = queue.pop();
      var adjacents = Object.keys(conversions[current]);

      for (var len = adjacents.length, i = 0; i < len; i++) {
        var adjacent = adjacents[i];
        var node = graph[adjacent];

        if (node.distance === -1) {
          node.distance = graph[current].distance + 1;
          node.parent = current;
          queue.unshift(adjacent);
        }
      }
    }

    return graph;
  }

  function link(from, to) {
    return function (args) {
      return to(from(args));
    };
  }

  function wrapConversion(toModel, graph) {
    var path = [graph[toModel].parent, toModel];
    var fn = conversions[graph[toModel].parent][toModel];
    var cur = graph[toModel].parent;

    while (graph[cur].parent) {
      path.unshift(graph[cur].parent);
      fn = link(conversions[graph[cur].parent][cur], fn);
      cur = graph[cur].parent;
    }

    fn.conversion = path;
    return fn;
  }

  module.exports = function (fromModel) {
    var graph = deriveBFS(fromModel);
    var conversion = {};
    var models = Object.keys(graph);

    for (var len = models.length, i = 0; i < len; i++) {
      var toModel = models[i];
      var node = graph[toModel];

      if (node.parent === null) {
        continue;
      }

      conversion[toModel] = wrapConversion(toModel, graph);
    }

    return conversion;
  };
},10079,[10073]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},10081,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "getStatusBarHeight", {
    enumerable: true,
    get: function get() {
      return _reactNativeStatusBarHeight.getStatusBarHeight;
    }
  });
  Object.defineProperty(exports, "BackgroundImage", {
    enumerable: true,
    get: function get() {
      return _BackgroundImage.default;
    }
  });
  Object.defineProperty(exports, "colors", {
    enumerable: true,
    get: function get() {
      return _colors.default;
    }
  });
  Object.defineProperty(exports, "colorsDark", {
    enumerable: true,
    get: function get() {
      return _colorsDark.default;
    }
  });
  Object.defineProperty(exports, "fonts", {
    enumerable: true,
    get: function get() {
      return _fonts.default;
    }
  });
  Object.defineProperty(exports, "ThemeProvider", {
    enumerable: true,
    get: function get() {
      return _ThemeProvider.default;
    }
  });
  Object.defineProperty(exports, "ThemeConsumer", {
    enumerable: true,
    get: function get() {
      return _ThemeProvider.ThemeConsumer;
    }
  });
  Object.defineProperty(exports, "ThemeContext", {
    enumerable: true,
    get: function get() {
      return _ThemeProvider.ThemeContext;
    }
  });
  Object.defineProperty(exports, "withTheme", {
    enumerable: true,
    get: function get() {
      return _withTheme.default;
    }
  });

  var _reactNativeStatusBarHeight = _$$_REQUIRE(_dependencyMap[2]);

  var _BackgroundImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _colorsDark = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _fonts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ThemeProvider = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _withTheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
},10082,[14308,14305,10085,10088,10091,10094,10097,10100,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getStatusBarHeight = getStatusBarHeight;
  exports.isExpo = exports.isIPhoneWithMonobrow = exports.isIPhone12Max = exports.isIPhone12 = exports.isIPhoneXMax = exports.isIPhoneX = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var STATUSBAR_DEFAULT_HEIGHT = 20;
  var STATUSBAR_X_HEIGHT = 44;
  var STATUSBAR_IP12_HEIGHT = 47;
  var STATUSBAR_IP12MAX_HEIGHT = 47;
  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XSMAX_WIDTH = 414;
  var XSMAX_HEIGHT = 896;
  var IP12_WIDTH = 390;
  var IP12_HEIGHT = 844;
  var IP12MAX_WIDTH = 428;
  var IP12MAX_HEIGHT = 926;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      W_HEIGHT = _Dimensions$get.height,
      W_WIDTH = _Dimensions$get.width;

  var statusBarHeight = STATUSBAR_DEFAULT_HEIGHT;
  var isIPhoneX_v = false;
  var isIPhoneXMax_v = false;
  var isIPhone12_v = false;
  var isIPhone12Max_v = false;
  var isIPhoneWithMonobrow_v = false;

  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS) {
    if (W_WIDTH === X_WIDTH && W_HEIGHT === X_HEIGHT) {
      isIPhoneWithMonobrow_v = true;
      isIPhoneX_v = true;
      statusBarHeight = STATUSBAR_X_HEIGHT;
    } else if (W_WIDTH === XSMAX_WIDTH && W_HEIGHT === XSMAX_HEIGHT) {
      isIPhoneWithMonobrow_v = true;
      isIPhoneXMax_v = true;
      statusBarHeight = STATUSBAR_X_HEIGHT;
    } else if (W_WIDTH === IP12_WIDTH && W_HEIGHT === IP12_HEIGHT) {
      isIPhoneWithMonobrow_v = true;
      isIPhone12_v = true;
      statusBarHeight = STATUSBAR_IP12_HEIGHT;
    } else if (W_WIDTH === IP12MAX_WIDTH && W_HEIGHT === IP12MAX_HEIGHT) {
      isIPhoneWithMonobrow_v = true;
      isIPhone12Max_v = true;
      statusBarHeight = STATUSBAR_IP12MAX_HEIGHT;
    }
  }

  var isIPhoneX = function isIPhoneX() {
    return isIPhoneX_v;
  };

  exports.isIPhoneX = isIPhoneX;

  var isIPhoneXMax = function isIPhoneXMax() {
    return isIPhoneXMax_v;
  };

  exports.isIPhoneXMax = isIPhoneXMax;

  var isIPhone12 = function isIPhone12() {
    return isIPhone12_v;
  };

  exports.isIPhone12 = isIPhone12;

  var isIPhone12Max = function isIPhone12Max() {
    return isIPhone12Max_v;
  };

  exports.isIPhone12Max = isIPhone12Max;

  var isIPhoneWithMonobrow = function isIPhoneWithMonobrow() {
    return isIPhoneWithMonobrow_v;
  };

  exports.isIPhoneWithMonobrow = isIPhoneWithMonobrow;

  var getExpoRoot = function getExpoRoot() {
    return global.Expo || global.__expo || global.__exponent;
  };

  var isExpo = function isExpo() {
    return getExpoRoot() !== undefined;
  };

  exports.isExpo = isExpo;

  function getStatusBarHeight(skipAndroid) {
    return _reactNative.Platform.select({
      ios: statusBarHeight,
      android: skipAndroid ? 0 : _reactNative.StatusBar.currentHeight,
      default: 0
    });
  }
},10085,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var BackgroundImage = _reactNative.ImageBackground || _reactNative.Image;
  var _default = BackgroundImage;
  exports.default = _default;
},10088,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = {
    primary: '#2089dc',
    secondary: '#ca71eb',
    white: '#ffffff',
    black: '#242424',
    grey0: '#393e42',
    grey1: '#43484d',
    grey2: '#5e6977',
    grey3: '#86939e',
    grey4: '#bdc6cf',
    grey5: '#e1e8ee',
    greyOutline: '#bbb',
    searchBg: '#303337',
    success: '#52c41a',
    error: '#ff190c',
    warning: '#faad14',
    disabled: 'hsl(208, 8%, 90%)',
    divider: _reactNative.StyleSheet.hairlineWidth < 1 ? '#bcbbc1' : 'rgba(0, 0, 0, 0.12)',
    platform: {
      ios: {
        primary: '#007aff',
        secondary: '#5856d6',
        grey: '#7d7d7d',
        searchBg: '#dcdce1',
        success: '#4cd964',
        error: '#ff3b30',
        warning: '#ffcc00'
      },
      android: {
        primary: '#2196f3',
        secondary: '#9C27B0',
        grey: 'rgba(0, 0, 0, 0.54)',
        success: '#4caf50',
        error: '#f44336',
        warning: '#ffeb3b'
      },
      web: {
        primary: '#2089dc',
        secondary: '#ca71eb',
        grey: '#393e42',
        searchBg: '#303337',
        success: '#52c41a',
        error: '#ff190c',
        warning: '#faad14'
      }
    }
  };
  exports.default = _default;
},10091,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _default = {
    primary: '#439ce0',
    secondary: '#aa49eb',
    white: '#080808',
    black: '#f2f2f2',
    grey5: '#393e42',
    grey4: '#43484d',
    grey3: '#5e6977',
    grey2: '#86939e',
    grey1: '#bdc6cf',
    grey0: '#e1e8ee',
    greyOutline: '#bbb',
    searchBg: '#303337',
    success: '#439946',
    error: '#bf2c24',
    warning: '#cfbe27',
    disabled: 'hsl(208, 8%, 90%)',
    divider: _reactNative.StyleSheet.hairlineWidth < 1 ? '#84838a' : 'rgba(0, 0, 0, 0.12)',
    platform: {
      ios: {
        primary: '#1b262c',
        secondary: '#2089dc',
        grey: '#ffffff',
        searchBg: '#393e42',
        success: '#439946',
        error: '#bf2c24',
        warning: '#cfbe27'
      },
      android: {
        primary: '#1b262c',
        secondary: '#2089dc',
        grey: '#393e42',
        success: '#439946',
        error: '#bf2c24',
        warning: '#cfbe27'
      }
    }
  };
  exports.default = _default;
},10094,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    android: {
      regular: {
        fontFamily: 'sans-serif',
        fontWeight: 'normal'
      },
      light: {
        fontFamily: 'sans-serif-light',
        fontWeight: 'normal'
      },
      condensed: {
        fontFamily: 'sans-serif-condensed',
        fontWeight: 'normal'
      },
      condensed_light: {
        fontFamily: 'sans-serif-condensed',
        fontWeight: 'light'
      },
      black: {
        fontFamily: 'sans-serif',
        fontWeight: 'bold'
      },
      thin: {
        fontFamily: 'sans-serif-thin',
        fontWeight: 'normal'
      },
      medium: {
        fontFamily: 'sans-serif-medium',
        fontWeight: 'normal'
      },
      bold: {
        fontFamily: 'sans-serif',
        fontWeight: 'bold'
      }
    },
    default: {}
  };
  exports.default = _default;
},10097,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ThemeConsumer = exports.default = exports.ThemeContext = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _deepmerge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _colorsDark = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var ThemeContext = _react.default.createContext({
    theme: {
      colors: _colors.default
    }
  });

  exports.ThemeContext = ThemeContext;

  var ThemeProvider = function (_React$Component) {
    (0, _inherits2.default)(ThemeProvider, _React$Component);

    function ThemeProvider(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ThemeProvider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ThemeProvider).call(this, props));

      _this.updateTheme = function (updates) {
        _this.setState(function (_ref) {
          var theme = _ref.theme;
          return {
            theme: (0, _deepmerge.default)(theme, updates)
          };
        });
      };

      _this.replaceTheme = function (theme) {
        _this.setState(function () {
          return {
            theme: (0, _deepmerge.default)(_this.defaultTheme, theme)
          };
        });
      };

      _this.getTheme = function () {
        return _this.state.theme;
      };

      var defaultColors = props.useDark ? _colorsDark.default : _colors.default;
      _this.defaultTheme = (0, _deepmerge.default)({
        colors: defaultColors
      }, props.theme);
      _this.state = {
        theme: _this.defaultTheme,
        useDark: props.useDark
      };
      return _this;
    }

    (0, _createClass2.default)(ThemeProvider, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(ThemeContext.Provider, {
          value: {
            theme: this.state.theme,
            updateTheme: this.updateTheme,
            replaceTheme: this.replaceTheme
          }
        }, this.props.children);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, state) {
        var useDark = props.useDark;

        if (useDark !== state.useDark) {
          var defaultColors = useDark ? _colorsDark.default : _colors.default;
          return {
            theme: (0, _deepmerge.default)(state.theme, {
              colors: defaultColors
            }),
            useDark: useDark
          };
        }

        return null;
      }
    }]);
    return ThemeProvider;
  }(_react.default.Component);

  exports.default = ThemeProvider;
  ThemeProvider.propTypes = {
    theme: _propTypes.default.object,
    children: _propTypes.default.node.isRequired,
    useDark: _propTypes.default.bool
  };
  ThemeProvider.defaultProps = {
    theme: {},
    useDark: false
  };
  var ThemeConsumer = ThemeContext.Consumer;
  exports.ThemeConsumer = ThemeConsumer;
},10100,[14305,14320,14323,14371,14377,14386,10297,10318,10103,10091,10094]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var isMergeableObject = function isMergeableObject(value) {
    return isNonNullObject(value) && !isSpecial(value);
  };

  function isNonNullObject(value) {
    return !!value && typeof value === 'object';
  }

  function isSpecial(value) {
    var stringValue = Object.prototype.toString.call(value);
    return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
  }

  var canUseSymbol = typeof Symbol === 'function' && (typeof Symbol === "function" ? Symbol.for : "@@for");
  var REACT_ELEMENT_TYPE = canUseSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")('react.element') : 0xeac7;

  function isReactElement(value) {
    return value.$$typeof === REACT_ELEMENT_TYPE;
  }

  function emptyTarget(val) {
    return Array.isArray(val) ? [] : {};
  }

  function cloneUnlessOtherwiseSpecified(value, options) {
    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
  }

  function defaultArrayMerge(target, source, options) {
    return target.concat(source).map(function (element) {
      return cloneUnlessOtherwiseSpecified(element, options);
    });
  }

  function getMergeFunction(key, options) {
    if (!options.customMerge) {
      return deepmerge;
    }

    var customMerge = options.customMerge(key);
    return typeof customMerge === 'function' ? customMerge : deepmerge;
  }

  function getEnumerableOwnPropertySymbols(target) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
      return target.propertyIsEnumerable(symbol);
    }) : [];
  }

  function getKeys(target) {
    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
  }

  function propertyIsOnObject(object, property) {
    try {
      return property in object;
    } catch (_) {
      return false;
    }
  }

  function propertyIsUnsafe(target, key) {
    return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
  }

  function mergeObject(target, source, options) {
    var destination = {};

    if (options.isMergeableObject(target)) {
      getKeys(target).forEach(function (key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
      });
    }

    getKeys(source).forEach(function (key) {
      if (propertyIsUnsafe(target, key)) {
        return;
      }

      if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
        destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
      } else {
        destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
      }
    });
    return destination;
  }

  function deepmerge(target, source, options) {
    options = options || {};
    options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    if (!sourceAndTargetTypesMatch) {
      return cloneUnlessOtherwiseSpecified(source, options);
    } else if (sourceIsArray) {
      return options.arrayMerge(target, source, options);
    } else {
      return mergeObject(target, source, options);
    }
  }

  deepmerge.all = function deepmergeAll(array, options) {
    if (!Array.isArray(array)) {
      throw new Error('first argument should be an array');
    }

    return array.reduce(function (prev, next) {
      return deepmerge(prev, next, options);
    }, {});
  };

  var deepmerge_1 = deepmerge;
  module.exports = deepmerge_1;
},10103,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _deepmerge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ThemeProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _theme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var isClassComponent = function isClassComponent(Component) {
    return Boolean(Component.prototype && Component.prototype.isReactComponent);
  };

  var withTheme = function withTheme(WrappedComponent, themeKey) {
    var ThemedComponent = function (_React$Component) {
      (0, _inherits2.default)(ThemedComponent, _React$Component);

      function ThemedComponent() {
        (0, _classCallCheck2.default)(this, ThemedComponent);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ThemedComponent).apply(this, arguments));
      }

      (0, _createClass2.default)(ThemedComponent, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              forwardedRef = _this$props.forwardedRef,
              children = _this$props.children,
              rest = (0, _objectWithoutProperties2.default)(_this$props, ["forwardedRef", "children"]);
          return _react.default.createElement(_ThemeProvider.ThemeConsumer, null, function (context) {
            if (!context) {
              var _props = (0, _objectSpread2.default)({}, rest, {
                theme: _theme.default,
                children: children
              });

              return isClassComponent(WrappedComponent) ? _react.default.createElement(WrappedComponent, (0, _extends2.default)({
                ref: forwardedRef
              }, _props)) : _react.default.createElement(WrappedComponent, _props);
            }

            var theme = context.theme,
                updateTheme = context.updateTheme,
                replaceTheme = context.replaceTheme;
            var props = (0, _objectSpread2.default)({
              theme: theme,
              updateTheme: updateTheme,
              replaceTheme: replaceTheme
            }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest, {
              clone: false
            }), {
              children: children
            });

            if (isClassComponent(WrappedComponent)) {
              return _react.default.createElement(WrappedComponent, (0, _extends2.default)({
                ref: forwardedRef
              }, props));
            }

            return _react.default.createElement(WrappedComponent, props);
          });
        }
      }]);
      return ThemedComponent;
    }(_react.default.Component);

    var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');

    if (isClassComponent(WrappedComponent)) {
      var forwardRef = function forwardRef(props, ref) {
        return _react.default.createElement(ThemedComponent, (0, _extends2.default)({}, props, {
          forwardedRef: ref
        }));
      };

      forwardRef.displayName = name;
      return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(forwardRef), WrappedComponent);
    }

    ThemedComponent.displayName = name;
    return ThemedComponent;
  };

  var _default = withTheme;
  exports.default = _default;
},10106,[14305,14344,14314,14407,14320,14323,14371,14377,14386,10297,10103,10993,10100,10115]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},10109,[10112]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  var b = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      c = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      d = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      e = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      f = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      g = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      h = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      k = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      l = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.async_mode") : 60111,
      m = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      n = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      p = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      q = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      r = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      t = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116,
      v = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.block") : 60121,
      w = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental") : 60117,
      x = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder") : 60118,
      y = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.scope") : 60119;

  function z(a) {
    if ("object" === typeof a && null !== a) {
      var u = a.$$typeof;

      switch (u) {
        case c:
          switch (a = a.type, a) {
            case l:
            case m:
            case e:
            case g:
            case f:
            case p:
              return a;

            default:
              switch (a = a && a.$$typeof, a) {
                case k:
                case n:
                case t:
                case r:
                case h:
                  return a;

                default:
                  return u;
              }

          }

        case d:
          return u;
      }
    }
  }

  function A(a) {
    return z(a) === m;
  }

  exports.AsyncMode = l;
  exports.ConcurrentMode = m;
  exports.ContextConsumer = k;
  exports.ContextProvider = h;
  exports.Element = c;
  exports.ForwardRef = n;
  exports.Fragment = e;
  exports.Lazy = t;
  exports.Memo = r;
  exports.Portal = d;
  exports.Profiler = g;
  exports.StrictMode = f;
  exports.Suspense = p;

  exports.isAsyncMode = function (a) {
    return A(a) || z(a) === l;
  };

  exports.isConcurrentMode = A;

  exports.isContextConsumer = function (a) {
    return z(a) === k;
  };

  exports.isContextProvider = function (a) {
    return z(a) === h;
  };

  exports.isElement = function (a) {
    return "object" === typeof a && null !== a && a.$$typeof === c;
  };

  exports.isForwardRef = function (a) {
    return z(a) === n;
  };

  exports.isFragment = function (a) {
    return z(a) === e;
  };

  exports.isLazy = function (a) {
    return z(a) === t;
  };

  exports.isMemo = function (a) {
    return z(a) === r;
  };

  exports.isPortal = function (a) {
    return z(a) === d;
  };

  exports.isProfiler = function (a) {
    return z(a) === g;
  };

  exports.isStrictMode = function (a) {
    return z(a) === f;
  };

  exports.isSuspense = function (a) {
    return z(a) === p;
  };

  exports.isValidElementType = function (a) {
    return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
  };

  exports.typeOf = z;
},10112,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = {
    colors: _colors.default
  };
  exports.default = _default;
},10115,[14305,10091]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "color", {
    enumerable: true,
    get: function get() {
      return _color.default;
    }
  });
  Object.defineProperty(exports, "renderNode", {
    enumerable: true,
    get: function get() {
      return _renderNode.default;
    }
  });
  Object.defineProperty(exports, "getIconType", {
    enumerable: true,
    get: function get() {
      return _getIconType.default;
    }
  });
  Object.defineProperty(exports, "normalizeText", {
    enumerable: true,
    get: function get() {
      return _normalizeText.default;
    }
  });
  Object.defineProperty(exports, "nodeType", {
    enumerable: true,
    get: function get() {
      return _nodeType.default;
    }
  });
  Object.defineProperty(exports, "ImageSourceType", {
    enumerable: true,
    get: function get() {
      return _types.ImageSourceType;
    }
  });
  exports.conditionalStyle = exports.isIOS = exports.ScreenHeight = exports.ScreenWidth = exports.patchWebProps = undefined;

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _renderNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getIconType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _nodeType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _types = _$$_REQUIRE(_dependencyMap[8]);

  var Screen = _reactNative.Dimensions.get('window');

  var ScreenWidth = Screen.width;
  exports.ScreenWidth = ScreenWidth;
  var ScreenHeight = Screen.height;
  exports.ScreenHeight = ScreenHeight;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;

  var conditionalStyle = function conditionalStyle(condition, style) {
    return condition ? style : {};
  };

  exports.conditionalStyle = conditionalStyle;

  var patchWebProps = function patchWebProps(_ref) {
    var updateTheme = _ref.updateTheme,
        replaceTheme = _ref.replaceTheme,
        onClear = _ref.onClear,
        rest = (0, _objectWithoutProperties2.default)(_ref, ["updateTheme", "replaceTheme", "onClear"]);
    return rest;
  };

  exports.patchWebProps = patchWebProps;
},10118,[14305,14407,10033,11518,10121,10124,10313,10328,10331]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var renderNode = function renderNode(Component, content, defaultProps) {
    if (content == null || content === false) {
      return null;
    }

    if (_react.default.isValidElement(content)) {
      return content;
    }

    if (typeof content === 'function') {
      return content();
    }

    if (content === true) {
      return _react.default.createElement(Component, defaultProps);
    }

    if (typeof content === 'string') {
      if (content.length === 0) {
        return null;
      }

      return _react.default.createElement(Component, defaultProps, content);
    }

    if (typeof content === 'number') {
      return _react.default.createElement(Component, defaultProps, content);
    }

    return _react.default.createElement(Component, (0, _extends2.default)({}, defaultProps, content));
  };

  var _default = renderNode;
  exports.default = _default;
},10121,[14305,14344,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.registerCustomIconType = undefined;

  var _Zocial = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Octicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _MaterialIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _Ionicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _Foundation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _EvilIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Entypo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _FontAwesome = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _FontAwesome2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _SimpleLineIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Feather = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AntDesign = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Fontisto = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var customIcons = {};

  var registerCustomIconType = function registerCustomIconType(id, customIcon) {
    customIcons[id] = customIcon;
  };

  exports.registerCustomIconType = registerCustomIconType;

  var _default = function _default(type) {
    switch (type) {
      case 'zocial':
        return _Zocial.default;

      case 'octicon':
        return _Octicons.default;

      case 'material':
        return _MaterialIcons.default;

      case 'material-community':
        return _MaterialCommunityIcons.default;

      case 'ionicon':
        return _Ionicons.default;

      case 'foundation':
        return _Foundation.default;

      case 'evilicon':
        return _EvilIcons.default;

      case 'entypo':
        return _Entypo.default;

      case 'font-awesome':
        return _FontAwesome.default;

      case 'font-awesome-5':
        return _FontAwesome2.default;

      case 'simple-line-icon':
        return _SimpleLineIcons.default;

      case 'feather':
        return _Feather.default;

      case 'antdesign':
      case 'ant-design':
        return _AntDesign.default;

      case 'fontisto':
        return _Fontisto.default;

      default:
        if (Object.prototype.hasOwnProperty.call(customIcons, type)) {
          return customIcons[type];
        }

        return _MaterialIcons.default;
    }
  };

  exports.default = _default;
},10124,[14305,10127,10226,10232,10238,10244,10250,10256,10262,10268,10274,10289,10295,10301,10307]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Zocial = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Zocial.default, 'zocial', 'Zocial.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10127,[14305,10130,10223]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconSet;
  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _createIconSourceCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _tabBarItemIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;
  exports.NativeIconAPI = NativeIconAPI;
  var DEFAULT_ICON_SIZE = 12;
  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;
  var DEFAULT_ICON_COLOR = 'black';
  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;

  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {
    var fontBasename = fontFile ? fontFile.replace(/\.(otf|ttf)$/, '') : fontFamily;

    var fontReference = _reactNative.Platform.select({
      windows: "/Assets/" + fontFile + "#" + fontFamily,
      android: fontBasename,
      web: fontBasename,
      default: fontFamily
    });

    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));

    var Icon = function (_PureComponent) {
      (0, _inherits2.default)(Icon, _PureComponent);

      function Icon() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, Icon);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this.root = null;

        _this.handleRef = function (ref) {
          _this.root = ref;
        };

        return _this;
      }

      (0, _createClass2.default)(Icon, [{
        key: "setNativeProps",
        value: function setNativeProps(nativeProps) {
          if (this.root) {
            this.root.setNativeProps(nativeProps);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props,
              name = _this$props.name,
              size = _this$props.size,
              color = _this$props.color,
              style = _this$props.style,
              children = _this$props.children,
              props = (0, _objectWithoutProperties2.default)(_this$props, ["name", "size", "color", "style", "children"]);
          var glyph = name ? glyphMap[name] || '?' : '';

          if (typeof glyph === 'number') {
            glyph = String.fromCodePoint(glyph);
          }

          var styleDefaults = {
            fontSize: size,
            color: color
          };
          var styleOverrides = {
            fontFamily: fontReference,
            fontWeight: 'normal',
            fontStyle: 'normal'
          };
          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];
          props.ref = this.handleRef;
          return _react.default.createElement(_reactNative.Text, props, glyph, children);
        }
      }]);
      return Icon;
    }(_react.PureComponent);

    Icon.propTypes = {
      allowFontScaling: _propTypes.default.bool,
      name: IconNamePropType,
      size: _propTypes.default.number,
      color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
      children: _propTypes.default.node,
      style: _propTypes.default.any
    };
    Icon.defaultProps = {
      size: DEFAULT_ICON_SIZE,
      allowFontScaling: false
    };
    var imageSourceCache = (0, _createIconSourceCache.default)();

    function resolveGlyph(name) {
      var glyph = glyphMap[name] || '?';

      if (typeof glyph === 'number') {
        return String.fromCodePoint(glyph);
      }

      return glyph;
    }

    function getImageSourceSync(name) {
      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;
      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;
      (0, _ensureNativeModuleAvailable.default)();
      var glyph = resolveGlyph(name);
      var processedColor = (0, _reactNative.processColor)(color);
      var cacheKey = glyph + ":" + size + ":" + processedColor;

      if (imageSourceCache.has(cacheKey)) {
        return imageSourceCache.get(cacheKey);
      }

      try {
        var imagePath = NativeIconAPI.getImageForFontSync(fontReference, glyph, size, processedColor);
        var value = {
          uri: imagePath,
          scale: _reactNative.PixelRatio.get()
        };
        imageSourceCache.setValue(cacheKey, value);
        return value;
      } catch (error) {
        imageSourceCache.setError(cacheKey, error);
        throw error;
      }
    }

    function getImageSource(name) {
      var size,
          color,
          glyph,
          processedColor,
          cacheKey,
          imagePath,
          value,
          _args = arguments;
      return _regenerator.default.async(function getImageSource$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              size = _args.length > 1 && _args[1] !== undefined ? _args[1] : DEFAULT_ICON_SIZE;
              color = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_ICON_COLOR;
              (0, _ensureNativeModuleAvailable.default)();
              glyph = resolveGlyph(name);
              processedColor = (0, _reactNative.processColor)(color);
              cacheKey = glyph + ":" + size + ":" + processedColor;

              if (!imageSourceCache.has(cacheKey)) {
                _context.next = 8;
                break;
              }

              return _context.abrupt("return", imageSourceCache.get(cacheKey));

            case 8:
              _context.prev = 8;
              _context.next = 11;
              return _regenerator.default.awrap(NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor));

            case 11:
              imagePath = _context.sent;
              value = {
                uri: imagePath,
                scale: _reactNative.PixelRatio.get()
              };
              imageSourceCache.setValue(cacheKey, value);
              return _context.abrupt("return", value);

            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](8);
              imageSourceCache.setError(cacheKey, _context.t0);
              throw _context.t0;

            case 21:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, [[8, 17]]);
    }

    function loadFont() {
      var file,
          _args2 = arguments;
      return _regenerator.default.async(function loadFont$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              file = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : fontFile;

              if (!(_reactNative.Platform.OS === 'ios')) {
                _context2.next = 7;
                break;
              }

              (0, _ensureNativeModuleAvailable.default)();

              if (file) {
                _context2.next = 5;
                break;
              }

              throw new Error('Unable to load font, because no file was specified. ');

            case 5:
              _context2.next = 7;
              return _regenerator.default.awrap(NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, (0, _toConsumableArray2.default)(file.split('.'))));

            case 7:
            case "end":
              return _context2.stop();
          }
        }
      });
    }

    function hasIcon(name) {
      return Object.prototype.hasOwnProperty.call(glyphMap, name);
    }

    function getRawGlyphMap() {
      return glyphMap;
    }

    function getFontFamily() {
      return fontReference;
    }

    Icon.Button = (0, _iconButton.default)(Icon);
    Icon.TabBarItem = (0, _tabBarItemIos.default)(IconNamePropType, getImageSource);
    Icon.TabBarItemIOS = Icon.TabBarItem;
    Icon.getImageSource = getImageSource;
    Icon.getImageSourceSync = getImageSourceSync;
    Icon.loadFont = loadFont;
    Icon.hasIcon = hasIcon;
    Icon.getRawGlyphMap = getRawGlyphMap;
    Icon.getFontFamily = getFontFamily;
    return Icon;
  }
},10130,[14308,14305,14359,14674,14407,14320,14323,14371,14377,14386,10297,10318,10133,10136,10139,10142,10217]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  Object.keys(_reactNative).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _reactNative[key];
      }
    });
  });
},10133,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ensureNativeModuleAvailable;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;

  function ensureNativeModuleAvailable() {
    if (!NativeIconAPI) {
      if (_reactNative.Platform.OS === 'android') {
        throw new Error('RNVectorIconsModule not available, did you properly integrate the module? Try running `react-native link react-native-vector-icons` and recompiling.');
      }

      throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a? Try running `react-native link react-native-vector-icons` and recompiling.');
    }
  }
},10136,[10133]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconSourceCache;
  var TYPE_VALUE = 'value';
  var TYPE_ERROR = 'error';

  function createIconSourceCache() {
    var cache = new Map();

    var setValue = function setValue(key, value) {
      return cache.set(key, {
        type: TYPE_VALUE,
        data: value
      });
    };

    var setError = function setError(key, error) {
      return cache.set(key, {
        type: TYPE_ERROR,
        data: error
      });
    };

    var has = function has(key) {
      return cache.has(key);
    };

    var get = function get(key) {
      if (!cache.has(key)) {
        return undefined;
      }

      var _cache$get = cache.get(key),
          type = _cache$get.type,
          data = _cache$get.data;

      if (type === TYPE_ERROR) {
        throw data;
      }

      return data;
    };

    return {
      setValue: setValue,
      setError: setError,
      has: has,
      get: get
    };
  }
},10139,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconButtonComponent;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _isString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _omit = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      justifyContent: 'flex-start',
      alignItems: 'center',
      padding: 8
    },
    touchable: {
      overflow: 'hidden'
    },
    icon: {
      marginRight: 10
    },
    text: {
      fontWeight: '600',
      backgroundColor: 'transparent'
    }
  });

  var IOS7_BLUE = '#007AFF';
  var TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];
  var TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];

  function createIconButtonComponent(Icon) {
    var _class, _temp;

    return _temp = _class = function (_PureComponent) {
      (0, _inherits2.default)(IconButton, _PureComponent);

      function IconButton() {
        (0, _classCallCheck2.default)(this, IconButton);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconButton).apply(this, arguments));
      }

      (0, _createClass2.default)(IconButton, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              style = _this$props.style,
              iconStyle = _this$props.iconStyle,
              children = _this$props.children,
              restProps = (0, _objectWithoutProperties2.default)(_this$props, ["style", "iconStyle", "children"]);
          var iconProps = (0, _pick.default)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');
          var touchableProps = (0, _pick.default)(restProps, TOUCHABLE_PROP_NAMES);
          var props = (0, _omit.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
          iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
          var colorStyle = (0, _pick.default)(this.props, 'color');
          var blockStyle = (0, _pick.default)(this.props, 'backgroundColor', 'borderRadius');
          return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
            style: [styles.touchable, blockStyle]
          }, touchableProps), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.container, blockStyle, style]
          }, props), _react.default.createElement(Icon, iconProps), (0, _isString.default)(children) ? _react.default.createElement(_reactNative.Text, {
            style: [styles.text, colorStyle]
          }, children) : children));
        }
      }]);
      return IconButton;
    }(_react.PureComponent), _class.propTypes = {
      backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
      borderRadius: _propTypes.default.number,
      color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
      size: _propTypes.default.number,
      iconStyle: _propTypes.default.any,
      style: _propTypes.default.any,
      children: _propTypes.default.node
    }, _class.defaultProps = {
      backgroundColor: IOS7_BLUE,
      borderRadius: 5,
      color: 'white',
      size: 20
    }, _temp;
  }
},10142,[14308,14305,14344,14407,14320,14323,14371,14377,14386,12208,10145,12244,10297,10318,10133]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayMap = _$$_REQUIRE(_dependencyMap[0]),
      baseClone = _$$_REQUIRE(_dependencyMap[1]),
      baseUnset = _$$_REQUIRE(_dependencyMap[2]),
      castPath = _$$_REQUIRE(_dependencyMap[3]),
      copyObject = _$$_REQUIRE(_dependencyMap[4]),
      customOmitClone = _$$_REQUIRE(_dependencyMap[5]),
      flatRest = _$$_REQUIRE(_dependencyMap[6]),
      getAllKeysIn = _$$_REQUIRE(_dependencyMap[7]);

  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;
  var omit = flatRest(function (object, paths) {
    var result = {};

    if (object == null) {
      return result;
    }

    var isDeep = false;
    paths = arrayMap(paths, function (path) {
      path = castPath(path, object);
      isDeep || (isDeep = path.length > 1);
      return path;
    });
    copyObject(object, getAllKeysIn(object), result);

    if (isDeep) {
      result = baseClone(result, 7, customOmitClone);
    }

    var length = paths.length;

    while (length--) {
      baseUnset(result, paths[length]);
    }

    return result;
  });
  module.exports = omit;
},10145,[11716,10148,10205,12010,12157,10214,12256,12304]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Stack = _$$_REQUIRE(_dependencyMap[0]),
      arrayEach = _$$_REQUIRE(_dependencyMap[1]),
      assignValue = _$$_REQUIRE(_dependencyMap[2]),
      baseAssign = _$$_REQUIRE(_dependencyMap[3]),
      baseAssignIn = _$$_REQUIRE(_dependencyMap[4]),
      cloneBuffer = _$$_REQUIRE(_dependencyMap[5]),
      copyArray = _$$_REQUIRE(_dependencyMap[6]),
      copySymbols = _$$_REQUIRE(_dependencyMap[7]),
      copySymbolsIn = _$$_REQUIRE(_dependencyMap[8]),
      getAllKeys = _$$_REQUIRE(_dependencyMap[9]),
      getAllKeysIn = _$$_REQUIRE(_dependencyMap[10]),
      getTag = _$$_REQUIRE(_dependencyMap[11]),
      initCloneArray = _$$_REQUIRE(_dependencyMap[12]),
      initCloneByTag = _$$_REQUIRE(_dependencyMap[13]),
      initCloneObject = _$$_REQUIRE(_dependencyMap[14]),
      isArray = _$$_REQUIRE(_dependencyMap[15]),
      isBuffer = _$$_REQUIRE(_dependencyMap[16]),
      isMap = _$$_REQUIRE(_dependencyMap[17]),
      isObject = _$$_REQUIRE(_dependencyMap[18]),
      isSet = _$$_REQUIRE(_dependencyMap[19]),
      keys = _$$_REQUIRE(_dependencyMap[20]),
      keysIn = _$$_REQUIRE(_dependencyMap[21]);

  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

  function baseClone(value, bitmask, customizer, key, object, stack) {
    var result,
        isDeep = bitmask & CLONE_DEEP_FLAG,
        isFlat = bitmask & CLONE_FLAT_FLAG,
        isFull = bitmask & CLONE_SYMBOLS_FLAG;

    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }

    if (result !== undefined) {
      return result;
    }

    if (!isObject(value)) {
      return value;
    }

    var isArr = isArray(value);

    if (isArr) {
      result = initCloneArray(value);

      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag(value),
          isFunc = tag == funcTag || tag == genTag;

      if (isBuffer(value)) {
        return cloneBuffer(value, isDeep);
      }

      if (tag == objectTag || tag == argsTag || isFunc && !object) {
        result = isFlat || isFunc ? {} : initCloneObject(value);

        if (!isDeep) {
          return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }

        result = initCloneByTag(value, tag, isDeep);
      }
    }

    stack || (stack = new Stack());
    var stacked = stack.get(value);

    if (stacked) {
      return stacked;
    }

    stack.set(value, result);

    if (isSet(value)) {
      value.forEach(function (subValue) {
        result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
      });
    } else if (isMap(value)) {
      value.forEach(function (subValue, key) {
        result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
    }

    var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
    var props = isArr ? undefined : keysFunc(value);
    arrayEach(props || value, function (subValue, key) {
      if (props) {
        key = subValue;
        subValue = value[key];
      }

      assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
    return result;
  }

  module.exports = baseClone;
},10148,[11728,10151,12151,10154,10157,10160,12922,10163,10166,11899,12304,11977,10169,10172,10190,11908,11938,10193,11800,10199,11920,12139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }

    return array;
  }

  module.exports = arrayEach;
},10151,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var copyObject = _$$_REQUIRE(_dependencyMap[0]),
      keys = _$$_REQUIRE(_dependencyMap[1]);

  function baseAssign(object, source) {
    return object && copyObject(source, keys(source), object);
  }

  module.exports = baseAssign;
},10154,[12157,11920]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var copyObject = _$$_REQUIRE(_dependencyMap[0]),
      keysIn = _$$_REQUIRE(_dependencyMap[1]);

  function baseAssignIn(object, source) {
    return object && copyObject(source, keysIn(source), object);
  }

  module.exports = baseAssignIn;
},10157,[12157,12139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var root = _$$_REQUIRE(_dependencyMap[0]);

  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root.Buffer : undefined,
      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }

    var length = buffer.length,
        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
    buffer.copy(result);
    return result;
  }

  module.exports = cloneBuffer;
},10160,[11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var copyObject = _$$_REQUIRE(_dependencyMap[0]),
      getSymbols = _$$_REQUIRE(_dependencyMap[1]);

  function copySymbols(source, object) {
    return copyObject(source, getSymbols(source), object);
  }

  module.exports = copySymbols;
},10163,[12157,11911]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var copyObject = _$$_REQUIRE(_dependencyMap[0]),
      getSymbolsIn = _$$_REQUIRE(_dependencyMap[1]);

  function copySymbolsIn(source, object) {
    return copyObject(source, getSymbolsIn(source), object);
  }

  module.exports = copySymbolsIn;
},10166,[12157,12307]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function initCloneArray(array) {
    var length = array.length,
        result = new array.constructor(length);

    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
      result.index = array.index;
      result.input = array.input;
    }

    return result;
  }

  module.exports = initCloneArray;
},10169,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cloneArrayBuffer = _$$_REQUIRE(_dependencyMap[0]),
      cloneDataView = _$$_REQUIRE(_dependencyMap[1]),
      cloneRegExp = _$$_REQUIRE(_dependencyMap[2]),
      cloneSymbol = _$$_REQUIRE(_dependencyMap[3]),
      cloneTypedArray = _$$_REQUIRE(_dependencyMap[4]);

  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  function initCloneByTag(object, tag, isDeep) {
    var Ctor = object.constructor;

    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);

      case boolTag:
      case dateTag:
        return new Ctor(+object);

      case dataViewTag:
        return cloneDataView(object, isDeep);

      case float32Tag:
      case float64Tag:
      case int8Tag:
      case int16Tag:
      case int32Tag:
      case uint8Tag:
      case uint8ClampedTag:
      case uint16Tag:
      case uint32Tag:
        return cloneTypedArray(object, isDeep);

      case mapTag:
        return new Ctor();

      case numberTag:
      case stringTag:
        return new Ctor(object);

      case regexpTag:
        return cloneRegExp(object);

      case setTag:
        return new Ctor();

      case symbolTag:
        return cloneSymbol(object);
    }
  }

  module.exports = initCloneByTag;
},10172,[10175,10178,10181,10184,10187]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Uint8Array = _$$_REQUIRE(_dependencyMap[0]);

  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }

  module.exports = cloneArrayBuffer;
},10175,[11887]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cloneArrayBuffer = _$$_REQUIRE(_dependencyMap[0]);

  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }

  module.exports = cloneDataView;
},10178,[10175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var reFlags = /\w*$/;

  function cloneRegExp(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }

  module.exports = cloneRegExp;
},10181,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]);

  var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  function cloneSymbol(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }

  module.exports = cloneSymbol;
},10184,[11785]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var cloneArrayBuffer = _$$_REQUIRE(_dependencyMap[0]);

  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }

  module.exports = cloneTypedArray;
},10187,[10175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseCreate = _$$_REQUIRE(_dependencyMap[0]),
      getPrototype = _$$_REQUIRE(_dependencyMap[1]),
      isPrototype = _$$_REQUIRE(_dependencyMap[2]);

  function initCloneObject(object) {
    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
  }

  module.exports = initCloneObject;
},10190,[12892,12088,11965]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsMap = _$$_REQUIRE(_dependencyMap[0]),
      baseUnary = _$$_REQUIRE(_dependencyMap[1]),
      nodeUtil = _$$_REQUIRE(_dependencyMap[2]);

  var nodeIsMap = nodeUtil && nodeUtil.isMap;
  var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
  module.exports = isMap;
},10193,[10196,11956,11959]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getTag = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  var mapTag = '[object Map]';

  function baseIsMap(value) {
    return isObjectLike(value) && getTag(value) == mapTag;
  }

  module.exports = baseIsMap;
},10196,[11977,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsSet = _$$_REQUIRE(_dependencyMap[0]),
      baseUnary = _$$_REQUIRE(_dependencyMap[1]),
      nodeUtil = _$$_REQUIRE(_dependencyMap[2]);

  var nodeIsSet = nodeUtil && nodeUtil.isSet;
  var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
  module.exports = isSet;
},10199,[10202,11956,11959]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getTag = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  var setTag = '[object Set]';

  function baseIsSet(value) {
    return isObjectLike(value) && getTag(value) == setTag;
  }

  module.exports = baseIsSet;
},10202,[11977,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var castPath = _$$_REQUIRE(_dependencyMap[0]),
      last = _$$_REQUIRE(_dependencyMap[1]),
      parent = _$$_REQUIRE(_dependencyMap[2]),
      toKey = _$$_REQUIRE(_dependencyMap[3]);

  function baseUnset(object, path) {
    path = castPath(path, object);
    object = parent(object, path);
    return object == null || delete object[toKey(last(path))];
  }

  module.exports = baseUnset;
},10205,[12010,12445,10208,12034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGet = _$$_REQUIRE(_dependencyMap[0]),
      baseSlice = _$$_REQUIRE(_dependencyMap[1]);

  function parent(object, path) {
    return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
  }

  module.exports = parent;
},10208,[12007,10211]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function baseSlice(array, start, end) {
    var index = -1,
        length = array.length;

    if (start < 0) {
      start = -start > length ? 0 : length + start;
    }

    end = end > length ? length : end;

    if (end < 0) {
      end += length;
    }

    length = start > end ? 0 : end - start >>> 0;
    start >>>= 0;
    var result = Array(length);

    while (++index < length) {
      result[index] = array[index + start];
    }

    return result;
  }

  module.exports = baseSlice;
},10211,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isPlainObject = _$$_REQUIRE(_dependencyMap[0]);

  function customOmitClone(value) {
    return isPlainObject(value) ? undefined : value;
  }

  module.exports = customOmitClone;
},10214,[12085]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createTabBarItemIOSComponent;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];
  var SELECTED_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['selectedIconName', 'selectedIconColor']);

  var arePropsEqual = function arePropsEqual(keys) {
    return function (prevProps, nextProps) {
      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));
    };
  };

  var areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);
  var areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);

  function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {
    var _class, _temp;

    return _temp = _class = function (_PureComponent) {
      (0, _inherits2.default)(TabBarItemIOS, _PureComponent);

      function TabBarItemIOS() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2.default)(this, TabBarItemIOS);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabBarItemIOS)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _this.state = {
          icon: undefined,
          selectedIcon: undefined
        };
        return _this;
      }

      (0, _createClass2.default)(TabBarItemIOS, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.updateIconSource();
          this.updateSelectedIconSource();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (!areIconPropsEqual(prevProps, this.props)) {
            this.updateIconSource();
          }

          if (!areSelectedIconPropsEqual(prevProps, this.props)) {
            this.updateSelectedIconSource();
          }
        }
      }, {
        key: "updateIconSource",
        value: function updateIconSource() {
          var _this$props, iconName, iconSize, iconColor, icon;

          return _regenerator.default.async(function updateIconSource$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _this$props = this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;

                  if (!iconName) {
                    _context.next = 8;
                    break;
                  }

                  _context.next = 4;
                  return _regenerator.default.awrap(getImageSource(iconName, iconSize, iconColor));

                case 4:
                  icon = _context.sent;
                  this.setState({
                    icon: icon
                  });
                  _context.next = 9;
                  break;

                case 8:
                  if (this.state.icon) {
                    this.setState({
                      icon: undefined
                    });
                  }

                case 9:
                case "end":
                  return _context.stop();
              }
            }
          }, null, this);
        }
      }, {
        key: "updateSelectedIconSource",
        value: function updateSelectedIconSource() {
          var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;

          return _regenerator.default.async(function updateSelectedIconSource$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _this$props2 = this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;

                  if (!(selectedIconName || selectedIconColor)) {
                    _context2.next = 8;
                    break;
                  }

                  _context2.next = 4;
                  return _regenerator.default.awrap(getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor));

                case 4:
                  selectedIcon = _context2.sent;
                  this.setState({
                    selectedIcon: selectedIcon
                  });
                  _context2.next = 9;
                  break;

                case 8:
                  if (this.state.selectedIcon) {
                    this.setState({
                      selectedIcon: undefined
                    });
                  }

                case 9:
                case "end":
                  return _context2.stop();
              }
            }
          }, null, this);
        }
      }, {
        key: "render",
        value: function render() {
          return _react.default.createElement(_reactNative.TabBarIOS.Item, (0, _extends2.default)({}, this.state, this.props));
        }
      }]);
      return TabBarItemIOS;
    }(_react.PureComponent), _class.propTypes = {
      iconName: IconNamePropType.isRequired,
      selectedIconName: IconNamePropType,
      iconSize: _propTypes.default.number,
      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
      selectedIconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
    }, _class.defaultProps = {
      iconSize: 30
    }, _temp;
  }
},10217,[14308,14305,14344,14674,14320,14323,14371,14377,14386,10220,12244,10297,10318,10133]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsEqual = _$$_REQUIRE(_dependencyMap[0]);

  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }

  module.exports = isEqual;
},10220,[11860]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "acrobat": 61696,
  "amazon": 61697,
  "android": 61698,
  "angellist": 61699,
  "aol": 61700,
  "appnet": 61701,
  "appstore": 61702,
  "bitbucket": 61703,
  "bitcoin": 61704,
  "blogger": 61705,
  "buffer": 61706,
  "cal": 61707,
  "call": 61708,
  "cart": 61709,
  "chrome": 61710,
  "cloudapp": 61711,
  "creativecommons": 61712,
  "delicious": 61713,
  "digg": 61714,
  "disqus": 61715,
  "dribbble": 61716,
  "dropbox": 61717,
  "drupal": 61718,
  "dwolla": 61720,
  "email": 61721,
  "eventasaurus": 61722,
  "eventbrite": 61723,
  "eventful": 61724,
  "evernote": 61725,
  "facebook": 61726,
  "fivehundredpx": 61727,
  "flattr": 61728,
  "flickr": 61729,
  "forrst": 61730,
  "foursquare": 61731,
  "github": 61732,
  "gmail": 61733,
  "google": 61734,
  "googleplay": 61735,
  "googleplus": 61736,
  "gowalla": 61737,
  "grooveshark": 61738,
  "guest": 61739,
  "html5": 61740,
  "ie": 61741,
  "instagram": 61742,
  "instapaper": 61743,
  "intensedebate": 61744,
  "itunes": 61745,
  "klout": 61746,
  "lanyrd": 61747,
  "lastfm": 61748,
  "lego": 61749,
  "linkedin": 61750,
  "lkdto": 61751,
  "logmein": 61752,
  "macstore": 61753,
  "meetup": 61754,
  "myspace": 61755,
  "ninetyninedesigns": 61756,
  "openid": 61757,
  "opentable": 61758,
  "paypal": 61759,
  "persona": 61796,
  "pinboard": 61760,
  "pinterest": 61761,
  "plancast": 61762,
  "plurk": 61763,
  "pocket": 61764,
  "podcast": 61765,
  "posterous": 61766,
  "print": 61767,
  "quora": 61768,
  "reddit": 61769,
  "rss": 61770,
  "scribd": 61771,
  "skype": 61772,
  "smashing": 61773,
  "songkick": 61774,
  "soundcloud": 61775,
  "spotify": 61776,
  "stackoverflow": 61777,
  "statusnet": 61778,
  "steam": 61779,
  "stripe": 61780,
  "stumbleupon": 61781,
  "tumblr": 61782,
  "twitter": 61783,
  "viadeo": 61784,
  "vimeo": 61785,
  "vk": 61786,
  "weibo": 61787,
  "wikipedia": 61788,
  "windows": 61789,
  "wordpress": 61790,
  "xing": 61791,
  "yahoo": 61792,
  "ycombinator": 61793,
  "yelp": 61794,
  "youtube": 61795
};
},10223,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Octicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Octicons.default, 'Octicons', 'Octicons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10226,[14305,10130,10229]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "alert": 61696,
  "archive": 61697,
  "arrow-both": 61698,
  "arrow-down": 61699,
  "arrow-left": 61700,
  "arrow-right": 61701,
  "arrow-small-down": 61702,
  "arrow-small-left": 61703,
  "arrow-small-right": 61704,
  "arrow-small-up": 61705,
  "arrow-up": 61706,
  "beaker": 61707,
  "bell": 61708,
  "bold": 61709,
  "book": 61710,
  "bookmark": 61711,
  "briefcase": 61712,
  "broadcast": 61713,
  "browser": 61714,
  "bug": 61715,
  "calendar": 61716,
  "check": 61717,
  "checklist": 61718,
  "chevron-down": 61719,
  "chevron-left": 61720,
  "chevron-right": 61721,
  "chevron-up": 61722,
  "circle-slash": 61723,
  "circuit-board": 61724,
  "clippy": 61725,
  "clock": 61726,
  "cloud-download": 61727,
  "cloud-upload": 61728,
  "code": 61729,
  "comment": 61730,
  "comment-discussion": 61731,
  "credit-card": 61732,
  "dash": 61733,
  "dashboard": 61734,
  "database": 61735,
  "desktop-download": 61736,
  "device-camera": 61737,
  "device-camera-video": 61738,
  "device-desktop": 61739,
  "device-mobile": 61740,
  "diff": 61741,
  "diff-added": 61742,
  "diff-ignored": 61743,
  "diff-modified": 61744,
  "diff-removed": 61745,
  "diff-renamed": 61746,
  "ellipsis": 61747,
  "eye": 61748,
  "eye-closed": 61749,
  "file": 61750,
  "file-binary": 61751,
  "file-code": 61752,
  "file-directory": 61753,
  "file-media": 61754,
  "file-pdf": 61755,
  "file-submodule": 61756,
  "file-symlink-directory": 61757,
  "file-symlink-file": 61758,
  "file-zip": 61759,
  "flame": 61760,
  "fold": 61761,
  "fold-down": 61762,
  "fold-up": 61763,
  "gear": 61764,
  "gift": 61765,
  "gist": 61766,
  "gist-secret": 61767,
  "git-branch": 61768,
  "git-commit": 61769,
  "git-compare": 61770,
  "git-merge": 61771,
  "git-pull-request": 61772,
  "github-action": 61773,
  "globe": 61774,
  "grabber": 61775,
  "graph": 61776,
  "heart": 61777,
  "history": 61778,
  "home": 61779,
  "horizontal-rule": 61780,
  "hubot": 61781,
  "inbox": 61782,
  "info": 61783,
  "issue-closed": 61784,
  "issue-opened": 61785,
  "issue-reopened": 61786,
  "italic": 61787,
  "jersey": 61788,
  "kebab-horizontal": 61789,
  "kebab-vertical": 61790,
  "key": 61791,
  "keyboard": 61792,
  "law": 61793,
  "light-bulb": 61794,
  "link": 61795,
  "link-external": 61796,
  "list-ordered": 61797,
  "list-unordered": 61798,
  "location": 61799,
  "lock": 61800,
  "logo-gist": 61801,
  "logo-github": 61802,
  "mail": 61803,
  "mail-read": 61804,
  "mark-github": 61805,
  "markdown": 61806,
  "megaphone": 61807,
  "mention": 61808,
  "milestone": 61809,
  "mirror": 61810,
  "mortar-board": 61811,
  "mute": 61812,
  "no-newline": 61813,
  "note": 61814,
  "octoface": 61815,
  "organization": 61816,
  "package": 61817,
  "paintcan": 61818,
  "pencil": 61819,
  "person": 61820,
  "pin": 61821,
  "play": 61822,
  "plug": 61823,
  "plus": 61824,
  "plus-small": 61825,
  "primitive-dot": 61826,
  "primitive-square": 61827,
  "project": 61828,
  "pulse": 61829,
  "question": 61830,
  "quote": 61831,
  "radio-tower": 61832,
  "reply": 61833,
  "repo": 61834,
  "repo-clone": 61835,
  "repo-force-push": 61836,
  "repo-forked": 61837,
  "repo-pull": 61838,
  "repo-push": 61839,
  "report": 61840,
  "request-changes": 61841,
  "rocket": 61842,
  "rss": 61843,
  "ruby": 61844,
  "screen-full": 61845,
  "screen-normal": 61846,
  "search": 61847,
  "server": 61848,
  "settings": 61849,
  "shield": 61850,
  "sign-in": 61851,
  "sign-out": 61852,
  "smiley": 61853,
  "squirrel": 61854,
  "star": 61855,
  "stop": 61856,
  "sync": 61857,
  "tag": 61858,
  "tasklist": 61859,
  "telescope": 61860,
  "terminal": 61861,
  "text-size": 61862,
  "three-bars": 61863,
  "thumbsdown": 61864,
  "thumbsup": 61865,
  "tools": 61866,
  "trashcan": 61867,
  "triangle-down": 61868,
  "triangle-left": 61869,
  "triangle-right": 61870,
  "triangle-up": 61871,
  "unfold": 61872,
  "unmute": 61873,
  "unverified": 61874,
  "verified": 61875,
  "versions": 61876,
  "watch": 61877,
  "x": 61878,
  "zap": 61879
};
},10229,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MaterialIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_MaterialIcons.default, 'Material Icons', 'MaterialIcons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10232,[14305,10130,10235]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "3d-rotation": 59469,
  "ac-unit": 60219,
  "access-alarm": 57744,
  "access-alarms": 57745,
  "access-time": 57746,
  "accessibility": 59470,
  "accessible": 59668,
  "account-balance": 59471,
  "account-balance-wallet": 59472,
  "account-box": 59473,
  "account-circle": 59475,
  "adb": 58894,
  "add": 57669,
  "add-a-photo": 58425,
  "add-alarm": 57747,
  "add-alert": 57347,
  "add-box": 57670,
  "add-circle": 57671,
  "add-circle-outline": 57672,
  "add-location": 58727,
  "add-shopping-cart": 59476,
  "add-to-photos": 58269,
  "add-to-queue": 57436,
  "adjust": 58270,
  "airline-seat-flat": 58928,
  "airline-seat-flat-angled": 58929,
  "airline-seat-individual-suite": 58930,
  "airline-seat-legroom-extra": 58931,
  "airline-seat-legroom-normal": 58932,
  "airline-seat-legroom-reduced": 58933,
  "airline-seat-recline-extra": 58934,
  "airline-seat-recline-normal": 58935,
  "airplanemode-active": 57749,
  "airplanemode-inactive": 57748,
  "airplay": 57429,
  "airport-shuttle": 60220,
  "alarm": 59477,
  "alarm-add": 59478,
  "alarm-off": 59479,
  "alarm-on": 59480,
  "album": 57369,
  "all-inclusive": 60221,
  "all-out": 59659,
  "android": 59481,
  "announcement": 59482,
  "apps": 58819,
  "archive": 57673,
  "arrow-back": 58820,
  "arrow-downward": 58843,
  "arrow-drop-down": 58821,
  "arrow-drop-down-circle": 58822,
  "arrow-drop-up": 58823,
  "arrow-forward": 58824,
  "arrow-upward": 58840,
  "art-track": 57440,
  "aspect-ratio": 59483,
  "assessment": 59484,
  "assignment": 59485,
  "assignment-ind": 59486,
  "assignment-late": 59487,
  "assignment-return": 59488,
  "assignment-returned": 59489,
  "assignment-turned-in": 59490,
  "assistant": 58271,
  "assistant-photo": 58272,
  "attach-file": 57894,
  "attach-money": 57895,
  "attachment": 58044,
  "audiotrack": 58273,
  "autorenew": 59491,
  "av-timer": 57371,
  "backspace": 57674,
  "backup": 59492,
  "battery-alert": 57756,
  "battery-charging-full": 57763,
  "battery-full": 57764,
  "battery-std": 57765,
  "battery-unknown": 57766,
  "beach-access": 60222,
  "beenhere": 58669,
  "block": 57675,
  "bluetooth": 57767,
  "bluetooth-audio": 58895,
  "bluetooth-connected": 57768,
  "bluetooth-disabled": 57769,
  "bluetooth-searching": 57770,
  "blur-circular": 58274,
  "blur-linear": 58275,
  "blur-off": 58276,
  "blur-on": 58277,
  "book": 59493,
  "bookmark": 59494,
  "bookmark-border": 59495,
  "border-all": 57896,
  "border-bottom": 57897,
  "border-clear": 57898,
  "border-color": 57899,
  "border-horizontal": 57900,
  "border-inner": 57901,
  "border-left": 57902,
  "border-outer": 57903,
  "border-right": 57904,
  "border-style": 57905,
  "border-top": 57906,
  "border-vertical": 57907,
  "branding-watermark": 57451,
  "brightness-1": 58278,
  "brightness-2": 58279,
  "brightness-3": 58280,
  "brightness-4": 58281,
  "brightness-5": 58282,
  "brightness-6": 58283,
  "brightness-7": 58284,
  "brightness-auto": 57771,
  "brightness-high": 57772,
  "brightness-low": 57773,
  "brightness-medium": 57774,
  "broken-image": 58285,
  "brush": 58286,
  "bubble-chart": 59101,
  "bug-report": 59496,
  "build": 59497,
  "burst-mode": 58428,
  "business": 57519,
  "business-center": 60223,
  "cached": 59498,
  "cake": 59369,
  "call": 57520,
  "call-end": 57521,
  "call-made": 57522,
  "call-merge": 57523,
  "call-missed": 57524,
  "call-missed-outgoing": 57572,
  "call-received": 57525,
  "call-split": 57526,
  "call-to-action": 57452,
  "camera": 58287,
  "camera-alt": 58288,
  "camera-enhance": 59644,
  "camera-front": 58289,
  "camera-rear": 58290,
  "camera-roll": 58291,
  "cancel": 58825,
  "card-giftcard": 59638,
  "card-membership": 59639,
  "card-travel": 59640,
  "casino": 60224,
  "cast": 58119,
  "cast-connected": 58120,
  "center-focus-strong": 58292,
  "center-focus-weak": 58293,
  "change-history": 59499,
  "chat": 57527,
  "chat-bubble": 57546,
  "chat-bubble-outline": 57547,
  "check": 58826,
  "check-box": 59444,
  "check-box-outline-blank": 59445,
  "check-circle": 59500,
  "chevron-left": 58827,
  "chevron-right": 58828,
  "child-care": 60225,
  "child-friendly": 60226,
  "chrome-reader-mode": 59501,
  "class": 59502,
  "clear": 57676,
  "clear-all": 57528,
  "close": 58829,
  "closed-caption": 57372,
  "cloud": 58045,
  "cloud-circle": 58046,
  "cloud-done": 58047,
  "cloud-download": 58048,
  "cloud-off": 58049,
  "cloud-queue": 58050,
  "cloud-upload": 58051,
  "code": 59503,
  "collections": 58294,
  "collections-bookmark": 58417,
  "color-lens": 58295,
  "colorize": 58296,
  "comment": 57529,
  "compare": 58297,
  "compare-arrows": 59669,
  "computer": 58122,
  "confirmation-number": 58936,
  "contact-mail": 57552,
  "contact-phone": 57551,
  "contacts": 57530,
  "content-copy": 57677,
  "content-cut": 57678,
  "content-paste": 57679,
  "control-point": 58298,
  "control-point-duplicate": 58299,
  "copyright": 59660,
  "create": 57680,
  "create-new-folder": 58060,
  "credit-card": 59504,
  "crop": 58302,
  "crop-16-9": 58300,
  "crop-3-2": 58301,
  "crop-5-4": 58303,
  "crop-7-5": 58304,
  "crop-din": 58305,
  "crop-free": 58306,
  "crop-landscape": 58307,
  "crop-original": 58308,
  "crop-portrait": 58309,
  "crop-rotate": 58423,
  "crop-square": 58310,
  "dashboard": 59505,
  "data-usage": 57775,
  "date-range": 59670,
  "dehaze": 58311,
  "delete": 59506,
  "delete-forever": 59691,
  "delete-sweep": 57708,
  "description": 59507,
  "desktop-mac": 58123,
  "desktop-windows": 58124,
  "details": 58312,
  "developer-board": 58125,
  "developer-mode": 57776,
  "device-hub": 58165,
  "devices": 57777,
  "devices-other": 58167,
  "dialer-sip": 57531,
  "dialpad": 57532,
  "directions": 58670,
  "directions-bike": 58671,
  "directions-boat": 58674,
  "directions-bus": 58672,
  "directions-car": 58673,
  "directions-railway": 58676,
  "directions-run": 58726,
  "directions-subway": 58675,
  "directions-transit": 58677,
  "directions-walk": 58678,
  "disc-full": 58896,
  "dns": 59509,
  "do-not-disturb": 58898,
  "do-not-disturb-alt": 58897,
  "do-not-disturb-off": 58947,
  "do-not-disturb-on": 58948,
  "dock": 58126,
  "domain": 59374,
  "done": 59510,
  "done-all": 59511,
  "donut-large": 59671,
  "donut-small": 59672,
  "drafts": 57681,
  "drag-handle": 57949,
  "drive-eta": 58899,
  "dvr": 57778,
  "edit": 58313,
  "edit-location": 58728,
  "eject": 59643,
  "email": 57534,
  "enhanced-encryption": 58943,
  "equalizer": 57373,
  "error": 57344,
  "error-outline": 57345,
  "euro-symbol": 59686,
  "ev-station": 58733,
  "event": 59512,
  "event-available": 58900,
  "event-busy": 58901,
  "event-note": 58902,
  "event-seat": 59651,
  "exit-to-app": 59513,
  "expand-less": 58830,
  "expand-more": 58831,
  "explicit": 57374,
  "explore": 59514,
  "exposure": 58314,
  "exposure-neg-1": 58315,
  "exposure-neg-2": 58316,
  "exposure-plus-1": 58317,
  "exposure-plus-2": 58318,
  "exposure-zero": 58319,
  "extension": 59515,
  "face": 59516,
  "fast-forward": 57375,
  "fast-rewind": 57376,
  "favorite": 59517,
  "favorite-border": 59518,
  "featured-play-list": 57453,
  "featured-video": 57454,
  "feedback": 59519,
  "fiber-dvr": 57437,
  "fiber-manual-record": 57441,
  "fiber-new": 57438,
  "fiber-pin": 57450,
  "fiber-smart-record": 57442,
  "file-download": 58052,
  "file-upload": 58054,
  "filter": 58323,
  "filter-1": 58320,
  "filter-2": 58321,
  "filter-3": 58322,
  "filter-4": 58324,
  "filter-5": 58325,
  "filter-6": 58326,
  "filter-7": 58327,
  "filter-8": 58328,
  "filter-9": 58329,
  "filter-9-plus": 58330,
  "filter-b-and-w": 58331,
  "filter-center-focus": 58332,
  "filter-drama": 58333,
  "filter-frames": 58334,
  "filter-hdr": 58335,
  "filter-list": 57682,
  "filter-none": 58336,
  "filter-tilt-shift": 58338,
  "filter-vintage": 58339,
  "find-in-page": 59520,
  "find-replace": 59521,
  "fingerprint": 59661,
  "first-page": 58844,
  "fitness-center": 60227,
  "flag": 57683,
  "flare": 58340,
  "flash-auto": 58341,
  "flash-off": 58342,
  "flash-on": 58343,
  "flight": 58681,
  "flight-land": 59652,
  "flight-takeoff": 59653,
  "flip": 58344,
  "flip-to-back": 59522,
  "flip-to-front": 59523,
  "folder": 58055,
  "folder-open": 58056,
  "folder-shared": 58057,
  "folder-special": 58903,
  "font-download": 57703,
  "format-align-center": 57908,
  "format-align-justify": 57909,
  "format-align-left": 57910,
  "format-align-right": 57911,
  "format-bold": 57912,
  "format-clear": 57913,
  "format-color-fill": 57914,
  "format-color-reset": 57915,
  "format-color-text": 57916,
  "format-indent-decrease": 57917,
  "format-indent-increase": 57918,
  "format-italic": 57919,
  "format-line-spacing": 57920,
  "format-list-bulleted": 57921,
  "format-list-numbered": 57922,
  "format-paint": 57923,
  "format-quote": 57924,
  "format-shapes": 57950,
  "format-size": 57925,
  "format-strikethrough": 57926,
  "format-textdirection-l-to-r": 57927,
  "format-textdirection-r-to-l": 57928,
  "format-underlined": 57929,
  "forum": 57535,
  "forward": 57684,
  "forward-10": 57430,
  "forward-30": 57431,
  "forward-5": 57432,
  "free-breakfast": 60228,
  "fullscreen": 58832,
  "fullscreen-exit": 58833,
  "functions": 57930,
  "g-translate": 59687,
  "gamepad": 58127,
  "games": 57377,
  "gavel": 59662,
  "gesture": 57685,
  "get-app": 59524,
  "gif": 59656,
  "golf-course": 60229,
  "gps-fixed": 57779,
  "gps-not-fixed": 57780,
  "gps-off": 57781,
  "grade": 59525,
  "gradient": 58345,
  "grain": 58346,
  "graphic-eq": 57784,
  "grid-off": 58347,
  "grid-on": 58348,
  "group": 59375,
  "group-add": 59376,
  "group-work": 59526,
  "hd": 57426,
  "hdr-off": 58349,
  "hdr-on": 58350,
  "hdr-strong": 58353,
  "hdr-weak": 58354,
  "headset": 58128,
  "headset-mic": 58129,
  "healing": 58355,
  "hearing": 57379,
  "help": 59527,
  "help-outline": 59645,
  "high-quality": 57380,
  "highlight": 57951,
  "highlight-off": 59528,
  "history": 59529,
  "home": 59530,
  "hot-tub": 60230,
  "hotel": 58682,
  "hourglass-empty": 59531,
  "hourglass-full": 59532,
  "http": 59650,
  "https": 59533,
  "image": 58356,
  "image-aspect-ratio": 58357,
  "import-contacts": 57568,
  "import-export": 57539,
  "important-devices": 59666,
  "inbox": 57686,
  "indeterminate-check-box": 59657,
  "info": 59534,
  "info-outline": 59535,
  "input": 59536,
  "insert-chart": 57931,
  "insert-comment": 57932,
  "insert-drive-file": 57933,
  "insert-emoticon": 57934,
  "insert-invitation": 57935,
  "insert-link": 57936,
  "insert-photo": 57937,
  "invert-colors": 59537,
  "invert-colors-off": 57540,
  "iso": 58358,
  "keyboard": 58130,
  "keyboard-arrow-down": 58131,
  "keyboard-arrow-left": 58132,
  "keyboard-arrow-right": 58133,
  "keyboard-arrow-up": 58134,
  "keyboard-backspace": 58135,
  "keyboard-capslock": 58136,
  "keyboard-hide": 58138,
  "keyboard-return": 58139,
  "keyboard-tab": 58140,
  "keyboard-voice": 58141,
  "kitchen": 60231,
  "label": 59538,
  "label-outline": 59539,
  "landscape": 58359,
  "language": 59540,
  "laptop": 58142,
  "laptop-chromebook": 58143,
  "laptop-mac": 58144,
  "laptop-windows": 58145,
  "last-page": 58845,
  "launch": 59541,
  "layers": 58683,
  "layers-clear": 58684,
  "leak-add": 58360,
  "leak-remove": 58361,
  "lens": 58362,
  "library-add": 57390,
  "library-books": 57391,
  "library-music": 57392,
  "lightbulb-outline": 59663,
  "line-style": 59673,
  "line-weight": 59674,
  "linear-scale": 57952,
  "link": 57687,
  "linked-camera": 58424,
  "list": 59542,
  "live-help": 57542,
  "live-tv": 58937,
  "local-activity": 58687,
  "local-airport": 58685,
  "local-atm": 58686,
  "local-bar": 58688,
  "local-cafe": 58689,
  "local-car-wash": 58690,
  "local-convenience-store": 58691,
  "local-dining": 58710,
  "local-drink": 58692,
  "local-florist": 58693,
  "local-gas-station": 58694,
  "local-grocery-store": 58695,
  "local-hospital": 58696,
  "local-hotel": 58697,
  "local-laundry-service": 58698,
  "local-library": 58699,
  "local-mall": 58700,
  "local-movies": 58701,
  "local-offer": 58702,
  "local-parking": 58703,
  "local-pharmacy": 58704,
  "local-phone": 58705,
  "local-pizza": 58706,
  "local-play": 58707,
  "local-post-office": 58708,
  "local-printshop": 58709,
  "local-see": 58711,
  "local-shipping": 58712,
  "local-taxi": 58713,
  "location-city": 59377,
  "location-disabled": 57782,
  "location-off": 57543,
  "location-on": 57544,
  "location-searching": 57783,
  "lock": 59543,
  "lock-open": 59544,
  "lock-outline": 59545,
  "looks": 58364,
  "looks-3": 58363,
  "looks-4": 58365,
  "looks-5": 58366,
  "looks-6": 58367,
  "looks-one": 58368,
  "looks-two": 58369,
  "loop": 57384,
  "loupe": 58370,
  "low-priority": 57709,
  "loyalty": 59546,
  "mail": 57688,
  "mail-outline": 57569,
  "map": 58715,
  "markunread": 57689,
  "markunread-mailbox": 59547,
  "memory": 58146,
  "menu": 58834,
  "merge-type": 57938,
  "message": 57545,
  "mic": 57385,
  "mic-none": 57386,
  "mic-off": 57387,
  "mms": 58904,
  "mode-comment": 57939,
  "mode-edit": 57940,
  "monetization-on": 57955,
  "money-off": 57948,
  "monochrome-photos": 58371,
  "mood": 59378,
  "mood-bad": 59379,
  "more": 58905,
  "more-horiz": 58835,
  "more-vert": 58836,
  "motorcycle": 59675,
  "mouse": 58147,
  "move-to-inbox": 57704,
  "movie": 57388,
  "movie-creation": 58372,
  "movie-filter": 58426,
  "multiline-chart": 59103,
  "music-note": 58373,
  "music-video": 57443,
  "my-location": 58716,
  "nature": 58374,
  "nature-people": 58375,
  "navigate-before": 58376,
  "navigate-next": 58377,
  "navigation": 58717,
  "near-me": 58729,
  "network-cell": 57785,
  "network-check": 58944,
  "network-locked": 58906,
  "network-wifi": 57786,
  "new-releases": 57393,
  "next-week": 57706,
  "nfc": 57787,
  "no-encryption": 58945,
  "no-sim": 57548,
  "not-interested": 57395,
  "note": 57455,
  "note-add": 59548,
  "notifications": 59380,
  "notifications-active": 59383,
  "notifications-none": 59381,
  "notifications-off": 59382,
  "notifications-paused": 59384,
  "offline-pin": 59658,
  "ondemand-video": 58938,
  "opacity": 59676,
  "open-in-browser": 59549,
  "open-in-new": 59550,
  "open-with": 59551,
  "pages": 59385,
  "pageview": 59552,
  "palette": 58378,
  "pan-tool": 59685,
  "panorama": 58379,
  "panorama-fish-eye": 58380,
  "panorama-horizontal": 58381,
  "panorama-vertical": 58382,
  "panorama-wide-angle": 58383,
  "party-mode": 59386,
  "pause": 57396,
  "pause-circle-filled": 57397,
  "pause-circle-outline": 57398,
  "payment": 59553,
  "people": 59387,
  "people-outline": 59388,
  "perm-camera-mic": 59554,
  "perm-contact-calendar": 59555,
  "perm-data-setting": 59556,
  "perm-device-information": 59557,
  "perm-identity": 59558,
  "perm-media": 59559,
  "perm-phone-msg": 59560,
  "perm-scan-wifi": 59561,
  "person": 59389,
  "person-add": 59390,
  "person-outline": 59391,
  "person-pin": 58714,
  "person-pin-circle": 58730,
  "personal-video": 58939,
  "pets": 59677,
  "phone": 57549,
  "phone-android": 58148,
  "phone-bluetooth-speaker": 58907,
  "phone-forwarded": 58908,
  "phone-in-talk": 58909,
  "phone-iphone": 58149,
  "phone-locked": 58910,
  "phone-missed": 58911,
  "phone-paused": 58912,
  "phonelink": 58150,
  "phonelink-erase": 57563,
  "phonelink-lock": 57564,
  "phonelink-off": 58151,
  "phonelink-ring": 57565,
  "phonelink-setup": 57566,
  "photo": 58384,
  "photo-album": 58385,
  "photo-camera": 58386,
  "photo-filter": 58427,
  "photo-library": 58387,
  "photo-size-select-actual": 58418,
  "photo-size-select-large": 58419,
  "photo-size-select-small": 58420,
  "picture-as-pdf": 58389,
  "picture-in-picture": 59562,
  "picture-in-picture-alt": 59665,
  "pie-chart": 59076,
  "pie-chart-outlined": 59077,
  "pin-drop": 58718,
  "place": 58719,
  "play-arrow": 57399,
  "play-circle-filled": 57400,
  "play-circle-outline": 57401,
  "play-for-work": 59654,
  "playlist-add": 57403,
  "playlist-add-check": 57445,
  "playlist-play": 57439,
  "plus-one": 59392,
  "poll": 59393,
  "polymer": 59563,
  "pool": 60232,
  "portable-wifi-off": 57550,
  "portrait": 58390,
  "power": 58940,
  "power-input": 58166,
  "power-settings-new": 59564,
  "pregnant-woman": 59678,
  "present-to-all": 57567,
  "print": 59565,
  "priority-high": 58949,
  "public": 59403,
  "publish": 57941,
  "query-builder": 59566,
  "question-answer": 59567,
  "queue": 57404,
  "queue-music": 57405,
  "queue-play-next": 57446,
  "radio": 57406,
  "radio-button-checked": 59447,
  "radio-button-unchecked": 59446,
  "rate-review": 58720,
  "receipt": 59568,
  "recent-actors": 57407,
  "record-voice-over": 59679,
  "redeem": 59569,
  "redo": 57690,
  "refresh": 58837,
  "remove": 57691,
  "remove-circle": 57692,
  "remove-circle-outline": 57693,
  "remove-from-queue": 57447,
  "remove-red-eye": 58391,
  "remove-shopping-cart": 59688,
  "reorder": 59646,
  "repeat": 57408,
  "repeat-one": 57409,
  "replay": 57410,
  "replay-10": 57433,
  "replay-30": 57434,
  "replay-5": 57435,
  "reply": 57694,
  "reply-all": 57695,
  "report": 57696,
  "report-problem": 59570,
  "restaurant": 58732,
  "restaurant-menu": 58721,
  "restore": 59571,
  "restore-page": 59689,
  "ring-volume": 57553,
  "room": 59572,
  "room-service": 60233,
  "rotate-90-degrees-ccw": 58392,
  "rotate-left": 58393,
  "rotate-right": 58394,
  "rounded-corner": 59680,
  "router": 58152,
  "rowing": 59681,
  "rss-feed": 57573,
  "rv-hookup": 58946,
  "satellite": 58722,
  "save": 57697,
  "scanner": 58153,
  "schedule": 59573,
  "school": 59404,
  "screen-lock-landscape": 57790,
  "screen-lock-portrait": 57791,
  "screen-lock-rotation": 57792,
  "screen-rotation": 57793,
  "screen-share": 57570,
  "sd-card": 58915,
  "sd-storage": 57794,
  "search": 59574,
  "security": 58154,
  "select-all": 57698,
  "send": 57699,
  "sentiment-dissatisfied": 59409,
  "sentiment-neutral": 59410,
  "sentiment-satisfied": 59411,
  "sentiment-very-dissatisfied": 59412,
  "sentiment-very-satisfied": 59413,
  "settings": 59576,
  "settings-applications": 59577,
  "settings-backup-restore": 59578,
  "settings-bluetooth": 59579,
  "settings-brightness": 59581,
  "settings-cell": 59580,
  "settings-ethernet": 59582,
  "settings-input-antenna": 59583,
  "settings-input-component": 59584,
  "settings-input-composite": 59585,
  "settings-input-hdmi": 59586,
  "settings-input-svideo": 59587,
  "settings-overscan": 59588,
  "settings-phone": 59589,
  "settings-power": 59590,
  "settings-remote": 59591,
  "settings-system-daydream": 57795,
  "settings-voice": 59592,
  "share": 59405,
  "shop": 59593,
  "shop-two": 59594,
  "shopping-basket": 59595,
  "shopping-cart": 59596,
  "short-text": 57953,
  "show-chart": 59105,
  "shuffle": 57411,
  "signal-cellular-4-bar": 57800,
  "signal-cellular-connected-no-internet-4-bar": 57805,
  "signal-cellular-no-sim": 57806,
  "signal-cellular-null": 57807,
  "signal-cellular-off": 57808,
  "signal-wifi-4-bar": 57816,
  "signal-wifi-4-bar-lock": 57817,
  "signal-wifi-off": 57818,
  "sim-card": 58155,
  "sim-card-alert": 58916,
  "skip-next": 57412,
  "skip-previous": 57413,
  "slideshow": 58395,
  "slow-motion-video": 57448,
  "smartphone": 58156,
  "smoke-free": 60234,
  "smoking-rooms": 60235,
  "sms": 58917,
  "sms-failed": 58918,
  "snooze": 57414,
  "sort": 57700,
  "sort-by-alpha": 57427,
  "spa": 60236,
  "space-bar": 57942,
  "speaker": 58157,
  "speaker-group": 58158,
  "speaker-notes": 59597,
  "speaker-notes-off": 59690,
  "speaker-phone": 57554,
  "spellcheck": 59598,
  "star": 59448,
  "star-border": 59450,
  "star-half": 59449,
  "stars": 59600,
  "stay-current-landscape": 57555,
  "stay-current-portrait": 57556,
  "stay-primary-landscape": 57557,
  "stay-primary-portrait": 57558,
  "stop": 57415,
  "stop-screen-share": 57571,
  "storage": 57819,
  "store": 59601,
  "store-mall-directory": 58723,
  "straighten": 58396,
  "streetview": 58734,
  "strikethrough-s": 57943,
  "style": 58397,
  "subdirectory-arrow-left": 58841,
  "subdirectory-arrow-right": 58842,
  "subject": 59602,
  "subscriptions": 57444,
  "subtitles": 57416,
  "subway": 58735,
  "supervisor-account": 59603,
  "surround-sound": 57417,
  "swap-calls": 57559,
  "swap-horiz": 59604,
  "swap-vert": 59605,
  "swap-vertical-circle": 59606,
  "switch-camera": 58398,
  "switch-video": 58399,
  "sync": 58919,
  "sync-disabled": 58920,
  "sync-problem": 58921,
  "system-update": 58922,
  "system-update-alt": 59607,
  "tab": 59608,
  "tab-unselected": 59609,
  "tablet": 58159,
  "tablet-android": 58160,
  "tablet-mac": 58161,
  "tag-faces": 58400,
  "tap-and-play": 58923,
  "terrain": 58724,
  "text-fields": 57954,
  "text-format": 57701,
  "textsms": 57560,
  "texture": 58401,
  "theaters": 59610,
  "thumb-down": 59611,
  "thumb-up": 59612,
  "thumbs-up-down": 59613,
  "time-to-leave": 58924,
  "timelapse": 58402,
  "timeline": 59682,
  "timer": 58405,
  "timer-10": 58403,
  "timer-3": 58404,
  "timer-off": 58406,
  "title": 57956,
  "toc": 59614,
  "today": 59615,
  "toll": 59616,
  "tonality": 58407,
  "touch-app": 59667,
  "toys": 58162,
  "track-changes": 59617,
  "traffic": 58725,
  "train": 58736,
  "tram": 58737,
  "transfer-within-a-station": 58738,
  "transform": 58408,
  "translate": 59618,
  "trending-down": 59619,
  "trending-flat": 59620,
  "trending-up": 59621,
  "tune": 58409,
  "turned-in": 59622,
  "turned-in-not": 59623,
  "tv": 58163,
  "unarchive": 57705,
  "undo": 57702,
  "unfold-less": 58838,
  "unfold-more": 58839,
  "update": 59683,
  "usb": 57824,
  "verified-user": 59624,
  "vertical-align-bottom": 57944,
  "vertical-align-center": 57945,
  "vertical-align-top": 57946,
  "vibration": 58925,
  "video-call": 57456,
  "video-label": 57457,
  "video-library": 57418,
  "videocam": 57419,
  "videocam-off": 57420,
  "videogame-asset": 58168,
  "view-agenda": 59625,
  "view-array": 59626,
  "view-carousel": 59627,
  "view-column": 59628,
  "view-comfy": 58410,
  "view-compact": 58411,
  "view-day": 59629,
  "view-headline": 59630,
  "view-list": 59631,
  "view-module": 59632,
  "view-quilt": 59633,
  "view-stream": 59634,
  "view-week": 59635,
  "vignette": 58421,
  "visibility": 59636,
  "visibility-off": 59637,
  "voice-chat": 58926,
  "voicemail": 57561,
  "volume-down": 57421,
  "volume-mute": 57422,
  "volume-off": 57423,
  "volume-up": 57424,
  "vpn-key": 57562,
  "vpn-lock": 58927,
  "wallpaper": 57788,
  "warning": 57346,
  "watch": 58164,
  "watch-later": 59684,
  "wb-auto": 58412,
  "wb-cloudy": 58413,
  "wb-incandescent": 58414,
  "wb-iridescent": 58422,
  "wb-sunny": 58416,
  "wc": 58941,
  "web": 57425,
  "web-asset": 57449,
  "weekend": 57707,
  "whatshot": 59406,
  "widgets": 57789,
  "wifi": 58942,
  "wifi-lock": 57825,
  "wifi-tethering": 57826,
  "work": 59641,
  "wrap-text": 57947,
  "youtube-searched-for": 59642,
  "zoom-in": 59647,
  "zoom-out": 59648,
  "zoom-out-map": 58731
};
},10235,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_MaterialCommunityIcons.default, 'Material Design Icons', 'MaterialCommunityIcons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10238,[14305,10130,10241]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "ab-testing": 983497,
  "abjad-arabic": 987944,
  "abjad-hebrew": 987945,
  "abugida-devanagari": 987946,
  "abugida-thai": 987947,
  "access-point": 983043,
  "access-point-network": 983042,
  "access-point-network-off": 986081,
  "account": 983044,
  "account-alert": 983045,
  "account-alert-outline": 985936,
  "account-arrow-left": 985937,
  "account-arrow-left-outline": 985938,
  "account-arrow-right": 985939,
  "account-arrow-right-outline": 985940,
  "account-box": 983046,
  "account-box-multiple": 985396,
  "account-box-multiple-outline": 987146,
  "account-box-outline": 983047,
  "account-cancel": 987871,
  "account-cancel-outline": 987872,
  "account-cash": 987287,
  "account-cash-outline": 987288,
  "account-check": 983048,
  "account-check-outline": 986082,
  "account-child": 985737,
  "account-child-circle": 985738,
  "account-child-outline": 987336,
  "account-circle": 983049,
  "account-circle-outline": 985941,
  "account-clock": 985942,
  "account-clock-outline": 985943,
  "account-cog": 988016,
  "account-cog-outline": 988017,
  "account-convert": 983050,
  "account-convert-outline": 987905,
  "account-cowboy-hat": 986779,
  "account-details": 984625,
  "account-details-outline": 988018,
  "account-edit": 984764,
  "account-edit-outline": 987131,
  "account-group": 985161,
  "account-group-outline": 985944,
  "account-hard-hat": 984501,
  "account-heart": 985241,
  "account-heart-outline": 986083,
  "account-key": 983051,
  "account-key-outline": 986084,
  "account-lock": 987486,
  "account-lock-outline": 987487,
  "account-minus": 983053,
  "account-minus-outline": 985836,
  "account-multiple": 983054,
  "account-multiple-check": 985285,
  "account-multiple-check-outline": 987646,
  "account-multiple-minus": 984531,
  "account-multiple-minus-outline": 986085,
  "account-multiple-outline": 983055,
  "account-multiple-plus": 983056,
  "account-multiple-plus-outline": 985088,
  "account-multiple-remove": 987658,
  "account-multiple-remove-outline": 987659,
  "account-music": 985091,
  "account-music-outline": 986345,
  "account-network": 983057,
  "account-network-outline": 986086,
  "account-off": 983058,
  "account-off-outline": 986087,
  "account-outline": 983059,
  "account-plus": 983060,
  "account-plus-outline": 985089,
  "account-question": 985945,
  "account-question-outline": 985946,
  "account-remove": 983061,
  "account-remove-outline": 985837,
  "account-search": 983062,
  "account-search-outline": 985397,
  "account-settings": 984624,
  "account-settings-outline": 987337,
  "account-star": 983063,
  "account-star-outline": 986088,
  "account-supervisor": 985739,
  "account-supervisor-circle": 985740,
  "account-supervisor-outline": 987437,
  "account-switch": 983065,
  "account-switch-outline": 984267,
  "account-tie": 986339,
  "account-tie-outline": 987338,
  "account-tie-voice": 987912,
  "account-tie-voice-off": 987914,
  "account-tie-voice-off-outline": 987915,
  "account-tie-voice-outline": 987913,
  "account-voice": 984523,
  "adjust": 983066,
  "adobe": 985398,
  "adobe-acrobat": 987037,
  "air-conditioner": 983067,
  "air-filter": 986435,
  "air-horn": 986540,
  "air-humidifier": 987289,
  "air-humidifier-off": 988262,
  "air-purifier": 986436,
  "airbag": 986089,
  "airballoon": 983068,
  "airballoon-outline": 987147,
  "airplane": 983069,
  "airplane-landing": 984532,
  "airplane-off": 983070,
  "airplane-takeoff": 984533,
  "airport": 985163,
  "alarm": 983072,
  "alarm-bell": 984974,
  "alarm-check": 983073,
  "alarm-light": 984975,
  "alarm-light-outline": 986090,
  "alarm-multiple": 983074,
  "alarm-note": 986737,
  "alarm-note-off": 986738,
  "alarm-off": 983075,
  "alarm-plus": 983076,
  "alarm-snooze": 984718,
  "album": 983077,
  "alert": 983078,
  "alert-box": 983079,
  "alert-box-outline": 986340,
  "alert-circle": 983080,
  "alert-circle-check": 987629,
  "alert-circle-check-outline": 987630,
  "alert-circle-outline": 984534,
  "alert-decagram": 984765,
  "alert-decagram-outline": 986341,
  "alert-minus": 988347,
  "alert-minus-outline": 988350,
  "alert-octagon": 983081,
  "alert-octagon-outline": 986342,
  "alert-octagram": 984935,
  "alert-octagram-outline": 986343,
  "alert-outline": 983082,
  "alert-plus": 988346,
  "alert-plus-outline": 988349,
  "alert-remove": 988348,
  "alert-remove-outline": 988351,
  "alert-rhombus": 987598,
  "alert-rhombus-outline": 987599,
  "alien": 985242,
  "alien-outline": 987339,
  "align-horizontal-center": 987587,
  "align-horizontal-left": 987586,
  "align-horizontal-right": 987588,
  "align-vertical-bottom": 987589,
  "align-vertical-center": 987590,
  "align-vertical-top": 987591,
  "all-inclusive": 984766,
  "allergy": 987736,
  "alpha": 983083,
  "alpha-a": 985838,
  "alpha-a-box": 985864,
  "alpha-a-box-outline": 986091,
  "alpha-a-circle": 986092,
  "alpha-a-circle-outline": 986093,
  "alpha-b": 985839,
  "alpha-b-box": 985865,
  "alpha-b-box-outline": 986094,
  "alpha-b-circle": 986095,
  "alpha-b-circle-outline": 986096,
  "alpha-c": 985840,
  "alpha-c-box": 985866,
  "alpha-c-box-outline": 986097,
  "alpha-c-circle": 986098,
  "alpha-c-circle-outline": 986099,
  "alpha-d": 985841,
  "alpha-d-box": 985867,
  "alpha-d-box-outline": 986100,
  "alpha-d-circle": 986101,
  "alpha-d-circle-outline": 986102,
  "alpha-e": 985842,
  "alpha-e-box": 985868,
  "alpha-e-box-outline": 986103,
  "alpha-e-circle": 986104,
  "alpha-e-circle-outline": 986105,
  "alpha-f": 985843,
  "alpha-f-box": 985869,
  "alpha-f-box-outline": 986106,
  "alpha-f-circle": 986107,
  "alpha-f-circle-outline": 986108,
  "alpha-g": 985844,
  "alpha-g-box": 985870,
  "alpha-g-box-outline": 986109,
  "alpha-g-circle": 986110,
  "alpha-g-circle-outline": 986111,
  "alpha-h": 985845,
  "alpha-h-box": 985871,
  "alpha-h-box-outline": 986112,
  "alpha-h-circle": 986113,
  "alpha-h-circle-outline": 986114,
  "alpha-i": 985846,
  "alpha-i-box": 985872,
  "alpha-i-box-outline": 986115,
  "alpha-i-circle": 986116,
  "alpha-i-circle-outline": 986117,
  "alpha-j": 985847,
  "alpha-j-box": 985873,
  "alpha-j-box-outline": 986118,
  "alpha-j-circle": 986119,
  "alpha-j-circle-outline": 986120,
  "alpha-k": 985848,
  "alpha-k-box": 985874,
  "alpha-k-box-outline": 986121,
  "alpha-k-circle": 986122,
  "alpha-k-circle-outline": 986123,
  "alpha-l": 985849,
  "alpha-l-box": 985875,
  "alpha-l-box-outline": 986124,
  "alpha-l-circle": 986125,
  "alpha-l-circle-outline": 986126,
  "alpha-m": 985850,
  "alpha-m-box": 985876,
  "alpha-m-box-outline": 986127,
  "alpha-m-circle": 986128,
  "alpha-m-circle-outline": 986129,
  "alpha-n": 985851,
  "alpha-n-box": 985877,
  "alpha-n-box-outline": 986130,
  "alpha-n-circle": 986131,
  "alpha-n-circle-outline": 986132,
  "alpha-o": 985852,
  "alpha-o-box": 985878,
  "alpha-o-box-outline": 986133,
  "alpha-o-circle": 986134,
  "alpha-o-circle-outline": 986135,
  "alpha-p": 985853,
  "alpha-p-box": 985879,
  "alpha-p-box-outline": 986136,
  "alpha-p-circle": 986137,
  "alpha-p-circle-outline": 986138,
  "alpha-q": 985854,
  "alpha-q-box": 985880,
  "alpha-q-box-outline": 986139,
  "alpha-q-circle": 986140,
  "alpha-q-circle-outline": 986141,
  "alpha-r": 985855,
  "alpha-r-box": 985881,
  "alpha-r-box-outline": 986142,
  "alpha-r-circle": 986143,
  "alpha-r-circle-outline": 986144,
  "alpha-s": 985856,
  "alpha-s-box": 985882,
  "alpha-s-box-outline": 986145,
  "alpha-s-circle": 986146,
  "alpha-s-circle-outline": 986147,
  "alpha-t": 985857,
  "alpha-t-box": 985883,
  "alpha-t-box-outline": 986148,
  "alpha-t-circle": 986149,
  "alpha-t-circle-outline": 986150,
  "alpha-u": 985858,
  "alpha-u-box": 985884,
  "alpha-u-box-outline": 986151,
  "alpha-u-circle": 986152,
  "alpha-u-circle-outline": 986153,
  "alpha-v": 985859,
  "alpha-v-box": 985885,
  "alpha-v-box-outline": 986154,
  "alpha-v-circle": 986155,
  "alpha-v-circle-outline": 986156,
  "alpha-w": 985860,
  "alpha-w-box": 985886,
  "alpha-w-box-outline": 986157,
  "alpha-w-circle": 986158,
  "alpha-w-circle-outline": 986159,
  "alpha-x": 985861,
  "alpha-x-box": 985887,
  "alpha-x-box-outline": 986160,
  "alpha-x-circle": 986161,
  "alpha-x-circle-outline": 986162,
  "alpha-y": 985862,
  "alpha-y-box": 985888,
  "alpha-y-box-outline": 986163,
  "alpha-y-circle": 986164,
  "alpha-y-circle-outline": 986165,
  "alpha-z": 985863,
  "alpha-z-box": 985889,
  "alpha-z-box-outline": 986166,
  "alpha-z-circle": 986167,
  "alpha-z-circle-outline": 986168,
  "alphabet-aurebesh": 987948,
  "alphabet-cyrillic": 987949,
  "alphabet-greek": 987950,
  "alphabet-latin": 987951,
  "alphabet-piqad": 987952,
  "alphabet-tengwar": 987959,
  "alphabetical": 983084,
  "alphabetical-off": 987148,
  "alphabetical-variant": 987149,
  "alphabetical-variant-off": 987150,
  "altimeter": 984535,
  "amazon": 983085,
  "amazon-alexa": 985286,
  "ambulance": 983087,
  "ammunition": 986344,
  "ampersand": 985741,
  "amplifier": 983088,
  "amplifier-off": 987573,
  "anchor": 983089,
  "android": 983090,
  "android-auto": 985742,
  "android-debug-bridge": 983091,
  "android-messages": 986437,
  "android-studio": 983092,
  "angle-acute": 985399,
  "angle-obtuse": 985400,
  "angle-right": 985401,
  "angular": 984754,
  "angularjs": 984767,
  "animation": 984536,
  "animation-outline": 985743,
  "animation-play": 985402,
  "animation-play-outline": 985744,
  "ansible": 987290,
  "antenna": 987417,
  "anvil": 985243,
  "apache-kafka": 987151,
  "api": 987291,
  "api-off": 987735,
  "apple": 983093,
  "apple-airplay": 983071,
  "apple-finder": 983094,
  "apple-icloud": 983096,
  "apple-ios": 983095,
  "apple-keyboard-caps": 984626,
  "apple-keyboard-command": 984627,
  "apple-keyboard-control": 984628,
  "apple-keyboard-option": 984629,
  "apple-keyboard-shift": 984630,
  "apple-safari": 983097,
  "application": 984596,
  "application-export": 986541,
  "application-import": 986542,
  "approximately-equal": 987038,
  "approximately-equal-box": 987039,
  "apps": 983099,
  "apps-box": 986438,
  "arch": 985287,
  "archive": 983100,
  "archive-arrow-down": 987737,
  "archive-arrow-down-outline": 987738,
  "archive-arrow-up": 987739,
  "archive-arrow-up-outline": 987740,
  "archive-outline": 987662,
  "arm-flex": 987095,
  "arm-flex-outline": 987094,
  "arrange-bring-forward": 983101,
  "arrange-bring-to-front": 983102,
  "arrange-send-backward": 983103,
  "arrange-send-to-back": 983104,
  "arrow-all": 983105,
  "arrow-bottom-left": 983106,
  "arrow-bottom-left-bold-outline": 985527,
  "arrow-bottom-left-thick": 985528,
  "arrow-bottom-right": 983107,
  "arrow-bottom-right-bold-outline": 985529,
  "arrow-bottom-right-thick": 985530,
  "arrow-collapse": 984597,
  "arrow-collapse-all": 983108,
  "arrow-collapse-down": 984978,
  "arrow-collapse-horizontal": 985164,
  "arrow-collapse-left": 984979,
  "arrow-collapse-right": 984980,
  "arrow-collapse-up": 984981,
  "arrow-collapse-vertical": 985165,
  "arrow-decision": 985531,
  "arrow-decision-auto": 985532,
  "arrow-decision-auto-outline": 985533,
  "arrow-decision-outline": 985534,
  "arrow-down": 983109,
  "arrow-down-bold": 984878,
  "arrow-down-bold-box": 984879,
  "arrow-down-bold-box-outline": 984880,
  "arrow-down-bold-circle": 983111,
  "arrow-down-bold-circle-outline": 983112,
  "arrow-down-bold-hexagon-outline": 983113,
  "arrow-down-bold-outline": 985535,
  "arrow-down-box": 984768,
  "arrow-down-circle": 986331,
  "arrow-down-circle-outline": 986332,
  "arrow-down-drop-circle": 983114,
  "arrow-down-drop-circle-outline": 983115,
  "arrow-down-thick": 983110,
  "arrow-expand": 984598,
  "arrow-expand-all": 983116,
  "arrow-expand-down": 984982,
  "arrow-expand-horizontal": 985166,
  "arrow-expand-left": 984983,
  "arrow-expand-right": 984984,
  "arrow-expand-up": 984985,
  "arrow-expand-vertical": 985167,
  "arrow-horizontal-lock": 987483,
  "arrow-left": 983117,
  "arrow-left-bold": 984881,
  "arrow-left-bold-box": 984882,
  "arrow-left-bold-box-outline": 984883,
  "arrow-left-bold-circle": 983119,
  "arrow-left-bold-circle-outline": 983120,
  "arrow-left-bold-hexagon-outline": 983121,
  "arrow-left-bold-outline": 985536,
  "arrow-left-box": 984769,
  "arrow-left-circle": 986333,
  "arrow-left-circle-outline": 986334,
  "arrow-left-drop-circle": 983122,
  "arrow-left-drop-circle-outline": 983123,
  "arrow-left-right": 986739,
  "arrow-left-right-bold": 986740,
  "arrow-left-right-bold-outline": 985537,
  "arrow-left-thick": 983118,
  "arrow-right": 983124,
  "arrow-right-bold": 984884,
  "arrow-right-bold-box": 984885,
  "arrow-right-bold-box-outline": 984886,
  "arrow-right-bold-circle": 983126,
  "arrow-right-bold-circle-outline": 983127,
  "arrow-right-bold-hexagon-outline": 983128,
  "arrow-right-bold-outline": 985538,
  "arrow-right-box": 984770,
  "arrow-right-circle": 986335,
  "arrow-right-circle-outline": 986336,
  "arrow-right-drop-circle": 983129,
  "arrow-right-drop-circle-outline": 983130,
  "arrow-right-thick": 983125,
  "arrow-split-horizontal": 985403,
  "arrow-split-vertical": 985404,
  "arrow-top-left": 983131,
  "arrow-top-left-bold-outline": 985539,
  "arrow-top-left-bottom-right": 986741,
  "arrow-top-left-bottom-right-bold": 986742,
  "arrow-top-left-thick": 985540,
  "arrow-top-right": 983132,
  "arrow-top-right-bold-outline": 985541,
  "arrow-top-right-bottom-left": 986743,
  "arrow-top-right-bottom-left-bold": 986744,
  "arrow-top-right-thick": 985542,
  "arrow-up": 983133,
  "arrow-up-bold": 984887,
  "arrow-up-bold-box": 984888,
  "arrow-up-bold-box-outline": 984889,
  "arrow-up-bold-circle": 983135,
  "arrow-up-bold-circle-outline": 983136,
  "arrow-up-bold-hexagon-outline": 983137,
  "arrow-up-bold-outline": 985543,
  "arrow-up-box": 984771,
  "arrow-up-circle": 986337,
  "arrow-up-circle-outline": 986338,
  "arrow-up-down": 986745,
  "arrow-up-down-bold": 986746,
  "arrow-up-down-bold-outline": 985544,
  "arrow-up-drop-circle": 983138,
  "arrow-up-drop-circle-outline": 983139,
  "arrow-up-thick": 983134,
  "arrow-vertical-lock": 987484,
  "artstation": 985947,
  "aspect-ratio": 985636,
  "assistant": 983140,
  "asterisk": 984772,
  "at": 983141,
  "atlassian": 985092,
  "atm": 986439,
  "atom": 984936,
  "atom-variant": 986747,
  "attachment": 983142,
  "audio-video": 985405,
  "audio-video-off": 987574,
  "augmented-reality": 985168,
  "auto-download": 988030,
  "auto-fix": 983144,
  "auto-upload": 983145,
  "autorenew": 983146,
  "av-timer": 983147,
  "aws": 986639,
  "axe": 985288,
  "axis": 986440,
  "axis-arrow": 986441,
  "axis-arrow-info": 988174,
  "axis-arrow-lock": 986442,
  "axis-lock": 986443,
  "axis-x-arrow": 986444,
  "axis-x-arrow-lock": 986445,
  "axis-x-rotate-clockwise": 986446,
  "axis-x-rotate-counterclockwise": 986447,
  "axis-x-y-arrow-lock": 986448,
  "axis-y-arrow": 986449,
  "axis-y-arrow-lock": 986450,
  "axis-y-rotate-clockwise": 986451,
  "axis-y-rotate-counterclockwise": 986452,
  "axis-z-arrow": 986453,
  "axis-z-arrow-lock": 986454,
  "axis-z-rotate-clockwise": 986455,
  "axis-z-rotate-counterclockwise": 986456,
  "babel": 985637,
  "baby": 983148,
  "baby-bottle": 986937,
  "baby-bottle-outline": 986938,
  "baby-buggy": 988128,
  "baby-carriage": 984719,
  "baby-carriage-off": 987040,
  "baby-face": 986748,
  "baby-face-outline": 986749,
  "backburger": 983149,
  "backspace": 983150,
  "backspace-outline": 985948,
  "backspace-reverse": 986750,
  "backspace-reverse-outline": 986751,
  "backup-restore": 983151,
  "bacteria": 986837,
  "bacteria-outline": 986838,
  "badge-account": 986535,
  "badge-account-alert": 986536,
  "badge-account-alert-outline": 986537,
  "badge-account-horizontal": 986637,
  "badge-account-horizontal-outline": 986638,
  "badge-account-outline": 986538,
  "badminton": 985169,
  "bag-carry-on": 986939,
  "bag-carry-on-check": 986469,
  "bag-carry-on-off": 986940,
  "bag-checked": 986941,
  "bag-personal": 986640,
  "bag-personal-off": 986641,
  "bag-personal-off-outline": 986642,
  "bag-personal-outline": 986643,
  "baguette": 986942,
  "balloon": 985638,
  "ballot": 985545,
  "ballot-outline": 985546,
  "ballot-recount": 986169,
  "ballot-recount-outline": 986170,
  "bandage": 986543,
  "bandcamp": 984693,
  "bank": 983152,
  "bank-minus": 986544,
  "bank-outline": 986752,
  "bank-plus": 986545,
  "bank-remove": 986546,
  "bank-transfer": 985639,
  "bank-transfer-in": 985640,
  "bank-transfer-out": 985641,
  "barcode": 983153,
  "barcode-off": 987702,
  "barcode-scan": 983154,
  "barley": 983155,
  "barley-off": 985949,
  "barn": 985950,
  "barrel": 983156,
  "baseball": 985170,
  "baseball-bat": 985171,
  "bash": 987523,
  "basket": 983158,
  "basket-fill": 983159,
  "basket-outline": 987521,
  "basket-unfill": 983160,
  "basketball": 985094,
  "basketball-hoop": 986171,
  "basketball-hoop-outline": 986172,
  "bat": 985951,
  "battery": 983161,
  "battery-10": 983162,
  "battery-10-bluetooth": 985406,
  "battery-20": 983163,
  "battery-20-bluetooth": 985407,
  "battery-30": 983164,
  "battery-30-bluetooth": 985408,
  "battery-40": 983165,
  "battery-40-bluetooth": 985409,
  "battery-50": 983166,
  "battery-50-bluetooth": 985410,
  "battery-60": 983167,
  "battery-60-bluetooth": 985411,
  "battery-70": 983168,
  "battery-70-bluetooth": 985412,
  "battery-80": 983169,
  "battery-80-bluetooth": 985413,
  "battery-90": 983170,
  "battery-90-bluetooth": 985414,
  "battery-alert": 983171,
  "battery-alert-bluetooth": 985415,
  "battery-alert-variant": 987340,
  "battery-alert-variant-outline": 987341,
  "battery-bluetooth": 985416,
  "battery-bluetooth-variant": 985417,
  "battery-charging": 983172,
  "battery-charging-10": 985244,
  "battery-charging-100": 983173,
  "battery-charging-20": 983174,
  "battery-charging-30": 983175,
  "battery-charging-40": 983176,
  "battery-charging-50": 985245,
  "battery-charging-60": 983177,
  "battery-charging-70": 985246,
  "battery-charging-80": 983178,
  "battery-charging-90": 983179,
  "battery-charging-high": 987814,
  "battery-charging-low": 987812,
  "battery-charging-medium": 987813,
  "battery-charging-outline": 985247,
  "battery-charging-wireless": 985095,
  "battery-charging-wireless-10": 985096,
  "battery-charging-wireless-20": 985097,
  "battery-charging-wireless-30": 985098,
  "battery-charging-wireless-40": 985099,
  "battery-charging-wireless-50": 985100,
  "battery-charging-wireless-60": 985101,
  "battery-charging-wireless-70": 985102,
  "battery-charging-wireless-80": 985103,
  "battery-charging-wireless-90": 985104,
  "battery-charging-wireless-alert": 985105,
  "battery-charging-wireless-outline": 985106,
  "battery-heart": 987663,
  "battery-heart-outline": 987664,
  "battery-heart-variant": 987665,
  "battery-high": 987811,
  "battery-low": 987809,
  "battery-medium": 987810,
  "battery-minus": 983180,
  "battery-negative": 983181,
  "battery-off": 987741,
  "battery-off-outline": 987742,
  "battery-outline": 983182,
  "battery-plus": 983183,
  "battery-positive": 983184,
  "battery-unknown": 983185,
  "battery-unknown-bluetooth": 985418,
  "battlenet": 985952,
  "beach": 983186,
  "beaker": 986346,
  "beaker-alert": 987689,
  "beaker-alert-outline": 987690,
  "beaker-check": 987691,
  "beaker-check-outline": 987692,
  "beaker-minus": 987693,
  "beaker-minus-outline": 987694,
  "beaker-outline": 984720,
  "beaker-plus": 987695,
  "beaker-plus-outline": 987696,
  "beaker-question": 987697,
  "beaker-question-outline": 987698,
  "beaker-remove": 987699,
  "beaker-remove-outline": 987700,
  "bed": 983779,
  "bed-double": 987092,
  "bed-double-outline": 987091,
  "bed-empty": 985248,
  "bed-king": 987090,
  "bed-king-outline": 987089,
  "bed-outline": 983193,
  "bed-queen": 987088,
  "bed-queen-outline": 987099,
  "bed-single": 987245,
  "bed-single-outline": 987246,
  "bee": 987041,
  "bee-flower": 987042,
  "beehive-off-outline": 988141,
  "beehive-outline": 987342,
  "beer": 983192,
  "beer-outline": 987916,
  "bell": 983194,
  "bell-alert": 986457,
  "bell-alert-outline": 986753,
  "bell-cancel": 988135,
  "bell-cancel-outline": 988136,
  "bell-check": 987621,
  "bell-check-outline": 987622,
  "bell-circle": 986458,
  "bell-circle-outline": 986459,
  "bell-minus": 988137,
  "bell-minus-outline": 988138,
  "bell-off": 983195,
  "bell-off-outline": 985745,
  "bell-outline": 983196,
  "bell-plus": 983197,
  "bell-plus-outline": 985746,
  "bell-remove": 988139,
  "bell-remove-outline": 988140,
  "bell-ring": 983198,
  "bell-ring-outline": 983199,
  "bell-sleep": 983200,
  "bell-sleep-outline": 985747,
  "beta": 983201,
  "betamax": 985547,
  "biathlon": 986644,
  "bicycle": 987292,
  "bicycle-basket": 987701,
  "bike": 983203,
  "bike-fast": 987423,
  "billboard": 987152,
  "billiards": 985953,
  "billiards-rack": 985954,
  "binoculars": 983205,
  "bio": 983206,
  "biohazard": 983207,
  "bitbucket": 983208,
  "bitcoin": 985107,
  "black-mesa": 983209,
  "blender": 986347,
  "blender-software": 983211,
  "blinds": 983212,
  "blinds-open": 987153,
  "block-helper": 983213,
  "blogger": 983214,
  "blood-bag": 986348,
  "bluetooth": 983215,
  "bluetooth-audio": 983216,
  "bluetooth-connect": 983217,
  "bluetooth-off": 983218,
  "bluetooth-settings": 983219,
  "bluetooth-transfer": 983220,
  "blur": 983221,
  "blur-linear": 983222,
  "blur-off": 983223,
  "blur-radial": 983224,
  "bolnisi-cross": 986349,
  "bolt": 986547,
  "bomb": 984721,
  "bomb-off": 984773,
  "bone": 983225,
  "book": 983226,
  "book-account": 988077,
  "book-account-outline": 988078,
  "book-alphabet": 984605,
  "book-cross": 983202,
  "book-information-variant": 987247,
  "book-lock": 984986,
  "book-lock-open": 984987,
  "book-minus": 984537,
  "book-minus-multiple": 985748,
  "book-minus-multiple-outline": 985355,
  "book-multiple": 983227,
  "book-multiple-outline": 984118,
  "book-music": 983143,
  "book-open": 983229,
  "book-open-outline": 985955,
  "book-open-page-variant": 984538,
  "book-open-variant": 983230,
  "book-outline": 985956,
  "book-play": 986754,
  "book-play-outline": 986755,
  "book-plus": 984539,
  "book-plus-multiple": 985749,
  "book-plus-multiple-outline": 985822,
  "book-remove": 985751,
  "book-remove-multiple": 985750,
  "book-remove-multiple-outline": 984266,
  "book-search": 986756,
  "book-search-outline": 986757,
  "book-variant": 983231,
  "book-variant-multiple": 983228,
  "bookmark": 983232,
  "bookmark-check": 983233,
  "bookmark-check-outline": 988027,
  "bookmark-minus": 985548,
  "bookmark-minus-outline": 985549,
  "bookmark-multiple": 986645,
  "bookmark-multiple-outline": 986646,
  "bookmark-music": 983234,
  "bookmark-music-outline": 988025,
  "bookmark-off": 985550,
  "bookmark-off-outline": 985551,
  "bookmark-outline": 983235,
  "bookmark-plus": 983237,
  "bookmark-plus-outline": 983236,
  "bookmark-remove": 983238,
  "bookmark-remove-outline": 988026,
  "bookshelf": 987743,
  "boom-gate": 986758,
  "boom-gate-alert": 986759,
  "boom-gate-alert-outline": 986760,
  "boom-gate-down": 986761,
  "boom-gate-down-outline": 986762,
  "boom-gate-outline": 986763,
  "boom-gate-up": 986764,
  "boom-gate-up-outline": 986765,
  "boombox": 984540,
  "boomerang": 987343,
  "bootstrap": 984774,
  "border-all": 983239,
  "border-all-variant": 985249,
  "border-bottom": 983240,
  "border-bottom-variant": 985250,
  "border-color": 983241,
  "border-horizontal": 983242,
  "border-inside": 983243,
  "border-left": 983244,
  "border-left-variant": 985251,
  "border-none": 983245,
  "border-none-variant": 985252,
  "border-outside": 983246,
  "border-right": 983247,
  "border-right-variant": 985253,
  "border-style": 983248,
  "border-top": 983249,
  "border-top-variant": 985254,
  "border-vertical": 983250,
  "bottle-soda": 987248,
  "bottle-soda-classic": 987249,
  "bottle-soda-classic-outline": 988003,
  "bottle-soda-outline": 987250,
  "bottle-tonic": 987438,
  "bottle-tonic-outline": 987439,
  "bottle-tonic-plus": 987440,
  "bottle-tonic-plus-outline": 987441,
  "bottle-tonic-skull": 987442,
  "bottle-tonic-skull-outline": 987443,
  "bottle-wine": 985172,
  "bottle-wine-outline": 987920,
  "bow-tie": 984696,
  "bowl": 983694,
  "bowl-mix": 984599,
  "bowl-mix-outline": 983780,
  "bowl-outline": 983721,
  "bowling": 983251,
  "box": 983252,
  "box-cutter": 983253,
  "box-cutter-off": 985930,
  "box-shadow": 984631,
  "boxing-glove": 985957,
  "braille": 985552,
  "brain": 985553,
  "bread-slice": 986350,
  "bread-slice-outline": 986351,
  "bridge": 984600,
  "briefcase": 983254,
  "briefcase-account": 986352,
  "briefcase-account-outline": 986353,
  "briefcase-check": 983255,
  "briefcase-check-outline": 987934,
  "briefcase-clock": 987344,
  "briefcase-clock-outline": 987345,
  "briefcase-download": 983256,
  "briefcase-download-outline": 986173,
  "briefcase-edit": 985752,
  "briefcase-edit-outline": 986174,
  "briefcase-minus": 985642,
  "briefcase-minus-outline": 986175,
  "briefcase-outline": 985108,
  "briefcase-plus": 985643,
  "briefcase-plus-outline": 986176,
  "briefcase-remove": 985644,
  "briefcase-remove-outline": 986177,
  "briefcase-search": 985645,
  "briefcase-search-outline": 986178,
  "briefcase-upload": 983257,
  "briefcase-upload-outline": 986179,
  "briefcase-variant": 988308,
  "briefcase-variant-outline": 988309,
  "brightness-1": 983258,
  "brightness-2": 983259,
  "brightness-3": 983260,
  "brightness-4": 983261,
  "brightness-5": 983262,
  "brightness-6": 983263,
  "brightness-7": 983264,
  "brightness-auto": 983265,
  "brightness-percent": 986354,
  "broom": 983266,
  "brush": 983267,
  "bucket": 988181,
  "bucket-outline": 988182,
  "buddhism": 985419,
  "buffer": 984601,
  "buffet": 984440,
  "bug": 983268,
  "bug-check": 985646,
  "bug-check-outline": 985647,
  "bug-outline": 985648,
  "bugle": 986548,
  "bulldozer": 985890,
  "bullet": 986355,
  "bulletin-board": 983269,
  "bullhorn": 983270,
  "bullhorn-outline": 985891,
  "bullseye": 984541,
  "bullseye-arrow": 985289,
  "bulma": 987879,
  "bunk-bed": 987906,
  "bunk-bed-outline": 983191,
  "bus": 983271,
  "bus-alert": 985753,
  "bus-articulated-end": 984988,
  "bus-articulated-front": 984989,
  "bus-clock": 985290,
  "bus-double-decker": 984990,
  "bus-marker": 987666,
  "bus-multiple": 986943,
  "bus-school": 984991,
  "bus-side": 984992,
  "bus-stop": 987154,
  "bus-stop-covered": 987155,
  "bus-stop-uncovered": 987156,
  "cable-data": 988052,
  "cached": 983272,
  "cactus": 986549,
  "cake": 983273,
  "cake-layered": 983274,
  "cake-variant": 983275,
  "calculator": 983276,
  "calculator-variant": 985754,
  "calendar": 983277,
  "calendar-account": 986839,
  "calendar-account-outline": 986840,
  "calendar-alert": 985649,
  "calendar-arrow-left": 987444,
  "calendar-arrow-right": 987445,
  "calendar-blank": 983278,
  "calendar-blank-multiple": 987251,
  "calendar-blank-outline": 985958,
  "calendar-check": 983279,
  "calendar-check-outline": 986180,
  "calendar-clock": 983280,
  "calendar-edit": 985255,
  "calendar-export": 985892,
  "calendar-heart": 985554,
  "calendar-import": 985893,
  "calendar-minus": 986460,
  "calendar-month": 986647,
  "calendar-month-outline": 986648,
  "calendar-multiple": 983281,
  "calendar-multiple-check": 983282,
  "calendar-multiselect": 985650,
  "calendar-outline": 985959,
  "calendar-plus": 983283,
  "calendar-question": 984722,
  "calendar-range": 984697,
  "calendar-range-outline": 985960,
  "calendar-refresh": 983521,
  "calendar-refresh-outline": 983555,
  "calendar-remove": 983284,
  "calendar-remove-outline": 986181,
  "calendar-search": 985420,
  "calendar-star": 985555,
  "calendar-sync": 986766,
  "calendar-sync-outline": 986767,
  "calendar-text": 983285,
  "calendar-text-outline": 986182,
  "calendar-today": 983286,
  "calendar-week": 985651,
  "calendar-week-begin": 985652,
  "calendar-weekend": 986841,
  "calendar-weekend-outline": 986842,
  "call-made": 983287,
  "call-merge": 983288,
  "call-missed": 983289,
  "call-received": 983290,
  "call-split": 983291,
  "camcorder": 983292,
  "camcorder-off": 983295,
  "camera": 983296,
  "camera-account": 985291,
  "camera-burst": 984723,
  "camera-control": 985961,
  "camera-enhance": 983297,
  "camera-enhance-outline": 985962,
  "camera-front": 983298,
  "camera-front-variant": 983299,
  "camera-gopro": 984993,
  "camera-image": 985292,
  "camera-iris": 983300,
  "camera-metering-center": 984994,
  "camera-metering-matrix": 984995,
  "camera-metering-partial": 984996,
  "camera-metering-spot": 984997,
  "camera-off": 984543,
  "camera-outline": 986461,
  "camera-party-mode": 983301,
  "camera-plus": 986843,
  "camera-plus-outline": 986844,
  "camera-rear": 983302,
  "camera-rear-variant": 983303,
  "camera-retake": 986649,
  "camera-retake-outline": 986650,
  "camera-switch": 983304,
  "camera-switch-outline": 985162,
  "camera-timer": 983305,
  "camera-wireless": 986550,
  "camera-wireless-outline": 986551,
  "campfire": 986845,
  "cancel": 984890,
  "candle": 984546,
  "candycane": 983306,
  "cannabis": 984998,
  "caps-lock": 985755,
  "car": 983307,
  "car-2-plus": 987157,
  "car-3-plus": 987158,
  "car-arrow-left": 988082,
  "car-arrow-right": 988083,
  "car-back": 986651,
  "car-battery": 983308,
  "car-brake-abs": 986183,
  "car-brake-alert": 986184,
  "car-brake-hold": 986462,
  "car-brake-parking": 986463,
  "car-brake-retarder": 987159,
  "car-child-seat": 987043,
  "car-clutch": 987160,
  "car-cog": 988108,
  "car-connected": 983309,
  "car-convertible": 984999,
  "car-coolant-level": 987161,
  "car-cruise-control": 986464,
  "car-defrost-front": 986465,
  "car-defrost-rear": 986466,
  "car-door": 985963,
  "car-door-lock": 987293,
  "car-electric": 985964,
  "car-esp": 986185,
  "car-estate": 985000,
  "car-hatchback": 985001,
  "car-info": 987582,
  "car-key": 985965,
  "car-light-dimmed": 986186,
  "car-light-fog": 986187,
  "car-light-high": 986188,
  "car-limousine": 985293,
  "car-multiple": 985966,
  "car-off": 986652,
  "car-parking-lights": 986467,
  "car-pickup": 985002,
  "car-seat": 987044,
  "car-seat-cooler": 987045,
  "car-seat-heater": 987046,
  "car-settings": 988109,
  "car-shift-pattern": 986944,
  "car-side": 985003,
  "car-sports": 985004,
  "car-tire-alert": 986189,
  "car-traction-control": 986468,
  "car-turbocharger": 987162,
  "car-wash": 983310,
  "car-windshield": 987163,
  "car-windshield-outline": 987164,
  "carabiner": 988352,
  "caravan": 985005,
  "card": 985967,
  "card-account-details": 984530,
  "card-account-details-outline": 986539,
  "card-account-details-star": 983715,
  "card-account-details-star-outline": 984795,
  "card-account-mail": 983438,
  "card-account-mail-outline": 986776,
  "card-account-phone": 986777,
  "card-account-phone-outline": 986778,
  "card-bulleted": 985968,
  "card-bulleted-off": 985969,
  "card-bulleted-off-outline": 985970,
  "card-bulleted-outline": 985971,
  "card-bulleted-settings": 985972,
  "card-bulleted-settings-outline": 985973,
  "card-outline": 985974,
  "card-plus": 987647,
  "card-plus-outline": 987648,
  "card-search": 987252,
  "card-search-outline": 987253,
  "card-text": 985975,
  "card-text-outline": 985976,
  "cards": 984632,
  "cards-club": 985294,
  "cards-diamond": 985295,
  "cards-diamond-outline": 987165,
  "cards-heart": 985296,
  "cards-outline": 984633,
  "cards-playing-outline": 984634,
  "cards-spade": 985297,
  "cards-variant": 984775,
  "carrot": 983311,
  "cart": 983312,
  "cart-arrow-down": 986470,
  "cart-arrow-right": 986190,
  "cart-arrow-up": 986471,
  "cart-minus": 986472,
  "cart-off": 984683,
  "cart-outline": 983313,
  "cart-plus": 983314,
  "cart-remove": 986473,
  "case-sensitive-alt": 983315,
  "cash": 983316,
  "cash-100": 983317,
  "cash-marker": 986552,
  "cash-minus": 987744,
  "cash-multiple": 983318,
  "cash-plus": 987745,
  "cash-refund": 985756,
  "cash-register": 986356,
  "cash-remove": 987746,
  "cash-usd": 987510,
  "cash-usd-outline": 983319,
  "cassette": 985556,
  "cast": 983320,
  "cast-audio": 987166,
  "cast-connected": 983321,
  "cast-education": 986653,
  "cast-off": 984970,
  "castle": 983322,
  "cat": 983323,
  "cctv": 985006,
  "ceiling-light": 984937,
  "cellphone": 983324,
  "cellphone-android": 983325,
  "cellphone-arrow-down": 985557,
  "cellphone-basic": 983326,
  "cellphone-charging": 988055,
  "cellphone-cog": 985425,
  "cellphone-dock": 983327,
  "cellphone-erase": 985421,
  "cellphone-information": 986945,
  "cellphone-iphone": 983328,
  "cellphone-key": 985422,
  "cellphone-link": 983329,
  "cellphone-link-off": 983330,
  "cellphone-lock": 985423,
  "cellphone-message": 985299,
  "cellphone-message-off": 987346,
  "cellphone-nfc": 986768,
  "cellphone-nfc-off": 987864,
  "cellphone-off": 985424,
  "cellphone-play": 987167,
  "cellphone-screenshot": 985653,
  "cellphone-settings": 983331,
  "cellphone-sound": 985426,
  "cellphone-text": 985298,
  "cellphone-wireless": 985109,
  "celtic-cross": 986357,
  "centos": 987418,
  "certificate": 983332,
  "certificate-outline": 987528,
  "chair-rolling": 986952,
  "chair-school": 983333,
  "charity": 986191,
  "chart-arc": 983334,
  "chart-areaspline": 983335,
  "chart-areaspline-variant": 986769,
  "chart-bar": 983336,
  "chart-bar-stacked": 984938,
  "chart-bell-curve": 986192,
  "chart-bell-curve-cumulative": 987047,
  "chart-bubble": 984547,
  "chart-donut": 985007,
  "chart-donut-variant": 985008,
  "chart-gantt": 984684,
  "chart-histogram": 983337,
  "chart-line": 983338,
  "chart-line-stacked": 984939,
  "chart-line-variant": 985009,
  "chart-multiline": 985300,
  "chart-multiple": 987667,
  "chart-pie": 983339,
  "chart-ppf": 988032,
  "chart-sankey": 987615,
  "chart-sankey-variant": 987616,
  "chart-scatter-plot": 986770,
  "chart-scatter-plot-hexbin": 984685,
  "chart-timeline": 984686,
  "chart-timeline-variant": 986771,
  "chart-tree": 986772,
  "chat": 985977,
  "chat-alert": 985978,
  "chat-alert-outline": 987849,
  "chat-minus": 988176,
  "chat-minus-outline": 988179,
  "chat-outline": 986846,
  "chat-plus": 988175,
  "chat-plus-outline": 988178,
  "chat-processing": 985979,
  "chat-processing-outline": 987850,
  "chat-remove": 988177,
  "chat-remove-outline": 988180,
  "chat-sleep": 987857,
  "chat-sleep-outline": 987858,
  "check": 983340,
  "check-all": 983341,
  "check-bold": 986654,
  "check-box-multiple-outline": 986193,
  "check-box-outline": 986194,
  "check-circle": 984544,
  "check-circle-outline": 984545,
  "check-decagram": 984977,
  "check-network": 986195,
  "check-network-outline": 986196,
  "check-outline": 985173,
  "check-underline": 986655,
  "check-underline-circle": 986656,
  "check-underline-circle-outline": 986657,
  "checkbook": 985757,
  "checkbox-blank": 983342,
  "checkbox-blank-circle": 983343,
  "checkbox-blank-circle-outline": 983344,
  "checkbox-blank-off": 987884,
  "checkbox-blank-off-outline": 987885,
  "checkbox-blank-outline": 983345,
  "checkbox-intermediate": 985174,
  "checkbox-marked": 983346,
  "checkbox-marked-circle": 983347,
  "checkbox-marked-circle-outline": 983348,
  "checkbox-marked-outline": 983349,
  "checkbox-multiple-blank": 983350,
  "checkbox-multiple-blank-circle": 984635,
  "checkbox-multiple-blank-circle-outline": 984636,
  "checkbox-multiple-blank-outline": 983351,
  "checkbox-multiple-marked": 983352,
  "checkbox-multiple-marked-circle": 984637,
  "checkbox-multiple-marked-circle-outline": 984638,
  "checkbox-multiple-marked-outline": 983353,
  "checkerboard": 983354,
  "checkerboard-minus": 987650,
  "checkerboard-plus": 987649,
  "checkerboard-remove": 987651,
  "cheese": 987833,
  "cheese-off": 988142,
  "chef-hat": 985980,
  "chemical-weapon": 983355,
  "chess-bishop": 985180,
  "chess-king": 985175,
  "chess-knight": 985176,
  "chess-pawn": 985177,
  "chess-queen": 985178,
  "chess-rook": 985179,
  "chevron-double-down": 983356,
  "chevron-double-left": 983357,
  "chevron-double-right": 983358,
  "chevron-double-up": 983359,
  "chevron-down": 983360,
  "chevron-down-box": 985558,
  "chevron-down-box-outline": 985559,
  "chevron-down-circle": 985894,
  "chevron-down-circle-outline": 985895,
  "chevron-left": 983361,
  "chevron-left-box": 985560,
  "chevron-left-box-outline": 985561,
  "chevron-left-circle": 985896,
  "chevron-left-circle-outline": 985897,
  "chevron-right": 983362,
  "chevron-right-box": 985562,
  "chevron-right-box-outline": 985563,
  "chevron-right-circle": 985898,
  "chevron-right-circle-outline": 985899,
  "chevron-triple-down": 986553,
  "chevron-triple-left": 986554,
  "chevron-triple-right": 986555,
  "chevron-triple-up": 986556,
  "chevron-up": 983363,
  "chevron-up-box": 985564,
  "chevron-up-box-outline": 985565,
  "chevron-up-circle": 985900,
  "chevron-up-circle-outline": 985901,
  "chili-hot": 985010,
  "chili-medium": 985011,
  "chili-mild": 985012,
  "chili-off": 988263,
  "chip": 984602,
  "christianity": 985427,
  "christianity-outline": 986358,
  "church": 983364,
  "cigar": 987529,
  "cigar-off": 988187,
  "circle": 984933,
  "circle-double": 986773,
  "circle-edit-outline": 985301,
  "circle-expand": 986774,
  "circle-half": 988053,
  "circle-half-full": 988054,
  "circle-medium": 985566,
  "circle-multiple": 985912,
  "circle-multiple-outline": 984725,
  "circle-off-outline": 987347,
  "circle-outline": 984934,
  "circle-slice-1": 985758,
  "circle-slice-2": 985759,
  "circle-slice-3": 985760,
  "circle-slice-4": 985761,
  "circle-slice-5": 985762,
  "circle-slice-6": 985763,
  "circle-slice-7": 985764,
  "circle-slice-8": 985765,
  "circle-small": 985567,
  "circular-saw": 986658,
  "city": 983366,
  "city-variant": 985654,
  "city-variant-outline": 985655,
  "clipboard": 983367,
  "clipboard-account": 983368,
  "clipboard-account-outline": 986197,
  "clipboard-alert": 983369,
  "clipboard-alert-outline": 986359,
  "clipboard-arrow-down": 983370,
  "clipboard-arrow-down-outline": 986198,
  "clipboard-arrow-left": 983371,
  "clipboard-arrow-left-outline": 986360,
  "clipboard-arrow-right": 986361,
  "clipboard-arrow-right-outline": 986362,
  "clipboard-arrow-up": 986199,
  "clipboard-arrow-up-outline": 986200,
  "clipboard-check": 983374,
  "clipboard-check-multiple": 987747,
  "clipboard-check-multiple-outline": 987748,
  "clipboard-check-outline": 985256,
  "clipboard-file": 987749,
  "clipboard-file-outline": 987750,
  "clipboard-flow": 984776,
  "clipboard-flow-outline": 987415,
  "clipboard-list": 987348,
  "clipboard-list-outline": 987349,
  "clipboard-multiple": 987751,
  "clipboard-multiple-outline": 987752,
  "clipboard-outline": 983372,
  "clipboard-play": 986201,
  "clipboard-play-multiple": 987753,
  "clipboard-play-multiple-outline": 987754,
  "clipboard-play-outline": 986202,
  "clipboard-plus": 984913,
  "clipboard-plus-outline": 987935,
  "clipboard-pulse": 985181,
  "clipboard-pulse-outline": 985182,
  "clipboard-text": 983373,
  "clipboard-text-multiple": 987755,
  "clipboard-text-multiple-outline": 987756,
  "clipboard-text-outline": 985656,
  "clipboard-text-play": 986203,
  "clipboard-text-play-outline": 986204,
  "clippy": 983375,
  "clock": 985428,
  "clock-alert": 985429,
  "clock-alert-outline": 984526,
  "clock-check": 987048,
  "clock-check-outline": 987049,
  "clock-digital": 986775,
  "clock-end": 983377,
  "clock-fast": 983378,
  "clock-in": 983379,
  "clock-out": 983380,
  "clock-outline": 983376,
  "clock-start": 983381,
  "clock-time-eight": 988230,
  "clock-time-eight-outline": 988242,
  "clock-time-eleven": 988233,
  "clock-time-eleven-outline": 988245,
  "clock-time-five": 988227,
  "clock-time-five-outline": 988239,
  "clock-time-four": 988226,
  "clock-time-four-outline": 988238,
  "clock-time-nine": 988231,
  "clock-time-nine-outline": 988243,
  "clock-time-one": 988223,
  "clock-time-one-outline": 988235,
  "clock-time-seven": 988229,
  "clock-time-seven-outline": 988241,
  "clock-time-six": 988228,
  "clock-time-six-outline": 988240,
  "clock-time-ten": 988232,
  "clock-time-ten-outline": 988244,
  "clock-time-three": 988225,
  "clock-time-three-outline": 988237,
  "clock-time-twelve": 988234,
  "clock-time-twelve-outline": 988246,
  "clock-time-two": 988224,
  "clock-time-two-outline": 988236,
  "close": 983382,
  "close-box": 983383,
  "close-box-multiple": 986205,
  "close-box-multiple-outline": 986206,
  "close-box-outline": 983384,
  "close-circle": 983385,
  "close-circle-multiple": 984618,
  "close-circle-multiple-outline": 985219,
  "close-circle-outline": 983386,
  "close-network": 983387,
  "close-network-outline": 986207,
  "close-octagon": 983388,
  "close-octagon-outline": 983389,
  "close-outline": 984777,
  "close-thick": 988056,
  "closed-caption": 983390,
  "closed-caption-outline": 986557,
  "cloud": 983391,
  "cloud-alert": 985568,
  "cloud-braces": 985013,
  "cloud-check": 983392,
  "cloud-check-outline": 987852,
  "cloud-circle": 983393,
  "cloud-download": 983394,
  "cloud-download-outline": 985981,
  "cloud-lock": 987633,
  "cloud-lock-outline": 987634,
  "cloud-off-outline": 983396,
  "cloud-outline": 983395,
  "cloud-print": 983397,
  "cloud-print-outline": 983398,
  "cloud-question": 985657,
  "cloud-refresh": 984362,
  "cloud-search": 985430,
  "cloud-search-outline": 985431,
  "cloud-sync": 984639,
  "cloud-sync-outline": 987862,
  "cloud-tags": 985014,
  "cloud-upload": 983399,
  "cloud-upload-outline": 985982,
  "clover": 985110,
  "coach-lamp": 987168,
  "coat-rack": 987294,
  "code-array": 983400,
  "code-braces": 983401,
  "code-braces-box": 987350,
  "code-brackets": 983402,
  "code-equal": 983403,
  "code-greater-than": 983404,
  "code-greater-than-or-equal": 983405,
  "code-json": 984614,
  "code-less-than": 983406,
  "code-less-than-or-equal": 983407,
  "code-not-equal": 983408,
  "code-not-equal-variant": 983409,
  "code-parentheses": 983410,
  "code-parentheses-box": 987351,
  "code-string": 983411,
  "code-tags": 983412,
  "code-tags-check": 984724,
  "codepen": 983413,
  "coffee": 983414,
  "coffee-maker": 987295,
  "coffee-off": 987050,
  "coffee-off-outline": 987051,
  "coffee-outline": 984778,
  "coffee-to-go": 983415,
  "coffee-to-go-outline": 987918,
  "coffin": 985983,
  "cog": 984211,
  "cog-box": 984212,
  "cog-clockwise": 987613,
  "cog-counterclockwise": 987614,
  "cog-off": 988110,
  "cog-off-outline": 988111,
  "cog-outline": 985275,
  "cog-refresh": 988254,
  "cog-refresh-outline": 988255,
  "cog-sync": 988256,
  "cog-sync-outline": 988257,
  "cog-transfer": 987227,
  "cog-transfer-outline": 987228,
  "cogs": 985302,
  "collage": 984640,
  "collapse-all": 985766,
  "collapse-all-outline": 985767,
  "color-helper": 983417,
  "comma": 986659,
  "comma-box": 986667,
  "comma-box-outline": 986660,
  "comma-circle": 986661,
  "comma-circle-outline": 986662,
  "comment": 983418,
  "comment-account": 983419,
  "comment-account-outline": 983420,
  "comment-alert": 983421,
  "comment-alert-outline": 983422,
  "comment-arrow-left": 985569,
  "comment-arrow-left-outline": 985570,
  "comment-arrow-right": 985571,
  "comment-arrow-right-outline": 985572,
  "comment-check": 983423,
  "comment-check-outline": 983424,
  "comment-edit": 987583,
  "comment-edit-outline": 987844,
  "comment-eye": 985658,
  "comment-eye-outline": 985659,
  "comment-multiple": 985183,
  "comment-multiple-outline": 983425,
  "comment-outline": 983426,
  "comment-plus": 985573,
  "comment-plus-outline": 983427,
  "comment-processing": 983428,
  "comment-processing-outline": 983429,
  "comment-question": 985111,
  "comment-question-outline": 983430,
  "comment-quote": 987169,
  "comment-quote-outline": 987170,
  "comment-remove": 984542,
  "comment-remove-outline": 983431,
  "comment-search": 985660,
  "comment-search-outline": 985661,
  "comment-text": 983432,
  "comment-text-multiple": 985184,
  "comment-text-multiple-outline": 985185,
  "comment-text-outline": 983433,
  "compare": 983434,
  "compare-horizontal": 988306,
  "compare-vertical": 988307,
  "compass": 983435,
  "compass-off": 985984,
  "compass-off-outline": 985985,
  "compass-outline": 983436,
  "compass-rose": 988034,
  "concourse-ci": 987296,
  "console": 983437,
  "console-line": 985015,
  "console-network": 985257,
  "console-network-outline": 986208,
  "consolidate": 987352,
  "contactless-payment": 986474,
  "contactless-payment-circle": 983841,
  "contactless-payment-circle-outline": 984072,
  "contacts": 984779,
  "contacts-outline": 984504,
  "contain": 985662,
  "contain-end": 985663,
  "contain-start": 985664,
  "content-copy": 983439,
  "content-cut": 983440,
  "content-duplicate": 983441,
  "content-paste": 983442,
  "content-save": 983443,
  "content-save-alert": 986946,
  "content-save-alert-outline": 986947,
  "content-save-all": 983444,
  "content-save-all-outline": 986948,
  "content-save-cog": 988251,
  "content-save-cog-outline": 988252,
  "content-save-edit": 986363,
  "content-save-edit-outline": 986364,
  "content-save-move": 986663,
  "content-save-move-outline": 986664,
  "content-save-outline": 985112,
  "content-save-settings": 984603,
  "content-save-settings-outline": 985902,
  "contrast": 983445,
  "contrast-box": 983446,
  "contrast-circle": 983447,
  "controller-classic": 985986,
  "controller-classic-outline": 985987,
  "cookie": 983448,
  "coolant-temperature": 984008,
  "copyright": 984550,
  "cordova": 985432,
  "corn": 985016,
  "corn-off": 988143,
  "cosine-wave": 988281,
  "counter": 983449,
  "cow": 983450,
  "cpu-32-bit": 986847,
  "cpu-64-bit": 986848,
  "crane": 985186,
  "creation": 984692,
  "creative-commons": 986475,
  "credit-card": 987119,
  "credit-card-check": 988112,
  "credit-card-check-outline": 988113,
  "credit-card-clock": 986849,
  "credit-card-clock-outline": 986850,
  "credit-card-marker": 984744,
  "credit-card-marker-outline": 986558,
  "credit-card-minus": 987052,
  "credit-card-minus-outline": 987053,
  "credit-card-multiple": 987120,
  "credit-card-multiple-outline": 983452,
  "credit-card-off": 987121,
  "credit-card-off-outline": 984548,
  "credit-card-outline": 983451,
  "credit-card-plus": 987122,
  "credit-card-plus-outline": 984694,
  "credit-card-refund": 987123,
  "credit-card-refund-outline": 985768,
  "credit-card-remove": 987054,
  "credit-card-remove-outline": 987055,
  "credit-card-scan": 987124,
  "credit-card-scan-outline": 983453,
  "credit-card-settings": 987125,
  "credit-card-settings-outline": 985303,
  "credit-card-wireless": 985090,
  "credit-card-wireless-off": 984442,
  "credit-card-wireless-off-outline": 984443,
  "credit-card-wireless-outline": 986476,
  "cricket": 986477,
  "crop": 983454,
  "crop-free": 983455,
  "crop-landscape": 983456,
  "crop-portrait": 983457,
  "crop-rotate": 984726,
  "crop-square": 983458,
  "crosshairs": 983459,
  "crosshairs-gps": 983460,
  "crosshairs-off": 986949,
  "crosshairs-question": 987446,
  "crown": 983461,
  "crown-outline": 987600,
  "cryengine": 985433,
  "crystal-ball": 985903,
  "cube": 983462,
  "cube-off": 988188,
  "cube-off-outline": 988189,
  "cube-outline": 983463,
  "cube-scan": 985988,
  "cube-send": 983464,
  "cube-unfolded": 983465,
  "cup": 983466,
  "cup-off": 984549,
  "cup-off-outline": 988029,
  "cup-outline": 987919,
  "cup-water": 983467,
  "cupboard": 986950,
  "cupboard-outline": 986951,
  "cupcake": 985434,
  "curling": 985187,
  "currency-bdt": 985188,
  "currency-brl": 985989,
  "currency-btc": 983468,
  "currency-cny": 985018,
  "currency-eth": 985019,
  "currency-eur": 983469,
  "currency-eur-off": 987925,
  "currency-gbp": 983470,
  "currency-ils": 986209,
  "currency-inr": 983471,
  "currency-jpy": 985020,
  "currency-krw": 985021,
  "currency-kzt": 985189,
  "currency-ngn": 983472,
  "currency-php": 985574,
  "currency-rial": 986780,
  "currency-rub": 983473,
  "currency-sign": 985022,
  "currency-try": 983474,
  "currency-twd": 985023,
  "currency-usd": 983489,
  "currency-usd-circle": 987499,
  "currency-usd-circle-outline": 983416,
  "currency-usd-off": 984698,
  "current-ac": 988288,
  "current-dc": 985436,
  "cursor-default": 983488,
  "cursor-default-click": 986365,
  "cursor-default-click-outline": 986366,
  "cursor-default-gesture": 987431,
  "cursor-default-gesture-outline": 987432,
  "cursor-default-outline": 983487,
  "cursor-move": 983486,
  "cursor-pointer": 983485,
  "cursor-text": 984551,
  "database": 983484,
  "database-check": 985769,
  "database-edit": 985990,
  "database-export": 985438,
  "database-import": 985437,
  "database-lock": 985770,
  "database-marker": 987894,
  "database-minus": 983483,
  "database-plus": 983482,
  "database-refresh": 984514,
  "database-remove": 986368,
  "database-search": 985190,
  "database-settings": 986369,
  "database-sync": 986367,
  "death-star": 985304,
  "death-star-variant": 985305,
  "deathly-hallows": 985991,
  "debian": 985306,
  "debug-step-into": 983481,
  "debug-step-out": 983480,
  "debug-step-over": 983479,
  "decagram": 984940,
  "decagram-outline": 984941,
  "decimal": 987297,
  "decimal-comma": 987298,
  "decimal-comma-decrease": 987299,
  "decimal-comma-increase": 987300,
  "decimal-decrease": 983478,
  "decimal-increase": 983477,
  "delete": 983476,
  "delete-alert": 987301,
  "delete-alert-outline": 987302,
  "delete-circle": 984707,
  "delete-circle-outline": 985992,
  "delete-empty": 984780,
  "delete-empty-outline": 986781,
  "delete-forever": 984552,
  "delete-forever-outline": 985993,
  "delete-off": 987303,
  "delete-off-outline": 987304,
  "delete-outline": 985575,
  "delete-restore": 985113,
  "delete-sweep": 984553,
  "delete-sweep-outline": 986210,
  "delete-variant": 983475,
  "delta": 983490,
  "desk": 987705,
  "desk-lamp": 985439,
  "deskphone": 983491,
  "desktop-classic": 985024,
  "desktop-mac": 983492,
  "desktop-mac-dashboard": 985576,
  "desktop-tower": 983493,
  "desktop-tower-monitor": 985771,
  "details": 983494,
  "dev-to": 986478,
  "developer-board": 984727,
  "deviantart": 983495,
  "devices": 987056,
  "diabetes": 987430,
  "dialpad": 984604,
  "diameter": 986211,
  "diameter-outline": 986212,
  "diameter-variant": 986213,
  "diamond": 985994,
  "diamond-outline": 985995,
  "diamond-stone": 983496,
  "dice-1": 983498,
  "dice-1-outline": 987466,
  "dice-2": 983499,
  "dice-2-outline": 987467,
  "dice-3": 983500,
  "dice-3-outline": 987468,
  "dice-4": 983501,
  "dice-4-outline": 987469,
  "dice-5": 983502,
  "dice-5-outline": 987470,
  "dice-6": 983503,
  "dice-6-outline": 987471,
  "dice-d10": 987475,
  "dice-d10-outline": 984943,
  "dice-d12": 987476,
  "dice-d12-outline": 985191,
  "dice-d20": 987477,
  "dice-d20-outline": 984554,
  "dice-d4": 987472,
  "dice-d4-outline": 984555,
  "dice-d6": 987473,
  "dice-d6-outline": 984557,
  "dice-d8": 987474,
  "dice-d8-outline": 984556,
  "dice-multiple": 984942,
  "dice-multiple-outline": 987478,
  "digital-ocean": 987703,
  "dip-switch": 985025,
  "directions": 983504,
  "directions-fork": 984641,
  "disc": 984558,
  "disc-alert": 983505,
  "disc-player": 985440,
  "discord": 984687,
  "dishwasher": 985772,
  "dishwasher-alert": 987576,
  "dishwasher-off": 987577,
  "disqus": 983506,
  "distribute-horizontal-center": 987593,
  "distribute-horizontal-left": 987592,
  "distribute-horizontal-right": 987594,
  "distribute-vertical-bottom": 987595,
  "distribute-vertical-center": 987596,
  "distribute-vertical-top": 987597,
  "diving-flippers": 986559,
  "diving-helmet": 986560,
  "diving-scuba": 986561,
  "diving-scuba-flag": 986562,
  "diving-scuba-tank": 986563,
  "diving-scuba-tank-multiple": 986564,
  "diving-snorkel": 986565,
  "division": 983508,
  "division-box": 983509,
  "dlna": 985665,
  "dna": 984708,
  "dns": 983510,
  "dns-outline": 985996,
  "do-not-disturb": 984728,
  "do-not-disturb-off": 984729,
  "dock-bottom": 987305,
  "dock-left": 987306,
  "dock-right": 987307,
  "dock-window": 987308,
  "docker": 985192,
  "doctor": 985666,
  "dog": 985667,
  "dog-service": 985773,
  "dog-side": 985668,
  "dolby": 984755,
  "dolly": 986782,
  "domain": 983511,
  "domain-off": 986479,
  "domain-plus": 987309,
  "domain-remove": 987310,
  "dome-light": 988190,
  "domino-mask": 987171,
  "donkey": 985026,
  "door": 985114,
  "door-closed": 985115,
  "door-closed-lock": 987311,
  "door-open": 985116,
  "doorbell": 987878,
  "doorbell-video": 985193,
  "dot-net": 985774,
  "dots-horizontal": 983512,
  "dots-horizontal-circle": 985027,
  "dots-horizontal-circle-outline": 985997,
  "dots-vertical": 983513,
  "dots-vertical-circle": 985028,
  "dots-vertical-circle-outline": 985998,
  "douban": 984730,
  "download": 983514,
  "download-box": 988258,
  "download-box-outline": 988259,
  "download-circle": 988260,
  "download-circle-outline": 988261,
  "download-lock": 987936,
  "download-lock-outline": 987937,
  "download-multiple": 985577,
  "download-network": 984820,
  "download-network-outline": 986214,
  "download-off": 987312,
  "download-off-outline": 987313,
  "download-outline": 985999,
  "drag": 983515,
  "drag-horizontal": 983516,
  "drag-horizontal-variant": 987888,
  "drag-variant": 986000,
  "drag-vertical": 983517,
  "drag-vertical-variant": 987889,
  "drama-masks": 986370,
  "draw": 986953,
  "drawing": 983518,
  "drawing-box": 983519,
  "dresser": 986954,
  "dresser-outline": 986955,
  "drone": 983522,
  "dropbox": 983523,
  "drupal": 983524,
  "duck": 983525,
  "dumbbell": 983526,
  "dump-truck": 986215,
  "ear-hearing": 985029,
  "ear-hearing-off": 985669,
  "earth": 983527,
  "earth-arrow-right": 987921,
  "earth-box": 984781,
  "earth-box-minus": 988167,
  "earth-box-off": 984782,
  "earth-box-plus": 988166,
  "earth-box-remove": 988168,
  "earth-minus": 988164,
  "earth-off": 983528,
  "earth-plus": 988163,
  "earth-remove": 988165,
  "egg": 985775,
  "egg-easter": 985776,
  "egg-off": 988144,
  "egg-off-outline": 988145,
  "egg-outline": 988146,
  "eight-track": 985578,
  "eject": 983530,
  "eject-outline": 986001,
  "electric-switch": 986783,
  "electric-switch-closed": 987353,
  "electron-framework": 987172,
  "elephant": 985030,
  "elevation-decline": 983531,
  "elevation-rise": 983532,
  "elevator": 983533,
  "elevator-down": 987842,
  "elevator-passenger": 988033,
  "elevator-up": 987841,
  "ellipse": 986784,
  "ellipse-outline": 986785,
  "email": 983534,
  "email-alert": 984783,
  "email-alert-outline": 986434,
  "email-box": 986371,
  "email-check": 985777,
  "email-check-outline": 985778,
  "email-edit": 986851,
  "email-edit-outline": 986852,
  "email-lock": 983537,
  "email-mark-as-unread": 986002,
  "email-minus": 986853,
  "email-minus-outline": 986854,
  "email-multiple": 986855,
  "email-multiple-outline": 986856,
  "email-newsletter": 987057,
  "email-off": 988131,
  "email-off-outline": 988132,
  "email-open": 983535,
  "email-open-multiple": 986857,
  "email-open-multiple-outline": 986858,
  "email-open-outline": 984559,
  "email-outline": 983536,
  "email-plus": 985579,
  "email-plus-outline": 985580,
  "email-receive": 987354,
  "email-receive-outline": 987355,
  "email-search": 985441,
  "email-search-outline": 985442,
  "email-send": 987356,
  "email-send-outline": 987357,
  "email-sync": 987847,
  "email-sync-outline": 987848,
  "email-variant": 984560,
  "ember": 985904,
  "emby": 984756,
  "emoticon": 986216,
  "emoticon-angry": 986217,
  "emoticon-angry-outline": 986218,
  "emoticon-confused": 987358,
  "emoticon-confused-outline": 987359,
  "emoticon-cool": 986219,
  "emoticon-cool-outline": 983539,
  "emoticon-cry": 986220,
  "emoticon-cry-outline": 986221,
  "emoticon-dead": 986222,
  "emoticon-dead-outline": 984731,
  "emoticon-devil": 986223,
  "emoticon-devil-outline": 983540,
  "emoticon-excited": 986224,
  "emoticon-excited-outline": 984732,
  "emoticon-frown": 986956,
  "emoticon-frown-outline": 986957,
  "emoticon-happy": 986225,
  "emoticon-happy-outline": 983541,
  "emoticon-kiss": 986226,
  "emoticon-kiss-outline": 986227,
  "emoticon-lol": 987668,
  "emoticon-lol-outline": 987669,
  "emoticon-neutral": 986228,
  "emoticon-neutral-outline": 983542,
  "emoticon-outline": 983538,
  "emoticon-poop": 983543,
  "emoticon-poop-outline": 986229,
  "emoticon-sad": 986230,
  "emoticon-sad-outline": 983544,
  "emoticon-tongue": 983545,
  "emoticon-tongue-outline": 986231,
  "emoticon-wink": 986232,
  "emoticon-wink-outline": 986233,
  "engine": 983546,
  "engine-off": 985670,
  "engine-off-outline": 985671,
  "engine-outline": 983547,
  "epsilon": 987360,
  "equal": 983548,
  "equal-box": 983549,
  "equalizer": 986786,
  "equalizer-outline": 986787,
  "eraser": 983550,
  "eraser-variant": 984642,
  "escalator": 983551,
  "escalator-box": 988057,
  "escalator-down": 987840,
  "escalator-up": 987839,
  "eslint": 986234,
  "et": 985779,
  "ethereum": 985194,
  "ethernet": 983552,
  "ethernet-cable": 983553,
  "ethernet-cable-off": 983554,
  "ev-station": 984561,
  "evernote": 983556,
  "excavator": 987173,
  "exclamation": 983557,
  "exclamation-thick": 987704,
  "exit-run": 985672,
  "exit-to-app": 983558,
  "expand-all": 985780,
  "expand-all-outline": 985781,
  "expansion-card": 985262,
  "expansion-card-variant": 987058,
  "exponent": 985443,
  "exponent-box": 985444,
  "export": 983559,
  "export-variant": 986003,
  "eye": 983560,
  "eye-check": 986372,
  "eye-check-outline": 986373,
  "eye-circle": 986004,
  "eye-circle-outline": 986005,
  "eye-minus": 987174,
  "eye-minus-outline": 987175,
  "eye-off": 983561,
  "eye-off-outline": 984785,
  "eye-outline": 984784,
  "eye-plus": 985195,
  "eye-plus-outline": 985196,
  "eye-settings": 985197,
  "eye-settings-outline": 985198,
  "eyedropper": 983562,
  "eyedropper-minus": 988125,
  "eyedropper-off": 988127,
  "eyedropper-plus": 988124,
  "eyedropper-remove": 988126,
  "eyedropper-variant": 983563,
  "face": 984643,
  "face-agent": 986480,
  "face-outline": 986006,
  "face-profile": 984644,
  "face-profile-woman": 987254,
  "face-recognition": 986235,
  "face-woman": 987255,
  "face-woman-outline": 987256,
  "facebook": 983564,
  "facebook-messenger": 983566,
  "facebook-workplace": 985905,
  "factory": 983567,
  "fan": 983568,
  "fan-alert": 988268,
  "fan-chevron-down": 988269,
  "fan-chevron-up": 988270,
  "fan-minus": 988272,
  "fan-off": 985117,
  "fan-plus": 988271,
  "fan-remove": 988273,
  "fan-speed-1": 988274,
  "fan-speed-2": 988275,
  "fan-speed-3": 988276,
  "fast-forward": 983569,
  "fast-forward-10": 986481,
  "fast-forward-30": 986374,
  "fast-forward-5": 987640,
  "fast-forward-outline": 984786,
  "fax": 983570,
  "feather": 984787,
  "feature-search": 985673,
  "feature-search-outline": 985674,
  "fedora": 985307,
  "fencing": 988353,
  "ferris-wheel": 986788,
  "ferry": 983571,
  "file": 983572,
  "file-account": 984891,
  "file-account-outline": 987176,
  "file-alert": 985675,
  "file-alert-outline": 985676,
  "file-cabinet": 985782,
  "file-cad": 986859,
  "file-cad-box": 986860,
  "file-cancel": 986566,
  "file-cancel-outline": 986567,
  "file-certificate": 987526,
  "file-certificate-outline": 987527,
  "file-chart": 983573,
  "file-chart-outline": 987177,
  "file-check": 983574,
  "file-check-outline": 986665,
  "file-clock": 987873,
  "file-clock-outline": 987874,
  "file-cloud": 983575,
  "file-cloud-outline": 987178,
  "file-code": 983598,
  "file-code-outline": 987179,
  "file-cog": 987259,
  "file-cog-outline": 987260,
  "file-compare": 985258,
  "file-delimited": 983576,
  "file-delimited-outline": 986789,
  "file-document": 983577,
  "file-document-edit": 986568,
  "file-document-edit-outline": 986569,
  "file-document-outline": 985582,
  "file-download": 985445,
  "file-download-outline": 985446,
  "file-edit": 987623,
  "file-edit-outline": 987624,
  "file-excel": 983579,
  "file-excel-box": 983580,
  "file-excel-box-outline": 987180,
  "file-excel-outline": 987181,
  "file-export": 983581,
  "file-export-outline": 987182,
  "file-eye": 986570,
  "file-eye-outline": 986571,
  "file-find": 983582,
  "file-find-outline": 986007,
  "file-hidden": 984595,
  "file-image": 983583,
  "file-image-outline": 986800,
  "file-import": 983584,
  "file-import-outline": 987183,
  "file-key": 987524,
  "file-key-outline": 987525,
  "file-link": 987511,
  "file-link-outline": 987512,
  "file-lock": 983585,
  "file-lock-outline": 987184,
  "file-move": 985785,
  "file-move-outline": 987185,
  "file-multiple": 983586,
  "file-multiple-outline": 987186,
  "file-music": 983587,
  "file-music-outline": 986666,
  "file-outline": 983588,
  "file-pdf": 983589,
  "file-pdf-box": 983590,
  "file-pdf-box-outline": 987059,
  "file-pdf-outline": 986669,
  "file-percent": 985118,
  "file-percent-outline": 987187,
  "file-phone": 987513,
  "file-phone-outline": 987514,
  "file-plus": 984914,
  "file-plus-outline": 986861,
  "file-powerpoint": 983591,
  "file-powerpoint-box": 983592,
  "file-powerpoint-box-outline": 987188,
  "file-powerpoint-outline": 987189,
  "file-presentation-box": 983593,
  "file-question": 985199,
  "file-question-outline": 987190,
  "file-refresh": 985368,
  "file-refresh-outline": 984385,
  "file-remove": 986008,
  "file-remove-outline": 987191,
  "file-replace": 985906,
  "file-replace-outline": 985907,
  "file-restore": 984688,
  "file-restore-outline": 987192,
  "file-search": 986236,
  "file-search-outline": 986237,
  "file-send": 983594,
  "file-send-outline": 987193,
  "file-settings": 987257,
  "file-settings-outline": 987258,
  "file-star": 987194,
  "file-star-outline": 987195,
  "file-swap": 987060,
  "file-swap-outline": 987061,
  "file-sync": 987670,
  "file-sync-outline": 987671,
  "file-table": 986238,
  "file-table-box": 987361,
  "file-table-box-multiple": 987362,
  "file-table-box-multiple-outline": 987363,
  "file-table-box-outline": 987364,
  "file-table-outline": 986239,
  "file-tree": 984645,
  "file-tree-outline": 988114,
  "file-undo": 985308,
  "file-undo-outline": 987196,
  "file-upload": 985677,
  "file-upload-outline": 985678,
  "file-video": 983595,
  "file-video-outline": 986668,
  "file-word": 983596,
  "file-word-box": 983597,
  "file-word-box-outline": 987197,
  "file-word-outline": 987198,
  "film": 983599,
  "filmstrip": 983600,
  "filmstrip-box": 983858,
  "filmstrip-box-multiple": 986392,
  "filmstrip-off": 983601,
  "filter": 983602,
  "filter-menu": 987365,
  "filter-menu-outline": 987366,
  "filter-minus": 986862,
  "filter-minus-outline": 986863,
  "filter-outline": 983603,
  "filter-plus": 986864,
  "filter-plus-outline": 986865,
  "filter-remove": 983604,
  "filter-remove-outline": 983605,
  "filter-variant": 983606,
  "filter-variant-minus": 987410,
  "filter-variant-plus": 987411,
  "filter-variant-remove": 987199,
  "finance": 985119,
  "find-replace": 984788,
  "fingerprint": 983607,
  "fingerprint-off": 986801,
  "fire": 983608,
  "fire-extinguisher": 986866,
  "fire-hydrant": 987447,
  "fire-hydrant-alert": 987448,
  "fire-hydrant-off": 987449,
  "fire-truck": 985259,
  "firebase": 985447,
  "firefox": 983609,
  "fireplace": 986670,
  "fireplace-off": 986671,
  "firework": 986672,
  "fish": 983610,
  "fish-off": 988147,
  "fishbowl": 986867,
  "fishbowl-outline": 986868,
  "fit-to-page": 986869,
  "fit-to-page-outline": 986870,
  "flag": 983611,
  "flag-checkered": 983612,
  "flag-minus": 986009,
  "flag-minus-outline": 987314,
  "flag-outline": 983613,
  "flag-plus": 986010,
  "flag-plus-outline": 987315,
  "flag-remove": 986011,
  "flag-remove-outline": 987316,
  "flag-triangle": 983615,
  "flag-variant": 983616,
  "flag-variant-outline": 983614,
  "flare": 986482,
  "flash": 983617,
  "flash-alert": 986871,
  "flash-alert-outline": 986872,
  "flash-auto": 983618,
  "flash-circle": 985120,
  "flash-off": 983619,
  "flash-outline": 984789,
  "flash-red-eye": 984699,
  "flashlight": 983620,
  "flashlight-off": 983621,
  "flask": 983187,
  "flask-empty": 983188,
  "flask-empty-minus": 987706,
  "flask-empty-minus-outline": 987707,
  "flask-empty-off": 988148,
  "flask-empty-off-outline": 988149,
  "flask-empty-outline": 983189,
  "flask-empty-plus": 987708,
  "flask-empty-plus-outline": 987709,
  "flask-empty-remove": 987710,
  "flask-empty-remove-outline": 987711,
  "flask-minus": 987712,
  "flask-minus-outline": 987713,
  "flask-off": 988150,
  "flask-off-outline": 988151,
  "flask-outline": 983190,
  "flask-plus": 987714,
  "flask-plus-outline": 987715,
  "flask-remove": 987716,
  "flask-remove-outline": 987717,
  "flask-round-bottom": 987723,
  "flask-round-bottom-empty": 987724,
  "flask-round-bottom-empty-outline": 987725,
  "flask-round-bottom-outline": 987726,
  "fleur-de-lis": 987907,
  "flip-horizontal": 987367,
  "flip-to-back": 983623,
  "flip-to-front": 983624,
  "flip-vertical": 987368,
  "floor-lamp": 985309,
  "floor-lamp-dual": 987200,
  "floor-lamp-variant": 987201,
  "floor-plan": 985121,
  "floppy": 983625,
  "floppy-variant": 985583,
  "flower": 983626,
  "flower-outline": 985584,
  "flower-poppy": 986376,
  "flower-tulip": 985585,
  "flower-tulip-outline": 985586,
  "focus-auto": 986958,
  "focus-field": 986959,
  "focus-field-horizontal": 986960,
  "focus-field-vertical": 986961,
  "folder": 983627,
  "folder-account": 983628,
  "folder-account-outline": 986012,
  "folder-alert": 986572,
  "folder-alert-outline": 986573,
  "folder-clock": 985786,
  "folder-clock-outline": 985787,
  "folder-cog": 987263,
  "folder-cog-outline": 987264,
  "folder-download": 983629,
  "folder-download-outline": 987369,
  "folder-edit": 985310,
  "folder-edit-outline": 986574,
  "folder-google-drive": 983630,
  "folder-heart": 987370,
  "folder-heart-outline": 987371,
  "folder-home": 987317,
  "folder-home-outline": 987318,
  "folder-image": 983631,
  "folder-information": 987319,
  "folder-information-outline": 987320,
  "folder-key": 985260,
  "folder-key-network": 985261,
  "folder-key-network-outline": 986240,
  "folder-key-outline": 987372,
  "folder-lock": 983632,
  "folder-lock-open": 983633,
  "folder-marker": 987757,
  "folder-marker-outline": 987758,
  "folder-move": 983634,
  "folder-move-outline": 987718,
  "folder-multiple": 983635,
  "folder-multiple-image": 983636,
  "folder-multiple-outline": 983637,
  "folder-multiple-plus": 988286,
  "folder-multiple-plus-outline": 988287,
  "folder-music": 987993,
  "folder-music-outline": 987994,
  "folder-network": 985200,
  "folder-network-outline": 986241,
  "folder-open": 984944,
  "folder-open-outline": 986575,
  "folder-outline": 983638,
  "folder-plus": 983639,
  "folder-plus-outline": 986013,
  "folder-pound": 986377,
  "folder-pound-outline": 986378,
  "folder-refresh": 984905,
  "folder-refresh-outline": 984386,
  "folder-remove": 983640,
  "folder-remove-outline": 986014,
  "folder-search": 985448,
  "folder-search-outline": 985449,
  "folder-settings": 987261,
  "folder-settings-outline": 987262,
  "folder-star": 984733,
  "folder-star-multiple": 988115,
  "folder-star-multiple-outline": 988116,
  "folder-star-outline": 986015,
  "folder-swap": 987062,
  "folder-swap-outline": 987063,
  "folder-sync": 986379,
  "folder-sync-outline": 986380,
  "folder-table": 987875,
  "folder-table-outline": 987876,
  "folder-text": 986242,
  "folder-text-outline": 986243,
  "folder-upload": 983641,
  "folder-upload-outline": 987373,
  "folder-zip": 984811,
  "folder-zip-outline": 985017,
  "font-awesome": 983098,
  "food": 983642,
  "food-apple": 983643,
  "food-apple-outline": 986244,
  "food-croissant": 985032,
  "food-drumstick": 988191,
  "food-drumstick-off": 988264,
  "food-drumstick-off-outline": 988265,
  "food-drumstick-outline": 988192,
  "food-fork-drink": 984562,
  "food-off": 984563,
  "food-steak": 988266,
  "food-steak-off": 988267,
  "food-variant": 983644,
  "food-variant-off": 988133,
  "foot-print": 986962,
  "football": 983645,
  "football-australian": 983646,
  "football-helmet": 983647,
  "forklift": 985033,
  "form-dropdown": 988160,
  "form-select": 988161,
  "form-textarea": 987285,
  "form-textbox": 984590,
  "form-textbox-lock": 987997,
  "form-textbox-password": 985077,
  "format-align-bottom": 984915,
  "format-align-center": 983648,
  "format-align-justify": 983649,
  "format-align-left": 983650,
  "format-align-middle": 984916,
  "format-align-right": 983651,
  "format-align-top": 984917,
  "format-annotation-minus": 985788,
  "format-annotation-plus": 984646,
  "format-bold": 983652,
  "format-clear": 983653,
  "format-color-fill": 983654,
  "format-color-highlight": 986673,
  "format-color-marker-cancel": 987923,
  "format-color-text": 984734,
  "format-columns": 985311,
  "format-float-center": 983655,
  "format-float-left": 983656,
  "format-float-none": 983657,
  "format-float-right": 983658,
  "format-font": 984790,
  "format-font-size-decrease": 985587,
  "format-font-size-increase": 985588,
  "format-header-1": 983659,
  "format-header-2": 983660,
  "format-header-3": 983661,
  "format-header-4": 983662,
  "format-header-5": 983663,
  "format-header-6": 983664,
  "format-header-decrease": 983665,
  "format-header-equal": 983666,
  "format-header-increase": 983667,
  "format-header-pound": 983668,
  "format-horizontal-align-center": 984606,
  "format-horizontal-align-left": 984607,
  "format-horizontal-align-right": 984608,
  "format-indent-decrease": 983669,
  "format-indent-increase": 983670,
  "format-italic": 983671,
  "format-letter-case": 985908,
  "format-letter-case-lower": 985909,
  "format-letter-case-upper": 985910,
  "format-letter-ends-with": 987064,
  "format-letter-matches": 987065,
  "format-letter-starts-with": 987066,
  "format-line-spacing": 983672,
  "format-line-style": 984520,
  "format-line-weight": 984521,
  "format-list-bulleted": 983673,
  "format-list-bulleted-square": 986576,
  "format-list-bulleted-triangle": 986802,
  "format-list-bulleted-type": 983674,
  "format-list-checkbox": 985450,
  "format-list-checks": 984918,
  "format-list-numbered": 983675,
  "format-list-numbered-rtl": 986381,
  "format-list-text": 987759,
  "format-overline": 986803,
  "format-page-break": 984791,
  "format-paint": 983676,
  "format-paragraph": 983677,
  "format-pilcrow": 984792,
  "format-quote-close": 983678,
  "format-quote-close-outline": 987560,
  "format-quote-open": 984919,
  "format-quote-open-outline": 987559,
  "format-rotate-90": 984746,
  "format-section": 984735,
  "format-size": 983679,
  "format-strikethrough": 983680,
  "format-strikethrough-variant": 983681,
  "format-subscript": 983682,
  "format-superscript": 983683,
  "format-text": 983684,
  "format-text-rotation-angle-down": 987067,
  "format-text-rotation-angle-up": 987068,
  "format-text-rotation-down": 986483,
  "format-text-rotation-down-vertical": 987069,
  "format-text-rotation-none": 986484,
  "format-text-rotation-up": 987070,
  "format-text-rotation-vertical": 987071,
  "format-text-variant": 986674,
  "format-text-wrapping-clip": 986382,
  "format-text-wrapping-overflow": 986383,
  "format-text-wrapping-wrap": 986384,
  "format-textbox": 986385,
  "format-textdirection-l-to-r": 983685,
  "format-textdirection-r-to-l": 983686,
  "format-title": 984564,
  "format-underline": 983687,
  "format-vertical-align-bottom": 984609,
  "format-vertical-align-center": 984610,
  "format-vertical-align-top": 984611,
  "format-wrap-inline": 983688,
  "format-wrap-square": 983689,
  "format-wrap-tight": 983690,
  "format-wrap-top-bottom": 983691,
  "forum": 983692,
  "forum-outline": 985122,
  "forward": 983693,
  "forwardburger": 986485,
  "fountain": 985451,
  "fountain-pen": 986386,
  "fountain-pen-tip": 986387,
  "freebsd": 985312,
  "frequently-asked-questions": 986804,
  "fridge": 983696,
  "fridge-alert": 987569,
  "fridge-alert-outline": 987570,
  "fridge-bottom": 983698,
  "fridge-off": 987567,
  "fridge-off-outline": 987568,
  "fridge-outline": 983695,
  "fridge-top": 983697,
  "fruit-cherries": 987202,
  "fruit-cherries-off": 988152,
  "fruit-citrus": 987203,
  "fruit-citrus-off": 988153,
  "fruit-grapes": 987204,
  "fruit-grapes-outline": 987205,
  "fruit-pineapple": 987206,
  "fruit-watermelon": 987207,
  "fuel": 985034,
  "fullscreen": 983699,
  "fullscreen-exit": 983700,
  "function": 983701,
  "function-variant": 985201,
  "furigana-horizontal": 987265,
  "furigana-vertical": 987266,
  "fuse": 986245,
  "fuse-alert": 988205,
  "fuse-blade": 986246,
  "fuse-off": 988204,
  "gamepad": 983702,
  "gamepad-circle": 986675,
  "gamepad-circle-down": 986676,
  "gamepad-circle-left": 986677,
  "gamepad-circle-outline": 986678,
  "gamepad-circle-right": 986679,
  "gamepad-circle-up": 986680,
  "gamepad-down": 986681,
  "gamepad-left": 986682,
  "gamepad-right": 986683,
  "gamepad-round": 986684,
  "gamepad-round-down": 986685,
  "gamepad-round-left": 986686,
  "gamepad-round-outline": 986687,
  "gamepad-round-right": 986688,
  "gamepad-round-up": 986689,
  "gamepad-square": 986805,
  "gamepad-square-outline": 986806,
  "gamepad-up": 986690,
  "gamepad-variant": 983703,
  "gamepad-variant-outline": 986807,
  "gamma": 987374,
  "gantry-crane": 986577,
  "garage": 984793,
  "garage-alert": 985202,
  "garage-alert-variant": 987861,
  "garage-open": 984794,
  "garage-open-variant": 987860,
  "garage-variant": 987859,
  "gas-cylinder": 984647,
  "gas-station": 983704,
  "gas-station-off": 988169,
  "gas-station-off-outline": 988170,
  "gas-station-outline": 986808,
  "gate": 983705,
  "gate-and": 985313,
  "gate-arrow-right": 987497,
  "gate-nand": 985314,
  "gate-nor": 985315,
  "gate-not": 985316,
  "gate-open": 987498,
  "gate-or": 985317,
  "gate-xnor": 985318,
  "gate-xor": 985319,
  "gatsby": 986691,
  "gauge": 983706,
  "gauge-empty": 985203,
  "gauge-full": 985204,
  "gauge-low": 985205,
  "gavel": 983707,
  "gender-female": 983708,
  "gender-male": 983709,
  "gender-male-female": 983710,
  "gender-male-female-variant": 987455,
  "gender-non-binary": 987456,
  "gender-transgender": 983711,
  "gentoo": 985320,
  "gesture": 985035,
  "gesture-double-tap": 984892,
  "gesture-pinch": 985789,
  "gesture-spread": 985790,
  "gesture-swipe": 986486,
  "gesture-swipe-down": 984893,
  "gesture-swipe-horizontal": 985791,
  "gesture-swipe-left": 984894,
  "gesture-swipe-right": 984895,
  "gesture-swipe-up": 984896,
  "gesture-swipe-vertical": 985792,
  "gesture-tap": 984897,
  "gesture-tap-box": 987817,
  "gesture-tap-button": 987816,
  "gesture-tap-hold": 986487,
  "gesture-two-double-tap": 984898,
  "gesture-two-tap": 984899,
  "ghost": 983712,
  "ghost-off": 985589,
  "gif": 986488,
  "gift": 986692,
  "gift-outline": 983713,
  "git": 983714,
  "github": 983716,
  "gitlab": 986016,
  "glass-cocktail": 983894,
  "glass-flute": 983717,
  "glass-mug": 983718,
  "glass-mug-variant": 987414,
  "glass-pint-outline": 987917,
  "glass-stange": 983719,
  "glass-tulip": 983720,
  "glass-wine": 985206,
  "glasses": 983722,
  "globe-light": 987863,
  "globe-model": 985321,
  "gmail": 983723,
  "gnome": 983724,
  "go-kart": 986489,
  "go-kart-track": 986490,
  "gog": 986017,
  "gold": 987727,
  "golf": 985123,
  "golf-cart": 987556,
  "golf-tee": 987267,
  "gondola": 984710,
  "goodreads": 986491,
  "google": 983725,
  "google-ads": 986247,
  "google-analytics": 985036,
  "google-assistant": 985037,
  "google-cardboard": 983726,
  "google-chrome": 983727,
  "google-circles": 983728,
  "google-circles-communities": 983729,
  "google-circles-extended": 983730,
  "google-circles-group": 983731,
  "google-classroom": 983744,
  "google-cloud": 987638,
  "google-controller": 983732,
  "google-controller-off": 983733,
  "google-downasaur": 988002,
  "google-drive": 983734,
  "google-earth": 983735,
  "google-fit": 985452,
  "google-glass": 983736,
  "google-hangouts": 983753,
  "google-home": 985124,
  "google-keep": 984796,
  "google-lens": 985590,
  "google-maps": 984565,
  "google-my-business": 987208,
  "google-nearby": 983737,
  "google-photos": 984797,
  "google-play": 983740,
  "google-plus": 983741,
  "google-podcast": 986809,
  "google-spreadsheet": 985591,
  "google-street-view": 986248,
  "google-translate": 983743,
  "gradient": 984736,
  "grain": 986492,
  "graph": 987209,
  "graph-outline": 987210,
  "graphql": 985207,
  "grave-stone": 986018,
  "grease-pencil": 984648,
  "greater-than": 985453,
  "greater-than-or-equal": 985454,
  "grid": 983745,
  "grid-large": 984920,
  "grid-off": 983746,
  "grill": 986693,
  "grill-outline": 987530,
  "group": 983747,
  "guitar-acoustic": 984945,
  "guitar-electric": 983748,
  "guitar-pick": 983749,
  "guitar-pick-outline": 983750,
  "guy-fawkes-mask": 985125,
  "hail": 985793,
  "hair-dryer": 987375,
  "hair-dryer-outline": 987376,
  "halloween": 986019,
  "hamburger": 984709,
  "hammer": 985322,
  "hammer-screwdriver": 987938,
  "hammer-wrench": 987939,
  "hand": 985679,
  "hand-heart": 987377,
  "hand-left": 986694,
  "hand-okay": 985680,
  "hand-peace": 985681,
  "hand-peace-variant": 985682,
  "hand-pointing-down": 985683,
  "hand-pointing-left": 985684,
  "hand-pointing-right": 983751,
  "hand-pointing-up": 985685,
  "hand-right": 986695,
  "hand-saw": 986696,
  "hand-water": 988063,
  "handball": 986963,
  "handcuffs": 987454,
  "handshake": 987672,
  "hanger": 983752,
  "hard-hat": 985455,
  "harddisk": 983754,
  "harddisk-plus": 987211,
  "harddisk-remove": 987212,
  "hat-fedora": 986020,
  "hazard-lights": 986249,
  "hdr": 986493,
  "hdr-off": 986494,
  "head": 987998,
  "head-alert": 987960,
  "head-alert-outline": 987961,
  "head-check": 987962,
  "head-check-outline": 987963,
  "head-cog": 987964,
  "head-cog-outline": 987965,
  "head-dots-horizontal": 987966,
  "head-dots-horizontal-outline": 987967,
  "head-flash": 987968,
  "head-flash-outline": 987969,
  "head-heart": 987970,
  "head-heart-outline": 987971,
  "head-lightbulb": 987972,
  "head-lightbulb-outline": 987973,
  "head-minus": 987974,
  "head-minus-outline": 987975,
  "head-outline": 987999,
  "head-plus": 987976,
  "head-plus-outline": 987977,
  "head-question": 987978,
  "head-question-outline": 987979,
  "head-remove": 987980,
  "head-remove-outline": 987981,
  "head-snowflake": 987982,
  "head-snowflake-outline": 987983,
  "head-sync": 987984,
  "head-sync-outline": 987985,
  "headphones": 983755,
  "headphones-bluetooth": 985456,
  "headphones-box": 983756,
  "headphones-off": 985038,
  "headphones-settings": 983757,
  "headset": 983758,
  "headset-dock": 983759,
  "headset-off": 983760,
  "heart": 983761,
  "heart-box": 983762,
  "heart-box-outline": 983763,
  "heart-broken": 983764,
  "heart-broken-outline": 986388,
  "heart-circle": 985457,
  "heart-circle-outline": 985458,
  "heart-flash": 986873,
  "heart-half": 984799,
  "heart-half-full": 984798,
  "heart-half-outline": 984800,
  "heart-minus": 988207,
  "heart-minus-outline": 988210,
  "heart-multiple": 985686,
  "heart-multiple-outline": 985687,
  "heart-off": 984921,
  "heart-off-outline": 988212,
  "heart-outline": 983765,
  "heart-plus": 988206,
  "heart-plus-outline": 988209,
  "heart-pulse": 984566,
  "heart-remove": 988208,
  "heart-remove-outline": 988211,
  "helicopter": 985794,
  "help": 983766,
  "help-box": 984971,
  "help-circle": 983767,
  "help-circle-outline": 984613,
  "help-network": 984821,
  "help-network-outline": 986250,
  "help-rhombus": 986021,
  "help-rhombus-outline": 986022,
  "hexadecimal": 987815,
  "hexagon": 983768,
  "hexagon-multiple": 984801,
  "hexagon-multiple-outline": 987378,
  "hexagon-outline": 983769,
  "hexagon-slice-1": 985795,
  "hexagon-slice-2": 985796,
  "hexagon-slice-3": 985797,
  "hexagon-slice-4": 985798,
  "hexagon-slice-5": 985799,
  "hexagon-slice-6": 985800,
  "hexagram": 985801,
  "hexagram-outline": 985802,
  "high-definition": 985039,
  "high-definition-box": 985208,
  "highway": 984567,
  "hiking": 986495,
  "hinduism": 985459,
  "history": 983770,
  "hockey-puck": 985209,
  "hockey-sticks": 985210,
  "hololens": 983771,
  "home": 983772,
  "home-account": 985126,
  "home-alert": 985211,
  "home-analytics": 986810,
  "home-assistant": 985040,
  "home-automation": 985041,
  "home-circle": 985042,
  "home-circle-outline": 987213,
  "home-city": 986389,
  "home-city-outline": 986390,
  "home-currency-usd": 985263,
  "home-edit": 987481,
  "home-edit-outline": 987482,
  "home-export-outline": 987035,
  "home-flood": 986874,
  "home-floor-0": 986578,
  "home-floor-1": 986496,
  "home-floor-2": 986497,
  "home-floor-3": 986498,
  "home-floor-a": 986499,
  "home-floor-b": 986500,
  "home-floor-g": 986501,
  "home-floor-l": 986502,
  "home-floor-negative-1": 986579,
  "home-group": 986580,
  "home-heart": 985127,
  "home-import-outline": 987036,
  "home-lightbulb": 987729,
  "home-lightbulb-outline": 987730,
  "home-lock": 985323,
  "home-lock-open": 985324,
  "home-map-marker": 984568,
  "home-minus": 985460,
  "home-minus-outline": 988117,
  "home-modern": 983773,
  "home-outline": 984737,
  "home-plus": 985461,
  "home-plus-outline": 988118,
  "home-remove": 987719,
  "home-remove-outline": 988119,
  "home-roof": 987435,
  "home-search": 988080,
  "home-search-outline": 988081,
  "home-thermometer": 986964,
  "home-thermometer-outline": 986965,
  "home-variant": 983774,
  "home-variant-outline": 986023,
  "hook": 984802,
  "hook-off": 984803,
  "hops": 983775,
  "horizontal-rotate-clockwise": 987379,
  "horizontal-rotate-counterclockwise": 987380,
  "horseshoe": 985688,
  "hospital": 987126,
  "hospital-box": 983776,
  "hospital-box-outline": 987127,
  "hospital-building": 983777,
  "hospital-marker": 983778,
  "hot-tub": 985128,
  "hours-24": 988280,
  "hubspot": 986391,
  "hulu": 985129,
  "human": 983782,
  "human-baby-changing-table": 988043,
  "human-child": 983783,
  "human-female": 984649,
  "human-female-boy": 985689,
  "human-female-female": 985690,
  "human-female-girl": 985691,
  "human-greeting": 984650,
  "human-handsdown": 984651,
  "human-handsup": 984652,
  "human-male": 984653,
  "human-male-boy": 985692,
  "human-male-child": 988044,
  "human-male-female": 983784,
  "human-male-girl": 985693,
  "human-male-height": 986875,
  "human-male-height-variant": 986876,
  "human-male-male": 985694,
  "human-pregnant": 984527,
  "human-wheelchair": 988045,
  "humble-bundle": 984900,
  "hvac": 987986,
  "hydraulic-oil-level": 987940,
  "hydraulic-oil-temperature": 987941,
  "hydro-power": 987877,
  "ice-cream": 985130,
  "ice-cream-off": 986706,
  "ice-pop": 986877,
  "id-card": 987072,
  "identifier": 986878,
  "ideogram-cjk": 987953,
  "ideogram-cjk-variant": 987954,
  "iframe": 986251,
  "iframe-array": 987381,
  "iframe-array-outline": 987382,
  "iframe-braces": 987383,
  "iframe-braces-outline": 987384,
  "iframe-outline": 986252,
  "iframe-parentheses": 987385,
  "iframe-parentheses-outline": 987386,
  "iframe-variable": 987387,
  "iframe-variable-outline": 987388,
  "image": 983785,
  "image-album": 983786,
  "image-area": 983787,
  "image-area-close": 983788,
  "image-auto-adjust": 987073,
  "image-broken": 983789,
  "image-broken-variant": 983790,
  "image-edit": 987619,
  "image-edit-outline": 987620,
  "image-filter-black-white": 983792,
  "image-filter-center-focus": 983793,
  "image-filter-center-focus-strong": 986879,
  "image-filter-center-focus-strong-outline": 986880,
  "image-filter-center-focus-weak": 983794,
  "image-filter-drama": 983795,
  "image-filter-frames": 983796,
  "image-filter-hdr": 983797,
  "image-filter-none": 983798,
  "image-filter-tilt-shift": 983799,
  "image-filter-vintage": 983800,
  "image-frame": 986697,
  "image-minus": 988185,
  "image-move": 985592,
  "image-multiple": 983801,
  "image-multiple-outline": 983791,
  "image-off": 985131,
  "image-off-outline": 987601,
  "image-outline": 985462,
  "image-plus": 985212,
  "image-remove": 988184,
  "image-search": 985463,
  "image-search-outline": 985464,
  "image-size-select-actual": 986253,
  "image-size-select-large": 986254,
  "image-size-select-small": 986255,
  "import": 983802,
  "inbox": 984711,
  "inbox-arrow-down": 983803,
  "inbox-arrow-down-outline": 987760,
  "inbox-arrow-up": 984017,
  "inbox-arrow-up-outline": 987761,
  "inbox-full": 987762,
  "inbox-full-outline": 987763,
  "inbox-multiple": 985264,
  "inbox-multiple-outline": 986024,
  "inbox-outline": 987764,
  "incognito": 984569,
  "incognito-circle": 988193,
  "incognito-circle-off": 988194,
  "incognito-off": 983157,
  "infinity": 984804,
  "information": 983804,
  "information-outline": 983805,
  "information-variant": 984654,
  "instagram": 983806,
  "instrument-triangle": 987214,
  "invert-colors": 983809,
  "invert-colors-off": 986698,
  "iobroker": 987880,
  "ip": 985695,
  "ip-network": 985696,
  "ip-network-outline": 986256,
  "ipod": 986257,
  "islam": 985465,
  "island": 987215,
  "iv-bag": 987321,
  "jabber": 986581,
  "jeepney": 983810,
  "jellyfish": 986881,
  "jellyfish-outline": 986882,
  "jira": 983811,
  "jquery": 985213,
  "jsfiddle": 983812,
  "judaism": 985466,
  "jump-rope": 987903,
  "kabaddi": 986503,
  "karate": 985132,
  "keg": 983813,
  "kettle": 984570,
  "kettle-alert": 987927,
  "kettle-alert-outline": 987928,
  "kettle-off": 987931,
  "kettle-off-outline": 987932,
  "kettle-outline": 986966,
  "kettle-steam": 987929,
  "kettle-steam-outline": 987930,
  "kettlebell": 987904,
  "key": 983814,
  "key-arrow-right": 987922,
  "key-change": 983815,
  "key-link": 987551,
  "key-minus": 983816,
  "key-outline": 986582,
  "key-plus": 983817,
  "key-remove": 983818,
  "key-star": 987550,
  "key-variant": 983819,
  "key-wireless": 987074,
  "keyboard": 983820,
  "keyboard-backspace": 983821,
  "keyboard-caps": 983822,
  "keyboard-close": 983823,
  "keyboard-esc": 987831,
  "keyboard-f1": 987819,
  "keyboard-f10": 987828,
  "keyboard-f11": 987829,
  "keyboard-f12": 987830,
  "keyboard-f2": 987820,
  "keyboard-f3": 987821,
  "keyboard-f4": 987822,
  "keyboard-f5": 987823,
  "keyboard-f6": 987824,
  "keyboard-f7": 987825,
  "keyboard-f8": 987826,
  "keyboard-f9": 987827,
  "keyboard-off": 983824,
  "keyboard-off-outline": 986699,
  "keyboard-outline": 985467,
  "keyboard-return": 983825,
  "keyboard-settings": 985593,
  "keyboard-settings-outline": 985594,
  "keyboard-space": 987216,
  "keyboard-tab": 983826,
  "keyboard-variant": 983827,
  "khanda": 987389,
  "kickstarter": 984901,
  "klingon": 987995,
  "knife": 985595,
  "knife-military": 985596,
  "kodi": 983828,
  "kubernetes": 987390,
  "label": 983829,
  "label-multiple": 988021,
  "label-multiple-outline": 988022,
  "label-off": 985803,
  "label-off-outline": 985804,
  "label-outline": 983830,
  "label-percent": 987882,
  "label-percent-outline": 987883,
  "label-variant": 985805,
  "label-variant-outline": 985806,
  "ladybug": 985133,
  "lambda": 984615,
  "lamp": 984757,
  "lan": 983831,
  "lan-check": 987818,
  "lan-connect": 983832,
  "lan-disconnect": 983833,
  "lan-pending": 983834,
  "language-c": 984689,
  "language-cpp": 984690,
  "language-csharp": 983835,
  "language-css3": 983836,
  "language-fortran": 987674,
  "language-go": 985043,
  "language-haskell": 986258,
  "language-html5": 983837,
  "language-java": 985911,
  "language-javascript": 983838,
  "language-kotlin": 987673,
  "language-lua": 985265,
  "language-markdown": 983892,
  "language-markdown-outline": 986971,
  "language-php": 983839,
  "language-python": 983840,
  "language-r": 985044,
  "language-ruby": 986413,
  "language-ruby-on-rails": 985807,
  "language-swift": 984805,
  "language-typescript": 984806,
  "language-xaml": 984691,
  "laptop": 983842,
  "laptop-chromebook": 983843,
  "laptop-mac": 983844,
  "laptop-off": 984807,
  "laptop-windows": 983845,
  "laravel": 985808,
  "laser-pointer": 988292,
  "lasso": 986883,
  "lastpass": 984134,
  "latitude": 986967,
  "launch": 983847,
  "lava-lamp": 985045,
  "layers": 983848,
  "layers-minus": 986700,
  "layers-off": 983849,
  "layers-off-outline": 985597,
  "layers-outline": 985598,
  "layers-plus": 986701,
  "layers-remove": 986702,
  "layers-search": 987654,
  "layers-search-outline": 987655,
  "layers-triple": 986968,
  "layers-triple-outline": 986969,
  "lead-pencil": 984655,
  "leaf": 983850,
  "leaf-maple": 986259,
  "leaf-maple-off": 987866,
  "leaf-off": 987865,
  "leak": 986583,
  "leak-off": 986584,
  "led-off": 983851,
  "led-on": 983852,
  "led-outline": 983853,
  "led-strip": 985046,
  "led-strip-variant": 987217,
  "led-variant-off": 983854,
  "led-variant-on": 983855,
  "led-variant-outline": 983856,
  "leek": 987517,
  "less-than": 985468,
  "less-than-or-equal": 985469,
  "library": 983857,
  "library-shelves": 986025,
  "license": 987075,
  "lifebuoy": 985214,
  "light-switch": 985470,
  "lightbulb": 983861,
  "lightbulb-cfl": 987656,
  "lightbulb-cfl-off": 987657,
  "lightbulb-cfl-spiral": 987765,
  "lightbulb-cfl-spiral-off": 987843,
  "lightbulb-group": 987731,
  "lightbulb-group-off": 987853,
  "lightbulb-group-off-outline": 987854,
  "lightbulb-group-outline": 987732,
  "lightbulb-multiple": 987733,
  "lightbulb-multiple-off": 987855,
  "lightbulb-multiple-off-outline": 987856,
  "lightbulb-multiple-outline": 987734,
  "lightbulb-off": 986703,
  "lightbulb-off-outline": 986704,
  "lightbulb-on": 984808,
  "lightbulb-on-outline": 984809,
  "lightbulb-outline": 983862,
  "lighthouse": 985599,
  "lighthouse-on": 985600,
  "lightning-bolt": 988171,
  "lightning-bolt-outline": 988172,
  "lingerie": 988278,
  "link": 983863,
  "link-box": 986394,
  "link-box-outline": 986395,
  "link-box-variant": 986396,
  "link-box-variant-outline": 986397,
  "link-lock": 987322,
  "link-off": 983864,
  "link-plus": 986260,
  "link-variant": 983865,
  "link-variant-minus": 987391,
  "link-variant-off": 983866,
  "link-variant-plus": 987392,
  "link-variant-remove": 987393,
  "linkedin": 983867,
  "linux": 983869,
  "linux-mint": 985325,
  "lipstick": 988085,
  "litecoin": 985697,
  "loading": 984946,
  "location-enter": 987076,
  "location-exit": 987077,
  "lock": 983870,
  "lock-alert": 985326,
  "lock-check": 988058,
  "lock-clock": 985471,
  "lock-open": 983871,
  "lock-open-alert": 988059,
  "lock-open-check": 988060,
  "lock-open-outline": 983872,
  "lock-open-variant": 987078,
  "lock-open-variant-outline": 987079,
  "lock-outline": 983873,
  "lock-pattern": 984810,
  "lock-plus": 984571,
  "lock-question": 985327,
  "lock-reset": 984947,
  "lock-smart": 985266,
  "locker": 985047,
  "locker-multiple": 985048,
  "login": 983874,
  "login-variant": 984572,
  "logout": 983875,
  "logout-variant": 984573,
  "longitude": 986970,
  "looks": 983876,
  "loupe": 983877,
  "lumx": 983878,
  "lungs": 987268,
  "magnet": 983879,
  "magnet-on": 983880,
  "magnify": 983881,
  "magnify-close": 985472,
  "magnify-minus": 983882,
  "magnify-minus-cursor": 985698,
  "magnify-minus-outline": 984812,
  "magnify-plus": 983883,
  "magnify-plus-cursor": 985699,
  "magnify-plus-outline": 984813,
  "magnify-remove-cursor": 987660,
  "magnify-remove-outline": 987661,
  "magnify-scan": 987766,
  "mail": 986811,
  "mailbox": 984814,
  "mailbox-open": 986504,
  "mailbox-open-outline": 986505,
  "mailbox-open-up": 986506,
  "mailbox-open-up-outline": 986507,
  "mailbox-outline": 986508,
  "mailbox-up": 986509,
  "mailbox-up-outline": 986510,
  "map": 983885,
  "map-check": 986812,
  "map-check-outline": 986813,
  "map-clock": 986398,
  "map-clock-outline": 986399,
  "map-legend": 985601,
  "map-marker": 983886,
  "map-marker-alert": 986885,
  "map-marker-alert-outline": 986886,
  "map-marker-check": 986261,
  "map-marker-check-outline": 987899,
  "map-marker-circle": 983887,
  "map-marker-distance": 985328,
  "map-marker-down": 987394,
  "map-marker-left": 987867,
  "map-marker-left-outline": 987869,
  "map-marker-minus": 984656,
  "map-marker-minus-outline": 987897,
  "map-marker-multiple": 983888,
  "map-marker-multiple-outline": 987767,
  "map-marker-off": 983889,
  "map-marker-off-outline": 987901,
  "map-marker-outline": 985049,
  "map-marker-path": 986400,
  "map-marker-plus": 984657,
  "map-marker-plus-outline": 987896,
  "map-marker-question": 986887,
  "map-marker-question-outline": 986888,
  "map-marker-radius": 983890,
  "map-marker-radius-outline": 987900,
  "map-marker-remove": 986889,
  "map-marker-remove-outline": 987898,
  "map-marker-remove-variant": 986890,
  "map-marker-right": 987868,
  "map-marker-right-outline": 987870,
  "map-marker-up": 987395,
  "map-minus": 985473,
  "map-outline": 985474,
  "map-plus": 985475,
  "map-search": 985476,
  "map-search-outline": 985477,
  "mapbox": 986026,
  "margin": 983891,
  "marker": 984658,
  "marker-cancel": 986585,
  "marker-check": 983893,
  "mastodon": 985809,
  "material-design": 985478,
  "material-ui": 983895,
  "math-compass": 983896,
  "math-cos": 986262,
  "math-integral": 987080,
  "math-integral-box": 987081,
  "math-log": 987269,
  "math-norm": 987082,
  "math-norm-box": 987083,
  "math-sin": 986263,
  "math-tan": 986264,
  "matrix": 984616,
  "medal": 985479,
  "medal-outline": 987942,
  "medical-bag": 984815,
  "meditation": 987515,
  "memory": 983899,
  "menu": 983900,
  "menu-down": 983901,
  "menu-down-outline": 984758,
  "menu-left": 983902,
  "menu-left-outline": 985602,
  "menu-open": 986027,
  "menu-right": 983903,
  "menu-right-outline": 985603,
  "menu-swap": 985700,
  "menu-swap-outline": 985701,
  "menu-up": 983904,
  "menu-up-outline": 984759,
  "merge": 986972,
  "message": 983905,
  "message-alert": 983906,
  "message-alert-outline": 985604,
  "message-arrow-left": 987890,
  "message-arrow-left-outline": 987891,
  "message-arrow-right": 987892,
  "message-arrow-right-outline": 987893,
  "message-bulleted": 984738,
  "message-bulleted-off": 984739,
  "message-cog": 984817,
  "message-cog-outline": 987506,
  "message-draw": 983907,
  "message-image": 983908,
  "message-image-outline": 987500,
  "message-lock": 987084,
  "message-lock-outline": 987501,
  "message-minus": 987502,
  "message-minus-outline": 987503,
  "message-outline": 983909,
  "message-plus": 984659,
  "message-plus-outline": 987323,
  "message-processing": 983910,
  "message-processing-outline": 987504,
  "message-reply": 983911,
  "message-reply-text": 983912,
  "message-settings": 984816,
  "message-settings-outline": 987505,
  "message-text": 983913,
  "message-text-clock": 987507,
  "message-text-clock-outline": 987508,
  "message-text-lock": 987085,
  "message-text-lock-outline": 987509,
  "message-text-outline": 983914,
  "message-video": 983915,
  "meteor": 984617,
  "metronome": 985050,
  "metronome-tick": 985051,
  "micro-sd": 985052,
  "microphone": 983916,
  "microphone-minus": 985267,
  "microphone-off": 983917,
  "microphone-outline": 983918,
  "microphone-plus": 985268,
  "microphone-settings": 983919,
  "microphone-variant": 983920,
  "microphone-variant-off": 983921,
  "microscope": 984660,
  "microsoft": 983922,
  "microsoft-access": 988046,
  "microsoft-azure": 985093,
  "microsoft-azure-devops": 987093,
  "microsoft-bing": 983204,
  "microsoft-dynamics-365": 985480,
  "microsoft-edge": 983529,
  "microsoft-edge-legacy": 987728,
  "microsoft-excel": 988047,
  "microsoft-internet-explorer": 983808,
  "microsoft-office": 984006,
  "microsoft-onedrive": 984010,
  "microsoft-onenote": 984903,
  "microsoft-outlook": 986402,
  "microsoft-powerpoint": 988048,
  "microsoft-sharepoint": 988049,
  "microsoft-teams": 983739,
  "microsoft-visual-studio": 984592,
  "microsoft-visual-studio-code": 985630,
  "microsoft-windows": 984499,
  "microsoft-windows-classic": 985633,
  "microsoft-word": 988050,
  "microsoft-xbox": 984505,
  "microsoft-xbox-controller": 984506,
  "microsoft-xbox-controller-battery-alert": 984907,
  "microsoft-xbox-controller-battery-charging": 985634,
  "microsoft-xbox-controller-battery-empty": 984908,
  "microsoft-xbox-controller-battery-full": 984909,
  "microsoft-xbox-controller-battery-low": 984910,
  "microsoft-xbox-controller-battery-medium": 984911,
  "microsoft-xbox-controller-battery-unknown": 984912,
  "microsoft-xbox-controller-menu": 986735,
  "microsoft-xbox-controller-off": 984507,
  "microsoft-xbox-controller-view": 986736,
  "microsoft-yammer": 984969,
  "microwave": 986265,
  "microwave-off": 988195,
  "middleware": 986973,
  "middleware-outline": 986974,
  "midi": 985329,
  "midi-port": 985330,
  "mine": 986586,
  "minecraft": 983923,
  "mini-sd": 985605,
  "minidisc": 985606,
  "minus": 983924,
  "minus-box": 983925,
  "minus-box-multiple": 987457,
  "minus-box-multiple-outline": 987458,
  "minus-box-outline": 984818,
  "minus-circle": 983926,
  "minus-circle-multiple": 983898,
  "minus-circle-multiple-outline": 985811,
  "minus-circle-off": 988249,
  "minus-circle-off-outline": 988250,
  "minus-circle-outline": 983927,
  "minus-network": 983928,
  "minus-network-outline": 986266,
  "mirror": 987645,
  "mixed-martial-arts": 986511,
  "mixed-reality": 985215,
  "mixer": 985053,
  "molecule": 986028,
  "molecule-co": 987902,
  "molecule-co2": 985060,
  "monitor": 983929,
  "monitor-cellphone": 985481,
  "monitor-cellphone-star": 985482,
  "monitor-clean": 987396,
  "monitor-dashboard": 985607,
  "monitor-edit": 987846,
  "monitor-eye": 988084,
  "monitor-lock": 986587,
  "monitor-multiple": 983930,
  "monitor-off": 986512,
  "monitor-screenshot": 986705,
  "monitor-share": 988291,
  "monitor-speaker": 986975,
  "monitor-speaker-off": 986976,
  "monitor-star": 986588,
  "moon-first-quarter": 986977,
  "moon-full": 986978,
  "moon-last-quarter": 986979,
  "moon-new": 986980,
  "moon-waning-crescent": 986981,
  "moon-waning-gibbous": 986982,
  "moon-waxing-crescent": 986983,
  "moon-waxing-gibbous": 986984,
  "moped": 987270,
  "more": 983931,
  "mother-heart": 987924,
  "mother-nurse": 986401,
  "motion-sensor": 986513,
  "motion-sensor-off": 988213,
  "motorbike": 983932,
  "mouse": 983933,
  "mouse-bluetooth": 985483,
  "mouse-off": 983934,
  "mouse-variant": 983935,
  "mouse-variant-off": 983936,
  "move-resize": 984661,
  "move-resize-variant": 984662,
  "movie": 983937,
  "movie-edit": 987426,
  "movie-edit-outline": 987427,
  "movie-filter": 987428,
  "movie-filter-outline": 987429,
  "movie-open": 987086,
  "movie-open-outline": 987087,
  "movie-outline": 986589,
  "movie-roll": 985054,
  "movie-search": 987602,
  "movie-search-outline": 987603,
  "muffin": 985484,
  "multiplication": 983938,
  "multiplication-box": 983939,
  "mushroom": 985055,
  "mushroom-off": 988154,
  "mushroom-off-outline": 988155,
  "mushroom-outline": 985056,
  "music": 984922,
  "music-accidental-double-flat": 986985,
  "music-accidental-double-sharp": 986986,
  "music-accidental-flat": 986987,
  "music-accidental-natural": 986988,
  "music-accidental-sharp": 986989,
  "music-box": 983940,
  "music-box-multiple": 983859,
  "music-box-multiple-outline": 986884,
  "music-box-outline": 983941,
  "music-circle": 983942,
  "music-circle-outline": 985812,
  "music-clef-alto": 986990,
  "music-clef-bass": 986991,
  "music-clef-treble": 986992,
  "music-note": 983943,
  "music-note-bluetooth": 984574,
  "music-note-bluetooth-off": 984575,
  "music-note-eighth": 983944,
  "music-note-eighth-dotted": 986993,
  "music-note-half": 983945,
  "music-note-half-dotted": 986994,
  "music-note-off": 983946,
  "music-note-off-outline": 986995,
  "music-note-outline": 986996,
  "music-note-plus": 986590,
  "music-note-quarter": 983947,
  "music-note-quarter-dotted": 986997,
  "music-note-sixteenth": 983948,
  "music-note-sixteenth-dotted": 986998,
  "music-note-whole": 983949,
  "music-note-whole-dotted": 986999,
  "music-off": 984923,
  "music-rest-eighth": 987000,
  "music-rest-half": 987001,
  "music-rest-quarter": 987002,
  "music-rest-sixteenth": 987003,
  "music-rest-whole": 987004,
  "nail": 986591,
  "nas": 985331,
  "nativescript": 985216,
  "nature": 983950,
  "nature-people": 983951,
  "navigation": 983952,
  "near-me": 984525,
  "necklace": 986891,
  "needle": 983953,
  "netflix": 984902,
  "network": 984819,
  "network-off": 986267,
  "network-off-outline": 986268,
  "network-outline": 986269,
  "network-strength-1": 985332,
  "network-strength-1-alert": 985333,
  "network-strength-2": 985334,
  "network-strength-2-alert": 985335,
  "network-strength-3": 985336,
  "network-strength-3-alert": 985337,
  "network-strength-4": 985338,
  "network-strength-4-alert": 985339,
  "network-strength-off": 985340,
  "network-strength-off-outline": 985341,
  "network-strength-outline": 985342,
  "new-box": 983956,
  "newspaper": 983957,
  "newspaper-minus": 986892,
  "newspaper-plus": 986893,
  "newspaper-variant": 987137,
  "newspaper-variant-multiple": 987138,
  "newspaper-variant-multiple-outline": 987139,
  "newspaper-variant-outline": 987140,
  "nfc": 983958,
  "nfc-search-variant": 986707,
  "nfc-tap": 983959,
  "nfc-variant": 983960,
  "nfc-variant-off": 986708,
  "ninja": 984948,
  "nintendo-game-boy": 988051,
  "nintendo-switch": 985057,
  "nintendo-wii": 984491,
  "nintendo-wiiu": 984877,
  "nix": 987397,
  "nodejs": 983961,
  "noodles": 987518,
  "not-equal": 985485,
  "not-equal-variant": 985486,
  "note": 983962,
  "note-multiple": 984760,
  "note-multiple-outline": 984761,
  "note-outline": 983963,
  "note-plus": 983964,
  "note-plus-outline": 983965,
  "note-text": 983966,
  "note-text-outline": 987607,
  "notebook": 985134,
  "notebook-multiple": 986709,
  "notebook-outline": 986815,
  "notification-clear-all": 983967,
  "npm": 984823,
  "nuke": 984740,
  "null": 985058,
  "numeric": 983968,
  "numeric-0": 985913,
  "numeric-0-box": 983969,
  "numeric-0-box-multiple": 986894,
  "numeric-0-box-multiple-outline": 983970,
  "numeric-0-box-outline": 983971,
  "numeric-0-circle": 986270,
  "numeric-0-circle-outline": 986271,
  "numeric-1": 985914,
  "numeric-1-box": 983972,
  "numeric-1-box-multiple": 986895,
  "numeric-1-box-multiple-outline": 983973,
  "numeric-1-box-outline": 983974,
  "numeric-1-circle": 986272,
  "numeric-1-circle-outline": 986273,
  "numeric-10": 987113,
  "numeric-10-box": 987005,
  "numeric-10-box-multiple": 987114,
  "numeric-10-box-multiple-outline": 987115,
  "numeric-10-box-outline": 987006,
  "numeric-10-circle": 987116,
  "numeric-10-circle-outline": 987117,
  "numeric-2": 985915,
  "numeric-2-box": 983975,
  "numeric-2-box-multiple": 986896,
  "numeric-2-box-multiple-outline": 983976,
  "numeric-2-box-outline": 983977,
  "numeric-2-circle": 986274,
  "numeric-2-circle-outline": 986275,
  "numeric-3": 985916,
  "numeric-3-box": 983978,
  "numeric-3-box-multiple": 986897,
  "numeric-3-box-multiple-outline": 983979,
  "numeric-3-box-outline": 983980,
  "numeric-3-circle": 986276,
  "numeric-3-circle-outline": 986277,
  "numeric-4": 985917,
  "numeric-4-box": 983981,
  "numeric-4-box-multiple": 986898,
  "numeric-4-box-multiple-outline": 983986,
  "numeric-4-box-outline": 983982,
  "numeric-4-circle": 986278,
  "numeric-4-circle-outline": 986279,
  "numeric-5": 985918,
  "numeric-5-box": 983985,
  "numeric-5-box-multiple": 986899,
  "numeric-5-box-multiple-outline": 983983,
  "numeric-5-box-outline": 983984,
  "numeric-5-circle": 986280,
  "numeric-5-circle-outline": 986281,
  "numeric-6": 985919,
  "numeric-6-box": 983987,
  "numeric-6-box-multiple": 986900,
  "numeric-6-box-multiple-outline": 983988,
  "numeric-6-box-outline": 983989,
  "numeric-6-circle": 986282,
  "numeric-6-circle-outline": 986283,
  "numeric-7": 985920,
  "numeric-7-box": 983990,
  "numeric-7-box-multiple": 986901,
  "numeric-7-box-multiple-outline": 983991,
  "numeric-7-box-outline": 983992,
  "numeric-7-circle": 986284,
  "numeric-7-circle-outline": 986285,
  "numeric-8": 985921,
  "numeric-8-box": 983993,
  "numeric-8-box-multiple": 986902,
  "numeric-8-box-multiple-outline": 983994,
  "numeric-8-box-outline": 983995,
  "numeric-8-circle": 986286,
  "numeric-8-circle-outline": 986287,
  "numeric-9": 985922,
  "numeric-9-box": 983996,
  "numeric-9-box-multiple": 986903,
  "numeric-9-box-multiple-outline": 983997,
  "numeric-9-box-outline": 983998,
  "numeric-9-circle": 986288,
  "numeric-9-circle-outline": 986289,
  "numeric-9-plus": 987118,
  "numeric-9-plus-box": 983999,
  "numeric-9-plus-box-multiple": 986904,
  "numeric-9-plus-box-multiple-outline": 984000,
  "numeric-9-plus-box-outline": 984001,
  "numeric-9-plus-circle": 986290,
  "numeric-9-plus-circle-outline": 986291,
  "numeric-negative-1": 987218,
  "nut": 984824,
  "nutrition": 984002,
  "nuxt": 987398,
  "oar": 984700,
  "ocarina": 986592,
  "oci": 987881,
  "ocr": 987450,
  "octagon": 984003,
  "octagon-outline": 984004,
  "octagram": 984825,
  "octagram-outline": 984949,
  "odnoklassniki": 984005,
  "offer": 987675,
  "office-building": 985489,
  "oil": 984007,
  "oil-lamp": 986905,
  "oil-level": 987219,
  "oil-temperature": 987128,
  "omega": 984009,
  "one-up": 986029,
  "onepassword": 985217,
  "opacity": 984524,
  "open-in-app": 984011,
  "open-in-new": 984012,
  "open-source-initiative": 986030,
  "openid": 984013,
  "opera": 984014,
  "orbit": 983064,
  "order-alphabetical-ascending": 983565,
  "order-alphabetical-descending": 986375,
  "order-bool-ascending": 983742,
  "order-bool-ascending-variant": 985487,
  "order-bool-descending": 988036,
  "order-bool-descending-variant": 985488,
  "order-numeric-ascending": 984389,
  "order-numeric-descending": 984390,
  "origin": 985923,
  "ornament": 984015,
  "ornament-variant": 984016,
  "outdoor-lamp": 987220,
  "overscan": 987141,
  "owl": 984018,
  "pac-man": 986031,
  "package": 984019,
  "package-down": 984020,
  "package-up": 984021,
  "package-variant": 984022,
  "package-variant-closed": 984023,
  "page-first": 984576,
  "page-last": 984577,
  "page-layout-body": 984826,
  "page-layout-footer": 984827,
  "page-layout-header": 984828,
  "page-layout-header-footer": 987007,
  "page-layout-sidebar-left": 984829,
  "page-layout-sidebar-right": 984830,
  "page-next": 986032,
  "page-next-outline": 986033,
  "page-previous": 986034,
  "page-previous-outline": 986035,
  "pail": 988183,
  "pail-minus": 988215,
  "pail-minus-outline": 988220,
  "pail-off": 988217,
  "pail-off-outline": 988222,
  "pail-outline": 988218,
  "pail-plus": 988214,
  "pail-plus-outline": 988219,
  "pail-remove": 988216,
  "pail-remove-outline": 988221,
  "palette": 984024,
  "palette-advanced": 984025,
  "palette-outline": 986636,
  "palette-swatch": 985269,
  "palette-swatch-outline": 987996,
  "palm-tree": 987221,
  "pan": 986036,
  "pan-bottom-left": 986037,
  "pan-bottom-right": 986038,
  "pan-down": 986039,
  "pan-horizontal": 986040,
  "pan-left": 986041,
  "pan-right": 986042,
  "pan-top-left": 986043,
  "pan-top-right": 986044,
  "pan-up": 986045,
  "pan-vertical": 986046,
  "panda": 984026,
  "pandora": 984027,
  "panorama": 984028,
  "panorama-fisheye": 984029,
  "panorama-horizontal": 984030,
  "panorama-vertical": 984031,
  "panorama-wide-angle": 984032,
  "paper-cut-vertical": 984033,
  "paper-roll": 987479,
  "paper-roll-outline": 987480,
  "paperclip": 984034,
  "parachute": 986292,
  "parachute-outline": 986293,
  "parking": 984035,
  "party-popper": 987222,
  "passport": 985059,
  "passport-biometric": 986593,
  "pasta": 987488,
  "patio-heater": 987008,
  "patreon": 985218,
  "pause": 984036,
  "pause-circle": 984037,
  "pause-circle-outline": 984038,
  "pause-octagon": 984039,
  "pause-octagon-outline": 984040,
  "paw": 984041,
  "paw-off": 984663,
  "pdf-box": 986710,
  "peace": 985220,
  "peanut": 987132,
  "peanut-off": 987133,
  "peanut-off-outline": 987135,
  "peanut-outline": 987134,
  "pen": 984042,
  "pen-lock": 986594,
  "pen-minus": 986595,
  "pen-off": 986596,
  "pen-plus": 986597,
  "pen-remove": 986598,
  "pencil": 984043,
  "pencil-box": 984044,
  "pencil-box-multiple": 987460,
  "pencil-box-multiple-outline": 987461,
  "pencil-box-outline": 984045,
  "pencil-circle": 984831,
  "pencil-circle-outline": 984950,
  "pencil-lock": 984046,
  "pencil-lock-outline": 986599,
  "pencil-minus": 986600,
  "pencil-minus-outline": 986601,
  "pencil-off": 984047,
  "pencil-off-outline": 986602,
  "pencil-outline": 986294,
  "pencil-plus": 986603,
  "pencil-plus-outline": 986604,
  "pencil-remove": 986605,
  "pencil-remove-outline": 986606,
  "pencil-ruler": 987987,
  "penguin": 986816,
  "pentagon": 984833,
  "pentagon-outline": 984832,
  "percent": 984048,
  "percent-outline": 987768,
  "periodic-table": 985270,
  "perspective-less": 986403,
  "perspective-more": 986404,
  "pharmacy": 984049,
  "phone": 984050,
  "phone-alert": 986906,
  "phone-alert-outline": 987534,
  "phone-bluetooth": 984051,
  "phone-bluetooth-outline": 987535,
  "phone-cancel": 987324,
  "phone-cancel-outline": 987536,
  "phone-check": 987561,
  "phone-check-outline": 987562,
  "phone-classic": 984578,
  "phone-classic-off": 987769,
  "phone-forward": 984052,
  "phone-forward-outline": 987537,
  "phone-hangup": 984053,
  "phone-hangup-outline": 987538,
  "phone-in-talk": 984054,
  "phone-in-talk-outline": 987522,
  "phone-incoming": 984055,
  "phone-incoming-outline": 987539,
  "phone-lock": 984056,
  "phone-lock-outline": 987540,
  "phone-log": 984057,
  "phone-log-outline": 987541,
  "phone-message": 987542,
  "phone-message-outline": 987543,
  "phone-minus": 984664,
  "phone-minus-outline": 987544,
  "phone-missed": 984058,
  "phone-missed-outline": 987557,
  "phone-off": 986607,
  "phone-off-outline": 987558,
  "phone-outgoing": 984059,
  "phone-outgoing-outline": 987545,
  "phone-outline": 986608,
  "phone-paused": 984060,
  "phone-paused-outline": 987546,
  "phone-plus": 984665,
  "phone-plus-outline": 987547,
  "phone-return": 985135,
  "phone-return-outline": 987548,
  "phone-ring": 987563,
  "phone-ring-outline": 987564,
  "phone-rotate-landscape": 985221,
  "phone-rotate-portrait": 985222,
  "phone-settings": 984061,
  "phone-settings-outline": 987549,
  "phone-voip": 984062,
  "pi": 984063,
  "pi-box": 984064,
  "pi-hole": 986609,
  "piano": 984701,
  "pickaxe": 985271,
  "picture-in-picture-bottom-right": 986711,
  "picture-in-picture-bottom-right-outline": 986712,
  "picture-in-picture-top-right": 986713,
  "picture-in-picture-top-right-outline": 986714,
  "pier": 985223,
  "pier-crane": 985224,
  "pig": 984065,
  "pig-variant": 987142,
  "piggy-bank": 987143,
  "pill": 984066,
  "pillar": 984834,
  "pin": 984067,
  "pin-off": 984068,
  "pin-off-outline": 985392,
  "pin-outline": 985393,
  "pine-tree": 984069,
  "pine-tree-box": 984070,
  "pine-tree-fire": 988186,
  "pinterest": 984071,
  "pinwheel": 985813,
  "pinwheel-outline": 985814,
  "pipe": 985061,
  "pipe-disconnected": 985062,
  "pipe-leak": 985225,
  "pipe-wrench": 987988,
  "pirate": 985608,
  "pistol": 984835,
  "piston": 985226,
  "pizza": 984073,
  "play": 984074,
  "play-box": 987770,
  "play-box-multiple": 986393,
  "play-box-multiple-outline": 988134,
  "play-box-outline": 984075,
  "play-circle": 984076,
  "play-circle-outline": 984077,
  "play-network": 985227,
  "play-network-outline": 986295,
  "play-outline": 986907,
  "play-pause": 984078,
  "play-protected-content": 984079,
  "play-speed": 985343,
  "playlist-check": 984519,
  "playlist-edit": 985344,
  "playlist-minus": 984080,
  "playlist-music": 986296,
  "playlist-music-outline": 986297,
  "playlist-play": 984081,
  "playlist-plus": 984082,
  "playlist-remove": 984083,
  "playlist-star": 986610,
  "plex": 984762,
  "plus": 984085,
  "plus-box": 984086,
  "plus-box-multiple": 983860,
  "plus-box-multiple-outline": 987459,
  "plus-box-outline": 984836,
  "plus-circle": 984087,
  "plus-circle-multiple": 983884,
  "plus-circle-multiple-outline": 984088,
  "plus-circle-outline": 984089,
  "plus-minus": 985490,
  "plus-minus-box": 985491,
  "plus-minus-variant": 988361,
  "plus-network": 984090,
  "plus-network-outline": 986298,
  "plus-one": 984091,
  "plus-outline": 984837,
  "plus-thick": 987628,
  "podcast": 985492,
  "podium": 986405,
  "podium-bronze": 986406,
  "podium-gold": 986407,
  "podium-silver": 986408,
  "point-of-sale": 986514,
  "pokeball": 984093,
  "pokemon-go": 985609,
  "poker-chip": 985136,
  "polaroid": 984094,
  "police-badge": 987495,
  "police-badge-outline": 987496,
  "poll": 984095,
  "poll-box": 984096,
  "poll-box-outline": 987771,
  "polo": 988355,
  "polymer": 984097,
  "pool": 984582,
  "popcorn": 984098,
  "post": 987144,
  "post-outline": 987145,
  "postage-stamp": 986299,
  "pot": 983781,
  "pot-mix": 984667,
  "pot-mix-outline": 984695,
  "pot-outline": 983807,
  "pot-steam": 984666,
  "pot-steam-outline": 983846,
  "pound": 984099,
  "pound-box": 984100,
  "pound-box-outline": 987519,
  "power": 984101,
  "power-cycle": 985345,
  "power-off": 985346,
  "power-on": 985347,
  "power-plug": 984741,
  "power-plug-off": 984742,
  "power-plug-off-outline": 988196,
  "power-plug-outline": 988197,
  "power-settings": 984102,
  "power-sleep": 985348,
  "power-socket": 984103,
  "power-socket-au": 985349,
  "power-socket-de": 987399,
  "power-socket-eu": 985063,
  "power-socket-fr": 987400,
  "power-socket-jp": 987401,
  "power-socket-uk": 985064,
  "power-socket-us": 985065,
  "power-standby": 985350,
  "powershell": 985610,
  "prescription": 984838,
  "presentation": 984104,
  "presentation-play": 984105,
  "printer": 984106,
  "printer-3d": 984107,
  "printer-3d-nozzle": 986715,
  "printer-3d-nozzle-alert": 987584,
  "printer-3d-nozzle-alert-outline": 987585,
  "printer-3d-nozzle-outline": 986716,
  "printer-alert": 984108,
  "printer-check": 987462,
  "printer-eye": 988248,
  "printer-off": 986717,
  "printer-pos": 987223,
  "printer-search": 988247,
  "printer-settings": 984839,
  "printer-wireless": 985611,
  "priority-high": 984579,
  "priority-low": 984580,
  "professional-hexagon": 984109,
  "progress-alert": 986300,
  "progress-check": 985493,
  "progress-clock": 985494,
  "progress-close": 987402,
  "progress-download": 985495,
  "progress-upload": 985496,
  "progress-wrench": 986301,
  "projector": 984110,
  "projector-screen": 984111,
  "propane-tank": 987991,
  "propane-tank-outline": 987992,
  "protocol": 987096,
  "publish": 984743,
  "pulse": 984112,
  "pump": 988162,
  "pumpkin": 986047,
  "purse": 986908,
  "purse-outline": 986909,
  "puzzle": 984113,
  "puzzle-check": 988198,
  "puzzle-check-outline": 988199,
  "puzzle-edit": 988371,
  "puzzle-edit-outline": 988377,
  "puzzle-heart": 988372,
  "puzzle-heart-outline": 988378,
  "puzzle-minus": 988369,
  "puzzle-minus-outline": 988375,
  "puzzle-outline": 985702,
  "puzzle-plus": 988368,
  "puzzle-plus-outline": 988374,
  "puzzle-remove": 988370,
  "puzzle-remove-outline": 988376,
  "puzzle-star": 988373,
  "puzzle-star-outline": 988379,
  "qi": 985497,
  "qqchat": 984581,
  "qrcode": 984114,
  "qrcode-edit": 985272,
  "qrcode-minus": 987532,
  "qrcode-plus": 987531,
  "qrcode-remove": 987533,
  "qrcode-scan": 984115,
  "quadcopter": 984116,
  "quality-high": 984117,
  "quality-low": 985612,
  "quality-medium": 985613,
  "quora": 986409,
  "rabbit": 985351,
  "racing-helmet": 986515,
  "racquetball": 986516,
  "radar": 984119,
  "radiator": 984120,
  "radiator-disabled": 985815,
  "radiator-off": 985816,
  "radio": 984121,
  "radio-am": 986302,
  "radio-fm": 986303,
  "radio-handheld": 984122,
  "radio-off": 987676,
  "radio-tower": 984123,
  "radioactive": 984124,
  "radioactive-off": 986817,
  "radiobox-blank": 984125,
  "radiobox-marked": 984126,
  "radiology-box": 988357,
  "radiology-box-outline": 988358,
  "radius": 986304,
  "radius-outline": 986305,
  "railroad-light": 986910,
  "raspberry-pi": 984127,
  "ray-end": 984128,
  "ray-end-arrow": 984129,
  "ray-start": 984130,
  "ray-start-arrow": 984131,
  "ray-start-end": 984132,
  "ray-vertex": 984133,
  "react": 984840,
  "read": 984135,
  "receipt": 984137,
  "record": 984138,
  "record-circle": 986818,
  "record-circle-outline": 986819,
  "record-player": 985498,
  "record-rec": 984139,
  "rectangle": 986718,
  "rectangle-outline": 986719,
  "recycle": 984140,
  "recycle-variant": 988061,
  "reddit": 984141,
  "redhat": 987419,
  "redo": 984142,
  "redo-variant": 984143,
  "reflect-horizontal": 985614,
  "reflect-vertical": 985615,
  "refresh": 984144,
  "refresh-circle": 988023,
  "regex": 984145,
  "registered-trademark": 985703,
  "relation-many-to-many": 988310,
  "relation-many-to-one": 988311,
  "relation-many-to-one-or-many": 988312,
  "relation-many-to-only-one": 988313,
  "relation-many-to-zero-or-many": 988314,
  "relation-many-to-zero-or-one": 988315,
  "relation-one-or-many-to-many": 988316,
  "relation-one-or-many-to-one": 988317,
  "relation-one-or-many-to-one-or-many": 988318,
  "relation-one-or-many-to-only-one": 988319,
  "relation-one-or-many-to-zero-or-many": 988320,
  "relation-one-or-many-to-zero-or-one": 988321,
  "relation-one-to-many": 988322,
  "relation-one-to-one": 988323,
  "relation-one-to-one-or-many": 988324,
  "relation-one-to-only-one": 988325,
  "relation-one-to-zero-or-many": 988326,
  "relation-one-to-zero-or-one": 988327,
  "relation-only-one-to-many": 988328,
  "relation-only-one-to-one": 988329,
  "relation-only-one-to-one-or-many": 988330,
  "relation-only-one-to-only-one": 988331,
  "relation-only-one-to-zero-or-many": 988332,
  "relation-only-one-to-zero-or-one": 988333,
  "relation-zero-or-many-to-many": 988334,
  "relation-zero-or-many-to-one": 988335,
  "relation-zero-or-many-to-one-or-many": 988336,
  "relation-zero-or-many-to-only-one": 988337,
  "relation-zero-or-many-to-zero-or-many": 988338,
  "relation-zero-or-many-to-zero-or-one": 988339,
  "relation-zero-or-one-to-many": 988340,
  "relation-zero-or-one-to-one": 988341,
  "relation-zero-or-one-to-one-or-many": 988342,
  "relation-zero-or-one-to-only-one": 988343,
  "relation-zero-or-one-to-zero-or-many": 988344,
  "relation-zero-or-one-to-zero-or-one": 988345,
  "relative-scale": 984146,
  "reload": 984147,
  "reload-alert": 987403,
  "reminder": 985228,
  "remote": 984148,
  "remote-desktop": 985273,
  "remote-off": 986820,
  "remote-tv": 986821,
  "remote-tv-off": 986822,
  "rename-box": 984149,
  "reorder-horizontal": 984712,
  "reorder-vertical": 984713,
  "repeat": 984150,
  "repeat-off": 984151,
  "repeat-once": 984152,
  "replay": 984153,
  "reply": 984154,
  "reply-all": 984155,
  "reply-all-outline": 986911,
  "reply-circle": 987566,
  "reply-outline": 986912,
  "reproduction": 984156,
  "resistor": 985924,
  "resistor-nodes": 985925,
  "resize": 985704,
  "resize-bottom-right": 984157,
  "responsive": 984158,
  "restart": 984841,
  "restart-alert": 987404,
  "restart-off": 986517,
  "restore": 985499,
  "restore-alert": 987405,
  "rewind": 984159,
  "rewind-10": 986410,
  "rewind-30": 986518,
  "rewind-5": 987641,
  "rewind-outline": 984842,
  "rhombus": 984843,
  "rhombus-medium": 985616,
  "rhombus-medium-outline": 988380,
  "rhombus-outline": 984844,
  "rhombus-split": 985617,
  "rhombus-split-outline": 988381,
  "ribbon": 984160,
  "rice": 985066,
  "ring": 985067,
  "rivet": 986720,
  "road": 984161,
  "road-variant": 984162,
  "robber": 987224,
  "robot": 984745,
  "robot-industrial": 985926,
  "robot-mower": 987639,
  "robot-mower-outline": 987635,
  "robot-vacuum": 984845,
  "robot-vacuum-variant": 985352,
  "rocket": 984163,
  "rocket-launch": 988382,
  "rocket-launch-outline": 988383,
  "rocket-outline": 988079,
  "rodent": 987943,
  "roller-skate": 986411,
  "roller-skate-off": 983365,
  "rollerblade": 986412,
  "rollerblade-off": 983086,
  "rollupjs": 986048,
  "roman-numeral-1": 987272,
  "roman-numeral-10": 987281,
  "roman-numeral-2": 987273,
  "roman-numeral-3": 987274,
  "roman-numeral-4": 987275,
  "roman-numeral-5": 987276,
  "roman-numeral-6": 987277,
  "roman-numeral-7": 987278,
  "roman-numeral-8": 987279,
  "roman-numeral-9": 987280,
  "room-service": 985229,
  "room-service-outline": 986519,
  "rotate-3d": 986823,
  "rotate-3d-variant": 984164,
  "rotate-left": 984165,
  "rotate-left-variant": 984166,
  "rotate-orbit": 986520,
  "rotate-right": 984167,
  "rotate-right-variant": 984168,
  "rounded-corner": 984583,
  "router": 987618,
  "router-network": 987271,
  "router-wireless": 984169,
  "router-wireless-settings": 985705,
  "routes": 984170,
  "routes-clock": 987225,
  "rowing": 984584,
  "rss": 984171,
  "rss-box": 984172,
  "rss-off": 986913,
  "rug": 988277,
  "rugby": 986521,
  "ruler": 984173,
  "ruler-square": 986306,
  "ruler-square-compass": 986814,
  "run": 984846,
  "run-fast": 984174,
  "rv-truck": 987604,
  "sack": 986414,
  "sack-percent": 986415,
  "safe": 985706,
  "safe-square": 987772,
  "safe-square-outline": 987773,
  "safety-goggles": 986416,
  "sail-boat": 986824,
  "sale": 984175,
  "salesforce": 985230,
  "sass": 985068,
  "satellite": 984176,
  "satellite-uplink": 985353,
  "satellite-variant": 984177,
  "sausage": 985274,
  "saw-blade": 986721,
  "sawtooth-wave": 988282,
  "saxophone": 984585,
  "scale": 984178,
  "scale-balance": 984529,
  "scale-bathroom": 984179,
  "scale-off": 987226,
  "scan-helper": 988120,
  "scanner": 984747,
  "scanner-off": 985354,
  "scatter-plot": 986825,
  "scatter-plot-outline": 986826,
  "school": 984180,
  "school-outline": 987520,
  "scissors-cutting": 985707,
  "scooter": 987625,
  "scoreboard": 987774,
  "scoreboard-outline": 987775,
  "screen-rotation": 984181,
  "screen-rotation-lock": 984184,
  "screw-flat-top": 986611,
  "screw-lag": 986612,
  "screw-machine-flat-top": 986613,
  "screw-machine-round-top": 986614,
  "screw-round-top": 986615,
  "screwdriver": 984182,
  "script": 986049,
  "script-outline": 984183,
  "script-text": 986050,
  "script-text-outline": 986051,
  "sd": 984185,
  "seal": 984186,
  "seal-variant": 987097,
  "search-web": 984847,
  "seat": 986307,
  "seat-flat": 984187,
  "seat-flat-angled": 984188,
  "seat-individual-suite": 984189,
  "seat-legroom-extra": 984190,
  "seat-legroom-normal": 984191,
  "seat-legroom-reduced": 984192,
  "seat-outline": 986308,
  "seat-passenger": 987721,
  "seat-recline-extra": 984193,
  "seat-recline-normal": 984194,
  "seatbelt": 986309,
  "security": 984195,
  "security-network": 984196,
  "seed": 986722,
  "seed-off": 988157,
  "seed-off-outline": 988158,
  "seed-outline": 986723,
  "segment": 986827,
  "select": 984197,
  "select-all": 984198,
  "select-color": 986417,
  "select-compare": 985817,
  "select-drag": 985708,
  "select-group": 987010,
  "select-inverse": 984199,
  "select-marker": 987776,
  "select-multiple": 987777,
  "select-multiple-marker": 987778,
  "select-off": 984200,
  "select-place": 987098,
  "select-search": 987652,
  "selection": 984201,
  "selection-drag": 985709,
  "selection-ellipse": 986418,
  "selection-ellipse-arrow-inside": 986914,
  "selection-marker": 987779,
  "selection-multiple": 987781,
  "selection-multiple-marker": 987780,
  "selection-off": 984951,
  "selection-search": 987653,
  "semantic-web": 987926,
  "send": 984202,
  "send-check": 987489,
  "send-check-outline": 987490,
  "send-circle": 986616,
  "send-circle-outline": 986617,
  "send-clock": 987491,
  "send-clock-outline": 987492,
  "send-lock": 985069,
  "send-lock-outline": 987494,
  "send-outline": 987493,
  "serial-port": 984668,
  "server": 984203,
  "server-minus": 984204,
  "server-network": 984205,
  "server-network-off": 984206,
  "server-off": 984207,
  "server-plus": 984208,
  "server-remove": 984209,
  "server-security": 984210,
  "set-all": 984952,
  "set-center": 984953,
  "set-center-right": 984954,
  "set-left": 984955,
  "set-left-center": 984956,
  "set-left-right": 984957,
  "set-merge": 988384,
  "set-none": 984958,
  "set-right": 984959,
  "set-split": 988385,
  "set-square": 988253,
  "set-top-box": 985503,
  "settings-helper": 985710,
  "shaker": 987406,
  "shaker-outline": 987407,
  "shape": 985137,
  "shape-circle-plus": 984669,
  "shape-outline": 985138,
  "shape-oval-plus": 987642,
  "shape-plus": 984213,
  "shape-polygon-plus": 984670,
  "shape-rectangle-plus": 984671,
  "shape-square-plus": 984672,
  "share": 984214,
  "share-all": 987636,
  "share-all-outline": 987637,
  "share-circle": 987565,
  "share-off": 986915,
  "share-off-outline": 986916,
  "share-outline": 985394,
  "share-variant": 984215,
  "sheep": 986310,
  "shield": 984216,
  "shield-account": 985231,
  "shield-account-outline": 985618,
  "shield-airplane": 984763,
  "shield-airplane-outline": 986311,
  "shield-alert": 986828,
  "shield-alert-outline": 986829,
  "shield-bug": 988122,
  "shield-bug-outline": 988123,
  "shield-car": 987011,
  "shield-check": 984421,
  "shield-check-outline": 986312,
  "shield-cross": 986313,
  "shield-cross-outline": 986314,
  "shield-edit": 987552,
  "shield-edit-outline": 987553,
  "shield-half": 988000,
  "shield-half-full": 984960,
  "shield-home": 984714,
  "shield-home-outline": 986315,
  "shield-key": 986052,
  "shield-key-outline": 986053,
  "shield-link-variant": 986419,
  "shield-link-variant-outline": 986420,
  "shield-lock": 985501,
  "shield-lock-outline": 986316,
  "shield-off": 985502,
  "shield-off-outline": 985500,
  "shield-outline": 984217,
  "shield-plus": 985818,
  "shield-plus-outline": 985819,
  "shield-refresh": 983210,
  "shield-refresh-outline": 983520,
  "shield-remove": 985820,
  "shield-remove-outline": 985821,
  "shield-search": 986522,
  "shield-star": 987451,
  "shield-star-outline": 987452,
  "shield-sun": 987229,
  "shield-sun-outline": 987230,
  "shield-sync": 987554,
  "shield-sync-outline": 987555,
  "ship-wheel": 985139,
  "shoe-formal": 985927,
  "shoe-heel": 985928,
  "shoe-print": 986618,
  "shopping": 984218,
  "shopping-music": 984219,
  "shopping-outline": 987605,
  "shopping-search": 987012,
  "shovel": 984848,
  "shovel-off": 984849,
  "shower": 985504,
  "shower-head": 985505,
  "shredder": 984220,
  "shuffle": 984221,
  "shuffle-disabled": 984222,
  "shuffle-variant": 984223,
  "shuriken": 988031,
  "sigma": 984224,
  "sigma-lower": 984619,
  "sign-caution": 984225,
  "sign-direction": 984961,
  "sign-direction-minus": 987136,
  "sign-direction-plus": 987100,
  "sign-direction-remove": 987101,
  "sign-real-estate": 987416,
  "sign-text": 984962,
  "signal": 984226,
  "signal-2g": 984850,
  "signal-3g": 984851,
  "signal-4g": 984852,
  "signal-5g": 985711,
  "signal-cellular-1": 985276,
  "signal-cellular-2": 985277,
  "signal-cellular-3": 985278,
  "signal-cellular-outline": 985279,
  "signal-distance-variant": 986724,
  "signal-hspa": 984853,
  "signal-hspa-plus": 984854,
  "signal-off": 984963,
  "signal-variant": 984586,
  "signature": 986619,
  "signature-freehand": 986620,
  "signature-image": 986621,
  "signature-text": 986622,
  "silo": 985929,
  "silverware": 984227,
  "silverware-clean": 987102,
  "silverware-fork": 984228,
  "silverware-fork-knife": 985712,
  "silverware-spoon": 984229,
  "silverware-variant": 984230,
  "sim": 984231,
  "sim-alert": 984232,
  "sim-off": 984233,
  "simple-icons": 987933,
  "sina-weibo": 985823,
  "sine-wave": 985435,
  "sitemap": 984234,
  "size-l": 988070,
  "size-m": 988069,
  "size-s": 988068,
  "size-xl": 988071,
  "size-xs": 988067,
  "size-xxl": 988072,
  "size-xxs": 988066,
  "size-xxxl": 988073,
  "skate": 986421,
  "skateboard": 988354,
  "skew-less": 986422,
  "skew-more": 986423,
  "ski": 987908,
  "ski-cross-country": 987909,
  "ski-water": 987910,
  "skip-backward": 984235,
  "skip-backward-outline": 986917,
  "skip-forward": 984236,
  "skip-forward-outline": 986918,
  "skip-next": 984237,
  "skip-next-circle": 984673,
  "skip-next-circle-outline": 984674,
  "skip-next-outline": 986919,
  "skip-previous": 984238,
  "skip-previous-circle": 984675,
  "skip-previous-circle-outline": 984676,
  "skip-previous-outline": 986920,
  "skull": 984716,
  "skull-crossbones": 986054,
  "skull-crossbones-outline": 986055,
  "skull-outline": 986056,
  "skull-scan": 988359,
  "skull-scan-outline": 988360,
  "skype": 984239,
  "skype-business": 984240,
  "slack": 984241,
  "slash-forward": 987103,
  "slash-forward-box": 987104,
  "sleep": 984242,
  "sleep-off": 984243,
  "slope-downhill": 986623,
  "slope-uphill": 986624,
  "slot-machine": 987412,
  "slot-machine-outline": 987413,
  "smart-card": 987325,
  "smart-card-outline": 987326,
  "smart-card-reader": 987327,
  "smart-card-reader-outline": 987328,
  "smog": 985713,
  "smoke-detector": 983954,
  "smoking": 984244,
  "smoking-off": 984245,
  "smoking-pipe": 988173,
  "smoking-pipe-off": 988200,
  "snapchat": 984246,
  "snowboard": 987911,
  "snowflake": 984855,
  "snowflake-alert": 986921,
  "snowflake-melt": 987851,
  "snowflake-variant": 986922,
  "snowman": 984247,
  "soccer": 984248,
  "soccer-field": 985140,
  "sofa": 984249,
  "solar-panel": 986523,
  "solar-panel-large": 986524,
  "solar-power": 985714,
  "soldering-iron": 987282,
  "solid": 984717,
  "sony-playstation": 984084,
  "sort": 984250,
  "sort-alphabetical-ascending": 984509,
  "sort-alphabetical-ascending-variant": 987464,
  "sort-alphabetical-descending": 984511,
  "sort-alphabetical-descending-variant": 987465,
  "sort-alphabetical-variant": 984251,
  "sort-ascending": 984252,
  "sort-bool-ascending": 988037,
  "sort-bool-ascending-variant": 988038,
  "sort-bool-descending": 988039,
  "sort-bool-descending-variant": 988040,
  "sort-descending": 984253,
  "sort-numeric-ascending": 988041,
  "sort-numeric-ascending-variant": 985357,
  "sort-numeric-descending": 988042,
  "sort-numeric-descending-variant": 985810,
  "sort-numeric-variant": 984254,
  "sort-reverse-variant": 983868,
  "sort-variant": 984255,
  "sort-variant-lock": 986317,
  "sort-variant-lock-open": 986318,
  "sort-variant-remove": 987463,
  "soundcloud": 984256,
  "source-branch": 984620,
  "source-branch-check": 988367,
  "source-branch-minus": 988363,
  "source-branch-plus": 988362,
  "source-branch-refresh": 988365,
  "source-branch-remove": 988364,
  "source-branch-sync": 988366,
  "source-commit": 984856,
  "source-commit-end": 984857,
  "source-commit-end-local": 984858,
  "source-commit-local": 984859,
  "source-commit-next-local": 984860,
  "source-commit-start": 984861,
  "source-commit-start-next-local": 984862,
  "source-fork": 984257,
  "source-merge": 984621,
  "source-pull": 984258,
  "source-repository": 986319,
  "source-repository-multiple": 986320,
  "soy-sauce": 985070,
  "soy-sauce-off": 988156,
  "spa": 986321,
  "spa-outline": 986322,
  "space-invaders": 986057,
  "space-station": 988035,
  "spade": 986725,
  "speaker": 984259,
  "speaker-bluetooth": 985506,
  "speaker-multiple": 986424,
  "speaker-off": 984260,
  "speaker-wireless": 984863,
  "speedometer": 984261,
  "speedometer-medium": 987013,
  "speedometer-slow": 987014,
  "spellcheck": 984262,
  "spider": 987626,
  "spider-thread": 987627,
  "spider-web": 986058,
  "spoon-sugar": 988201,
  "spotify": 984263,
  "spotlight": 984264,
  "spotlight-beam": 984265,
  "spray": 984677,
  "spray-bottle": 985824,
  "sprinkler": 987231,
  "sprinkler-variant": 987232,
  "sprout": 986726,
  "sprout-outline": 986727,
  "square": 984932,
  "square-edit-outline": 985356,
  "square-medium": 985619,
  "square-medium-outline": 985620,
  "square-off": 987886,
  "square-off-outline": 987887,
  "square-outline": 984931,
  "square-root": 984964,
  "square-root-box": 985507,
  "square-small": 985621,
  "square-wave": 988283,
  "squeegee": 985825,
  "ssh": 985280,
  "stack-exchange": 984587,
  "stack-overflow": 984268,
  "stackpath": 983897,
  "stadium": 987129,
  "stadium-variant": 984864,
  "stairs": 984269,
  "stairs-box": 988062,
  "stairs-down": 987838,
  "stairs-up": 987837,
  "stamper": 986425,
  "standard-definition": 985071,
  "star": 984270,
  "star-box": 985715,
  "star-box-multiple": 987782,
  "star-box-multiple-outline": 987783,
  "star-box-outline": 985716,
  "star-circle": 984271,
  "star-circle-outline": 985508,
  "star-face": 985509,
  "star-four-points": 985826,
  "star-four-points-outline": 985827,
  "star-half": 983622,
  "star-half-full": 984272,
  "star-off": 984273,
  "star-outline": 984274,
  "star-three-points": 985828,
  "star-three-points-outline": 985829,
  "state-machine": 987631,
  "steam": 984275,
  "steering": 984276,
  "steering-off": 985358,
  "step-backward": 984277,
  "step-backward-2": 984278,
  "step-forward": 984279,
  "step-forward-2": 984280,
  "stethoscope": 984281,
  "sticker": 988004,
  "sticker-alert": 988005,
  "sticker-alert-outline": 988006,
  "sticker-check": 988007,
  "sticker-check-outline": 988008,
  "sticker-circle-outline": 984528,
  "sticker-emoji": 984965,
  "sticker-minus": 988009,
  "sticker-minus-outline": 988010,
  "sticker-outline": 988011,
  "sticker-plus": 988012,
  "sticker-plus-outline": 988013,
  "sticker-remove": 988014,
  "sticker-remove-outline": 988015,
  "stocking": 984282,
  "stomach": 987283,
  "stop": 984283,
  "stop-circle": 984678,
  "stop-circle-outline": 984679,
  "store": 984284,
  "store-24-hour": 984285,
  "store-outline": 988001,
  "storefront": 985031,
  "storefront-outline": 987329,
  "stove": 984286,
  "strategy": 987606,
  "stretch-to-page": 986923,
  "stretch-to-page-outline": 986924,
  "string-lights": 987834,
  "string-lights-off": 987835,
  "subdirectory-arrow-left": 984588,
  "subdirectory-arrow-right": 984589,
  "subtitles": 985622,
  "subtitles-outline": 985623,
  "subway": 984748,
  "subway-alert-variant": 986525,
  "subway-variant": 984287,
  "summit": 984966,
  "sunglasses": 984288,
  "surround-sound": 984517,
  "surround-sound-2-0": 985072,
  "surround-sound-3-1": 985073,
  "surround-sound-5-1": 985074,
  "surround-sound-7-1": 985075,
  "svg": 984865,
  "swap-horizontal": 984289,
  "swap-horizontal-bold": 986061,
  "swap-horizontal-circle": 987105,
  "swap-horizontal-circle-outline": 987106,
  "swap-horizontal-variant": 985281,
  "swap-vertical": 984290,
  "swap-vertical-bold": 986062,
  "swap-vertical-circle": 987107,
  "swap-vertical-circle-outline": 987108,
  "swap-vertical-variant": 985282,
  "swim": 984291,
  "switch": 984292,
  "sword": 984293,
  "sword-cross": 984967,
  "syllabary-hangul": 987955,
  "syllabary-hiragana": 987956,
  "syllabary-katakana": 987957,
  "syllabary-katakana-halfwidth": 987958,
  "symfony": 985830,
  "sync": 984294,
  "sync-alert": 984295,
  "sync-circle": 988024,
  "sync-off": 984296,
  "tab": 984297,
  "tab-minus": 985931,
  "tab-plus": 984924,
  "tab-remove": 985932,
  "tab-unselected": 984298,
  "table": 984299,
  "table-account": 988089,
  "table-alert": 988090,
  "table-arrow-down": 988091,
  "table-arrow-left": 988092,
  "table-arrow-right": 988093,
  "table-arrow-up": 988094,
  "table-border": 985624,
  "table-cancel": 988095,
  "table-chair": 987233,
  "table-check": 988096,
  "table-clock": 988097,
  "table-cog": 988098,
  "table-column": 985141,
  "table-column-plus-after": 984300,
  "table-column-plus-before": 984301,
  "table-column-remove": 984302,
  "table-column-width": 984303,
  "table-edit": 984304,
  "table-eye": 987284,
  "table-eye-off": 988099,
  "table-furniture": 984508,
  "table-headers-eye": 987677,
  "table-headers-eye-off": 987678,
  "table-heart": 988100,
  "table-key": 988101,
  "table-large": 984305,
  "table-large-plus": 987015,
  "table-large-remove": 987016,
  "table-lock": 988102,
  "table-merge-cells": 985510,
  "table-minus": 988103,
  "table-multiple": 988104,
  "table-network": 988105,
  "table-of-contents": 985142,
  "table-off": 988106,
  "table-plus": 985717,
  "table-refresh": 988064,
  "table-remove": 985718,
  "table-row": 985143,
  "table-row-height": 984306,
  "table-row-plus-after": 984307,
  "table-row-plus-before": 984308,
  "table-row-remove": 984309,
  "table-search": 985359,
  "table-settings": 985144,
  "table-split-cell": 988202,
  "table-star": 988107,
  "table-sync": 988065,
  "table-tennis": 986728,
  "tablet": 984310,
  "tablet-android": 984311,
  "tablet-cellphone": 985511,
  "tablet-dashboard": 986830,
  "tablet-ipad": 984312,
  "taco": 984930,
  "tag": 984313,
  "tag-faces": 984314,
  "tag-heart": 984715,
  "tag-heart-outline": 986063,
  "tag-minus": 985360,
  "tag-minus-outline": 987679,
  "tag-multiple": 984315,
  "tag-multiple-outline": 987895,
  "tag-off": 987680,
  "tag-off-outline": 987681,
  "tag-outline": 984316,
  "tag-plus": 984866,
  "tag-plus-outline": 987682,
  "tag-remove": 984867,
  "tag-remove-outline": 987683,
  "tag-text": 987684,
  "tag-text-outline": 984317,
  "tailwind": 988159,
  "tank": 986426,
  "tanker-truck": 987109,
  "tape-measure": 985933,
  "target": 984318,
  "target-account": 986064,
  "target-variant": 985719,
  "taxi": 984319,
  "tea": 986526,
  "tea-outline": 986527,
  "teach": 985232,
  "teamviewer": 984320,
  "telegram": 984321,
  "telescope": 985934,
  "television": 984322,
  "television-ambient-light": 987990,
  "television-box": 985145,
  "television-classic": 985076,
  "television-classic-off": 985146,
  "television-clean": 987408,
  "television-guide": 984323,
  "television-off": 985147,
  "television-pause": 987017,
  "television-play": 986831,
  "television-stop": 987018,
  "temperature-celsius": 984324,
  "temperature-fahrenheit": 984325,
  "temperature-kelvin": 984326,
  "tennis": 986528,
  "tennis-ball": 984327,
  "tent": 984328,
  "terraform": 987234,
  "terrain": 984329,
  "test-tube": 984680,
  "test-tube-empty": 985361,
  "test-tube-off": 985362,
  "text": 985512,
  "text-box": 983578,
  "text-box-check": 986790,
  "text-box-check-outline": 986791,
  "text-box-minus": 986792,
  "text-box-minus-outline": 986793,
  "text-box-multiple": 985783,
  "text-box-multiple-outline": 985784,
  "text-box-outline": 985581,
  "text-box-plus": 986794,
  "text-box-plus-outline": 986795,
  "text-box-remove": 986796,
  "text-box-remove-outline": 986797,
  "text-box-search": 986798,
  "text-box-search-outline": 986799,
  "text-recognition": 987453,
  "text-search": 988088,
  "text-shadow": 984681,
  "text-short": 985513,
  "text-subject": 985514,
  "text-to-speech": 984330,
  "text-to-speech-off": 984331,
  "texture": 984332,
  "texture-box": 987110,
  "theater": 984333,
  "theme-light-dark": 984334,
  "thermometer": 984335,
  "thermometer-alert": 986625,
  "thermometer-chevron-down": 986626,
  "thermometer-chevron-up": 986627,
  "thermometer-high": 987330,
  "thermometer-lines": 984336,
  "thermometer-low": 987331,
  "thermometer-minus": 986628,
  "thermometer-plus": 986629,
  "thermostat": 983955,
  "thermostat-box": 985233,
  "thought-bubble": 985078,
  "thought-bubble-outline": 985079,
  "thumb-down": 984337,
  "thumb-down-outline": 984338,
  "thumb-up": 984339,
  "thumb-up-outline": 984340,
  "thumbs-up-down": 984341,
  "ticket": 984342,
  "ticket-account": 984343,
  "ticket-confirmation": 984344,
  "ticket-confirmation-outline": 988074,
  "ticket-outline": 985363,
  "ticket-percent": 984868,
  "ticket-percent-outline": 988203,
  "tie": 984345,
  "tilde": 984869,
  "timelapse": 984346,
  "timeline": 986065,
  "timeline-alert": 987029,
  "timeline-alert-outline": 987032,
  "timeline-clock": 987643,
  "timeline-clock-outline": 987644,
  "timeline-help": 987033,
  "timeline-help-outline": 987034,
  "timeline-outline": 986066,
  "timeline-plus": 987030,
  "timeline-plus-outline": 987031,
  "timeline-text": 986067,
  "timeline-text-outline": 986068,
  "timer": 988075,
  "timer-10": 984348,
  "timer-3": 984349,
  "timer-off": 988076,
  "timer-off-outline": 984350,
  "timer-outline": 984347,
  "timer-sand": 984351,
  "timer-sand-empty": 984749,
  "timer-sand-full": 984972,
  "timetable": 984352,
  "toaster": 987235,
  "toaster-off": 987575,
  "toaster-oven": 986323,
  "toggle-switch": 984353,
  "toggle-switch-off": 984354,
  "toggle-switch-off-outline": 985625,
  "toggle-switch-outline": 985626,
  "toilet": 985515,
  "toolbox": 985516,
  "toolbox-outline": 985517,
  "tools": 987236,
  "tooltip": 984355,
  "tooltip-account": 983052,
  "tooltip-edit": 984356,
  "tooltip-edit-outline": 987845,
  "tooltip-image": 984357,
  "tooltip-image-outline": 986069,
  "tooltip-outline": 984358,
  "tooltip-plus": 986070,
  "tooltip-plus-outline": 984359,
  "tooltip-text": 984360,
  "tooltip-text-outline": 986071,
  "tooth": 985283,
  "tooth-outline": 984361,
  "toothbrush": 987433,
  "toothbrush-electric": 987436,
  "toothbrush-paste": 987434,
  "tortoise": 986427,
  "toslink": 987832,
  "tournament": 985518,
  "tow-truck": 985148,
  "tower-beach": 984705,
  "tower-fire": 984706,
  "toy-brick": 987784,
  "toy-brick-marker": 987785,
  "toy-brick-marker-outline": 987786,
  "toy-brick-minus": 987787,
  "toy-brick-minus-outline": 987788,
  "toy-brick-outline": 987789,
  "toy-brick-plus": 987790,
  "toy-brick-plus-outline": 987791,
  "toy-brick-remove": 987792,
  "toy-brick-remove-outline": 987793,
  "toy-brick-search": 987794,
  "toy-brick-search-outline": 987795,
  "track-light": 985364,
  "trackpad": 985080,
  "trackpad-lock": 985395,
  "tractor": 985234,
  "tractor-variant": 988356,
  "trademark": 985720,
  "traffic-cone": 988028,
  "traffic-light": 984363,
  "train": 984364,
  "train-car": 986072,
  "train-variant": 985284,
  "tram": 984365,
  "tram-side": 987111,
  "transcribe": 984366,
  "transcribe-close": 984367,
  "transfer": 987237,
  "transfer-down": 986529,
  "transfer-left": 986530,
  "transfer-right": 984368,
  "transfer-up": 986531,
  "transit-connection": 986428,
  "transit-connection-variant": 986429,
  "transit-detour": 987019,
  "transit-transfer": 984750,
  "transition": 985365,
  "transition-masked": 985366,
  "translate": 984522,
  "translate-off": 986630,
  "transmission-tower": 986430,
  "trash-can": 985721,
  "trash-can-outline": 985722,
  "tray": 987796,
  "tray-alert": 987797,
  "tray-full": 987798,
  "tray-minus": 987799,
  "tray-plus": 987800,
  "tray-remove": 987801,
  "treasure-chest": 984870,
  "tree": 984369,
  "tree-outline": 986729,
  "trello": 984370,
  "trending-down": 984371,
  "trending-neutral": 984372,
  "trending-up": 984373,
  "triangle": 984374,
  "triangle-outline": 984375,
  "triangle-wave": 988284,
  "triforce": 986073,
  "trophy": 984376,
  "trophy-award": 984377,
  "trophy-broken": 986532,
  "trophy-outline": 984378,
  "trophy-variant": 984379,
  "trophy-variant-outline": 984380,
  "truck": 984381,
  "truck-check": 986324,
  "truck-check-outline": 987802,
  "truck-delivery": 984382,
  "truck-delivery-outline": 987803,
  "truck-fast": 984968,
  "truck-fast-outline": 987804,
  "truck-outline": 987805,
  "truck-trailer": 984871,
  "trumpet": 987286,
  "tshirt-crew": 985723,
  "tshirt-crew-outline": 984383,
  "tshirt-v": 985724,
  "tshirt-v-outline": 984384,
  "tumble-dryer": 985367,
  "tumble-dryer-alert": 987578,
  "tumble-dryer-off": 987579,
  "tune": 984622,
  "tune-vertical": 984682,
  "turnstile": 986325,
  "turnstile-outline": 986326,
  "turtle": 986327,
  "twitch": 984387,
  "twitter": 984388,
  "twitter-retweet": 984391,
  "two-factor-authentication": 985519,
  "typewriter": 986925,
  "ubisoft": 986074,
  "ubuntu": 984392,
  "ufo": 987332,
  "ufo-outline": 987333,
  "ultra-high-definition": 985081,
  "umbraco": 984393,
  "umbrella": 984394,
  "umbrella-closed": 985520,
  "umbrella-closed-outline": 988130,
  "umbrella-closed-variant": 988129,
  "umbrella-outline": 984395,
  "undo": 984396,
  "undo-variant": 984397,
  "unfold-less-horizontal": 984398,
  "unfold-less-vertical": 984928,
  "unfold-more-horizontal": 984399,
  "unfold-more-vertical": 984929,
  "ungroup": 984400,
  "unicode": 986832,
  "unity": 984751,
  "unreal": 985521,
  "untappd": 984401,
  "update": 984752,
  "upload": 984402,
  "upload-lock": 988019,
  "upload-lock-outline": 988020,
  "upload-multiple": 985149,
  "upload-network": 984822,
  "upload-network-outline": 986328,
  "upload-off": 987334,
  "upload-off-outline": 987335,
  "upload-outline": 986631,
  "usb": 984403,
  "usb-flash-drive": 987806,
  "usb-flash-drive-outline": 987807,
  "usb-port": 987632,
  "valve": 987238,
  "valve-closed": 987239,
  "valve-open": 987240,
  "van-passenger": 985082,
  "van-utility": 985083,
  "vanish": 985084,
  "vanity-light": 987617,
  "variable": 985831,
  "variable-box": 987409,
  "vector-arrange-above": 984404,
  "vector-arrange-below": 984405,
  "vector-bezier": 985832,
  "vector-circle": 984406,
  "vector-circle-variant": 984407,
  "vector-combine": 984408,
  "vector-curve": 984409,
  "vector-difference": 984410,
  "vector-difference-ab": 984411,
  "vector-difference-ba": 984412,
  "vector-ellipse": 985235,
  "vector-intersection": 984413,
  "vector-line": 984414,
  "vector-link": 987112,
  "vector-point": 984415,
  "vector-polygon": 984416,
  "vector-polyline": 984417,
  "vector-polyline-edit": 987685,
  "vector-polyline-minus": 987686,
  "vector-polyline-plus": 987687,
  "vector-polyline-remove": 987688,
  "vector-radius": 984906,
  "vector-rectangle": 984518,
  "vector-selection": 984418,
  "vector-square": 983041,
  "vector-triangle": 984419,
  "vector-union": 984420,
  "vhs": 985627,
  "vibrate": 984422,
  "vibrate-off": 986329,
  "video": 984423,
  "video-3d": 985085,
  "video-3d-off": 988121,
  "video-3d-variant": 986833,
  "video-4k-box": 985150,
  "video-account": 985369,
  "video-box": 983293,
  "video-box-off": 983294,
  "video-check": 987241,
  "video-check-outline": 987242,
  "video-image": 985370,
  "video-input-antenna": 985151,
  "video-input-component": 985152,
  "video-input-hdmi": 985153,
  "video-input-scart": 987020,
  "video-input-svideo": 985154,
  "video-minus": 985522,
  "video-minus-outline": 983738,
  "video-off": 984424,
  "video-off-outline": 986075,
  "video-outline": 986076,
  "video-plus": 985523,
  "video-plus-outline": 983507,
  "video-stabilization": 985371,
  "video-switch": 984425,
  "video-switch-outline": 984976,
  "video-vintage": 985628,
  "video-wireless": 986834,
  "video-wireless-outline": 986835,
  "view-agenda": 984426,
  "view-agenda-outline": 987608,
  "view-array": 984427,
  "view-array-outline": 988293,
  "view-carousel": 984428,
  "view-carousel-outline": 988294,
  "view-column": 984429,
  "view-column-outline": 988295,
  "view-comfy": 986730,
  "view-comfy-outline": 988296,
  "view-compact": 986731,
  "view-compact-outline": 986732,
  "view-dashboard": 984430,
  "view-dashboard-outline": 985629,
  "view-dashboard-variant": 985155,
  "view-dashboard-variant-outline": 988297,
  "view-day": 984431,
  "view-day-outline": 988298,
  "view-grid": 984432,
  "view-grid-outline": 987609,
  "view-grid-plus": 987021,
  "view-grid-plus-outline": 987610,
  "view-headline": 984433,
  "view-list": 984434,
  "view-list-outline": 988299,
  "view-module": 984435,
  "view-module-outline": 988300,
  "view-parallel": 984872,
  "view-parallel-outline": 988301,
  "view-quilt": 984436,
  "view-quilt-outline": 988302,
  "view-sequential": 984873,
  "view-sequential-outline": 988303,
  "view-split-horizontal": 986059,
  "view-split-vertical": 986060,
  "view-stream": 984437,
  "view-stream-outline": 988304,
  "view-week": 984438,
  "view-week-outline": 988305,
  "vimeo": 984439,
  "violin": 984591,
  "virtual-reality": 985236,
  "virus": 988086,
  "virus-outline": 988087,
  "vk": 984441,
  "vlc": 984444,
  "voice-off": 986836,
  "voicemail": 984445,
  "volleyball": 985524,
  "volume-high": 984446,
  "volume-low": 984447,
  "volume-medium": 984448,
  "volume-minus": 984926,
  "volume-mute": 984927,
  "volume-off": 984449,
  "volume-plus": 984925,
  "volume-source": 987424,
  "volume-variant-off": 986632,
  "volume-vibrate": 987425,
  "vote": 985631,
  "vote-outline": 985632,
  "vpn": 984450,
  "vuejs": 985156,
  "vuetify": 986733,
  "walk": 984451,
  "wall": 985086,
  "wall-sconce": 985372,
  "wall-sconce-flat": 985373,
  "wall-sconce-flat-variant": 984092,
  "wall-sconce-round": 984904,
  "wall-sconce-round-variant": 985374,
  "wallet": 984452,
  "wallet-giftcard": 984453,
  "wallet-membership": 984454,
  "wallet-outline": 986077,
  "wallet-plus": 987022,
  "wallet-plus-outline": 987023,
  "wallet-travel": 984455,
  "wallpaper": 986633,
  "wan": 984456,
  "wardrobe": 987024,
  "wardrobe-outline": 987025,
  "warehouse": 987009,
  "washing-machine": 984874,
  "washing-machine-alert": 987580,
  "washing-machine-off": 987581,
  "watch": 984457,
  "watch-export": 984458,
  "watch-export-variant": 985237,
  "watch-import": 984459,
  "watch-import-variant": 985238,
  "watch-variant": 985239,
  "watch-vibrate": 984753,
  "watch-vibrate-off": 986330,
  "water": 984460,
  "water-boiler": 987026,
  "water-boiler-alert": 987571,
  "water-boiler-off": 987572,
  "water-off": 984461,
  "water-outline": 986634,
  "water-percent": 984462,
  "water-polo": 987808,
  "water-pump": 984463,
  "water-pump-off": 987027,
  "water-well": 987243,
  "water-well-outline": 987244,
  "watering-can": 988289,
  "watering-can-outline": 988290,
  "watermark": 984594,
  "wave": 986926,
  "waveform": 988285,
  "waves": 984973,
  "waze": 986078,
  "weather-cloudy": 984464,
  "weather-cloudy-alert": 986927,
  "weather-cloudy-arrow-right": 986734,
  "weather-fog": 984465,
  "weather-hail": 984466,
  "weather-hazy": 986928,
  "weather-hurricane": 985240,
  "weather-lightning": 984467,
  "weather-lightning-rainy": 984702,
  "weather-night": 984468,
  "weather-night-partly-cloudy": 986929,
  "weather-partly-cloudy": 984469,
  "weather-partly-lightning": 986930,
  "weather-partly-rainy": 986931,
  "weather-partly-snowy": 986932,
  "weather-partly-snowy-rainy": 986933,
  "weather-pouring": 984470,
  "weather-rainy": 984471,
  "weather-snowy": 984472,
  "weather-snowy-heavy": 986934,
  "weather-snowy-rainy": 984703,
  "weather-sunny": 984473,
  "weather-sunny-alert": 986935,
  "weather-sunset": 984474,
  "weather-sunset-down": 984475,
  "weather-sunset-up": 984476,
  "weather-tornado": 986936,
  "weather-windy": 984477,
  "weather-windy-variant": 984478,
  "web": 984479,
  "web-box": 987028,
  "web-clock": 987722,
  "webcam": 984480,
  "webhook": 984623,
  "webpack": 984875,
  "webrtc": 987720,
  "wechat": 984593,
  "weight": 984481,
  "weight-gram": 986431,
  "weight-kilogram": 984482,
  "weight-lifter": 987485,
  "weight-pound": 985525,
  "whatsapp": 984483,
  "wheelchair-accessibility": 984484,
  "whistle": 985526,
  "whistle-outline": 987836,
  "white-balance-auto": 984485,
  "white-balance-incandescent": 984486,
  "white-balance-iridescent": 984487,
  "white-balance-sunny": 984488,
  "widgets": 984876,
  "widgets-outline": 987989,
  "wifi": 984489,
  "wifi-off": 984490,
  "wifi-star": 986635,
  "wifi-strength-1": 985375,
  "wifi-strength-1-alert": 985376,
  "wifi-strength-1-lock": 985377,
  "wifi-strength-2": 985378,
  "wifi-strength-2-alert": 985379,
  "wifi-strength-2-lock": 985380,
  "wifi-strength-3": 985381,
  "wifi-strength-3-alert": 985382,
  "wifi-strength-3-lock": 985383,
  "wifi-strength-4": 985384,
  "wifi-strength-4-alert": 985385,
  "wifi-strength-4-lock": 985386,
  "wifi-strength-alert-outline": 985387,
  "wifi-strength-lock-outline": 985388,
  "wifi-strength-off": 985389,
  "wifi-strength-off-outline": 985390,
  "wifi-strength-outline": 985391,
  "wikipedia": 984492,
  "wind-turbine": 986533,
  "window-close": 984493,
  "window-closed": 984494,
  "window-closed-variant": 987611,
  "window-maximize": 984495,
  "window-minimize": 984496,
  "window-open": 984497,
  "window-open-variant": 987612,
  "window-restore": 984498,
  "window-shutter": 987420,
  "window-shutter-alert": 987421,
  "window-shutter-open": 987422,
  "wiper": 985833,
  "wiper-wash": 986534,
  "wizard-hat": 988279,
  "wordpress": 984500,
  "wrap": 984502,
  "wrap-disabled": 986079,
  "wrench": 984503,
  "wrench-outline": 986080,
  "xamarin": 985157,
  "xamarin-outline": 985158,
  "xing": 984510,
  "xml": 984512,
  "xmpp": 985087,
  "y-combinator": 984612,
  "yahoo": 985935,
  "yeast": 984513,
  "yin-yang": 984704,
  "yoga": 987516,
  "youtube": 984515,
  "youtube-gaming": 985160,
  "youtube-studio": 985159,
  "youtube-subscription": 986432,
  "youtube-tv": 984136,
  "z-wave": 985834,
  "zend": 985835,
  "zigbee": 986433,
  "zip-box": 984516,
  "zip-box-outline": 987130,
  "zip-disk": 985635,
  "zodiac-aquarius": 985725,
  "zodiac-aries": 985726,
  "zodiac-cancer": 985727,
  "zodiac-capricorn": 985728,
  "zodiac-gemini": 985729,
  "zodiac-leo": 985730,
  "zodiac-libra": 985731,
  "zodiac-pisces": 985732,
  "zodiac-sagittarius": 985733,
  "zodiac-scorpio": 985734,
  "zodiac-taurus": 985735,
  "zodiac-virgo": 985736,
  "blank": 63116
};
},10241,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Ionicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Ionicons.default, 'Ionicons', 'Ionicons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10244,[14305,10130,10247]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "add": 61696,
  "add-circle": 61697,
  "add-circle-outline": 61698,
  "add-circle-sharp": 61699,
  "add-outline": 61700,
  "add-sharp": 61701,
  "airplane": 61702,
  "airplane-outline": 61703,
  "airplane-sharp": 61704,
  "alarm": 61705,
  "alarm-outline": 61706,
  "alarm-sharp": 61707,
  "albums": 61708,
  "albums-outline": 61709,
  "albums-sharp": 61710,
  "alert": 61711,
  "alert-circle": 61712,
  "alert-circle-outline": 61713,
  "alert-circle-sharp": 61714,
  "alert-outline": 61715,
  "alert-sharp": 61716,
  "american-football": 61717,
  "american-football-outline": 61718,
  "american-football-sharp": 61719,
  "analytics": 61720,
  "analytics-outline": 61721,
  "analytics-sharp": 61722,
  "aperture": 61723,
  "aperture-outline": 61724,
  "aperture-sharp": 61725,
  "apps": 61726,
  "apps-outline": 61727,
  "apps-sharp": 61728,
  "archive": 61729,
  "archive-outline": 61730,
  "archive-sharp": 61731,
  "arrow-back": 61732,
  "arrow-back-circle": 61733,
  "arrow-back-circle-outline": 61734,
  "arrow-back-circle-sharp": 61735,
  "arrow-back-outline": 61736,
  "arrow-back-sharp": 61737,
  "arrow-down": 61738,
  "arrow-down-circle": 61739,
  "arrow-down-circle-outline": 61740,
  "arrow-down-circle-sharp": 61741,
  "arrow-down-outline": 61742,
  "arrow-down-sharp": 61743,
  "arrow-forward": 61744,
  "arrow-forward-circle": 61745,
  "arrow-forward-circle-outline": 61746,
  "arrow-forward-circle-sharp": 61747,
  "arrow-forward-outline": 61748,
  "arrow-forward-sharp": 61749,
  "arrow-redo": 61750,
  "arrow-redo-circle": 61751,
  "arrow-redo-circle-outline": 61752,
  "arrow-redo-circle-sharp": 61753,
  "arrow-redo-outline": 61754,
  "arrow-redo-sharp": 61755,
  "arrow-undo": 61756,
  "arrow-undo-circle": 61757,
  "arrow-undo-circle-outline": 61758,
  "arrow-undo-circle-sharp": 61759,
  "arrow-undo-outline": 61760,
  "arrow-undo-sharp": 61761,
  "arrow-up": 61762,
  "arrow-up-circle": 61763,
  "arrow-up-circle-outline": 61764,
  "arrow-up-circle-sharp": 61765,
  "arrow-up-outline": 61766,
  "arrow-up-sharp": 61767,
  "at": 61768,
  "at-circle": 61769,
  "at-circle-outline": 61770,
  "at-circle-sharp": 61771,
  "at-outline": 61772,
  "at-sharp": 61773,
  "attach": 61774,
  "attach-outline": 61775,
  "attach-sharp": 61776,
  "backspace": 61777,
  "backspace-outline": 61778,
  "backspace-sharp": 61779,
  "bandage": 61780,
  "bandage-outline": 61781,
  "bandage-sharp": 61782,
  "bar-chart": 61783,
  "bar-chart-outline": 61784,
  "bar-chart-sharp": 61785,
  "barbell": 61786,
  "barbell-outline": 61787,
  "barbell-sharp": 61788,
  "barcode": 61789,
  "barcode-outline": 61790,
  "barcode-sharp": 61791,
  "baseball": 61792,
  "baseball-outline": 61793,
  "baseball-sharp": 61794,
  "basket": 61795,
  "basket-outline": 61796,
  "basket-sharp": 61797,
  "basketball": 61798,
  "basketball-outline": 61799,
  "basketball-sharp": 61800,
  "battery-charging": 61801,
  "battery-charging-outline": 61802,
  "battery-charging-sharp": 61803,
  "battery-dead": 61804,
  "battery-dead-outline": 61805,
  "battery-dead-sharp": 61806,
  "battery-full": 61807,
  "battery-full-outline": 61808,
  "battery-full-sharp": 61809,
  "battery-half": 61810,
  "battery-half-outline": 61811,
  "battery-half-sharp": 61812,
  "beaker": 61813,
  "beaker-outline": 61814,
  "beaker-sharp": 61815,
  "bed": 61816,
  "bed-outline": 61817,
  "bed-sharp": 61818,
  "beer": 61819,
  "beer-outline": 61820,
  "beer-sharp": 61821,
  "bicycle": 61822,
  "bicycle-outline": 61823,
  "bicycle-sharp": 61824,
  "bluetooth": 61825,
  "bluetooth-outline": 61826,
  "bluetooth-sharp": 61827,
  "boat": 61828,
  "boat-outline": 61829,
  "boat-sharp": 61830,
  "body": 61831,
  "body-outline": 61832,
  "body-sharp": 61833,
  "bonfire": 61834,
  "bonfire-outline": 61835,
  "bonfire-sharp": 61836,
  "book": 61837,
  "book-outline": 61838,
  "book-sharp": 61839,
  "bookmark": 61840,
  "bookmark-outline": 61841,
  "bookmark-sharp": 61842,
  "bookmarks": 61843,
  "bookmarks-outline": 61844,
  "bookmarks-sharp": 61845,
  "briefcase": 61846,
  "briefcase-outline": 61847,
  "briefcase-sharp": 61848,
  "browsers": 61849,
  "browsers-outline": 61850,
  "browsers-sharp": 61851,
  "brush": 61852,
  "brush-outline": 61853,
  "brush-sharp": 61854,
  "bug": 61855,
  "bug-outline": 61856,
  "bug-sharp": 61857,
  "build": 61858,
  "build-outline": 61859,
  "build-sharp": 61860,
  "bulb": 61861,
  "bulb-outline": 61862,
  "bulb-sharp": 61863,
  "bus": 61864,
  "bus-outline": 61865,
  "bus-sharp": 61866,
  "business": 61867,
  "business-outline": 61868,
  "business-sharp": 61869,
  "cafe": 61870,
  "cafe-outline": 61871,
  "cafe-sharp": 61872,
  "calculator": 61873,
  "calculator-outline": 61874,
  "calculator-sharp": 61875,
  "calendar": 61876,
  "calendar-outline": 61877,
  "calendar-sharp": 61878,
  "call": 61879,
  "call-outline": 61880,
  "call-sharp": 61881,
  "camera": 61882,
  "camera-outline": 61883,
  "camera-reverse": 61884,
  "camera-reverse-outline": 61885,
  "camera-reverse-sharp": 61886,
  "camera-sharp": 61887,
  "car": 61888,
  "car-outline": 61889,
  "car-sharp": 61890,
  "car-sport": 61891,
  "car-sport-outline": 61892,
  "car-sport-sharp": 61893,
  "card": 61894,
  "card-outline": 61895,
  "card-sharp": 61896,
  "caret-back": 61897,
  "caret-back-circle": 61898,
  "caret-back-circle-outline": 61899,
  "caret-back-circle-sharp": 61900,
  "caret-back-outline": 61901,
  "caret-back-sharp": 61902,
  "caret-down": 61903,
  "caret-down-circle": 61904,
  "caret-down-circle-outline": 61905,
  "caret-down-circle-sharp": 61906,
  "caret-down-outline": 61907,
  "caret-down-sharp": 61908,
  "caret-forward": 61909,
  "caret-forward-circle": 61910,
  "caret-forward-circle-outline": 61911,
  "caret-forward-circle-sharp": 61912,
  "caret-forward-outline": 61913,
  "caret-forward-sharp": 61914,
  "caret-up": 61915,
  "caret-up-circle": 61916,
  "caret-up-circle-outline": 61917,
  "caret-up-circle-sharp": 61918,
  "caret-up-outline": 61919,
  "caret-up-sharp": 61920,
  "cart": 61921,
  "cart-outline": 61922,
  "cart-sharp": 61923,
  "cash": 61924,
  "cash-outline": 61925,
  "cash-sharp": 61926,
  "cellular": 61927,
  "cellular-outline": 61928,
  "cellular-sharp": 61929,
  "chatbox": 61930,
  "chatbox-ellipses": 61931,
  "chatbox-ellipses-outline": 61932,
  "chatbox-ellipses-sharp": 61933,
  "chatbox-outline": 61934,
  "chatbox-sharp": 61935,
  "chatbubble": 61936,
  "chatbubble-ellipses": 61937,
  "chatbubble-ellipses-outline": 61938,
  "chatbubble-ellipses-sharp": 61939,
  "chatbubble-outline": 61940,
  "chatbubble-sharp": 61941,
  "chatbubbles": 61942,
  "chatbubbles-outline": 61943,
  "chatbubbles-sharp": 61944,
  "checkbox": 61945,
  "checkbox-outline": 61946,
  "checkbox-sharp": 61947,
  "checkmark": 61948,
  "checkmark-circle": 61949,
  "checkmark-circle-outline": 61950,
  "checkmark-circle-sharp": 61951,
  "checkmark-done": 61952,
  "checkmark-done-circle": 61953,
  "checkmark-done-circle-outline": 61954,
  "checkmark-done-circle-sharp": 61955,
  "checkmark-done-outline": 61956,
  "checkmark-done-sharp": 61957,
  "checkmark-outline": 61958,
  "checkmark-sharp": 61959,
  "chevron-back": 61960,
  "chevron-back-circle": 61961,
  "chevron-back-circle-outline": 61962,
  "chevron-back-circle-sharp": 61963,
  "chevron-back-outline": 61964,
  "chevron-back-sharp": 61965,
  "chevron-down": 61966,
  "chevron-down-circle": 61967,
  "chevron-down-circle-outline": 61968,
  "chevron-down-circle-sharp": 61969,
  "chevron-down-outline": 61970,
  "chevron-down-sharp": 61971,
  "chevron-forward": 61972,
  "chevron-forward-circle": 61973,
  "chevron-forward-circle-outline": 61974,
  "chevron-forward-circle-sharp": 61975,
  "chevron-forward-outline": 61976,
  "chevron-forward-sharp": 61977,
  "chevron-up": 61978,
  "chevron-up-circle": 61979,
  "chevron-up-circle-outline": 61980,
  "chevron-up-circle-sharp": 61981,
  "chevron-up-outline": 61982,
  "chevron-up-sharp": 61983,
  "clipboard": 61984,
  "clipboard-outline": 61985,
  "clipboard-sharp": 61986,
  "close": 61987,
  "close-circle": 61988,
  "close-circle-outline": 61989,
  "close-circle-sharp": 61990,
  "close-outline": 61991,
  "close-sharp": 61992,
  "cloud": 61993,
  "cloud-circle": 61994,
  "cloud-circle-outline": 61995,
  "cloud-circle-sharp": 61996,
  "cloud-done": 61997,
  "cloud-done-outline": 61998,
  "cloud-done-sharp": 61999,
  "cloud-download": 62000,
  "cloud-download-outline": 62001,
  "cloud-download-sharp": 62002,
  "cloud-offline": 62003,
  "cloud-offline-outline": 62004,
  "cloud-offline-sharp": 62005,
  "cloud-outline": 62006,
  "cloud-sharp": 62007,
  "cloud-upload": 62008,
  "cloud-upload-outline": 62009,
  "cloud-upload-sharp": 62010,
  "cloudy": 62011,
  "cloudy-night": 62012,
  "cloudy-night-outline": 62013,
  "cloudy-night-sharp": 62014,
  "cloudy-outline": 62015,
  "cloudy-sharp": 62016,
  "code": 62017,
  "code-download": 62018,
  "code-download-outline": 62019,
  "code-download-sharp": 62020,
  "code-outline": 62021,
  "code-sharp": 62022,
  "code-slash": 62023,
  "code-slash-outline": 62024,
  "code-slash-sharp": 62025,
  "code-working": 62026,
  "code-working-outline": 62027,
  "code-working-sharp": 62028,
  "cog": 62029,
  "cog-outline": 62030,
  "cog-sharp": 62031,
  "color-fill": 62032,
  "color-fill-outline": 62033,
  "color-fill-sharp": 62034,
  "color-filter": 62035,
  "color-filter-outline": 62036,
  "color-filter-sharp": 62037,
  "color-palette": 62038,
  "color-palette-outline": 62039,
  "color-palette-sharp": 62040,
  "color-wand": 62041,
  "color-wand-outline": 62042,
  "color-wand-sharp": 62043,
  "compass": 62044,
  "compass-outline": 62045,
  "compass-sharp": 62046,
  "construct": 62047,
  "construct-outline": 62048,
  "construct-sharp": 62049,
  "contract": 62050,
  "contract-outline": 62051,
  "contract-sharp": 62052,
  "contrast": 62053,
  "contrast-outline": 62054,
  "contrast-sharp": 62055,
  "copy": 62056,
  "copy-outline": 62057,
  "copy-sharp": 62058,
  "create": 62059,
  "create-outline": 62060,
  "create-sharp": 62061,
  "crop": 62062,
  "crop-outline": 62063,
  "crop-sharp": 62064,
  "cube": 62065,
  "cube-outline": 62066,
  "cube-sharp": 62067,
  "cut": 62068,
  "cut-outline": 62069,
  "cut-sharp": 62070,
  "desktop": 62071,
  "desktop-outline": 62072,
  "desktop-sharp": 62073,
  "disc": 62074,
  "disc-outline": 62075,
  "disc-sharp": 62076,
  "document": 62077,
  "document-attach": 62078,
  "document-attach-outline": 62079,
  "document-attach-sharp": 62080,
  "document-outline": 62081,
  "document-sharp": 62082,
  "document-text": 62083,
  "document-text-outline": 62084,
  "document-text-sharp": 62085,
  "documents": 62086,
  "documents-outline": 62087,
  "documents-sharp": 62088,
  "download": 62089,
  "download-outline": 62090,
  "download-sharp": 62091,
  "duplicate": 62092,
  "duplicate-outline": 62093,
  "duplicate-sharp": 62094,
  "ear": 62095,
  "ear-outline": 62096,
  "ear-sharp": 62097,
  "earth": 62098,
  "earth-outline": 62099,
  "earth-sharp": 62100,
  "easel": 62101,
  "easel-outline": 62102,
  "easel-sharp": 62103,
  "egg": 62104,
  "egg-outline": 62105,
  "egg-sharp": 62106,
  "ellipse": 62107,
  "ellipse-outline": 62108,
  "ellipse-sharp": 62109,
  "ellipsis-horizontal": 62110,
  "ellipsis-horizontal-circle": 62111,
  "ellipsis-horizontal-circle-outline": 62112,
  "ellipsis-horizontal-circle-sharp": 62113,
  "ellipsis-horizontal-outline": 62114,
  "ellipsis-horizontal-sharp": 62115,
  "ellipsis-vertical": 62116,
  "ellipsis-vertical-circle": 62117,
  "ellipsis-vertical-circle-outline": 62118,
  "ellipsis-vertical-circle-sharp": 62119,
  "ellipsis-vertical-outline": 62120,
  "ellipsis-vertical-sharp": 62121,
  "enter": 62122,
  "enter-outline": 62123,
  "enter-sharp": 62124,
  "exit": 62125,
  "exit-outline": 62126,
  "exit-sharp": 62127,
  "expand": 62128,
  "expand-outline": 62129,
  "expand-sharp": 62130,
  "eye": 62131,
  "eye-off": 62132,
  "eye-off-outline": 62133,
  "eye-off-sharp": 62134,
  "eye-outline": 62135,
  "eye-sharp": 62136,
  "eyedrop": 62137,
  "eyedrop-outline": 62138,
  "eyedrop-sharp": 62139,
  "fast-food": 62140,
  "fast-food-outline": 62141,
  "fast-food-sharp": 62142,
  "female": 62143,
  "female-outline": 62144,
  "female-sharp": 62145,
  "file-tray": 62146,
  "file-tray-full": 62147,
  "file-tray-full-outline": 62148,
  "file-tray-full-sharp": 62149,
  "file-tray-outline": 62150,
  "file-tray-sharp": 62151,
  "file-tray-stacked": 62152,
  "file-tray-stacked-outline": 62153,
  "file-tray-stacked-sharp": 62154,
  "film": 62155,
  "film-outline": 62156,
  "film-sharp": 62157,
  "filter": 62158,
  "filter-outline": 62159,
  "filter-sharp": 62160,
  "finger-print": 62161,
  "finger-print-outline": 62162,
  "finger-print-sharp": 62163,
  "fitness": 62164,
  "fitness-outline": 62165,
  "fitness-sharp": 62166,
  "flag": 62167,
  "flag-outline": 62168,
  "flag-sharp": 62169,
  "flame": 62170,
  "flame-outline": 62171,
  "flame-sharp": 62172,
  "flash": 62173,
  "flash-off": 62174,
  "flash-off-outline": 62175,
  "flash-off-sharp": 62176,
  "flash-outline": 62177,
  "flash-sharp": 62178,
  "flashlight": 62179,
  "flashlight-outline": 62180,
  "flashlight-sharp": 62181,
  "flask": 62182,
  "flask-outline": 62183,
  "flask-sharp": 62184,
  "flower": 62185,
  "flower-outline": 62186,
  "flower-sharp": 62187,
  "folder": 62188,
  "folder-open": 62189,
  "folder-open-outline": 62190,
  "folder-open-sharp": 62191,
  "folder-outline": 62192,
  "folder-sharp": 62193,
  "football": 62194,
  "football-outline": 62195,
  "football-sharp": 62196,
  "funnel": 62197,
  "funnel-outline": 62198,
  "funnel-sharp": 62199,
  "game-controller": 62200,
  "game-controller-outline": 62201,
  "game-controller-sharp": 62202,
  "gift": 62203,
  "gift-outline": 62204,
  "gift-sharp": 62205,
  "git-branch": 62206,
  "git-branch-outline": 62207,
  "git-branch-sharp": 62208,
  "git-commit": 62209,
  "git-commit-outline": 62210,
  "git-commit-sharp": 62211,
  "git-compare": 62212,
  "git-compare-outline": 62213,
  "git-compare-sharp": 62214,
  "git-merge": 62215,
  "git-merge-outline": 62216,
  "git-merge-sharp": 62217,
  "git-network": 62218,
  "git-network-outline": 62219,
  "git-network-sharp": 62220,
  "git-pull-request": 62221,
  "git-pull-request-outline": 62222,
  "git-pull-request-sharp": 62223,
  "glasses": 62224,
  "glasses-outline": 62225,
  "glasses-sharp": 62226,
  "globe": 62227,
  "globe-outline": 62228,
  "globe-sharp": 62229,
  "golf": 62230,
  "golf-outline": 62231,
  "golf-sharp": 62232,
  "grid": 62233,
  "grid-outline": 62234,
  "grid-sharp": 62235,
  "hammer": 62236,
  "hammer-outline": 62237,
  "hammer-sharp": 62238,
  "hand-left": 62239,
  "hand-left-outline": 62240,
  "hand-left-sharp": 62241,
  "hand-right": 62242,
  "hand-right-outline": 62243,
  "hand-right-sharp": 62244,
  "happy": 62245,
  "happy-outline": 62246,
  "happy-sharp": 62247,
  "hardware-chip": 62248,
  "hardware-chip-outline": 62249,
  "hardware-chip-sharp": 62250,
  "headset": 62251,
  "headset-outline": 62252,
  "headset-sharp": 62253,
  "heart": 62254,
  "heart-circle": 62255,
  "heart-circle-outline": 62256,
  "heart-circle-sharp": 62257,
  "heart-dislike": 62258,
  "heart-dislike-circle": 62259,
  "heart-dislike-circle-outline": 62260,
  "heart-dislike-circle-sharp": 62261,
  "heart-dislike-outline": 62262,
  "heart-dislike-sharp": 62263,
  "heart-half": 62264,
  "heart-half-outline": 62265,
  "heart-half-sharp": 62266,
  "heart-outline": 62267,
  "heart-sharp": 62268,
  "help": 62269,
  "help-buoy": 62270,
  "help-buoy-outline": 62271,
  "help-buoy-sharp": 62272,
  "help-circle": 62273,
  "help-circle-outline": 62274,
  "help-circle-sharp": 62275,
  "help-outline": 62276,
  "help-sharp": 62277,
  "home": 62278,
  "home-outline": 62279,
  "home-sharp": 62280,
  "hourglass": 62281,
  "hourglass-outline": 62282,
  "hourglass-sharp": 62283,
  "ice-cream": 62284,
  "ice-cream-outline": 62285,
  "ice-cream-sharp": 62286,
  "image": 62287,
  "image-outline": 62288,
  "image-sharp": 62289,
  "images": 62290,
  "images-outline": 62291,
  "images-sharp": 62292,
  "infinite": 62293,
  "infinite-outline": 62294,
  "infinite-sharp": 62295,
  "information": 62296,
  "information-circle": 62297,
  "information-circle-outline": 62298,
  "information-circle-sharp": 62299,
  "information-outline": 62300,
  "information-sharp": 62301,
  "journal": 62302,
  "journal-outline": 62303,
  "journal-sharp": 62304,
  "key": 62305,
  "key-outline": 62306,
  "key-sharp": 62307,
  "keypad": 62308,
  "keypad-outline": 62309,
  "keypad-sharp": 62310,
  "language": 62311,
  "language-outline": 62312,
  "language-sharp": 62313,
  "laptop": 62314,
  "laptop-outline": 62315,
  "laptop-sharp": 62316,
  "layers": 62317,
  "layers-outline": 62318,
  "layers-sharp": 62319,
  "leaf": 62320,
  "leaf-outline": 62321,
  "leaf-sharp": 62322,
  "library": 62323,
  "library-outline": 62324,
  "library-sharp": 62325,
  "link": 62326,
  "link-outline": 62327,
  "link-sharp": 62328,
  "list": 62329,
  "list-circle": 62330,
  "list-circle-outline": 62331,
  "list-circle-sharp": 62332,
  "list-outline": 62333,
  "list-sharp": 62334,
  "locate": 62335,
  "locate-outline": 62336,
  "locate-sharp": 62337,
  "location": 62338,
  "location-outline": 62339,
  "location-sharp": 62340,
  "lock-closed": 62341,
  "lock-closed-outline": 62342,
  "lock-closed-sharp": 62343,
  "lock-open": 62344,
  "lock-open-outline": 62345,
  "lock-open-sharp": 62346,
  "log-in": 62347,
  "log-in-outline": 62348,
  "log-in-sharp": 62349,
  "log-out": 62350,
  "log-out-outline": 62351,
  "log-out-sharp": 62352,
  "logo-amazon": 62353,
  "logo-amplify": 62354,
  "logo-android": 62355,
  "logo-angular": 62356,
  "logo-apple": 62357,
  "logo-apple-appstore": 62358,
  "logo-bitbucket": 62359,
  "logo-bitcoin": 62360,
  "logo-buffer": 62361,
  "logo-capacitor": 62362,
  "logo-chrome": 62363,
  "logo-closed-captioning": 62364,
  "logo-codepen": 62365,
  "logo-css3": 62366,
  "logo-designernews": 62367,
  "logo-dribbble": 62368,
  "logo-dropbox": 62369,
  "logo-edge": 62370,
  "logo-electron": 62371,
  "logo-euro": 62372,
  "logo-facebook": 62373,
  "logo-firebase": 62374,
  "logo-firefox": 62375,
  "logo-flickr": 62376,
  "logo-foursquare": 62377,
  "logo-github": 62378,
  "logo-google": 62379,
  "logo-google-playstore": 62380,
  "logo-hackernews": 62381,
  "logo-html5": 62382,
  "logo-instagram": 62383,
  "logo-ionic": 62384,
  "logo-ionitron": 62385,
  "logo-javascript": 62386,
  "logo-laravel": 62387,
  "logo-linkedin": 62388,
  "logo-markdown": 62389,
  "logo-no-smoking": 62390,
  "logo-nodejs": 62391,
  "logo-npm": 62392,
  "logo-octocat": 62393,
  "logo-pinterest": 62394,
  "logo-playstation": 62395,
  "logo-pwa": 62396,
  "logo-python": 62397,
  "logo-react": 62398,
  "logo-reddit": 62399,
  "logo-rss": 62400,
  "logo-sass": 62401,
  "logo-skype": 62402,
  "logo-slack": 62403,
  "logo-snapchat": 62404,
  "logo-stackoverflow": 62405,
  "logo-steam": 62406,
  "logo-stencil": 62407,
  "logo-tumblr": 62408,
  "logo-tux": 62409,
  "logo-twitch": 62410,
  "logo-twitter": 62411,
  "logo-usd": 62412,
  "logo-vimeo": 62413,
  "logo-vk": 62414,
  "logo-vue": 62415,
  "logo-web-component": 62416,
  "logo-whatsapp": 62417,
  "logo-windows": 62418,
  "logo-wordpress": 62419,
  "logo-xbox": 62420,
  "logo-xing": 62421,
  "logo-yahoo": 62422,
  "logo-yen": 62423,
  "logo-youtube": 62424,
  "magnet": 62425,
  "magnet-outline": 62426,
  "magnet-sharp": 62427,
  "mail": 62428,
  "mail-open": 62429,
  "mail-open-outline": 62430,
  "mail-open-sharp": 62431,
  "mail-outline": 62432,
  "mail-sharp": 62433,
  "mail-unread": 62434,
  "mail-unread-outline": 62435,
  "mail-unread-sharp": 62436,
  "male": 62437,
  "male-female": 62438,
  "male-female-outline": 62439,
  "male-female-sharp": 62440,
  "male-outline": 62441,
  "male-sharp": 62442,
  "man": 62443,
  "man-outline": 62444,
  "man-sharp": 62445,
  "map": 62446,
  "map-outline": 62447,
  "map-sharp": 62448,
  "medal": 62449,
  "medal-outline": 62450,
  "medal-sharp": 62451,
  "medical": 62452,
  "medical-outline": 62453,
  "medical-sharp": 62454,
  "medkit": 62455,
  "medkit-outline": 62456,
  "medkit-sharp": 62457,
  "megaphone": 62458,
  "megaphone-outline": 62459,
  "megaphone-sharp": 62460,
  "menu": 62461,
  "menu-outline": 62462,
  "menu-sharp": 62463,
  "mic": 62464,
  "mic-circle": 62465,
  "mic-circle-outline": 62466,
  "mic-circle-sharp": 62467,
  "mic-off": 62468,
  "mic-off-circle": 62469,
  "mic-off-circle-outline": 62470,
  "mic-off-circle-sharp": 62471,
  "mic-off-outline": 62472,
  "mic-off-sharp": 62473,
  "mic-outline": 62474,
  "mic-sharp": 62475,
  "moon": 62476,
  "moon-outline": 62477,
  "moon-sharp": 62478,
  "move": 62479,
  "move-outline": 62480,
  "move-sharp": 62481,
  "musical-note": 62482,
  "musical-note-outline": 62483,
  "musical-note-sharp": 62484,
  "musical-notes": 62485,
  "musical-notes-outline": 62486,
  "musical-notes-sharp": 62487,
  "navigate": 62488,
  "navigate-circle": 62489,
  "navigate-circle-outline": 62490,
  "navigate-circle-sharp": 62491,
  "navigate-outline": 62492,
  "navigate-sharp": 62493,
  "newspaper": 62494,
  "newspaper-outline": 62495,
  "newspaper-sharp": 62496,
  "notifications": 62497,
  "notifications-circle": 62498,
  "notifications-circle-outline": 62499,
  "notifications-circle-sharp": 62500,
  "notifications-off": 62501,
  "notifications-off-circle": 62502,
  "notifications-off-circle-outline": 62503,
  "notifications-off-circle-sharp": 62504,
  "notifications-off-outline": 62505,
  "notifications-off-sharp": 62506,
  "notifications-outline": 62507,
  "notifications-sharp": 62508,
  "nuclear": 62509,
  "nuclear-outline": 62510,
  "nuclear-sharp": 62511,
  "nutrition": 62512,
  "nutrition-outline": 62513,
  "nutrition-sharp": 62514,
  "open": 62515,
  "open-outline": 62516,
  "open-sharp": 62517,
  "options": 62518,
  "options-outline": 62519,
  "options-sharp": 62520,
  "paper-plane": 62521,
  "paper-plane-outline": 62522,
  "paper-plane-sharp": 62523,
  "partly-sunny": 62524,
  "partly-sunny-outline": 62525,
  "partly-sunny-sharp": 62526,
  "pause": 62527,
  "pause-circle": 62528,
  "pause-circle-outline": 62529,
  "pause-circle-sharp": 62530,
  "pause-outline": 62531,
  "pause-sharp": 62532,
  "paw": 62533,
  "paw-outline": 62534,
  "paw-sharp": 62535,
  "pencil": 62536,
  "pencil-outline": 62537,
  "pencil-sharp": 62538,
  "people": 62539,
  "people-circle": 62540,
  "people-circle-outline": 62541,
  "people-circle-sharp": 62542,
  "people-outline": 62543,
  "people-sharp": 62544,
  "person": 62545,
  "person-add": 62546,
  "person-add-outline": 62547,
  "person-add-sharp": 62548,
  "person-circle": 62549,
  "person-circle-outline": 62550,
  "person-circle-sharp": 62551,
  "person-outline": 62552,
  "person-remove": 62553,
  "person-remove-outline": 62554,
  "person-remove-sharp": 62555,
  "person-sharp": 62556,
  "phone-landscape": 62557,
  "phone-landscape-outline": 62558,
  "phone-landscape-sharp": 62559,
  "phone-portrait": 62560,
  "phone-portrait-outline": 62561,
  "phone-portrait-sharp": 62562,
  "pie-chart": 62563,
  "pie-chart-outline": 62564,
  "pie-chart-sharp": 62565,
  "pin": 62566,
  "pin-outline": 62567,
  "pin-sharp": 62568,
  "pint": 62569,
  "pint-outline": 62570,
  "pint-sharp": 62571,
  "pizza": 62572,
  "pizza-outline": 62573,
  "pizza-sharp": 62574,
  "planet": 62575,
  "planet-outline": 62576,
  "planet-sharp": 62577,
  "play": 62578,
  "play-back": 62579,
  "play-back-circle": 62580,
  "play-back-circle-outline": 62581,
  "play-back-circle-sharp": 62582,
  "play-back-outline": 62583,
  "play-back-sharp": 62584,
  "play-circle": 62585,
  "play-circle-outline": 62586,
  "play-circle-sharp": 62587,
  "play-forward": 62588,
  "play-forward-circle": 62589,
  "play-forward-circle-outline": 62590,
  "play-forward-circle-sharp": 62591,
  "play-forward-outline": 62592,
  "play-forward-sharp": 62593,
  "play-outline": 62594,
  "play-sharp": 62595,
  "play-skip-back": 62596,
  "play-skip-back-circle": 62597,
  "play-skip-back-circle-outline": 62598,
  "play-skip-back-circle-sharp": 62599,
  "play-skip-back-outline": 62600,
  "play-skip-back-sharp": 62601,
  "play-skip-forward": 62602,
  "play-skip-forward-circle": 62603,
  "play-skip-forward-circle-outline": 62604,
  "play-skip-forward-circle-sharp": 62605,
  "play-skip-forward-outline": 62606,
  "play-skip-forward-sharp": 62607,
  "podium": 62608,
  "podium-outline": 62609,
  "podium-sharp": 62610,
  "power": 62611,
  "power-outline": 62612,
  "power-sharp": 62613,
  "pricetag": 62614,
  "pricetag-outline": 62615,
  "pricetag-sharp": 62616,
  "pricetags": 62617,
  "pricetags-outline": 62618,
  "pricetags-sharp": 62619,
  "print": 62620,
  "print-outline": 62621,
  "print-sharp": 62622,
  "pulse": 62623,
  "pulse-outline": 62624,
  "pulse-sharp": 62625,
  "push": 62626,
  "push-outline": 62627,
  "push-sharp": 62628,
  "qr-code": 62629,
  "qr-code-outline": 62630,
  "qr-code-sharp": 62631,
  "radio": 62632,
  "radio-button-off": 62633,
  "radio-button-off-outline": 62634,
  "radio-button-off-sharp": 62635,
  "radio-button-on": 62636,
  "radio-button-on-outline": 62637,
  "radio-button-on-sharp": 62638,
  "radio-outline": 62639,
  "radio-sharp": 62640,
  "rainy": 62641,
  "rainy-outline": 62642,
  "rainy-sharp": 62643,
  "reader": 62644,
  "reader-outline": 62645,
  "reader-sharp": 62646,
  "receipt": 62647,
  "receipt-outline": 62648,
  "receipt-sharp": 62649,
  "recording": 62650,
  "recording-outline": 62651,
  "recording-sharp": 62652,
  "refresh": 62653,
  "refresh-circle": 62654,
  "refresh-circle-outline": 62655,
  "refresh-circle-sharp": 62656,
  "refresh-outline": 62657,
  "refresh-sharp": 62658,
  "reload": 62659,
  "reload-circle": 62660,
  "reload-circle-outline": 62661,
  "reload-circle-sharp": 62662,
  "reload-outline": 62663,
  "reload-sharp": 62664,
  "remove": 62665,
  "remove-circle": 62666,
  "remove-circle-outline": 62667,
  "remove-circle-sharp": 62668,
  "remove-outline": 62669,
  "remove-sharp": 62670,
  "reorder-four": 62671,
  "reorder-four-outline": 62672,
  "reorder-four-sharp": 62673,
  "reorder-three": 62674,
  "reorder-three-outline": 62675,
  "reorder-three-sharp": 62676,
  "reorder-two": 62677,
  "reorder-two-outline": 62678,
  "reorder-two-sharp": 62679,
  "repeat": 62680,
  "repeat-outline": 62681,
  "repeat-sharp": 62682,
  "resize": 62683,
  "resize-outline": 62684,
  "resize-sharp": 62685,
  "restaurant": 62686,
  "restaurant-outline": 62687,
  "restaurant-sharp": 62688,
  "return-down-back": 62689,
  "return-down-back-outline": 62690,
  "return-down-back-sharp": 62691,
  "return-down-forward": 62692,
  "return-down-forward-outline": 62693,
  "return-down-forward-sharp": 62694,
  "return-up-back": 62695,
  "return-up-back-outline": 62696,
  "return-up-back-sharp": 62697,
  "return-up-forward": 62698,
  "return-up-forward-outline": 62699,
  "return-up-forward-sharp": 62700,
  "ribbon": 62701,
  "ribbon-outline": 62702,
  "ribbon-sharp": 62703,
  "rocket": 62704,
  "rocket-outline": 62705,
  "rocket-sharp": 62706,
  "rose": 62707,
  "rose-outline": 62708,
  "rose-sharp": 62709,
  "sad": 62710,
  "sad-outline": 62711,
  "sad-sharp": 62712,
  "save": 62713,
  "save-outline": 62714,
  "save-sharp": 62715,
  "scan": 62716,
  "scan-circle": 62717,
  "scan-circle-outline": 62718,
  "scan-circle-sharp": 62719,
  "scan-outline": 62720,
  "scan-sharp": 62721,
  "school": 62722,
  "school-outline": 62723,
  "school-sharp": 62724,
  "search": 62725,
  "search-circle": 62726,
  "search-circle-outline": 62727,
  "search-circle-sharp": 62728,
  "search-outline": 62729,
  "search-sharp": 62730,
  "send": 62731,
  "send-outline": 62732,
  "send-sharp": 62733,
  "server": 62734,
  "server-outline": 62735,
  "server-sharp": 62736,
  "settings": 62737,
  "settings-outline": 62738,
  "settings-sharp": 62739,
  "shapes": 62740,
  "shapes-outline": 62741,
  "shapes-sharp": 62742,
  "share": 62743,
  "share-outline": 62744,
  "share-sharp": 62745,
  "share-social": 62746,
  "share-social-outline": 62747,
  "share-social-sharp": 62748,
  "shield": 62749,
  "shield-checkmark": 62750,
  "shield-checkmark-outline": 62751,
  "shield-checkmark-sharp": 62752,
  "shield-outline": 62753,
  "shield-sharp": 62754,
  "shirt": 62755,
  "shirt-outline": 62756,
  "shirt-sharp": 62757,
  "shuffle": 62758,
  "shuffle-outline": 62759,
  "shuffle-sharp": 62760,
  "skull": 62761,
  "skull-outline": 62762,
  "skull-sharp": 62763,
  "snow": 62764,
  "snow-outline": 62765,
  "snow-sharp": 62766,
  "speedometer": 62767,
  "speedometer-outline": 62768,
  "speedometer-sharp": 62769,
  "square": 62770,
  "square-outline": 62771,
  "square-sharp": 62772,
  "star": 62773,
  "star-half": 62774,
  "star-half-outline": 62775,
  "star-half-sharp": 62776,
  "star-outline": 62777,
  "star-sharp": 62778,
  "stats-chart": 62779,
  "stats-chart-outline": 62780,
  "stats-chart-sharp": 62781,
  "stop": 62782,
  "stop-circle": 62783,
  "stop-circle-outline": 62784,
  "stop-circle-sharp": 62785,
  "stop-outline": 62786,
  "stop-sharp": 62787,
  "stopwatch": 62788,
  "stopwatch-outline": 62789,
  "stopwatch-sharp": 62790,
  "subway": 62791,
  "subway-outline": 62792,
  "subway-sharp": 62793,
  "sunny": 62794,
  "sunny-outline": 62795,
  "sunny-sharp": 62796,
  "swap-horizontal": 62797,
  "swap-horizontal-outline": 62798,
  "swap-horizontal-sharp": 62799,
  "swap-vertical": 62800,
  "swap-vertical-outline": 62801,
  "swap-vertical-sharp": 62802,
  "sync": 62803,
  "sync-circle": 62804,
  "sync-circle-outline": 62805,
  "sync-circle-sharp": 62806,
  "sync-outline": 62807,
  "sync-sharp": 62808,
  "tablet-landscape": 62809,
  "tablet-landscape-outline": 62810,
  "tablet-landscape-sharp": 62811,
  "tablet-portrait": 62812,
  "tablet-portrait-outline": 62813,
  "tablet-portrait-sharp": 62814,
  "tennisball": 62815,
  "tennisball-outline": 62816,
  "tennisball-sharp": 62817,
  "terminal": 62818,
  "terminal-outline": 62819,
  "terminal-sharp": 62820,
  "text": 62821,
  "text-outline": 62822,
  "text-sharp": 62823,
  "thermometer": 62824,
  "thermometer-outline": 62825,
  "thermometer-sharp": 62826,
  "thumbs-down": 62827,
  "thumbs-down-outline": 62828,
  "thumbs-down-sharp": 62829,
  "thumbs-up": 62830,
  "thumbs-up-outline": 62831,
  "thumbs-up-sharp": 62832,
  "thunderstorm": 62833,
  "thunderstorm-outline": 62834,
  "thunderstorm-sharp": 62835,
  "time": 62836,
  "time-outline": 62837,
  "time-sharp": 62838,
  "timer": 62839,
  "timer-outline": 62840,
  "timer-sharp": 62841,
  "today": 62842,
  "today-outline": 62843,
  "today-sharp": 62844,
  "toggle": 62845,
  "toggle-outline": 62846,
  "toggle-sharp": 62847,
  "trail-sign": 62848,
  "trail-sign-outline": 62849,
  "trail-sign-sharp": 62850,
  "train": 62851,
  "train-outline": 62852,
  "train-sharp": 62853,
  "transgender": 62854,
  "transgender-outline": 62855,
  "transgender-sharp": 62856,
  "trash": 62857,
  "trash-bin": 62858,
  "trash-bin-outline": 62859,
  "trash-bin-sharp": 62860,
  "trash-outline": 62861,
  "trash-sharp": 62862,
  "trending-down": 62863,
  "trending-down-outline": 62864,
  "trending-down-sharp": 62865,
  "trending-up": 62866,
  "trending-up-outline": 62867,
  "trending-up-sharp": 62868,
  "triangle": 62869,
  "triangle-outline": 62870,
  "triangle-sharp": 62871,
  "trophy": 62872,
  "trophy-outline": 62873,
  "trophy-sharp": 62874,
  "tv": 62875,
  "tv-outline": 62876,
  "tv-sharp": 62877,
  "umbrella": 62878,
  "umbrella-outline": 62879,
  "umbrella-sharp": 62880,
  "videocam": 62881,
  "videocam-outline": 62882,
  "videocam-sharp": 62883,
  "volume-high": 62884,
  "volume-high-outline": 62885,
  "volume-high-sharp": 62886,
  "volume-low": 62887,
  "volume-low-outline": 62888,
  "volume-low-sharp": 62889,
  "volume-medium": 62890,
  "volume-medium-outline": 62891,
  "volume-medium-sharp": 62892,
  "volume-mute": 62893,
  "volume-mute-outline": 62894,
  "volume-mute-sharp": 62895,
  "volume-off": 62896,
  "volume-off-outline": 62897,
  "volume-off-sharp": 62898,
  "walk": 62899,
  "walk-outline": 62900,
  "walk-sharp": 62901,
  "wallet": 62902,
  "wallet-outline": 62903,
  "wallet-sharp": 62904,
  "warning": 62905,
  "warning-outline": 62906,
  "warning-sharp": 62907,
  "watch": 62908,
  "watch-outline": 62909,
  "watch-sharp": 62910,
  "water": 62911,
  "water-outline": 62912,
  "water-sharp": 62913,
  "wifi": 62914,
  "wifi-outline": 62915,
  "wifi-sharp": 62916,
  "wine": 62917,
  "wine-outline": 62918,
  "wine-sharp": 62919,
  "woman": 62920,
  "woman-outline": 62921,
  "woman-sharp": 62922,
  "ios-add": 61696,
  "ios-add-circle": 61697,
  "ios-add-circle-outline": 61698,
  "ios-add-circle-sharp": 61699,
  "ios-add-outline": 61700,
  "ios-add-sharp": 61701,
  "ios-airplane": 61702,
  "ios-airplane-outline": 61703,
  "ios-airplane-sharp": 61704,
  "ios-alarm": 61705,
  "ios-alarm-outline": 61706,
  "ios-alarm-sharp": 61707,
  "ios-albums": 61708,
  "ios-albums-outline": 61709,
  "ios-albums-sharp": 61710,
  "ios-alert": 61711,
  "ios-alert-circle": 61712,
  "ios-alert-circle-outline": 61713,
  "ios-alert-circle-sharp": 61714,
  "ios-alert-outline": 61715,
  "ios-alert-sharp": 61716,
  "ios-american-football": 61717,
  "ios-american-football-outline": 61718,
  "ios-american-football-sharp": 61719,
  "ios-analytics": 61720,
  "ios-analytics-outline": 61721,
  "ios-analytics-sharp": 61722,
  "ios-aperture": 61723,
  "ios-aperture-outline": 61724,
  "ios-aperture-sharp": 61725,
  "ios-apps": 61726,
  "ios-apps-outline": 61727,
  "ios-apps-sharp": 61728,
  "ios-archive": 61729,
  "ios-archive-outline": 61730,
  "ios-archive-sharp": 61731,
  "ios-arrow-back": 61732,
  "ios-arrow-back-circle": 61733,
  "ios-arrow-back-circle-outline": 61734,
  "ios-arrow-back-circle-sharp": 61735,
  "ios-arrow-back-outline": 61736,
  "ios-arrow-back-sharp": 61737,
  "ios-arrow-down": 61738,
  "ios-arrow-down-circle": 61739,
  "ios-arrow-down-circle-outline": 61740,
  "ios-arrow-down-circle-sharp": 61741,
  "ios-arrow-down-outline": 61742,
  "ios-arrow-down-sharp": 61743,
  "ios-arrow-forward": 61744,
  "ios-arrow-forward-circle": 61745,
  "ios-arrow-forward-circle-outline": 61746,
  "ios-arrow-forward-circle-sharp": 61747,
  "ios-arrow-forward-outline": 61748,
  "ios-arrow-forward-sharp": 61749,
  "ios-arrow-redo": 61750,
  "ios-arrow-redo-circle": 61751,
  "ios-arrow-redo-circle-outline": 61752,
  "ios-arrow-redo-circle-sharp": 61753,
  "ios-arrow-redo-outline": 61754,
  "ios-arrow-redo-sharp": 61755,
  "ios-arrow-undo": 61756,
  "ios-arrow-undo-circle": 61757,
  "ios-arrow-undo-circle-outline": 61758,
  "ios-arrow-undo-circle-sharp": 61759,
  "ios-arrow-undo-outline": 61760,
  "ios-arrow-undo-sharp": 61761,
  "ios-arrow-up": 61762,
  "ios-arrow-up-circle": 61763,
  "ios-arrow-up-circle-outline": 61764,
  "ios-arrow-up-circle-sharp": 61765,
  "ios-arrow-up-outline": 61766,
  "ios-arrow-up-sharp": 61767,
  "ios-at": 61768,
  "ios-at-circle": 61769,
  "ios-at-circle-outline": 61770,
  "ios-at-circle-sharp": 61771,
  "ios-at-outline": 61772,
  "ios-at-sharp": 61773,
  "ios-attach": 61774,
  "ios-attach-outline": 61775,
  "ios-attach-sharp": 61776,
  "ios-backspace": 61777,
  "ios-backspace-outline": 61778,
  "ios-backspace-sharp": 61779,
  "ios-bandage": 61780,
  "ios-bandage-outline": 61781,
  "ios-bandage-sharp": 61782,
  "ios-bar-chart": 61783,
  "ios-bar-chart-outline": 61784,
  "ios-bar-chart-sharp": 61785,
  "ios-barbell": 61786,
  "ios-barbell-outline": 61787,
  "ios-barbell-sharp": 61788,
  "ios-barcode": 61789,
  "ios-barcode-outline": 61790,
  "ios-barcode-sharp": 61791,
  "ios-baseball": 61792,
  "ios-baseball-outline": 61793,
  "ios-baseball-sharp": 61794,
  "ios-basket": 61795,
  "ios-basket-outline": 61796,
  "ios-basket-sharp": 61797,
  "ios-basketball": 61798,
  "ios-basketball-outline": 61799,
  "ios-basketball-sharp": 61800,
  "ios-battery-charging": 61801,
  "ios-battery-charging-outline": 61802,
  "ios-battery-charging-sharp": 61803,
  "ios-battery-dead": 61804,
  "ios-battery-dead-outline": 61805,
  "ios-battery-dead-sharp": 61806,
  "ios-battery-full": 61807,
  "ios-battery-full-outline": 61808,
  "ios-battery-full-sharp": 61809,
  "ios-battery-half": 61810,
  "ios-battery-half-outline": 61811,
  "ios-battery-half-sharp": 61812,
  "ios-beaker": 61813,
  "ios-beaker-outline": 61814,
  "ios-beaker-sharp": 61815,
  "ios-bed": 61816,
  "ios-bed-outline": 61817,
  "ios-bed-sharp": 61818,
  "ios-beer": 61819,
  "ios-beer-outline": 61820,
  "ios-beer-sharp": 61821,
  "ios-bicycle": 61822,
  "ios-bicycle-outline": 61823,
  "ios-bicycle-sharp": 61824,
  "ios-bluetooth": 61825,
  "ios-bluetooth-outline": 61826,
  "ios-bluetooth-sharp": 61827,
  "ios-boat": 61828,
  "ios-boat-outline": 61829,
  "ios-boat-sharp": 61830,
  "ios-body": 61831,
  "ios-body-outline": 61832,
  "ios-body-sharp": 61833,
  "ios-bonfire": 61834,
  "ios-bonfire-outline": 61835,
  "ios-bonfire-sharp": 61836,
  "ios-book": 61837,
  "ios-book-outline": 61838,
  "ios-book-sharp": 61839,
  "ios-bookmark": 61840,
  "ios-bookmark-outline": 61841,
  "ios-bookmark-sharp": 61842,
  "ios-bookmarks": 61843,
  "ios-bookmarks-outline": 61844,
  "ios-bookmarks-sharp": 61845,
  "ios-briefcase": 61846,
  "ios-briefcase-outline": 61847,
  "ios-briefcase-sharp": 61848,
  "ios-browsers": 61849,
  "ios-browsers-outline": 61850,
  "ios-browsers-sharp": 61851,
  "ios-brush": 61852,
  "ios-brush-outline": 61853,
  "ios-brush-sharp": 61854,
  "ios-bug": 61855,
  "ios-bug-outline": 61856,
  "ios-bug-sharp": 61857,
  "ios-build": 61858,
  "ios-build-outline": 61859,
  "ios-build-sharp": 61860,
  "ios-bulb": 61861,
  "ios-bulb-outline": 61862,
  "ios-bulb-sharp": 61863,
  "ios-bus": 61864,
  "ios-bus-outline": 61865,
  "ios-bus-sharp": 61866,
  "ios-business": 61867,
  "ios-business-outline": 61868,
  "ios-business-sharp": 61869,
  "ios-cafe": 61870,
  "ios-cafe-outline": 61871,
  "ios-cafe-sharp": 61872,
  "ios-calculator": 61873,
  "ios-calculator-outline": 61874,
  "ios-calculator-sharp": 61875,
  "ios-calendar": 61876,
  "ios-calendar-outline": 61877,
  "ios-calendar-sharp": 61878,
  "ios-call": 61879,
  "ios-call-outline": 61880,
  "ios-call-sharp": 61881,
  "ios-camera": 61882,
  "ios-camera-outline": 61883,
  "ios-camera-reverse": 61884,
  "ios-camera-reverse-outline": 61885,
  "ios-camera-reverse-sharp": 61886,
  "ios-camera-sharp": 61887,
  "ios-car": 61888,
  "ios-car-outline": 61889,
  "ios-car-sharp": 61890,
  "ios-car-sport": 61891,
  "ios-car-sport-outline": 61892,
  "ios-car-sport-sharp": 61893,
  "ios-card": 61894,
  "ios-card-outline": 61895,
  "ios-card-sharp": 61896,
  "ios-caret-back": 61897,
  "ios-caret-back-circle": 61898,
  "ios-caret-back-circle-outline": 61899,
  "ios-caret-back-circle-sharp": 61900,
  "ios-caret-back-outline": 61901,
  "ios-caret-back-sharp": 61902,
  "ios-caret-down": 61903,
  "ios-caret-down-circle": 61904,
  "ios-caret-down-circle-outline": 61905,
  "ios-caret-down-circle-sharp": 61906,
  "ios-caret-down-outline": 61907,
  "ios-caret-down-sharp": 61908,
  "ios-caret-forward": 61909,
  "ios-caret-forward-circle": 61910,
  "ios-caret-forward-circle-outline": 61911,
  "ios-caret-forward-circle-sharp": 61912,
  "ios-caret-forward-outline": 61913,
  "ios-caret-forward-sharp": 61914,
  "ios-caret-up": 61915,
  "ios-caret-up-circle": 61916,
  "ios-caret-up-circle-outline": 61917,
  "ios-caret-up-circle-sharp": 61918,
  "ios-caret-up-outline": 61919,
  "ios-caret-up-sharp": 61920,
  "ios-cart": 61921,
  "ios-cart-outline": 61922,
  "ios-cart-sharp": 61923,
  "ios-cash": 61924,
  "ios-cash-outline": 61925,
  "ios-cash-sharp": 61926,
  "ios-cellular": 61927,
  "ios-cellular-outline": 61928,
  "ios-cellular-sharp": 61929,
  "ios-chatbox": 61930,
  "ios-chatbox-ellipses": 61931,
  "ios-chatbox-ellipses-outline": 61932,
  "ios-chatbox-ellipses-sharp": 61933,
  "ios-chatbox-outline": 61934,
  "ios-chatbox-sharp": 61935,
  "ios-chatbubble": 61936,
  "ios-chatbubble-ellipses": 61937,
  "ios-chatbubble-ellipses-outline": 61938,
  "ios-chatbubble-ellipses-sharp": 61939,
  "ios-chatbubble-outline": 61940,
  "ios-chatbubble-sharp": 61941,
  "ios-chatbubbles": 61942,
  "ios-chatbubbles-outline": 61943,
  "ios-chatbubbles-sharp": 61944,
  "ios-checkbox": 61945,
  "ios-checkbox-outline": 61946,
  "ios-checkbox-sharp": 61947,
  "ios-checkmark": 61948,
  "ios-checkmark-circle": 61949,
  "ios-checkmark-circle-outline": 61950,
  "ios-checkmark-circle-sharp": 61951,
  "ios-checkmark-done": 61952,
  "ios-checkmark-done-circle": 61953,
  "ios-checkmark-done-circle-outline": 61954,
  "ios-checkmark-done-circle-sharp": 61955,
  "ios-checkmark-done-outline": 61956,
  "ios-checkmark-done-sharp": 61957,
  "ios-checkmark-outline": 61958,
  "ios-checkmark-sharp": 61959,
  "ios-chevron-back": 61960,
  "ios-chevron-back-circle": 61961,
  "ios-chevron-back-circle-outline": 61962,
  "ios-chevron-back-circle-sharp": 61963,
  "ios-chevron-back-outline": 61964,
  "ios-chevron-back-sharp": 61965,
  "ios-chevron-down": 61966,
  "ios-chevron-down-circle": 61967,
  "ios-chevron-down-circle-outline": 61968,
  "ios-chevron-down-circle-sharp": 61969,
  "ios-chevron-down-outline": 61970,
  "ios-chevron-down-sharp": 61971,
  "ios-chevron-forward": 61972,
  "ios-chevron-forward-circle": 61973,
  "ios-chevron-forward-circle-outline": 61974,
  "ios-chevron-forward-circle-sharp": 61975,
  "ios-chevron-forward-outline": 61976,
  "ios-chevron-forward-sharp": 61977,
  "ios-chevron-up": 61978,
  "ios-chevron-up-circle": 61979,
  "ios-chevron-up-circle-outline": 61980,
  "ios-chevron-up-circle-sharp": 61981,
  "ios-chevron-up-outline": 61982,
  "ios-chevron-up-sharp": 61983,
  "ios-clipboard": 61984,
  "ios-clipboard-outline": 61985,
  "ios-clipboard-sharp": 61986,
  "ios-close": 61987,
  "ios-close-circle": 61988,
  "ios-close-circle-outline": 61989,
  "ios-close-circle-sharp": 61990,
  "ios-close-outline": 61991,
  "ios-close-sharp": 61992,
  "ios-cloud": 61993,
  "ios-cloud-circle": 61994,
  "ios-cloud-circle-outline": 61995,
  "ios-cloud-circle-sharp": 61996,
  "ios-cloud-done": 61997,
  "ios-cloud-done-outline": 61998,
  "ios-cloud-done-sharp": 61999,
  "ios-cloud-download": 62000,
  "ios-cloud-download-outline": 62001,
  "ios-cloud-download-sharp": 62002,
  "ios-cloud-offline": 62003,
  "ios-cloud-offline-outline": 62004,
  "ios-cloud-offline-sharp": 62005,
  "ios-cloud-outline": 62006,
  "ios-cloud-sharp": 62007,
  "ios-cloud-upload": 62008,
  "ios-cloud-upload-outline": 62009,
  "ios-cloud-upload-sharp": 62010,
  "ios-cloudy": 62011,
  "ios-cloudy-night": 62012,
  "ios-cloudy-night-outline": 62013,
  "ios-cloudy-night-sharp": 62014,
  "ios-cloudy-outline": 62015,
  "ios-cloudy-sharp": 62016,
  "ios-code": 62017,
  "ios-code-download": 62018,
  "ios-code-download-outline": 62019,
  "ios-code-download-sharp": 62020,
  "ios-code-outline": 62021,
  "ios-code-sharp": 62022,
  "ios-code-slash": 62023,
  "ios-code-slash-outline": 62024,
  "ios-code-slash-sharp": 62025,
  "ios-code-working": 62026,
  "ios-code-working-outline": 62027,
  "ios-code-working-sharp": 62028,
  "ios-cog": 62029,
  "ios-cog-outline": 62030,
  "ios-cog-sharp": 62031,
  "ios-color-fill": 62032,
  "ios-color-fill-outline": 62033,
  "ios-color-fill-sharp": 62034,
  "ios-color-filter": 62035,
  "ios-color-filter-outline": 62036,
  "ios-color-filter-sharp": 62037,
  "ios-color-palette": 62038,
  "ios-color-palette-outline": 62039,
  "ios-color-palette-sharp": 62040,
  "ios-color-wand": 62041,
  "ios-color-wand-outline": 62042,
  "ios-color-wand-sharp": 62043,
  "ios-compass": 62044,
  "ios-compass-outline": 62045,
  "ios-compass-sharp": 62046,
  "ios-construct": 62047,
  "ios-construct-outline": 62048,
  "ios-construct-sharp": 62049,
  "ios-contract": 62050,
  "ios-contract-outline": 62051,
  "ios-contract-sharp": 62052,
  "ios-contrast": 62053,
  "ios-contrast-outline": 62054,
  "ios-contrast-sharp": 62055,
  "ios-copy": 62056,
  "ios-copy-outline": 62057,
  "ios-copy-sharp": 62058,
  "ios-create": 62059,
  "ios-create-outline": 62060,
  "ios-create-sharp": 62061,
  "ios-crop": 62062,
  "ios-crop-outline": 62063,
  "ios-crop-sharp": 62064,
  "ios-cube": 62065,
  "ios-cube-outline": 62066,
  "ios-cube-sharp": 62067,
  "ios-cut": 62068,
  "ios-cut-outline": 62069,
  "ios-cut-sharp": 62070,
  "ios-desktop": 62071,
  "ios-desktop-outline": 62072,
  "ios-desktop-sharp": 62073,
  "ios-disc": 62074,
  "ios-disc-outline": 62075,
  "ios-disc-sharp": 62076,
  "ios-document": 62077,
  "ios-document-attach": 62078,
  "ios-document-attach-outline": 62079,
  "ios-document-attach-sharp": 62080,
  "ios-document-outline": 62081,
  "ios-document-sharp": 62082,
  "ios-document-text": 62083,
  "ios-document-text-outline": 62084,
  "ios-document-text-sharp": 62085,
  "ios-documents": 62086,
  "ios-documents-outline": 62087,
  "ios-documents-sharp": 62088,
  "ios-download": 62089,
  "ios-download-outline": 62090,
  "ios-download-sharp": 62091,
  "ios-duplicate": 62092,
  "ios-duplicate-outline": 62093,
  "ios-duplicate-sharp": 62094,
  "ios-ear": 62095,
  "ios-ear-outline": 62096,
  "ios-ear-sharp": 62097,
  "ios-earth": 62098,
  "ios-earth-outline": 62099,
  "ios-earth-sharp": 62100,
  "ios-easel": 62101,
  "ios-easel-outline": 62102,
  "ios-easel-sharp": 62103,
  "ios-egg": 62104,
  "ios-egg-outline": 62105,
  "ios-egg-sharp": 62106,
  "ios-ellipse": 62107,
  "ios-ellipse-outline": 62108,
  "ios-ellipse-sharp": 62109,
  "ios-ellipsis-horizontal": 62110,
  "ios-ellipsis-horizontal-circle": 62111,
  "ios-ellipsis-horizontal-circle-outline": 62112,
  "ios-ellipsis-horizontal-circle-sharp": 62113,
  "ios-ellipsis-horizontal-outline": 62114,
  "ios-ellipsis-horizontal-sharp": 62115,
  "ios-ellipsis-vertical": 62116,
  "ios-ellipsis-vertical-circle": 62117,
  "ios-ellipsis-vertical-circle-outline": 62118,
  "ios-ellipsis-vertical-circle-sharp": 62119,
  "ios-ellipsis-vertical-outline": 62120,
  "ios-ellipsis-vertical-sharp": 62121,
  "ios-enter": 62122,
  "ios-enter-outline": 62123,
  "ios-enter-sharp": 62124,
  "ios-exit": 62125,
  "ios-exit-outline": 62126,
  "ios-exit-sharp": 62127,
  "ios-expand": 62128,
  "ios-expand-outline": 62129,
  "ios-expand-sharp": 62130,
  "ios-eye": 62131,
  "ios-eye-off": 62132,
  "ios-eye-off-outline": 62133,
  "ios-eye-off-sharp": 62134,
  "ios-eye-outline": 62135,
  "ios-eye-sharp": 62136,
  "ios-eyedrop": 62137,
  "ios-eyedrop-outline": 62138,
  "ios-eyedrop-sharp": 62139,
  "ios-fast-food": 62140,
  "ios-fast-food-outline": 62141,
  "ios-fast-food-sharp": 62142,
  "ios-female": 62143,
  "ios-female-outline": 62144,
  "ios-female-sharp": 62145,
  "ios-file-tray": 62146,
  "ios-file-tray-full": 62147,
  "ios-file-tray-full-outline": 62148,
  "ios-file-tray-full-sharp": 62149,
  "ios-file-tray-outline": 62150,
  "ios-file-tray-sharp": 62151,
  "ios-file-tray-stacked": 62152,
  "ios-file-tray-stacked-outline": 62153,
  "ios-file-tray-stacked-sharp": 62154,
  "ios-film": 62155,
  "ios-film-outline": 62156,
  "ios-film-sharp": 62157,
  "ios-filter": 62158,
  "ios-filter-outline": 62159,
  "ios-filter-sharp": 62160,
  "ios-finger-print": 62161,
  "ios-finger-print-outline": 62162,
  "ios-finger-print-sharp": 62163,
  "ios-fitness": 62164,
  "ios-fitness-outline": 62165,
  "ios-fitness-sharp": 62166,
  "ios-flag": 62167,
  "ios-flag-outline": 62168,
  "ios-flag-sharp": 62169,
  "ios-flame": 62170,
  "ios-flame-outline": 62171,
  "ios-flame-sharp": 62172,
  "ios-flash": 62173,
  "ios-flash-off": 62174,
  "ios-flash-off-outline": 62175,
  "ios-flash-off-sharp": 62176,
  "ios-flash-outline": 62177,
  "ios-flash-sharp": 62178,
  "ios-flashlight": 62179,
  "ios-flashlight-outline": 62180,
  "ios-flashlight-sharp": 62181,
  "ios-flask": 62182,
  "ios-flask-outline": 62183,
  "ios-flask-sharp": 62184,
  "ios-flower": 62185,
  "ios-flower-outline": 62186,
  "ios-flower-sharp": 62187,
  "ios-folder": 62188,
  "ios-folder-open": 62189,
  "ios-folder-open-outline": 62190,
  "ios-folder-open-sharp": 62191,
  "ios-folder-outline": 62192,
  "ios-folder-sharp": 62193,
  "ios-football": 62194,
  "ios-football-outline": 62195,
  "ios-football-sharp": 62196,
  "ios-funnel": 62197,
  "ios-funnel-outline": 62198,
  "ios-funnel-sharp": 62199,
  "ios-game-controller": 62200,
  "ios-game-controller-outline": 62201,
  "ios-game-controller-sharp": 62202,
  "ios-gift": 62203,
  "ios-gift-outline": 62204,
  "ios-gift-sharp": 62205,
  "ios-git-branch": 62206,
  "ios-git-branch-outline": 62207,
  "ios-git-branch-sharp": 62208,
  "ios-git-commit": 62209,
  "ios-git-commit-outline": 62210,
  "ios-git-commit-sharp": 62211,
  "ios-git-compare": 62212,
  "ios-git-compare-outline": 62213,
  "ios-git-compare-sharp": 62214,
  "ios-git-merge": 62215,
  "ios-git-merge-outline": 62216,
  "ios-git-merge-sharp": 62217,
  "ios-git-network": 62218,
  "ios-git-network-outline": 62219,
  "ios-git-network-sharp": 62220,
  "ios-git-pull-request": 62221,
  "ios-git-pull-request-outline": 62222,
  "ios-git-pull-request-sharp": 62223,
  "ios-glasses": 62224,
  "ios-glasses-outline": 62225,
  "ios-glasses-sharp": 62226,
  "ios-globe": 62227,
  "ios-globe-outline": 62228,
  "ios-globe-sharp": 62229,
  "ios-golf": 62230,
  "ios-golf-outline": 62231,
  "ios-golf-sharp": 62232,
  "ios-grid": 62233,
  "ios-grid-outline": 62234,
  "ios-grid-sharp": 62235,
  "ios-hammer": 62236,
  "ios-hammer-outline": 62237,
  "ios-hammer-sharp": 62238,
  "ios-hand-left": 62239,
  "ios-hand-left-outline": 62240,
  "ios-hand-left-sharp": 62241,
  "ios-hand-right": 62242,
  "ios-hand-right-outline": 62243,
  "ios-hand-right-sharp": 62244,
  "ios-happy": 62245,
  "ios-happy-outline": 62246,
  "ios-happy-sharp": 62247,
  "ios-hardware-chip": 62248,
  "ios-hardware-chip-outline": 62249,
  "ios-hardware-chip-sharp": 62250,
  "ios-headset": 62251,
  "ios-headset-outline": 62252,
  "ios-headset-sharp": 62253,
  "ios-heart": 62254,
  "ios-heart-circle": 62255,
  "ios-heart-circle-outline": 62256,
  "ios-heart-circle-sharp": 62257,
  "ios-heart-dislike": 62258,
  "ios-heart-dislike-circle": 62259,
  "ios-heart-dislike-circle-outline": 62260,
  "ios-heart-dislike-circle-sharp": 62261,
  "ios-heart-dislike-outline": 62262,
  "ios-heart-dislike-sharp": 62263,
  "ios-heart-half": 62264,
  "ios-heart-half-outline": 62265,
  "ios-heart-half-sharp": 62266,
  "ios-heart-outline": 62267,
  "ios-heart-sharp": 62268,
  "ios-help": 62269,
  "ios-help-buoy": 62270,
  "ios-help-buoy-outline": 62271,
  "ios-help-buoy-sharp": 62272,
  "ios-help-circle": 62273,
  "ios-help-circle-outline": 62274,
  "ios-help-circle-sharp": 62275,
  "ios-help-outline": 62276,
  "ios-help-sharp": 62277,
  "ios-home": 62278,
  "ios-home-outline": 62279,
  "ios-home-sharp": 62280,
  "ios-hourglass": 62281,
  "ios-hourglass-outline": 62282,
  "ios-hourglass-sharp": 62283,
  "ios-ice-cream": 62284,
  "ios-ice-cream-outline": 62285,
  "ios-ice-cream-sharp": 62286,
  "ios-image": 62287,
  "ios-image-outline": 62288,
  "ios-image-sharp": 62289,
  "ios-images": 62290,
  "ios-images-outline": 62291,
  "ios-images-sharp": 62292,
  "ios-infinite": 62293,
  "ios-infinite-outline": 62294,
  "ios-infinite-sharp": 62295,
  "ios-information": 62296,
  "ios-information-circle": 62297,
  "ios-information-circle-outline": 62298,
  "ios-information-circle-sharp": 62299,
  "ios-information-outline": 62300,
  "ios-information-sharp": 62301,
  "ios-journal": 62302,
  "ios-journal-outline": 62303,
  "ios-journal-sharp": 62304,
  "ios-key": 62305,
  "ios-key-outline": 62306,
  "ios-key-sharp": 62307,
  "ios-keypad": 62308,
  "ios-keypad-outline": 62309,
  "ios-keypad-sharp": 62310,
  "ios-language": 62311,
  "ios-language-outline": 62312,
  "ios-language-sharp": 62313,
  "ios-laptop": 62314,
  "ios-laptop-outline": 62315,
  "ios-laptop-sharp": 62316,
  "ios-layers": 62317,
  "ios-layers-outline": 62318,
  "ios-layers-sharp": 62319,
  "ios-leaf": 62320,
  "ios-leaf-outline": 62321,
  "ios-leaf-sharp": 62322,
  "ios-library": 62323,
  "ios-library-outline": 62324,
  "ios-library-sharp": 62325,
  "ios-link": 62326,
  "ios-link-outline": 62327,
  "ios-link-sharp": 62328,
  "ios-list": 62329,
  "ios-list-circle": 62330,
  "ios-list-circle-outline": 62331,
  "ios-list-circle-sharp": 62332,
  "ios-list-outline": 62333,
  "ios-list-sharp": 62334,
  "ios-locate": 62335,
  "ios-locate-outline": 62336,
  "ios-locate-sharp": 62337,
  "ios-location": 62338,
  "ios-location-outline": 62339,
  "ios-location-sharp": 62340,
  "ios-lock-closed": 62341,
  "ios-lock-closed-outline": 62342,
  "ios-lock-closed-sharp": 62343,
  "ios-lock-open": 62344,
  "ios-lock-open-outline": 62345,
  "ios-lock-open-sharp": 62346,
  "ios-log-in": 62347,
  "ios-log-in-outline": 62348,
  "ios-log-in-sharp": 62349,
  "ios-log-out": 62350,
  "ios-log-out-outline": 62351,
  "ios-log-out-sharp": 62352,
  "ios-logo-amazon": 62353,
  "ios-logo-amplify": 62354,
  "ios-logo-android": 62355,
  "ios-logo-angular": 62356,
  "ios-logo-apple": 62357,
  "ios-logo-apple-appstore": 62358,
  "ios-logo-bitbucket": 62359,
  "ios-logo-bitcoin": 62360,
  "ios-logo-buffer": 62361,
  "ios-logo-capacitor": 62362,
  "ios-logo-chrome": 62363,
  "ios-logo-closed-captioning": 62364,
  "ios-logo-codepen": 62365,
  "ios-logo-css3": 62366,
  "ios-logo-designernews": 62367,
  "ios-logo-dribbble": 62368,
  "ios-logo-dropbox": 62369,
  "ios-logo-edge": 62370,
  "ios-logo-electron": 62371,
  "ios-logo-euro": 62372,
  "ios-logo-facebook": 62373,
  "ios-logo-firebase": 62374,
  "ios-logo-firefox": 62375,
  "ios-logo-flickr": 62376,
  "ios-logo-foursquare": 62377,
  "ios-logo-github": 62378,
  "ios-logo-google": 62379,
  "ios-logo-google-playstore": 62380,
  "ios-logo-hackernews": 62381,
  "ios-logo-html5": 62382,
  "ios-logo-instagram": 62383,
  "ios-logo-ionic": 62384,
  "ios-logo-ionitron": 62385,
  "ios-logo-javascript": 62386,
  "ios-logo-laravel": 62387,
  "ios-logo-linkedin": 62388,
  "ios-logo-markdown": 62389,
  "ios-logo-no-smoking": 62390,
  "ios-logo-nodejs": 62391,
  "ios-logo-npm": 62392,
  "ios-logo-octocat": 62393,
  "ios-logo-pinterest": 62394,
  "ios-logo-playstation": 62395,
  "ios-logo-pwa": 62396,
  "ios-logo-python": 62397,
  "ios-logo-react": 62398,
  "ios-logo-reddit": 62399,
  "ios-logo-rss": 62400,
  "ios-logo-sass": 62401,
  "ios-logo-skype": 62402,
  "ios-logo-slack": 62403,
  "ios-logo-snapchat": 62404,
  "ios-logo-stackoverflow": 62405,
  "ios-logo-steam": 62406,
  "ios-logo-stencil": 62407,
  "ios-logo-tumblr": 62408,
  "ios-logo-tux": 62409,
  "ios-logo-twitch": 62410,
  "ios-logo-twitter": 62411,
  "ios-logo-usd": 62412,
  "ios-logo-vimeo": 62413,
  "ios-logo-vk": 62414,
  "ios-logo-vue": 62415,
  "ios-logo-web-component": 62416,
  "ios-logo-whatsapp": 62417,
  "ios-logo-windows": 62418,
  "ios-logo-wordpress": 62419,
  "ios-logo-xbox": 62420,
  "ios-logo-xing": 62421,
  "ios-logo-yahoo": 62422,
  "ios-logo-yen": 62423,
  "ios-logo-youtube": 62424,
  "ios-magnet": 62425,
  "ios-magnet-outline": 62426,
  "ios-magnet-sharp": 62427,
  "ios-mail": 62428,
  "ios-mail-open": 62429,
  "ios-mail-open-outline": 62430,
  "ios-mail-open-sharp": 62431,
  "ios-mail-outline": 62432,
  "ios-mail-sharp": 62433,
  "ios-mail-unread": 62434,
  "ios-mail-unread-outline": 62435,
  "ios-mail-unread-sharp": 62436,
  "ios-male": 62437,
  "ios-male-female": 62438,
  "ios-male-female-outline": 62439,
  "ios-male-female-sharp": 62440,
  "ios-male-outline": 62441,
  "ios-male-sharp": 62442,
  "ios-man": 62443,
  "ios-man-outline": 62444,
  "ios-man-sharp": 62445,
  "ios-map": 62446,
  "ios-map-outline": 62447,
  "ios-map-sharp": 62448,
  "ios-medal": 62449,
  "ios-medal-outline": 62450,
  "ios-medal-sharp": 62451,
  "ios-medical": 62452,
  "ios-medical-outline": 62453,
  "ios-medical-sharp": 62454,
  "ios-medkit": 62455,
  "ios-medkit-outline": 62456,
  "ios-medkit-sharp": 62457,
  "ios-megaphone": 62458,
  "ios-megaphone-outline": 62459,
  "ios-megaphone-sharp": 62460,
  "ios-menu": 62461,
  "ios-menu-outline": 62462,
  "ios-menu-sharp": 62463,
  "ios-mic": 62464,
  "ios-mic-circle": 62465,
  "ios-mic-circle-outline": 62466,
  "ios-mic-circle-sharp": 62467,
  "ios-mic-off": 62468,
  "ios-mic-off-circle": 62469,
  "ios-mic-off-circle-outline": 62470,
  "ios-mic-off-circle-sharp": 62471,
  "ios-mic-off-outline": 62472,
  "ios-mic-off-sharp": 62473,
  "ios-mic-outline": 62474,
  "ios-mic-sharp": 62475,
  "ios-moon": 62476,
  "ios-moon-outline": 62477,
  "ios-moon-sharp": 62478,
  "ios-move": 62479,
  "ios-move-outline": 62480,
  "ios-move-sharp": 62481,
  "ios-musical-note": 62482,
  "ios-musical-note-outline": 62483,
  "ios-musical-note-sharp": 62484,
  "ios-musical-notes": 62485,
  "ios-musical-notes-outline": 62486,
  "ios-musical-notes-sharp": 62487,
  "ios-navigate": 62488,
  "ios-navigate-circle": 62489,
  "ios-navigate-circle-outline": 62490,
  "ios-navigate-circle-sharp": 62491,
  "ios-navigate-outline": 62492,
  "ios-navigate-sharp": 62493,
  "ios-newspaper": 62494,
  "ios-newspaper-outline": 62495,
  "ios-newspaper-sharp": 62496,
  "ios-notifications": 62497,
  "ios-notifications-circle": 62498,
  "ios-notifications-circle-outline": 62499,
  "ios-notifications-circle-sharp": 62500,
  "ios-notifications-off": 62501,
  "ios-notifications-off-circle": 62502,
  "ios-notifications-off-circle-outline": 62503,
  "ios-notifications-off-circle-sharp": 62504,
  "ios-notifications-off-outline": 62505,
  "ios-notifications-off-sharp": 62506,
  "ios-notifications-outline": 62507,
  "ios-notifications-sharp": 62508,
  "ios-nuclear": 62509,
  "ios-nuclear-outline": 62510,
  "ios-nuclear-sharp": 62511,
  "ios-nutrition": 62512,
  "ios-nutrition-outline": 62513,
  "ios-nutrition-sharp": 62514,
  "ios-open": 62515,
  "ios-open-outline": 62516,
  "ios-open-sharp": 62517,
  "ios-options": 62518,
  "ios-options-outline": 62519,
  "ios-options-sharp": 62520,
  "ios-paper-plane": 62521,
  "ios-paper-plane-outline": 62522,
  "ios-paper-plane-sharp": 62523,
  "ios-partly-sunny": 62524,
  "ios-partly-sunny-outline": 62525,
  "ios-partly-sunny-sharp": 62526,
  "ios-pause": 62527,
  "ios-pause-circle": 62528,
  "ios-pause-circle-outline": 62529,
  "ios-pause-circle-sharp": 62530,
  "ios-pause-outline": 62531,
  "ios-pause-sharp": 62532,
  "ios-paw": 62533,
  "ios-paw-outline": 62534,
  "ios-paw-sharp": 62535,
  "ios-pencil": 62536,
  "ios-pencil-outline": 62537,
  "ios-pencil-sharp": 62538,
  "ios-people": 62539,
  "ios-people-circle": 62540,
  "ios-people-circle-outline": 62541,
  "ios-people-circle-sharp": 62542,
  "ios-people-outline": 62543,
  "ios-people-sharp": 62544,
  "ios-person": 62545,
  "ios-person-add": 62546,
  "ios-person-add-outline": 62547,
  "ios-person-add-sharp": 62548,
  "ios-person-circle": 62549,
  "ios-person-circle-outline": 62550,
  "ios-person-circle-sharp": 62551,
  "ios-person-outline": 62552,
  "ios-person-remove": 62553,
  "ios-person-remove-outline": 62554,
  "ios-person-remove-sharp": 62555,
  "ios-person-sharp": 62556,
  "ios-phone-landscape": 62557,
  "ios-phone-landscape-outline": 62558,
  "ios-phone-landscape-sharp": 62559,
  "ios-phone-portrait": 62560,
  "ios-phone-portrait-outline": 62561,
  "ios-phone-portrait-sharp": 62562,
  "ios-pie-chart": 62563,
  "ios-pie-chart-outline": 62564,
  "ios-pie-chart-sharp": 62565,
  "ios-pin": 62566,
  "ios-pin-outline": 62567,
  "ios-pin-sharp": 62568,
  "ios-pint": 62569,
  "ios-pint-outline": 62570,
  "ios-pint-sharp": 62571,
  "ios-pizza": 62572,
  "ios-pizza-outline": 62573,
  "ios-pizza-sharp": 62574,
  "ios-planet": 62575,
  "ios-planet-outline": 62576,
  "ios-planet-sharp": 62577,
  "ios-play": 62578,
  "ios-play-back": 62579,
  "ios-play-back-circle": 62580,
  "ios-play-back-circle-outline": 62581,
  "ios-play-back-circle-sharp": 62582,
  "ios-play-back-outline": 62583,
  "ios-play-back-sharp": 62584,
  "ios-play-circle": 62585,
  "ios-play-circle-outline": 62586,
  "ios-play-circle-sharp": 62587,
  "ios-play-forward": 62588,
  "ios-play-forward-circle": 62589,
  "ios-play-forward-circle-outline": 62590,
  "ios-play-forward-circle-sharp": 62591,
  "ios-play-forward-outline": 62592,
  "ios-play-forward-sharp": 62593,
  "ios-play-outline": 62594,
  "ios-play-sharp": 62595,
  "ios-play-skip-back": 62596,
  "ios-play-skip-back-circle": 62597,
  "ios-play-skip-back-circle-outline": 62598,
  "ios-play-skip-back-circle-sharp": 62599,
  "ios-play-skip-back-outline": 62600,
  "ios-play-skip-back-sharp": 62601,
  "ios-play-skip-forward": 62602,
  "ios-play-skip-forward-circle": 62603,
  "ios-play-skip-forward-circle-outline": 62604,
  "ios-play-skip-forward-circle-sharp": 62605,
  "ios-play-skip-forward-outline": 62606,
  "ios-play-skip-forward-sharp": 62607,
  "ios-podium": 62608,
  "ios-podium-outline": 62609,
  "ios-podium-sharp": 62610,
  "ios-power": 62611,
  "ios-power-outline": 62612,
  "ios-power-sharp": 62613,
  "ios-pricetag": 62614,
  "ios-pricetag-outline": 62615,
  "ios-pricetag-sharp": 62616,
  "ios-pricetags": 62617,
  "ios-pricetags-outline": 62618,
  "ios-pricetags-sharp": 62619,
  "ios-print": 62620,
  "ios-print-outline": 62621,
  "ios-print-sharp": 62622,
  "ios-pulse": 62623,
  "ios-pulse-outline": 62624,
  "ios-pulse-sharp": 62625,
  "ios-push": 62626,
  "ios-push-outline": 62627,
  "ios-push-sharp": 62628,
  "ios-qr-code": 62629,
  "ios-qr-code-outline": 62630,
  "ios-qr-code-sharp": 62631,
  "ios-radio": 62632,
  "ios-radio-button-off": 62633,
  "ios-radio-button-off-outline": 62634,
  "ios-radio-button-off-sharp": 62635,
  "ios-radio-button-on": 62636,
  "ios-radio-button-on-outline": 62637,
  "ios-radio-button-on-sharp": 62638,
  "ios-radio-outline": 62639,
  "ios-radio-sharp": 62640,
  "ios-rainy": 62641,
  "ios-rainy-outline": 62642,
  "ios-rainy-sharp": 62643,
  "ios-reader": 62644,
  "ios-reader-outline": 62645,
  "ios-reader-sharp": 62646,
  "ios-receipt": 62647,
  "ios-receipt-outline": 62648,
  "ios-receipt-sharp": 62649,
  "ios-recording": 62650,
  "ios-recording-outline": 62651,
  "ios-recording-sharp": 62652,
  "ios-refresh": 62653,
  "ios-refresh-circle": 62654,
  "ios-refresh-circle-outline": 62655,
  "ios-refresh-circle-sharp": 62656,
  "ios-refresh-outline": 62657,
  "ios-refresh-sharp": 62658,
  "ios-reload": 62659,
  "ios-reload-circle": 62660,
  "ios-reload-circle-outline": 62661,
  "ios-reload-circle-sharp": 62662,
  "ios-reload-outline": 62663,
  "ios-reload-sharp": 62664,
  "ios-remove": 62665,
  "ios-remove-circle": 62666,
  "ios-remove-circle-outline": 62667,
  "ios-remove-circle-sharp": 62668,
  "ios-remove-outline": 62669,
  "ios-remove-sharp": 62670,
  "ios-reorder-four": 62671,
  "ios-reorder-four-outline": 62672,
  "ios-reorder-four-sharp": 62673,
  "ios-reorder-three": 62674,
  "ios-reorder-three-outline": 62675,
  "ios-reorder-three-sharp": 62676,
  "ios-reorder-two": 62677,
  "ios-reorder-two-outline": 62678,
  "ios-reorder-two-sharp": 62679,
  "ios-repeat": 62680,
  "ios-repeat-outline": 62681,
  "ios-repeat-sharp": 62682,
  "ios-resize": 62683,
  "ios-resize-outline": 62684,
  "ios-resize-sharp": 62685,
  "ios-restaurant": 62686,
  "ios-restaurant-outline": 62687,
  "ios-restaurant-sharp": 62688,
  "ios-return-down-back": 62689,
  "ios-return-down-back-outline": 62690,
  "ios-return-down-back-sharp": 62691,
  "ios-return-down-forward": 62692,
  "ios-return-down-forward-outline": 62693,
  "ios-return-down-forward-sharp": 62694,
  "ios-return-up-back": 62695,
  "ios-return-up-back-outline": 62696,
  "ios-return-up-back-sharp": 62697,
  "ios-return-up-forward": 62698,
  "ios-return-up-forward-outline": 62699,
  "ios-return-up-forward-sharp": 62700,
  "ios-ribbon": 62701,
  "ios-ribbon-outline": 62702,
  "ios-ribbon-sharp": 62703,
  "ios-rocket": 62704,
  "ios-rocket-outline": 62705,
  "ios-rocket-sharp": 62706,
  "ios-rose": 62707,
  "ios-rose-outline": 62708,
  "ios-rose-sharp": 62709,
  "ios-sad": 62710,
  "ios-sad-outline": 62711,
  "ios-sad-sharp": 62712,
  "ios-save": 62713,
  "ios-save-outline": 62714,
  "ios-save-sharp": 62715,
  "ios-scan": 62716,
  "ios-scan-circle": 62717,
  "ios-scan-circle-outline": 62718,
  "ios-scan-circle-sharp": 62719,
  "ios-scan-outline": 62720,
  "ios-scan-sharp": 62721,
  "ios-school": 62722,
  "ios-school-outline": 62723,
  "ios-school-sharp": 62724,
  "ios-search": 62725,
  "ios-search-circle": 62726,
  "ios-search-circle-outline": 62727,
  "ios-search-circle-sharp": 62728,
  "ios-search-outline": 62729,
  "ios-search-sharp": 62730,
  "ios-send": 62731,
  "ios-send-outline": 62732,
  "ios-send-sharp": 62733,
  "ios-server": 62734,
  "ios-server-outline": 62735,
  "ios-server-sharp": 62736,
  "ios-settings": 62737,
  "ios-settings-outline": 62738,
  "ios-settings-sharp": 62739,
  "ios-shapes": 62740,
  "ios-shapes-outline": 62741,
  "ios-shapes-sharp": 62742,
  "ios-share": 62743,
  "ios-share-outline": 62744,
  "ios-share-sharp": 62745,
  "ios-share-social": 62746,
  "ios-share-social-outline": 62747,
  "ios-share-social-sharp": 62748,
  "ios-shield": 62749,
  "ios-shield-checkmark": 62750,
  "ios-shield-checkmark-outline": 62751,
  "ios-shield-checkmark-sharp": 62752,
  "ios-shield-outline": 62753,
  "ios-shield-sharp": 62754,
  "ios-shirt": 62755,
  "ios-shirt-outline": 62756,
  "ios-shirt-sharp": 62757,
  "ios-shuffle": 62758,
  "ios-shuffle-outline": 62759,
  "ios-shuffle-sharp": 62760,
  "ios-skull": 62761,
  "ios-skull-outline": 62762,
  "ios-skull-sharp": 62763,
  "ios-snow": 62764,
  "ios-snow-outline": 62765,
  "ios-snow-sharp": 62766,
  "ios-speedometer": 62767,
  "ios-speedometer-outline": 62768,
  "ios-speedometer-sharp": 62769,
  "ios-square": 62770,
  "ios-square-outline": 62771,
  "ios-square-sharp": 62772,
  "ios-star": 62773,
  "ios-star-half": 62774,
  "ios-star-half-outline": 62775,
  "ios-star-half-sharp": 62776,
  "ios-star-outline": 62777,
  "ios-star-sharp": 62778,
  "ios-stats-chart": 62779,
  "ios-stats-chart-outline": 62780,
  "ios-stats-chart-sharp": 62781,
  "ios-stop": 62782,
  "ios-stop-circle": 62783,
  "ios-stop-circle-outline": 62784,
  "ios-stop-circle-sharp": 62785,
  "ios-stop-outline": 62786,
  "ios-stop-sharp": 62787,
  "ios-stopwatch": 62788,
  "ios-stopwatch-outline": 62789,
  "ios-stopwatch-sharp": 62790,
  "ios-subway": 62791,
  "ios-subway-outline": 62792,
  "ios-subway-sharp": 62793,
  "ios-sunny": 62794,
  "ios-sunny-outline": 62795,
  "ios-sunny-sharp": 62796,
  "ios-swap-horizontal": 62797,
  "ios-swap-horizontal-outline": 62798,
  "ios-swap-horizontal-sharp": 62799,
  "ios-swap-vertical": 62800,
  "ios-swap-vertical-outline": 62801,
  "ios-swap-vertical-sharp": 62802,
  "ios-sync": 62803,
  "ios-sync-circle": 62804,
  "ios-sync-circle-outline": 62805,
  "ios-sync-circle-sharp": 62806,
  "ios-sync-outline": 62807,
  "ios-sync-sharp": 62808,
  "ios-tablet-landscape": 62809,
  "ios-tablet-landscape-outline": 62810,
  "ios-tablet-landscape-sharp": 62811,
  "ios-tablet-portrait": 62812,
  "ios-tablet-portrait-outline": 62813,
  "ios-tablet-portrait-sharp": 62814,
  "ios-tennisball": 62815,
  "ios-tennisball-outline": 62816,
  "ios-tennisball-sharp": 62817,
  "ios-terminal": 62818,
  "ios-terminal-outline": 62819,
  "ios-terminal-sharp": 62820,
  "ios-text": 62821,
  "ios-text-outline": 62822,
  "ios-text-sharp": 62823,
  "ios-thermometer": 62824,
  "ios-thermometer-outline": 62825,
  "ios-thermometer-sharp": 62826,
  "ios-thumbs-down": 62827,
  "ios-thumbs-down-outline": 62828,
  "ios-thumbs-down-sharp": 62829,
  "ios-thumbs-up": 62830,
  "ios-thumbs-up-outline": 62831,
  "ios-thumbs-up-sharp": 62832,
  "ios-thunderstorm": 62833,
  "ios-thunderstorm-outline": 62834,
  "ios-thunderstorm-sharp": 62835,
  "ios-time": 62836,
  "ios-time-outline": 62837,
  "ios-time-sharp": 62838,
  "ios-timer": 62839,
  "ios-timer-outline": 62840,
  "ios-timer-sharp": 62841,
  "ios-today": 62842,
  "ios-today-outline": 62843,
  "ios-today-sharp": 62844,
  "ios-toggle": 62845,
  "ios-toggle-outline": 62846,
  "ios-toggle-sharp": 62847,
  "ios-trail-sign": 62848,
  "ios-trail-sign-outline": 62849,
  "ios-trail-sign-sharp": 62850,
  "ios-train": 62851,
  "ios-train-outline": 62852,
  "ios-train-sharp": 62853,
  "ios-transgender": 62854,
  "ios-transgender-outline": 62855,
  "ios-transgender-sharp": 62856,
  "ios-trash": 62857,
  "ios-trash-bin": 62858,
  "ios-trash-bin-outline": 62859,
  "ios-trash-bin-sharp": 62860,
  "ios-trash-outline": 62861,
  "ios-trash-sharp": 62862,
  "ios-trending-down": 62863,
  "ios-trending-down-outline": 62864,
  "ios-trending-down-sharp": 62865,
  "ios-trending-up": 62866,
  "ios-trending-up-outline": 62867,
  "ios-trending-up-sharp": 62868,
  "ios-triangle": 62869,
  "ios-triangle-outline": 62870,
  "ios-triangle-sharp": 62871,
  "ios-trophy": 62872,
  "ios-trophy-outline": 62873,
  "ios-trophy-sharp": 62874,
  "ios-tv": 62875,
  "ios-tv-outline": 62876,
  "ios-tv-sharp": 62877,
  "ios-umbrella": 62878,
  "ios-umbrella-outline": 62879,
  "ios-umbrella-sharp": 62880,
  "ios-videocam": 62881,
  "ios-videocam-outline": 62882,
  "ios-videocam-sharp": 62883,
  "ios-volume-high": 62884,
  "ios-volume-high-outline": 62885,
  "ios-volume-high-sharp": 62886,
  "ios-volume-low": 62887,
  "ios-volume-low-outline": 62888,
  "ios-volume-low-sharp": 62889,
  "ios-volume-medium": 62890,
  "ios-volume-medium-outline": 62891,
  "ios-volume-medium-sharp": 62892,
  "ios-volume-mute": 62893,
  "ios-volume-mute-outline": 62894,
  "ios-volume-mute-sharp": 62895,
  "ios-volume-off": 62896,
  "ios-volume-off-outline": 62897,
  "ios-volume-off-sharp": 62898,
  "ios-walk": 62899,
  "ios-walk-outline": 62900,
  "ios-walk-sharp": 62901,
  "ios-wallet": 62902,
  "ios-wallet-outline": 62903,
  "ios-wallet-sharp": 62904,
  "ios-warning": 62905,
  "ios-warning-outline": 62906,
  "ios-warning-sharp": 62907,
  "ios-watch": 62908,
  "ios-watch-outline": 62909,
  "ios-watch-sharp": 62910,
  "ios-water": 62911,
  "ios-water-outline": 62912,
  "ios-water-sharp": 62913,
  "ios-wifi": 62914,
  "ios-wifi-outline": 62915,
  "ios-wifi-sharp": 62916,
  "ios-wine": 62917,
  "ios-wine-outline": 62918,
  "ios-wine-sharp": 62919,
  "ios-woman": 62920,
  "ios-woman-outline": 62921,
  "ios-woman-sharp": 62922,
  "md-add": 61696,
  "md-add-circle": 61697,
  "md-add-circle-outline": 61698,
  "md-add-circle-sharp": 61699,
  "md-add-outline": 61700,
  "md-add-sharp": 61701,
  "md-airplane": 61702,
  "md-airplane-outline": 61703,
  "md-airplane-sharp": 61704,
  "md-alarm": 61705,
  "md-alarm-outline": 61706,
  "md-alarm-sharp": 61707,
  "md-albums": 61708,
  "md-albums-outline": 61709,
  "md-albums-sharp": 61710,
  "md-alert": 61711,
  "md-alert-circle": 61712,
  "md-alert-circle-outline": 61713,
  "md-alert-circle-sharp": 61714,
  "md-alert-outline": 61715,
  "md-alert-sharp": 61716,
  "md-american-football": 61717,
  "md-american-football-outline": 61718,
  "md-american-football-sharp": 61719,
  "md-analytics": 61720,
  "md-analytics-outline": 61721,
  "md-analytics-sharp": 61722,
  "md-aperture": 61723,
  "md-aperture-outline": 61724,
  "md-aperture-sharp": 61725,
  "md-apps": 61726,
  "md-apps-outline": 61727,
  "md-apps-sharp": 61728,
  "md-archive": 61729,
  "md-archive-outline": 61730,
  "md-archive-sharp": 61731,
  "md-arrow-back": 61732,
  "md-arrow-back-circle": 61733,
  "md-arrow-back-circle-outline": 61734,
  "md-arrow-back-circle-sharp": 61735,
  "md-arrow-back-outline": 61736,
  "md-arrow-back-sharp": 61737,
  "md-arrow-down": 61738,
  "md-arrow-down-circle": 61739,
  "md-arrow-down-circle-outline": 61740,
  "md-arrow-down-circle-sharp": 61741,
  "md-arrow-down-outline": 61742,
  "md-arrow-down-sharp": 61743,
  "md-arrow-forward": 61744,
  "md-arrow-forward-circle": 61745,
  "md-arrow-forward-circle-outline": 61746,
  "md-arrow-forward-circle-sharp": 61747,
  "md-arrow-forward-outline": 61748,
  "md-arrow-forward-sharp": 61749,
  "md-arrow-redo": 61750,
  "md-arrow-redo-circle": 61751,
  "md-arrow-redo-circle-outline": 61752,
  "md-arrow-redo-circle-sharp": 61753,
  "md-arrow-redo-outline": 61754,
  "md-arrow-redo-sharp": 61755,
  "md-arrow-undo": 61756,
  "md-arrow-undo-circle": 61757,
  "md-arrow-undo-circle-outline": 61758,
  "md-arrow-undo-circle-sharp": 61759,
  "md-arrow-undo-outline": 61760,
  "md-arrow-undo-sharp": 61761,
  "md-arrow-up": 61762,
  "md-arrow-up-circle": 61763,
  "md-arrow-up-circle-outline": 61764,
  "md-arrow-up-circle-sharp": 61765,
  "md-arrow-up-outline": 61766,
  "md-arrow-up-sharp": 61767,
  "md-at": 61768,
  "md-at-circle": 61769,
  "md-at-circle-outline": 61770,
  "md-at-circle-sharp": 61771,
  "md-at-outline": 61772,
  "md-at-sharp": 61773,
  "md-attach": 61774,
  "md-attach-outline": 61775,
  "md-attach-sharp": 61776,
  "md-backspace": 61777,
  "md-backspace-outline": 61778,
  "md-backspace-sharp": 61779,
  "md-bandage": 61780,
  "md-bandage-outline": 61781,
  "md-bandage-sharp": 61782,
  "md-bar-chart": 61783,
  "md-bar-chart-outline": 61784,
  "md-bar-chart-sharp": 61785,
  "md-barbell": 61786,
  "md-barbell-outline": 61787,
  "md-barbell-sharp": 61788,
  "md-barcode": 61789,
  "md-barcode-outline": 61790,
  "md-barcode-sharp": 61791,
  "md-baseball": 61792,
  "md-baseball-outline": 61793,
  "md-baseball-sharp": 61794,
  "md-basket": 61795,
  "md-basket-outline": 61796,
  "md-basket-sharp": 61797,
  "md-basketball": 61798,
  "md-basketball-outline": 61799,
  "md-basketball-sharp": 61800,
  "md-battery-charging": 61801,
  "md-battery-charging-outline": 61802,
  "md-battery-charging-sharp": 61803,
  "md-battery-dead": 61804,
  "md-battery-dead-outline": 61805,
  "md-battery-dead-sharp": 61806,
  "md-battery-full": 61807,
  "md-battery-full-outline": 61808,
  "md-battery-full-sharp": 61809,
  "md-battery-half": 61810,
  "md-battery-half-outline": 61811,
  "md-battery-half-sharp": 61812,
  "md-beaker": 61813,
  "md-beaker-outline": 61814,
  "md-beaker-sharp": 61815,
  "md-bed": 61816,
  "md-bed-outline": 61817,
  "md-bed-sharp": 61818,
  "md-beer": 61819,
  "md-beer-outline": 61820,
  "md-beer-sharp": 61821,
  "md-bicycle": 61822,
  "md-bicycle-outline": 61823,
  "md-bicycle-sharp": 61824,
  "md-bluetooth": 61825,
  "md-bluetooth-outline": 61826,
  "md-bluetooth-sharp": 61827,
  "md-boat": 61828,
  "md-boat-outline": 61829,
  "md-boat-sharp": 61830,
  "md-body": 61831,
  "md-body-outline": 61832,
  "md-body-sharp": 61833,
  "md-bonfire": 61834,
  "md-bonfire-outline": 61835,
  "md-bonfire-sharp": 61836,
  "md-book": 61837,
  "md-book-outline": 61838,
  "md-book-sharp": 61839,
  "md-bookmark": 61840,
  "md-bookmark-outline": 61841,
  "md-bookmark-sharp": 61842,
  "md-bookmarks": 61843,
  "md-bookmarks-outline": 61844,
  "md-bookmarks-sharp": 61845,
  "md-briefcase": 61846,
  "md-briefcase-outline": 61847,
  "md-briefcase-sharp": 61848,
  "md-browsers": 61849,
  "md-browsers-outline": 61850,
  "md-browsers-sharp": 61851,
  "md-brush": 61852,
  "md-brush-outline": 61853,
  "md-brush-sharp": 61854,
  "md-bug": 61855,
  "md-bug-outline": 61856,
  "md-bug-sharp": 61857,
  "md-build": 61858,
  "md-build-outline": 61859,
  "md-build-sharp": 61860,
  "md-bulb": 61861,
  "md-bulb-outline": 61862,
  "md-bulb-sharp": 61863,
  "md-bus": 61864,
  "md-bus-outline": 61865,
  "md-bus-sharp": 61866,
  "md-business": 61867,
  "md-business-outline": 61868,
  "md-business-sharp": 61869,
  "md-cafe": 61870,
  "md-cafe-outline": 61871,
  "md-cafe-sharp": 61872,
  "md-calculator": 61873,
  "md-calculator-outline": 61874,
  "md-calculator-sharp": 61875,
  "md-calendar": 61876,
  "md-calendar-outline": 61877,
  "md-calendar-sharp": 61878,
  "md-call": 61879,
  "md-call-outline": 61880,
  "md-call-sharp": 61881,
  "md-camera": 61882,
  "md-camera-outline": 61883,
  "md-camera-reverse": 61884,
  "md-camera-reverse-outline": 61885,
  "md-camera-reverse-sharp": 61886,
  "md-camera-sharp": 61887,
  "md-car": 61888,
  "md-car-outline": 61889,
  "md-car-sharp": 61890,
  "md-car-sport": 61891,
  "md-car-sport-outline": 61892,
  "md-car-sport-sharp": 61893,
  "md-card": 61894,
  "md-card-outline": 61895,
  "md-card-sharp": 61896,
  "md-caret-back": 61897,
  "md-caret-back-circle": 61898,
  "md-caret-back-circle-outline": 61899,
  "md-caret-back-circle-sharp": 61900,
  "md-caret-back-outline": 61901,
  "md-caret-back-sharp": 61902,
  "md-caret-down": 61903,
  "md-caret-down-circle": 61904,
  "md-caret-down-circle-outline": 61905,
  "md-caret-down-circle-sharp": 61906,
  "md-caret-down-outline": 61907,
  "md-caret-down-sharp": 61908,
  "md-caret-forward": 61909,
  "md-caret-forward-circle": 61910,
  "md-caret-forward-circle-outline": 61911,
  "md-caret-forward-circle-sharp": 61912,
  "md-caret-forward-outline": 61913,
  "md-caret-forward-sharp": 61914,
  "md-caret-up": 61915,
  "md-caret-up-circle": 61916,
  "md-caret-up-circle-outline": 61917,
  "md-caret-up-circle-sharp": 61918,
  "md-caret-up-outline": 61919,
  "md-caret-up-sharp": 61920,
  "md-cart": 61921,
  "md-cart-outline": 61922,
  "md-cart-sharp": 61923,
  "md-cash": 61924,
  "md-cash-outline": 61925,
  "md-cash-sharp": 61926,
  "md-cellular": 61927,
  "md-cellular-outline": 61928,
  "md-cellular-sharp": 61929,
  "md-chatbox": 61930,
  "md-chatbox-ellipses": 61931,
  "md-chatbox-ellipses-outline": 61932,
  "md-chatbox-ellipses-sharp": 61933,
  "md-chatbox-outline": 61934,
  "md-chatbox-sharp": 61935,
  "md-chatbubble": 61936,
  "md-chatbubble-ellipses": 61937,
  "md-chatbubble-ellipses-outline": 61938,
  "md-chatbubble-ellipses-sharp": 61939,
  "md-chatbubble-outline": 61940,
  "md-chatbubble-sharp": 61941,
  "md-chatbubbles": 61942,
  "md-chatbubbles-outline": 61943,
  "md-chatbubbles-sharp": 61944,
  "md-checkbox": 61945,
  "md-checkbox-outline": 61946,
  "md-checkbox-sharp": 61947,
  "md-checkmark": 61948,
  "md-checkmark-circle": 61949,
  "md-checkmark-circle-outline": 61950,
  "md-checkmark-circle-sharp": 61951,
  "md-checkmark-done": 61952,
  "md-checkmark-done-circle": 61953,
  "md-checkmark-done-circle-outline": 61954,
  "md-checkmark-done-circle-sharp": 61955,
  "md-checkmark-done-outline": 61956,
  "md-checkmark-done-sharp": 61957,
  "md-checkmark-outline": 61958,
  "md-checkmark-sharp": 61959,
  "md-chevron-back": 61960,
  "md-chevron-back-circle": 61961,
  "md-chevron-back-circle-outline": 61962,
  "md-chevron-back-circle-sharp": 61963,
  "md-chevron-back-outline": 61964,
  "md-chevron-back-sharp": 61965,
  "md-chevron-down": 61966,
  "md-chevron-down-circle": 61967,
  "md-chevron-down-circle-outline": 61968,
  "md-chevron-down-circle-sharp": 61969,
  "md-chevron-down-outline": 61970,
  "md-chevron-down-sharp": 61971,
  "md-chevron-forward": 61972,
  "md-chevron-forward-circle": 61973,
  "md-chevron-forward-circle-outline": 61974,
  "md-chevron-forward-circle-sharp": 61975,
  "md-chevron-forward-outline": 61976,
  "md-chevron-forward-sharp": 61977,
  "md-chevron-up": 61978,
  "md-chevron-up-circle": 61979,
  "md-chevron-up-circle-outline": 61980,
  "md-chevron-up-circle-sharp": 61981,
  "md-chevron-up-outline": 61982,
  "md-chevron-up-sharp": 61983,
  "md-clipboard": 61984,
  "md-clipboard-outline": 61985,
  "md-clipboard-sharp": 61986,
  "md-close": 61987,
  "md-close-circle": 61988,
  "md-close-circle-outline": 61989,
  "md-close-circle-sharp": 61990,
  "md-close-outline": 61991,
  "md-close-sharp": 61992,
  "md-cloud": 61993,
  "md-cloud-circle": 61994,
  "md-cloud-circle-outline": 61995,
  "md-cloud-circle-sharp": 61996,
  "md-cloud-done": 61997,
  "md-cloud-done-outline": 61998,
  "md-cloud-done-sharp": 61999,
  "md-cloud-download": 62000,
  "md-cloud-download-outline": 62001,
  "md-cloud-download-sharp": 62002,
  "md-cloud-offline": 62003,
  "md-cloud-offline-outline": 62004,
  "md-cloud-offline-sharp": 62005,
  "md-cloud-outline": 62006,
  "md-cloud-sharp": 62007,
  "md-cloud-upload": 62008,
  "md-cloud-upload-outline": 62009,
  "md-cloud-upload-sharp": 62010,
  "md-cloudy": 62011,
  "md-cloudy-night": 62012,
  "md-cloudy-night-outline": 62013,
  "md-cloudy-night-sharp": 62014,
  "md-cloudy-outline": 62015,
  "md-cloudy-sharp": 62016,
  "md-code": 62017,
  "md-code-download": 62018,
  "md-code-download-outline": 62019,
  "md-code-download-sharp": 62020,
  "md-code-outline": 62021,
  "md-code-sharp": 62022,
  "md-code-slash": 62023,
  "md-code-slash-outline": 62024,
  "md-code-slash-sharp": 62025,
  "md-code-working": 62026,
  "md-code-working-outline": 62027,
  "md-code-working-sharp": 62028,
  "md-cog": 62029,
  "md-cog-outline": 62030,
  "md-cog-sharp": 62031,
  "md-color-fill": 62032,
  "md-color-fill-outline": 62033,
  "md-color-fill-sharp": 62034,
  "md-color-filter": 62035,
  "md-color-filter-outline": 62036,
  "md-color-filter-sharp": 62037,
  "md-color-palette": 62038,
  "md-color-palette-outline": 62039,
  "md-color-palette-sharp": 62040,
  "md-color-wand": 62041,
  "md-color-wand-outline": 62042,
  "md-color-wand-sharp": 62043,
  "md-compass": 62044,
  "md-compass-outline": 62045,
  "md-compass-sharp": 62046,
  "md-construct": 62047,
  "md-construct-outline": 62048,
  "md-construct-sharp": 62049,
  "md-contract": 62050,
  "md-contract-outline": 62051,
  "md-contract-sharp": 62052,
  "md-contrast": 62053,
  "md-contrast-outline": 62054,
  "md-contrast-sharp": 62055,
  "md-copy": 62056,
  "md-copy-outline": 62057,
  "md-copy-sharp": 62058,
  "md-create": 62059,
  "md-create-outline": 62060,
  "md-create-sharp": 62061,
  "md-crop": 62062,
  "md-crop-outline": 62063,
  "md-crop-sharp": 62064,
  "md-cube": 62065,
  "md-cube-outline": 62066,
  "md-cube-sharp": 62067,
  "md-cut": 62068,
  "md-cut-outline": 62069,
  "md-cut-sharp": 62070,
  "md-desktop": 62071,
  "md-desktop-outline": 62072,
  "md-desktop-sharp": 62073,
  "md-disc": 62074,
  "md-disc-outline": 62075,
  "md-disc-sharp": 62076,
  "md-document": 62077,
  "md-document-attach": 62078,
  "md-document-attach-outline": 62079,
  "md-document-attach-sharp": 62080,
  "md-document-outline": 62081,
  "md-document-sharp": 62082,
  "md-document-text": 62083,
  "md-document-text-outline": 62084,
  "md-document-text-sharp": 62085,
  "md-documents": 62086,
  "md-documents-outline": 62087,
  "md-documents-sharp": 62088,
  "md-download": 62089,
  "md-download-outline": 62090,
  "md-download-sharp": 62091,
  "md-duplicate": 62092,
  "md-duplicate-outline": 62093,
  "md-duplicate-sharp": 62094,
  "md-ear": 62095,
  "md-ear-outline": 62096,
  "md-ear-sharp": 62097,
  "md-earth": 62098,
  "md-earth-outline": 62099,
  "md-earth-sharp": 62100,
  "md-easel": 62101,
  "md-easel-outline": 62102,
  "md-easel-sharp": 62103,
  "md-egg": 62104,
  "md-egg-outline": 62105,
  "md-egg-sharp": 62106,
  "md-ellipse": 62107,
  "md-ellipse-outline": 62108,
  "md-ellipse-sharp": 62109,
  "md-ellipsis-horizontal": 62110,
  "md-ellipsis-horizontal-circle": 62111,
  "md-ellipsis-horizontal-circle-outline": 62112,
  "md-ellipsis-horizontal-circle-sharp": 62113,
  "md-ellipsis-horizontal-outline": 62114,
  "md-ellipsis-horizontal-sharp": 62115,
  "md-ellipsis-vertical": 62116,
  "md-ellipsis-vertical-circle": 62117,
  "md-ellipsis-vertical-circle-outline": 62118,
  "md-ellipsis-vertical-circle-sharp": 62119,
  "md-ellipsis-vertical-outline": 62120,
  "md-ellipsis-vertical-sharp": 62121,
  "md-enter": 62122,
  "md-enter-outline": 62123,
  "md-enter-sharp": 62124,
  "md-exit": 62125,
  "md-exit-outline": 62126,
  "md-exit-sharp": 62127,
  "md-expand": 62128,
  "md-expand-outline": 62129,
  "md-expand-sharp": 62130,
  "md-eye": 62131,
  "md-eye-off": 62132,
  "md-eye-off-outline": 62133,
  "md-eye-off-sharp": 62134,
  "md-eye-outline": 62135,
  "md-eye-sharp": 62136,
  "md-eyedrop": 62137,
  "md-eyedrop-outline": 62138,
  "md-eyedrop-sharp": 62139,
  "md-fast-food": 62140,
  "md-fast-food-outline": 62141,
  "md-fast-food-sharp": 62142,
  "md-female": 62143,
  "md-female-outline": 62144,
  "md-female-sharp": 62145,
  "md-file-tray": 62146,
  "md-file-tray-full": 62147,
  "md-file-tray-full-outline": 62148,
  "md-file-tray-full-sharp": 62149,
  "md-file-tray-outline": 62150,
  "md-file-tray-sharp": 62151,
  "md-file-tray-stacked": 62152,
  "md-file-tray-stacked-outline": 62153,
  "md-file-tray-stacked-sharp": 62154,
  "md-film": 62155,
  "md-film-outline": 62156,
  "md-film-sharp": 62157,
  "md-filter": 62158,
  "md-filter-outline": 62159,
  "md-filter-sharp": 62160,
  "md-finger-print": 62161,
  "md-finger-print-outline": 62162,
  "md-finger-print-sharp": 62163,
  "md-fitness": 62164,
  "md-fitness-outline": 62165,
  "md-fitness-sharp": 62166,
  "md-flag": 62167,
  "md-flag-outline": 62168,
  "md-flag-sharp": 62169,
  "md-flame": 62170,
  "md-flame-outline": 62171,
  "md-flame-sharp": 62172,
  "md-flash": 62173,
  "md-flash-off": 62174,
  "md-flash-off-outline": 62175,
  "md-flash-off-sharp": 62176,
  "md-flash-outline": 62177,
  "md-flash-sharp": 62178,
  "md-flashlight": 62179,
  "md-flashlight-outline": 62180,
  "md-flashlight-sharp": 62181,
  "md-flask": 62182,
  "md-flask-outline": 62183,
  "md-flask-sharp": 62184,
  "md-flower": 62185,
  "md-flower-outline": 62186,
  "md-flower-sharp": 62187,
  "md-folder": 62188,
  "md-folder-open": 62189,
  "md-folder-open-outline": 62190,
  "md-folder-open-sharp": 62191,
  "md-folder-outline": 62192,
  "md-folder-sharp": 62193,
  "md-football": 62194,
  "md-football-outline": 62195,
  "md-football-sharp": 62196,
  "md-funnel": 62197,
  "md-funnel-outline": 62198,
  "md-funnel-sharp": 62199,
  "md-game-controller": 62200,
  "md-game-controller-outline": 62201,
  "md-game-controller-sharp": 62202,
  "md-gift": 62203,
  "md-gift-outline": 62204,
  "md-gift-sharp": 62205,
  "md-git-branch": 62206,
  "md-git-branch-outline": 62207,
  "md-git-branch-sharp": 62208,
  "md-git-commit": 62209,
  "md-git-commit-outline": 62210,
  "md-git-commit-sharp": 62211,
  "md-git-compare": 62212,
  "md-git-compare-outline": 62213,
  "md-git-compare-sharp": 62214,
  "md-git-merge": 62215,
  "md-git-merge-outline": 62216,
  "md-git-merge-sharp": 62217,
  "md-git-network": 62218,
  "md-git-network-outline": 62219,
  "md-git-network-sharp": 62220,
  "md-git-pull-request": 62221,
  "md-git-pull-request-outline": 62222,
  "md-git-pull-request-sharp": 62223,
  "md-glasses": 62224,
  "md-glasses-outline": 62225,
  "md-glasses-sharp": 62226,
  "md-globe": 62227,
  "md-globe-outline": 62228,
  "md-globe-sharp": 62229,
  "md-golf": 62230,
  "md-golf-outline": 62231,
  "md-golf-sharp": 62232,
  "md-grid": 62233,
  "md-grid-outline": 62234,
  "md-grid-sharp": 62235,
  "md-hammer": 62236,
  "md-hammer-outline": 62237,
  "md-hammer-sharp": 62238,
  "md-hand-left": 62239,
  "md-hand-left-outline": 62240,
  "md-hand-left-sharp": 62241,
  "md-hand-right": 62242,
  "md-hand-right-outline": 62243,
  "md-hand-right-sharp": 62244,
  "md-happy": 62245,
  "md-happy-outline": 62246,
  "md-happy-sharp": 62247,
  "md-hardware-chip": 62248,
  "md-hardware-chip-outline": 62249,
  "md-hardware-chip-sharp": 62250,
  "md-headset": 62251,
  "md-headset-outline": 62252,
  "md-headset-sharp": 62253,
  "md-heart": 62254,
  "md-heart-circle": 62255,
  "md-heart-circle-outline": 62256,
  "md-heart-circle-sharp": 62257,
  "md-heart-dislike": 62258,
  "md-heart-dislike-circle": 62259,
  "md-heart-dislike-circle-outline": 62260,
  "md-heart-dislike-circle-sharp": 62261,
  "md-heart-dislike-outline": 62262,
  "md-heart-dislike-sharp": 62263,
  "md-heart-half": 62264,
  "md-heart-half-outline": 62265,
  "md-heart-half-sharp": 62266,
  "md-heart-outline": 62267,
  "md-heart-sharp": 62268,
  "md-help": 62269,
  "md-help-buoy": 62270,
  "md-help-buoy-outline": 62271,
  "md-help-buoy-sharp": 62272,
  "md-help-circle": 62273,
  "md-help-circle-outline": 62274,
  "md-help-circle-sharp": 62275,
  "md-help-outline": 62276,
  "md-help-sharp": 62277,
  "md-home": 62278,
  "md-home-outline": 62279,
  "md-home-sharp": 62280,
  "md-hourglass": 62281,
  "md-hourglass-outline": 62282,
  "md-hourglass-sharp": 62283,
  "md-ice-cream": 62284,
  "md-ice-cream-outline": 62285,
  "md-ice-cream-sharp": 62286,
  "md-image": 62287,
  "md-image-outline": 62288,
  "md-image-sharp": 62289,
  "md-images": 62290,
  "md-images-outline": 62291,
  "md-images-sharp": 62292,
  "md-infinite": 62293,
  "md-infinite-outline": 62294,
  "md-infinite-sharp": 62295,
  "md-information": 62296,
  "md-information-circle": 62297,
  "md-information-circle-outline": 62298,
  "md-information-circle-sharp": 62299,
  "md-information-outline": 62300,
  "md-information-sharp": 62301,
  "md-journal": 62302,
  "md-journal-outline": 62303,
  "md-journal-sharp": 62304,
  "md-key": 62305,
  "md-key-outline": 62306,
  "md-key-sharp": 62307,
  "md-keypad": 62308,
  "md-keypad-outline": 62309,
  "md-keypad-sharp": 62310,
  "md-language": 62311,
  "md-language-outline": 62312,
  "md-language-sharp": 62313,
  "md-laptop": 62314,
  "md-laptop-outline": 62315,
  "md-laptop-sharp": 62316,
  "md-layers": 62317,
  "md-layers-outline": 62318,
  "md-layers-sharp": 62319,
  "md-leaf": 62320,
  "md-leaf-outline": 62321,
  "md-leaf-sharp": 62322,
  "md-library": 62323,
  "md-library-outline": 62324,
  "md-library-sharp": 62325,
  "md-link": 62326,
  "md-link-outline": 62327,
  "md-link-sharp": 62328,
  "md-list": 62329,
  "md-list-circle": 62330,
  "md-list-circle-outline": 62331,
  "md-list-circle-sharp": 62332,
  "md-list-outline": 62333,
  "md-list-sharp": 62334,
  "md-locate": 62335,
  "md-locate-outline": 62336,
  "md-locate-sharp": 62337,
  "md-location": 62338,
  "md-location-outline": 62339,
  "md-location-sharp": 62340,
  "md-lock-closed": 62341,
  "md-lock-closed-outline": 62342,
  "md-lock-closed-sharp": 62343,
  "md-lock-open": 62344,
  "md-lock-open-outline": 62345,
  "md-lock-open-sharp": 62346,
  "md-log-in": 62347,
  "md-log-in-outline": 62348,
  "md-log-in-sharp": 62349,
  "md-log-out": 62350,
  "md-log-out-outline": 62351,
  "md-log-out-sharp": 62352,
  "md-logo-amazon": 62353,
  "md-logo-amplify": 62354,
  "md-logo-android": 62355,
  "md-logo-angular": 62356,
  "md-logo-apple": 62357,
  "md-logo-apple-appstore": 62358,
  "md-logo-bitbucket": 62359,
  "md-logo-bitcoin": 62360,
  "md-logo-buffer": 62361,
  "md-logo-capacitor": 62362,
  "md-logo-chrome": 62363,
  "md-logo-closed-captioning": 62364,
  "md-logo-codepen": 62365,
  "md-logo-css3": 62366,
  "md-logo-designernews": 62367,
  "md-logo-dribbble": 62368,
  "md-logo-dropbox": 62369,
  "md-logo-edge": 62370,
  "md-logo-electron": 62371,
  "md-logo-euro": 62372,
  "md-logo-facebook": 62373,
  "md-logo-firebase": 62374,
  "md-logo-firefox": 62375,
  "md-logo-flickr": 62376,
  "md-logo-foursquare": 62377,
  "md-logo-github": 62378,
  "md-logo-google": 62379,
  "md-logo-google-playstore": 62380,
  "md-logo-hackernews": 62381,
  "md-logo-html5": 62382,
  "md-logo-instagram": 62383,
  "md-logo-ionic": 62384,
  "md-logo-ionitron": 62385,
  "md-logo-javascript": 62386,
  "md-logo-laravel": 62387,
  "md-logo-linkedin": 62388,
  "md-logo-markdown": 62389,
  "md-logo-no-smoking": 62390,
  "md-logo-nodejs": 62391,
  "md-logo-npm": 62392,
  "md-logo-octocat": 62393,
  "md-logo-pinterest": 62394,
  "md-logo-playstation": 62395,
  "md-logo-pwa": 62396,
  "md-logo-python": 62397,
  "md-logo-react": 62398,
  "md-logo-reddit": 62399,
  "md-logo-rss": 62400,
  "md-logo-sass": 62401,
  "md-logo-skype": 62402,
  "md-logo-slack": 62403,
  "md-logo-snapchat": 62404,
  "md-logo-stackoverflow": 62405,
  "md-logo-steam": 62406,
  "md-logo-stencil": 62407,
  "md-logo-tumblr": 62408,
  "md-logo-tux": 62409,
  "md-logo-twitch": 62410,
  "md-logo-twitter": 62411,
  "md-logo-usd": 62412,
  "md-logo-vimeo": 62413,
  "md-logo-vk": 62414,
  "md-logo-vue": 62415,
  "md-logo-web-component": 62416,
  "md-logo-whatsapp": 62417,
  "md-logo-windows": 62418,
  "md-logo-wordpress": 62419,
  "md-logo-xbox": 62420,
  "md-logo-xing": 62421,
  "md-logo-yahoo": 62422,
  "md-logo-yen": 62423,
  "md-logo-youtube": 62424,
  "md-magnet": 62425,
  "md-magnet-outline": 62426,
  "md-magnet-sharp": 62427,
  "md-mail": 62428,
  "md-mail-open": 62429,
  "md-mail-open-outline": 62430,
  "md-mail-open-sharp": 62431,
  "md-mail-outline": 62432,
  "md-mail-sharp": 62433,
  "md-mail-unread": 62434,
  "md-mail-unread-outline": 62435,
  "md-mail-unread-sharp": 62436,
  "md-male": 62437,
  "md-male-female": 62438,
  "md-male-female-outline": 62439,
  "md-male-female-sharp": 62440,
  "md-male-outline": 62441,
  "md-male-sharp": 62442,
  "md-man": 62443,
  "md-man-outline": 62444,
  "md-man-sharp": 62445,
  "md-map": 62446,
  "md-map-outline": 62447,
  "md-map-sharp": 62448,
  "md-medal": 62449,
  "md-medal-outline": 62450,
  "md-medal-sharp": 62451,
  "md-medical": 62452,
  "md-medical-outline": 62453,
  "md-medical-sharp": 62454,
  "md-medkit": 62455,
  "md-medkit-outline": 62456,
  "md-medkit-sharp": 62457,
  "md-megaphone": 62458,
  "md-megaphone-outline": 62459,
  "md-megaphone-sharp": 62460,
  "md-menu": 62461,
  "md-menu-outline": 62462,
  "md-menu-sharp": 62463,
  "md-mic": 62464,
  "md-mic-circle": 62465,
  "md-mic-circle-outline": 62466,
  "md-mic-circle-sharp": 62467,
  "md-mic-off": 62468,
  "md-mic-off-circle": 62469,
  "md-mic-off-circle-outline": 62470,
  "md-mic-off-circle-sharp": 62471,
  "md-mic-off-outline": 62472,
  "md-mic-off-sharp": 62473,
  "md-mic-outline": 62474,
  "md-mic-sharp": 62475,
  "md-moon": 62476,
  "md-moon-outline": 62477,
  "md-moon-sharp": 62478,
  "md-move": 62479,
  "md-move-outline": 62480,
  "md-move-sharp": 62481,
  "md-musical-note": 62482,
  "md-musical-note-outline": 62483,
  "md-musical-note-sharp": 62484,
  "md-musical-notes": 62485,
  "md-musical-notes-outline": 62486,
  "md-musical-notes-sharp": 62487,
  "md-navigate": 62488,
  "md-navigate-circle": 62489,
  "md-navigate-circle-outline": 62490,
  "md-navigate-circle-sharp": 62491,
  "md-navigate-outline": 62492,
  "md-navigate-sharp": 62493,
  "md-newspaper": 62494,
  "md-newspaper-outline": 62495,
  "md-newspaper-sharp": 62496,
  "md-notifications": 62497,
  "md-notifications-circle": 62498,
  "md-notifications-circle-outline": 62499,
  "md-notifications-circle-sharp": 62500,
  "md-notifications-off": 62501,
  "md-notifications-off-circle": 62502,
  "md-notifications-off-circle-outline": 62503,
  "md-notifications-off-circle-sharp": 62504,
  "md-notifications-off-outline": 62505,
  "md-notifications-off-sharp": 62506,
  "md-notifications-outline": 62507,
  "md-notifications-sharp": 62508,
  "md-nuclear": 62509,
  "md-nuclear-outline": 62510,
  "md-nuclear-sharp": 62511,
  "md-nutrition": 62512,
  "md-nutrition-outline": 62513,
  "md-nutrition-sharp": 62514,
  "md-open": 62515,
  "md-open-outline": 62516,
  "md-open-sharp": 62517,
  "md-options": 62518,
  "md-options-outline": 62519,
  "md-options-sharp": 62520,
  "md-paper-plane": 62521,
  "md-paper-plane-outline": 62522,
  "md-paper-plane-sharp": 62523,
  "md-partly-sunny": 62524,
  "md-partly-sunny-outline": 62525,
  "md-partly-sunny-sharp": 62526,
  "md-pause": 62527,
  "md-pause-circle": 62528,
  "md-pause-circle-outline": 62529,
  "md-pause-circle-sharp": 62530,
  "md-pause-outline": 62531,
  "md-pause-sharp": 62532,
  "md-paw": 62533,
  "md-paw-outline": 62534,
  "md-paw-sharp": 62535,
  "md-pencil": 62536,
  "md-pencil-outline": 62537,
  "md-pencil-sharp": 62538,
  "md-people": 62539,
  "md-people-circle": 62540,
  "md-people-circle-outline": 62541,
  "md-people-circle-sharp": 62542,
  "md-people-outline": 62543,
  "md-people-sharp": 62544,
  "md-person": 62545,
  "md-person-add": 62546,
  "md-person-add-outline": 62547,
  "md-person-add-sharp": 62548,
  "md-person-circle": 62549,
  "md-person-circle-outline": 62550,
  "md-person-circle-sharp": 62551,
  "md-person-outline": 62552,
  "md-person-remove": 62553,
  "md-person-remove-outline": 62554,
  "md-person-remove-sharp": 62555,
  "md-person-sharp": 62556,
  "md-phone-landscape": 62557,
  "md-phone-landscape-outline": 62558,
  "md-phone-landscape-sharp": 62559,
  "md-phone-portrait": 62560,
  "md-phone-portrait-outline": 62561,
  "md-phone-portrait-sharp": 62562,
  "md-pie-chart": 62563,
  "md-pie-chart-outline": 62564,
  "md-pie-chart-sharp": 62565,
  "md-pin": 62566,
  "md-pin-outline": 62567,
  "md-pin-sharp": 62568,
  "md-pint": 62569,
  "md-pint-outline": 62570,
  "md-pint-sharp": 62571,
  "md-pizza": 62572,
  "md-pizza-outline": 62573,
  "md-pizza-sharp": 62574,
  "md-planet": 62575,
  "md-planet-outline": 62576,
  "md-planet-sharp": 62577,
  "md-play": 62578,
  "md-play-back": 62579,
  "md-play-back-circle": 62580,
  "md-play-back-circle-outline": 62581,
  "md-play-back-circle-sharp": 62582,
  "md-play-back-outline": 62583,
  "md-play-back-sharp": 62584,
  "md-play-circle": 62585,
  "md-play-circle-outline": 62586,
  "md-play-circle-sharp": 62587,
  "md-play-forward": 62588,
  "md-play-forward-circle": 62589,
  "md-play-forward-circle-outline": 62590,
  "md-play-forward-circle-sharp": 62591,
  "md-play-forward-outline": 62592,
  "md-play-forward-sharp": 62593,
  "md-play-outline": 62594,
  "md-play-sharp": 62595,
  "md-play-skip-back": 62596,
  "md-play-skip-back-circle": 62597,
  "md-play-skip-back-circle-outline": 62598,
  "md-play-skip-back-circle-sharp": 62599,
  "md-play-skip-back-outline": 62600,
  "md-play-skip-back-sharp": 62601,
  "md-play-skip-forward": 62602,
  "md-play-skip-forward-circle": 62603,
  "md-play-skip-forward-circle-outline": 62604,
  "md-play-skip-forward-circle-sharp": 62605,
  "md-play-skip-forward-outline": 62606,
  "md-play-skip-forward-sharp": 62607,
  "md-podium": 62608,
  "md-podium-outline": 62609,
  "md-podium-sharp": 62610,
  "md-power": 62611,
  "md-power-outline": 62612,
  "md-power-sharp": 62613,
  "md-pricetag": 62614,
  "md-pricetag-outline": 62615,
  "md-pricetag-sharp": 62616,
  "md-pricetags": 62617,
  "md-pricetags-outline": 62618,
  "md-pricetags-sharp": 62619,
  "md-print": 62620,
  "md-print-outline": 62621,
  "md-print-sharp": 62622,
  "md-pulse": 62623,
  "md-pulse-outline": 62624,
  "md-pulse-sharp": 62625,
  "md-push": 62626,
  "md-push-outline": 62627,
  "md-push-sharp": 62628,
  "md-qr-code": 62629,
  "md-qr-code-outline": 62630,
  "md-qr-code-sharp": 62631,
  "md-radio": 62632,
  "md-radio-button-off": 62633,
  "md-radio-button-off-outline": 62634,
  "md-radio-button-off-sharp": 62635,
  "md-radio-button-on": 62636,
  "md-radio-button-on-outline": 62637,
  "md-radio-button-on-sharp": 62638,
  "md-radio-outline": 62639,
  "md-radio-sharp": 62640,
  "md-rainy": 62641,
  "md-rainy-outline": 62642,
  "md-rainy-sharp": 62643,
  "md-reader": 62644,
  "md-reader-outline": 62645,
  "md-reader-sharp": 62646,
  "md-receipt": 62647,
  "md-receipt-outline": 62648,
  "md-receipt-sharp": 62649,
  "md-recording": 62650,
  "md-recording-outline": 62651,
  "md-recording-sharp": 62652,
  "md-refresh": 62653,
  "md-refresh-circle": 62654,
  "md-refresh-circle-outline": 62655,
  "md-refresh-circle-sharp": 62656,
  "md-refresh-outline": 62657,
  "md-refresh-sharp": 62658,
  "md-reload": 62659,
  "md-reload-circle": 62660,
  "md-reload-circle-outline": 62661,
  "md-reload-circle-sharp": 62662,
  "md-reload-outline": 62663,
  "md-reload-sharp": 62664,
  "md-remove": 62665,
  "md-remove-circle": 62666,
  "md-remove-circle-outline": 62667,
  "md-remove-circle-sharp": 62668,
  "md-remove-outline": 62669,
  "md-remove-sharp": 62670,
  "md-reorder-four": 62671,
  "md-reorder-four-outline": 62672,
  "md-reorder-four-sharp": 62673,
  "md-reorder-three": 62674,
  "md-reorder-three-outline": 62675,
  "md-reorder-three-sharp": 62676,
  "md-reorder-two": 62677,
  "md-reorder-two-outline": 62678,
  "md-reorder-two-sharp": 62679,
  "md-repeat": 62680,
  "md-repeat-outline": 62681,
  "md-repeat-sharp": 62682,
  "md-resize": 62683,
  "md-resize-outline": 62684,
  "md-resize-sharp": 62685,
  "md-restaurant": 62686,
  "md-restaurant-outline": 62687,
  "md-restaurant-sharp": 62688,
  "md-return-down-back": 62689,
  "md-return-down-back-outline": 62690,
  "md-return-down-back-sharp": 62691,
  "md-return-down-forward": 62692,
  "md-return-down-forward-outline": 62693,
  "md-return-down-forward-sharp": 62694,
  "md-return-up-back": 62695,
  "md-return-up-back-outline": 62696,
  "md-return-up-back-sharp": 62697,
  "md-return-up-forward": 62698,
  "md-return-up-forward-outline": 62699,
  "md-return-up-forward-sharp": 62700,
  "md-ribbon": 62701,
  "md-ribbon-outline": 62702,
  "md-ribbon-sharp": 62703,
  "md-rocket": 62704,
  "md-rocket-outline": 62705,
  "md-rocket-sharp": 62706,
  "md-rose": 62707,
  "md-rose-outline": 62708,
  "md-rose-sharp": 62709,
  "md-sad": 62710,
  "md-sad-outline": 62711,
  "md-sad-sharp": 62712,
  "md-save": 62713,
  "md-save-outline": 62714,
  "md-save-sharp": 62715,
  "md-scan": 62716,
  "md-scan-circle": 62717,
  "md-scan-circle-outline": 62718,
  "md-scan-circle-sharp": 62719,
  "md-scan-outline": 62720,
  "md-scan-sharp": 62721,
  "md-school": 62722,
  "md-school-outline": 62723,
  "md-school-sharp": 62724,
  "md-search": 62725,
  "md-search-circle": 62726,
  "md-search-circle-outline": 62727,
  "md-search-circle-sharp": 62728,
  "md-search-outline": 62729,
  "md-search-sharp": 62730,
  "md-send": 62731,
  "md-send-outline": 62732,
  "md-send-sharp": 62733,
  "md-server": 62734,
  "md-server-outline": 62735,
  "md-server-sharp": 62736,
  "md-settings": 62737,
  "md-settings-outline": 62738,
  "md-settings-sharp": 62739,
  "md-shapes": 62740,
  "md-shapes-outline": 62741,
  "md-shapes-sharp": 62742,
  "md-share": 62743,
  "md-share-outline": 62744,
  "md-share-sharp": 62745,
  "md-share-social": 62746,
  "md-share-social-outline": 62747,
  "md-share-social-sharp": 62748,
  "md-shield": 62749,
  "md-shield-checkmark": 62750,
  "md-shield-checkmark-outline": 62751,
  "md-shield-checkmark-sharp": 62752,
  "md-shield-outline": 62753,
  "md-shield-sharp": 62754,
  "md-shirt": 62755,
  "md-shirt-outline": 62756,
  "md-shirt-sharp": 62757,
  "md-shuffle": 62758,
  "md-shuffle-outline": 62759,
  "md-shuffle-sharp": 62760,
  "md-skull": 62761,
  "md-skull-outline": 62762,
  "md-skull-sharp": 62763,
  "md-snow": 62764,
  "md-snow-outline": 62765,
  "md-snow-sharp": 62766,
  "md-speedometer": 62767,
  "md-speedometer-outline": 62768,
  "md-speedometer-sharp": 62769,
  "md-square": 62770,
  "md-square-outline": 62771,
  "md-square-sharp": 62772,
  "md-star": 62773,
  "md-star-half": 62774,
  "md-star-half-outline": 62775,
  "md-star-half-sharp": 62776,
  "md-star-outline": 62777,
  "md-star-sharp": 62778,
  "md-stats-chart": 62779,
  "md-stats-chart-outline": 62780,
  "md-stats-chart-sharp": 62781,
  "md-stop": 62782,
  "md-stop-circle": 62783,
  "md-stop-circle-outline": 62784,
  "md-stop-circle-sharp": 62785,
  "md-stop-outline": 62786,
  "md-stop-sharp": 62787,
  "md-stopwatch": 62788,
  "md-stopwatch-outline": 62789,
  "md-stopwatch-sharp": 62790,
  "md-subway": 62791,
  "md-subway-outline": 62792,
  "md-subway-sharp": 62793,
  "md-sunny": 62794,
  "md-sunny-outline": 62795,
  "md-sunny-sharp": 62796,
  "md-swap-horizontal": 62797,
  "md-swap-horizontal-outline": 62798,
  "md-swap-horizontal-sharp": 62799,
  "md-swap-vertical": 62800,
  "md-swap-vertical-outline": 62801,
  "md-swap-vertical-sharp": 62802,
  "md-sync": 62803,
  "md-sync-circle": 62804,
  "md-sync-circle-outline": 62805,
  "md-sync-circle-sharp": 62806,
  "md-sync-outline": 62807,
  "md-sync-sharp": 62808,
  "md-tablet-landscape": 62809,
  "md-tablet-landscape-outline": 62810,
  "md-tablet-landscape-sharp": 62811,
  "md-tablet-portrait": 62812,
  "md-tablet-portrait-outline": 62813,
  "md-tablet-portrait-sharp": 62814,
  "md-tennisball": 62815,
  "md-tennisball-outline": 62816,
  "md-tennisball-sharp": 62817,
  "md-terminal": 62818,
  "md-terminal-outline": 62819,
  "md-terminal-sharp": 62820,
  "md-text": 62821,
  "md-text-outline": 62822,
  "md-text-sharp": 62823,
  "md-thermometer": 62824,
  "md-thermometer-outline": 62825,
  "md-thermometer-sharp": 62826,
  "md-thumbs-down": 62827,
  "md-thumbs-down-outline": 62828,
  "md-thumbs-down-sharp": 62829,
  "md-thumbs-up": 62830,
  "md-thumbs-up-outline": 62831,
  "md-thumbs-up-sharp": 62832,
  "md-thunderstorm": 62833,
  "md-thunderstorm-outline": 62834,
  "md-thunderstorm-sharp": 62835,
  "md-time": 62836,
  "md-time-outline": 62837,
  "md-time-sharp": 62838,
  "md-timer": 62839,
  "md-timer-outline": 62840,
  "md-timer-sharp": 62841,
  "md-today": 62842,
  "md-today-outline": 62843,
  "md-today-sharp": 62844,
  "md-toggle": 62845,
  "md-toggle-outline": 62846,
  "md-toggle-sharp": 62847,
  "md-trail-sign": 62848,
  "md-trail-sign-outline": 62849,
  "md-trail-sign-sharp": 62850,
  "md-train": 62851,
  "md-train-outline": 62852,
  "md-train-sharp": 62853,
  "md-transgender": 62854,
  "md-transgender-outline": 62855,
  "md-transgender-sharp": 62856,
  "md-trash": 62857,
  "md-trash-bin": 62858,
  "md-trash-bin-outline": 62859,
  "md-trash-bin-sharp": 62860,
  "md-trash-outline": 62861,
  "md-trash-sharp": 62862,
  "md-trending-down": 62863,
  "md-trending-down-outline": 62864,
  "md-trending-down-sharp": 62865,
  "md-trending-up": 62866,
  "md-trending-up-outline": 62867,
  "md-trending-up-sharp": 62868,
  "md-triangle": 62869,
  "md-triangle-outline": 62870,
  "md-triangle-sharp": 62871,
  "md-trophy": 62872,
  "md-trophy-outline": 62873,
  "md-trophy-sharp": 62874,
  "md-tv": 62875,
  "md-tv-outline": 62876,
  "md-tv-sharp": 62877,
  "md-umbrella": 62878,
  "md-umbrella-outline": 62879,
  "md-umbrella-sharp": 62880,
  "md-videocam": 62881,
  "md-videocam-outline": 62882,
  "md-videocam-sharp": 62883,
  "md-volume-high": 62884,
  "md-volume-high-outline": 62885,
  "md-volume-high-sharp": 62886,
  "md-volume-low": 62887,
  "md-volume-low-outline": 62888,
  "md-volume-low-sharp": 62889,
  "md-volume-medium": 62890,
  "md-volume-medium-outline": 62891,
  "md-volume-medium-sharp": 62892,
  "md-volume-mute": 62893,
  "md-volume-mute-outline": 62894,
  "md-volume-mute-sharp": 62895,
  "md-volume-off": 62896,
  "md-volume-off-outline": 62897,
  "md-volume-off-sharp": 62898,
  "md-walk": 62899,
  "md-walk-outline": 62900,
  "md-walk-sharp": 62901,
  "md-wallet": 62902,
  "md-wallet-outline": 62903,
  "md-wallet-sharp": 62904,
  "md-warning": 62905,
  "md-warning-outline": 62906,
  "md-warning-sharp": 62907,
  "md-watch": 62908,
  "md-watch-outline": 62909,
  "md-watch-sharp": 62910,
  "md-water": 62911,
  "md-water-outline": 62912,
  "md-water-sharp": 62913,
  "md-wifi": 62914,
  "md-wifi-outline": 62915,
  "md-wifi-sharp": 62916,
  "md-wine": 62917,
  "md-wine-outline": 62918,
  "md-wine-sharp": 62919,
  "md-woman": 62920,
  "md-woman-outline": 62921,
  "md-woman-sharp": 62922
}
;
},10247,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Foundation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Foundation.default, 'fontcustom', 'Foundation.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10250,[14305,10130,10253]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "address-book": 61696,
  "alert": 61697,
  "align-center": 61698,
  "align-justify": 61699,
  "align-left": 61700,
  "align-right": 61701,
  "anchor": 61702,
  "annotate": 61703,
  "archive": 61704,
  "arrow-down": 61705,
  "arrow-left": 61706,
  "arrow-right": 61707,
  "arrow-up": 61708,
  "arrows-compress": 61709,
  "arrows-expand": 61710,
  "arrows-in": 61711,
  "arrows-out": 61712,
  "asl": 61713,
  "asterisk": 61714,
  "at-sign": 61715,
  "background-color": 61716,
  "battery-empty": 61717,
  "battery-full": 61718,
  "battery-half": 61719,
  "bitcoin-circle": 61720,
  "bitcoin": 61721,
  "blind": 61722,
  "bluetooth": 61723,
  "bold": 61724,
  "book-bookmark": 61725,
  "book": 61726,
  "bookmark": 61727,
  "braille": 61728,
  "burst-new": 61729,
  "burst-sale": 61730,
  "burst": 61731,
  "calendar": 61732,
  "camera": 61733,
  "check": 61734,
  "checkbox": 61735,
  "clipboard-notes": 61736,
  "clipboard-pencil": 61737,
  "clipboard": 61738,
  "clock": 61739,
  "closed-caption": 61740,
  "cloud": 61741,
  "comment-minus": 61742,
  "comment-quotes": 61743,
  "comment-video": 61744,
  "comment": 61745,
  "comments": 61746,
  "compass": 61747,
  "contrast": 61748,
  "credit-card": 61749,
  "crop": 61750,
  "crown": 61751,
  "css3": 61752,
  "database": 61753,
  "die-five": 61754,
  "die-four": 61755,
  "die-one": 61756,
  "die-six": 61757,
  "die-three": 61758,
  "die-two": 61759,
  "dislike": 61760,
  "dollar-bill": 61761,
  "dollar": 61762,
  "download": 61763,
  "eject": 61764,
  "elevator": 61765,
  "euro": 61766,
  "eye": 61767,
  "fast-forward": 61768,
  "female-symbol": 61769,
  "female": 61770,
  "filter": 61771,
  "first-aid": 61772,
  "flag": 61773,
  "folder-add": 61774,
  "folder-lock": 61775,
  "folder": 61776,
  "foot": 61777,
  "foundation": 61778,
  "graph-bar": 61779,
  "graph-horizontal": 61780,
  "graph-pie": 61781,
  "graph-trend": 61782,
  "guide-dog": 61783,
  "hearing-aid": 61784,
  "heart": 61785,
  "home": 61786,
  "html5": 61787,
  "indent-less": 61788,
  "indent-more": 61789,
  "info": 61790,
  "italic": 61791,
  "key": 61792,
  "laptop": 61793,
  "layout": 61794,
  "lightbulb": 61795,
  "like": 61796,
  "link": 61797,
  "list-bullet": 61798,
  "list-number": 61799,
  "list-thumbnails": 61800,
  "list": 61801,
  "lock": 61802,
  "loop": 61803,
  "magnifying-glass": 61804,
  "mail": 61805,
  "male-female": 61806,
  "male-symbol": 61807,
  "male": 61808,
  "map": 61809,
  "marker": 61810,
  "megaphone": 61811,
  "microphone": 61812,
  "minus-circle": 61813,
  "minus": 61814,
  "mobile-signal": 61815,
  "mobile": 61816,
  "monitor": 61817,
  "mountains": 61818,
  "music": 61819,
  "next": 61820,
  "no-dogs": 61821,
  "no-smoking": 61822,
  "page-add": 61823,
  "page-copy": 61824,
  "page-csv": 61825,
  "page-delete": 61826,
  "page-doc": 61827,
  "page-edit": 61828,
  "page-export-csv": 61829,
  "page-export-doc": 61830,
  "page-export-pdf": 61831,
  "page-export": 61832,
  "page-filled": 61833,
  "page-multiple": 61834,
  "page-pdf": 61835,
  "page-remove": 61836,
  "page-search": 61837,
  "page": 61838,
  "paint-bucket": 61839,
  "paperclip": 61840,
  "pause": 61841,
  "paw": 61842,
  "paypal": 61843,
  "pencil": 61844,
  "photo": 61845,
  "play-circle": 61846,
  "play-video": 61847,
  "play": 61848,
  "plus": 61849,
  "pound": 61850,
  "power": 61851,
  "previous": 61852,
  "price-tag": 61853,
  "pricetag-multiple": 61854,
  "print": 61855,
  "prohibited": 61856,
  "projection-screen": 61857,
  "puzzle": 61858,
  "quote": 61859,
  "record": 61860,
  "refresh": 61861,
  "results-demographics": 61862,
  "results": 61863,
  "rewind-ten": 61864,
  "rewind": 61865,
  "rss": 61866,
  "safety-cone": 61867,
  "save": 61868,
  "share": 61869,
  "sheriff-badge": 61870,
  "shield": 61871,
  "shopping-bag": 61872,
  "shopping-cart": 61873,
  "shuffle": 61874,
  "skull": 61875,
  "social-500px": 61876,
  "social-adobe": 61877,
  "social-amazon": 61878,
  "social-android": 61879,
  "social-apple": 61880,
  "social-behance": 61881,
  "social-bing": 61882,
  "social-blogger": 61883,
  "social-delicious": 61884,
  "social-designer-news": 61885,
  "social-deviant-art": 61886,
  "social-digg": 61887,
  "social-dribbble": 61888,
  "social-drive": 61889,
  "social-dropbox": 61890,
  "social-evernote": 61891,
  "social-facebook": 61892,
  "social-flickr": 61893,
  "social-forrst": 61894,
  "social-foursquare": 61895,
  "social-game-center": 61896,
  "social-github": 61897,
  "social-google-plus": 61898,
  "social-hacker-news": 61899,
  "social-hi5": 61900,
  "social-instagram": 61901,
  "social-joomla": 61902,
  "social-lastfm": 61903,
  "social-linkedin": 61904,
  "social-medium": 61905,
  "social-myspace": 61906,
  "social-orkut": 61907,
  "social-path": 61908,
  "social-picasa": 61909,
  "social-pinterest": 61910,
  "social-rdio": 61911,
  "social-reddit": 61912,
  "social-skillshare": 61913,
  "social-skype": 61914,
  "social-smashing-mag": 61915,
  "social-snapchat": 61916,
  "social-spotify": 61917,
  "social-squidoo": 61918,
  "social-stack-overflow": 61919,
  "social-steam": 61920,
  "social-stumbleupon": 61921,
  "social-treehouse": 61922,
  "social-tumblr": 61923,
  "social-twitter": 61924,
  "social-vimeo": 61925,
  "social-windows": 61926,
  "social-xbox": 61927,
  "social-yahoo": 61928,
  "social-yelp": 61929,
  "social-youtube": 61930,
  "social-zerply": 61931,
  "social-zurb": 61932,
  "sound": 61933,
  "star": 61934,
  "stop": 61935,
  "strikethrough": 61936,
  "subscript": 61937,
  "superscript": 61938,
  "tablet-landscape": 61939,
  "tablet-portrait": 61940,
  "target-two": 61941,
  "target": 61942,
  "telephone-accessible": 61943,
  "telephone": 61944,
  "text-color": 61945,
  "thumbnails": 61946,
  "ticket": 61947,
  "torso-business": 61948,
  "torso-female": 61949,
  "torso": 61950,
  "torsos-all-female": 61951,
  "torsos-all": 61952,
  "torsos-female-male": 61953,
  "torsos-male-female": 61954,
  "torsos": 61955,
  "trash": 61956,
  "trees": 61957,
  "trophy": 61958,
  "underline": 61959,
  "universal-access": 61960,
  "unlink": 61961,
  "unlock": 61962,
  "upload-cloud": 61963,
  "upload": 61964,
  "usb": 61965,
  "video": 61966,
  "volume-none": 61967,
  "volume-strike": 61968,
  "volume": 61969,
  "web": 61970,
  "wheelchair": 61971,
  "widget": 61972,
  "wrench": 61973,
  "x-circle": 61974,
  "x": 61975,
  "yen": 61976,
  "zoom-in": 61977,
  "zoom-out": 61978
};
},10253,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _EvilIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_EvilIcons.default, 'EvilIcons', 'EvilIcons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10256,[14305,10130,10259]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "archive": 61696,
  "arrow-down": 61697,
  "arrow-left": 61698,
  "arrow-right": 61699,
  "arrow-up": 61700,
  "bell": 61701,
  "calendar": 61702,
  "camera": 61703,
  "cart": 61704,
  "chart": 61705,
  "check": 61706,
  "chevron-down": 61707,
  "chevron-left": 61708,
  "chevron-right": 61709,
  "chevron-up": 61710,
  "clock": 61711,
  "close": 61712,
  "close-o": 61713,
  "comment": 61714,
  "credit-card": 61715,
  "envelope": 61716,
  "exclamation": 61717,
  "external-link": 61718,
  "eye": 61719,
  "gear": 61720,
  "heart": 61721,
  "image": 61722,
  "like": 61723,
  "link": 61724,
  "location": 61725,
  "lock": 61726,
  "minus": 61727,
  "navicon": 61728,
  "paperclip": 61729,
  "pencil": 61730,
  "play": 61731,
  "plus": 61732,
  "pointer": 61733,
  "question": 61734,
  "redo": 61735,
  "refresh": 61736,
  "retweet": 61737,
  "sc-facebook": 61738,
  "sc-github": 61739,
  "sc-google-plus": 61740,
  "sc-instagram": 61741,
  "sc-linkedin": 61742,
  "sc-odnoklassniki": 61743,
  "sc-pinterest": 61744,
  "sc-skype": 61745,
  "sc-soundcloud": 61746,
  "sc-telegram": 61747,
  "sc-tumblr": 61748,
  "sc-twitter": 61749,
  "sc-vimeo": 61750,
  "sc-vk": 61751,
  "sc-youtube": 61752,
  "search": 61753,
  "share-apple": 61754,
  "share-google": 61755,
  "spinner": 61756,
  "spinner-2": 61757,
  "spinner-3": 61758,
  "star": 61759,
  "tag": 61760,
  "trash": 61761,
  "trophy": 61762,
  "undo": 61763,
  "unlock": 61764,
  "user": 61765
};
},10259,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Entypo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Entypo.default, 'Entypo', 'Entypo.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10262,[14305,10130,10265]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "500px": 61696,
  "500px-with-circle": 61697,
  "add-to-list": 61698,
  "add-user": 61699,
  "address": 61700,
  "adjust": 61701,
  "air": 61702,
  "aircraft": 61703,
  "aircraft-landing": 61704,
  "aircraft-take-off": 61705,
  "align-bottom": 61706,
  "align-horizontal-middle": 61707,
  "align-left": 61708,
  "align-right": 61709,
  "align-top": 61710,
  "align-vertical-middle": 61711,
  "app-store": 61712,
  "archive": 61713,
  "area-graph": 61714,
  "arrow-bold-down": 61715,
  "arrow-bold-left": 61716,
  "arrow-bold-right": 61717,
  "arrow-bold-up": 61718,
  "arrow-down": 61719,
  "arrow-left": 61720,
  "arrow-long-down": 61721,
  "arrow-long-left": 61722,
  "arrow-long-right": 61723,
  "arrow-long-up": 61724,
  "arrow-right": 61725,
  "arrow-up": 61726,
  "arrow-with-circle-down": 61727,
  "arrow-with-circle-left": 61728,
  "arrow-with-circle-right": 61729,
  "arrow-with-circle-up": 61730,
  "attachment": 61731,
  "awareness-ribbon": 61732,
  "back": 61733,
  "back-in-time": 61734,
  "baidu": 61735,
  "bar-graph": 61736,
  "basecamp": 61737,
  "battery": 61738,
  "beamed-note": 61739,
  "behance": 61740,
  "bell": 61741,
  "blackboard": 61742,
  "block": 61743,
  "book": 61744,
  "bookmark": 61745,
  "bookmarks": 61746,
  "bowl": 61747,
  "box": 61748,
  "briefcase": 61749,
  "browser": 61750,
  "brush": 61751,
  "bucket": 61752,
  "bug": 61753,
  "cake": 61754,
  "calculator": 61755,
  "calendar": 61756,
  "camera": 61757,
  "ccw": 61758,
  "chat": 61759,
  "check": 61760,
  "chevron-down": 61761,
  "chevron-left": 61762,
  "chevron-right": 61763,
  "chevron-small-down": 61764,
  "chevron-small-left": 61765,
  "chevron-small-right": 61766,
  "chevron-small-up": 61767,
  "chevron-thin-down": 61768,
  "chevron-thin-left": 61769,
  "chevron-thin-right": 61770,
  "chevron-thin-up": 61771,
  "chevron-up": 61772,
  "chevron-with-circle-down": 61773,
  "chevron-with-circle-left": 61774,
  "chevron-with-circle-right": 61775,
  "chevron-with-circle-up": 61776,
  "circle": 61777,
  "circle-with-cross": 61778,
  "circle-with-minus": 61779,
  "circle-with-plus": 61780,
  "circular-graph": 61781,
  "clapperboard": 61782,
  "classic-computer": 61783,
  "clipboard": 61784,
  "clock": 61785,
  "cloud": 61786,
  "code": 61787,
  "cog": 61788,
  "colours": 61789,
  "compass": 61790,
  "controller-fast-backward": 61791,
  "controller-fast-forward": 61792,
  "controller-jump-to-start": 61793,
  "controller-next": 61794,
  "controller-paus": 61795,
  "controller-play": 61796,
  "controller-record": 61797,
  "controller-stop": 61798,
  "controller-volume": 61799,
  "copy": 61800,
  "creative-cloud": 61801,
  "creative-commons": 61802,
  "creative-commons-attribution": 61803,
  "creative-commons-noderivs": 61804,
  "creative-commons-noncommercial-eu": 61805,
  "creative-commons-noncommercial-us": 61806,
  "creative-commons-public-domain": 61807,
  "creative-commons-remix": 61808,
  "creative-commons-share": 61809,
  "creative-commons-sharealike": 61810,
  "credit": 61811,
  "credit-card": 61812,
  "crop": 61813,
  "cross": 61814,
  "cup": 61815,
  "cw": 61816,
  "cycle": 61817,
  "database": 61818,
  "dial-pad": 61819,
  "direction": 61820,
  "document": 61821,
  "document-landscape": 61822,
  "documents": 61823,
  "dot-single": 61824,
  "dots-three-horizontal": 61825,
  "dots-three-vertical": 61826,
  "dots-two-horizontal": 61827,
  "dots-two-vertical": 61828,
  "download": 61829,
  "dribbble": 61830,
  "dribbble-with-circle": 61831,
  "drink": 61832,
  "drive": 61833,
  "drop": 61834,
  "dropbox": 61835,
  "edit": 61836,
  "email": 61837,
  "emoji-flirt": 61838,
  "emoji-happy": 61839,
  "emoji-neutral": 61840,
  "emoji-sad": 61841,
  "erase": 61842,
  "eraser": 61843,
  "evernote": 61844,
  "export": 61845,
  "eye": 61846,
  "eye-with-line": 61847,
  "facebook": 61848,
  "facebook-with-circle": 61849,
  "feather": 61850,
  "fingerprint": 61851,
  "flag": 61852,
  "flash": 61853,
  "flashlight": 61854,
  "flat-brush": 61855,
  "flattr": 61856,
  "flickr": 61857,
  "flickr-with-circle": 61858,
  "flow-branch": 61859,
  "flow-cascade": 61860,
  "flow-line": 61861,
  "flow-parallel": 61862,
  "flow-tree": 61863,
  "flower": 61864,
  "folder": 61865,
  "folder-images": 61866,
  "folder-music": 61867,
  "folder-video": 61868,
  "forward": 61869,
  "foursquare": 61870,
  "funnel": 61871,
  "game-controller": 61872,
  "gauge": 61873,
  "github": 61874,
  "github-with-circle": 61875,
  "globe": 61876,
  "google-": 61877,
  "google--with-circle": 61878,
  "google-drive": 61879,
  "google-hangouts": 61880,
  "google-play": 61881,
  "graduation-cap": 61882,
  "grid": 61883,
  "grooveshark": 61884,
  "hair-cross": 61885,
  "hand": 61886,
  "heart": 61887,
  "heart-outlined": 61888,
  "help": 61889,
  "help-with-circle": 61890,
  "home": 61891,
  "hour-glass": 61892,
  "houzz": 61893,
  "icloud": 61894,
  "image": 61895,
  "image-inverted": 61896,
  "images": 61897,
  "inbox": 61898,
  "infinity": 61899,
  "info": 61900,
  "info-with-circle": 61901,
  "instagram": 61902,
  "instagram-with-circle": 61903,
  "install": 61904,
  "key": 61905,
  "keyboard": 61906,
  "lab-flask": 61907,
  "landline": 61908,
  "language": 61909,
  "laptop": 61910,
  "lastfm": 61911,
  "lastfm-with-circle": 61912,
  "layers": 61913,
  "leaf": 61914,
  "level-down": 61915,
  "level-up": 61916,
  "lifebuoy": 61917,
  "light-bulb": 61918,
  "light-down": 61919,
  "light-up": 61920,
  "line-graph": 61921,
  "link": 61922,
  "linkedin": 61923,
  "linkedin-with-circle": 61924,
  "list": 61925,
  "location": 61926,
  "location-pin": 61927,
  "lock": 61928,
  "lock-open": 61929,
  "log-out": 61930,
  "login": 61931,
  "loop": 61932,
  "magnet": 61933,
  "magnifying-glass": 61934,
  "mail": 61935,
  "mail-with-circle": 61936,
  "man": 61937,
  "map": 61938,
  "mask": 61939,
  "medal": 61940,
  "medium": 61941,
  "medium-with-circle": 61942,
  "megaphone": 61943,
  "menu": 61944,
  "merge": 61945,
  "message": 61946,
  "mic": 61947,
  "minus": 61948,
  "mixi": 61949,
  "mobile": 61950,
  "modern-mic": 61951,
  "moon": 61952,
  "mouse": 61953,
  "mouse-pointer": 61954,
  "music": 61955,
  "network": 61956,
  "new": 61957,
  "new-message": 61958,
  "news": 61959,
  "newsletter": 61960,
  "note": 61961,
  "notification": 61962,
  "notifications-off": 61963,
  "old-mobile": 61964,
  "old-phone": 61965,
  "onedrive": 61966,
  "open-book": 61967,
  "palette": 61968,
  "paper-plane": 61969,
  "paypal": 61970,
  "pencil": 61971,
  "phone": 61972,
  "picasa": 61973,
  "pie-chart": 61974,
  "pin": 61975,
  "pinterest": 61976,
  "pinterest-with-circle": 61977,
  "plus": 61978,
  "popup": 61979,
  "power-plug": 61980,
  "price-ribbon": 61981,
  "price-tag": 61982,
  "print": 61983,
  "progress-empty": 61984,
  "progress-full": 61985,
  "progress-one": 61986,
  "progress-two": 61987,
  "publish": 61988,
  "qq": 61989,
  "qq-with-circle": 61990,
  "quote": 61991,
  "radio": 61992,
  "raft": 61993,
  "raft-with-circle": 61994,
  "rainbow": 61995,
  "rdio": 61996,
  "rdio-with-circle": 61997,
  "remove-user": 61998,
  "renren": 61999,
  "reply": 62000,
  "reply-all": 62001,
  "resize-100-": 62002,
  "resize-full-screen": 62003,
  "retweet": 62004,
  "rocket": 62005,
  "round-brush": 62006,
  "rss": 62007,
  "ruler": 62008,
  "save": 62009,
  "scissors": 62010,
  "scribd": 62011,
  "select-arrows": 62012,
  "share": 62013,
  "share-alternative": 62014,
  "shareable": 62015,
  "shield": 62016,
  "shop": 62017,
  "shopping-bag": 62018,
  "shopping-basket": 62019,
  "shopping-cart": 62020,
  "shuffle": 62021,
  "signal": 62022,
  "sina-weibo": 62023,
  "skype": 62024,
  "skype-with-circle": 62025,
  "slideshare": 62026,
  "smashing": 62027,
  "sound": 62028,
  "sound-mix": 62029,
  "sound-mute": 62030,
  "soundcloud": 62031,
  "sports-club": 62032,
  "spotify": 62033,
  "spotify-with-circle": 62034,
  "spreadsheet": 62035,
  "squared-cross": 62036,
  "squared-minus": 62037,
  "squared-plus": 62038,
  "star": 62039,
  "star-outlined": 62040,
  "stopwatch": 62041,
  "stumbleupon": 62042,
  "stumbleupon-with-circle": 62043,
  "suitcase": 62044,
  "swap": 62045,
  "swarm": 62046,
  "sweden": 62047,
  "switch": 62048,
  "tablet": 62049,
  "tablet-mobile-combo": 62050,
  "tag": 62051,
  "text": 62052,
  "text-document": 62053,
  "text-document-inverted": 62054,
  "thermometer": 62055,
  "thumbs-down": 62056,
  "thumbs-up": 62057,
  "thunder-cloud": 62058,
  "ticket": 62059,
  "time-slot": 62060,
  "tools": 62061,
  "traffic-cone": 62062,
  "trash": 62063,
  "tree": 62064,
  "triangle-down": 62065,
  "triangle-left": 62066,
  "triangle-right": 62067,
  "triangle-up": 62068,
  "tripadvisor": 62069,
  "trophy": 62070,
  "tumblr": 62071,
  "tumblr-with-circle": 62072,
  "tv": 62073,
  "twitter": 62074,
  "twitter-with-circle": 62075,
  "typing": 62076,
  "uninstall": 62077,
  "unread": 62078,
  "untag": 62079,
  "upload": 62080,
  "upload-to-cloud": 62081,
  "user": 62082,
  "users": 62083,
  "v-card": 62084,
  "video": 62085,
  "video-camera": 62086,
  "vimeo": 62087,
  "vimeo-with-circle": 62088,
  "vine": 62089,
  "vine-with-circle": 62090,
  "vinyl": 62091,
  "vk": 62092,
  "vk-alternitive": 62093,
  "vk-with-circle": 62094,
  "voicemail": 62095,
  "wallet": 62096,
  "warning": 62097,
  "water": 62098,
  "windows-store": 62099,
  "xing": 62100,
  "xing-with-circle": 62101,
  "yelp": 62102,
  "youko": 62103,
  "youko-with-circle": 62104,
  "youtube": 62105,
  "youtube-with-circle": 62106
};
},10265,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _FontAwesome = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_FontAwesome.default, 'FontAwesome', 'FontAwesome.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10268,[14305,10130,10271]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "glass": 61440,
  "music": 61441,
  "search": 61442,
  "envelope-o": 61443,
  "heart": 61444,
  "star": 61445,
  "star-o": 61446,
  "user": 61447,
  "film": 61448,
  "th-large": 61449,
  "th": 61450,
  "th-list": 61451,
  "check": 61452,
  "remove": 61453,
  "close": 61453,
  "times": 61453,
  "search-plus": 61454,
  "search-minus": 61456,
  "power-off": 61457,
  "signal": 61458,
  "gear": 61459,
  "cog": 61459,
  "trash-o": 61460,
  "home": 61461,
  "file-o": 61462,
  "clock-o": 61463,
  "road": 61464,
  "download": 61465,
  "arrow-circle-o-down": 61466,
  "arrow-circle-o-up": 61467,
  "inbox": 61468,
  "play-circle-o": 61469,
  "rotate-right": 61470,
  "repeat": 61470,
  "refresh": 61473,
  "list-alt": 61474,
  "lock": 61475,
  "flag": 61476,
  "headphones": 61477,
  "volume-off": 61478,
  "volume-down": 61479,
  "volume-up": 61480,
  "qrcode": 61481,
  "barcode": 61482,
  "tag": 61483,
  "tags": 61484,
  "book": 61485,
  "bookmark": 61486,
  "print": 61487,
  "camera": 61488,
  "font": 61489,
  "bold": 61490,
  "italic": 61491,
  "text-height": 61492,
  "text-width": 61493,
  "align-left": 61494,
  "align-center": 61495,
  "align-right": 61496,
  "align-justify": 61497,
  "list": 61498,
  "dedent": 61499,
  "outdent": 61499,
  "indent": 61500,
  "video-camera": 61501,
  "photo": 61502,
  "image": 61502,
  "picture-o": 61502,
  "pencil": 61504,
  "map-marker": 61505,
  "adjust": 61506,
  "tint": 61507,
  "edit": 61508,
  "pencil-square-o": 61508,
  "share-square-o": 61509,
  "check-square-o": 61510,
  "arrows": 61511,
  "step-backward": 61512,
  "fast-backward": 61513,
  "backward": 61514,
  "play": 61515,
  "pause": 61516,
  "stop": 61517,
  "forward": 61518,
  "fast-forward": 61520,
  "step-forward": 61521,
  "eject": 61522,
  "chevron-left": 61523,
  "chevron-right": 61524,
  "plus-circle": 61525,
  "minus-circle": 61526,
  "times-circle": 61527,
  "check-circle": 61528,
  "question-circle": 61529,
  "info-circle": 61530,
  "crosshairs": 61531,
  "times-circle-o": 61532,
  "check-circle-o": 61533,
  "ban": 61534,
  "arrow-left": 61536,
  "arrow-right": 61537,
  "arrow-up": 61538,
  "arrow-down": 61539,
  "mail-forward": 61540,
  "share": 61540,
  "expand": 61541,
  "compress": 61542,
  "plus": 61543,
  "minus": 61544,
  "asterisk": 61545,
  "exclamation-circle": 61546,
  "gift": 61547,
  "leaf": 61548,
  "fire": 61549,
  "eye": 61550,
  "eye-slash": 61552,
  "warning": 61553,
  "exclamation-triangle": 61553,
  "plane": 61554,
  "calendar": 61555,
  "random": 61556,
  "comment": 61557,
  "magnet": 61558,
  "chevron-up": 61559,
  "chevron-down": 61560,
  "retweet": 61561,
  "shopping-cart": 61562,
  "folder": 61563,
  "folder-open": 61564,
  "arrows-v": 61565,
  "arrows-h": 61566,
  "bar-chart-o": 61568,
  "bar-chart": 61568,
  "twitter-square": 61569,
  "facebook-square": 61570,
  "camera-retro": 61571,
  "key": 61572,
  "gears": 61573,
  "cogs": 61573,
  "comments": 61574,
  "thumbs-o-up": 61575,
  "thumbs-o-down": 61576,
  "star-half": 61577,
  "heart-o": 61578,
  "sign-out": 61579,
  "linkedin-square": 61580,
  "thumb-tack": 61581,
  "external-link": 61582,
  "sign-in": 61584,
  "trophy": 61585,
  "github-square": 61586,
  "upload": 61587,
  "lemon-o": 61588,
  "phone": 61589,
  "square-o": 61590,
  "bookmark-o": 61591,
  "phone-square": 61592,
  "twitter": 61593,
  "facebook-f": 61594,
  "facebook": 61594,
  "github": 61595,
  "unlock": 61596,
  "credit-card": 61597,
  "feed": 61598,
  "rss": 61598,
  "hdd-o": 61600,
  "bullhorn": 61601,
  "bell": 61683,
  "certificate": 61603,
  "hand-o-right": 61604,
  "hand-o-left": 61605,
  "hand-o-up": 61606,
  "hand-o-down": 61607,
  "arrow-circle-left": 61608,
  "arrow-circle-right": 61609,
  "arrow-circle-up": 61610,
  "arrow-circle-down": 61611,
  "globe": 61612,
  "wrench": 61613,
  "tasks": 61614,
  "filter": 61616,
  "briefcase": 61617,
  "arrows-alt": 61618,
  "group": 61632,
  "users": 61632,
  "chain": 61633,
  "link": 61633,
  "cloud": 61634,
  "flask": 61635,
  "cut": 61636,
  "scissors": 61636,
  "copy": 61637,
  "files-o": 61637,
  "paperclip": 61638,
  "save": 61639,
  "floppy-o": 61639,
  "square": 61640,
  "navicon": 61641,
  "reorder": 61641,
  "bars": 61641,
  "list-ul": 61642,
  "list-ol": 61643,
  "strikethrough": 61644,
  "underline": 61645,
  "table": 61646,
  "magic": 61648,
  "truck": 61649,
  "pinterest": 61650,
  "pinterest-square": 61651,
  "google-plus-square": 61652,
  "google-plus": 61653,
  "money": 61654,
  "caret-down": 61655,
  "caret-up": 61656,
  "caret-left": 61657,
  "caret-right": 61658,
  "columns": 61659,
  "unsorted": 61660,
  "sort": 61660,
  "sort-down": 61661,
  "sort-desc": 61661,
  "sort-up": 61662,
  "sort-asc": 61662,
  "envelope": 61664,
  "linkedin": 61665,
  "rotate-left": 61666,
  "undo": 61666,
  "legal": 61667,
  "gavel": 61667,
  "dashboard": 61668,
  "tachometer": 61668,
  "comment-o": 61669,
  "comments-o": 61670,
  "flash": 61671,
  "bolt": 61671,
  "sitemap": 61672,
  "umbrella": 61673,
  "paste": 61674,
  "clipboard": 61674,
  "lightbulb-o": 61675,
  "exchange": 61676,
  "cloud-download": 61677,
  "cloud-upload": 61678,
  "user-md": 61680,
  "stethoscope": 61681,
  "suitcase": 61682,
  "bell-o": 61602,
  "coffee": 61684,
  "cutlery": 61685,
  "file-text-o": 61686,
  "building-o": 61687,
  "hospital-o": 61688,
  "ambulance": 61689,
  "medkit": 61690,
  "fighter-jet": 61691,
  "beer": 61692,
  "h-square": 61693,
  "plus-square": 61694,
  "angle-double-left": 61696,
  "angle-double-right": 61697,
  "angle-double-up": 61698,
  "angle-double-down": 61699,
  "angle-left": 61700,
  "angle-right": 61701,
  "angle-up": 61702,
  "angle-down": 61703,
  "desktop": 61704,
  "laptop": 61705,
  "tablet": 61706,
  "mobile-phone": 61707,
  "mobile": 61707,
  "circle-o": 61708,
  "quote-left": 61709,
  "quote-right": 61710,
  "spinner": 61712,
  "circle": 61713,
  "mail-reply": 61714,
  "reply": 61714,
  "github-alt": 61715,
  "folder-o": 61716,
  "folder-open-o": 61717,
  "smile-o": 61720,
  "frown-o": 61721,
  "meh-o": 61722,
  "gamepad": 61723,
  "keyboard-o": 61724,
  "flag-o": 61725,
  "flag-checkered": 61726,
  "terminal": 61728,
  "code": 61729,
  "mail-reply-all": 61730,
  "reply-all": 61730,
  "star-half-empty": 61731,
  "star-half-full": 61731,
  "star-half-o": 61731,
  "location-arrow": 61732,
  "crop": 61733,
  "code-fork": 61734,
  "unlink": 61735,
  "chain-broken": 61735,
  "question": 61736,
  "info": 61737,
  "exclamation": 61738,
  "superscript": 61739,
  "subscript": 61740,
  "eraser": 61741,
  "puzzle-piece": 61742,
  "microphone": 61744,
  "microphone-slash": 61745,
  "shield": 61746,
  "calendar-o": 61747,
  "fire-extinguisher": 61748,
  "rocket": 61749,
  "maxcdn": 61750,
  "chevron-circle-left": 61751,
  "chevron-circle-right": 61752,
  "chevron-circle-up": 61753,
  "chevron-circle-down": 61754,
  "html5": 61755,
  "css3": 61756,
  "anchor": 61757,
  "unlock-alt": 61758,
  "bullseye": 61760,
  "ellipsis-h": 61761,
  "ellipsis-v": 61762,
  "rss-square": 61763,
  "play-circle": 61764,
  "ticket": 61765,
  "minus-square": 61766,
  "minus-square-o": 61767,
  "level-up": 61768,
  "level-down": 61769,
  "check-square": 61770,
  "pencil-square": 61771,
  "external-link-square": 61772,
  "share-square": 61773,
  "compass": 61774,
  "toggle-down": 61776,
  "caret-square-o-down": 61776,
  "toggle-up": 61777,
  "caret-square-o-up": 61777,
  "toggle-right": 61778,
  "caret-square-o-right": 61778,
  "euro": 61779,
  "eur": 61779,
  "gbp": 61780,
  "dollar": 61781,
  "usd": 61781,
  "rupee": 61782,
  "inr": 61782,
  "cny": 61783,
  "rmb": 61783,
  "yen": 61783,
  "jpy": 61783,
  "ruble": 61784,
  "rouble": 61784,
  "rub": 61784,
  "won": 61785,
  "krw": 61785,
  "bitcoin": 61786,
  "btc": 61786,
  "file": 61787,
  "file-text": 61788,
  "sort-alpha-asc": 61789,
  "sort-alpha-desc": 61790,
  "sort-amount-asc": 61792,
  "sort-amount-desc": 61793,
  "sort-numeric-asc": 61794,
  "sort-numeric-desc": 61795,
  "thumbs-up": 61796,
  "thumbs-down": 61797,
  "youtube-square": 61798,
  "youtube": 61799,
  "xing": 61800,
  "xing-square": 61801,
  "youtube-play": 61802,
  "dropbox": 61803,
  "stack-overflow": 61804,
  "instagram": 61805,
  "flickr": 61806,
  "adn": 61808,
  "bitbucket": 61809,
  "bitbucket-square": 61810,
  "tumblr": 61811,
  "tumblr-square": 61812,
  "long-arrow-down": 61813,
  "long-arrow-up": 61814,
  "long-arrow-left": 61815,
  "long-arrow-right": 61816,
  "apple": 61817,
  "windows": 61818,
  "android": 61819,
  "linux": 61820,
  "dribbble": 61821,
  "skype": 61822,
  "foursquare": 61824,
  "trello": 61825,
  "female": 61826,
  "male": 61827,
  "gittip": 61828,
  "gratipay": 61828,
  "sun-o": 61829,
  "moon-o": 61830,
  "archive": 61831,
  "bug": 61832,
  "vk": 61833,
  "weibo": 61834,
  "renren": 61835,
  "pagelines": 61836,
  "stack-exchange": 61837,
  "arrow-circle-o-right": 61838,
  "arrow-circle-o-left": 61840,
  "toggle-left": 61841,
  "caret-square-o-left": 61841,
  "dot-circle-o": 61842,
  "wheelchair": 61843,
  "vimeo-square": 61844,
  "turkish-lira": 61845,
  "try": 61845,
  "plus-square-o": 61846,
  "space-shuttle": 61847,
  "slack": 61848,
  "envelope-square": 61849,
  "wordpress": 61850,
  "openid": 61851,
  "institution": 61852,
  "bank": 61852,
  "university": 61852,
  "mortar-board": 61853,
  "graduation-cap": 61853,
  "yahoo": 61854,
  "google": 61856,
  "reddit": 61857,
  "reddit-square": 61858,
  "stumbleupon-circle": 61859,
  "stumbleupon": 61860,
  "delicious": 61861,
  "digg": 61862,
  "pied-piper-pp": 61863,
  "pied-piper-alt": 61864,
  "drupal": 61865,
  "joomla": 61866,
  "language": 61867,
  "fax": 61868,
  "building": 61869,
  "child": 61870,
  "paw": 61872,
  "spoon": 61873,
  "cube": 61874,
  "cubes": 61875,
  "behance": 61876,
  "behance-square": 61877,
  "steam": 61878,
  "steam-square": 61879,
  "recycle": 61880,
  "automobile": 61881,
  "car": 61881,
  "cab": 61882,
  "taxi": 61882,
  "tree": 61883,
  "spotify": 61884,
  "deviantart": 61885,
  "soundcloud": 61886,
  "database": 61888,
  "file-pdf-o": 61889,
  "file-word-o": 61890,
  "file-excel-o": 61891,
  "file-powerpoint-o": 61892,
  "file-photo-o": 61893,
  "file-picture-o": 61893,
  "file-image-o": 61893,
  "file-zip-o": 61894,
  "file-archive-o": 61894,
  "file-sound-o": 61895,
  "file-audio-o": 61895,
  "file-movie-o": 61896,
  "file-video-o": 61896,
  "file-code-o": 61897,
  "vine": 61898,
  "codepen": 61899,
  "jsfiddle": 61900,
  "life-bouy": 61901,
  "life-buoy": 61901,
  "life-saver": 61901,
  "support": 61901,
  "life-ring": 61901,
  "circle-o-notch": 61902,
  "ra": 61904,
  "resistance": 61904,
  "rebel": 61904,
  "ge": 61905,
  "empire": 61905,
  "git-square": 61906,
  "git": 61907,
  "y-combinator-square": 61908,
  "yc-square": 61908,
  "hacker-news": 61908,
  "tencent-weibo": 61909,
  "qq": 61910,
  "wechat": 61911,
  "weixin": 61911,
  "send": 61912,
  "paper-plane": 61912,
  "send-o": 61913,
  "paper-plane-o": 61913,
  "history": 61914,
  "circle-thin": 61915,
  "header": 61916,
  "paragraph": 61917,
  "sliders": 61918,
  "share-alt": 61920,
  "share-alt-square": 61921,
  "bomb": 61922,
  "soccer-ball-o": 61923,
  "futbol-o": 61923,
  "tty": 61924,
  "binoculars": 61925,
  "plug": 61926,
  "slideshare": 61927,
  "twitch": 61928,
  "yelp": 61929,
  "newspaper-o": 61930,
  "wifi": 61931,
  "calculator": 61932,
  "paypal": 61933,
  "google-wallet": 61934,
  "cc-visa": 61936,
  "cc-mastercard": 61937,
  "cc-discover": 61938,
  "cc-amex": 61939,
  "cc-paypal": 61940,
  "cc-stripe": 61941,
  "bell-slash": 61942,
  "bell-slash-o": 61943,
  "trash": 61944,
  "copyright": 61945,
  "at": 61946,
  "eyedropper": 61947,
  "paint-brush": 61948,
  "birthday-cake": 61949,
  "area-chart": 61950,
  "pie-chart": 61952,
  "line-chart": 61953,
  "lastfm": 61954,
  "lastfm-square": 61955,
  "toggle-off": 61956,
  "toggle-on": 61957,
  "bicycle": 61958,
  "bus": 61959,
  "ioxhost": 61960,
  "angellist": 61961,
  "cc": 61962,
  "shekel": 61963,
  "sheqel": 61963,
  "ils": 61963,
  "meanpath": 61964,
  "buysellads": 61965,
  "connectdevelop": 61966,
  "dashcube": 61968,
  "forumbee": 61969,
  "leanpub": 61970,
  "sellsy": 61971,
  "shirtsinbulk": 61972,
  "simplybuilt": 61973,
  "skyatlas": 61974,
  "cart-plus": 61975,
  "cart-arrow-down": 61976,
  "diamond": 61977,
  "ship": 61978,
  "user-secret": 61979,
  "motorcycle": 61980,
  "street-view": 61981,
  "heartbeat": 61982,
  "venus": 61985,
  "mars": 61986,
  "mercury": 61987,
  "intersex": 61988,
  "transgender": 61988,
  "transgender-alt": 61989,
  "venus-double": 61990,
  "mars-double": 61991,
  "venus-mars": 61992,
  "mars-stroke": 61993,
  "mars-stroke-v": 61994,
  "mars-stroke-h": 61995,
  "neuter": 61996,
  "genderless": 61997,
  "facebook-official": 62000,
  "pinterest-p": 62001,
  "whatsapp": 62002,
  "server": 62003,
  "user-plus": 62004,
  "user-times": 62005,
  "hotel": 62006,
  "bed": 62006,
  "viacoin": 62007,
  "train": 62008,
  "subway": 62009,
  "medium": 62010,
  "yc": 62011,
  "y-combinator": 62011,
  "optin-monster": 62012,
  "opencart": 62013,
  "expeditedssl": 62014,
  "battery-4": 62016,
  "battery": 62016,
  "battery-full": 62016,
  "battery-3": 62017,
  "battery-three-quarters": 62017,
  "battery-2": 62018,
  "battery-half": 62018,
  "battery-1": 62019,
  "battery-quarter": 62019,
  "battery-0": 62020,
  "battery-empty": 62020,
  "mouse-pointer": 62021,
  "i-cursor": 62022,
  "object-group": 62023,
  "object-ungroup": 62024,
  "sticky-note": 62025,
  "sticky-note-o": 62026,
  "cc-jcb": 62027,
  "cc-diners-club": 62028,
  "clone": 62029,
  "balance-scale": 62030,
  "hourglass-o": 62032,
  "hourglass-1": 62033,
  "hourglass-start": 62033,
  "hourglass-2": 62034,
  "hourglass-half": 62034,
  "hourglass-3": 62035,
  "hourglass-end": 62035,
  "hourglass": 62036,
  "hand-grab-o": 62037,
  "hand-rock-o": 62037,
  "hand-stop-o": 62038,
  "hand-paper-o": 62038,
  "hand-scissors-o": 62039,
  "hand-lizard-o": 62040,
  "hand-spock-o": 62041,
  "hand-pointer-o": 62042,
  "hand-peace-o": 62043,
  "trademark": 62044,
  "registered": 62045,
  "creative-commons": 62046,
  "gg": 62048,
  "gg-circle": 62049,
  "tripadvisor": 62050,
  "odnoklassniki": 62051,
  "odnoklassniki-square": 62052,
  "get-pocket": 62053,
  "wikipedia-w": 62054,
  "safari": 62055,
  "chrome": 62056,
  "firefox": 62057,
  "opera": 62058,
  "internet-explorer": 62059,
  "tv": 62060,
  "television": 62060,
  "contao": 62061,
  "500px": 62062,
  "amazon": 62064,
  "calendar-plus-o": 62065,
  "calendar-minus-o": 62066,
  "calendar-times-o": 62067,
  "calendar-check-o": 62068,
  "industry": 62069,
  "map-pin": 62070,
  "map-signs": 62071,
  "map-o": 62072,
  "map": 62073,
  "commenting": 62074,
  "commenting-o": 62075,
  "houzz": 62076,
  "vimeo": 62077,
  "black-tie": 62078,
  "fonticons": 62080,
  "reddit-alien": 62081,
  "edge": 62082,
  "credit-card-alt": 62083,
  "codiepie": 62084,
  "modx": 62085,
  "fort-awesome": 62086,
  "usb": 62087,
  "product-hunt": 62088,
  "mixcloud": 62089,
  "scribd": 62090,
  "pause-circle": 62091,
  "pause-circle-o": 62092,
  "stop-circle": 62093,
  "stop-circle-o": 62094,
  "shopping-bag": 62096,
  "shopping-basket": 62097,
  "hashtag": 62098,
  "bluetooth": 62099,
  "bluetooth-b": 62100,
  "percent": 62101,
  "gitlab": 62102,
  "wpbeginner": 62103,
  "wpforms": 62104,
  "envira": 62105,
  "universal-access": 62106,
  "wheelchair-alt": 62107,
  "question-circle-o": 62108,
  "blind": 62109,
  "audio-description": 62110,
  "volume-control-phone": 62112,
  "braille": 62113,
  "assistive-listening-systems": 62114,
  "asl-interpreting": 62115,
  "american-sign-language-interpreting": 62115,
  "deafness": 62116,
  "hard-of-hearing": 62116,
  "deaf": 62116,
  "glide": 62117,
  "glide-g": 62118,
  "signing": 62119,
  "sign-language": 62119,
  "low-vision": 62120,
  "viadeo": 62121,
  "viadeo-square": 62122,
  "snapchat": 62123,
  "snapchat-ghost": 62124,
  "snapchat-square": 62125,
  "pied-piper": 62126,
  "first-order": 62128,
  "yoast": 62129,
  "themeisle": 62130,
  "google-plus-circle": 62131,
  "google-plus-official": 62131,
  "fa": 62132,
  "font-awesome": 62132,
  "handshake-o": 62133,
  "envelope-open": 62134,
  "envelope-open-o": 62135,
  "linode": 62136,
  "address-book": 62137,
  "address-book-o": 62138,
  "vcard": 62139,
  "address-card": 62139,
  "vcard-o": 62140,
  "address-card-o": 62140,
  "user-circle": 62141,
  "user-circle-o": 62142,
  "user-o": 62144,
  "id-badge": 62145,
  "drivers-license": 62146,
  "id-card": 62146,
  "drivers-license-o": 62147,
  "id-card-o": 62147,
  "quora": 62148,
  "free-code-camp": 62149,
  "telegram": 62150,
  "thermometer-4": 62151,
  "thermometer": 62151,
  "thermometer-full": 62151,
  "thermometer-3": 62152,
  "thermometer-three-quarters": 62152,
  "thermometer-2": 62153,
  "thermometer-half": 62153,
  "thermometer-1": 62154,
  "thermometer-quarter": 62154,
  "thermometer-0": 62155,
  "thermometer-empty": 62155,
  "shower": 62156,
  "bathtub": 62157,
  "s15": 62157,
  "bath": 62157,
  "podcast": 62158,
  "window-maximize": 62160,
  "window-minimize": 62161,
  "window-restore": 62162,
  "times-rectangle": 62163,
  "window-close": 62163,
  "times-rectangle-o": 62164,
  "window-close-o": 62164,
  "bandcamp": 62165,
  "grav": 62166,
  "etsy": 62167,
  "imdb": 62168,
  "ravelry": 62169,
  "eercast": 62170,
  "microchip": 62171,
  "snowflake-o": 62172,
  "superpowers": 62173,
  "wpexplorer": 62174,
  "meetup": 62176
};
},10271,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FA5Style", {
    enumerable: true,
    get: function get() {
      return _createIconSetFromFontawesome.FA5Style;
    }
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSetFromFontawesome = _$$_REQUIRE(_dependencyMap[1]);

  var _FontAwesome5Free = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _FontAwesome5Free_meta = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var iconSet = (0, _createIconSetFromFontawesome.createFA5iconSet)(_FontAwesome5Free.default, _FontAwesome5Free_meta.default, false);
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10274,[14305,10277,10283,10286]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createFA5iconSet = createFA5iconSet;
  exports.FA5Style = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _createMultiStyleIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var FA5Style = {
    regular: 'regular',
    light: 'light',
    solid: 'solid',
    brand: 'brand'
  };
  exports.FA5Style = FA5Style;

  function createFA5iconSet(glyphMap) {
    var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var pro = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var metadataKeys = Object.keys(metadata);
    var fontFamily = "FontAwesome5" + (pro ? 'Pro' : 'Free');

    function fallbackFamily(glyph) {
      for (var i = 0; i < metadataKeys.length; i += 1) {
        var family = metadataKeys[i];

        if (metadata[family].indexOf(glyph) !== -1) {
          return family === 'brands' ? 'brand' : family;
        }
      }

      return 'regular';
    }

    function glyphValidator(glyph, style) {
      var family = style === 'brand' ? 'brands' : style;
      if (metadataKeys.indexOf(family) === -1) return false;
      return metadata[family].indexOf(glyph) !== -1;
    }

    function createFontAwesomeStyle(style, fontWeight) {
      var family = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : fontFamily;
      var styleName = style;
      var fontFile = "FontAwesome5_" + (pro ? "Pro_" + styleName : styleName) + ".ttf";

      if (styleName === 'Brands') {
        styleName = 'Regular';
        fontFile = 'FontAwesome5_Brands.ttf';
      }

      return {
        fontFamily: family + "-" + styleName,
        fontFile: fontFile,
        fontStyle: _reactNative.Platform.select({
          ios: {
            fontWeight: fontWeight
          },
          default: {}
        }),
        glyphMap: glyphMap
      };
    }

    var brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome5Brands');
    var lightIcons = createFontAwesomeStyle('Light', '300');
    var regularIcons = createFontAwesomeStyle('Regular', '400');
    var solidIcons = createFontAwesomeStyle('Solid', '900');
    var Icon = (0, _createMultiStyleIconSet.default)({
      brand: brandIcons,
      light: lightIcons,
      regular: regularIcons,
      solid: solidIcons
    }, {
      defaultStyle: 'regular',
      fallbackFamily: fallbackFamily,
      glyphValidator: glyphValidator
    });
    return Icon;
  }
},10277,[14305,10133,10280]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createMultiStyleIconSet;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _createIconSet = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  function createMultiStyleIconSet(styles) {
    var optionsInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var styleNames = Object.keys(styles);

    if (styleNames.length === 0) {
      throw new Error('You need to add at least one style');
    }

    var options = (0, _objectSpread2.default)({
      defaultStyle: styleNames[0],
      fallbackFamily: function fallbackFamily() {
        return styleNames[0];
      },
      glyphValidator: function glyphValidator() {
        return true;
      }
    }, optionsInput);
    var iconSets = styleNames.reduce(function (acc, name) {
      var style = styles[name];
      acc[name] = (0, _createIconSet.default)(style.glyphMap || {}, style.fontFamily || '', style.fontFile || '', style.fontStyle || {});
      return acc;
    }, {});

    function styleFromProps(props) {
      return Object.keys(props).reduce(function (result, propName) {
        return styleNames.indexOf(propName) !== -1 && props[propName] === true ? propName : result;
      }, options.defaultStyle);
    }

    function getIconSetForProps(props) {
      var name = props.name;
      var style = styleFromProps(props);
      if (options.glyphValidator(name, style)) return iconSets[style];
      var family = options.fallbackFamily(name);

      if (styleNames.indexOf(family) === -1) {
        return options.defaultStyle;
      }

      return iconSets[family];
    }

    function selectIconClass(iconSet, iconClass) {
      return iconClass.length > 0 ? iconSet[iconClass] : iconSet;
    }

    function reduceProps(props) {
      return Object.keys(props).reduce(function (acc, prop) {
        if (styleNames.indexOf(prop) === -1) {
          acc[prop] = props[prop];
        }

        return acc;
      }, {});
    }

    function getStyledIconSet(style) {
      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      if (styleNames.indexOf(style) === -1) {
        return iconSets[options.defaultStyle];
      }

      return !name ? iconSets[styleFromProps((0, _defineProperty2.default)({}, style, true))] : getIconSetForProps((0, _defineProperty2.default)({
        name: name
      }, style, true));
    }

    function getImageSource(name) {
      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _createIconSet.DEFAULT_ICON_SIZE;
      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _createIconSet.DEFAULT_ICON_COLOR;
      var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : options.defaultStyle;
      return getStyledIconSet(style, name).getImageSource(name, size, color);
    }

    function getFontFamily() {
      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;
      return getStyledIconSet(style).getFontFamily();
    }

    function getRawGlyphMap() {
      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;
      return getStyledIconSet(style).getRawGlyphMap();
    }

    function hasIcon(name) {
      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.defaultStyle;
      return options.glyphValidator(name, style);
    }

    function createStyledIconClass() {
      var selectClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      var IconClass = function (_PureComponent) {
        (0, _inherits2.default)(IconClass, _PureComponent);

        function IconClass() {
          (0, _classCallCheck2.default)(this, IconClass);
          return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconClass).apply(this, arguments));
        }

        (0, _createClass2.default)(IconClass, [{
          key: "render",
          value: function render() {
            var selectedIconSet = getIconSetForProps(this.props);
            var SelectedIconClass = selectIconClass(selectedIconSet, selectClass);
            var props = reduceProps(this.props);
            return _react.default.createElement(SelectedIconClass, props);
          }
        }]);
        return IconClass;
      }(_react.PureComponent);

      IconClass.propTypes = styleNames.reduce(function (acc, name) {
        acc[name] = _propTypes.default.bool;
        return acc;
      }, {});
      IconClass.defaultProps = styleNames.reduce(function (acc, name) {
        acc[name] = false;
        return acc;
      }, {});
      return IconClass;
    }

    var Icon = createStyledIconClass();
    Icon.Button = createStyledIconClass('Button');
    Icon.TabBarItem = createStyledIconClass('TabBarItem');
    Icon.TabBarItemIOS = createStyledIconClass('TabBarItemIOS');
    Icon.getStyledIconSet = getStyledIconSet;
    Icon.getImageSource = getImageSource;
    Icon.getFontFamily = getFontFamily;
    Icon.getRawGlyphMap = getRawGlyphMap;
    Icon.hasIcon = hasIcon;
    return Icon;
  }
},10280,[14308,14305,14320,14323,14371,14377,14386,14317,14314,10297,10318,10130]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "500px": 62062,
  "accessible-icon": 62312,
  "accusoft": 62313,
  "acquisitions-incorporated": 63151,
  "ad": 63041,
  "address-book": 62137,
  "address-card": 62139,
  "adjust": 61506,
  "adn": 61808,
  "adobe": 63352,
  "adversal": 62314,
  "affiliatetheme": 62315,
  "air-freshener": 62928,
  "airbnb": 63540,
  "algolia": 62316,
  "align-center": 61495,
  "align-justify": 61497,
  "align-left": 61494,
  "align-right": 61496,
  "alipay": 63042,
  "allergies": 62561,
  "amazon": 62064,
  "amazon-pay": 62508,
  "ambulance": 61689,
  "american-sign-language-interpreting": 62115,
  "amilia": 62317,
  "anchor": 61757,
  "android": 61819,
  "angellist": 61961,
  "angle-double-down": 61699,
  "angle-double-left": 61696,
  "angle-double-right": 61697,
  "angle-double-up": 61698,
  "angle-down": 61703,
  "angle-left": 61700,
  "angle-right": 61701,
  "angle-up": 61702,
  "angry": 62806,
  "angrycreative": 62318,
  "angular": 62496,
  "ankh": 63044,
  "app-store": 62319,
  "app-store-ios": 62320,
  "apper": 62321,
  "apple": 61817,
  "apple-alt": 62929,
  "apple-pay": 62485,
  "archive": 61831,
  "archway": 62807,
  "arrow-alt-circle-down": 62296,
  "arrow-alt-circle-left": 62297,
  "arrow-alt-circle-right": 62298,
  "arrow-alt-circle-up": 62299,
  "arrow-circle-down": 61611,
  "arrow-circle-left": 61608,
  "arrow-circle-right": 61609,
  "arrow-circle-up": 61610,
  "arrow-down": 61539,
  "arrow-left": 61536,
  "arrow-right": 61537,
  "arrow-up": 61538,
  "arrows-alt": 61618,
  "arrows-alt-h": 62263,
  "arrows-alt-v": 62264,
  "artstation": 63354,
  "assistive-listening-systems": 62114,
  "asterisk": 61545,
  "asymmetrik": 62322,
  "at": 61946,
  "atlas": 62808,
  "atlassian": 63355,
  "atom": 62930,
  "audible": 62323,
  "audio-description": 62110,
  "autoprefixer": 62492,
  "avianex": 62324,
  "aviato": 62497,
  "award": 62809,
  "aws": 62325,
  "baby": 63356,
  "baby-carriage": 63357,
  "backspace": 62810,
  "backward": 61514,
  "bacon": 63461,
  "bahai": 63078,
  "balance-scale": 62030,
  "balance-scale-left": 62741,
  "balance-scale-right": 62742,
  "ban": 61534,
  "band-aid": 62562,
  "bandcamp": 62165,
  "barcode": 61482,
  "bars": 61641,
  "baseball-ball": 62515,
  "basketball-ball": 62516,
  "bath": 62157,
  "battery-empty": 62020,
  "battery-full": 62016,
  "battery-half": 62018,
  "battery-quarter": 62019,
  "battery-three-quarters": 62017,
  "battle-net": 63541,
  "bed": 62006,
  "beer": 61692,
  "behance": 61876,
  "behance-square": 61877,
  "bell": 61683,
  "bell-slash": 61942,
  "bezier-curve": 62811,
  "bible": 63047,
  "bicycle": 61958,
  "biking": 63562,
  "bimobject": 62328,
  "binoculars": 61925,
  "biohazard": 63360,
  "birthday-cake": 61949,
  "bitbucket": 61809,
  "bitcoin": 62329,
  "bity": 62330,
  "black-tie": 62078,
  "blackberry": 62331,
  "blender": 62743,
  "blender-phone": 63158,
  "blind": 62109,
  "blog": 63361,
  "blogger": 62332,
  "blogger-b": 62333,
  "bluetooth": 62099,
  "bluetooth-b": 62100,
  "bold": 61490,
  "bolt": 61671,
  "bomb": 61922,
  "bone": 62935,
  "bong": 62812,
  "book": 61485,
  "book-dead": 63159,
  "book-medical": 63462,
  "book-open": 62744,
  "book-reader": 62938,
  "bookmark": 61486,
  "bootstrap": 63542,
  "border-all": 63564,
  "border-none": 63568,
  "border-style": 63571,
  "bowling-ball": 62518,
  "box": 62566,
  "box-open": 62622,
  "box-tissue": 63835,
  "boxes": 62568,
  "braille": 62113,
  "brain": 62940,
  "bread-slice": 63468,
  "briefcase": 61617,
  "briefcase-medical": 62569,
  "broadcast-tower": 62745,
  "broom": 62746,
  "brush": 62813,
  "btc": 61786,
  "buffer": 63543,
  "bug": 61832,
  "building": 61869,
  "bullhorn": 61601,
  "bullseye": 61760,
  "burn": 62570,
  "buromobelexperte": 62335,
  "bus": 61959,
  "bus-alt": 62814,
  "business-time": 63050,
  "buy-n-large": 63654,
  "buysellads": 61965,
  "calculator": 61932,
  "calendar": 61747,
  "calendar-alt": 61555,
  "calendar-check": 62068,
  "calendar-day": 63363,
  "calendar-minus": 62066,
  "calendar-plus": 62065,
  "calendar-times": 62067,
  "calendar-week": 63364,
  "camera": 61488,
  "camera-retro": 61571,
  "campground": 63163,
  "canadian-maple-leaf": 63365,
  "candy-cane": 63366,
  "cannabis": 62815,
  "capsules": 62571,
  "car": 61881,
  "car-alt": 62942,
  "car-battery": 62943,
  "car-crash": 62945,
  "car-side": 62948,
  "caravan": 63743,
  "caret-down": 61655,
  "caret-left": 61657,
  "caret-right": 61658,
  "caret-square-down": 61776,
  "caret-square-left": 61841,
  "caret-square-right": 61778,
  "caret-square-up": 61777,
  "caret-up": 61656,
  "carrot": 63367,
  "cart-arrow-down": 61976,
  "cart-plus": 61975,
  "cash-register": 63368,
  "cat": 63166,
  "cc-amazon-pay": 62509,
  "cc-amex": 61939,
  "cc-apple-pay": 62486,
  "cc-diners-club": 62028,
  "cc-discover": 61938,
  "cc-jcb": 62027,
  "cc-mastercard": 61937,
  "cc-paypal": 61940,
  "cc-stripe": 61941,
  "cc-visa": 61936,
  "centercode": 62336,
  "centos": 63369,
  "certificate": 61603,
  "chair": 63168,
  "chalkboard": 62747,
  "chalkboard-teacher": 62748,
  "charging-station": 62951,
  "chart-area": 61950,
  "chart-bar": 61568,
  "chart-line": 61953,
  "chart-pie": 61952,
  "check": 61452,
  "check-circle": 61528,
  "check-double": 62816,
  "check-square": 61770,
  "cheese": 63471,
  "chess": 62521,
  "chess-bishop": 62522,
  "chess-board": 62524,
  "chess-king": 62527,
  "chess-knight": 62529,
  "chess-pawn": 62531,
  "chess-queen": 62533,
  "chess-rook": 62535,
  "chevron-circle-down": 61754,
  "chevron-circle-left": 61751,
  "chevron-circle-right": 61752,
  "chevron-circle-up": 61753,
  "chevron-down": 61560,
  "chevron-left": 61523,
  "chevron-right": 61524,
  "chevron-up": 61559,
  "child": 61870,
  "chrome": 62056,
  "chromecast": 63544,
  "church": 62749,
  "circle": 61713,
  "circle-notch": 61902,
  "city": 63055,
  "clinic-medical": 63474,
  "clipboard": 62248,
  "clipboard-check": 62572,
  "clipboard-list": 62573,
  "clock": 61463,
  "clone": 62029,
  "closed-captioning": 61962,
  "cloud": 61634,
  "cloud-download-alt": 62337,
  "cloud-meatball": 63291,
  "cloud-moon": 63171,
  "cloud-moon-rain": 63292,
  "cloud-rain": 63293,
  "cloud-showers-heavy": 63296,
  "cloud-sun": 63172,
  "cloud-sun-rain": 63299,
  "cloud-upload-alt": 62338,
  "cloudscale": 62339,
  "cloudsmith": 62340,
  "cloudversify": 62341,
  "cocktail": 62817,
  "code": 61729,
  "code-branch": 61734,
  "codepen": 61899,
  "codiepie": 62084,
  "coffee": 61684,
  "cog": 61459,
  "cogs": 61573,
  "coins": 62750,
  "columns": 61659,
  "comment": 61557,
  "comment-alt": 62074,
  "comment-dollar": 63057,
  "comment-dots": 62637,
  "comment-medical": 63477,
  "comment-slash": 62643,
  "comments": 61574,
  "comments-dollar": 63059,
  "compact-disc": 62751,
  "compass": 61774,
  "compress": 61542,
  "compress-alt": 62498,
  "compress-arrows-alt": 63372,
  "concierge-bell": 62818,
  "confluence": 63373,
  "connectdevelop": 61966,
  "contao": 62061,
  "cookie": 62819,
  "cookie-bite": 62820,
  "copy": 61637,
  "copyright": 61945,
  "cotton-bureau": 63646,
  "couch": 62648,
  "cpanel": 62344,
  "creative-commons": 62046,
  "creative-commons-by": 62695,
  "creative-commons-nc": 62696,
  "creative-commons-nc-eu": 62697,
  "creative-commons-nc-jp": 62698,
  "creative-commons-nd": 62699,
  "creative-commons-pd": 62700,
  "creative-commons-pd-alt": 62701,
  "creative-commons-remix": 62702,
  "creative-commons-sa": 62703,
  "creative-commons-sampling": 62704,
  "creative-commons-sampling-plus": 62705,
  "creative-commons-share": 62706,
  "creative-commons-zero": 62707,
  "credit-card": 61597,
  "critical-role": 63177,
  "crop": 61733,
  "crop-alt": 62821,
  "cross": 63060,
  "crosshairs": 61531,
  "crow": 62752,
  "crown": 62753,
  "crutch": 63479,
  "css3": 61756,
  "css3-alt": 62347,
  "cube": 61874,
  "cubes": 61875,
  "cut": 61636,
  "cuttlefish": 62348,
  "d-and-d": 62349,
  "d-and-d-beyond": 63178,
  "dailymotion": 63826,
  "dashcube": 61968,
  "database": 61888,
  "deaf": 62116,
  "delicious": 61861,
  "democrat": 63303,
  "deploydog": 62350,
  "deskpro": 62351,
  "desktop": 61704,
  "dev": 63180,
  "deviantart": 61885,
  "dharmachakra": 63061,
  "dhl": 63376,
  "diagnoses": 62576,
  "diaspora": 63377,
  "dice": 62754,
  "dice-d20": 63183,
  "dice-d6": 63185,
  "dice-five": 62755,
  "dice-four": 62756,
  "dice-one": 62757,
  "dice-six": 62758,
  "dice-three": 62759,
  "dice-two": 62760,
  "digg": 61862,
  "digital-ocean": 62353,
  "digital-tachograph": 62822,
  "directions": 62955,
  "discord": 62354,
  "discourse": 62355,
  "disease": 63482,
  "divide": 62761,
  "dizzy": 62823,
  "dna": 62577,
  "dochub": 62356,
  "docker": 62357,
  "dog": 63187,
  "dollar-sign": 61781,
  "dolly": 62578,
  "dolly-flatbed": 62580,
  "donate": 62649,
  "door-closed": 62762,
  "door-open": 62763,
  "dot-circle": 61842,
  "dove": 62650,
  "download": 61465,
  "draft2digital": 62358,
  "drafting-compass": 62824,
  "dragon": 63189,
  "draw-polygon": 62958,
  "dribbble": 61821,
  "dribbble-square": 62359,
  "dropbox": 61803,
  "drum": 62825,
  "drum-steelpan": 62826,
  "drumstick-bite": 63191,
  "drupal": 61865,
  "dumbbell": 62539,
  "dumpster": 63379,
  "dumpster-fire": 63380,
  "dungeon": 63193,
  "dyalog": 62361,
  "earlybirds": 62362,
  "ebay": 62708,
  "edge": 62082,
  "edit": 61508,
  "egg": 63483,
  "eject": 61522,
  "elementor": 62512,
  "ellipsis-h": 61761,
  "ellipsis-v": 61762,
  "ello": 62961,
  "ember": 62499,
  "empire": 61905,
  "envelope": 61664,
  "envelope-open": 62134,
  "envelope-open-text": 63064,
  "envelope-square": 61849,
  "envira": 62105,
  "equals": 62764,
  "eraser": 61741,
  "erlang": 62365,
  "ethereum": 62510,
  "ethernet": 63382,
  "etsy": 62167,
  "euro-sign": 61779,
  "evernote": 63545,
  "exchange-alt": 62306,
  "exclamation": 61738,
  "exclamation-circle": 61546,
  "exclamation-triangle": 61553,
  "expand": 61541,
  "expand-alt": 62500,
  "expand-arrows-alt": 62238,
  "expeditedssl": 62014,
  "external-link-alt": 62301,
  "external-link-square-alt": 62304,
  "eye": 61550,
  "eye-dropper": 61947,
  "eye-slash": 61552,
  "facebook": 61594,
  "facebook-f": 62366,
  "facebook-messenger": 62367,
  "facebook-square": 61570,
  "fan": 63587,
  "fantasy-flight-games": 63196,
  "fast-backward": 61513,
  "fast-forward": 61520,
  "faucet": 63749,
  "fax": 61868,
  "feather": 62765,
  "feather-alt": 62827,
  "fedex": 63383,
  "fedora": 63384,
  "female": 61826,
  "fighter-jet": 61691,
  "figma": 63385,
  "file": 61787,
  "file-alt": 61788,
  "file-archive": 61894,
  "file-audio": 61895,
  "file-code": 61897,
  "file-contract": 62828,
  "file-csv": 63197,
  "file-download": 62829,
  "file-excel": 61891,
  "file-export": 62830,
  "file-image": 61893,
  "file-import": 62831,
  "file-invoice": 62832,
  "file-invoice-dollar": 62833,
  "file-medical": 62583,
  "file-medical-alt": 62584,
  "file-pdf": 61889,
  "file-powerpoint": 61892,
  "file-prescription": 62834,
  "file-signature": 62835,
  "file-upload": 62836,
  "file-video": 61896,
  "file-word": 61890,
  "fill": 62837,
  "fill-drip": 62838,
  "film": 61448,
  "filter": 61616,
  "fingerprint": 62839,
  "fire": 61549,
  "fire-alt": 63460,
  "fire-extinguisher": 61748,
  "firefox": 62057,
  "firefox-browser": 63751,
  "first-aid": 62585,
  "first-order": 62128,
  "first-order-alt": 62730,
  "firstdraft": 62369,
  "fish": 62840,
  "fist-raised": 63198,
  "flag": 61476,
  "flag-checkered": 61726,
  "flag-usa": 63309,
  "flask": 61635,
  "flickr": 61806,
  "flipboard": 62541,
  "flushed": 62841,
  "fly": 62487,
  "folder": 61563,
  "folder-minus": 63069,
  "folder-open": 61564,
  "folder-plus": 63070,
  "font": 61489,
  "font-awesome": 62132,
  "font-awesome-alt": 62300,
  "font-awesome-flag": 62501,
  "font-awesome-logo-full": 62694,
  "fonticons": 62080,
  "fonticons-fi": 62370,
  "football-ball": 62542,
  "fort-awesome": 62086,
  "fort-awesome-alt": 62371,
  "forumbee": 61969,
  "forward": 61518,
  "foursquare": 61824,
  "free-code-camp": 62149,
  "freebsd": 62372,
  "frog": 62766,
  "frown": 61721,
  "frown-open": 62842,
  "fulcrum": 62731,
  "funnel-dollar": 63074,
  "futbol": 61923,
  "galactic-republic": 62732,
  "galactic-senate": 62733,
  "gamepad": 61723,
  "gas-pump": 62767,
  "gavel": 61667,
  "gem": 62373,
  "genderless": 61997,
  "get-pocket": 62053,
  "gg": 62048,
  "gg-circle": 62049,
  "ghost": 63202,
  "gift": 61547,
  "gifts": 63388,
  "git": 61907,
  "git-alt": 63553,
  "git-square": 61906,
  "github": 61595,
  "github-alt": 61715,
  "github-square": 61586,
  "gitkraken": 62374,
  "gitlab": 62102,
  "gitter": 62502,
  "glass-cheers": 63391,
  "glass-martini": 61440,
  "glass-martini-alt": 62843,
  "glass-whiskey": 63392,
  "glasses": 62768,
  "glide": 62117,
  "glide-g": 62118,
  "globe": 61612,
  "globe-africa": 62844,
  "globe-americas": 62845,
  "globe-asia": 62846,
  "globe-europe": 63394,
  "gofore": 62375,
  "golf-ball": 62544,
  "goodreads": 62376,
  "goodreads-g": 62377,
  "google": 61856,
  "google-drive": 62378,
  "google-play": 62379,
  "google-plus": 62131,
  "google-plus-g": 61653,
  "google-plus-square": 61652,
  "google-wallet": 61934,
  "gopuram": 63076,
  "graduation-cap": 61853,
  "gratipay": 61828,
  "grav": 62166,
  "greater-than": 62769,
  "greater-than-equal": 62770,
  "grimace": 62847,
  "grin": 62848,
  "grin-alt": 62849,
  "grin-beam": 62850,
  "grin-beam-sweat": 62851,
  "grin-hearts": 62852,
  "grin-squint": 62853,
  "grin-squint-tears": 62854,
  "grin-stars": 62855,
  "grin-tears": 62856,
  "grin-tongue": 62857,
  "grin-tongue-squint": 62858,
  "grin-tongue-wink": 62859,
  "grin-wink": 62860,
  "grip-horizontal": 62861,
  "grip-lines": 63396,
  "grip-lines-vertical": 63397,
  "grip-vertical": 62862,
  "gripfire": 62380,
  "grunt": 62381,
  "guitar": 63398,
  "gulp": 62382,
  "h-square": 61693,
  "hacker-news": 61908,
  "hacker-news-square": 62383,
  "hackerrank": 62967,
  "hamburger": 63493,
  "hammer": 63203,
  "hamsa": 63077,
  "hand-holding": 62653,
  "hand-holding-heart": 62654,
  "hand-holding-medical": 63836,
  "hand-holding-usd": 62656,
  "hand-holding-water": 62657,
  "hand-lizard": 62040,
  "hand-middle-finger": 63494,
  "hand-paper": 62038,
  "hand-peace": 62043,
  "hand-point-down": 61607,
  "hand-point-left": 61605,
  "hand-point-right": 61604,
  "hand-point-up": 61606,
  "hand-pointer": 62042,
  "hand-rock": 62037,
  "hand-scissors": 62039,
  "hand-sparkles": 63837,
  "hand-spock": 62041,
  "hands": 62658,
  "hands-helping": 62660,
  "hands-wash": 63838,
  "handshake": 62133,
  "handshake-alt-slash": 63839,
  "handshake-slash": 63840,
  "hanukiah": 63206,
  "hard-hat": 63495,
  "hashtag": 62098,
  "hat-cowboy": 63680,
  "hat-cowboy-side": 63681,
  "hat-wizard": 63208,
  "hdd": 61600,
  "head-side-cough": 63841,
  "head-side-cough-slash": 63842,
  "head-side-mask": 63843,
  "head-side-virus": 63844,
  "heading": 61916,
  "headphones": 61477,
  "headphones-alt": 62863,
  "headset": 62864,
  "heart": 61444,
  "heart-broken": 63401,
  "heartbeat": 61982,
  "helicopter": 62771,
  "highlighter": 62865,
  "hiking": 63212,
  "hippo": 63213,
  "hips": 62546,
  "hire-a-helper": 62384,
  "history": 61914,
  "hockey-puck": 62547,
  "holly-berry": 63402,
  "home": 61461,
  "hooli": 62503,
  "hornbill": 62866,
  "horse": 63216,
  "horse-head": 63403,
  "hospital": 61688,
  "hospital-alt": 62589,
  "hospital-symbol": 62590,
  "hospital-user": 63501,
  "hot-tub": 62867,
  "hotdog": 63503,
  "hotel": 62868,
  "hotjar": 62385,
  "hourglass": 62036,
  "hourglass-end": 62035,
  "hourglass-half": 62034,
  "hourglass-start": 62033,
  "house-damage": 63217,
  "house-user": 63845,
  "houzz": 62076,
  "hryvnia": 63218,
  "html5": 61755,
  "hubspot": 62386,
  "i-cursor": 62022,
  "ice-cream": 63504,
  "icicles": 63405,
  "icons": 63597,
  "id-badge": 62145,
  "id-card": 62146,
  "id-card-alt": 62591,
  "ideal": 63763,
  "igloo": 63406,
  "image": 61502,
  "images": 62210,
  "imdb": 62168,
  "inbox": 61468,
  "indent": 61500,
  "industry": 62069,
  "infinity": 62772,
  "info": 61737,
  "info-circle": 61530,
  "instagram": 61805,
  "instagram-square": 63829,
  "intercom": 63407,
  "internet-explorer": 62059,
  "invision": 63408,
  "ioxhost": 61960,
  "italic": 61491,
  "itch-io": 63546,
  "itunes": 62388,
  "itunes-note": 62389,
  "java": 62692,
  "jedi": 63081,
  "jedi-order": 62734,
  "jenkins": 62390,
  "jira": 63409,
  "joget": 62391,
  "joint": 62869,
  "joomla": 61866,
  "journal-whills": 63082,
  "js": 62392,
  "js-square": 62393,
  "jsfiddle": 61900,
  "kaaba": 63083,
  "kaggle": 62970,
  "key": 61572,
  "keybase": 62709,
  "keyboard": 61724,
  "keycdn": 62394,
  "khanda": 63085,
  "kickstarter": 62395,
  "kickstarter-k": 62396,
  "kiss": 62870,
  "kiss-beam": 62871,
  "kiss-wink-heart": 62872,
  "kiwi-bird": 62773,
  "korvue": 62511,
  "landmark": 63087,
  "language": 61867,
  "laptop": 61705,
  "laptop-code": 62972,
  "laptop-house": 63846,
  "laptop-medical": 63506,
  "laravel": 62397,
  "lastfm": 61954,
  "lastfm-square": 61955,
  "laugh": 62873,
  "laugh-beam": 62874,
  "laugh-squint": 62875,
  "laugh-wink": 62876,
  "layer-group": 62973,
  "leaf": 61548,
  "leanpub": 61970,
  "lemon": 61588,
  "less": 62493,
  "less-than": 62774,
  "less-than-equal": 62775,
  "level-down-alt": 62398,
  "level-up-alt": 62399,
  "life-ring": 61901,
  "lightbulb": 61675,
  "line": 62400,
  "link": 61633,
  "linkedin": 61580,
  "linkedin-in": 61665,
  "linode": 62136,
  "linux": 61820,
  "lira-sign": 61845,
  "list": 61498,
  "list-alt": 61474,
  "list-ol": 61643,
  "list-ul": 61642,
  "location-arrow": 61732,
  "lock": 61475,
  "lock-open": 62401,
  "long-arrow-alt-down": 62217,
  "long-arrow-alt-left": 62218,
  "long-arrow-alt-right": 62219,
  "long-arrow-alt-up": 62220,
  "low-vision": 62120,
  "luggage-cart": 62877,
  "lungs": 62980,
  "lungs-virus": 63847,
  "lyft": 62403,
  "magento": 62404,
  "magic": 61648,
  "magnet": 61558,
  "mail-bulk": 63092,
  "mailchimp": 62878,
  "male": 61827,
  "mandalorian": 62735,
  "map": 62073,
  "map-marked": 62879,
  "map-marked-alt": 62880,
  "map-marker": 61505,
  "map-marker-alt": 62405,
  "map-pin": 62070,
  "map-signs": 62071,
  "markdown": 62991,
  "marker": 62881,
  "mars": 61986,
  "mars-double": 61991,
  "mars-stroke": 61993,
  "mars-stroke-h": 61995,
  "mars-stroke-v": 61994,
  "mask": 63226,
  "mastodon": 62710,
  "maxcdn": 61750,
  "mdb": 63690,
  "medal": 62882,
  "medapps": 62406,
  "medium": 62010,
  "medium-m": 62407,
  "medkit": 61690,
  "medrt": 62408,
  "meetup": 62176,
  "megaport": 62883,
  "meh": 61722,
  "meh-blank": 62884,
  "meh-rolling-eyes": 62885,
  "memory": 62776,
  "mendeley": 63411,
  "menorah": 63094,
  "mercury": 61987,
  "meteor": 63315,
  "microblog": 63770,
  "microchip": 62171,
  "microphone": 61744,
  "microphone-alt": 62409,
  "microphone-alt-slash": 62777,
  "microphone-slash": 61745,
  "microscope": 62992,
  "microsoft": 62410,
  "minus": 61544,
  "minus-circle": 61526,
  "minus-square": 61766,
  "mitten": 63413,
  "mix": 62411,
  "mixcloud": 62089,
  "mixer": 63830,
  "mizuni": 62412,
  "mobile": 61707,
  "mobile-alt": 62413,
  "modx": 62085,
  "monero": 62416,
  "money-bill": 61654,
  "money-bill-alt": 62417,
  "money-bill-wave": 62778,
  "money-bill-wave-alt": 62779,
  "money-check": 62780,
  "money-check-alt": 62781,
  "monument": 62886,
  "moon": 61830,
  "mortar-pestle": 62887,
  "mosque": 63096,
  "motorcycle": 61980,
  "mountain": 63228,
  "mouse": 63692,
  "mouse-pointer": 62021,
  "mug-hot": 63414,
  "music": 61441,
  "napster": 62418,
  "neos": 62994,
  "network-wired": 63231,
  "neuter": 61996,
  "newspaper": 61930,
  "nimblr": 62888,
  "node": 62489,
  "node-js": 62419,
  "not-equal": 62782,
  "notes-medical": 62593,
  "npm": 62420,
  "ns8": 62421,
  "nutritionix": 62422,
  "object-group": 62023,
  "object-ungroup": 62024,
  "odnoklassniki": 62051,
  "odnoklassniki-square": 62052,
  "oil-can": 62995,
  "old-republic": 62736,
  "om": 63097,
  "opencart": 62013,
  "openid": 61851,
  "opera": 62058,
  "optin-monster": 62012,
  "orcid": 63698,
  "osi": 62490,
  "otter": 63232,
  "outdent": 61499,
  "page4": 62423,
  "pagelines": 61836,
  "pager": 63509,
  "paint-brush": 61948,
  "paint-roller": 62890,
  "palette": 62783,
  "palfed": 62424,
  "pallet": 62594,
  "paper-plane": 61912,
  "paperclip": 61638,
  "parachute-box": 62669,
  "paragraph": 61917,
  "parking": 62784,
  "passport": 62891,
  "pastafarianism": 63099,
  "paste": 61674,
  "patreon": 62425,
  "pause": 61516,
  "pause-circle": 62091,
  "paw": 61872,
  "paypal": 61933,
  "peace": 63100,
  "pen": 62212,
  "pen-alt": 62213,
  "pen-fancy": 62892,
  "pen-nib": 62893,
  "pen-square": 61771,
  "pencil-alt": 62211,
  "pencil-ruler": 62894,
  "penny-arcade": 63236,
  "people-arrows": 63848,
  "people-carry": 62670,
  "pepper-hot": 63510,
  "percent": 62101,
  "percentage": 62785,
  "periscope": 62426,
  "person-booth": 63318,
  "phabricator": 62427,
  "phoenix-framework": 62428,
  "phoenix-squadron": 62737,
  "phone": 61589,
  "phone-alt": 63609,
  "phone-slash": 62429,
  "phone-square": 61592,
  "phone-square-alt": 63611,
  "phone-volume": 62112,
  "photo-video": 63612,
  "php": 62551,
  "pied-piper": 62126,
  "pied-piper-alt": 61864,
  "pied-piper-hat": 62693,
  "pied-piper-pp": 61863,
  "pied-piper-square": 63774,
  "piggy-bank": 62675,
  "pills": 62596,
  "pinterest": 61650,
  "pinterest-p": 62001,
  "pinterest-square": 61651,
  "pizza-slice": 63512,
  "place-of-worship": 63103,
  "plane": 61554,
  "plane-arrival": 62895,
  "plane-departure": 62896,
  "plane-slash": 63849,
  "play": 61515,
  "play-circle": 61764,
  "playstation": 62431,
  "plug": 61926,
  "plus": 61543,
  "plus-circle": 61525,
  "plus-square": 61694,
  "podcast": 62158,
  "poll": 63105,
  "poll-h": 63106,
  "poo": 62206,
  "poo-storm": 63322,
  "poop": 63001,
  "portrait": 62432,
  "pound-sign": 61780,
  "power-off": 61457,
  "pray": 63107,
  "praying-hands": 63108,
  "prescription": 62897,
  "prescription-bottle": 62597,
  "prescription-bottle-alt": 62598,
  "print": 61487,
  "procedures": 62599,
  "product-hunt": 62088,
  "project-diagram": 62786,
  "pump-medical": 63850,
  "pump-soap": 63851,
  "pushed": 62433,
  "puzzle-piece": 61742,
  "python": 62434,
  "qq": 61910,
  "qrcode": 61481,
  "question": 61736,
  "question-circle": 61529,
  "quidditch": 62552,
  "quinscape": 62553,
  "quora": 62148,
  "quote-left": 61709,
  "quote-right": 61710,
  "quran": 63111,
  "r-project": 62711,
  "radiation": 63417,
  "radiation-alt": 63418,
  "rainbow": 63323,
  "random": 61556,
  "raspberry-pi": 63419,
  "ravelry": 62169,
  "react": 62491,
  "reacteurope": 63325,
  "readme": 62677,
  "rebel": 61904,
  "receipt": 62787,
  "record-vinyl": 63705,
  "recycle": 61880,
  "red-river": 62435,
  "reddit": 61857,
  "reddit-alien": 62081,
  "reddit-square": 61858,
  "redhat": 63420,
  "redo": 61470,
  "redo-alt": 62201,
  "registered": 62045,
  "remove-format": 63613,
  "renren": 61835,
  "reply": 62437,
  "reply-all": 61730,
  "replyd": 62438,
  "republican": 63326,
  "researchgate": 62712,
  "resolving": 62439,
  "restroom": 63421,
  "retweet": 61561,
  "rev": 62898,
  "ribbon": 62678,
  "ring": 63243,
  "road": 61464,
  "robot": 62788,
  "rocket": 61749,
  "rocketchat": 62440,
  "rockrms": 62441,
  "route": 62679,
  "rss": 61598,
  "rss-square": 61763,
  "ruble-sign": 61784,
  "ruler": 62789,
  "ruler-combined": 62790,
  "ruler-horizontal": 62791,
  "ruler-vertical": 62792,
  "running": 63244,
  "rupee-sign": 61782,
  "sad-cry": 62899,
  "sad-tear": 62900,
  "safari": 62055,
  "salesforce": 63547,
  "sass": 62494,
  "satellite": 63423,
  "satellite-dish": 63424,
  "save": 61639,
  "schlix": 62442,
  "school": 62793,
  "screwdriver": 62794,
  "scribd": 62090,
  "scroll": 63246,
  "sd-card": 63426,
  "search": 61442,
  "search-dollar": 63112,
  "search-location": 63113,
  "search-minus": 61456,
  "search-plus": 61454,
  "searchengin": 62443,
  "seedling": 62680,
  "sellcast": 62170,
  "sellsy": 61971,
  "server": 62003,
  "servicestack": 62444,
  "shapes": 63007,
  "share": 61540,
  "share-alt": 61920,
  "share-alt-square": 61921,
  "share-square": 61773,
  "shekel-sign": 61963,
  "shield-alt": 62445,
  "shield-virus": 63852,
  "ship": 61978,
  "shipping-fast": 62603,
  "shirtsinbulk": 61972,
  "shoe-prints": 62795,
  "shopify": 63831,
  "shopping-bag": 62096,
  "shopping-basket": 62097,
  "shopping-cart": 61562,
  "shopware": 62901,
  "shower": 62156,
  "shuttle-van": 62902,
  "sign": 62681,
  "sign-in-alt": 62198,
  "sign-language": 62119,
  "sign-out-alt": 62197,
  "signal": 61458,
  "signature": 62903,
  "sim-card": 63428,
  "simplybuilt": 61973,
  "sistrix": 62446,
  "sitemap": 61672,
  "sith": 62738,
  "skating": 63429,
  "sketch": 63430,
  "skiing": 63433,
  "skiing-nordic": 63434,
  "skull": 62796,
  "skull-crossbones": 63252,
  "skyatlas": 61974,
  "skype": 61822,
  "slack": 61848,
  "slack-hash": 62447,
  "slash": 63253,
  "sleigh": 63436,
  "sliders-h": 61918,
  "slideshare": 61927,
  "smile": 61720,
  "smile-beam": 62904,
  "smile-wink": 62682,
  "smog": 63327,
  "smoking": 62605,
  "smoking-ban": 62797,
  "sms": 63437,
  "snapchat": 62123,
  "snapchat-ghost": 62124,
  "snapchat-square": 62125,
  "snowboarding": 63438,
  "snowflake": 62172,
  "snowman": 63440,
  "snowplow": 63442,
  "soap": 63854,
  "socks": 63126,
  "solar-panel": 62906,
  "sort": 61660,
  "sort-alpha-down": 61789,
  "sort-alpha-down-alt": 63617,
  "sort-alpha-up": 61790,
  "sort-alpha-up-alt": 63618,
  "sort-amount-down": 61792,
  "sort-amount-down-alt": 63620,
  "sort-amount-up": 61793,
  "sort-amount-up-alt": 63621,
  "sort-down": 61661,
  "sort-numeric-down": 61794,
  "sort-numeric-down-alt": 63622,
  "sort-numeric-up": 61795,
  "sort-numeric-up-alt": 63623,
  "sort-up": 61662,
  "soundcloud": 61886,
  "sourcetree": 63443,
  "spa": 62907,
  "space-shuttle": 61847,
  "speakap": 62451,
  "speaker-deck": 63548,
  "spell-check": 63633,
  "spider": 63255,
  "spinner": 61712,
  "splotch": 62908,
  "spotify": 61884,
  "spray-can": 62909,
  "square": 61640,
  "square-full": 62556,
  "square-root-alt": 63128,
  "squarespace": 62910,
  "stack-exchange": 61837,
  "stack-overflow": 61804,
  "stackpath": 63554,
  "stamp": 62911,
  "star": 61445,
  "star-and-crescent": 63129,
  "star-half": 61577,
  "star-half-alt": 62912,
  "star-of-david": 63130,
  "star-of-life": 63009,
  "staylinked": 62453,
  "steam": 61878,
  "steam-square": 61879,
  "steam-symbol": 62454,
  "step-backward": 61512,
  "step-forward": 61521,
  "stethoscope": 61681,
  "sticker-mule": 62455,
  "sticky-note": 62025,
  "stop": 61517,
  "stop-circle": 62093,
  "stopwatch": 62194,
  "stopwatch-20": 63855,
  "store": 62798,
  "store-alt": 62799,
  "store-alt-slash": 63856,
  "store-slash": 63857,
  "strava": 62504,
  "stream": 62800,
  "street-view": 61981,
  "strikethrough": 61644,
  "stripe": 62505,
  "stripe-s": 62506,
  "stroopwafel": 62801,
  "studiovinari": 62456,
  "stumbleupon": 61860,
  "stumbleupon-circle": 61859,
  "subscript": 61740,
  "subway": 62009,
  "suitcase": 61682,
  "suitcase-rolling": 62913,
  "sun": 61829,
  "superpowers": 62173,
  "superscript": 61739,
  "supple": 62457,
  "surprise": 62914,
  "suse": 63446,
  "swatchbook": 62915,
  "swift": 63713,
  "swimmer": 62916,
  "swimming-pool": 62917,
  "symfony": 63549,
  "synagogue": 63131,
  "sync": 61473,
  "sync-alt": 62193,
  "syringe": 62606,
  "table": 61646,
  "table-tennis": 62557,
  "tablet": 61706,
  "tablet-alt": 62458,
  "tablets": 62608,
  "tachometer-alt": 62461,
  "tag": 61483,
  "tags": 61484,
  "tape": 62683,
  "tasks": 61614,
  "taxi": 61882,
  "teamspeak": 62713,
  "teeth": 63022,
  "teeth-open": 63023,
  "telegram": 62150,
  "telegram-plane": 62462,
  "temperature-high": 63337,
  "temperature-low": 63339,
  "tencent-weibo": 61909,
  "tenge": 63447,
  "terminal": 61728,
  "text-height": 61492,
  "text-width": 61493,
  "th": 61450,
  "th-large": 61449,
  "th-list": 61451,
  "the-red-yeti": 63133,
  "theater-masks": 63024,
  "themeco": 62918,
  "themeisle": 62130,
  "thermometer": 62609,
  "thermometer-empty": 62155,
  "thermometer-full": 62151,
  "thermometer-half": 62153,
  "thermometer-quarter": 62154,
  "thermometer-three-quarters": 62152,
  "think-peaks": 63281,
  "thumbs-down": 61797,
  "thumbs-up": 61796,
  "thumbtack": 61581,
  "ticket-alt": 62463,
  "times": 61453,
  "times-circle": 61527,
  "tint": 61507,
  "tint-slash": 62919,
  "tired": 62920,
  "toggle-off": 61956,
  "toggle-on": 61957,
  "toilet": 63448,
  "toilet-paper": 63262,
  "toilet-paper-slash": 63858,
  "toolbox": 62802,
  "tools": 63449,
  "tooth": 62921,
  "torah": 63136,
  "torii-gate": 63137,
  "tractor": 63266,
  "trade-federation": 62739,
  "trademark": 62044,
  "traffic-light": 63031,
  "trailer": 63809,
  "train": 62008,
  "tram": 63450,
  "transgender": 61988,
  "transgender-alt": 61989,
  "trash": 61944,
  "trash-alt": 62189,
  "trash-restore": 63529,
  "trash-restore-alt": 63530,
  "tree": 61883,
  "trello": 61825,
  "tripadvisor": 62050,
  "trophy": 61585,
  "truck": 61649,
  "truck-loading": 62686,
  "truck-monster": 63035,
  "truck-moving": 62687,
  "truck-pickup": 63036,
  "tshirt": 62803,
  "tty": 61924,
  "tumblr": 61811,
  "tumblr-square": 61812,
  "tv": 62060,
  "twitch": 61928,
  "twitter": 61593,
  "twitter-square": 61569,
  "typo3": 62507,
  "uber": 62466,
  "ubuntu": 63455,
  "uikit": 62467,
  "umbraco": 63720,
  "umbrella": 61673,
  "umbrella-beach": 62922,
  "underline": 61645,
  "undo": 61666,
  "undo-alt": 62186,
  "uniregistry": 62468,
  "unity": 63817,
  "universal-access": 62106,
  "university": 61852,
  "unlink": 61735,
  "unlock": 61596,
  "unlock-alt": 61758,
  "untappd": 62469,
  "upload": 61587,
  "ups": 63456,
  "usb": 62087,
  "user": 61447,
  "user-alt": 62470,
  "user-alt-slash": 62714,
  "user-astronaut": 62715,
  "user-check": 62716,
  "user-circle": 62141,
  "user-clock": 62717,
  "user-cog": 62718,
  "user-edit": 62719,
  "user-friends": 62720,
  "user-graduate": 62721,
  "user-injured": 63272,
  "user-lock": 62722,
  "user-md": 61680,
  "user-minus": 62723,
  "user-ninja": 62724,
  "user-nurse": 63535,
  "user-plus": 62004,
  "user-secret": 61979,
  "user-shield": 62725,
  "user-slash": 62726,
  "user-tag": 62727,
  "user-tie": 62728,
  "user-times": 62005,
  "users": 61632,
  "users-cog": 62729,
  "usps": 63457,
  "ussunnah": 62471,
  "utensil-spoon": 62181,
  "utensils": 62183,
  "vaadin": 62472,
  "vector-square": 62923,
  "venus": 61985,
  "venus-double": 61990,
  "venus-mars": 61992,
  "viacoin": 62007,
  "viadeo": 62121,
  "viadeo-square": 62122,
  "vial": 62610,
  "vials": 62611,
  "viber": 62473,
  "video": 61501,
  "video-slash": 62690,
  "vihara": 63143,
  "vimeo": 62474,
  "vimeo-square": 61844,
  "vimeo-v": 62077,
  "vine": 61898,
  "virus": 63860,
  "virus-slash": 63861,
  "viruses": 63862,
  "vk": 61833,
  "vnv": 62475,
  "voicemail": 63639,
  "volleyball-ball": 62559,
  "volume-down": 61479,
  "volume-mute": 63145,
  "volume-off": 61478,
  "volume-up": 61480,
  "vote-yea": 63346,
  "vr-cardboard": 63273,
  "vuejs": 62495,
  "walking": 62804,
  "wallet": 62805,
  "warehouse": 62612,
  "water": 63347,
  "wave-square": 63550,
  "waze": 63551,
  "weebly": 62924,
  "weibo": 61834,
  "weight": 62614,
  "weight-hanging": 62925,
  "weixin": 61911,
  "whatsapp": 62002,
  "whatsapp-square": 62476,
  "wheelchair": 61843,
  "whmcs": 62477,
  "wifi": 61931,
  "wikipedia-w": 62054,
  "wind": 63278,
  "window-close": 62480,
  "window-maximize": 62160,
  "window-minimize": 62161,
  "window-restore": 62162,
  "windows": 61818,
  "wine-bottle": 63279,
  "wine-glass": 62691,
  "wine-glass-alt": 62926,
  "wix": 62927,
  "wizards-of-the-coast": 63280,
  "wolf-pack-battalion": 62740,
  "won-sign": 61785,
  "wordpress": 61850,
  "wordpress-simple": 62481,
  "wpbeginner": 62103,
  "wpexplorer": 62174,
  "wpforms": 62104,
  "wpressr": 62436,
  "wrench": 61613,
  "x-ray": 62615,
  "xbox": 62482,
  "xing": 61800,
  "xing-square": 61801,
  "y-combinator": 62011,
  "yahoo": 61854,
  "yammer": 63552,
  "yandex": 62483,
  "yandex-international": 62484,
  "yarn": 63459,
  "yelp": 61929,
  "yen-sign": 61783,
  "yin-yang": 63149,
  "yoast": 62129,
  "youtube": 61799,
  "youtube-square": 62513,
  "zhihu": 63039
};
},10283,[]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "brands": [
    "500px",
    "accessible-icon",
    "accusoft",
    "acquisitions-incorporated",
    "adn",
    "adobe",
    "adversal",
    "affiliatetheme",
    "airbnb",
    "algolia",
    "alipay",
    "amazon-pay",
    "amazon",
    "amilia",
    "android",
    "angellist",
    "angrycreative",
    "angular",
    "app-store-ios",
    "app-store",
    "apper",
    "apple-pay",
    "apple",
    "artstation",
    "asymmetrik",
    "atlassian",
    "audible",
    "autoprefixer",
    "avianex",
    "aviato",
    "aws",
    "bandcamp",
    "battle-net",
    "behance-square",
    "behance",
    "bimobject",
    "bitbucket",
    "bitcoin",
    "bity",
    "black-tie",
    "blackberry",
    "blogger-b",
    "blogger",
    "bluetooth-b",
    "bluetooth",
    "bootstrap",
    "btc",
    "buffer",
    "buromobelexperte",
    "buy-n-large",
    "buysellads",
    "canadian-maple-leaf",
    "cc-amazon-pay",
    "cc-amex",
    "cc-apple-pay",
    "cc-diners-club",
    "cc-discover",
    "cc-jcb",
    "cc-mastercard",
    "cc-paypal",
    "cc-stripe",
    "cc-visa",
    "centercode",
    "centos",
    "chrome",
    "chromecast",
    "cloudscale",
    "cloudsmith",
    "cloudversify",
    "codepen",
    "codiepie",
    "confluence",
    "connectdevelop",
    "contao",
    "cotton-bureau",
    "cpanel",
    "creative-commons-by",
    "creative-commons-nc-eu",
    "creative-commons-nc-jp",
    "creative-commons-nc",
    "creative-commons-nd",
    "creative-commons-pd-alt",
    "creative-commons-pd",
    "creative-commons-remix",
    "creative-commons-sa",
    "creative-commons-sampling-plus",
    "creative-commons-sampling",
    "creative-commons-share",
    "creative-commons-zero",
    "creative-commons",
    "critical-role",
    "css3-alt",
    "css3",
    "cuttlefish",
    "d-and-d-beyond",
    "d-and-d",
    "dailymotion",
    "dashcube",
    "delicious",
    "deploydog",
    "deskpro",
    "dev",
    "deviantart",
    "dhl",
    "diaspora",
    "digg",
    "digital-ocean",
    "discord",
    "discourse",
    "dochub",
    "docker",
    "draft2digital",
    "dribbble-square",
    "dribbble",
    "dropbox",
    "drupal",
    "dyalog",
    "earlybirds",
    "ebay",
    "edge",
    "elementor",
    "ello",
    "ember",
    "empire",
    "envira",
    "erlang",
    "ethereum",
    "etsy",
    "evernote",
    "expeditedssl",
    "facebook-f",
    "facebook-messenger",
    "facebook-square",
    "facebook",
    "fantasy-flight-games",
    "fedex",
    "fedora",
    "figma",
    "firefox-browser",
    "firefox",
    "first-order-alt",
    "first-order",
    "firstdraft",
    "flickr",
    "flipboard",
    "fly",
    "font-awesome-alt",
    "font-awesome-flag",
    "font-awesome-logo-full",
    "font-awesome",
    "fonticons-fi",
    "fonticons",
    "fort-awesome-alt",
    "fort-awesome",
    "forumbee",
    "foursquare",
    "free-code-camp",
    "freebsd",
    "fulcrum",
    "galactic-republic",
    "galactic-senate",
    "get-pocket",
    "gg-circle",
    "gg",
    "git-alt",
    "git-square",
    "git",
    "github-alt",
    "github-square",
    "github",
    "gitkraken",
    "gitlab",
    "gitter",
    "glide-g",
    "glide",
    "gofore",
    "goodreads-g",
    "goodreads",
    "google-drive",
    "google-play",
    "google-plus-g",
    "google-plus-square",
    "google-plus",
    "google-wallet",
    "google",
    "gratipay",
    "grav",
    "gripfire",
    "grunt",
    "gulp",
    "hacker-news-square",
    "hacker-news",
    "hackerrank",
    "hips",
    "hire-a-helper",
    "hooli",
    "hornbill",
    "hotjar",
    "houzz",
    "html5",
    "hubspot",
    "ideal",
    "imdb",
    "instagram-square",
    "instagram",
    "intercom",
    "internet-explorer",
    "invision",
    "ioxhost",
    "itch-io",
    "itunes-note",
    "itunes",
    "java",
    "jedi-order",
    "jenkins",
    "jira",
    "joget",
    "joomla",
    "js-square",
    "js",
    "jsfiddle",
    "kaggle",
    "keybase",
    "keycdn",
    "kickstarter-k",
    "kickstarter",
    "korvue",
    "laravel",
    "lastfm-square",
    "lastfm",
    "leanpub",
    "less",
    "line",
    "linkedin-in",
    "linkedin",
    "linode",
    "linux",
    "lyft",
    "magento",
    "mailchimp",
    "mandalorian",
    "markdown",
    "mastodon",
    "maxcdn",
    "mdb",
    "medapps",
    "medium-m",
    "medium",
    "medrt",
    "meetup",
    "megaport",
    "mendeley",
    "microblog",
    "microsoft",
    "mix",
    "mixcloud",
    "mixer",
    "mizuni",
    "modx",
    "monero",
    "napster",
    "neos",
    "nimblr",
    "node-js",
    "node",
    "npm",
    "ns8",
    "nutritionix",
    "odnoklassniki-square",
    "odnoklassniki",
    "old-republic",
    "opencart",
    "openid",
    "opera",
    "optin-monster",
    "orcid",
    "osi",
    "page4",
    "pagelines",
    "palfed",
    "patreon",
    "paypal",
    "penny-arcade",
    "periscope",
    "phabricator",
    "phoenix-framework",
    "phoenix-squadron",
    "php",
    "pied-piper-alt",
    "pied-piper-hat",
    "pied-piper-pp",
    "pied-piper-square",
    "pied-piper",
    "pinterest-p",
    "pinterest-square",
    "pinterest",
    "playstation",
    "product-hunt",
    "pushed",
    "python",
    "qq",
    "quinscape",
    "quora",
    "r-project",
    "raspberry-pi",
    "ravelry",
    "react",
    "reacteurope",
    "readme",
    "rebel",
    "red-river",
    "reddit-alien",
    "reddit-square",
    "reddit",
    "redhat",
    "renren",
    "replyd",
    "researchgate",
    "resolving",
    "rev",
    "rocketchat",
    "rockrms",
    "safari",
    "salesforce",
    "sass",
    "schlix",
    "scribd",
    "searchengin",
    "sellcast",
    "sellsy",
    "servicestack",
    "shirtsinbulk",
    "shopify",
    "shopware",
    "simplybuilt",
    "sistrix",
    "sith",
    "sketch",
    "skyatlas",
    "skype",
    "slack-hash",
    "slack",
    "slideshare",
    "snapchat-ghost",
    "snapchat-square",
    "snapchat",
    "soundcloud",
    "sourcetree",
    "speakap",
    "speaker-deck",
    "spotify",
    "squarespace",
    "stack-exchange",
    "stack-overflow",
    "stackpath",
    "staylinked",
    "steam-square",
    "steam-symbol",
    "steam",
    "sticker-mule",
    "strava",
    "stripe-s",
    "stripe",
    "studiovinari",
    "stumbleupon-circle",
    "stumbleupon",
    "superpowers",
    "supple",
    "suse",
    "swift",
    "symfony",
    "teamspeak",
    "telegram-plane",
    "telegram",
    "tencent-weibo",
    "the-red-yeti",
    "themeco",
    "themeisle",
    "think-peaks",
    "trade-federation",
    "trello",
    "tripadvisor",
    "tumblr-square",
    "tumblr",
    "twitch",
    "twitter-square",
    "twitter",
    "typo3",
    "uber",
    "ubuntu",
    "uikit",
    "umbraco",
    "uniregistry",
    "unity",
    "untappd",
    "ups",
    "usb",
    "usps",
    "ussunnah",
    "vaadin",
    "viacoin",
    "viadeo-square",
    "viadeo",
    "viber",
    "vimeo-square",
    "vimeo-v",
    "vimeo",
    "vine",
    "vk",
    "vnv",
    "vuejs",
    "waze",
    "weebly",
    "weibo",
    "weixin",
    "whatsapp-square",
    "whatsapp",
    "whmcs",
    "wikipedia-w",
    "windows",
    "wix",
    "wizards-of-the-coast",
    "wolf-pack-battalion",
    "wordpress-simple",
    "wordpress",
    "wpbeginner",
    "wpexplorer",
    "wpforms",
    "wpressr",
    "xbox",
    "xing-square",
    "xing",
    "y-combinator",
    "yahoo",
    "yammer",
    "yandex-international",
    "yandex",
    "yarn",
    "yelp",
    "yoast",
    "youtube-square",
    "youtube",
    "zhihu"
  ],
  "regular": [
    "address-book",
    "address-card",
    "angry",
    "arrow-alt-circle-down",
    "arrow-alt-circle-left",
    "arrow-alt-circle-right",
    "arrow-alt-circle-up",
    "bell-slash",
    "bell",
    "bookmark",
    "building",
    "calendar-alt",
    "calendar-check",
    "calendar-minus",
    "calendar-plus",
    "calendar-times",
    "calendar",
    "caret-square-down",
    "caret-square-left",
    "caret-square-right",
    "caret-square-up",
    "chart-bar",
    "check-circle",
    "check-square",
    "circle",
    "clipboard",
    "clock",
    "clone",
    "closed-captioning",
    "comment-alt",
    "comment-dots",
    "comment",
    "comments",
    "compass",
    "copy",
    "copyright",
    "credit-card",
    "dizzy",
    "dot-circle",
    "edit",
    "envelope-open",
    "envelope",
    "eye-slash",
    "eye",
    "file-alt",
    "file-archive",
    "file-audio",
    "file-code",
    "file-excel",
    "file-image",
    "file-pdf",
    "file-powerpoint",
    "file-video",
    "file-word",
    "file",
    "flag",
    "flushed",
    "folder-open",
    "folder",
    "font-awesome-logo-full",
    "frown-open",
    "frown",
    "futbol",
    "gem",
    "grimace",
    "grin-alt",
    "grin-beam-sweat",
    "grin-beam",
    "grin-hearts",
    "grin-squint-tears",
    "grin-squint",
    "grin-stars",
    "grin-tears",
    "grin-tongue-squint",
    "grin-tongue-wink",
    "grin-tongue",
    "grin-wink",
    "grin",
    "hand-lizard",
    "hand-paper",
    "hand-peace",
    "hand-point-down",
    "hand-point-left",
    "hand-point-right",
    "hand-point-up",
    "hand-pointer",
    "hand-rock",
    "hand-scissors",
    "hand-spock",
    "handshake",
    "hdd",
    "heart",
    "hospital",
    "hourglass",
    "id-badge",
    "id-card",
    "image",
    "images",
    "keyboard",
    "kiss-beam",
    "kiss-wink-heart",
    "kiss",
    "laugh-beam",
    "laugh-squint",
    "laugh-wink",
    "laugh",
    "lemon",
    "life-ring",
    "lightbulb",
    "list-alt",
    "map",
    "meh-blank",
    "meh-rolling-eyes",
    "meh",
    "minus-square",
    "money-bill-alt",
    "moon",
    "newspaper",
    "object-group",
    "object-ungroup",
    "paper-plane",
    "pause-circle",
    "play-circle",
    "plus-square",
    "question-circle",
    "registered",
    "sad-cry",
    "sad-tear",
    "save",
    "share-square",
    "smile-beam",
    "smile-wink",
    "smile",
    "snowflake",
    "square",
    "star-half",
    "star",
    "sticky-note",
    "stop-circle",
    "sun",
    "surprise",
    "thumbs-down",
    "thumbs-up",
    "times-circle",
    "tired",
    "trash-alt",
    "user-circle",
    "user",
    "window-close",
    "window-maximize",
    "window-minimize",
    "window-restore"
  ],
  "solid": [
    "ad",
    "address-book",
    "address-card",
    "adjust",
    "air-freshener",
    "align-center",
    "align-justify",
    "align-left",
    "align-right",
    "allergies",
    "ambulance",
    "american-sign-language-interpreting",
    "anchor",
    "angle-double-down",
    "angle-double-left",
    "angle-double-right",
    "angle-double-up",
    "angle-down",
    "angle-left",
    "angle-right",
    "angle-up",
    "angry",
    "ankh",
    "apple-alt",
    "archive",
    "archway",
    "arrow-alt-circle-down",
    "arrow-alt-circle-left",
    "arrow-alt-circle-right",
    "arrow-alt-circle-up",
    "arrow-circle-down",
    "arrow-circle-left",
    "arrow-circle-right",
    "arrow-circle-up",
    "arrow-down",
    "arrow-left",
    "arrow-right",
    "arrow-up",
    "arrows-alt-h",
    "arrows-alt-v",
    "arrows-alt",
    "assistive-listening-systems",
    "asterisk",
    "at",
    "atlas",
    "atom",
    "audio-description",
    "award",
    "baby-carriage",
    "baby",
    "backspace",
    "backward",
    "bacon",
    "bahai",
    "balance-scale-left",
    "balance-scale-right",
    "balance-scale",
    "ban",
    "band-aid",
    "barcode",
    "bars",
    "baseball-ball",
    "basketball-ball",
    "bath",
    "battery-empty",
    "battery-full",
    "battery-half",
    "battery-quarter",
    "battery-three-quarters",
    "bed",
    "beer",
    "bell-slash",
    "bell",
    "bezier-curve",
    "bible",
    "bicycle",
    "biking",
    "binoculars",
    "biohazard",
    "birthday-cake",
    "blender-phone",
    "blender",
    "blind",
    "blog",
    "bold",
    "bolt",
    "bomb",
    "bone",
    "bong",
    "book-dead",
    "book-medical",
    "book-open",
    "book-reader",
    "book",
    "bookmark",
    "border-all",
    "border-none",
    "border-style",
    "bowling-ball",
    "box-open",
    "box-tissue",
    "box",
    "boxes",
    "braille",
    "brain",
    "bread-slice",
    "briefcase-medical",
    "briefcase",
    "broadcast-tower",
    "broom",
    "brush",
    "bug",
    "building",
    "bullhorn",
    "bullseye",
    "burn",
    "bus-alt",
    "bus",
    "business-time",
    "calculator",
    "calendar-alt",
    "calendar-check",
    "calendar-day",
    "calendar-minus",
    "calendar-plus",
    "calendar-times",
    "calendar-week",
    "calendar",
    "camera-retro",
    "camera",
    "campground",
    "candy-cane",
    "cannabis",
    "capsules",
    "car-alt",
    "car-battery",
    "car-crash",
    "car-side",
    "car",
    "caravan",
    "caret-down",
    "caret-left",
    "caret-right",
    "caret-square-down",
    "caret-square-left",
    "caret-square-right",
    "caret-square-up",
    "caret-up",
    "carrot",
    "cart-arrow-down",
    "cart-plus",
    "cash-register",
    "cat",
    "certificate",
    "chair",
    "chalkboard-teacher",
    "chalkboard",
    "charging-station",
    "chart-area",
    "chart-bar",
    "chart-line",
    "chart-pie",
    "check-circle",
    "check-double",
    "check-square",
    "check",
    "cheese",
    "chess-bishop",
    "chess-board",
    "chess-king",
    "chess-knight",
    "chess-pawn",
    "chess-queen",
    "chess-rook",
    "chess",
    "chevron-circle-down",
    "chevron-circle-left",
    "chevron-circle-right",
    "chevron-circle-up",
    "chevron-down",
    "chevron-left",
    "chevron-right",
    "chevron-up",
    "child",
    "church",
    "circle-notch",
    "circle",
    "city",
    "clinic-medical",
    "clipboard-check",
    "clipboard-list",
    "clipboard",
    "clock",
    "clone",
    "closed-captioning",
    "cloud-download-alt",
    "cloud-meatball",
    "cloud-moon-rain",
    "cloud-moon",
    "cloud-rain",
    "cloud-showers-heavy",
    "cloud-sun-rain",
    "cloud-sun",
    "cloud-upload-alt",
    "cloud",
    "cocktail",
    "code-branch",
    "code",
    "coffee",
    "cog",
    "cogs",
    "coins",
    "columns",
    "comment-alt",
    "comment-dollar",
    "comment-dots",
    "comment-medical",
    "comment-slash",
    "comment",
    "comments-dollar",
    "comments",
    "compact-disc",
    "compass",
    "compress-alt",
    "compress-arrows-alt",
    "compress",
    "concierge-bell",
    "cookie-bite",
    "cookie",
    "copy",
    "copyright",
    "couch",
    "credit-card",
    "crop-alt",
    "crop",
    "cross",
    "crosshairs",
    "crow",
    "crown",
    "crutch",
    "cube",
    "cubes",
    "cut",
    "database",
    "deaf",
    "democrat",
    "desktop",
    "dharmachakra",
    "diagnoses",
    "dice-d20",
    "dice-d6",
    "dice-five",
    "dice-four",
    "dice-one",
    "dice-six",
    "dice-three",
    "dice-two",
    "dice",
    "digital-tachograph",
    "directions",
    "disease",
    "divide",
    "dizzy",
    "dna",
    "dog",
    "dollar-sign",
    "dolly-flatbed",
    "dolly",
    "donate",
    "door-closed",
    "door-open",
    "dot-circle",
    "dove",
    "download",
    "drafting-compass",
    "dragon",
    "draw-polygon",
    "drum-steelpan",
    "drum",
    "drumstick-bite",
    "dumbbell",
    "dumpster-fire",
    "dumpster",
    "dungeon",
    "edit",
    "egg",
    "eject",
    "ellipsis-h",
    "ellipsis-v",
    "envelope-open-text",
    "envelope-open",
    "envelope-square",
    "envelope",
    "equals",
    "eraser",
    "ethernet",
    "euro-sign",
    "exchange-alt",
    "exclamation-circle",
    "exclamation-triangle",
    "exclamation",
    "expand-alt",
    "expand-arrows-alt",
    "expand",
    "external-link-alt",
    "external-link-square-alt",
    "eye-dropper",
    "eye-slash",
    "eye",
    "fan",
    "fast-backward",
    "fast-forward",
    "faucet",
    "fax",
    "feather-alt",
    "feather",
    "female",
    "fighter-jet",
    "file-alt",
    "file-archive",
    "file-audio",
    "file-code",
    "file-contract",
    "file-csv",
    "file-download",
    "file-excel",
    "file-export",
    "file-image",
    "file-import",
    "file-invoice-dollar",
    "file-invoice",
    "file-medical-alt",
    "file-medical",
    "file-pdf",
    "file-powerpoint",
    "file-prescription",
    "file-signature",
    "file-upload",
    "file-video",
    "file-word",
    "file",
    "fill-drip",
    "fill",
    "film",
    "filter",
    "fingerprint",
    "fire-alt",
    "fire-extinguisher",
    "fire",
    "first-aid",
    "fish",
    "fist-raised",
    "flag-checkered",
    "flag-usa",
    "flag",
    "flask",
    "flushed",
    "folder-minus",
    "folder-open",
    "folder-plus",
    "folder",
    "font-awesome-logo-full",
    "font",
    "football-ball",
    "forward",
    "frog",
    "frown-open",
    "frown",
    "funnel-dollar",
    "futbol",
    "gamepad",
    "gas-pump",
    "gavel",
    "gem",
    "genderless",
    "ghost",
    "gift",
    "gifts",
    "glass-cheers",
    "glass-martini-alt",
    "glass-martini",
    "glass-whiskey",
    "glasses",
    "globe-africa",
    "globe-americas",
    "globe-asia",
    "globe-europe",
    "globe",
    "golf-ball",
    "gopuram",
    "graduation-cap",
    "greater-than-equal",
    "greater-than",
    "grimace",
    "grin-alt",
    "grin-beam-sweat",
    "grin-beam",
    "grin-hearts",
    "grin-squint-tears",
    "grin-squint",
    "grin-stars",
    "grin-tears",
    "grin-tongue-squint",
    "grin-tongue-wink",
    "grin-tongue",
    "grin-wink",
    "grin",
    "grip-horizontal",
    "grip-lines-vertical",
    "grip-lines",
    "grip-vertical",
    "guitar",
    "h-square",
    "hamburger",
    "hammer",
    "hamsa",
    "hand-holding-heart",
    "hand-holding-medical",
    "hand-holding-usd",
    "hand-holding-water",
    "hand-holding",
    "hand-lizard",
    "hand-middle-finger",
    "hand-paper",
    "hand-peace",
    "hand-point-down",
    "hand-point-left",
    "hand-point-right",
    "hand-point-up",
    "hand-pointer",
    "hand-rock",
    "hand-scissors",
    "hand-sparkles",
    "hand-spock",
    "hands-helping",
    "hands-wash",
    "hands",
    "handshake-alt-slash",
    "handshake-slash",
    "handshake",
    "hanukiah",
    "hard-hat",
    "hashtag",
    "hat-cowboy-side",
    "hat-cowboy",
    "hat-wizard",
    "hdd",
    "head-side-cough-slash",
    "head-side-cough",
    "head-side-mask",
    "head-side-virus",
    "heading",
    "headphones-alt",
    "headphones",
    "headset",
    "heart-broken",
    "heart",
    "heartbeat",
    "helicopter",
    "highlighter",
    "hiking",
    "hippo",
    "history",
    "hockey-puck",
    "holly-berry",
    "home",
    "horse-head",
    "horse",
    "hospital-alt",
    "hospital-symbol",
    "hospital-user",
    "hospital",
    "hot-tub",
    "hotdog",
    "hotel",
    "hourglass-end",
    "hourglass-half",
    "hourglass-start",
    "hourglass",
    "house-damage",
    "house-user",
    "hryvnia",
    "i-cursor",
    "ice-cream",
    "icicles",
    "icons",
    "id-badge",
    "id-card-alt",
    "id-card",
    "igloo",
    "image",
    "images",
    "inbox",
    "indent",
    "industry",
    "infinity",
    "info-circle",
    "info",
    "italic",
    "jedi",
    "joint",
    "journal-whills",
    "kaaba",
    "key",
    "keyboard",
    "khanda",
    "kiss-beam",
    "kiss-wink-heart",
    "kiss",
    "kiwi-bird",
    "landmark",
    "language",
    "laptop-code",
    "laptop-house",
    "laptop-medical",
    "laptop",
    "laugh-beam",
    "laugh-squint",
    "laugh-wink",
    "laugh",
    "layer-group",
    "leaf",
    "lemon",
    "less-than-equal",
    "less-than",
    "level-down-alt",
    "level-up-alt",
    "life-ring",
    "lightbulb",
    "link",
    "lira-sign",
    "list-alt",
    "list-ol",
    "list-ul",
    "list",
    "location-arrow",
    "lock-open",
    "lock",
    "long-arrow-alt-down",
    "long-arrow-alt-left",
    "long-arrow-alt-right",
    "long-arrow-alt-up",
    "low-vision",
    "luggage-cart",
    "lungs-virus",
    "lungs",
    "magic",
    "magnet",
    "mail-bulk",
    "male",
    "map-marked-alt",
    "map-marked",
    "map-marker-alt",
    "map-marker",
    "map-pin",
    "map-signs",
    "map",
    "marker",
    "mars-double",
    "mars-stroke-h",
    "mars-stroke-v",
    "mars-stroke",
    "mars",
    "mask",
    "medal",
    "medkit",
    "meh-blank",
    "meh-rolling-eyes",
    "meh",
    "memory",
    "menorah",
    "mercury",
    "meteor",
    "microchip",
    "microphone-alt-slash",
    "microphone-alt",
    "microphone-slash",
    "microphone",
    "microscope",
    "minus-circle",
    "minus-square",
    "minus",
    "mitten",
    "mobile-alt",
    "mobile",
    "money-bill-alt",
    "money-bill-wave-alt",
    "money-bill-wave",
    "money-bill",
    "money-check-alt",
    "money-check",
    "monument",
    "moon",
    "mortar-pestle",
    "mosque",
    "motorcycle",
    "mountain",
    "mouse-pointer",
    "mouse",
    "mug-hot",
    "music",
    "network-wired",
    "neuter",
    "newspaper",
    "not-equal",
    "notes-medical",
    "object-group",
    "object-ungroup",
    "oil-can",
    "om",
    "otter",
    "outdent",
    "pager",
    "paint-brush",
    "paint-roller",
    "palette",
    "pallet",
    "paper-plane",
    "paperclip",
    "parachute-box",
    "paragraph",
    "parking",
    "passport",
    "pastafarianism",
    "paste",
    "pause-circle",
    "pause",
    "paw",
    "peace",
    "pen-alt",
    "pen-fancy",
    "pen-nib",
    "pen-square",
    "pen",
    "pencil-alt",
    "pencil-ruler",
    "people-arrows",
    "people-carry",
    "pepper-hot",
    "percent",
    "percentage",
    "person-booth",
    "phone-alt",
    "phone-slash",
    "phone-square-alt",
    "phone-square",
    "phone-volume",
    "phone",
    "photo-video",
    "piggy-bank",
    "pills",
    "pizza-slice",
    "place-of-worship",
    "plane-arrival",
    "plane-departure",
    "plane-slash",
    "plane",
    "play-circle",
    "play",
    "plug",
    "plus-circle",
    "plus-square",
    "plus",
    "podcast",
    "poll-h",
    "poll",
    "poo-storm",
    "poo",
    "poop",
    "portrait",
    "pound-sign",
    "power-off",
    "pray",
    "praying-hands",
    "prescription-bottle-alt",
    "prescription-bottle",
    "prescription",
    "print",
    "procedures",
    "project-diagram",
    "pump-medical",
    "pump-soap",
    "puzzle-piece",
    "qrcode",
    "question-circle",
    "question",
    "quidditch",
    "quote-left",
    "quote-right",
    "quran",
    "radiation-alt",
    "radiation",
    "rainbow",
    "random",
    "receipt",
    "record-vinyl",
    "recycle",
    "redo-alt",
    "redo",
    "registered",
    "remove-format",
    "reply-all",
    "reply",
    "republican",
    "restroom",
    "retweet",
    "ribbon",
    "ring",
    "road",
    "robot",
    "rocket",
    "route",
    "rss-square",
    "rss",
    "ruble-sign",
    "ruler-combined",
    "ruler-horizontal",
    "ruler-vertical",
    "ruler",
    "running",
    "rupee-sign",
    "sad-cry",
    "sad-tear",
    "satellite-dish",
    "satellite",
    "save",
    "school",
    "screwdriver",
    "scroll",
    "sd-card",
    "search-dollar",
    "search-location",
    "search-minus",
    "search-plus",
    "search",
    "seedling",
    "server",
    "shapes",
    "share-alt-square",
    "share-alt",
    "share-square",
    "share",
    "shekel-sign",
    "shield-alt",
    "shield-virus",
    "ship",
    "shipping-fast",
    "shoe-prints",
    "shopping-bag",
    "shopping-basket",
    "shopping-cart",
    "shower",
    "shuttle-van",
    "sign-in-alt",
    "sign-language",
    "sign-out-alt",
    "sign",
    "signal",
    "signature",
    "sim-card",
    "sitemap",
    "skating",
    "skiing-nordic",
    "skiing",
    "skull-crossbones",
    "skull",
    "slash",
    "sleigh",
    "sliders-h",
    "smile-beam",
    "smile-wink",
    "smile",
    "smog",
    "smoking-ban",
    "smoking",
    "sms",
    "snowboarding",
    "snowflake",
    "snowman",
    "snowplow",
    "soap",
    "socks",
    "solar-panel",
    "sort-alpha-down-alt",
    "sort-alpha-down",
    "sort-alpha-up-alt",
    "sort-alpha-up",
    "sort-amount-down-alt",
    "sort-amount-down",
    "sort-amount-up-alt",
    "sort-amount-up",
    "sort-down",
    "sort-numeric-down-alt",
    "sort-numeric-down",
    "sort-numeric-up-alt",
    "sort-numeric-up",
    "sort-up",
    "sort",
    "spa",
    "space-shuttle",
    "spell-check",
    "spider",
    "spinner",
    "splotch",
    "spray-can",
    "square-full",
    "square-root-alt",
    "square",
    "stamp",
    "star-and-crescent",
    "star-half-alt",
    "star-half",
    "star-of-david",
    "star-of-life",
    "star",
    "step-backward",
    "step-forward",
    "stethoscope",
    "sticky-note",
    "stop-circle",
    "stop",
    "stopwatch-20",
    "stopwatch",
    "store-alt-slash",
    "store-alt",
    "store-slash",
    "store",
    "stream",
    "street-view",
    "strikethrough",
    "stroopwafel",
    "subscript",
    "subway",
    "suitcase-rolling",
    "suitcase",
    "sun",
    "superscript",
    "surprise",
    "swatchbook",
    "swimmer",
    "swimming-pool",
    "synagogue",
    "sync-alt",
    "sync",
    "syringe",
    "table-tennis",
    "table",
    "tablet-alt",
    "tablet",
    "tablets",
    "tachometer-alt",
    "tag",
    "tags",
    "tape",
    "tasks",
    "taxi",
    "teeth-open",
    "teeth",
    "temperature-high",
    "temperature-low",
    "tenge",
    "terminal",
    "text-height",
    "text-width",
    "th-large",
    "th-list",
    "th",
    "theater-masks",
    "thermometer-empty",
    "thermometer-full",
    "thermometer-half",
    "thermometer-quarter",
    "thermometer-three-quarters",
    "thermometer",
    "thumbs-down",
    "thumbs-up",
    "thumbtack",
    "ticket-alt",
    "times-circle",
    "times",
    "tint-slash",
    "tint",
    "tired",
    "toggle-off",
    "toggle-on",
    "toilet-paper-slash",
    "toilet-paper",
    "toilet",
    "toolbox",
    "tools",
    "tooth",
    "torah",
    "torii-gate",
    "tractor",
    "trademark",
    "traffic-light",
    "trailer",
    "train",
    "tram",
    "transgender-alt",
    "transgender",
    "trash-alt",
    "trash-restore-alt",
    "trash-restore",
    "trash",
    "tree",
    "trophy",
    "truck-loading",
    "truck-monster",
    "truck-moving",
    "truck-pickup",
    "truck",
    "tshirt",
    "tty",
    "tv",
    "umbrella-beach",
    "umbrella",
    "underline",
    "undo-alt",
    "undo",
    "universal-access",
    "university",
    "unlink",
    "unlock-alt",
    "unlock",
    "upload",
    "user-alt-slash",
    "user-alt",
    "user-astronaut",
    "user-check",
    "user-circle",
    "user-clock",
    "user-cog",
    "user-edit",
    "user-friends",
    "user-graduate",
    "user-injured",
    "user-lock",
    "user-md",
    "user-minus",
    "user-ninja",
    "user-nurse",
    "user-plus",
    "user-secret",
    "user-shield",
    "user-slash",
    "user-tag",
    "user-tie",
    "user-times",
    "user",
    "users-cog",
    "users",
    "utensil-spoon",
    "utensils",
    "vector-square",
    "venus-double",
    "venus-mars",
    "venus",
    "vial",
    "vials",
    "video-slash",
    "video",
    "vihara",
    "virus-slash",
    "virus",
    "viruses",
    "voicemail",
    "volleyball-ball",
    "volume-down",
    "volume-mute",
    "volume-off",
    "volume-up",
    "vote-yea",
    "vr-cardboard",
    "walking",
    "wallet",
    "warehouse",
    "water",
    "wave-square",
    "weight-hanging",
    "weight",
    "wheelchair",
    "wifi",
    "wind",
    "window-close",
    "window-maximize",
    "window-minimize",
    "window-restore",
    "wine-bottle",
    "wine-glass-alt",
    "wine-glass",
    "won-sign",
    "wrench",
    "x-ray",
    "yen-sign",
    "yin-yang"
  ]
}
;
},10286,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _SimpleLineIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_SimpleLineIcons.default, 'simple-line-icons', 'SimpleLineIcons.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10289,[14305,10130,10292]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "user": 57349,
  "people": 57345,
  "user-female": 57344,
  "user-follow": 57346,
  "user-following": 57347,
  "user-unfollow": 57348,
  "login": 57446,
  "logout": 57445,
  "emotsmile": 57377,
  "phone": 58880,
  "call-end": 57416,
  "call-in": 57415,
  "call-out": 57414,
  "map": 57395,
  "location-pin": 57494,
  "direction": 57410,
  "directions": 57409,
  "compass": 57413,
  "layers": 57396,
  "menu": 58881,
  "list": 57447,
  "options-vertical": 58882,
  "options": 58883,
  "arrow-down": 58884,
  "arrow-left": 58885,
  "arrow-right": 58886,
  "arrow-up": 58887,
  "arrow-up-circle": 57464,
  "arrow-left-circle": 57466,
  "arrow-right-circle": 57465,
  "arrow-down-circle": 57467,
  "check": 57472,
  "clock": 57473,
  "plus": 57493,
  "minus": 58901,
  "close": 57474,
  "event": 58905,
  "exclamation": 58903,
  "organization": 58902,
  "trophy": 57350,
  "screen-smartphone": 57360,
  "screen-desktop": 57361,
  "plane": 57362,
  "notebook": 57363,
  "mustache": 57364,
  "mouse": 57365,
  "magnet": 57366,
  "energy": 57376,
  "disc": 57378,
  "cursor": 57454,
  "cursor-move": 57379,
  "crop": 57380,
  "chemistry": 57382,
  "speedometer": 57351,
  "shield": 57358,
  "screen-tablet": 57359,
  "magic-wand": 57367,
  "hourglass": 57368,
  "graduation": 57369,
  "ghost": 57370,
  "game-controller": 57371,
  "fire": 57372,
  "eyeglass": 57373,
  "envelope-open": 57374,
  "envelope-letter": 57375,
  "bell": 57383,
  "badge": 57384,
  "anchor": 57385,
  "wallet": 57386,
  "vector": 57387,
  "speech": 57388,
  "puzzle": 57389,
  "printer": 57390,
  "present": 57391,
  "playlist": 57392,
  "pin": 57393,
  "picture": 57394,
  "handbag": 57397,
  "globe-alt": 57398,
  "globe": 57399,
  "folder-alt": 57401,
  "folder": 57481,
  "film": 57402,
  "feed": 57403,
  "drop": 57406,
  "drawer": 57407,
  "docs": 57408,
  "doc": 57477,
  "diamond": 57411,
  "cup": 57412,
  "calculator": 57417,
  "bubbles": 57418,
  "briefcase": 57419,
  "book-open": 57420,
  "basket-loaded": 57421,
  "basket": 57422,
  "bag": 57423,
  "action-undo": 57424,
  "action-redo": 57425,
  "wrench": 57426,
  "umbrella": 57427,
  "trash": 57428,
  "tag": 57429,
  "support": 57430,
  "frame": 57400,
  "size-fullscreen": 57431,
  "size-actual": 57432,
  "shuffle": 57433,
  "share-alt": 57434,
  "share": 57435,
  "rocket": 57436,
  "question": 57437,
  "pie-chart": 57438,
  "pencil": 57439,
  "note": 57440,
  "loop": 57444,
  "home": 57449,
  "grid": 57450,
  "graph": 57451,
  "microphone": 57443,
  "music-tone-alt": 57441,
  "music-tone": 57442,
  "earphones-alt": 57404,
  "earphones": 57405,
  "equalizer": 57452,
  "like": 57448,
  "dislike": 57453,
  "control-start": 57455,
  "control-rewind": 57456,
  "control-play": 57457,
  "control-pause": 57458,
  "control-forward": 57459,
  "control-end": 57460,
  "volume-1": 57503,
  "volume-2": 57504,
  "volume-off": 57505,
  "calendar": 57461,
  "bulb": 57462,
  "chart": 57463,
  "ban": 57468,
  "bubble": 57469,
  "camrecorder": 57470,
  "camera": 57471,
  "cloud-download": 57475,
  "cloud-upload": 57476,
  "envelope": 57478,
  "eye": 57479,
  "flag": 57480,
  "heart": 57482,
  "info": 57483,
  "key": 57484,
  "link": 57485,
  "lock": 57486,
  "lock-open": 57487,
  "magnifier": 57488,
  "magnifier-add": 57489,
  "magnifier-remove": 57490,
  "paper-clip": 57491,
  "paper-plane": 57492,
  "power": 57495,
  "refresh": 57496,
  "reload": 57497,
  "settings": 57498,
  "star": 57499,
  "symbol-female": 57500,
  "symbol-male": 57501,
  "target": 57502,
  "credit-card": 57381,
  "paypal": 58888,
  "social-tumblr": 57354,
  "social-twitter": 57353,
  "social-facebook": 57355,
  "social-instagram": 58889,
  "social-linkedin": 58890,
  "social-pinterest": 58891,
  "social-github": 58892,
  "social-google": 58893,
  "social-reddit": 58894,
  "social-skype": 58895,
  "social-dribbble": 57357,
  "social-behance": 58896,
  "social-foursqare": 58897,
  "social-soundcloud": 58898,
  "social-spotify": 58899,
  "social-stumbleupon": 58900,
  "social-youtube": 57352,
  "social-dropbox": 57356,
  "social-vkontakte": 58904,
  "social-steam": 58912
};
},10292,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Feather = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Feather.default, 'Feather', 'Feather.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10295,[14305,10130,10298]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "activity": 61696,
  "airplay": 61697,
  "alert-circle": 61698,
  "alert-octagon": 61699,
  "alert-triangle": 61700,
  "align-center": 61701,
  "align-justify": 61702,
  "align-left": 61703,
  "align-right": 61704,
  "anchor": 61705,
  "aperture": 61706,
  "archive": 61707,
  "arrow-down": 61708,
  "arrow-down-circle": 61709,
  "arrow-down-left": 61710,
  "arrow-down-right": 61711,
  "arrow-left": 61712,
  "arrow-left-circle": 61713,
  "arrow-right": 61714,
  "arrow-right-circle": 61715,
  "arrow-up": 61716,
  "arrow-up-circle": 61717,
  "arrow-up-left": 61718,
  "arrow-up-right": 61719,
  "at-sign": 61720,
  "award": 61721,
  "bar-chart": 61722,
  "bar-chart-2": 61723,
  "battery": 61724,
  "battery-charging": 61725,
  "bell": 61726,
  "bell-off": 61727,
  "bluetooth": 61728,
  "bold": 61729,
  "book": 61730,
  "book-open": 61731,
  "bookmark": 61732,
  "box": 61733,
  "briefcase": 61734,
  "calendar": 61735,
  "camera": 61736,
  "camera-off": 61737,
  "cast": 61738,
  "check": 61739,
  "check-circle": 61740,
  "check-square": 61741,
  "chevron-down": 61742,
  "chevron-left": 61743,
  "chevron-right": 61744,
  "chevron-up": 61745,
  "chevrons-down": 61746,
  "chevrons-left": 61747,
  "chevrons-right": 61748,
  "chevrons-up": 61749,
  "chrome": 61750,
  "circle": 61751,
  "clipboard": 61752,
  "clock": 61753,
  "cloud": 61754,
  "cloud-drizzle": 61755,
  "cloud-lightning": 61756,
  "cloud-off": 61757,
  "cloud-rain": 61758,
  "cloud-snow": 61759,
  "code": 61760,
  "codepen": 61761,
  "codesandbox": 61972,
  "coffee": 61762,
  "columns": 61973,
  "command": 61763,
  "compass": 61764,
  "copy": 61765,
  "corner-down-left": 61766,
  "corner-down-right": 61767,
  "corner-left-down": 61768,
  "corner-left-up": 61769,
  "corner-right-down": 61770,
  "corner-right-up": 61771,
  "corner-up-left": 61772,
  "corner-up-right": 61773,
  "cpu": 61774,
  "credit-card": 61775,
  "crop": 61776,
  "crosshair": 61777,
  "database": 61778,
  "delete": 61779,
  "disc": 61780,
  "dollar-sign": 61781,
  "download": 61782,
  "download-cloud": 61783,
  "droplet": 61784,
  "edit": 61785,
  "edit-2": 61786,
  "edit-3": 61787,
  "external-link": 61788,
  "eye": 61789,
  "eye-off": 61790,
  "facebook": 61791,
  "fast-forward": 61792,
  "feather": 61793,
  "figma": 61970,
  "file": 61794,
  "file-minus": 61795,
  "file-plus": 61796,
  "file-text": 61797,
  "film": 61798,
  "filter": 61799,
  "flag": 61800,
  "folder": 61801,
  "folder-minus": 61802,
  "folder-plus": 61803,
  "frown": 61804,
  "gift": 61805,
  "git-branch": 61806,
  "git-commit": 61807,
  "git-merge": 61808,
  "git-pull-request": 61809,
  "github": 61810,
  "gitlab": 61811,
  "globe": 61812,
  "grid": 61813,
  "hard-drive": 61814,
  "hash": 61815,
  "headphones": 61816,
  "heart": 61817,
  "help-circle": 61818,
  "hexagon": 61974,
  "home": 61819,
  "image": 61820,
  "inbox": 61821,
  "info": 61822,
  "instagram": 61823,
  "italic": 61824,
  "key": 61967,
  "layers": 61825,
  "layout": 61826,
  "life-buoy": 61827,
  "link": 61828,
  "link-2": 61829,
  "linkedin": 61830,
  "list": 61831,
  "loader": 61832,
  "lock": 61833,
  "log-in": 61834,
  "log-out": 61835,
  "mail": 61836,
  "map": 61837,
  "map-pin": 61838,
  "maximize": 61839,
  "maximize-2": 61840,
  "meh": 61841,
  "menu": 61842,
  "message-circle": 61843,
  "message-square": 61844,
  "mic": 61845,
  "mic-off": 61846,
  "minimize": 61847,
  "minimize-2": 61848,
  "minus": 61849,
  "minus-circle": 61850,
  "minus-square": 61851,
  "monitor": 61852,
  "moon": 61853,
  "more-horizontal": 61854,
  "more-vertical": 61855,
  "mouse-pointer": 61968,
  "move": 61856,
  "music": 61857,
  "navigation": 61858,
  "navigation-2": 61859,
  "octagon": 61860,
  "package": 61861,
  "paperclip": 61862,
  "pause": 61863,
  "pause-circle": 61864,
  "pen-tool": 61969,
  "percent": 61865,
  "phone": 61866,
  "phone-call": 61867,
  "phone-forwarded": 61868,
  "phone-incoming": 61869,
  "phone-missed": 61870,
  "phone-off": 61871,
  "phone-outgoing": 61872,
  "pie-chart": 61873,
  "play": 61874,
  "play-circle": 61875,
  "plus": 61876,
  "plus-circle": 61877,
  "plus-square": 61878,
  "pocket": 61879,
  "power": 61880,
  "printer": 61881,
  "radio": 61882,
  "refresh-ccw": 61883,
  "refresh-cw": 61884,
  "repeat": 61885,
  "rewind": 61886,
  "rotate-ccw": 61887,
  "rotate-cw": 61888,
  "rss": 61889,
  "save": 61890,
  "scissors": 61891,
  "search": 61892,
  "send": 61893,
  "server": 61894,
  "settings": 61895,
  "share": 61896,
  "share-2": 61897,
  "shield": 61898,
  "shield-off": 61899,
  "shopping-bag": 61900,
  "shopping-cart": 61901,
  "shuffle": 61902,
  "sidebar": 61903,
  "skip-back": 61904,
  "skip-forward": 61905,
  "slack": 61906,
  "slash": 61907,
  "sliders": 61908,
  "smartphone": 61909,
  "smile": 61910,
  "speaker": 61911,
  "square": 61912,
  "star": 61913,
  "stop-circle": 61914,
  "sun": 61915,
  "sunrise": 61916,
  "sunset": 61917,
  "tablet": 61975,
  "tag": 61919,
  "target": 61920,
  "terminal": 61921,
  "thermometer": 61922,
  "thumbs-down": 61923,
  "thumbs-up": 61924,
  "toggle-left": 61925,
  "toggle-right": 61926,
  "trash": 61927,
  "trash-2": 61928,
  "trello": 61929,
  "trending-down": 61930,
  "trending-up": 61931,
  "triangle": 61932,
  "truck": 61933,
  "tv": 61934,
  "twitter": 61935,
  "type": 61936,
  "umbrella": 61937,
  "underline": 61938,
  "unlock": 61939,
  "upload": 61940,
  "upload-cloud": 61941,
  "user": 61942,
  "user-check": 61943,
  "user-minus": 61944,
  "user-plus": 61945,
  "user-x": 61946,
  "users": 61947,
  "video": 61948,
  "video-off": 61949,
  "voicemail": 61950,
  "volume": 61951,
  "volume-1": 61952,
  "volume-2": 61953,
  "volume-x": 61954,
  "watch": 61955,
  "wifi": 61956,
  "wifi-off": 61957,
  "wind": 61958,
  "x": 61959,
  "x-circle": 61960,
  "x-octagon": 61971,
  "x-square": 61961,
  "youtube": 61962,
  "zap": 61963,
  "zap-off": 61964,
  "zoom-in": 61965,
  "zoom-out": 61966
};
},10298,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _AntDesign = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_AntDesign.default, 'anticon', 'AntDesign.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10301,[14305,10130,10304]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }

      var test1 = new String('abc');
      test1[5] = 'de';

      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }

      var test2 = {};

      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }

      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });

      if (order2.join('') !== '0123456789') {
        return false;
      }

      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });

      if (Object.keys(_extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      return false;
    }
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);

        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };
},10303,[14344]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "stepforward": 58880,
  "stepbackward": 58881,
  "forward": 58882,
  "banckward": 58883,
  "caretright": 58884,
  "caretleft": 58885,
  "caretdown": 58886,
  "caretup": 58887,
  "rightcircle": 58888,
  "leftcircle": 58889,
  "upcircle": 58890,
  "downcircle": 58891,
  "rightcircleo": 58892,
  "leftcircleo": 58893,
  "upcircleo": 58894,
  "downcircleo": 58895,
  "verticleleft": 58896,
  "verticleright": 58897,
  "back": 58898,
  "retweet": 58899,
  "shrink": 58900,
  "arrowsalt": 58901,
  "doubleright": 58903,
  "doubleleft": 58904,
  "arrowdown": 58905,
  "arrowup": 58906,
  "arrowright": 58907,
  "arrowleft": 58908,
  "down": 58909,
  "up": 58910,
  "right": 58911,
  "left": 58912,
  "minussquareo": 58913,
  "minuscircle": 58914,
  "minuscircleo": 58915,
  "minus": 58916,
  "pluscircleo": 58917,
  "pluscircle": 58918,
  "plus": 58919,
  "infocirlce": 58920,
  "infocirlceo": 58921,
  "info": 58922,
  "exclamation": 58923,
  "exclamationcircle": 58924,
  "exclamationcircleo": 58925,
  "closecircle": 58926,
  "closecircleo": 58927,
  "checkcircle": 58928,
  "checkcircleo": 58929,
  "check": 58930,
  "close": 58931,
  "customerservice": 58932,
  "creditcard": 58933,
  "codesquareo": 58934,
  "book": 58935,
  "barschart": 58936,
  "bars": 58937,
  "question": 58938,
  "questioncircle": 58939,
  "questioncircleo": 58940,
  "pause": 58941,
  "pausecircle": 58942,
  "pausecircleo": 58943,
  "clockcircle": 58944,
  "clockcircleo": 58945,
  "swap": 58946,
  "swapleft": 58947,
  "swapright": 58948,
  "plussquareo": 58949,
  "frown": 58950,
  "menufold": 58968,
  "mail": 58969,
  "link": 58971,
  "areachart": 58972,
  "linechart": 58973,
  "home": 58974,
  "laptop": 58975,
  "star": 58976,
  "staro": 58977,
  "filter": 58979,
  "meho": 58982,
  "meh": 58983,
  "shoppingcart": 58984,
  "save": 58985,
  "user": 58986,
  "videocamera": 58987,
  "totop": 58988,
  "team": 58989,
  "sharealt": 58993,
  "setting": 58994,
  "picture": 58996,
  "phone": 58997,
  "paperclip": 58998,
  "notification": 58999,
  "menuunfold": 59001,
  "inbox": 59002,
  "lock": 59003,
  "qrcode": 59004,
  "tags": 59005,
  "tagso": 59006,
  "cloudo": 59007,
  "cloud": 59008,
  "cloudupload": 59009,
  "clouddownload": 59010,
  "clouddownloado": 59011,
  "clouduploado": 59012,
  "enviroment": 59013,
  "enviromento": 59014,
  "eye": 59015,
  "eyeo": 59016,
  "camera": 59017,
  "camerao": 59018,
  "windows": 59019,
  "export2": 59024,
  "export": 59025,
  "circledowno": 59027,
  "circledown": 59028,
  "hdd": 59034,
  "ie": 59035,
  "delete": 59039,
  "enter": 59040,
  "pushpino": 59041,
  "pushpin": 59042,
  "heart": 59043,
  "hearto": 59044,
  "smile-circle": 59047,
  "smileo": 59048,
  "frowno": 59049,
  "calculator": 59050,
  "chrome": 59052,
  "github": 59053,
  "iconfontdesktop": 59060,
  "caretcircleoup": 59061,
  "upload": 59062,
  "download": 59063,
  "piechart": 59064,
  "lock1": 59065,
  "unlock": 59066,
  "windowso": 59068,
  "dotchart": 59069,
  "barchart": 59070,
  "codesquare": 59071,
  "plussquare": 59072,
  "minussquare": 59073,
  "closesquare": 59074,
  "closesquareo": 59075,
  "checksquare": 59076,
  "checksquareo": 59077,
  "fastbackward": 59078,
  "fastforward": 59079,
  "upsquare": 59080,
  "downsquare": 59081,
  "leftsquare": 59082,
  "rightsquare": 59083,
  "rightsquareo": 59084,
  "leftsquareo": 59085,
  "down-square-o": 59086,
  "up-square-o": 59087,
  "play": 59088,
  "playcircleo": 59089,
  "tag": 59090,
  "tago": 59091,
  "addfile": 59664,
  "folder1": 58978,
  "file1": 58980,
  "switcher": 59667,
  "addfolder": 59668,
  "folderopen": 59033,
  "search1": 58992,
  "ellipsis1": 58951,
  "calendar": 59067,
  "filetext1": 59032,
  "copy1": 58952,
  "jpgfile1": 59036,
  "pdffile1": 59059,
  "exclefile1": 59056,
  "pptfile1": 59057,
  "unknowfile1": 59055,
  "wordfile1": 59058,
  "dingding": 59683,
  "dingding-o": 59685,
  "mobile1": 59000,
  "tablet1": 58990,
  "bells": 58958,
  "disconnect": 58959,
  "database": 58960,
  "barcode": 58962,
  "hourglass": 58963,
  "key": 58964,
  "flag": 58965,
  "layout": 58966,
  "printer": 58995,
  "USB": 59095,
  "skin": 59096,
  "tool": 59097,
  "car": 59100,
  "addusergroup": 59101,
  "carryout": 59103,
  "deleteuser": 59104,
  "deleteusergroup": 59105,
  "man": 59106,
  "isv": 59107,
  "gift": 59108,
  "idcard": 59109,
  "medicinebox": 59110,
  "redenvelopes": 59111,
  "rest": 59112,
  "Safety": 59114,
  "wallet": 59115,
  "woman": 59116,
  "adduser": 59117,
  "bank": 59118,
  "Trophy": 59119,
  "loading1": 59054,
  "loading2": 58957,
  "like2": 59037,
  "dislike2": 59038,
  "like1": 58956,
  "dislike1": 58955,
  "bulb1": 58953,
  "rocket1": 59663,
  "select1": 58954,
  "apple1": 59020,
  "apple-o": 59092,
  "android1": 59704,
  "android": 59021,
  "aliwangwang-o1": 59023,
  "aliwangwang": 59022,
  "pay-circle1": 59045,
  "pay-circle-o1": 59046,
  "poweroff": 59093,
  "trademark": 58961,
  "find": 59099,
  "copyright": 59102,
  "sound": 59113,
  "earth": 59121,
  "wifi": 59094,
  "sync": 59098,
  "login": 58967,
  "logout": 58970,
  "reload1": 58902,
  "message1": 59051,
  "shake": 59727,
  "API": 59729,
  "appstore-o": 59029,
  "appstore1": 59030,
  "scan1": 59031,
  "exception1": 58981,
  "contacts": 59120,
  "solution1": 58991,
  "fork": 59122,
  "edit": 59026,
  "form": 59798,
  "warning": 59799,
  "table": 59800,
  "profile": 59801,
  "dashboard": 59802,
  "indent-left": 59814,
  "indent-right": 59815,
  "menu-unfold": 59820,
  "menu-fold": 59821,
  "antdesign": 59826,
  "alipay-square": 59827,
  "codepen-circle": 59828,
  "google": 59829,
  "amazon": 59830,
  "codepen": 59831,
  "facebook-square": 59832,
  "dropbox": 59833,
  "googleplus": 59834,
  "linkedin-square": 59835,
  "medium-monogram": 59836,
  "gitlab": 59837,
  "medium-wordmark": 59838,
  "QQ": 59839,
  "skype": 59840,
  "taobao-square": 59841,
  "alipay-circle": 59842,
  "youtube": 59843,
  "wechat": 59844,
  "twitter": 59845,
  "weibo": 59846,
  "HTML": 59847,
  "taobao-circle": 59123,
  "weibo-circle": 59124,
  "weibo-square": 59125,
  "CodeSandbox": 59860,
  "aliyun": 59892,
  "zhihu": 59139,
  "behance": 59143,
  "dribbble": 59145,
  "dribbble-square": 59146,
  "behance-square": 59144,
  "file-markdown": 59140,
  "instagram": 59147,
  "yuque": 59148,
  "slack": 59141,
  "slack-square": 59142
};
},10304,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = exports.default = undefined;

  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Fontisto = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var iconSet = (0, _createIconSet.default)(_Fontisto.default, 'Fontisto', 'Fontisto.ttf');
  var _default = iconSet;
  exports.default = _default;
  var Button = iconSet.Button,
      TabBarItem = iconSet.TabBarItem,
      TabBarItemIOS = iconSet.TabBarItemIOS,
      getImageSource = iconSet.getImageSource,
      getImageSourceSync = iconSet.getImageSourceSync;
  exports.getImageSourceSync = getImageSourceSync;
  exports.getImageSource = getImageSource;
  exports.TabBarItemIOS = TabBarItemIOS;
  exports.TabBarItem = TabBarItem;
  exports.Button = Button;
},10307,[14305,10130,10310]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "acrobat-reader": 60095,
  "applemusic": 60096,
  "atlassian": 60097,
  "aws": 60098,
  "baidu": 60099,
  "bing": 60100,
  "bower": 60101,
  "dailymotion": 60102,
  "delicious": 60103,
  "deviantart": 60104,
  "disqus": 60105,
  "flipboard": 60106,
  "graphql": 60107,
  "hexo": 60108,
  "hipchat": 60109,
  "icq": 60110,
  "invision": 60111,
  "jekyll": 60112,
  "jira": 60113,
  "json": 60114,
  "livestream": 60115,
  "messenger": 60116,
  "meteor": 60117,
  "onenote": 60118,
  "mongodb": 60119,
  "netflix": 60120,
  "nginx": 60121,
  "odnoklassniki": 60122,
  "onedrive": 60123,
  "origin": 60124,
  "pingdom": 60125,
  "rails": 60126,
  "raspberry-pi": 60127,
  "redis": 60128,
  "redux": 60129,
  "saucelabs": 60130,
  "scorp": 60131,
  "sentry": 60132,
  "shazam": 60133,
  "shopify": 60134,
  "sinaweibo": 60135,
  "slides": 60136,
  "sublimetext": 60137,
  "swift": 60138,
  "ted": 60139,
  "telegram": 60140,
  "tesla": 60141,
  "tinder": 60142,
  "treehouse": 60143,
  "twoo": 60144,
  "udacity": 60145,
  "webstorm": 60146,
  "wix": 60147,
  "yandex-international": 60148,
  "yandex": 60149,
  "ember": 60087,
  "cpanel": 60088,
  "viber": 60089,
  "deskpro": 60090,
  "discord": 60091,
  "discourse": 60092,
  "adobe": 60059,
  "algolia": 60060,
  "atom": 60061,
  "babel": 60062,
  "coffeescript": 60063,
  "electronjs": 60064,
  "mysql": 60065,
  "oracle": 60066,
  "php": 60067,
  "sourcetree": 60068,
  "ubuntu": 60069,
  "unity": 60070,
  "unreal-engine": 60071,
  "webpack": 60072,
  "angelist": 60026,
  "app-store": 60027,
  "digg": 60030,
  "dockers": 60031,
  "envato": 60032,
  "gitlab": 60033,
  "google-drive": 60034,
  "google-play": 60035,
  "grunt": 60036,
  "gulp": 60037,
  "hacker-news": 60038,
  "imdb": 60039,
  "jenkins": 60040,
  "joomla": 60041,
  "kickstarter": 60042,
  "laravel": 60043,
  "less": 60044,
  "line": 60045,
  "npm": 60046,
  "periscope": 60047,
  "product-hunt": 60048,
  "quora": 60049,
  "skyatlas": 60050,
  "stylus": 60051,
  "travis": 60052,
  "trello": 60053,
  "uber": 60054,
  "vine": 60055,
  "visual-studio": 60056,
  "vk": 60057,
  "vuejs": 60058,
  "microsoft": 60025,
  "blogger": 60028,
  "500px": 59658,
  "amazon": 59659,
  "ampproject": 59660,
  "android": 59661,
  "angularjs": 59662,
  "apple": 59663,
  "behance": 59664,
  "bitbucket": 59665,
  "bluetooth-b": 59666,
  "cloudflare": 59667,
  "codepen": 59668,
  "css3": 59669,
  "dribbble": 59670,
  "dropbox": 59671,
  "facebook": 59672,
  "flickr": 59673,
  "foursquare": 59674,
  "git": 59675,
  "github": 59676,
  "google-plus": 59677,
  "google": 59678,
  "hangout": 59679,
  "houzz": 59680,
  "html5": 59681,
  "instagram": 59682,
  "java": 59683,
  "jquery": 59684,
  "jsfiddle": 59685,
  "linkedin": 59686,
  "linux": 59687,
  "magento": 59688,
  "maxcdn": 59689,
  "medium": 59690,
  "meetup": 59691,
  "nodejs": 59692,
  "opencart": 59693,
  "pinterest": 59694,
  "playstation": 59695,
  "python": 59696,
  "react": 59697,
  "reddit": 59698,
  "ruby": 59699,
  "sass": 59700,
  "skype": 59701,
  "slack": 59702,
  "snapchat": 59703,
  "soundcloud": 59704,
  "spotify": 59705,
  "stack-overflow": 59706,
  "steam": 59707,
  "stumbleupon": 59708,
  "svn": 59709,
  "swarm": 59710,
  "tripadvisor": 59711,
  "tumblr": 59712,
  "twitch": 59713,
  "twitter": 59714,
  "vimeo": 59715,
  "wetransfer": 59716,
  "whatsapp": 59717,
  "wifi-logo": 59718,
  "wikipedia": 59719,
  "windows": 59720,
  "wordpress": 59721,
  "xbox": 59722,
  "yahoo": 59723,
  "yelp": 59724,
  "youtube-play": 59725,
  "cocoapods": 60200,
  "composer": 60201,
  "yarn": 60202,
  "language": 59943,
  "toggle-off": 59948,
  "toggle-on": 60029,
  "anchor": 60094,
  "archive": 60150,
  "at": 60151,
  "ban": 60152,
  "battery-half": 60153,
  "battery-full": 60154,
  "battery-empty": 60155,
  "battery-quarter": 60156,
  "battery-three-quarters": 60157,
  "bell-alt": 60158,
  "bell": 60159,
  "bookmark-alt": 60160,
  "bookmark": 60161,
  "bug": 60162,
  "calculator": 60163,
  "calendar": 60164,
  "crosshairs": 60165,
  "desktop": 60166,
  "download": 60167,
  "film": 60168,
  "history": 60169,
  "hourglass-end": 60170,
  "hourglass-half": 60171,
  "hourglass-start": 60172,
  "hourglass": 60173,
  "info": 60174,
  "key": 60175,
  "keyboard": 60176,
  "laptop": 60177,
  "lightbulb": 60178,
  "magnet": 60179,
  "map-marker-alt": 60180,
  "map-marker": 60181,
  "map": 60182,
  "mobile-alt": 60183,
  "mobile": 60184,
  "paw": 60185,
  "phone": 60186,
  "power": 60187,
  "qrcode": 60188,
  "question": 60189,
  "search": 60190,
  "sitemap": 60191,
  "star-half": 60192,
  "stopwatch": 60193,
  "tablet-alt": 60194,
  "tablet": 60195,
  "ticket": 60196,
  "tv": 60197,
  "upload": 60198,
  "user-secret": 60199,
  "camera": 59798,
  "clock": 59799,
  "close-a": 59800,
  "code": 59801,
  "comment": 59802,
  "commenting": 59803,
  "comments": 59804,
  "crop": 59805,
  "cursor": 59806,
  "database": 59807,
  "date": 59808,
  "earth": 59809,
  "email": 59810,
  "eye": 59811,
  "female": 59812,
  "favorite": 59813,
  "filter": 59814,
  "fire": 59815,
  "flag": 59816,
  "flash": 59817,
  "home": 59818,
  "link": 59819,
  "locked": 59820,
  "male": 59821,
  "minus-a": 59822,
  "more-v-a": 59823,
  "more-v": 59824,
  "move-h-a": 59825,
  "move-h": 59826,
  "nav-icon-a": 59827,
  "nav-icon-grid-a": 59828,
  "nav-icon-grid": 59829,
  "nav-icon-list-a": 59830,
  "nav-icon-list": 59831,
  "nav-icon": 59832,
  "navigate": 59833,
  "paper-plane": 59834,
  "person": 59835,
  "persons": 59836,
  "picture": 59837,
  "plus-a": 59838,
  "print": 59839,
  "quote-a-left": 59840,
  "quote-a-right": 59841,
  "quote-left": 59842,
  "quote-right": 59843,
  "reply": 59844,
  "rss": 59845,
  "scissors": 59846,
  "share-a": 59847,
  "share": 59848,
  "trash": 59849,
  "unlocked": 59850,
  "usb": 59851,
  "wifi": 59852,
  "world-o": 59853,
  "world": 59854,
  "zoom": 59855,
  "adjust": 60015,
  "recycle": 60016,
  "pinboard": 60093,
  "zoom-minus": 60082,
  "zoom-plus": 60083,
  "check": 60084,
  "asterisk": 60085,
  "hashtag": 60086,
  "checkbox-active": 59778,
  "checkbox-passive": 59779,
  "radio-btn-active": 59780,
  "radio-btn-passive": 59781,
  "shopping-bag-1": 60011,
  "shopping-bag": 60012,
  "shopping-barcode": 60017,
  "shopping-basket-add": 60018,
  "shopping-basket-remove": 60019,
  "shopping-basket": 60020,
  "shopping-package": 60021,
  "shopping-pos-machine": 60022,
  "shopping-sale": 60023,
  "shopping-store": 60024,
  "angle-dobule-down": 59748,
  "angle-dobule-left": 59749,
  "angle-dobule-right": 59750,
  "angle-dobule-up": 59751,
  "angle-down": 59752,
  "angle-left": 59753,
  "angle-right": 59754,
  "angle-up": 59755,
  "arrow-down-l": 59756,
  "arrow-down": 59757,
  "arrow-expand": 59758,
  "arrow-h": 59759,
  "arrow-left-l": 59760,
  "arrow-left": 59761,
  "arrow-move": 59762,
  "arrow-resize": 59763,
  "arrow-return-left": 59764,
  "arrow-return-right": 59765,
  "arrow-right-l": 59766,
  "arrow-right": 59767,
  "arrow-swap": 59768,
  "arrow-up-l": 59769,
  "arrow-up": 59770,
  "arrow-v": 59771,
  "caret-down": 59772,
  "caret-left": 59773,
  "caret-right": 59774,
  "caret-up": 59775,
  "fi": 59776,
  "fontisto": 59777,
  "backward": 59866,
  "eject": 59867,
  "equalizer": 59868,
  "forward": 59869,
  "headphone": 59870,
  "heart": 59871,
  "mic": 59872,
  "music-note": 59873,
  "pause": 59874,
  "play-list": 59875,
  "play": 59876,
  "player-settings": 59877,
  "podcast": 59878,
  "random": 59879,
  "record": 59880,
  "star": 59881,
  "step-backwrad": 59882,
  "step-forward": 59883,
  "stop": 59884,
  "volume-down": 59885,
  "volume-mute": 59886,
  "volume-off": 59887,
  "volume-up": 59888,
  "airplay": 60008,
  "bold": 59918,
  "broken-link": 59919,
  "center-align": 59920,
  "close": 59921,
  "columns": 59922,
  "copy": 59923,
  "eraser": 59924,
  "export": 59925,
  "file-1": 59926,
  "file-2": 59927,
  "folder": 59928,
  "font": 59929,
  "import": 59930,
  "indent": 59931,
  "italic": 59932,
  "justify": 59933,
  "left-align": 59934,
  "link2": 59935,
  "list-1": 59936,
  "list-2": 59937,
  "outdent": 59938,
  "paperclip": 59939,
  "paragraph": 59940,
  "paste": 59941,
  "preview": 59942,
  "print2": 59943,
  "redo": 59944,
  "right-align": 59945,
  "save-1": 59946,
  "save": 59947,
  "scissors2": 59948,
  "strikethrough": 59949,
  "subscript": 59950,
  "superscript": 59951,
  "table-1": 59952,
  "table-2": 59953,
  "text-height": 59954,
  "text-width": 59955,
  "underline": 59956,
  "undo": 59957,
  "cloud-down": 59958,
  "cloud-refresh": 59959,
  "cloud-up": 59960,
  "cloudy-gusts": 59961,
  "cloudy": 59962,
  "compass": 59963,
  "day-cloudy": 59964,
  "day-haze": 59965,
  "day-lightning": 59966,
  "day-rain": 59967,
  "day-snow": 59968,
  "day-sunny": 59969,
  "fog": 59970,
  "horizon-alt": 59971,
  "horizon": 59972,
  "lightning": 59973,
  "lightnings": 59974,
  "night-alt-cloudy": 59975,
  "night-alt-lightning": 59976,
  "night-alt-rain": 59977,
  "night-alt-snow": 59978,
  "night-clear": 59979,
  "rain": 59980,
  "rainbow": 59981,
  "rains": 59982,
  "snow": 59983,
  "snows": 59984,
  "thermometer": 59985,
  "umbrella": 59986,
  "wind": 59987,
  "confused": 59988,
  "dizzy": 59989,
  "expressionless": 59990,
  "frowning": 59991,
  "heart-eyes": 59992,
  "laughing": 59993,
  "mad": 59994,
  "nervous": 59995,
  "neutral": 59996,
  "open-mouth": 59997,
  "rage": 59998,
  "slightly-smile": 59999,
  "smiley": 60000,
  "smiling": 60001,
  "stuck-out-tongue": 60002,
  "sunglasses": 60003,
  "surprised": 60004,
  "tongue": 60005,
  "wink": 60006,
  "zipper-mouth": 60007,
  "aids": 60233,
  "ambulance": 60234,
  "bandage": 60235,
  "bed-patient": 60236,
  "blood-drop": 60237,
  "blood-test": 60238,
  "blood": 60239,
  "dna": 60240,
  "doctor": 60241,
  "drug-pack": 60242,
  "first-aid-alt": 60243,
  "heart-alt": 60244,
  "heartbeat-alt": 60245,
  "heartbeat": 60246,
  "helicopter-ambulance": 60247,
  "hospital": 60248,
  "injection-syringe": 60249,
  "laboratory": 60250,
  "nurse": 60251,
  "nursing-home": 60252,
  "paralysis-disability": 60253,
  "pills": 60254,
  "prescription": 60255,
  "pulse": 60256,
  "stethoscope": 60257,
  "surgical-knife": 60258,
  "tablets": 60259,
  "test-bottle": 60260,
  "test-tube-alt": 60261,
  "test-tube": 60262,
  "thermometer-alt": 60263,
  "american-express": 59856,
  "credit-card": 59857,
  "google-wallet": 59858,
  "iyzigo": 59859,
  "mastercard": 59860,
  "paypal-p": 59861,
  "paypal": 59862,
  "payu": 59863,
  "troy": 59864,
  "visa": 59865,
  "dinners-club": 60010,
  "apple-pay": 60009,
  "discover": 60013,
  "jcb": 60014,
  "dislike": 59796,
  "like": 59797,
  "audio-description": 59648,
  "blind": 59649,
  "braille": 59650,
  "deaf": 59651,
  "fa-american-sign-language-interpreting": 59652,
  "low-vision": 59654,
  "tty": 59655,
  "universal-acces": 59656,
  "wheelchair": 59657,
  "area-chart": 59732,
  "bar-chart": 59733,
  "line-chart": 59734,
  "pie-chart-1": 59735,
  "pie-chart-2": 59736,
  "chrome": 59726,
  "edge": 59727,
  "firefox": 59728,
  "internet-explorer": 59729,
  "opera": 59730,
  "safari": 59731,
  "bitcoin": 59737,
  "dollar": 59738,
  "euro": 59739,
  "gbp": 59740,
  "gg": 59741,
  "ils": 59742,
  "inr": 59743,
  "krw": 59744,
  "rouble": 59745,
  "tl": 59746,
  "yen": 59747,
  "genderless": 59782,
  "intersex": 59783,
  "mars-double": 59784,
  "mars-stroke-h": 59785,
  "mars-stroke-v": 59786,
  "mars-stroke": 59787,
  "mars": 59788,
  "mercury": 59789,
  "neuter": 59790,
  "transgender-alt": 59791,
  "transgender": 59792,
  "venus-double": 59793,
  "venus-mars": 59794,
  "venus": 59795,
  "automobile": 59899,
  "bicycle": 59900,
  "bus": 59901,
  "car": 59902,
  "helicopter": 59903,
  "metro": 59904,
  "motorcycle": 59905,
  "plane": 59906,
  "rocket": 59907,
  "ship": 59908,
  "subway": 59909,
  "taxi": 59910,
  "train": 59911,
  "truck": 59912,
  "yacht": 59913,
  "beach-slipper": 60203,
  "bus-ticket": 60204,
  "cocktail": 60205,
  "compass-alt": 60206,
  "direction-sign": 60207,
  "do-not-disturb": 60208,
  "flotation-ring": 60209,
  "holiday-village": 60210,
  "hot-air-balloon": 60211,
  "hotel-alt": 60212,
  "hotel": 60213,
  "island": 60214,
  "money-symbol": 60215,
  "parasol": 60216,
  "passport-alt": 60217,
  "passport": 60218,
  "photograph": 60219,
  "plane-ticket": 60220,
  "room": 60221,
  "sait-boat": 60222,
  "snorkel": 60223,
  "suitcase-alt": 60224,
  "suitcase": 60225,
  "sun": 60226,
  "sunglasses-alt": 60227,
  "swimsuit": 60228,
  "tent": 60229,
  "ticket-alt": 60230,
  "train-ticket": 60231,
  "wallet": 60232,
  "circle-o-notch": 59889,
  "propeller-1": 59890,
  "propeller-2": 59891,
  "propeller-3": 59892,
  "propeller-4": 59893,
  "spinner-cog": 59894,
  "spinner-fidget": 59895,
  "spinner-refresh": 59896,
  "spinner-rotate-forward": 59897,
  "spinner": 59898,
  "snowflake": 60081,
  "snowflake-1": 60073,
  "snowflake-2": 60074,
  "snowflake-3": 60075,
  "snowflake-4": 60076,
  "snowflake-5": 60077,
  "snowflake-6": 60078,
  "snowflake-7": 60079,
  "snowflake-8": 60080,
  "curve": 59915,
  "ellipse": 59916,
  "rectangle": 59917,
  "shield": 59914
};
},10310,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNativeSizeMatters = _$$_REQUIRE(_dependencyMap[0]);

  function normalize(number) {
    var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.25;
    return (0, _reactNativeSizeMatters.moderateScale)(number, factor);
  }

  var _default = normalize;
  exports.default = _default;
},10313,[10316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ScaledSheet: true
  };
  exports.ScaledSheet = undefined;

  var _ScaledSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _scalingUtils = _$$_REQUIRE(_dependencyMap[2]);

  Object.keys(_scalingUtils).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _scalingUtils[key];
      }
    });
  });
  var ScaledSheet = (0, _ScaledSheet.default)(_scalingUtils.scale, _scalingUtils.verticalScale, _scalingUtils.moderateScale, _scalingUtils.moderateVerticalScale);
  exports.ScaledSheet = ScaledSheet;
},10316,[14305,10319,10325]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  {
    module.exports = _$$_REQUIRE(_dependencyMap[0])();
  }
},10318,[10321]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _deepMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var validScaleSheetRegex = /^(\-?\d+(?:\.\d{1,3})?)@(mv?s(\d+(?:\.\d{1,2})?)?|s|vs)r?$/;

  var scaleByAnnotation = function scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale) {
    return function (value) {
      if (!validScaleSheetRegex.test(value)) {
        return value;
      }

      var regexExecResult = validScaleSheetRegex.exec(value);
      var size = parseFloat(regexExecResult[1]);
      var scaleFunc = regexExecResult[2];
      var scaleFactor = regexExecResult[3];
      if (scaleFactor) scaleFunc = scaleFunc.slice(0, -scaleFactor.length);
      var shouldRound = value.endsWith('r');
      var result;

      switch (scaleFunc) {
        case 's':
          result = scale(size);
          break;

        case 'vs':
          result = verticalScale(size);
          break;

        case 'ms':
          result = moderateScale(size, scaleFactor);
          break;

        case 'mvs':
          result = moderateVerticalScale(size, scaleFactor);
          break;
      }

      return shouldRound ? Math.round(result) : result;
    };
  };

  var scaledSheetCreator = function scaledSheetCreator(scale, verticalScale, moderateScale, moderateVerticalScale) {
    var scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);
    return {
      create: function create(styleSheet) {
        return _reactNative.StyleSheet.create((0, _deepMap.default)(styleSheet, scaleFunc));
      }
    };
  };

  var _default = scaledSheetCreator;
  exports.default = _default;
},10319,[14305,10033,10322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[0]);

  function emptyFunction() {}

  function emptyFunctionWithReset() {}

  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }

      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = 'Invariant Violation';
      throw err;
    }

    ;
    shim.isRequired = shim;

    function getShim() {
      return shim;
    }

    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
},10321,[10324]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var deepMap = function deepMap(obj, fn) {
    var deepMapper = function deepMapper(val) {
      return isObject(val) ? deepMap(val, fn) : fn(val);
    };

    if (Array.isArray(obj)) {
      return obj.map(deepMapper);
    }

    if (isObject(obj)) {
      return mapObject(obj, deepMapper);
    }

    return obj;
  };

  var mapObject = function mapObject(obj, fn) {
    return Object.keys(obj).reduce(function (res, key) {
      res[key] = fn(obj[key]);
      return res;
    }, {});
  };

  var isObject = function isObject(myVar) {
    return myVar && typeof myVar === 'object';
  };

  var _default = deepMap;
  exports.default = _default;
},10322,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
},10324,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.mvs = exports.ms = exports.vs = exports.s = exports.moderateVerticalScale = exports.moderateScale = exports.verticalScale = exports.scale = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var _ref = width < height ? [width, height] : [height, width],
      _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      shortDimension = _ref2[0],
      longDimension = _ref2[1];

  var guidelineBaseWidth = 350;
  var guidelineBaseHeight = 680;

  var scale = function scale(size) {
    return shortDimension / guidelineBaseWidth * size;
  };

  exports.scale = scale;

  var verticalScale = function verticalScale(size) {
    return longDimension / guidelineBaseHeight * size;
  };

  exports.verticalScale = verticalScale;

  var moderateScale = function moderateScale(size) {
    var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;
    return size + (scale(size) - size) * factor;
  };

  exports.moderateScale = moderateScale;

  var moderateVerticalScale = function moderateVerticalScale(size) {
    var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;
    return size + (verticalScale(size) - size) * factor;
  };

  exports.moderateVerticalScale = moderateVerticalScale;
  var s = scale;
  exports.s = s;
  var vs = verticalScale;
  exports.vs = vs;
  var ms = moderateScale;
  exports.ms = ms;
  var mvs = moderateVerticalScale;
  exports.mvs = mvs;
},10325,[14305,14347,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.object, _propTypes.default.bool, _propTypes.default.func]);

  exports.default = _default;
},10328,[14305,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ImageSourceType = undefined;

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ImageSourceType = _propTypes.default.oneOfType([_propTypes.default.shape({
    uri: _propTypes.default.string,
    headers: _propTypes.default.objectOf(_propTypes.default.string)
  }), _propTypes.default.number, _propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.shape({
    uri: _propTypes.default.string,
    width: _propTypes.default.number,
    height: _propTypes.default.number,
    headers: _propTypes.default.objectOf(_propTypes.default.string)
  }))]);

  exports.ImageSourceType = ImageSourceType;
},10331,[14305,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Icon = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getIconType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _getIconStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _config = _$$_REQUIRE(_dependencyMap[10]);

  var Icon = function Icon(props) {
    var type = props.type,
        name = props.name,
        size = props.size,
        colorProp = props.color,
        iconStyle = props.iconStyle,
        iconProps = props.iconProps,
        underlayColor = props.underlayColor,
        reverse = props.reverse,
        raised = props.raised,
        containerStyle = props.containerStyle,
        reverseColorProp = props.reverseColor,
        disabled = props.disabled,
        disabledStyle = props.disabledStyle,
        onPress = props.onPress,
        _props$Component = props.Component,
        Component = _props$Component === undefined ? onPress ? _reactNative.Platform.select({
      android: _reactNative.TouchableNativeFeedback,
      default: _reactNative.TouchableHighlight
    }) : _reactNative.View : _props$Component,
        solid = props.solid,
        brand = props.brand,
        theme = props.theme,
        attributes = (0, _objectWithoutProperties2.default)(props, ["type", "name", "size", "color", "iconStyle", "iconProps", "underlayColor", "reverse", "raised", "containerStyle", "reverseColor", "disabled", "disabledStyle", "onPress", "Component", "solid", "brand", "theme"]);
    var color = colorProp || theme.colors.black;
    var reverseColor = reverseColorProp || theme.colors.white;
    var IconComponent = (0, _getIconType.default)(type);
    var iconSpecificStyle = (0, _getIconStyle.default)(type, {
      solid: solid,
      brand: brand
    });

    var getBackgroundColor = function getBackgroundColor() {
      if (reverse) {
        return color;
      }

      return raised ? theme.colors.white : 'transparent';
    };

    var buttonStyles = {
      borderRadius: size + 4,
      height: size * 2 + 4,
      width: size * 2 + 4
    };

    if (_reactNative.Platform.OS === 'android' && !attributes.background) {
      if (_reactNative.Platform.Version >= 21) {
        attributes.background = _reactNative.TouchableNativeFeedback.Ripple((0, _color.default)(color).alpha(0.2).rgb().string(), true);
      }
    }

    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.container, (reverse || raised) && styles.button, (reverse || raised) && buttonStyles, raised && styles.raised, iconStyle && iconStyle.borderRadius ? {
        borderRadius: iconStyle.borderRadius
      } : {}, containerStyle && containerStyle])
    }, _react.default.createElement(Component, (0, _extends2.default)({}, attributes, onPress && {
      onPress: onPress,
      disabled: disabled,
      underlayColor: reverse ? color : underlayColor,
      activeOpacity: 0.3
    }), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([(reverse || raised) && buttonStyles, {
        backgroundColor: getBackgroundColor(),
        alignItems: 'center',
        justifyContent: 'center'
      }, disabled && styles.disabled, disabled && disabledStyle])
    }, _react.default.createElement(IconComponent, (0, _extends2.default)({
      testID: "iconIcon",
      style: _reactNative.StyleSheet.flatten([{
        backgroundColor: 'transparent'
      }, iconStyle && iconStyle]),
      size: size,
      name: name,
      color: reverse ? reverseColor : color
    }, iconSpecificStyle, iconProps)))));
  };

  exports.Icon = Icon;
  Icon.propTypes = {
    type: _propTypes.default.string,
    name: _propTypes.default.string,
    size: _propTypes.default.number,
    color: _propTypes.default.string,
    Component: _propTypes.default.elementType,
    underlayColor: _propTypes.default.string,
    reverse: _propTypes.default.bool,
    raised: _propTypes.default.bool,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onPress: _propTypes.default.func,
    reverseColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    solid: _propTypes.default.bool,
    brand: _propTypes.default.bool
  };
  Icon.defaultProps = {
    underlayColor: 'transparent',
    reverse: false,
    raised: false,
    size: 24,
    disabled: false,
    type: 'material',
    solid: false,
    brand: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      overflow: 'hidden'
    },
    button: {
      margin: 7
    },
    raised: (0, _objectSpread2.default)({}, _reactNative.Platform.select({
      android: {
        elevation: 2
      },
      default: {
        shadowColor: 'rgba(0,0,0, .4)',
        shadowOffset: {
          height: 1,
          width: 1
        },
        shadowOpacity: 1,
        shadowRadius: 1
      }
    })),
    disabled: {
      backgroundColor: '#D1D5D8'
    }
  });

  var _default = (0, _config.withTheme)(Icon, 'Icon');

  exports.default = _default;
},10334,[14305,14314,14344,14407,10297,10318,10033,11518,10124,10337,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _default = function _default(type, extraProps) {
    switch (type) {
      case 'zocial':
        return {};

      case 'octicon':
        return {};

      case 'material':
        return {};

      case 'material-community':
        return {};

      case 'ionicon':
        return {};

      case 'foundation':
        return {};

      case 'evilicon':
        return {};

      case 'entypo':
        return {};

      case 'font-awesome':
        return {};

      case 'font-awesome-5':
        return {
          solid: extraProps.solid || false,
          brand: extraProps.brand || false
        };

      case 'simple-line-icon':
        return {};

      case 'feather':
        return {};

      case 'antdesign':
      case 'ant-design':
        return {};

      case 'fontisto':
        return {};

      default:
        return {};
    }
  };

  exports.default = _default;
},10337,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Input = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _helpers = _$$_REQUIRE(_dependencyMap[13]);

  var _config = _$$_REQUIRE(_dependencyMap[14]);

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var renderText = function renderText(content, defaultProps, style) {
    return (0, _helpers.renderNode)(_reactNative.Text, content, (0, _objectSpread2.default)({}, defaultProps, {
      style: _reactNative.StyleSheet.flatten([style, defaultProps && defaultProps.style])
    }));
  };

  var Input = function (_React$Component) {
    (0, _inherits2.default)(Input, _React$Component);

    function Input() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Input);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.shakeAnimationValue = new _reactNative.Animated.Value(0);

      _this.shake = function () {
        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            shakeAnimationValue = _assertThisInitialize.shakeAnimationValue;

        shakeAnimationValue.setValue(0);

        _reactNative.Animated.timing(shakeAnimationValue, {
          duration: 375,
          toValue: 3,
          ease: _reactNative.Easing.bounce,
          useNativeDriver: true
        }).start();
      };

      return _this;
    }

    (0, _createClass2.default)(Input, [{
      key: "focus",
      value: function focus() {
        this.input.focus();
      }
    }, {
      key: "blur",
      value: function blur() {
        this.input.blur();
      }
    }, {
      key: "clear",
      value: function clear() {
        this.input.clear();
      }
    }, {
      key: "isFocused",
      value: function isFocused() {
        return this.input.isFocused();
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        this.input.setNativeProps(nativeProps);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            containerStyle = _this$props.containerStyle,
            disabled = _this$props.disabled,
            disabledInputStyle = _this$props.disabledInputStyle,
            inputContainerStyle = _this$props.inputContainerStyle,
            leftIcon = _this$props.leftIcon,
            leftIconContainerStyle = _this$props.leftIconContainerStyle,
            rightIcon = _this$props.rightIcon,
            rightIconContainerStyle = _this$props.rightIconContainerStyle,
            InputComponent = _this$props.InputComponent,
            inputStyle = _this$props.inputStyle,
            errorProps = _this$props.errorProps,
            errorStyle = _this$props.errorStyle,
            errorMessage = _this$props.errorMessage,
            label = _this$props.label,
            labelStyle = _this$props.labelStyle,
            labelProps = _this$props.labelProps,
            theme = _this$props.theme,
            renderErrorMessage = _this$props.renderErrorMessage,
            style = _this$props.style,
            attributes = (0, _objectWithoutProperties2.default)(_this$props, ["containerStyle", "disabled", "disabledInputStyle", "inputContainerStyle", "leftIcon", "leftIconContainerStyle", "rightIcon", "rightIconContainerStyle", "InputComponent", "inputStyle", "errorProps", "errorStyle", "errorMessage", "label", "labelStyle", "labelProps", "theme", "renderErrorMessage", "style"]);
        var translateX = this.shakeAnimationValue.interpolate({
          inputRange: [0, 0.5, 1, 1.5, 2, 2.5, 3],
          outputRange: [0, -15, 0, 15, 0, -15, 0]
        });
        var hideErrorMessage = !renderErrorMessage && !errorMessage;
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
        }, renderText(label, (0, _objectSpread2.default)({
          style: labelStyle
        }, labelProps), styles.label(theme)), _react.default.createElement(_reactNative.Animated.View, {
          style: _reactNative.StyleSheet.flatten([styles.inputContainer(theme), inputContainerStyle, {
            transform: [{
              translateX: translateX
            }]
          }])
        }, leftIcon && _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.iconContainer, leftIconContainerStyle])
        }, (0, _helpers.renderNode)(_Icon.default, leftIcon)), _react.default.createElement(InputComponent, (0, _extends2.default)({
          testID: "RNE__Input__text-input",
          underlineColorAndroid: "transparent",
          editable: !disabled,
          ref: function ref(_ref) {
            _this2.input = _ref;
          },
          style: _reactNative.StyleSheet.flatten([styles.input(theme), inputStyle, disabled && styles.disabledInput, disabled && disabledInputStyle, style]),
          placeholderTextColor: theme.colors.grey3
        }, (0, _helpers.patchWebProps)(attributes))), rightIcon && _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.iconContainer, rightIconContainerStyle])
        }, (0, _helpers.renderNode)(_Icon.default, rightIcon))), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, errorProps, {
          style: _reactNative.StyleSheet.flatten([styles.error(theme), errorStyle && errorStyle, hideErrorMessage && {
            height: 0,
            margin: 0,
            padding: 0
          }])
        }), errorMessage));
      }
    }]);
    return Input;
  }(_react.default.Component);

  exports.Input = Input;
  Input.propTypes = {
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    disabled: _propTypes.default.bool,
    disabledInputStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    leftIcon: _helpers.nodeType,
    leftIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightIcon: _helpers.nodeType,
    rightIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    InputComponent: _propTypes.default.elementType,
    errorProps: _propTypes.default.object,
    errorStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    errorMessage: _propTypes.default.string,
    label: _propTypes.default.node,
    labelStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    labelProps: _propTypes.default.object,
    theme: _propTypes.default.object,
    renderErrorMessage: _propTypes.default.bool
  };
  Input.defaultProps = {
    InputComponent: _reactNative.TextInput,
    renderErrorMessage: true
  };
  var styles = {
    container: {
      width: '100%',
      paddingHorizontal: 10
    },
    disabledInput: {
      opacity: 0.5
    },
    inputContainer: function inputContainer(theme) {
      return {
        flexDirection: 'row',
        borderBottomWidth: 1,
        alignItems: 'center',
        borderColor: theme.colors.grey3
      };
    },
    iconContainer: {
      height: 40,
      justifyContent: 'center',
      alignItems: 'center',
      paddingRight: 4,
      marginVertical: 4
    },
    input: function input(theme) {
      return {
        alignSelf: 'center',
        color: theme.colors.black,
        fontSize: 18,
        flex: 1,
        minHeight: 40
      };
    },
    error: function error(theme) {
      return {
        margin: 5,
        fontSize: 12,
        color: theme.colors.error
      };
    },
    label: function label(theme) {
      return (0, _objectSpread2.default)({
        fontSize: 16,
        color: theme.colors.grey3
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.bold),
        default: {
          fontWeight: 'bold'
        }
      }));
    }
  };

  var _default = (0, _config.withTheme)(Input, 'Input');

  exports.default = _default;
},10340,[14305,14344,14407,14320,14323,14371,14377,14374,14386,14314,10297,10318,10033,10118,10082,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.ListItem = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _helpers = _$$_REQUIRE(_dependencyMap[12]);

  var _config = _$$_REQUIRE(_dependencyMap[13]);

  var _Avatar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Badge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _ListItemContent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _ListItemChevron = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _ListItemInput = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _ListItemCheckBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ListItemButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _ListItemTitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ListItemSubtitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var checkmarkDefaultProps = function checkmarkDefaultProps(theme) {
    return {
      name: 'check',
      size: 20,
      color: theme.colors.primary
    };
  };

  var renderAvatar = function renderAvatar(content) {
    return (0, _helpers.renderNode)(_Avatar.default, content, {
      size: 40,
      rounded: true
    });
  };

  var renderIcon = function renderIcon(content, theme) {
    return (0, _helpers.renderNode)(_Icon.default, content, {
      color: _reactNative.Platform.select(theme.colors.platform).grey,
      size: 24
    });
  };

  var ListItem = function ListItem(props) {
    var title = props.title,
        titleStyle = props.titleStyle,
        titleProps = props.titleProps,
        subtitle = props.subtitle,
        subtitleStyle = props.subtitleStyle,
        subtitleProps = props.subtitleProps,
        containerStyle = props.containerStyle,
        onPress = props.onPress,
        onLongPress = props.onLongPress,
        _props$Component = props.Component,
        Component = _props$Component === undefined ? onPress || onLongPress ? _reactNative.TouchableHighlight : _reactNative.View : _props$Component,
        leftIcon = props.leftIcon,
        leftAvatar = props.leftAvatar,
        leftElement = props.leftElement,
        rightIcon = props.rightIcon,
        rightAvatar = props.rightAvatar,
        rightElement = props.rightElement,
        rightTitle = props.rightTitle,
        rightTitleStyle = props.rightTitleStyle,
        rightTitleProps = props.rightTitleProps,
        rightSubtitle = props.rightSubtitle,
        rightSubtitleStyle = props.rightSubtitleStyle,
        rightSubtitleProps = props.rightSubtitleProps,
        input = props.input,
        buttonGroup = props.buttonGroup,
        switchProps = props.switch,
        checkBox = props.checkBox,
        badge = props.badge,
        chevron = props.chevron,
        contentContainerStyle = props.contentContainerStyle,
        rightContentContainerStyle = props.rightContentContainerStyle,
        checkmark = props.checkmark,
        disabled = props.disabled,
        disabledStyle = props.disabledStyle,
        bottomDivider = props.bottomDivider,
        topDivider = props.topDivider,
        pad = props.pad,
        linearGradientProps = props.linearGradientProps,
        _props$ViewComponent = props.ViewComponent,
        ViewComponent = _props$ViewComponent === undefined ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : _reactNative.View : _props$ViewComponent,
        theme = props.theme,
        children = props.children,
        attributes = (0, _objectWithoutProperties2.default)(props, ["title", "titleStyle", "titleProps", "subtitle", "subtitleStyle", "subtitleProps", "containerStyle", "onPress", "onLongPress", "Component", "leftIcon", "leftAvatar", "leftElement", "rightIcon", "rightAvatar", "rightElement", "rightTitle", "rightTitleStyle", "rightTitleProps", "rightSubtitle", "rightSubtitleStyle", "rightSubtitleProps", "input", "buttonGroup", "switch", "checkBox", "badge", "chevron", "contentContainerStyle", "rightContentContainerStyle", "checkmark", "disabled", "disabledStyle", "bottomDivider", "topDivider", "pad", "linearGradientProps", "ViewComponent", "theme", "children"]);

    if (title) {}

    if (titleStyle) {}

    if (titleProps) {}

    if (subtitle) {}

    if (subtitleStyle) {}

    if (subtitleProps) {}

    if (leftIcon) {}

    if (leftAvatar) {}

    if (leftElement) {}

    if (rightTitle) {}

    if (rightTitleStyle) {}

    if (rightTitleProps) {}

    if (rightSubtitle) {}

    if (rightSubtitleStyle) {}

    if (rightSubtitleProps) {}

    if (input) {}

    if (buttonGroup) {}

    if (switchProps) {}

    if (checkBox) {}

    if (badge) {}

    if (chevron) {}

    if (contentContainerStyle) {}

    if (rightContentContainerStyle) {}

    if (checkmark) {}

    return _react.default.createElement(Component, (0, _extends2.default)({}, attributes, {
      onPress: onPress,
      onLongPress: onLongPress,
      disabled: disabled
    }), _react.default.createElement(PadView, (0, _extends2.default)({
      Component: ViewComponent
    }, linearGradientProps, {
      style: _reactNative.StyleSheet.flatten([styles.container(theme), (buttonGroup || switchProps) && {
        paddingVertical: 8
      }, topDivider && {
        borderTopWidth: _reactNative.StyleSheet.hairlineWidth
      }, bottomDivider && {
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
      }, containerStyle, disabled && disabledStyle]),
      pad: pad
    }), (0, _helpers.renderNode)(_Text.default, leftElement), renderIcon(leftIcon, theme), renderAvatar(leftAvatar), (!!title || !!subtitle) && _react.default.createElement(_ListItemContent.default, {
      style: contentContainerStyle
    }, title && (0, _helpers.renderNode)(_ListItemTitle.default, title, (0, _objectSpread2.default)({
      style: titleStyle
    }, titleProps)), subtitle && (0, _helpers.renderNode)(_ListItemSubtitle.default, subtitle, (0, _objectSpread2.default)({
      style: subtitleStyle
    }, subtitleProps))), (!!rightTitle || !!rightSubtitle) && _react.default.createElement(_ListItemContent.default, {
      right: true,
      style: rightContentContainerStyle
    }, rightTitle && (0, _helpers.renderNode)(_ListItemTitle.default, rightTitle, (0, _objectSpread2.default)({
      right: true,
      style: rightTitleStyle
    }, rightTitleProps)), rightSubtitle && (0, _helpers.renderNode)(_ListItemSubtitle.default, rightSubtitle, (0, _objectSpread2.default)({
      right: true,
      style: rightSubtitleStyle
    }, rightSubtitleProps))), input && _react.default.createElement(_ListItemInput.default, input), switchProps && _react.default.createElement(_reactNative.Switch, switchProps), checkBox && _react.default.createElement(_ListItemCheckBox.default, checkBox), badge && _react.default.createElement(_Badge.default, badge), buttonGroup && _react.default.createElement(_ListItemButtonGroup.default, buttonGroup), renderAvatar(rightAvatar), renderIcon(rightIcon, theme), (0, _helpers.renderNode)(_Text.default, rightElement), (0, _helpers.renderNode)(_Icon.default, checkmark, checkmarkDefaultProps(theme)), chevron && _react.default.createElement(_ListItemChevron.default, null), children));
  };

  exports.ListItem = ListItem;
  var styles = {
    container: function container(theme) {
      return (0, _objectSpread2.default)({}, _reactNative.Platform.select({
        ios: {
          padding: 14
        },
        default: {
          padding: 16
        }
      }), {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: theme.colors.white,
        borderColor: theme.colors.divider
      });
    }
  };
  ListItem.propTypes = {
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    contentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightContentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    Component: _propTypes.default.elementType,
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    titleProps: _propTypes.default.object,
    subtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    subtitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    subtitleProps: _propTypes.default.object,
    leftIcon: _helpers.nodeType,
    leftAvatar: _helpers.nodeType,
    leftElement: _helpers.nodeType,
    rightIcon: _helpers.nodeType,
    rightAvatar: _helpers.nodeType,
    rightElement: _helpers.nodeType,
    rightTitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    rightTitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightTitleProps: _propTypes.default.object,
    rightSubtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    rightSubtitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightSubtitleProps: _propTypes.default.object,
    input: _propTypes.default.object,
    buttonGroup: _propTypes.default.object,
    switch: _propTypes.default.object,
    checkBox: _propTypes.default.object,
    badge: _propTypes.default.object,
    chevron: _helpers.nodeType,
    checkmark: _helpers.nodeType,
    disabled: _propTypes.default.bool,
    disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    topDivider: _propTypes.default.bool,
    bottomDivider: _propTypes.default.bool,
    pad: _propTypes.default.number,
    linearGradientProps: _propTypes.default.object,
    ViewComponent: _propTypes.default.elementType,
    theme: _propTypes.default.object
  };
  ListItem.defaultProps = {
    pad: 16,
    title: ''
  };

  var PadView = function (_React$Component) {
    (0, _inherits2.default)(PadView, _React$Component);

    function PadView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PadView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PadView).call(this, props));

      _this.setNativeProps = function (nativeProps) {
        _this._root.current.setNativeProps(nativeProps);
      };

      _this._root = _react.default.createRef();
      return _this;
    }

    (0, _createClass2.default)(PadView, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            pad = _this$props.pad,
            Component = _this$props.Component,
            props = (0, _objectWithoutProperties2.default)(_this$props, ["children", "pad", "Component"]);

        var childrens = _react.default.Children.toArray(children);

        var length = childrens.length;
        var Container = Component || _reactNative.View;
        return _react.default.createElement(Container, (0, _extends2.default)({}, props, {
          ref: this._root,
          testID: "padView"
        }), _react.default.Children.map(childrens, function (child, index) {
          return child && [child, index !== length - 1 && _react.default.createElement(_reactNative.View, {
            style: {
              paddingLeft: pad
            }
          })];
        }));
      }
    }]);
    return PadView;
  }(_react.default.Component);

  PadView.propTypes = {
    children: _propTypes.default.node,
    pad: _propTypes.default.number,
    Component: _propTypes.default.elementType
  };
  var ThemedListItem = (0, _config.withTheme)(ListItem, 'ListItem');
  ThemedListItem.Chevron = _ListItemChevron.default;
  ThemedListItem.Content = _ListItemContent.default;
  ThemedListItem.Input = _ListItemInput.default;
  ThemedListItem.Title = _ListItemTitle.default;
  ThemedListItem.Subtitle = _ListItemSubtitle.default;
  ThemedListItem.CheckBox = _ListItemCheckBox.default;
  ThemedListItem.ButtonGroup = _ListItemButtonGroup.default;
  var _default = ThemedListItem;
  exports.default = _default;
},10343,[14305,14320,14323,14371,14377,14386,14344,14314,14407,10297,10318,10033,10118,10082,10346,10358,10334,10361,10364,10367,10370,10373,10382,10388,10391]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Avatar = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Accessory = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var avatarSizes = {
    small: 34,
    medium: 50,
    large: 75,
    xlarge: 150
  };

  var AvatarComponent = function AvatarComponent(_ref) {
    var onPress = _ref.onPress,
        onLongPress = _ref.onLongPress,
        _ref$Component = _ref.Component,
        Component = _ref$Component === undefined ? onPress || onLongPress ? _reactNative.TouchableOpacity : _reactNative.View : _ref$Component,
        containerStyle = _ref.containerStyle,
        icon = _ref.icon,
        iconStyle = _ref.iconStyle,
        source = _ref.source,
        size = _ref.size,
        avatarStyle = _ref.avatarStyle,
        rounded = _ref.rounded,
        title = _ref.title,
        titleStyle = _ref.titleStyle,
        overlayContainerStyle = _ref.overlayContainerStyle,
        imageProps = _ref.imageProps,
        placeholderStyle = _ref.placeholderStyle,
        renderPlaceholderContent = _ref.renderPlaceholderContent,
        ImageComponent = _ref.ImageComponent,
        children = _ref.children,
        attributes = (0, _objectWithoutProperties2.default)(_ref, ["onPress", "onLongPress", "Component", "containerStyle", "icon", "iconStyle", "source", "size", "avatarStyle", "rounded", "title", "titleStyle", "overlayContainerStyle", "imageProps", "placeholderStyle", "renderPlaceholderContent", "ImageComponent", "children"]);
    var width = typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;
    var height = width;
    var titleSize = width / 2;
    var iconSize = width / 2;

    var PlaceholderContent = renderPlaceholderContent && (0, _helpers.renderNode)(undefined, renderPlaceholderContent) || title && _react.default.createElement(_reactNative.Text, {
      style: _reactNative.StyleSheet.flatten([styles.title, {
        fontSize: titleSize
      }, titleStyle])
    }, title) || icon && _react.default.createElement(_Icon.default, {
      style: iconStyle && iconStyle,
      color: icon.color || 'white',
      name: icon.name || 'user',
      size: icon.size || iconSize,
      type: icon.type && icon.type
    });

    var hidePlaceholder = !source;

    var imageContainerStyle = _reactNative.StyleSheet.flatten([styles.overlayContainer, rounded && {
      borderRadius: width / 2,
      overflow: 'hidden'
    }, overlayContainerStyle, imageProps && imageProps.containerStyle]);

    if (imageProps && imageProps.containerStyle) {
      delete imageProps.containerStyle;
    }

    return _react.default.createElement(Component, (0, _extends2.default)({
      onPress: onPress,
      onLongPress: onLongPress,
      style: _reactNative.StyleSheet.flatten([styles.container, {
        height: height,
        width: width
      }, rounded && {
        borderRadius: width / 2
      }, containerStyle])
    }, attributes), _react.default.createElement(_Image.default, (0, _extends2.default)({
      placeholderStyle: _reactNative.StyleSheet.flatten([placeholderStyle, hidePlaceholder && {
        backgroundColor: 'transparent'
      }]),
      PlaceholderContent: PlaceholderContent,
      containerStyle: imageContainerStyle,
      source: source,
      borderRadius: rounded ? width / 2 : undefined
    }, imageProps, {
      style: _reactNative.StyleSheet.flatten([styles.avatar, imageProps && imageProps.style, avatarStyle]),
      ImageComponent: ImageComponent
    })), children);
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: 'transparent'
    },
    avatar: {
      flex: 1,
      width: null,
      height: null
    },
    overlayContainer: {
      flex: 1
    },
    title: {
      color: '#ffffff',
      backgroundColor: 'transparent',
      textAlign: 'center'
    }
  });

  AvatarComponent.propTypes = {
    Component: _propTypes.default.oneOf([_reactNative.View, _reactNative.TouchableOpacity, _reactNative.TouchableHighlight, _reactNative.TouchableNativeFeedback, _reactNative.TouchableWithoutFeedback]),
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    source: _helpers.ImageSourceType,
    avatarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rounded: _propTypes.default.bool,
    title: _propTypes.default.string,
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    overlayContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    activeOpacity: _propTypes.default.number,
    icon: _propTypes.default.object,
    iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    size: _propTypes.default.oneOfType([_propTypes.default.oneOf(['small', 'medium', 'large', 'xlarge']), _propTypes.default.number]),
    placeholderStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    renderPlaceholderContent: _helpers.nodeType,
    imageProps: _propTypes.default.object,
    ImageComponent: _propTypes.default.elementType
  };
  AvatarComponent.defaultProps = {
    size: 'small',
    ImageComponent: _reactNative.Image
  };

  var Avatar = _react.default.memo(AvatarComponent, _lodash.default);

  exports.Avatar = Avatar;
  var ThemedAvatar = (0, _config.withTheme)(Avatar, 'Avatar');
  ThemedAvatar.Accessory = _Accessory.default;
  var _default = ThemedAvatar;
  exports.default = _default;
},10346,[14305,14344,14407,10297,10318,10033,10349,10082,10118,10334,10352,10355]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function('return this')();
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal.process;

  var nodeUtil = function () {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];

      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }

    return result;
  }

  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }

    return array;
  }

  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }

    return false;
  }

  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }

    return result;
  }

  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  function cacheHas(cache, key) {
    return cache.has(key);
  }

  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);
    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  function setToArray(set) {
    var index = -1,
        result = Array(set.size);
    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  var arrayProto = Array.prototype,
      funcProto = Function.prototype,
      objectProto = Object.prototype;
  var coreJsData = root['__core-js_shared__'];
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;

  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  var nativeObjectToString = objectProto.toString;
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  var Buffer = moduleExports ? root.Buffer : undefined,
      Symbol = root.Symbol,
      Uint8Array = root.Uint8Array,
      propertyIsEnumerable = objectProto.propertyIsEnumerable,
      splice = arrayProto.splice,
      symToStringTag = Symbol ? typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag" : undefined;
  var nativeGetSymbols = Object.getOwnPropertySymbols,
      nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
      nativeKeys = overArg(Object.keys, Object);
  var DataView = getNative(root, 'DataView'),
      Map = getNative(root, 'Map'),
      Promise = getNative(root, 'Promise'),
      Set = getNative(root, 'Set'),
      WeakMap = getNative(root, 'WeakMap'),
      nativeCreate = getNative(Object, 'create');
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);
  var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  function hashGet(key) {
    var data = this.__data__;

    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }

    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }

    var lastIndex = data.length - 1;

    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }

    --this.size;
    return true;
  }

  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  }

  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }

    return this;
  }

  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash(),
      'map': new (Map || ListCache)(),
      'string': new Hash()
    };
  }

  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;
    this.__data__ = new MapCache();

    while (++index < length) {
      this.add(values[index]);
    }
  }

  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);

    return this;
  }

  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;

  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }

  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);
    this.size = data.size;
    return result;
  }

  function stackGet(key) {
    return this.__data__.get(key);
  }

  function stackHas(key) {
    return this.__data__.has(key);
  }

  function stackSet(key, value) {
    var data = this.__data__;

    if (data instanceof ListCache) {
      var pairs = data.__data__;

      if (!Map || pairs.length < 199) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }

      data = this.__data__ = new MapCache(pairs);
    }

    data.set(key, value);
    this.size = data.size;
    return this;
  }

  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
        result.push(key);
      }
    }

    return result;
  }

  function assocIndexOf(array, key) {
    var length = array.length;

    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }

    return -1;
  }

  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }

    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }

  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }

    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }

    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = objIsArr ? arrayTag : getTag(object),
        othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }

      objIsArr = true;
      objIsObj = false;
    }

    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }

    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }

    if (!isSameTag) {
      return false;
    }

    stack || (stack = new Stack());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }

    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }

    var result = [];

    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }

    return result;
  }

  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }

    var stacked = stack.get(array);

    if (stacked && stack.get(other)) {
      return stacked == other;
    }

    var index = -1,
        result = true,
        seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
    stack.set(array, other);
    stack.set(other, array);

    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }

      if (compared !== undefined) {
        if (compared) {
          continue;
        }

        result = false;
        break;
      }

      if (seen) {
        if (!arraySome(other, function (othValue, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }

    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }

        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }

        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        return eq(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        return object == other + '';

      case mapTag:
        var convert = mapToArray;

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }

        var stacked = stack.get(object);

        if (stacked) {
          return stacked == other;
        }

        bitmask |= COMPARE_UNORDERED_FLAG;
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }

    }

    return false;
  }

  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = getAllKeys(object),
        objLength = objProps.length,
        othProps = getAllKeys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }

    var index = objLength;

    while (index--) {
      var key = objProps[index];

      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }

    var stacked = stack.get(object);

    if (stacked && stack.get(other)) {
      return stacked == other;
    }

    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;

    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }

      if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }

      skipCtor || (skipCtor = key == 'constructor');
    }

    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }

    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
    if (object == null) {
      return [];
    }

    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };
  var getTag = baseGetTag;

  if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
      var result = baseGetTag(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;

          case mapCtorString:
            return mapTag;

          case promiseCtorString:
            return promiseTag;

          case setCtorString:
            return setTag;

          case weakMapCtorString:
            return weakMapTag;
        }
      }

      return result;
    };
  }

  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
  }

  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}

      try {
        return func + '';
      } catch (e) {}
    }

    return '';
  }

  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  var isArguments = baseIsArguments(function () {
    return arguments;
  }()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };
  var isArray = Array.isArray;

  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  var isBuffer = nativeIsBuffer || stubFalse;

  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }

  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }

    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  function stubArray() {
    return [];
  }

  function stubFalse() {
    return false;
  }

  module.exports = isEqual;
},10349,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Image = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _helpers = _$$_REQUIRE(_dependencyMap[12]);

  var _config = _$$_REQUIRE(_dependencyMap[13]);

  var Image = function (_React$Component) {
    (0, _inherits2.default)(Image, _React$Component);

    function Image() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Image);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Image)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        placeholderOpacity: new _reactNative.Animated.Value(1)
      };

      _this.onLoad = function (e) {
        var _this$props = _this.props,
            transition = _this$props.transition,
            onLoad = _this$props.onLoad,
            transitionDuration = _this$props.transitionDuration;

        if (!transition) {
          _this.state.placeholderOpacity.setValue(0);

          return;
        }

        _reactNative.Animated.timing(_this.state.placeholderOpacity, {
          toValue: 0,
          duration: transitionDuration,
          useNativeDriver: true
        }).start();

        onLoad && onLoad(e);
      };

      return _this;
    }

    (0, _createClass2.default)(Image, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            onPress = _this$props2.onPress,
            onLongPress = _this$props2.onLongPress,
            _this$props2$Componen = _this$props2.Component,
            Component = _this$props2$Componen === undefined ? onPress || onLongPress ? _reactNative.TouchableOpacity : _reactNative.View : _this$props2$Componen,
            placeholderStyle = _this$props2.placeholderStyle,
            PlaceholderContent = _this$props2.PlaceholderContent,
            containerStyle = _this$props2.containerStyle,
            style = _this$props2.style,
            ImageComponent = _this$props2.ImageComponent,
            children = _this$props2.children,
            attributes = (0, _objectWithoutProperties2.default)(_this$props2, ["onPress", "onLongPress", "Component", "placeholderStyle", "PlaceholderContent", "containerStyle", "style", "ImageComponent", "children"]);
        var hasImage = Boolean(attributes.source) && Boolean(attributes.source.uri);

        var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(style),
            width = _StyleSheet$flatten.width,
            height = _StyleSheet$flatten.height,
            styleProps = (0, _objectWithoutProperties2.default)(_StyleSheet$flatten, ["width", "height"]);

        return _react.default.createElement(Component, {
          onPress: onPress,
          onLongPress: onLongPress,
          accessibilityIgnoresInvertColors: true,
          style: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
        }, _react.default.createElement(ImageComponent, (0, _extends2.default)({
          testID: "RNE__Image"
        }, attributes, {
          onLoad: this.onLoad,
          style: _reactNative.StyleSheet.flatten([_reactNative.StyleSheet.absoluteFill, {
            width: width,
            height: height
          }, styleProps])
        })), _react.default.createElement(_reactNative.Animated.View, {
          pointerEvents: hasImage ? 'none' : 'auto',
          accessibilityElementsHidden: hasImage,
          importantForAccessibility: hasImage ? 'no-hide-descendants' : 'yes',
          style: [styles.placeholderContainer, {
            opacity: hasImage ? this.state.placeholderOpacity : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          testID: "RNE__Image__placeholder",
          style: _reactNative.StyleSheet.flatten([style, styles.placeholder, placeholderStyle])
        }, PlaceholderContent)), _react.default.createElement(_reactNative.View, {
          style: style
        }, children));
      }
    }]);
    return Image;
  }(_react.default.Component);

  exports.Image = Image;
  var styles = {
    container: {
      backgroundColor: 'transparent',
      position: 'relative',
      overflow: 'hidden'
    },
    placeholderContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),
    placeholder: {
      backgroundColor: '#bdbdbd',
      alignItems: 'center',
      justifyContent: 'center'
    }
  };
  Image.propTypes = (0, _objectSpread2.default)({}, _reactNative.Image.propTypes, {
    Component: _propTypes.default.oneOf([_reactNative.View, _reactNative.TouchableOpacity, _reactNative.TouchableHighlight, _reactNative.TouchableNativeFeedback, _reactNative.TouchableWithoutFeedback]),
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    ImageComponent: _propTypes.default.elementType,
    PlaceholderContent: _helpers.nodeType,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    placeholderStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    transition: _propTypes.default.bool,
    transitionDuration: _propTypes.default.number
  });
  Image.defaultProps = {
    ImageComponent: _reactNative.Image,
    style: {},
    transition: true,
    transitionDuration: 360
  };
  Image.getSize = _reactNative.Image.getSize;
  Image.getSizeWithHeaders = _reactNative.Image.getSizeWithHeaders;
  Image.prefetch = _reactNative.Image.prefetch;
  Image.abortPrefetch = _reactNative.Image.abortPrefetch;
  Image.queryCache = _reactNative.Image.queryCache;
  Image.resolveAssetSource = _reactNative.Image.resolveAssetSource;

  var _default = (0, _config.withTheme)(Image, 'Image');

  exports.default = _default;
},10352,[14305,14314,14344,14407,14320,14323,14371,14377,14386,10297,10318,10033,10118,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  function Accessory(_ref) {
    var size = _ref.size,
        style = _ref.style,
        underlayColor = _ref.underlayColor,
        onPress = _ref.onPress,
        onLongPress = _ref.onLongPress,
        source = _ref.source,
        props = (0, _objectWithoutProperties2.default)(_ref, ["size", "style", "underlayColor", "onPress", "onLongPress", "source"]);
    return _react.default.createElement(_reactNative.TouchableHighlight, {
      style: _reactNative.StyleSheet.flatten([styles.accessory, {
        width: size,
        height: size,
        borderRadius: size / 2
      }, style]),
      underlayColor: underlayColor,
      onPress: onPress,
      onLongPress: onLongPress
    }, _react.default.createElement(_reactNative.View, null, source ? _react.default.createElement(_Image.default, (0, _extends2.default)({
      style: {
        width: size,
        height: size,
        borderRadius: size / 2
      }
    }, props)) : _react.default.createElement(_Icon.default, (0, _extends2.default)({
      size: size * 0.8
    }, props))));
  }

  Accessory.defaultProps = {
    size: 10,
    name: 'mode-edit',
    type: 'material',
    color: '#fff',
    underlayColor: '#000'
  };
  Accessory.propTypes = {
    size: _propTypes.default.number,
    name: _propTypes.default.string,
    type: _propTypes.default.string,
    color: _propTypes.default.string,
    underlayColor: _propTypes.default.string,
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onPress: _propTypes.default.func
  };

  var styles = _reactNative.StyleSheet.create({
    accessory: (0, _objectSpread2.default)({
      position: 'absolute',
      bottom: 0,
      right: 0,
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#aaa'
    }, _reactNative.Platform.select({
      android: {
        elevation: 1
      },
      default: {
        shadowColor: '#000',
        shadowOffset: {
          width: 1,
          height: 1
        },
        shadowRadius: 2,
        shadowOpacity: 0.5
      }
    }))
  });

  var _default = (0, _config.withTheme)(Accessory, 'AvatarAccessory');

  exports.default = _default;
},10355,[14305,14314,14344,14407,10297,10318,10033,10082,10352,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Badge = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var Badge = function Badge(props) {
    var containerStyle = props.containerStyle,
        textStyle = props.textStyle,
        textProps = props.textProps,
        badgeStyle = props.badgeStyle,
        onPress = props.onPress,
        _props$Component = props.Component,
        Component = _props$Component === undefined ? onPress ? _reactNative.TouchableOpacity : _reactNative.View : _props$Component,
        value = props.value,
        theme = props.theme,
        status = props.status,
        attributes = (0, _objectWithoutProperties2.default)(props, ["containerStyle", "textStyle", "textProps", "badgeStyle", "onPress", "Component", "value", "theme", "status"]);
    var element = (0, _helpers.renderNode)(_reactNative.Text, value, (0, _objectSpread2.default)({
      style: _reactNative.StyleSheet.flatten([styles.text, textStyle && textStyle])
    }, textProps));
    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([containerStyle && containerStyle])
    }, _react.default.createElement(Component, (0, _extends2.default)({}, attributes, {
      style: _reactNative.StyleSheet.flatten([styles.badge(theme, status), !element && styles.miniBadge, badgeStyle && badgeStyle]),
      onPress: onPress
    }), element));
  };

  exports.Badge = Badge;
  Badge.propTypes = {
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    badgeStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    textProps: _propTypes.default.object,
    textStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    value: _propTypes.default.node,
    onPress: _propTypes.default.func,
    Component: _propTypes.default.elementType,
    theme: _propTypes.default.object,
    status: _propTypes.default.oneOf(['primary', 'success', 'warning', 'error'])
  };
  Badge.defaultProps = {
    status: 'primary'
  };
  var size = 18;
  var miniSize = 8;
  var styles = {
    badge: function badge(theme, status) {
      return {
        alignSelf: 'center',
        minWidth: size,
        height: size,
        borderRadius: 9,
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: theme.colors[status],
        borderWidth: _reactNative.StyleSheet.hairlineWidth,
        borderColor: '#fff'
      };
    },
    miniBadge: {
      paddingHorizontal: 0,
      paddingVertical: 0,
      minWidth: miniSize,
      height: miniSize,
      borderRadius: 4
    },
    text: {
      fontSize: 12,
      color: 'white',
      paddingHorizontal: 4
    }
  };

  var _default = (0, _config.withTheme)(Badge, 'Badge');

  exports.default = _default;
},10358,[14305,14344,14314,14407,10297,10318,10033,10082,10118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TextElement = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var TextElement = function TextElement(props) {
    var style = props.style,
        theme = props.theme,
        children = props.children,
        h1 = props.h1,
        h2 = props.h2,
        h3 = props.h3,
        h4 = props.h4,
        h1Style = props.h1Style,
        h2Style = props.h2Style,
        h3Style = props.h3Style,
        h4Style = props.h4Style,
        rest = (0, _objectWithoutProperties2.default)(props, ["style", "theme", "children", "h1", "h2", "h3", "h4", "h1Style", "h2Style", "h3Style", "h4Style"]);
    return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.text(theme), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && _reactNative.StyleSheet.flatten([{
        fontSize: (0, _normalizeText.default)(40)
      }, h1Style]), h2 && _reactNative.StyleSheet.flatten([{
        fontSize: (0, _normalizeText.default)(34)
      }, h2Style]), h3 && _reactNative.StyleSheet.flatten([{
        fontSize: (0, _normalizeText.default)(28)
      }, h3Style]), h4 && _reactNative.StyleSheet.flatten([{
        fontSize: (0, _normalizeText.default)(22)
      }, h4Style])])
    }, (0, _helpers.patchWebProps)(rest)), children);
  };

  exports.TextElement = TextElement;
  TextElement.propTypes = {
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    h1: _propTypes.default.bool,
    h2: _propTypes.default.bool,
    h3: _propTypes.default.bool,
    h4: _propTypes.default.bool,
    h1Style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    h2Style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    h3Style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    h4Style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    children: _propTypes.default.node
  };
  TextElement.defaultProps = {
    h1: false,
    h2: false,
    h3: false,
    h4: false,
    style: {},
    h1Style: {},
    h2Style: {},
    h3Style: {},
    h4Style: {},
    children: ''
  };
  var styles = {
    text: function text(theme) {
      return (0, _objectSpread2.default)({}, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.regular)
      }), {
        color: theme.colors.black
      });
    },
    bold: (0, _objectSpread2.default)({}, _reactNative.Platform.select({
      android: (0, _objectSpread2.default)({}, _config.fonts.android.bold)
    }))
  };

  var _default = (0, _config.withTheme)(TextElement, 'Text');

  exports.default = _default;
},10361,[14305,14314,14344,14407,10297,10318,10033,10082,10118,10313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  function ListItemContent(_ref) {
    var style = _ref.style,
        right = _ref.right,
        children = _ref.children,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style", "right", "children"]);
    var containerStyle = right ? styles.rightContainer : styles.container;
    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([containerStyle, style])
    }, props), children);
  }

  var styles = {
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'flex-start'
    },
    rightContainer: {
      flex: 0.5,
      justifyContent: 'center',
      alignItems: 'flex-end'
    }
  };

  var _default = (0, _config.withTheme)(ListItemContent, 'ListItemContent');

  exports.default = _default;
},10364,[14305,14344,14407,10297,10033,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  function ListItemChevron(_ref) {
    var containerStyle = _ref.containerStyle,
        props = (0, _objectWithoutProperties2.default)(_ref, ["containerStyle"]);
    return _react.default.createElement(_Icon.default, (0, _extends2.default)({
      type: _reactNative.Platform.OS === 'ios' ? 'ionicon' : 'material',
      color: "#D1D1D6",
      name: _reactNative.Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',
      size: 16,
      containerStyle: _reactNative.StyleSheet.flatten([{
        alignSelf: 'center'
      }, containerStyle])
    }, props));
  }

  var _default = (0, _config.withTheme)(ListItemChevron, 'ListItemChevron');

  exports.default = _default;
},10367,[14305,14344,14407,10297,10033,10082,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _Input = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  function ListItemInput(_ref) {
    var inputStyle = _ref.inputStyle,
        inputContainerStyle = _ref.inputContainerStyle,
        containerStyle = _ref.containerStyle,
        props = (0, _objectWithoutProperties2.default)(_ref, ["inputStyle", "inputContainerStyle", "containerStyle"]);
    return _react.default.createElement(_Input.default, (0, _extends2.default)({
      renderErrorMessage: false
    }, props, {
      inputStyle: _reactNative.StyleSheet.flatten([styles.input, inputStyle]),
      inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContainer, inputContainerStyle]),
      containerStyle: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
    }));
  }

  var styles = {
    container: {
      flex: 1,
      paddingRight: 0
    },
    inputContainer: {
      flex: 1,
      borderBottomWidth: 0,
      width: null,
      height: null
    },
    input: {
      flex: 1,
      textAlign: 'right',
      width: null,
      height: null
    }
  };

  var _default = (0, _config.withTheme)(ListItemInput, 'ListItemInput');

  exports.default = _default;
},10370,[14305,14344,14407,10297,10033,10082,10340]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _CheckBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  function ListItemCheckBox(_ref) {
    var containerStyle = _ref.containerStyle,
        props = (0, _objectWithoutProperties2.default)(_ref, ["containerStyle"]);
    return _react.default.createElement(_CheckBox.default, (0, _extends2.default)({}, props, {
      containerStyle: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
    }));
  }

  var styles = {
    container: {
      margin: 0,
      marginRight: 0,
      marginLeft: 0,
      padding: 0
    }
  };

  var _default = (0, _config.withTheme)(ListItemCheckBox, 'ListItemCheckBox');

  exports.default = _default;
},10373,[14305,14344,14407,10297,10033,10082,10376]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.CheckBox = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _CheckBoxIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _config = _$$_REQUIRE(_dependencyMap[9]);

  var CheckBox = function CheckBox(props) {
    var theme = props.theme,
        rest = (0, _objectWithoutProperties2.default)(props, ["theme"]);
    var Component = rest.Component,
        checked = rest.checked,
        iconRight = rest.iconRight,
        title = rest.title,
        titleProps = rest.titleProps,
        center = rest.center,
        right = rest.right,
        containerStyle = rest.containerStyle,
        textStyle = rest.textStyle,
        wrapperStyle = rest.wrapperStyle,
        onPress = rest.onPress,
        onLongPress = rest.onLongPress,
        checkedTitle = rest.checkedTitle,
        fontFamily = rest.fontFamily,
        _rest$checkedColor = rest.checkedColor,
        checkedColor = _rest$checkedColor === undefined ? theme.colors.primary : _rest$checkedColor,
        attributes = (0, _objectWithoutProperties2.default)(rest, ["Component", "checked", "iconRight", "title", "titleProps", "center", "right", "containerStyle", "textStyle", "wrapperStyle", "onPress", "onLongPress", "checkedTitle", "fontFamily", "checkedColor"]);
    var accessibilityState = {
      checked: !!checked
    };
    return _react.default.createElement(Component, (0, _extends2.default)({
      accessibilityRole: "checkbox",
      accessibilityState: accessibilityState,
      testID: "checkbox"
    }, attributes, {
      onLongPress: onLongPress,
      onPress: onPress,
      style: _reactNative.StyleSheet.flatten([styles.container, title && styles.containerHasTitle, containerStyle && containerStyle])
    }), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.wrapper, right && {
        justifyContent: 'flex-end'
      }, center && {
        justifyContent: 'center'
      }, wrapperStyle && wrapperStyle])
    }, !iconRight && _react.default.createElement(_CheckBoxIcon.default, (0, _extends2.default)({}, props, {
      checkedColor: checkedColor
    })), _react.default.isValidElement(title) ? title : title !== '' && title && _react.default.createElement(_Text.default, (0, _extends2.default)({
      testID: "checkboxTitle",
      style: _reactNative.StyleSheet.flatten([styles.text(theme), textStyle && textStyle, fontFamily && {
        fontFamily: fontFamily
      }])
    }, titleProps), checked ? checkedTitle || title : title), iconRight && _react.default.createElement(_CheckBoxIcon.default, (0, _extends2.default)({}, props, {
      checkedColor: checkedColor
    }))));
  };

  exports.CheckBox = CheckBox;
  CheckBox.propTypes = (0, _objectSpread2.default)({}, _CheckBoxIcon.default.propTypes, {
    Component: _propTypes.default.elementType,
    iconRight: _propTypes.default.bool,
    title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    titleProps: _propTypes.default.object,
    center: _propTypes.default.bool,
    right: _propTypes.default.bool,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    wrapperStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    textStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    checkedTitle: _propTypes.default.string,
    fontFamily: _propTypes.default.string
  });
  CheckBox.defaultProps = {
    checked: false,
    iconRight: false,
    right: false,
    center: false,
    uncheckedColor: '#bfbfbf',
    checkedIcon: 'check-square-o',
    uncheckedIcon: 'square-o',
    size: 24,
    Component: _reactNative.TouchableOpacity,
    titleProps: {}
  };
  var styles = {
    wrapper: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    container: {
      margin: 5,
      marginLeft: 10,
      marginRight: 10,
      padding: 10
    },
    containerHasTitle: {
      borderWidth: 1,
      borderRadius: 3,
      backgroundColor: '#fafafa',
      borderColor: '#ededed'
    },
    text: function text(theme) {
      return (0, _objectSpread2.default)({
        marginLeft: 10,
        marginRight: 10,
        color: theme.colors.grey1
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.bold),
        default: {
          fontWeight: 'bold'
        }
      }));
    }
  };

  var _default = (0, _config.withTheme)(CheckBox, 'CheckBox');

  exports.default = _default;
},10376,[14305,14314,14344,14407,10297,10318,10033,10361,10379,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _FontAwesome = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getIconType = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var CheckBoxIcon = function CheckBoxIcon(_ref) {
    var checked = _ref.checked,
        onIconPress = _ref.onIconPress,
        onLongIconPress = _ref.onLongIconPress,
        size = _ref.size,
        checkedIcon = _ref.checkedIcon,
        uncheckedIcon = _ref.uncheckedIcon,
        iconType = _ref.iconType,
        checkedColor = _ref.checkedColor,
        uncheckedColor = _ref.uncheckedColor;

    if (checked && _react.default.isValidElement(checkedIcon)) {
      return checkedIcon;
    }

    if (!checked && _react.default.isValidElement(uncheckedIcon)) {
      return uncheckedIcon;
    }

    var VectorIcon = iconType ? (0, _getIconType.default)(iconType) : _FontAwesome.default;
    return _react.default.createElement(VectorIcon, {
      color: checked ? checkedColor : uncheckedColor,
      name: checked ? checkedIcon : uncheckedIcon,
      size: size || 24,
      style: {
        minWidth: size || 24
      },
      onLongPress: onLongIconPress,
      onPress: onIconPress
    });
  };

  CheckBoxIcon.propTypes = {
    checked: _propTypes.default.bool,
    onIconPress: _propTypes.default.func,
    onLongIconPress: _propTypes.default.func,
    size: _propTypes.default.number,
    checkedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    uncheckedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    iconType: _propTypes.default.string,
    checkedColor: _propTypes.default.string,
    uncheckedColor: _propTypes.default.string
  };
  var _default = CheckBoxIcon;
  exports.default = _default;
},10379,[14305,10297,10318,10268,10124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _ButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  function ListItemButtonGroup(_ref) {
    var containerStyle = _ref.containerStyle,
        props = (0, _objectWithoutProperties2.default)(_ref, ["containerStyle"]);
    return _react.default.createElement(_ButtonGroup.default, (0, _extends2.default)({}, props, {
      containerStyle: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
    }));
  }

  var styles = {
    container: {
      flex: 1,
      marginHorizontal: 0,
      marginVertical: 0
    }
  };

  var _default = (0, _config.withTheme)(ListItemButtonGroup, 'ListItemButtonGroup');

  exports.default = _default;
},10382,[14305,14344,14407,10297,10033,10082,10385]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.ButtonGroup = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _config = _$$_REQUIRE(_dependencyMap[8]);

  var _helpers = _$$_REQUIRE(_dependencyMap[9]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var ButtonGroup = function ButtonGroup(props) {
    var theme = props.theme,
        rest = (0, _objectWithoutProperties2.default)(props, ["theme"]);
    var Component = rest.Component,
        buttons = rest.buttons,
        _onPress = rest.onPress,
        selectedIndex = rest.selectedIndex,
        selectedIndexes = rest.selectedIndexes,
        selectMultiple = rest.selectMultiple,
        containerStyle = rest.containerStyle,
        innerBorderStyle = rest.innerBorderStyle,
        buttonStyle = rest.buttonStyle,
        buttonContainerStyle = rest.buttonContainerStyle,
        textStyle = rest.textStyle,
        selectedTextStyle = rest.selectedTextStyle,
        selectedButtonStyle = rest.selectedButtonStyle,
        _rest$underlayColor = rest.underlayColor,
        underlayColor = _rest$underlayColor === undefined ? theme.colors.primary : _rest$underlayColor,
        activeOpacity = rest.activeOpacity,
        onHideUnderlay = rest.onHideUnderlay,
        onShowUnderlay = rest.onShowUnderlay,
        setOpacityTo = rest.setOpacityTo,
        disabled = rest.disabled,
        disabledStyle = rest.disabledStyle,
        disabledTextStyle = rest.disabledTextStyle,
        disabledSelectedStyle = rest.disabledSelectedStyle,
        disabledSelectedTextStyle = rest.disabledSelectedTextStyle,
        vertical = rest.vertical,
        attributes = (0, _objectWithoutProperties2.default)(rest, ["Component", "buttons", "onPress", "selectedIndex", "selectedIndexes", "selectMultiple", "containerStyle", "innerBorderStyle", "buttonStyle", "buttonContainerStyle", "textStyle", "selectedTextStyle", "selectedButtonStyle", "underlayColor", "activeOpacity", "onHideUnderlay", "onShowUnderlay", "setOpacityTo", "disabled", "disabledStyle", "disabledTextStyle", "disabledSelectedStyle", "disabledSelectedTextStyle", "vertical"]);
    var innerBorderWidth = 1;

    if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {
      innerBorderWidth = innerBorderStyle.width;
    }

    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {
      style: _reactNative.StyleSheet.flatten([styles.container, vertical && styles.verticalContainer, containerStyle && containerStyle])
    }), buttons.map(function (button, i) {
      var isSelected = selectedIndex === i || selectedIndexes.includes(i);
      var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);
      return _react.default.createElement(_reactNative.View, {
        key: i,
        style: _reactNative.StyleSheet.flatten([styles.button, vertical && styles.verticalComponent, i !== buttons.length - 1 && (vertical ? {
          borderBottomWidth: innerBorderWidth,
          borderBottomColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4
        } : {
          borderRightWidth: innerBorderWidth,
          borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4
        }), buttonContainerStyle])
      }, _react.default.createElement(Component, {
        testID: "buttonGroupItem",
        activeOpacity: activeOpacity,
        setOpacityTo: setOpacityTo,
        onHideUnderlay: onHideUnderlay,
        onShowUnderlay: onShowUnderlay,
        underlayColor: underlayColor,
        disabled: isDisabled,
        onPress: function onPress() {
          if (selectMultiple) {
            if (selectedIndexes.includes(i)) {
              _onPress(selectedIndexes.filter(function (index) {
                return index !== i;
              }));
            } else {
              _onPress([].concat((0, _toConsumableArray2.default)(selectedIndexes), [i]));
            }
          } else {
            _onPress(i);
          }
        },
        style: styles.button
      }, _react.default.createElement(_reactNative.View, {
        style: _reactNative.StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {
          backgroundColor: theme.colors.primary
        }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle])
      }, button.element ? _react.default.createElement(button.element, null) : _react.default.createElement(_Text.default, {
        testID: "buttonGroupItemText",
        style: _reactNative.StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {
          color: '#fff'
        }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle])
      }, button))));
    }));
  };

  exports.ButtonGroup = ButtonGroup;
  var styles = {
    button: {
      flex: 1
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    container: {
      marginHorizontal: 10,
      marginVertical: 5,
      borderColor: '#e3e3e3',
      borderWidth: 1,
      flexDirection: 'row',
      borderRadius: 3,
      overflow: 'hidden',
      backgroundColor: '#fff',
      height: 40
    },
    verticalContainer: {
      flexDirection: 'column',
      height: null
    },
    verticalComponent: {
      height: 40
    },
    buttonText: function buttonText(theme) {
      return (0, _objectSpread2.default)({
        fontSize: (0, _helpers.normalizeText)(13),
        color: theme.colors.grey2
      }, _reactNative.Platform.select({
        android: {},
        default: {
          fontWeight: '500'
        }
      }));
    },
    disabled: {
      backgroundColor: 'transparent'
    },
    disabledText: function disabledText(theme) {
      return {
        color: (0, _helpers.color)(theme.colors.disabled).darken(0.3).toString()
      };
    },
    disabledSelected: function disabledSelected(theme) {
      return {
        backgroundColor: theme.colors.disabled
      };
    }
  };
  ButtonGroup.propTypes = {
    button: _propTypes.default.object,
    Component: _propTypes.default.elementType,
    onPress: _propTypes.default.func,
    buttons: _propTypes.default.array,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    textStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    selectedTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    selectedButtonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    underlayColor: _propTypes.default.string,
    selectedIndex: _propTypes.default.number,
    selectedIndexes: _propTypes.default.arrayOf(_propTypes.default.number),
    activeOpacity: _propTypes.default.number,
    onHideUnderlay: _propTypes.default.func,
    onShowUnderlay: _propTypes.default.func,
    setOpacityTo: _propTypes.default.func,
    innerBorderStyle: _propTypes.default.shape({
      color: _propTypes.default.string,
      width: _propTypes.default.number
    }),
    buttonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    buttonContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    selectMultiple: _propTypes.default.bool,
    theme: _propTypes.default.object,
    disabled: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.number)]),
    disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    disabledTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    disabledSelectedStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    disabledSelectedTextStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    vertical: _propTypes.default.bool
  };
  ButtonGroup.defaultProps = {
    selectedIndex: null,
    selectedIndexes: [],
    selectMultiple: false,
    disabled: false,
    Component: _reactNative.Platform.select({
      android: _reactNative.TouchableNativeFeedback,
      default: _reactNative.TouchableOpacity
    }),
    onPress: function onPress() {
      return null;
    },
    vertical: false
  };

  var _default = (0, _config.withTheme)(ButtonGroup, 'ButtonGroup');

  exports.default = _default;
},10385,[14305,14314,14344,14359,14407,10297,10318,10033,10082,10118,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _config = _$$_REQUIRE(_dependencyMap[6]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';

  function ListItemTitle(_ref) {
    var style = _ref.style,
        right = _ref.right,
        children = _ref.children,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style", "right", "children"]);
    return _react.default.createElement(_Text.default, (0, _extends2.default)({
      testID: "listItemTitle",
      style: _reactNative.StyleSheet.flatten([styles.title, right && styles.rightTitle, style])
    }, props), children);
  }

  var styles = {
    title: (0, _objectSpread2.default)({
      backgroundColor: 'transparent'
    }, _reactNative.Platform.select({
      ios: {
        fontSize: 17
      },
      default: {
        fontSize: 16
      }
    })),
    rightTitle: {
      color: ANDROID_SECONDARY
    }
  };

  var _default = (0, _config.withTheme)(ListItemTitle, 'ListItemTitle');

  exports.default = _default;
},10388,[14305,14314,14344,14407,10297,10033,10082,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _config = _$$_REQUIRE(_dependencyMap[6]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';

  function ListItemSubtitle(_ref) {
    var style = _ref.style,
        right = _ref.right,
        children = _ref.children,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style", "right", "children"]);
    return _react.default.createElement(_Text.default, (0, _extends2.default)({
      testID: "listItemTitle",
      style: _reactNative.StyleSheet.flatten([styles.subtitle, right && styles.rightSubtitle, style])
    }, props), children);
  }

  var styles = {
    subtitle: (0, _objectSpread2.default)({
      backgroundColor: 'transparent'
    }, _reactNative.Platform.select({
      ios: {
        fontSize: 15
      },
      default: {
        color: ANDROID_SECONDARY,
        fontSize: 14
      }
    })),
    rightSubtitle: {
      color: ANDROID_SECONDARY
    }
  };

  var _default = (0, _config.withTheme)(ListItemSubtitle, 'ListItemSubtitle');

  exports.default = _default;
},10391,[14305,14314,14344,14407,10297,10033,10082,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.SocialIcon = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _fonts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _config = _$$_REQUIRE(_dependencyMap[10]);

  var colors = {
    'github-alt': '#000000',
    'google-plus-official': '#dd4b39',
    google: '#dd4b39',
    'reddit-alien': '#fc461e',
    'stack-overflow': '#f27f33',
    angellist: '#1c4082',
    codepen: '#000000',
    envelope: '#000000',
    etsy: '#f2581e',
    facebook: '#4267B2',
    flickr: '#ff0084',
    foursquare: '#0072b1',
    github: '#000000',
    gitlab: '#e14329',
    instagram: '#517fa4',
    linkedin: '#007bb6',
    medium: '#02b875',
    pinterest: '#cb2027',
    quora: '#a82400',
    soundcloud: '#f50',
    steam: '#c6c3c1',
    stumbleupon: '#EB4823',
    tumblr: '#32506d',
    twitch: '#6441A5',
    twitter: '#00aced',
    vimeo: '#aad450',
    vk: '#5181b8',
    wechat: '#7bb32e',
    weibo: '#e6162d',
    wordpress: '#21759b',
    youtube: '#bb0000'
  };

  var SocialIcon = function SocialIcon(props) {
    var activityIndicatorStyle = props.activityIndicatorStyle,
        button = props.button,
        disabled = props.disabled,
        fontFamily = props.fontFamily,
        fontStyle = props.fontStyle,
        fontWeight = props.fontWeight,
        iconType = props.iconType,
        iconColor = props.iconColor,
        iconSize = props.iconSize,
        iconStyle = props.iconStyle,
        light = props.light,
        loading = props.loading,
        onLongPress = props.onLongPress,
        onPress = props.onPress,
        _props$Component = props.Component,
        Component = _props$Component === undefined ? onPress || onLongPress ? _reactNative.TouchableHighlight : _reactNative.View : _props$Component,
        raised = props.raised,
        small = props.small,
        style = props.style,
        title = props.title,
        type = props.type,
        underlayColor = props.underlayColor,
        attributes = (0, _objectWithoutProperties2.default)(props, ["activityIndicatorStyle", "button", "disabled", "fontFamily", "fontStyle", "fontWeight", "iconType", "iconColor", "iconSize", "iconStyle", "light", "loading", "onLongPress", "onPress", "Component", "raised", "small", "style", "title", "type", "underlayColor"]);
    return _react.default.createElement(Component, (0, _extends2.default)({}, attributes, {
      underlayColor: light ? 'white' : underlayColor || colors[type],
      onLongPress: disabled ? null : onLongPress,
      onPress: disabled ? null : onPress,
      disabled: disabled,
      style: _reactNative.StyleSheet.flatten([raised && styles.raised, styles.container, button && styles.button, !button && raised && styles.icon, !button && !light && !raised && {
        width: iconSize * 2 + 4,
        height: iconSize * 2 + 4,
        borderRadius: iconSize * 2
      }, {
        backgroundColor: colors[type]
      }, light && {
        backgroundColor: 'white'
      }, style && style])
    }), _react.default.createElement(_reactNative.View, {
      style: styles.wrapper
    }, _react.default.createElement(_Icon.default, {
      iconStyle: _reactNative.StyleSheet.flatten([iconStyle && iconStyle]),
      color: light ? colors[type] : iconColor,
      name: type,
      size: iconSize,
      type: iconType
    }), button && title && _react.default.createElement(_Text.default, {
      style: _reactNative.StyleSheet.flatten([styles.title, light && {
        color: colors[type]
      }, fontFamily && {
        fontFamily: fontFamily
      }, fontWeight && {
        fontWeight: fontWeight
      }, fontStyle && fontStyle])
    }, title), loading && _react.default.createElement(_reactNative.ActivityIndicator, {
      animating: true,
      style: _reactNative.StyleSheet.flatten([styles.activityIndicatorStyle, activityIndicatorStyle]),
      color: iconColor || 'white',
      size: small && 'small' || 'large'
    })));
  };

  exports.SocialIcon = SocialIcon;
  SocialIcon.propTypes = {
    Component: _propTypes.default.elementType,
    type: _propTypes.default.string,
    button: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onLongPress: _propTypes.default.func,
    iconType: _propTypes.default.string,
    iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    iconColor: _propTypes.default.string,
    underlayColor: _propTypes.default.string,
    title: _propTypes.default.string,
    raised: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    loading: _propTypes.default.bool,
    activityIndicatorStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    small: _propTypes.default.string,
    iconSize: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    light: _propTypes.default.bool,
    fontWeight: _propTypes.default.string,
    fontStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    fontFamily: _propTypes.default.string
  };
  SocialIcon.defaultProps = {
    raised: true,
    iconType: 'font-awesome',
    iconColor: 'white',
    iconSize: 24,
    button: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      margin: 7,
      borderRadius: 30,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    button: {
      paddingTop: 14,
      paddingBottom: 14
    },
    raised: (0, _objectSpread2.default)({}, _reactNative.Platform.select({
      android: {
        elevation: 2
      },
      default: {
        shadowColor: 'rgba(0,0,0, .4)',
        shadowOffset: {
          height: 1,
          width: 1
        },
        shadowOpacity: 1,
        shadowRadius: 1
      }
    })),
    wrapper: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: (0, _objectSpread2.default)({
      color: 'white',
      marginLeft: 15
    }, _reactNative.Platform.select({
      android: (0, _objectSpread2.default)({}, _fonts.default.android.black),
      default: {
        fontWeight: 'bold'
      }
    })),
    icon: {
      height: 52,
      width: 52
    },
    activityIndicatorStyle: {
      marginHorizontal: 10,
      height: 0
    }
  });

  var _default = (0, _config.withTheme)(SocialIcon, 'SocialIcon');

  exports.default = _default;
},10394,[14305,14314,14344,14407,10297,10318,10033,10334,10361,10097,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Overlay = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var Overlay = function Overlay(_ref) {
    var children = _ref.children,
        backdropStyle = _ref.backdropStyle,
        overlayStyle = _ref.overlayStyle,
        onBackdropPress = _ref.onBackdropPress,
        fullScreen = _ref.fullScreen,
        ModalComponent = _ref.ModalComponent,
        isVisible = _ref.isVisible,
        rest = (0, _objectWithoutProperties2.default)(_ref, ["children", "backdropStyle", "overlayStyle", "onBackdropPress", "fullScreen", "ModalComponent", "isVisible"]);
    return _react.default.createElement(ModalComponent, (0, _extends2.default)({
      visible: isVisible,
      onRequestClose: onBackdropPress,
      transparent: true
    }, rest), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      onPress: onBackdropPress,
      testID: "RNE__Overlay__backdrop"
    }, _react.default.createElement(_reactNative.View, {
      testID: "backdrop",
      style: _reactNative.StyleSheet.flatten([styles.backdrop, backdropStyle])
    })), _react.default.createElement(_reactNative.View, {
      style: styles.container,
      pointerEvents: "box-none"
    }, _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.overlay, fullScreen && styles.fullscreen, overlayStyle])
    }, children)));
  };

  exports.Overlay = Overlay;
  Overlay.propTypes = {
    children: _propTypes.default.element.isRequired,
    isVisible: _propTypes.default.bool.isRequired,
    backdropStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    overlayStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onBackdropPress: _propTypes.default.func,
    fullScreen: _propTypes.default.bool,
    ModalComponent: _propTypes.default.elementType
  };
  Overlay.defaultProps = {
    fullScreen: false,
    onBackdropPress: function onBackdropPress() {
      return null;
    },
    ModalComponent: _reactNative.Modal
  };

  var styles = _reactNative.StyleSheet.create({
    backdrop: {
      position: 'absolute',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: 'rgba(0, 0, 0, .4)'
    },
    container: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center'
    },
    fullscreen: {
      width: '100%',
      height: '100%'
    },
    overlay: (0, _objectSpread2.default)({
      backgroundColor: 'white',
      borderRadius: 3,
      padding: 10
    }, _reactNative.Platform.select({
      android: {
        elevation: 2
      },
      default: {
        shadowColor: 'rgba(0, 0, 0, .3)',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowRadius: 4
      }
    }))
  });

  var _default = (0, _config.withTheme)(Overlay, 'Overlay');

  exports.default = _default;
},10397,[14305,14314,14344,14407,10297,10318,10033,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.SearchBar = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _config = _$$_REQUIRE(_dependencyMap[9]);

  var _SearchBarIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _SearchBarAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SearchBarDefault = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var SEARCHBAR_COMPONENTS = {
    ios: _SearchBarIos.default,
    android: _SearchBarAndroid.default,
    default: _SearchBarDefault.default
  };

  var SearchBar = function (_React$Component) {
    (0, _inherits2.default)(SearchBar, _React$Component);

    function SearchBar() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SearchBar);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.focus = function () {
        _this.searchbar.focus();
      };

      _this.blur = function () {
        _this.searchbar.blur();
      };

      _this.clear = function () {
        _this.searchbar.clear();
      };

      _this.cancel = function () {
        _this.searchbar.cancel && _this.searchbar.cancel();
      };

      return _this;
    }

    (0, _createClass2.default)(SearchBar, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var Component = SEARCHBAR_COMPONENTS[this.props.platform] || _SearchBarDefault.default;
        return _react.default.createElement(Component, (0, _extends2.default)({
          ref: function ref(_ref) {
            _this2.searchbar = _ref;
          }
        }, this.props));
      }
    }]);
    return SearchBar;
  }(_react.default.Component);

  exports.SearchBar = SearchBar;
  SearchBar.propTypes = {
    platform: _propTypes.default.oneOf(['default', 'ios', 'android'])
  };
  SearchBar.defaultProps = {
    platform: 'default'
  };

  var _default = (0, _config.withTheme)(SearchBar, 'SearchBar');

  exports.default = _default;
},10400,[14305,14344,14320,14323,14371,14377,14386,10297,10318,10082,10403,10406,10409]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Input = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _helpers = _$$_REQUIRE(_dependencyMap[15]);

  var defaultSearchIcon = function defaultSearchIcon(theme) {
    return {
      type: 'ionicon',
      size: 20,
      name: 'ios-search',
      color: theme.colors.platform.ios.grey
    };
  };

  var defaultClearIcon = function defaultClearIcon(theme) {
    return {
      type: 'ionicon',
      name: 'ios-close-circle',
      size: 20,
      color: theme.colors.platform.ios.grey
    };
  };

  var SearchBar = function (_Component) {
    (0, _inherits2.default)(SearchBar, _Component);

    function SearchBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SearchBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBar).call(this, props));

      _this.focus = function () {
        _this.input.focus();
      };

      _this.blur = function () {
        _this.input.blur();
      };

      _this.clear = function () {
        _this.input.clear();

        _this.onChangeText('');

        _this.props.onClear();
      };

      _this.cancel = function () {
        _this.onChangeText('');

        if (_this.props.showCancel) {
          _reactNative.UIManager.configureNextLayoutAnimation && _reactNative.LayoutAnimation.easeInEaseOut();

          _this.setState({
            hasFocus: false
          });
        }

        setTimeout(function () {
          _this.blur();

          _this.props.onCancel();
        }, 0);
      };

      _this.onFocus = function (event) {
        _this.props.onFocus(event);

        _reactNative.UIManager.configureNextLayoutAnimation && _reactNative.LayoutAnimation.easeInEaseOut();

        _this.setState({
          hasFocus: true,
          isEmpty: _this.props.value === ''
        });
      };

      _this.onBlur = function (event) {
        _this.props.onBlur(event);

        if (!_this.props.showCancel) {
          _reactNative.UIManager.configureNextLayoutAnimation && _reactNative.LayoutAnimation.easeInEaseOut();

          _this.setState({
            hasFocus: false
          });
        }
      };

      _this.onChangeText = function (text) {
        _this.props.onChangeText(text);

        _this.setState({
          isEmpty: text === ''
        });
      };

      var value = props.value;
      _this.state = {
        hasFocus: false,
        isEmpty: value ? value === '' : true,
        cancelButtonWidth: null
      };
      return _this;
    }

    (0, _createClass2.default)(SearchBar, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            theme = _this$props.theme,
            cancelButtonProps = _this$props.cancelButtonProps,
            cancelButtonTitle = _this$props.cancelButtonTitle,
            clearIcon = _this$props.clearIcon,
            containerStyle = _this$props.containerStyle,
            leftIconContainerStyle = _this$props.leftIconContainerStyle,
            rightIconContainerStyle = _this$props.rightIconContainerStyle,
            inputContainerStyle = _this$props.inputContainerStyle,
            inputStyle = _this$props.inputStyle,
            placeholderTextColor = _this$props.placeholderTextColor,
            showLoading = _this$props.showLoading,
            loadingProps = _this$props.loadingProps,
            searchIcon = _this$props.searchIcon,
            showCancel = _this$props.showCancel,
            attributes = (0, _objectWithoutProperties2.default)(_this$props, ["theme", "cancelButtonProps", "cancelButtonTitle", "clearIcon", "containerStyle", "leftIconContainerStyle", "rightIconContainerStyle", "inputContainerStyle", "inputStyle", "placeholderTextColor", "showLoading", "loadingProps", "searchIcon", "showCancel"]);
        var _this$state = this.state,
            hasFocus = _this$state.hasFocus,
            isEmpty = _this$state.isEmpty;
        var loadingStyle = loadingProps.style,
            otherLoadingProps = (0, _objectWithoutProperties2.default)(loadingProps, ["style"]);
        var buttonStyle = cancelButtonProps.buttonStyle,
            buttonTextStyle = cancelButtonProps.buttonTextStyle,
            buttonColor = cancelButtonProps.color,
            buttonDisabled = cancelButtonProps.disabled,
            buttonDisabledStyle = cancelButtonProps.buttonDisabledStyle,
            buttonDisabledTextStyle = cancelButtonProps.buttonDisabledTextStyle,
            otherCancelButtonProps = (0, _objectWithoutProperties2.default)(cancelButtonProps, ["buttonStyle", "buttonTextStyle", "color", "disabled", "buttonDisabledStyle", "buttonDisabledTextStyle"]);
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container(theme), containerStyle])
        }, _react.default.createElement(_Input.default, (0, _extends2.default)({
          testID: "searchInput",
          renderErrorMessage: false
        }, attributes, {
          onFocus: this.onFocus,
          onBlur: this.onBlur,
          onChangeText: this.onChangeText,
          ref: function ref(input) {
            _this2.input = input;
          },
          inputStyle: _reactNative.StyleSheet.flatten([styles.input, inputStyle]),
          containerStyle: {
            paddingHorizontal: 0
          },
          inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContainer(theme), hasFocus && {
            marginRight: this.state.cancelButtonWidth
          }, inputContainerStyle]),
          leftIcon: (0, _helpers.renderNode)(_Icon.default, searchIcon, defaultSearchIcon(theme)),
          leftIconContainerStyle: _reactNative.StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),
          placeholderTextColor: placeholderTextColor || theme.colors.platform.ios.grey,
          rightIcon: _react.default.createElement(_reactNative.View, {
            style: {
              flexDirection: 'row'
            }
          }, showLoading && _react.default.createElement(_reactNative.ActivityIndicator, (0, _extends2.default)({
            key: "loading",
            style: _reactNative.StyleSheet.flatten([{
              marginRight: 5
            }, loadingStyle])
          }, otherLoadingProps)), !isEmpty && (0, _helpers.renderNode)(_Icon.default, clearIcon, (0, _objectSpread2.default)({}, defaultClearIcon(theme), {
            key: 'cancel',
            onPress: this.clear
          }))),
          rightIconContainerStyle: _reactNative.StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle])
        })), _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.cancelButtonContainer, {
            opacity: this.state.cancelButtonWidth === null ? 0 : 1,
            right: hasFocus ? 0 : -this.state.cancelButtonWidth
          }]),
          onLayout: function onLayout(event) {
            return _this2.setState({
              cancelButtonWidth: event.nativeEvent.layout.width
            });
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          accessibilityRole: "button",
          onPress: this.cancel,
          disabled: buttonDisabled
        }, otherCancelButtonProps), _react.default.createElement(_reactNative.View, {
          style: [buttonStyle, buttonDisabled && buttonDisabledStyle]
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonTextStyle, buttonColor && {
            color: buttonColor
          }, buttonTextStyle, buttonDisabled && (buttonDisabledTextStyle || styles.buttonTextDisabled)],
          disabled: buttonDisabled
        }, cancelButtonTitle)))));
      }
    }]);
    return SearchBar;
  }(_react.Component);

  SearchBar.propTypes = {
    value: _propTypes.default.string,
    cancelButtonProps: _propTypes.default.object,
    cancelButtonTitle: _propTypes.default.string,
    clearIcon: _helpers.nodeType,
    searchIcon: _helpers.nodeType,
    loadingProps: _propTypes.default.object,
    showLoading: _propTypes.default.bool,
    onClear: _propTypes.default.func,
    onCancel: _propTypes.default.func,
    onFocus: _propTypes.default.func,
    onBlur: _propTypes.default.func,
    onChangeText: _propTypes.default.func,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    leftIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    placeholderTextColor: _propTypes.default.string,
    showCancel: _propTypes.default.bool
  };
  SearchBar.defaultProps = {
    value: '',
    cancelButtonTitle: 'Cancel',
    loadingProps: {},
    cancelButtonProps: {},
    showLoading: false,
    onClear: function onClear() {
      return null;
    },
    onCancel: function onCancel() {
      return null;
    },
    onFocus: function onFocus() {
      return null;
    },
    onBlur: function onBlur() {
      return null;
    },
    onChangeText: function onChangeText() {
      return null;
    },
    searchIcon: {
      name: 'ios-search'
    },
    clearIcon: {
      name: 'ios-close-circle'
    },
    showCancel: false
  };
  var styles = {
    container: function container(theme) {
      return {
        backgroundColor: theme.colors.white,
        paddingBottom: 13,
        paddingTop: 13,
        flexDirection: 'row',
        overflow: 'hidden',
        alignItems: 'center'
      };
    },
    input: {
      marginLeft: 6,
      overflow: 'hidden'
    },
    inputContainer: function inputContainer(theme) {
      return {
        borderBottomWidth: 0,
        backgroundColor: theme.colors.platform.ios.searchBg,
        borderRadius: 9,
        minHeight: 36,
        marginLeft: 8,
        marginRight: 8
      };
    },
    rightIconContainerStyle: {
      marginRight: 8
    },
    leftIconContainerStyle: {
      marginLeft: 8
    },
    buttonTextStyle: {
      color: '#007aff',
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    buttonTextDisabled: {
      color: '#cdcdcd'
    },
    cancelButtonContainer: {
      position: 'absolute'
    }
  };
  var _default = SearchBar;
  exports.default = _default;
},10403,[14308,14305,14314,14344,14407,14320,14323,14371,14377,14386,10318,10297,10033,10340,10334,10118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _helpers = _$$_REQUIRE(_dependencyMap[13]);

  var _Input = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var defaultSearchIcon = function defaultSearchIcon(theme) {
    return {
      type: 'material',
      size: 25,
      color: theme.colors.platform.android.grey,
      name: 'search'
    };
  };

  var defaultCancelIcon = function defaultCancelIcon(theme) {
    return {
      type: 'material',
      size: 25,
      color: theme.colors.platform.android.grey,
      name: 'arrow-back'
    };
  };

  var defaultClearIcon = function defaultClearIcon(theme) {
    return {
      type: 'material',
      size: 25,
      color: theme.colors.platform.android.grey,
      name: 'clear'
    };
  };

  var SearchBar = function (_Component) {
    (0, _inherits2.default)(SearchBar, _Component);

    function SearchBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SearchBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBar).call(this, props));

      _this.focus = function () {
        _this.input.focus();
      };

      _this.blur = function () {
        _this.input.blur();
      };

      _this.clear = function () {
        _this.input.clear();

        _this.onChangeText('');

        _this.props.onClear();
      };

      _this.cancel = function () {
        _this.blur();

        _this.props.onCancel();
      };

      _this.onFocus = function (event) {
        _this.props.onFocus(event);

        _this.setState({
          hasFocus: true,
          isEmpty: _this.props.value === ''
        });
      };

      _this.onBlur = function (event) {
        _this.props.onBlur(event);

        _this.setState({
          hasFocus: false
        });
      };

      _this.onChangeText = function (text) {
        _this.props.onChangeText(text);

        _this.setState({
          isEmpty: text === ''
        });
      };

      _this._keyboardDidHide = function () {
        _this.cancel();
      };

      var value = props.value;
      _this.state = {
        hasFocus: false,
        isEmpty: value ? value === '' : true
      };

      _reactNative.Keyboard.addListener('keyboardDidHide', _this._keyboardDidHide);

      return _this;
    }

    (0, _createClass2.default)(SearchBar, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.Keyboard.removeListener('keyboardDidHide', this._keyboardDidHide);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            theme = _this$props.theme,
            clearIcon = _this$props.clearIcon,
            containerStyle = _this$props.containerStyle,
            leftIconContainerStyle = _this$props.leftIconContainerStyle,
            rightIconContainerStyle = _this$props.rightIconContainerStyle,
            inputContainerStyle = _this$props.inputContainerStyle,
            inputStyle = _this$props.inputStyle,
            searchIcon = _this$props.searchIcon,
            cancelIcon = _this$props.cancelIcon,
            showLoading = _this$props.showLoading,
            loadingProps = _this$props.loadingProps,
            attributes = (0, _objectWithoutProperties2.default)(_this$props, ["theme", "clearIcon", "containerStyle", "leftIconContainerStyle", "rightIconContainerStyle", "inputContainerStyle", "inputStyle", "searchIcon", "cancelIcon", "showLoading", "loadingProps"]);
        var _this$state = this.state,
            hasFocus = _this$state.hasFocus,
            isEmpty = _this$state.isEmpty;
        var loadingStyle = loadingProps.style,
            otherLoadingProps = (0, _objectWithoutProperties2.default)(loadingProps, ["style"]);
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container(theme), containerStyle])
        }, _react.default.createElement(_Input.default, (0, _extends2.default)({
          testID: "searchInput",
          renderErrorMessage: false
        }, attributes, {
          onFocus: this.onFocus,
          onBlur: this.onBlur,
          onChangeText: this.onChangeText,
          ref: function ref(input) {
            _this2.input = input;
          },
          containerStyle: {
            paddingHorizontal: 0
          },
          inputStyle: _reactNative.StyleSheet.flatten([styles.input, inputStyle]),
          inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContainer, inputContainerStyle]),
          leftIcon: hasFocus ? (0, _helpers.renderNode)(_Icon.default, cancelIcon, (0, _objectSpread2.default)({}, defaultCancelIcon(theme), {
            onPress: this.cancel
          })) : (0, _helpers.renderNode)(_Icon.default, searchIcon, defaultSearchIcon(theme)),
          leftIconContainerStyle: _reactNative.StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),
          rightIcon: _react.default.createElement(_reactNative.View, {
            style: {
              flexDirection: 'row'
            }
          }, showLoading && _react.default.createElement(_reactNative.ActivityIndicator, (0, _extends2.default)({
            key: "loading",
            style: _reactNative.StyleSheet.flatten([{
              marginRight: 5
            }, loadingStyle])
          }, otherLoadingProps)), !isEmpty && (0, _helpers.renderNode)(_Icon.default, clearIcon, (0, _objectSpread2.default)({}, defaultClearIcon(theme), {
            key: 'cancel',
            onPress: this.clear
          }))),
          rightIconContainerStyle: _reactNative.StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle])
        })));
      }
    }]);
    return SearchBar;
  }(_react.Component);

  SearchBar.propTypes = {
    value: _propTypes.default.string,
    clearIcon: _helpers.nodeType,
    searchIcon: _helpers.nodeType,
    cancelIcon: _helpers.nodeType,
    loadingProps: _propTypes.default.object,
    showLoading: _propTypes.default.bool,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    leftIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onClear: _propTypes.default.func,
    onCancel: _propTypes.default.func,
    onFocus: _propTypes.default.func,
    onBlur: _propTypes.default.func,
    onChangeText: _propTypes.default.func
  };
  SearchBar.defaultProps = {
    value: '',
    loadingProps: {},
    showLoading: false,
    onClear: function onClear() {
      return null;
    },
    onCancel: function onCancel() {
      return null;
    },
    onFocus: function onFocus() {
      return null;
    },
    onBlur: function onBlur() {
      return null;
    },
    onChangeText: function onChangeText() {
      return null;
    },
    searchIcon: {
      name: 'search'
    },
    clearIcon: {
      name: 'clear'
    },
    cancelIcon: {
      name: 'arrow-back'
    }
  };
  var styles = {
    container: function container(theme) {
      return {
        backgroundColor: theme.colors.white,
        paddingTop: 8,
        paddingBottom: 8
      };
    },
    input: {
      marginLeft: 24,
      marginRight: 8
    },
    inputContainer: {
      borderBottomWidth: 0,
      width: '100%'
    },
    rightIconContainerStyle: {
      marginRight: 8
    },
    leftIconContainerStyle: {
      marginLeft: 8
    }
  };
  var _default = SearchBar;
  exports.default = _default;
},10406,[14308,14305,14344,14314,14407,14320,14323,14371,14377,14386,10318,10297,10033,10118,10340,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _helpers = _$$_REQUIRE(_dependencyMap[12]);

  var _Input = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var defaultSearchIcon = function defaultSearchIcon(theme) {
    return {
      type: 'material',
      size: 18,
      name: 'search',
      color: theme.colors.grey3
    };
  };

  var defaultClearIcon = function defaultClearIcon(theme) {
    return {
      type: 'material',
      size: 18,
      name: 'clear',
      color: theme.colors.grey3
    };
  };

  var SearchBar = function (_React$Component) {
    (0, _inherits2.default)(SearchBar, _React$Component);

    function SearchBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SearchBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBar).call(this, props));

      _this.focus = function () {
        _this.input.focus();
      };

      _this.blur = function () {
        _this.input.blur();
      };

      _this.clear = function () {
        _this.input.clear();

        _this.onChangeText('');

        _this.props.onClear();
      };

      _this.onFocus = function (event) {
        _this.props.onFocus(event);

        _this.setState({
          isEmpty: _this.props.value === ''
        });
      };

      _this.onBlur = function (event) {
        _this.props.onBlur(event);
      };

      _this.onChangeText = function (text) {
        _this.props.onChangeText(text);

        _this.setState({
          isEmpty: text === ''
        });
      };

      var value = props.value;
      _this.state = {
        isEmpty: value ? value === '' : true
      };
      return _this;
    }

    (0, _createClass2.default)(SearchBar, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            theme = _this$props.theme,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["theme"]);
        var lightTheme = rest.lightTheme,
            round = rest.round,
            _rest$clearIcon = rest.clearIcon,
            clearIcon = _rest$clearIcon === undefined ? defaultClearIcon(theme) : _rest$clearIcon,
            containerStyle = rest.containerStyle,
            _rest$searchIcon = rest.searchIcon,
            searchIcon = _rest$searchIcon === undefined ? defaultSearchIcon(theme) : _rest$searchIcon,
            leftIconContainerStyle = rest.leftIconContainerStyle,
            rightIconContainerStyle = rest.rightIconContainerStyle,
            inputContainerStyle = rest.inputContainerStyle,
            inputStyle = rest.inputStyle,
            showLoading = rest.showLoading,
            loadingProps = rest.loadingProps,
            _rest$placeholderText = rest.placeholderTextColor,
            placeholderTextColor = _rest$placeholderText === undefined ? theme.colors.grey3 : _rest$placeholderText,
            attributes = (0, _objectWithoutProperties2.default)(rest, ["lightTheme", "round", "clearIcon", "containerStyle", "searchIcon", "leftIconContainerStyle", "rightIconContainerStyle", "inputContainerStyle", "inputStyle", "showLoading", "loadingProps", "placeholderTextColor"]);
        var isEmpty = this.state.isEmpty;
        var loadingStyle = loadingProps.style,
            otherLoadingProps = (0, _objectWithoutProperties2.default)(loadingProps, ["style"]);
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container(theme), lightTheme && styles.containerLight(theme), containerStyle])
        }, _react.default.createElement(_Input.default, (0, _extends2.default)({
          testID: "searchInput",
          renderErrorMessage: false
        }, attributes, {
          onFocus: this.onFocus,
          onBlur: this.onBlur,
          onChangeText: this.onChangeText,
          ref: function ref(input) {
            _this2.input = input;
          },
          placeholderTextColor: placeholderTextColor,
          inputStyle: _reactNative.StyleSheet.flatten([styles.inputStyle(theme), inputStyle]),
          inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContentContainer(theme), lightTheme && styles.inputContentContainerLight(theme), round && styles.round, inputContainerStyle]),
          containerStyle: styles.inputContainer,
          leftIcon: (0, _helpers.renderNode)(_Icon.default, searchIcon, defaultSearchIcon(theme)),
          leftIconContainerStyle: _reactNative.StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),
          rightIcon: _react.default.createElement(_reactNative.View, {
            style: {
              flexDirection: 'row'
            }
          }, showLoading && _react.default.createElement(_reactNative.ActivityIndicator, (0, _extends2.default)({
            key: "loading",
            style: _reactNative.StyleSheet.flatten([{
              marginRight: 5
            }, loadingStyle])
          }, otherLoadingProps)), !isEmpty && (0, _helpers.renderNode)(_Icon.default, clearIcon, (0, _objectSpread2.default)({}, defaultClearIcon(theme), {
            key: 'cancel',
            onPress: this.clear
          }))),
          rightIconContainerStyle: _reactNative.StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle])
        })));
      }
    }]);
    return SearchBar;
  }(_react.default.Component);

  SearchBar.propTypes = {
    value: _propTypes.default.string,
    clearIcon: _helpers.nodeType,
    searchIcon: _helpers.nodeType,
    loadingProps: _propTypes.default.object,
    showLoading: _propTypes.default.bool,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    leftIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightIconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    inputStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    onClear: _propTypes.default.func,
    onFocus: _propTypes.default.func,
    onBlur: _propTypes.default.func,
    onChangeText: _propTypes.default.func,
    placeholderTextColor: _propTypes.default.string,
    lightTheme: _propTypes.default.bool,
    round: _propTypes.default.bool,
    theme: _propTypes.default.object
  };
  SearchBar.defaultProps = {
    value: '',
    loadingProps: {},
    showLoading: false,
    lightTheme: false,
    round: false,
    onClear: function onClear() {
      return null;
    },
    onFocus: function onFocus() {
      return null;
    },
    onBlur: function onBlur() {
      return null;
    },
    onChangeText: function onChangeText() {
      return null;
    }
  };
  var styles = {
    container: function container(theme) {
      return {
        borderTopWidth: 1,
        borderBottomWidth: 1,
        borderBottomColor: '#000',
        borderTopColor: '#000',
        padding: 8,
        backgroundColor: theme.colors.grey0
      };
    },
    rightIconContainerStyle: {
      marginRight: 8
    },
    leftIconContainerStyle: {
      marginLeft: 8
    },
    containerLight: function containerLight(theme) {
      return {
        borderTopColor: '#e1e1e1',
        borderBottomColor: '#e1e1e1',
        backgroundColor: theme.colors.grey5
      };
    },
    inputContainer: {
      paddingHorizontal: 0
    },
    inputStyle: function inputStyle(theme) {
      return {
        color: theme.colors.grey3,
        marginLeft: 10
      };
    },
    inputContentContainer: function inputContentContainer(theme) {
      return {
        borderBottomWidth: 0,
        borderRadius: 3,
        overflow: 'hidden',
        minHeight: 30,
        backgroundColor: theme.colors.searchBg
      };
    },
    inputContentContainerLight: function inputContentContainerLight(theme) {
      return {
        backgroundColor: theme.colors.grey4
      };
    },
    round: {
      borderRadius: 15
    }
  };
  var _default = SearchBar;
  exports.default = _default;
},10409,[14305,14314,14344,14407,14320,14323,14371,14377,14386,10297,10318,10033,10118,10340,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _Badge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var withBadge = function withBadge(value) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return function (WrappedComponent) {
      var WithBadge = function WithBadge(props) {
        var bottom = options.bottom,
            _options$hidden = options.hidden,
            hidden = _options$hidden === undefined ? false : _options$hidden,
            left = options.left,
            containerStyle = options.containerStyle,
            badgeProps = (0, _objectWithoutProperties2.default)(options, ["bottom", "hidden", "left", "containerStyle"]);
        var _options$right = options.right,
            right = _options$right === undefined ? -16 : _options$right,
            _options$top = options.top,
            top = _options$top === undefined ? -1 : _options$top;

        if (!value) {
          right = -3;
          top = 3;
        }

        var badgeValue = typeof value === 'function' ? value(props) : value;
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
        }, _react.default.createElement(WrappedComponent, props), !hidden && _react.default.createElement(_Badge.default, (0, _extends2.default)({
          value: badgeValue,
          status: "error",
          containerStyle: _reactNative.StyleSheet.flatten([styles.badgeContainer, {
            bottom: bottom,
            left: left,
            right: right,
            top: top
          }])
        }, badgeProps)));
      };

      WithBadge.displayName = "WithBadge(" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + ")";
      return WithBadge;
    };
  };

  var styles = _reactNative.StyleSheet.create({
    badgeContainer: {
      position: 'absolute'
    },
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      position: 'relative'
    }
  });

  var _default = withBadge;
  exports.default = _default;
},10412,[14305,14344,14407,10297,10033,10358]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Divider = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _config = _$$_REQUIRE(_dependencyMap[6]);

  var Divider = function Divider(_ref) {
    var style = _ref.style,
        theme = _ref.theme,
        rest = (0, _objectWithoutProperties2.default)(_ref, ["style", "theme"]);
    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.container(theme), style])
    }, rest));
  };

  exports.Divider = Divider;
  Divider.propTypes = {
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    theme: _propTypes.default.object
  };
  var styles = {
    container: function container(theme) {
      return {
        backgroundColor: theme.colors.divider,
        height: _reactNative.StyleSheet.hairlineWidth
      };
    }
  };

  var _default = (0, _config.withTheme)(Divider, 'Divider');

  exports.default = _default;
},10415,[14305,14344,14407,10297,10318,10033,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Slider = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

  var _config = _$$_REQUIRE(_dependencyMap[15]);

  var TRACK_SIZE = 4;
  var THUMB_SIZE = 40;

  var TRACK_STYLE = _reactNative.Platform.select({
    web: 0,
    default: -1
  });

  var DEFAULT_ANIMATION_CONFIGS = {
    spring: {
      friction: 7,
      tension: 100,
      useNativeDriver: false
    },
    timing: {
      duration: 150,
      easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
      delay: 0,
      useNativeDriver: false
    }
  };

  var getBoundedValue = function getBoundedValue(value, maximumValue, minimumValue) {
    return Math.max(Math.min(value, maximumValue), minimumValue);
  };

  var Rect = function () {
    function Rect(x, y, width, height) {
      (0, _classCallCheck2.default)(this, Rect);
      this.x = x;
      this.y = y;
      this.width = width;
      this.height = height;
    }

    (0, _createClass2.default)(Rect, [{
      key: "containsPoint",
      value: function containsPoint(x, y) {
        return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;
      }
    }]);
    return Rect;
  }();

  var Slider = function (_React$Component) {
    (0, _inherits2.default)(Slider, _React$Component);

    function Slider(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Slider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Slider).call(this, props));

      _this.measureContainer = function (x) {
        _this.handleMeasure('containerSize', x);
      };

      _this.measureTrack = function (x) {
        _this.handleMeasure('trackSize', x);
      };

      _this.measureThumb = function (x) {
        _this.handleMeasure('thumbSize', x);
      };

      _this.state = {
        containerSize: {
          width: 0,
          height: 0
        },
        trackSize: {
          width: 0,
          height: 0
        },
        thumbSize: {
          width: 0,
          height: 0
        },
        allMeasured: false,
        value: new _reactNative.Animated.Value(getBoundedValue(props.value, props.maximumValue, props.minimumValue))
      };
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: _this.handleStartShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),
        onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderGrant: _this.handlePanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _this.handlePanResponderMove.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderRelease: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderTerminationRequest: _this.handlePanResponderRequestEnd.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderTerminate: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this))
      });
      _this.isVertical = props.orientation === 'vertical';

      _this.componentDidUpdate(props, true);

      return _this;
    }

    (0, _createClass2.default)(Slider, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, force) {
        var newValue = getBoundedValue(this.props.value, this.props.maximumValue, this.props.minimumValue);

        if (prevProps.value !== newValue || force) {
          if (this.props.animateTransitions) {
            this.setCurrentValueAnimated(newValue);
          } else {
            this.setCurrentValue(newValue);
          }
        }
      }
    }, {
      key: "setCurrentValue",
      value: function setCurrentValue(value) {
        this.state.value.setValue(value);
      }
    }, {
      key: "setCurrentValueAnimated",
      value: function setCurrentValueAnimated(value) {
        var animationType = this.props.animationType;
        var animationConfig = (0, _extends2.default)({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {
          toValue: value
        });

        _reactNative.Animated[animationType](this.state.value, animationConfig).start();
      }
    }, {
      key: "handleMoveShouldSetPanResponder",
      value: function handleMoveShouldSetPanResponder() {
        return false;
      }
    }, {
      key: "handlePanResponderGrant",
      value: function handlePanResponderGrant() {
        this._previousLeft = this.getThumbLeft(this.getCurrentValue());
        this.fireChangeEvent('onSlidingStart');
      }
    }, {
      key: "handlePanResponderMove",
      value: function handlePanResponderMove(_, gestureState) {
        if (this.props.disabled) {
          return;
        }

        this.setCurrentValue(this.getValue(gestureState));
        this.fireChangeEvent('onValueChange');
      }
    }, {
      key: "handlePanResponderRequestEnd",
      value: function handlePanResponderRequestEnd() {
        return false;
      }
    }, {
      key: "handlePanResponderEnd",
      value: function handlePanResponderEnd(_, gestureState) {
        if (this.props.disabled) {
          return;
        }

        this.setCurrentValue(this.getValue(gestureState));
        this.fireChangeEvent('onSlidingComplete');
      }
    }, {
      key: "thumbHitTest",
      value: function thumbHitTest(_ref) {
        var nativeEvent = _ref.nativeEvent;
        var thumbTouchRect = this.getThumbTouchRect();
        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);
      }
    }, {
      key: "handleStartShouldSetPanResponder",
      value: function handleStartShouldSetPanResponder(e) {
        if (!this.props.allowTouchTrack) {
          return this.thumbHitTest(e);
        }

        this.setCurrentValue(this.getOnTouchValue(e));
        this.fireChangeEvent('onValueChange');
        return true;
      }
    }, {
      key: "fireChangeEvent",
      value: function fireChangeEvent(event) {
        if (this.props[event]) {
          this.props[event](this.getCurrentValue());
        }
      }
    }, {
      key: "getOnTouchValue",
      value: function getOnTouchValue(_ref2) {
        var nativeEvent = _ref2.nativeEvent;
        var location = this.isVertical ? nativeEvent.locationY : nativeEvent.locationX;
        return this.getValueForTouch(location);
      }
    }, {
      key: "getValueForTouch",
      value: function getValueForTouch(location) {
        var length = this.state.containerSize.width - this.state.thumbSize.width;
        var ratio = location / length;
        var newValue = ratio * (this.props.maximumValue - this.props.minimumValue);

        if (this.props.step) {
          newValue = Math.round(newValue / this.props.step) * this.props.step;
        }

        return getBoundedValue(newValue + this.props.minimumValue, this.props.maximumValue, this.props.minimumValue);
      }
    }, {
      key: "getTouchOverflowSize",
      value: function getTouchOverflowSize() {
        var _this$state = this.state,
            thumbSize = _this$state.thumbSize,
            allMeasured = _this$state.allMeasured,
            containerSize = _this$state.containerSize;
        var thumbTouchSize = this.props.thumbTouchSize;
        var size = {};

        if (allMeasured === true) {
          size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);
          size.height = Math.max(0, thumbTouchSize.height - containerSize.height);
        }

        return size;
      }
    }, {
      key: "getTouchOverflowStyle",
      value: function getTouchOverflowStyle() {
        var _this$getTouchOverflo = this.getTouchOverflowSize(),
            width = _this$getTouchOverflo.width,
            height = _this$getTouchOverflo.height;

        var touchOverflowStyle = {};

        if (width !== undefined && height !== undefined) {
          var verticalMargin = -height / 2;
          touchOverflowStyle.marginTop = verticalMargin;
          touchOverflowStyle.marginBottom = verticalMargin;
          var horizontalMargin = -width / 2;
          touchOverflowStyle.marginLeft = horizontalMargin;
          touchOverflowStyle.marginRight = horizontalMargin;
        }

        if (this.props.debugTouchArea === true) {
          touchOverflowStyle.backgroundColor = 'orange';
          touchOverflowStyle.opacity = 0.5;
        }

        return touchOverflowStyle;
      }
    }, {
      key: "handleMeasure",
      value: function handleMeasure(name, x) {
        var _x$nativeEvent$layout = x.nativeEvent.layout,
            layoutWidth = _x$nativeEvent$layout.width,
            layoutHeight = _x$nativeEvent$layout.height;
        var width = this.isVertical ? layoutHeight : layoutWidth;
        var height = this.isVertical ? layoutWidth : layoutHeight;
        var size = {
          width: width,
          height: height
        };
        var storeName = "_" + name;
        var currentSize = this[storeName];

        if (currentSize && width === currentSize.width && height === currentSize.height) {
          return;
        }

        this[storeName] = size;

        if (this._containerSize && this._trackSize && this._thumbSize) {
          this.setState({
            containerSize: this._containerSize,
            trackSize: this._trackSize,
            thumbSize: this._thumbSize,
            allMeasured: true
          });
        }
      }
    }, {
      key: "getValue",
      value: function getValue(gestureState) {
        var location = this._previousLeft + (this.isVertical ? gestureState.dy : gestureState.dx);
        return this.getValueForTouch(location);
      }
    }, {
      key: "getCurrentValue",
      value: function getCurrentValue() {
        return this.state.value.__getValue();
      }
    }, {
      key: "getRatio",
      value: function getRatio(value) {
        return (value - this.props.minimumValue) / (this.props.maximumValue - this.props.minimumValue);
      }
    }, {
      key: "getThumbLeft",
      value: function getThumbLeft(value) {
        var ratio = this.getRatio(value);
        return ratio * (this.state.containerSize.width - this.state.thumbSize.width);
      }
    }, {
      key: "getThumbTouchRect",
      value: function getThumbTouchRect() {
        var _this$state2 = this.state,
            thumbSize = _this$state2.thumbSize,
            containerSize = _this$state2.containerSize;
        var thumbTouchSize = this.props.thumbTouchSize;
        var touchOverflowSize = this.getTouchOverflowSize();
        var height = touchOverflowSize.height / 2 + (containerSize.height - thumbTouchSize.height) / 2;
        var width = touchOverflowSize.width / 2 + this.getThumbLeft(this.getCurrentValue()) + (thumbSize.width - thumbTouchSize.width) / 2;

        if (this.isVertical) {
          return new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height);
        }

        return new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);
      }
    }, {
      key: "renderDebugThumbTouchRect",
      value: function renderDebugThumbTouchRect(thumbLeft) {
        var thumbTouchRect = this.getThumbTouchRect();
        var positionStyle = {
          left: thumbLeft,
          top: thumbTouchRect.y,
          width: thumbTouchRect.width,
          height: thumbTouchRect.height
        };
        return _react.default.createElement(_reactNative.Animated.View, {
          style: positionStyle,
          pointerEvents: "none"
        });
      }
    }, {
      key: "getMinimumTrackStyles",
      value: function getMinimumTrackStyles(thumbStart) {
        var _this$state3 = this.state,
            thumbSize = _this$state3.thumbSize,
            trackSize = _this$state3.trackSize;
        var minimumTrackStyle = {
          position: 'absolute'
        };

        if (this.isVertical) {
          minimumTrackStyle.height = _reactNative.Animated.add(thumbStart, thumbSize.height / 2);
          minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;
        } else {
          minimumTrackStyle.width = _reactNative.Animated.add(thumbStart, thumbSize.width / 2);
          minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;
        }

        return minimumTrackStyle;
      }
    }, {
      key: "getThumbPositionStyles",
      value: function getThumbPositionStyles(thumbStart) {
        return [(0, _defineProperty2.default)({}, this.isVertical ? 'translateY' : 'translateX', thumbStart)];
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            minimumValue = _this$props.minimumValue,
            maximumValue = _this$props.maximumValue,
            minimumTrackTintColor = _this$props.minimumTrackTintColor,
            maximumTrackTintColor = _this$props.maximumTrackTintColor,
            thumbTintColor = _this$props.thumbTintColor,
            containerStyle = _this$props.containerStyle,
            style = _this$props.style,
            trackStyle = _this$props.trackStyle,
            thumbStyle = _this$props.thumbStyle,
            thumbProps = _this$props.thumbProps,
            debugTouchArea = _this$props.debugTouchArea,
            orientation = _this$props.orientation,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["minimumValue", "maximumValue", "minimumTrackTintColor", "maximumTrackTintColor", "thumbTintColor", "containerStyle", "style", "trackStyle", "thumbStyle", "thumbProps", "debugTouchArea", "orientation"]);
        var _this$state4 = this.state,
            value = _this$state4.value,
            containerSize = _this$state4.containerSize,
            thumbSize = _this$state4.thumbSize,
            allMeasured = _this$state4.allMeasured;
        var mainStyles = containerStyle || styles;

        var appliedTrackStyle = _reactNative.StyleSheet.flatten([styles.track, trackStyle]);

        var thumbStart = value.interpolate({
          inputRange: [minimumValue, maximumValue],
          outputRange: [0, containerSize.width - thumbSize.width]
        });
        var valueVisibleStyle = {};

        if (!allMeasured) {
          valueVisibleStyle.height = 0;
          valueVisibleStyle.width = 0;
        }

        var minimumTrackStyle = (0, _objectSpread2.default)({}, this.getMinimumTrackStyles(thumbStart), {
          backgroundColor: minimumTrackTintColor
        }, valueVisibleStyle);
        var touchOverflowStyle = this.getTouchOverflowStyle();
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, other, {
          style: _reactNative.StyleSheet.flatten([this.isVertical ? mainStyles.containerVertical : mainStyles.containerHorizontal, style]),
          onLayout: this.measureContainer
        }), _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([mainStyles.track, this.isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, {
            backgroundColor: maximumTrackTintColor
          }]),
          onLayout: this.measureTrack
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: _reactNative.StyleSheet.flatten([mainStyles.track, this.isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, minimumTrackStyle])
        }), _react.default.createElement(SliderThumb, (0, _extends2.default)({
          isVisible: allMeasured,
          onLayout: this.measureThumb.bind(this),
          style: thumbStyle,
          color: thumbTintColor,
          start: thumbStart,
          vertical: this.isVertical
        }, thumbProps)), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: _reactNative.StyleSheet.flatten([styles.touchArea, touchOverflowStyle])
        }, this.panResponder.panHandlers), debugTouchArea === true && this.renderDebugThumbTouchRect(thumbStart)));
      }
    }]);
    return Slider;
  }(_react.default.Component);

  exports.Slider = Slider;

  var SliderThumb = function SliderThumb(_ref4) {
    var Component = _ref4.Component,
        isVisible = _ref4.isVisible,
        onLayout = _ref4.onLayout,
        style = _ref4.style,
        start = _ref4.start,
        color = _ref4.color,
        vertical = _ref4.vertical,
        props = (0, _objectWithoutProperties2.default)(_ref4, ["Component", "isVisible", "onLayout", "style", "start", "color", "vertical"]);
    var ThumbComponent = Component || _reactNative.Animated.View;
    var axis = vertical ? 'translateY' : 'translateX';
    var thumbPosition = [(0, _defineProperty2.default)({}, axis, start)];
    var styleTransform = style && style.transform || [];
    var visibleStyle = isVisible ? {} : {
      height: 0,
      width: 0
    };
    return _react.default.createElement(ThumbComponent, (0, _extends2.default)({
      testID: "sliderThumb",
      onLayout: onLayout,
      style: _reactNative.StyleSheet.flatten([(0, _objectSpread2.default)({
        backgroundColor: color,
        transform: [].concat(thumbPosition, (0, _toConsumableArray2.default)(styleTransform))
      }, visibleStyle), styles.thumb, style])
    }, props));
  };

  Slider.propTypes = {
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    minimumValue: _propTypes.default.number,
    maximumValue: _propTypes.default.number,
    step: _propTypes.default.number,
    minimumTrackTintColor: _propTypes.default.string,
    maximumTrackTintColor: _propTypes.default.string,
    allowTouchTrack: _propTypes.default.bool,
    thumbTintColor: _propTypes.default.string,
    thumbTouchSize: _propTypes.default.shape({
      width: _propTypes.default.number,
      height: _propTypes.default.number
    }),
    onValueChange: _propTypes.default.func,
    onSlidingStart: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    trackStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    thumbStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    thumbProps: _propTypes.default.object,
    debugTouchArea: _propTypes.default.bool,
    animateTransitions: _propTypes.default.bool,
    animationType: _propTypes.default.oneOf(['spring', 'timing']),
    orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),
    animationConfig: _propTypes.default.object,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])
  };
  Slider.defaultProps = {
    value: 0,
    minimumValue: 0,
    maximumValue: 1,
    step: 0,
    minimumTrackTintColor: '#3f3f3f',
    maximumTrackTintColor: '#b3b3b3',
    allowTouchTrack: false,
    thumbTintColor: 'red',
    thumbTouchSize: {
      width: THUMB_SIZE,
      height: THUMB_SIZE
    },
    debugTouchArea: false,
    animationType: 'timing',
    orientation: 'horizontal'
  };

  var styles = _reactNative.StyleSheet.create({
    containerHorizontal: {
      height: 40,
      justifyContent: 'center'
    },
    containerVertical: {
      width: 40,
      flexDirection: 'column',
      alignItems: 'center'
    },
    track: {
      borderRadius: 2
    },
    trackHorizontal: {
      height: TRACK_SIZE
    },
    trackVertical: {
      flex: 1,
      width: TRACK_SIZE
    },
    thumb: {
      position: 'absolute',
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 20
    },
    touchArea: {
      position: 'absolute',
      backgroundColor: 'transparent',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    debugThumbTouchArea: {
      position: 'absolute',
      backgroundColor: 'green',
      opacity: 0.5
    }
  });

  var _default = (0, _config.withTheme)(Slider, 'Slider');

  exports.default = _default;
},10418,[14305,14359,14314,14407,14317,14344,14371,14377,14374,14386,14320,14323,10297,10318,10033,10082]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Card = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var _CardTitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _CardDivider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _CardImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CardFeaturedTitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CardFeaturedSubtitle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var Card = function Card(props) {
    var children = props.children,
        containerStyle = props.containerStyle,
        wrapperStyle = props.wrapperStyle,
        imageWrapperStyle = props.imageWrapperStyle,
        title = props.title,
        titleStyle = props.titleStyle,
        titleNumberOfLines = props.titleNumberOfLines,
        featuredTitle = props.featuredTitle,
        featuredTitleStyle = props.featuredTitleStyle,
        featuredSubtitle = props.featuredSubtitle,
        featuredSubtitleStyle = props.featuredSubtitleStyle,
        dividerStyle = props.dividerStyle,
        image = props.image,
        imageStyle = props.imageStyle,
        imageProps = props.imageProps,
        theme = props.theme,
        attributes = (0, _objectWithoutProperties2.default)(props, ["children", "containerStyle", "wrapperStyle", "imageWrapperStyle", "title", "titleStyle", "titleNumberOfLines", "featuredTitle", "featuredTitleStyle", "featuredSubtitle", "featuredSubtitleStyle", "dividerStyle", "image", "imageStyle", "imageProps", "theme"]);

    if (title) {}

    if (titleStyle) {}

    if (titleNumberOfLines) {}

    if (dividerStyle) {}

    if (image) {}

    if (imageStyle) {}

    if (imageProps) {}

    if (imageWrapperStyle) {}

    if (featuredTitle) {}

    if (featuredTitleStyle) {}

    if (featuredSubtitle) {}

    if (featuredSubtitleStyle) {}

    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {
      style: _reactNative.StyleSheet.flatten([styles.container(theme), image && {
        padding: 0
      }, containerStyle && containerStyle])
    }), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle])
    }, title === '' || _react.default.isValidElement(title) ? title : title && title.length && _react.default.createElement(_reactNative.View, null, _react.default.createElement(_CardTitle.default, {
      style: _reactNative.StyleSheet.flatten([image && styles.imageCardTitle, titleStyle && titleStyle]),
      numberOfLines: titleNumberOfLines
    }, title), !image && _react.default.createElement(_CardDivider.default, {
      style: dividerStyle
    })), image && _react.default.createElement(_reactNative.View, {
      style: imageWrapperStyle && imageWrapperStyle
    }, _react.default.createElement(_CardImage.default, (0, _extends2.default)({
      style: imageStyle,
      source: image
    }, imageProps), (featuredTitle || featuredSubtitle) && _react.default.createElement(_reactNative.View, {
      style: styles.overlayContainer
    }, featuredTitle && _react.default.createElement(_CardFeaturedTitle.default, {
      style: featuredTitleStyle
    }, featuredTitle), featuredSubtitle && _react.default.createElement(_CardFeaturedSubtitle.default, {
      style: featuredSubtitleStyle
    }, featuredSubtitle))), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([{
        padding: 10
      }, wrapperStyle && wrapperStyle])
    }, children)), !image && children));
  };

  exports.Card = Card;
  Card.propTypes = {
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    wrapperStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    overlayStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    featuredTitle: _propTypes.default.string,
    featuredTitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    featuredSubtitle: _propTypes.default.string,
    featuredSubtitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    dividerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    image: _helpers.ImageSourceType,
    imageStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    imageWrapperStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    imageProps: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    theme: _propTypes.default.object
  };
  var styles = {
    container: function container(theme) {
      return (0, _objectSpread2.default)({
        backgroundColor: theme.colors.white,
        borderWidth: 1,
        padding: 15,
        margin: 15,
        marginBottom: 0,
        borderColor: theme.colors.grey5
      }, _reactNative.Platform.select({
        android: {
          elevation: 1
        },
        default: {
          shadowColor: 'rgba(0,0,0, .2)',
          shadowOffset: {
            height: 0,
            width: 0
          },
          shadowOpacity: 1,
          shadowRadius: 1
        }
      }));
    },
    wrapper: {
      backgroundColor: 'transparent'
    },
    imageCardTitle: {
      marginTop: 15
    },
    overlayContainer: {
      flex: 1,
      alignItems: 'center',
      backgroundColor: 'rgba(0, 0, 0, 0.2)',
      alignSelf: 'stretch',
      justifyContent: 'center',
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }
  };
  var ThemedCard = (0, _config.withTheme)(Card, 'Card');
  ThemedCard.Divider = _CardDivider.default;
  ThemedCard.Image = _CardImage.default;
  ThemedCard.Title = _CardTitle.default;
  ThemedCard.FeaturedTitle = _CardFeaturedTitle.default;
  ThemedCard.FeaturedSubtitle = _CardFeaturedSubtitle.default;
  var _default = ThemedCard;
  exports.default = _default;
},10421,[14305,14314,14344,14407,10297,10318,10033,10082,10118,10424,10427,10430,10433,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var CardTitle = function CardTitle(_ref) {
    var style = _ref.style,
        theme = _ref.theme,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style", "theme"]);
    return _react.default.createElement(_Text.default, (0, _extends2.default)({
      testID: "cardTitle",
      style: _reactNative.StyleSheet.flatten([styles.cardTitle(theme), style])
    }, props));
  };

  var styles = {
    cardTitle: function cardTitle(theme) {
      return (0, _objectSpread2.default)({
        fontSize: (0, _normalizeText.default)(14),
        color: theme.colors.grey1
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.black),
        default: {
          fontWeight: 'bold'
        }
      }), {
        textAlign: 'center',
        marginBottom: 15
      });
    }
  };

  var _default = (0, _config.withTheme)(CardTitle, 'CardTitle');

  exports.default = _default;
},10424,[14305,14314,14344,14407,10297,10033,10313,10082,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _Divider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var CardDivider = function CardDivider(_ref) {
    var style = _ref.style,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style"]);
    return _react.default.createElement(_Divider.default, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.divider, style])
    }, props));
  };

  var styles = {
    divider: {
      marginBottom: 15
    }
  };

  var _default = (0, _config.withTheme)(CardDivider, 'CardDivider');

  exports.default = _default;
},10427,[14305,14344,14407,10297,10033,10082,10415]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _config = _$$_REQUIRE(_dependencyMap[5]);

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var CardImage = function CardImage(_ref) {
    var style = _ref.style,
        props = (0, _objectWithoutProperties2.default)(_ref, ["style"]);
    return _react.default.createElement(_Image.default, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.image, style])
    }, props));
  };

  var styles = {
    image: {
      width: null,
      height: 150
    }
  };

  var _default = (0, _config.withTheme)(CardImage, 'CardImage');

  exports.default = _default;
},10430,[14305,14344,14407,10297,10033,10082,10352]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var CardFeaturedTitle = function CardFeaturedTitle(_ref) {
    var theme = _ref.theme,
        style = _ref.style,
        props = (0, _objectWithoutProperties2.default)(_ref, ["theme", "style"]);
    return _react.default.createElement(_Text.default, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.featuredTitle(theme), style])
    }, props));
  };

  var styles = {
    featuredTitle: function featuredTitle(theme) {
      return (0, _objectSpread2.default)({
        fontSize: (0, _normalizeText.default)(18),
        marginBottom: 8,
        color: theme.colors.white
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.black),
        default: {
          fontWeight: '800'
        }
      }));
    }
  };

  var _default = (0, _config.withTheme)(CardFeaturedTitle, 'CardFeaturedTitle');

  exports.default = _default;
},10433,[14305,14314,14344,14407,10297,10033,10313,10082,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _normalizeText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var CardFeaturedSubtitle = function CardFeaturedSubtitle(_ref) {
    var theme = _ref.theme,
        style = _ref.style,
        props = (0, _objectWithoutProperties2.default)(_ref, ["theme", "style"]);
    return _react.default.createElement(_Text.default, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.featuredSubtitle(theme), style])
    }, props));
  };

  var styles = {
    featuredSubtitle: function featuredSubtitle(theme) {
      return (0, _objectSpread2.default)({
        fontSize: (0, _normalizeText.default)(13),
        marginBottom: 8,
        color: theme.colors.white
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.black),
        default: {
          fontWeight: '400'
        }
      }));
    }
  };

  var _default = (0, _config.withTheme)(CardFeaturedSubtitle, 'CardFeaturedSubtitle');

  exports.default = _default;
},10436,[14305,14314,14344,14407,10297,10033,10313,10082,10361]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Tile = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _FeaturedTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Tile = function Tile(props) {
    var featured = props.featured,
        imageSrc = props.imageSrc,
        icon = props.icon,
        title = props.title,
        children = props.children,
        caption = props.caption,
        titleStyle = props.titleStyle,
        onPress = props.onPress,
        activeOpacity = props.activeOpacity,
        overlayContainerStyle = props.overlayContainerStyle,
        captionStyle = props.captionStyle,
        iconContainerStyle = props.iconContainerStyle,
        imageContainerStyle = props.imageContainerStyle,
        containerStyle = props.containerStyle,
        contentContainerStyle = props.contentContainerStyle,
        titleNumberOfLines = props.titleNumberOfLines,
        ImageComponent = props.ImageComponent,
        imageProps = props.imageProps,
        attributes = (0, _objectWithoutProperties2.default)(props, ["featured", "imageSrc", "icon", "title", "children", "caption", "titleStyle", "onPress", "activeOpacity", "overlayContainerStyle", "captionStyle", "iconContainerStyle", "imageContainerStyle", "containerStyle", "contentContainerStyle", "titleNumberOfLines", "ImageComponent", "imageProps"]);
    var width = props.width,
        _props$height = props.height,
        height = _props$height === undefined ? width * 0.8 : _props$height;

    if (featured) {
      var featuredProps = {
        title: title,
        icon: icon,
        caption: caption,
        imageSrc: imageSrc,
        onPress: onPress,
        activeOpacity: activeOpacity,
        containerStyle: containerStyle,
        imageContainerStyle: imageContainerStyle,
        overlayContainerStyle: overlayContainerStyle,
        titleStyle: titleStyle,
        captionStyle: captionStyle,
        width: width,
        height: height,
        imageProps: imageProps,
        ImageComponent: ImageComponent
      };
      return _react.default.createElement(_FeaturedTile.default, featuredProps);
    }

    return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, attributes, {
      onPress: onPress,
      activeOpacity: activeOpacity,
      style: _reactNative.StyleSheet.flatten([{
        width: width,
        height: height
      }, containerStyle && containerStyle])
    }), _react.default.createElement(ImageComponent, (0, _extends2.default)({
      resizeMode: "cover",
      source: imageSrc,
      containerStyle: _reactNative.StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),
      style: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
        alignItems: 'center',
        justifyContent: 'center'
      })
    }, imageProps), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle])
    }, icon && _react.default.createElement(_Icon.default, icon))), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.contentContainer, contentContainerStyle && contentContainerStyle])
    }, _react.default.createElement(_Text.default, {
      testID: "tileTitle",
      h4: !titleStyle || !titleStyle.fontSize,
      style: _reactNative.StyleSheet.flatten([styles.text, titleStyle && titleStyle]),
      numberOfLines: titleNumberOfLines
    }, title), children));
  };

  exports.Tile = Tile;
  Tile.propTypes = {
    title: _propTypes.default.string,
    icon: _propTypes.default.object,
    caption: _propTypes.default.node,
    imageSrc: _helpers.ImageSourceType,
    onPress: _propTypes.default.func,
    activeOpacity: _propTypes.default.number,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    imageContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    iconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    overlayContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    captionStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    width: _propTypes.default.number,
    height: _propTypes.default.number,
    featured: _propTypes.default.bool,
    children: _propTypes.default.node,
    contentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    titleNumberOfLines: _propTypes.default.number,
    imageProps: _propTypes.default.object,
    ImageComponent: _propTypes.default.elementType
  };
  Tile.defaultProps = {
    width: _reactNative.Dimensions.get('window').width,
    ImageComponent: _Image.default,
    imageProps: {}
  };

  var styles = _reactNative.StyleSheet.create({
    imageContainer: {
      flex: 2
    },
    text: {
      backgroundColor: 'rgba(0,0,0,0)',
      marginBottom: 5
    },
    contentContainer: {
      paddingTop: 15,
      paddingBottom: 5,
      paddingLeft: 15,
      paddingRight: 15
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center',
      alignSelf: 'center'
    }
  });

  var _default = (0, _config.withTheme)(Tile, 'Tile');

  exports.default = _default;
},10439,[14305,14344,14314,14407,10297,10318,10033,10082,10118,10352,10361,10334,10442]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.FeaturedTile = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _config = _$$_REQUIRE(_dependencyMap[7]);

  var _helpers = _$$_REQUIRE(_dependencyMap[8]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var renderText = function renderText(content, defaultProps, style) {
    return (0, _helpers.renderNode)(_Text.default, content, (0, _objectSpread2.default)({}, defaultProps, {
      style: _reactNative.StyleSheet.flatten([style, defaultProps && defaultProps.style])
    }));
  };

  var FeaturedTile = function FeaturedTile(props) {
    var title = props.title,
        icon = props.icon,
        caption = props.caption,
        imageSrc = props.imageSrc,
        containerStyle = props.containerStyle,
        imageContainerStyle = props.imageContainerStyle,
        overlayContainerStyle = props.overlayContainerStyle,
        iconContainerStyle = props.iconContainerStyle,
        titleStyle = props.titleStyle,
        captionStyle = props.captionStyle,
        ImageComponent = props.ImageComponent,
        imageProps = props.imageProps,
        attributes = (0, _objectWithoutProperties2.default)(props, ["title", "icon", "caption", "imageSrc", "containerStyle", "imageContainerStyle", "overlayContainerStyle", "iconContainerStyle", "titleStyle", "captionStyle", "ImageComponent", "imageProps"]);
    var _props$width = props.width,
        width = _props$width === undefined ? _reactNative.Dimensions.get('window').width : _props$width,
        _props$height = props.height,
        height = _props$height === undefined ? width * 0.8 : _props$height;

    var styles = _reactNative.StyleSheet.create({
      container: {
        width: width,
        height: height
      },
      imageContainer: {
        alignItems: 'center',
        justifyContent: 'center',
        width: width,
        height: height
      },
      overlayContainer: {
        flex: 1,
        alignItems: 'center',
        alignSelf: 'stretch',
        justifyContent: 'center',
        paddingLeft: 25,
        paddingRight: 25,
        paddingTop: 45,
        paddingBottom: 40,
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0
      },
      text: {
        color: '#ffffff',
        backgroundColor: 'rgba(0,0,0,0)',
        marginBottom: 15,
        textAlign: 'center'
      },
      iconContainer: {
        justifyContent: 'center',
        alignItems: 'center',
        alignSelf: 'center'
      }
    });

    return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, attributes, {
      style: _reactNative.StyleSheet.flatten([styles.container, containerStyle && containerStyle])
    }), _react.default.createElement(ImageComponent, (0, _extends2.default)({
      resizeMode: "cover"
    }, imageProps, {
      source: imageSrc,
      style: _reactNative.StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle])
    }), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.overlayContainer, overlayContainerStyle && overlayContainerStyle])
    }, _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle])
    }, icon && _react.default.createElement(_Icon.default, icon)), _react.default.createElement(_Text.default, {
      testID: "featuredTileTitle",
      h4: !titleStyle || !titleStyle.fontSize,
      style: _reactNative.StyleSheet.flatten([styles.text, titleStyle && titleStyle])
    }, title), renderText(caption, {
      style: captionStyle
    }, styles.text))));
  };

  exports.FeaturedTile = FeaturedTile;
  FeaturedTile.propTypes = {
    title: _propTypes.default.string,
    icon: _propTypes.default.object,
    caption: _propTypes.default.node,
    imageSrc: _helpers.ImageSourceType,
    onPress: _propTypes.default.func,
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    iconContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    imageContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    overlayContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    captionStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    width: _propTypes.default.number,
    height: _propTypes.default.number,
    ImageComponent: _propTypes.default.elementType,
    imageProps: _propTypes.default.object
  };
  FeaturedTile.defaultProps = {
    ImageComponent: _config.BackgroundImage,
    imageProps: {}
  };

  var _default = (0, _config.withTheme)(FeaturedTile, 'FeaturedTile');

  exports.default = _default;
},10442,[14305,14344,14407,14314,10297,10318,10033,10082,10118,10361,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Header = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _config = _$$_REQUIRE(_dependencyMap[13]);

  var _helpers = _$$_REQUIRE(_dependencyMap[14]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var ALIGN_STYLE = {
    left: 'flex-start',
    right: 'flex-end',
    center: 'center'
  };

  var Children = function Children(_ref) {
    var style = _ref.style,
        placement = _ref.placement,
        children = _ref.children;
    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([{
        alignItems: ALIGN_STYLE[placement]
      }, style])
    }, children == null || children === false ? null : children.text ? (0, _helpers.renderNode)(_Text.default, children.text, (0, _objectSpread2.default)({
      numberOfLines: 1
    }, children)) : children.icon ? (0, _helpers.renderNode)(_Icon.default, (0, _objectSpread2.default)({}, children, {
      name: children.icon,
      containerStyle: _reactNative.StyleSheet.flatten([{
        alignItems: ALIGN_STYLE[placement]
      }, children.containerStyle])
    })) : (0, _helpers.renderNode)(_Text.default, children));
  };

  Children.propTypes = {
    placement: _propTypes.default.oneOf(['left', 'center', 'right']),
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    children: _propTypes.default.oneOfType([_helpers.nodeType, _propTypes.default.node])
  };

  var Header = function (_Component) {
    (0, _inherits2.default)(Header, _Component);

    function Header() {
      (0, _classCallCheck2.default)(this, Header);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Header).apply(this, arguments));
    }

    (0, _createClass2.default)(Header, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this$props = this.props,
            linearGradientProps = _this$props.linearGradientProps,
            ViewComponent = _this$props.ViewComponent;

        if (linearGradientProps && !global.Expo && !ViewComponent) {}
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            statusBarProps = _this$props2.statusBarProps,
            leftComponent = _this$props2.leftComponent,
            centerComponent = _this$props2.centerComponent,
            rightComponent = _this$props2.rightComponent,
            leftContainerStyle = _this$props2.leftContainerStyle,
            centerContainerStyle = _this$props2.centerContainerStyle,
            rightContainerStyle = _this$props2.rightContainerStyle,
            backgroundColor = _this$props2.backgroundColor,
            backgroundImage = _this$props2.backgroundImage,
            backgroundImageStyle = _this$props2.backgroundImageStyle,
            containerStyle = _this$props2.containerStyle,
            placement = _this$props2.placement,
            barStyle = _this$props2.barStyle,
            children = _this$props2.children,
            linearGradientProps = _this$props2.linearGradientProps,
            _this$props2$ViewComp = _this$props2.ViewComponent,
            ViewComponent = _this$props2$ViewComp === undefined ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : backgroundImage ? _reactNative.ImageBackground : _reactNative.View : _this$props2$ViewComp,
            theme = _this$props2.theme,
            attributes = (0, _objectWithoutProperties2.default)(_this$props2, ["statusBarProps", "leftComponent", "centerComponent", "rightComponent", "leftContainerStyle", "centerContainerStyle", "rightContainerStyle", "backgroundColor", "backgroundImage", "backgroundImageStyle", "containerStyle", "placement", "barStyle", "children", "linearGradientProps", "ViewComponent", "theme"]);
        return _react.default.createElement(ViewComponent, (0, _extends2.default)({
          testID: "headerContainer"
        }, attributes, {
          style: _reactNative.StyleSheet.flatten([styles.container(theme), backgroundColor && {
            backgroundColor: backgroundColor
          }, containerStyle]),
          source: backgroundImage,
          imageStyle: backgroundImageStyle
        }, linearGradientProps), _react.default.createElement(_reactNative.StatusBar, (0, _extends2.default)({
          barStyle: barStyle,
          translucent: true
        }, statusBarProps)), _react.default.createElement(Children, {
          style: _reactNative.StyleSheet.flatten([placement === 'center' && styles.rightLeftContainer, leftContainerStyle]),
          placement: "left"
        }, _react.default.isValidElement(children) && children || children[0] || leftComponent), _react.default.createElement(Children, {
          style: _reactNative.StyleSheet.flatten([styles.centerContainer, placement !== 'center' && {
            paddingHorizontal: _reactNative.Platform.select({
              android: 16,
              default: 15
            })
          }, centerContainerStyle]),
          placement: placement
        }, children[1] || centerComponent), _react.default.createElement(Children, {
          style: _reactNative.StyleSheet.flatten([placement === 'center' && styles.rightLeftContainer, rightContainerStyle]),
          placement: "right"
        }, children[2] || rightComponent));
      }
    }]);
    return Header;
  }(_react.Component);

  exports.Header = Header;
  Header.propTypes = {
    placement: _propTypes.default.oneOf(['left', 'center', 'right']),
    leftComponent: _helpers.nodeType,
    centerComponent: _helpers.nodeType,
    rightComponent: _helpers.nodeType,
    leftContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    centerContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    rightContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    backgroundColor: _propTypes.default.string,
    backgroundImage: _helpers.ImageSourceType,
    backgroundImageStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    statusBarProps: _propTypes.default.object,
    barStyle: _propTypes.default.oneOf(['default', 'light-content', 'dark-content']),
    children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
    theme: _propTypes.default.object,
    linearGradientProps: _propTypes.default.object,
    ViewComponent: _propTypes.default.elementType
  };
  Header.defaultProps = {
    placement: 'center',
    children: []
  };
  var styles = {
    container: function container(theme) {
      return {
        borderBottomColor: '#f2f2f2',
        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
        paddingHorizontal: 10,
        backgroundColor: theme.colors.primary,
        paddingTop: (0, _config.getStatusBarHeight)(),
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        height: _reactNative.Platform.select({
          android: 56,
          default: 44
        }) + (0, _config.getStatusBarHeight)()
      };
    },
    centerContainer: {
      flex: 3
    },
    rightLeftContainer: {
      flex: 1
    }
  };

  var _default = (0, _config.withTheme)(Header, 'Header');

  exports.default = _default;
},10445,[14308,14305,14344,14407,14320,14323,14371,14377,14386,14314,10297,10318,10033,10082,10118,10361,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.PricingButton = exports.PricingCard = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _helpers = _$$_REQUIRE(_dependencyMap[7]);

  var _config = _$$_REQUIRE(_dependencyMap[8]);

  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Button = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Icon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var PricingCard = function PricingCard(props) {
    var theme = props.theme,
        rest = (0, _objectWithoutProperties2.default)(props, ["theme"]);
    var containerStyle = rest.containerStyle,
        wrapperStyle = rest.wrapperStyle,
        title = rest.title,
        price = rest.price,
        info = rest.info,
        button = rest.button,
        _rest$color = rest.color,
        color = _rest$color === undefined ? theme.colors.primary : _rest$color,
        titleStyle = rest.titleStyle,
        pricingStyle = rest.pricingStyle,
        infoStyle = rest.infoStyle,
        onButtonPress = rest.onButtonPress,
        attributes = (0, _objectWithoutProperties2.default)(rest, ["containerStyle", "wrapperStyle", "title", "price", "info", "button", "color", "titleStyle", "pricingStyle", "infoStyle", "onButtonPress"]);
    return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {
      style: _reactNative.StyleSheet.flatten([styles.container(theme), containerStyle && containerStyle])
    }), _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle])
    }, _react.default.createElement(_Text.default, {
      testID: "pricingCardTitle",
      style: _reactNative.StyleSheet.flatten([styles.pricingTitle, titleStyle, {
        color: color
      }])
    }, title), _react.default.createElement(_Text.default, {
      style: _reactNative.StyleSheet.flatten([styles.pricingPrice, pricingStyle])
    }, price), info.map(function (item) {
      return _react.default.createElement(_Text.default, {
        key: item,
        style: _reactNative.StyleSheet.flatten([styles.pricingInfo(theme), infoStyle])
      }, item);
    }), _react.default.isValidElement(button) ? button : _react.default.createElement(PricingButton, (0, _extends2.default)({
      color: color,
      onButtonPress: onButtonPress
    }, button))));
  };

  exports.PricingCard = PricingCard;

  var PricingButton = function PricingButton(props) {
    var title = props.title,
        buttonStyle = props.buttonStyle,
        color = props.color,
        titleStyle = props.titleStyle,
        onButtonPress = props.onButtonPress,
        icon = props.icon,
        buttonProps = (0, _objectWithoutProperties2.default)(props, ["title", "buttonStyle", "color", "titleStyle", "onButtonPress", "icon"]);
    return _react.default.createElement(_Button.default, (0, _extends2.default)({
      title: title,
      buttonStyle: _reactNative.StyleSheet.flatten([styles.button, buttonStyle, {
        backgroundColor: color
      }]),
      titleStyle: titleStyle,
      onPress: onButtonPress,
      icon: _react.default.isValidElement(icon) ? icon : typeof icon === 'string' ? _react.default.createElement(_Icon.default, {
        name: icon,
        size: 15,
        color: "white"
      }) : _react.default.createElement(_Icon.default, icon)
    }, buttonProps));
  };

  exports.PricingButton = PricingButton;
  PricingCard.propTypes = {
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    wrapperStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    title: _propTypes.default.string,
    price: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    info: _propTypes.default.arrayOf(_propTypes.default.string),
    button: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.object]),
    color: _propTypes.default.string,
    onButtonPress: _propTypes.default.func,
    titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    pricingStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    infoStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    theme: _propTypes.default.object
  };
  PricingCard.defaultProps = {
    info: []
  };
  var styles = {
    container: function container(theme) {
      return (0, _objectSpread2.default)({
        margin: 15,
        marginBottom: 15,
        backgroundColor: theme.colors.white,
        borderWidth: 1,
        padding: 15,
        borderColor: theme.colors.grey5
      }, _reactNative.Platform.select({
        android: {
          elevation: 1
        },
        default: {
          shadowColor: 'rgba(0,0,0, .2)',
          shadowOffset: {
            height: 1,
            width: 0
          },
          shadowOpacity: 0.5,
          shadowRadius: 0.5
        }
      }));
    },
    wrapper: {
      backgroundColor: 'transparent'
    },
    pricingTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      fontSize: (0, _helpers.normalizeText)(30)
    }, _reactNative.Platform.select({
      android: (0, _objectSpread2.default)({}, _config.fonts.android.black),
      default: {
        fontWeight: '800'
      }
    })),
    pricingPrice: (0, _objectSpread2.default)({
      textAlign: 'center',
      marginTop: 10,
      marginBottom: 10,
      fontSize: (0, _helpers.normalizeText)(40)
    }, _reactNative.Platform.select({
      android: (0, _objectSpread2.default)({}, _config.fonts.android.bold),
      default: {
        fontWeight: '700'
      }
    })),
    pricingInfo: function pricingInfo(theme) {
      return (0, _objectSpread2.default)({
        textAlign: 'center',
        marginTop: 5,
        marginBottom: 5,
        color: theme.colors.grey3
      }, _reactNative.Platform.select({
        android: (0, _objectSpread2.default)({}, _config.fonts.android.bold),
        default: {
          fontWeight: '600'
        }
      }));
    },
    button: {
      marginTop: 15,
      marginBottom: 10
    }
  };

  var _default = (0, _config.withTheme)(PricingCard, 'PricingCard');

  exports.default = _default;
},10448,[14305,14314,14344,14407,10297,10318,10033,10118,10082,10361,10064,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Tooltip = undefined;

  var _objectSpread3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _config = _$$_REQUIRE(_dependencyMap[13]);

  var _helpers = _$$_REQUIRE(_dependencyMap[14]);

  var _Triangle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _getTooltipCoordinate2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16]));

  var Tooltip = function (_React$PureComponent) {
    (0, _inherits2.default)(Tooltip, _React$PureComponent);

    function Tooltip() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Tooltip);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Tooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isVisible: false,
        yOffset: 0,
        xOffset: 0,
        elementWidth: 0,
        elementHeight: 0
      };

      _this.toggleTooltip = function () {
        var onClose = _this.props.onClose;

        _this.getElementPosition();

        _this.setState(function (prevState) {
          if (prevState.isVisible) {
            onClose && onClose();
          }

          return {
            isVisible: !prevState.isVisible
          };
        });
      };

      _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {
        if (toggleOnPress) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, (0, _defineProperty2.default)({}, toggleAction, _this.toggleTooltip), {
            delayLongPress: 250,
            activeOpacity: 1
          }), children);
        }

        return children;
      };

      _this.getTooltipStyle = function () {
        var _objectSpread2;

        var _this$state = _this.state,
            yOffset = _this$state.yOffset,
            xOffset = _this$state.xOffset,
            elementHeight = _this$state.elementHeight,
            elementWidth = _this$state.elementWidth;
        var _this$props = _this.props,
            height = _this$props.height,
            backgroundColor = _this$props.backgroundColor,
            width = _this$props.width,
            withPointer = _this$props.withPointer,
            containerStyle = _this$props.containerStyle;

        var _getTooltipCoordinate = (0, _getTooltipCoordinate2.default)(xOffset, yOffset, elementWidth, elementHeight, _helpers.ScreenWidth, _helpers.ScreenHeight, width, height, withPointer),
            x = _getTooltipCoordinate.x,
            y = _getTooltipCoordinate.y;

        return (0, _objectSpread3.default)((_objectSpread2 = {
          position: 'absolute'
        }, (0, _defineProperty2.default)(_objectSpread2, _reactNative.I18nManager.isRTL ? 'right' : 'left', x), (0, _defineProperty2.default)(_objectSpread2, "top", y), (0, _defineProperty2.default)(_objectSpread2, "width", width), (0, _defineProperty2.default)(_objectSpread2, "height", height), (0, _defineProperty2.default)(_objectSpread2, "backgroundColor", backgroundColor), (0, _defineProperty2.default)(_objectSpread2, "display", 'flex'), (0, _defineProperty2.default)(_objectSpread2, "alignItems", 'center'), (0, _defineProperty2.default)(_objectSpread2, "justifyContent", 'center'), (0, _defineProperty2.default)(_objectSpread2, "flex", 1), (0, _defineProperty2.default)(_objectSpread2, "borderRadius", 10), (0, _defineProperty2.default)(_objectSpread2, "padding", 10), _objectSpread2), containerStyle);
      };

      _this.renderPointer = function (tooltipY) {
        var _this$state2 = _this.state,
            yOffset = _this$state2.yOffset,
            xOffset = _this$state2.xOffset,
            elementHeight = _this$state2.elementHeight,
            elementWidth = _this$state2.elementWidth;
        var _this$props2 = _this.props,
            backgroundColor = _this$props2.backgroundColor,
            pointerColor = _this$props2.pointerColor;
        var pastMiddleLine = yOffset > tooltipY;
        return _react.default.createElement(_reactNative.View, {
          style: (0, _defineProperty2.default)({
            position: 'absolute',
            top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2
          }, _reactNative.I18nManager.isRTL ? 'right' : 'left', xOffset + (0, _getTooltipCoordinate2.getElementVisibleWidth)(elementWidth, xOffset, _helpers.ScreenWidth) / 2 - 7.5)
        }, _react.default.createElement(_Triangle.default, {
          style: {
            borderBottomColor: pointerColor || backgroundColor
          },
          isDown: pastMiddleLine
        }));
      };

      _this.getTooltipHighlightedButtonStyle = function () {
        var _ref3;

        var highlightColor = _this.props.highlightColor;
        var _this$state3 = _this.state,
            yOffset = _this$state3.yOffset,
            xOffset = _this$state3.xOffset,
            elementWidth = _this$state3.elementWidth,
            elementHeight = _this$state3.elementHeight;
        return _ref3 = {
          position: 'absolute',
          top: yOffset
        }, (0, _defineProperty2.default)(_ref3, _reactNative.I18nManager.isRTL ? 'right' : 'left', xOffset), (0, _defineProperty2.default)(_ref3, "backgroundColor", highlightColor), (0, _defineProperty2.default)(_ref3, "overflow", 'visible'), (0, _defineProperty2.default)(_ref3, "width", elementWidth), (0, _defineProperty2.default)(_ref3, "height", elementHeight), _ref3;
      };

      _this.renderTouchableHighlightedButton = function () {
        var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          testID: "tooltipTouchableHighlightedButton",
          onPress: function onPress() {
            return _this.toggleTooltip();
          },
          style: TooltipHighlightedButtonStyle
        }, _this.props.children);
      };

      _this.renderStaticHighlightedButton = function () {
        var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();

        return _react.default.createElement(_reactNative.View, {
          style: TooltipHighlightedButtonStyle
        }, _this.props.children);
      };

      _this.renderHighlightedButton = function () {
        var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;

        if (closeOnlyOnBackdropPress) {
          return _this.renderTouchableHighlightedButton();
        } else {
          return _this.renderStaticHighlightedButton();
        }
      };

      _this.renderContent = function (withTooltip) {
        var _this$props3 = _this.props,
            popover = _this$props3.popover,
            withPointer = _this$props3.withPointer,
            toggleOnPress = _this$props3.toggleOnPress,
            toggleAction = _this$props3.toggleAction;

        if (!withTooltip) {
          return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);
        }

        var tooltipStyle = _this.getTooltipStyle();

        return _react.default.createElement(_reactNative.View, null, _this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), _react.default.createElement(_reactNative.View, {
          style: tooltipStyle,
          testID: "tooltipPopoverContainer"
        }, popover));
      };

      _this.getElementPosition = function () {
        var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;
        _this.renderedElement && _this.renderedElement.measure(function (frameOffsetX, frameOffsetY, width, height, pageOffsetX, pageOffsetY) {
          _this.setState({
            xOffset: pageOffsetX,
            yOffset: _helpers.isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - _reactNative.StatusBar.currentHeight,
            elementWidth: width,
            elementHeight: height
          });
        });
      };

      _this.renderStaticModalContent = function () {
        var _this$props4 = _this.props,
            withOverlay = _this$props4.withOverlay,
            overlayColor = _this$props4.overlayColor;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.container(withOverlay, overlayColor),
          onPress: _this.toggleTooltip,
          activeOpacity: 1
        }), _react.default.createElement(_reactNative.View, {
          style: styles.closeOnlyOnBackdropPressViewWrapper
        }, _this.renderContent(true)));
      };

      _this.renderTogglingModalContent = function () {
        var _this$props5 = _this.props,
            withOverlay = _this$props5.withOverlay,
            overlayColor = _this$props5.overlayColor;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.container(withOverlay, overlayColor),
          onPress: _this.toggleTooltip,
          activeOpacity: 1
        }, _this.renderContent(true));
      };

      _this.renderModalContent = function () {
        var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;

        if (closeOnlyOnBackdropPress) {
          return _this.renderStaticModalContent();
        } else {
          return _this.renderTogglingModalContent();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(Tooltip, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        requestAnimationFrame(this.getElementPosition);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var isVisible = this.state.isVisible;
        var _this$props6 = this.props,
            onClose = _this$props6.onClose,
            onOpen = _this$props6.onOpen,
            ModalComponent = _this$props6.ModalComponent;
        return _react.default.createElement(_reactNative.View, {
          collapsable: false,
          ref: function ref(e) {
            _this2.renderedElement = e;
          }
        }, this.renderContent(false), _react.default.createElement(ModalComponent, {
          animationType: "fade",
          visible: isVisible,
          transparent: true,
          onDismiss: onClose,
          onShow: onOpen,
          onRequestClose: onClose
        }, this.renderModalContent()));
      }
    }]);
    return Tooltip;
  }(_react.default.PureComponent);

  exports.Tooltip = Tooltip;
  Tooltip.propTypes = {
    children: _propTypes.default.element,
    withPointer: _propTypes.default.bool,
    popover: _propTypes.default.element,
    toggleOnPress: _propTypes.default.bool,
    toggleAction: _propTypes.default.oneOf(['onPress', 'onLongPress']),
    height: _propTypes.default.number,
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    pointerColor: _propTypes.default.string,
    onClose: _propTypes.default.func,
    onOpen: _propTypes.default.func,
    overlayColor: _propTypes.default.string,
    withOverlay: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    highlightColor: _propTypes.default.string,
    skipAndroidStatusBar: _propTypes.default.bool,
    ModalComponent: _propTypes.default.elementType,
    closeOnlyOnBackdropPress: _propTypes.default.bool
  };
  Tooltip.defaultProps = {
    withOverlay: true,
    overlayColor: 'rgba(250, 250, 250, 0.70)',
    highlightColor: 'transparent',
    withPointer: true,
    toggleOnPress: true,
    toggleAction: 'onPress',
    height: 40,
    width: 150,
    containerStyle: {},
    backgroundColor: '#617080',
    onClose: function onClose() {},
    onOpen: function onOpen() {},
    skipAndroidStatusBar: false,
    ModalComponent: _reactNative.Modal,
    closeOnlyOnBackdropPress: false
  };
  var styles = {
    container: function container(withOverlay, overlayColor) {
      return {
        backgroundColor: withOverlay ? overlayColor : 'transparent',
        flex: 1
      };
    },
    closeOnlyOnBackdropPressViewWrapper: {
      position: 'absolute'
    }
  };

  var _default = (0, _config.withTheme)(Tooltip, 'Tooltip');

  exports.default = _default;
},10451,[14308,14305,14314,14344,14317,14320,14323,14371,14377,14386,10297,10318,10033,10082,10118,10454,10457]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var Triangle = function Triangle(_ref) {
    var style = _ref.style,
        isDown = _ref.isDown;
    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([styles.triangle, style, isDown ? styles.down : {}])
    });
  };

  Triangle.propTypes = {
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
    isDown: _propTypes.default.bool
  };

  var styles = _reactNative.StyleSheet.create({
    down: {
      transform: [{
        rotate: '180deg'
      }]
    },
    triangle: {
      width: 0,
      height: 0,
      backgroundColor: 'transparent',
      borderStyle: 'solid',
      borderLeftWidth: 8,
      borderRightWidth: 8,
      borderBottomWidth: 15,
      borderLeftColor: 'transparent',
      borderRightColor: 'transparent',
      borderBottomColor: 'white'
    }
  });

  var _default = Triangle;
  exports.default = _default;
},10454,[14305,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var factory = _$$_REQUIRE(_dependencyMap[1]);

  if (typeof React === 'undefined') {
    throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
  }

  var ReactNoopUpdateQueue = new React.Component().updater;
  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
},10456,[10297,10459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.getElementVisibleWidth = undefined;

  var getArea = function getArea(a, b) {
    return a * b;
  };

  var getPointDistance = function getPointDistance(a, b) {
    return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
  };

  var getElementVisibleWidth = function getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) {
    if (xOffset >= 0) {
      return xOffset + elementWidth <= ScreenWidth ? elementWidth : ScreenWidth - xOffset;
    }

    return elementWidth - xOffset;
  };

  exports.getElementVisibleWidth = getElementVisibleWidth;

  var getTooltipCoordinate = function getTooltipCoordinate(x, y, width, height, ScreenWidth, ScreenHeight, tooltipWidth, tooltipHeight, withPointer) {
    var center = [x + getElementVisibleWidth(width, x, ScreenWidth) / 2, y + height / 2];
    var pOne = [center[0], 0];
    var pTwo = [ScreenWidth, center[1]];
    var pThree = [center[0], ScreenHeight];
    var pFour = [0, center[1]];
    var vOne = getPointDistance(center, pOne);
    var vTwo = getPointDistance(center, pTwo);
    var vThree = getPointDistance(center, pThree);
    var vFour = getPointDistance(center, pFour);
    var areas = [getArea(vOne, vFour), getArea(vOne, vTwo), getArea(vTwo, vThree), getArea(vThree, vFour)].map(function (each, index) {
      return {
        area: each,
        id: index
      };
    });
    var sortedArea = areas.sort(function (a, b) {
      return b.area - a.area;
    });
    var dX = 0.001;
    var dY = height / 2;
    var directionCorrection = [[-1, -1], [1, -1], [1, 1], [-1, 1]];
    var deslocateReferencePoint = [[-tooltipWidth, -tooltipHeight], [0, -tooltipHeight], [0, 0], [-tooltipWidth, 0]];
    var qIndex = sortedArea[0].id;

    var getWithPointerOffsetY = function getWithPointerOffsetY() {
      return withPointer ? 10 * directionCorrection[qIndex][1] : 0;
    };

    var getWithPointerOffsetX = function getWithPointerOffsetX() {
      return withPointer ? center[0] - 18 * directionCorrection[qIndex][0] : center[0];
    };

    var newX = getWithPointerOffsetX() + (dX * directionCorrection[qIndex][0] + deslocateReferencePoint[qIndex][0]);
    return {
      x: constraintX(newX, qIndex, center[0], ScreenWidth, tooltipWidth),
      y: center[1] + (dY * directionCorrection[qIndex][1] + deslocateReferencePoint[qIndex][1]) + getWithPointerOffsetY()
    };
  };

  var constraintX = function constraintX(newX, qIndex, x, ScreenWidth, tooltipWidth) {
    switch (qIndex) {
      case 0:
      case 3:
        {
          var maxWidth = newX > ScreenWidth ? ScreenWidth - 10 : newX;
          return newX < 1 ? 10 : maxWidth;
        }

      case 1:
      case 2:
        {
          var leftOverSpace = ScreenWidth - newX;
          return leftOverSpace >= tooltipWidth ? newX : newX - (tooltipWidth - leftOverSpace + 10);
        }

      default:
        {
          return 0;
        }
    }
  };

  var _default = getTooltipCoordinate;
  exports.default = _default;
},10457,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _assign = _$$_REQUIRE(_dependencyMap[0]);

  var emptyObject = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _$$_REQUIRE(_dependencyMap[2]);

  var MIXINS_KEY = 'mixins';

  function identity(fn) {
    return fn;
  }

  var ReactPropTypeLocationNames;
  {
    ReactPropTypeLocationNames = {};
  }

  function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
    var injectedMixins = [];
    var ReactClassInterface = {
      mixins: 'DEFINE_MANY',
      statics: 'DEFINE_MANY',
      propTypes: 'DEFINE_MANY',
      contextTypes: 'DEFINE_MANY',
      childContextTypes: 'DEFINE_MANY',
      getDefaultProps: 'DEFINE_MANY_MERGED',
      getInitialState: 'DEFINE_MANY_MERGED',
      getChildContext: 'DEFINE_MANY_MERGED',
      render: 'DEFINE_ONCE',
      componentWillMount: 'DEFINE_MANY',
      componentDidMount: 'DEFINE_MANY',
      componentWillReceiveProps: 'DEFINE_MANY',
      shouldComponentUpdate: 'DEFINE_ONCE',
      componentWillUpdate: 'DEFINE_MANY',
      componentDidUpdate: 'DEFINE_MANY',
      componentWillUnmount: 'DEFINE_MANY',
      UNSAFE_componentWillMount: 'DEFINE_MANY',
      UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',
      UNSAFE_componentWillUpdate: 'DEFINE_MANY',
      updateComponent: 'OVERRIDE_BASE'
    };
    var ReactClassStaticInterface = {
      getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function displayName(Constructor, _displayName) {
        Constructor.displayName = _displayName;
      },
      mixins: function mixins(Constructor, _mixins) {
        if (_mixins) {
          for (var i = 0; i < _mixins.length; i++) {
            mixSpecIntoComponent(Constructor, _mixins[i]);
          }
        }
      },
      childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
      },
      contextTypes: function contextTypes(Constructor, _contextTypes) {
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
      },
      getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
        } else {
          Constructor.getDefaultProps = _getDefaultProps;
        }
      },
      propTypes: function propTypes(Constructor, _propTypes) {
        Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
      },
      statics: function statics(Constructor, _statics) {
        mixStaticSpecIntoComponent(Constructor, _statics);
      },
      autobind: function autobind() {}
    };

    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {}
      }
    }

    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

      if (ReactClassMixin.hasOwnProperty(name)) {
        _invariant(specPolicy === 'OVERRIDE_BASE', "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", name);
      }

      if (isAlreadyDefined) {
        _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);
      }
    }

    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }

      _invariant(typeof spec !== 'function', "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");

      _invariant(!isValidElement(spec), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");

      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;

      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }

      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }

        if (name === MIXINS_KEY) {
          continue;
        }

        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);

        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];

              _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", specPolicy, name);

              if (specPolicy === 'DEFINE_MANY_MERGED') {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === 'DEFINE_MANY') {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
            }
          }
        }
      }
    }

    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }

      for (var name in statics) {
        var property = statics[name];

        if (!statics.hasOwnProperty(name)) {
          continue;
        }

        var isReserved = name in RESERVED_SPEC_KEYS;

        _invariant(!isReserved, "ReactClass: You are attempting to define a reserved property, `%s`, that shouldn't be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.", name);

        var isAlreadyDefined = name in Constructor;

        if (isAlreadyDefined) {
          var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

          _invariant(specPolicy === 'DEFINE_MANY_MERGED', "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);

          Constructor[name] = createMergedResultFunction(Constructor[name], property);
          return;
        }

        Constructor[name] = property;
      }
    }

    function mergeIntoWithNoDuplicateKeys(one, two) {
      _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          _invariant(one[key] === undefined, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", key);

          one[key] = two[key];
        }
      }

      return one;
    }

    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);

        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }

        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }

    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }

    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      return boundMethod;
    }

    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;

      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }

    var IsMountedPreMixin = {
      componentDidMount: function componentDidMount() {
        this.__isMounted = true;
      }
    };
    var IsMountedPostMixin = {
      componentWillUnmount: function componentWillUnmount() {
        this.__isMounted = false;
      }
    };
    var ReactClassMixin = {
      replaceState: function replaceState(newState, callback) {
        this.updater.enqueueReplaceState(this, newState, callback);
      },
      isMounted: function isMounted() {
        return !!this.__isMounted;
      }
    };

    var ReactClassComponent = function ReactClassComponent() {};

    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

    function createClass(spec) {
      var Constructor = identity(function (props, context, updater) {
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
        this.state = null;
        var initialState = this.getInitialState ? this.getInitialState() : null;

        _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, IsMountedPreMixin);
      mixSpecIntoComponent(Constructor, spec);
      mixSpecIntoComponent(Constructor, IsMountedPostMixin);

      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    }

    return createClass;
  }

  module.exports = factory;
},10459,[10303,10016,10019]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.BottomSheet = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _config = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var MAX_HEIGHT = 300;

  var BottomSheet = function (_Component) {
    (0, _inherits2.default)(BottomSheet, _Component);

    function BottomSheet(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BottomSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BottomSheet).call(this, props));

      _this.onLayout = function (event) {
        return _this.setState({
          listHeight: event.nativeEvent.layout.height
        });
      };

      _this.state = {
        listHeight: undefined
      };
      return _this;
    }

    (0, _createClass2.default)(BottomSheet, [{
      key: "render",
      value: function render() {
        var listHeight = this.state.listHeight;
        var _this$props = this.props,
            isVisible = _this$props.isVisible,
            modalProps = _this$props.modalProps,
            children = _this$props.children;
        var maxHeight = listHeight < MAX_HEIGHT ? listHeight : MAX_HEIGHT;
        return _react.default.createElement(_reactNative.Modal, (0, _extends2.default)({
          animationType: "slide",
          transparent: true,
          visible: isVisible
        }, modalProps), _react.default.createElement(_reactNative.SafeAreaView, {
          style: styles.safeAreaView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.modalView
        }, _react.default.createElement(_reactNative.View, {
          style: ([styles.listContainer], {
            maxHeight: maxHeight
          }),
          onLayout: this.onLayout
        }, _react.default.createElement(_reactNative.ScrollView, null, children)))));
      }
    }]);
    return BottomSheet;
  }(_react.Component);

  exports.BottomSheet = BottomSheet;

  var styles = _reactNative.StyleSheet.create({
    safeAreaView: {
      flex: 1,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    modalView: {
      flex: 1,
      flexDirection: 'column-reverse'
    },
    listContainer: {
      backgroundColor: 'white'
    }
  });

  BottomSheet.defaultProps = {
    modalProps: {},
    isVisible: false
  };
  BottomSheet.propTypes = {
    modalProps: _propTypes.default.object,
    isVisible: _propTypes.default.bool
  };

  var _default = (0, _config.withTheme)(BottomSheet, 'BottomSheet');

  exports.default = _default;
},10460,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10082,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Rating", {
    enumerable: true,
    get: function get() {
      return _SwipeRating.default;
    }
  });
  Object.defineProperty(exports, "AirbnbRating", {
    enumerable: true,
    get: function get() {
      return _TapRating.default;
    }
  });

  var _SwipeRating = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _TapRating = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},10463,[14305,10466,10484]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _times = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var STAR_IMAGE = _$$_REQUIRE(_dependencyMap[13]);

  var HEART_IMAGE = _$$_REQUIRE(_dependencyMap[14]);

  var ROCKET_IMAGE = _$$_REQUIRE(_dependencyMap[15]);

  var BELL_IMAGE = _$$_REQUIRE(_dependencyMap[16]);

  var TYPES = {
    star: {
      source: STAR_IMAGE,
      color: '#f1c40f',
      backgroundColor: 'white'
    },
    heart: {
      source: HEART_IMAGE,
      color: '#e74c3c',
      backgroundColor: 'white'
    },
    rocket: {
      source: ROCKET_IMAGE,
      color: '#2ecc71',
      backgroundColor: 'white'
    },
    bell: {
      source: BELL_IMAGE,
      color: '#f39c12',
      backgroundColor: 'white'
    }
  };

  var SwipeRating = function (_Component) {
    (0, _inherits2.default)(SwipeRating, _Component);

    function SwipeRating(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SwipeRating);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SwipeRating).call(this, props));
      var _this$props = _this.props,
          onStartRating = _this$props.onStartRating,
          onFinishRating = _this$props.onFinishRating,
          fractions = _this$props.fractions;
      var position = new _reactNative.Animated.ValueXY();

      var panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant() {
          if (typeof onStartRating === 'function') {
            onStartRating();
          }
        },
        onPanResponderMove: function onPanResponderMove(event, gesture) {
          var newPosition = new _reactNative.Animated.ValueXY();
          newPosition.setValue({
            x: gesture.dx,
            y: 0
          });

          if (_this.state.isComponentMounted) {
            _this.setState({
              position: newPosition,
              value: gesture.dx
            });
          }
        },
        onPanResponderRelease: function onPanResponderRelease(event) {
          var rating = _this.getCurrentRating(_this.state.value);

          if (rating >= _this.props.minValue) {
            if (!fractions) {
              _this.setCurrentRating(rating);
            }

            if (typeof onFinishRating === 'function') onFinishRating(rating);
          }
        }
      });

      _this.state = {
        panResponder: panResponder,
        position: position,
        display: false,
        isComponentMounted: false
      };
      return _this;
    }

    (0, _createClass2.default)(SwipeRating, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _STAR_IMAGE, _HEART_IMAGE, _ROCKET_IMAGE, _BELL_IMAGE;

        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return _regenerator.default.awrap(_$$_REQUIRE(_dependencyMap[13]));

              case 3:
                _STAR_IMAGE = _context.sent;
                _context.next = 6;
                return _regenerator.default.awrap(_$$_REQUIRE(_dependencyMap[14]));

              case 6:
                _HEART_IMAGE = _context.sent;
                _context.next = 9;
                return _regenerator.default.awrap(_$$_REQUIRE(_dependencyMap[15]));

              case 9:
                _ROCKET_IMAGE = _context.sent;
                _context.next = 12;
                return _regenerator.default.awrap(_$$_REQUIRE(_dependencyMap[16]));

              case 12:
                _BELL_IMAGE = _context.sent;
                this.setState({
                  display: true,
                  isComponentMounted: true
                });
                _context.next = 18;
                break;

              case 16:
                _context.prev = 16;
                _context.t0 = _context["catch"](0);

              case 18:
                this.setCurrentRating(this.props.startingValue);

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, null, this, [[0, 16]]);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.props.startingValue !== prevProps.startingValue) {
          this.setCurrentRating(this.props.startingValue);
        }
      }
    }, {
      key: "getPrimaryViewStyle",
      value: function getPrimaryViewStyle() {
        var position = this.state.position;
        var _this$props2 = this.props,
            imageSize = _this$props2.imageSize,
            ratingCount = _this$props2.ratingCount,
            type = _this$props2.type;
        var color = TYPES[type].color;
        var width = position.x.interpolate({
          inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],
          outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],
          extrapolate: 'clamp'
        }, {
          useNativeDriver: true
        });
        return {
          backgroundColor: color,
          width: width,
          height: width ? imageSize : 0
        };
      }
    }, {
      key: "getSecondaryViewStyle",
      value: function getSecondaryViewStyle() {
        var position = this.state.position;
        var _this$props3 = this.props,
            imageSize = _this$props3.imageSize,
            ratingCount = _this$props3.ratingCount,
            type = _this$props3.type;
        var backgroundColor = TYPES[type].backgroundColor;
        var width = position.x.interpolate({
          inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],
          outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],
          extrapolate: 'clamp'
        }, {
          useNativeDriver: true
        });
        return {
          backgroundColor: backgroundColor,
          width: width,
          height: width ? imageSize : 0
        };
      }
    }, {
      key: "renderRatings",
      value: function renderRatings() {
        var _this$props4 = this.props,
            imageSize = _this$props4.imageSize,
            ratingCount = _this$props4.ratingCount,
            type = _this$props4.type,
            tintColor = _this$props4.tintColor;
        var source = TYPES[type].source;
        return (0, _times.default)(ratingCount, function (index) {
          return _react.default.createElement(_reactNative.View, {
            key: index,
            style: styles.starContainer
          }, _react.default.createElement(_reactNative.Image, {
            source: source,
            style: {
              width: imageSize,
              height: imageSize,
              tintColor: tintColor
            }
          }));
        });
      }
    }, {
      key: "getCurrentRating",
      value: function getCurrentRating(value) {
        var _this$props5 = this.props,
            fractions = _this$props5.fractions,
            imageSize = _this$props5.imageSize,
            ratingCount = _this$props5.ratingCount;
        var startingValue = ratingCount / 2;
        var currentRating = this.props.minValue ? this.props.minValue : 0;

        if (value > ratingCount * imageSize / 2) {
          currentRating = ratingCount;
        } else if (value < -ratingCount * imageSize / 2) {
          currentRating = this.props.minValue ? this.props.minValue : 0;
        } else if (value <= imageSize || value > imageSize) {
          currentRating = startingValue + value / imageSize;
          currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);
        } else {
          currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);
        }

        return currentRating;
      }
    }, {
      key: "setCurrentRating",
      value: function setCurrentRating(rating) {
        var _this$props6 = this.props,
            imageSize = _this$props6.imageSize,
            ratingCount = _this$props6.ratingCount;
        var initialRating = ratingCount / 2;
        var value = null;

        if (rating > ratingCount) {
          value = ratingCount * imageSize / 2;
        } else if (rating < 0) {
          value = -ratingCount * imageSize / 2;
        } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {
          value = (rating - initialRating) * imageSize;
        } else {
          value = 0;
        }

        var newPosition = new _reactNative.Animated.ValueXY();
        newPosition.setValue({
          x: value,
          y: 0
        });

        if (this.state.isComponentMounted) {
          this.setState({
            position: newPosition,
            value: value
          });
        }
      }
    }, {
      key: "displayCurrentRating",
      value: function displayCurrentRating() {
        var _this$props7 = this.props,
            ratingCount = _this$props7.ratingCount,
            type = _this$props7.type,
            readonly = _this$props7.readonly,
            showReadOnlyText = _this$props7.showReadOnlyText,
            ratingTextColor = _this$props7.ratingTextColor;
        var color = ratingTextColor || TYPES[type].color;
        return _react.default.createElement(_reactNative.View, {
          style: styles.showRatingView
        }, _react.default.createElement(_reactNative.View, {
          style: styles.ratingView
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.ratingText, {
            color: color
          }]
        }, "Rating:", ' '), _react.default.createElement(_reactNative.Text, {
          style: [styles.currentRatingText, {
            color: color
          }]
        }, this.getCurrentRating(this.state.value)), _react.default.createElement(_reactNative.Text, {
          style: [styles.maxRatingText, {
            color: color
          }]
        }, "/", ratingCount)), _react.default.createElement(_reactNative.View, null, readonly && showReadOnlyText && _react.default.createElement(_reactNative.Text, {
          style: [styles.readonlyLabel, {
            color: color
          }]
        }, "(readonly)")));
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props8 = this.props,
            readonly = _this$props8.readonly,
            type = _this$props8.type,
            ratingImage = _this$props8.ratingImage,
            ratingColor = _this$props8.ratingColor,
            ratingBackgroundColor = _this$props8.ratingBackgroundColor,
            style = _this$props8.style,
            showRating = _this$props8.showRating;

        if (type === 'custom') {
          var custom = {
            source: ratingImage,
            color: ratingColor,
            backgroundColor: ratingBackgroundColor
          };
          TYPES.custom = custom;
        }

        return this.state.display ? _react.default.createElement(_reactNative.View, {
          pointerEvents: readonly ? 'none' : 'auto',
          style: style
        }, showRating && this.displayCurrentRating(), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.starsWrapper
        }, this.state.panResponder.panHandlers), _react.default.createElement(_reactNative.View, {
          style: styles.starsInsideWrapper
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: this.getPrimaryViewStyle()
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: this.getSecondaryViewStyle()
        })), this.renderRatings())) : null;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState({
          isComponentMounted: false
        });
      }
    }]);
    return SwipeRating;
  }(_react.Component);

  exports.default = SwipeRating;
  SwipeRating.defaultProps = {
    type: 'star',
    ratingImage: _$$_REQUIRE(_dependencyMap[13]),
    ratingColor: '#f1c40f',
    ratingBackgroundColor: 'white',
    ratingCount: 5,
    showReadOnlyText: true,
    imageSize: 40,
    minValue: 0
  };

  var styles = _reactNative.StyleSheet.create({
    starsWrapper: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    starsInsideWrapper: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    showRatingView: {
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      paddingBottom: 5
    },
    ratingView: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      paddingBottom: 5
    },
    ratingText: {
      fontSize: 15,
      textAlign: 'center',
      fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null,
      color: '#34495e'
    },
    readonlyLabel: {
      justifyContent: 'center',
      alignItems: 'center',
      fontSize: 12,
      textAlign: 'center',
      fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null,
      color: '#34495a'
    },
    currentRatingText: {
      fontSize: 30,
      textAlign: 'center',
      fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null
    },
    maxRatingText: {
      fontSize: 18,
      textAlign: 'center',
      fontFamily: _reactNative.Platform.OS === 'ios' ? 'Trebuchet MS' : null,
      color: '#34495e'
    }
  });

  var fractionsType = function fractionsType(props, propName, componentName) {
    if (props[propName]) {
      var value = props[propName];

      if (typeof value === 'number') {
        return value >= 0 && value <= 20 ? null : new Error("`" + propName + "` in `" + componentName + "` must be between 0 and 20");
      }

      return new Error("`" + propName + "` in `" + componentName + "` must be a number");
    }
  };

  SwipeRating.propTypes = {
    type: _propTypes.default.string,
    ratingImage: _propTypes.default.node,
    ratingColor: _propTypes.default.string,
    ratingBackgroundColor: _propTypes.default.string,
    ratingCount: _propTypes.default.number,
    ratingTextColor: _propTypes.default.string,
    imageSize: _propTypes.default.number,
    onStartRating: _propTypes.default.func,
    onFinishRating: _propTypes.default.func,
    showRating: _propTypes.default.bool,
    style: _propTypes.default.object,
    readonly: _propTypes.default.bool,
    showReadOnlyText: _propTypes.default.bool,
    startingValue: _propTypes.default.number,
    fractions: fractionsType,
    minValue: _propTypes.default.number
  };
},10466,[14308,14305,14344,14674,14320,14323,14371,14377,14386,10297,10469,10318,10033,10472,10475,10478,10481]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseTimes = _$$_REQUIRE(_dependencyMap[0]),
      castFunction = _$$_REQUIRE(_dependencyMap[1]),
      toInteger = _$$_REQUIRE(_dependencyMap[2]);

  var MAX_SAFE_INTEGER = 9007199254740991;
  var MAX_ARRAY_LENGTH = 4294967295;
  var nativeMin = Math.min;

  function times(n, iteratee) {
    n = toInteger(n);

    if (n < 1 || n > MAX_SAFE_INTEGER) {
      return [];
    }

    var index = MAX_ARRAY_LENGTH,
        length = nativeMin(n, MAX_ARRAY_LENGTH);
    iteratee = castFunction(iteratee);
    n -= MAX_ARRAY_LENGTH;
    var result = baseTimes(length, iteratee);

    while (++index < n) {
      iteratee(index);
    }

    return result;
  }

  module.exports = times;
},10469,[11926,12928,12178]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "004c2bbb035d8d06bb830efc4673c886",
    "name": "star",
    "type": "png"
  });
},10472,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "2327736b3ea09c41abfb69be1221f430",
    "name": "heart",
    "type": "png"
  });
},10475,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "51671417ef20e0bbc32f0a2bc6edfa95",
    "name": "rocket",
    "type": "png"
  });
},10478,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "a7b9dc9de5f8f1fb1afbef917619a5ac",
    "name": "bell",
    "type": "png"
  });
},10481,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Star = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var TapRating = function (_Component) {
    (0, _inherits2.default)(TapRating, _Component);
    (0, _createClass2.default)(TapRating, null, [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var defaultRating = nextProps.defaultRating;

        if (defaultRating !== prevState.defaultRating) {
          return {
            position: defaultRating,
            defaultRating: defaultRating
          };
        }

        return null;
      }
    }]);

    function TapRating() {
      var _this;

      (0, _classCallCheck2.default)(this, TapRating);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TapRating).call(this));
      _this.state = {
        position: 5
      };
      return _this;
    }

    (0, _createClass2.default)(TapRating, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var defaultRating = this.props.defaultRating;
        this.setState({
          position: defaultRating
        });
      }
    }, {
      key: "renderStars",
      value: function renderStars(rating_array) {
        return _lodash.default.map(rating_array, function (star, index) {
          return star;
        });
      }
    }, {
      key: "starSelectedInPosition",
      value: function starSelectedInPosition(position) {
        var onFinishRating = this.props.onFinishRating;
        if (typeof onFinishRating === 'function') onFinishRating(position);
        this.setState({
          position: position
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var position = this.state.position;
        var _this$props = this.props,
            count = _this$props.count,
            reviews = _this$props.reviews,
            showRating = _this$props.showRating,
            reviewColor = _this$props.reviewColor,
            reviewSize = _this$props.reviewSize;
        var rating_array = [];
        var starContainerStyle = [styles.starContainer];

        if (this.props.starContainerStyle) {
          starContainerStyle.push(this.props.starContainerStyle);
        }

        _lodash.default.times(count, function (index) {
          rating_array.push(_react.default.createElement(_Star.default, (0, _extends2.default)({
            key: index,
            position: index + 1,
            starSelectedInPosition: _this2.starSelectedInPosition.bind(_this2),
            fill: position >= index + 1
          }, _this2.props)));
        });

        return _react.default.createElement(_reactNative.View, {
          style: styles.ratingContainer
        }, showRating && _react.default.createElement(_reactNative.Text, {
          style: [styles.reviewText, {
            fontSize: reviewSize,
            color: reviewColor
          }]
        }, reviews[position - 1]), _react.default.createElement(_reactNative.View, {
          style: starContainerStyle
        }, this.renderStars(rating_array)));
      }
    }]);
    return TapRating;
  }(_react.Component);

  exports.default = TapRating;
  TapRating.defaultProps = {
    defaultRating: 3,
    reviews: ["Terrible", "Bad", "Okay", "Good", "Great"],
    count: 5,
    showRating: true,
    reviewColor: 'rgba(230, 196, 46, 1)',
    reviewSize: 25
  };

  var styles = _reactNative.StyleSheet.create({
    ratingContainer: {
      backgroundColor: 'transparent',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center'
    },
    reviewText: {
      fontWeight: 'bold',
      margin: 10
    },
    starContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });
},10484,[14308,14305,14344,14320,14371,14377,14323,14386,11503,10297,10318,10033,10487]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var STAR_IMAGE = _$$_REQUIRE(_dependencyMap[9]);

  var STAR_SELECTED_IMAGE = _$$_REQUIRE(_dependencyMap[10]);

  var STAR_SIZE = 40;

  var Star = function (_PureComponent) {
    (0, _inherits2.default)(Star, _PureComponent);

    function Star() {
      var _this;

      (0, _classCallCheck2.default)(this, Star);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Star).call(this));
      _this.springValue = new _reactNative.Animated.Value(1);
      _this.state = {
        selected: false
      };
      return _this;
    }

    (0, _createClass2.default)(Star, [{
      key: "spring",
      value: function spring() {
        var _this$props = this.props,
            position = _this$props.position,
            starSelectedInPosition = _this$props.starSelectedInPosition;
        this.springValue.setValue(1.2);

        _reactNative.Animated.spring(this.springValue, {
          toValue: 1,
          friction: 2,
          tension: 1,
          useNativeDriver: true
        }).start();

        this.setState({
          selected: !this.state.selected
        });
        starSelectedInPosition(position);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            fill = _this$props2.fill,
            size = _this$props2.size,
            selectedColor = _this$props2.selectedColor,
            isDisabled = _this$props2.isDisabled,
            starStyle = _this$props2.starStyle;
        var starSource = fill && selectedColor === null ? STAR_SELECTED_IMAGE : STAR_IMAGE;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: this.spring.bind(this),
          disabled: isDisabled
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: starSource,
          style: [styles.starStyle, {
            tintColor: fill && selectedColor ? selectedColor : undefined,
            width: size || STAR_SIZE,
            height: size || STAR_SIZE,
            transform: [{
              scale: this.springValue
            }]
          }, starStyle]
        }));
      }
    }]);
    return Star;
  }(_react.PureComponent);

  exports.default = Star;
  Star.defaultProps = {
    selectedColor: '#f1c40f'
  };

  var styles = _reactNative.StyleSheet.create({
    starStyle: {
      margin: 3
    }
  });
},10487,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10490,10493]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "4bdd6aad790c6c8370a06876ec7d31e1",
    "name": "airbnb-star",
    "type": "png"
  });
},10490,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/node_modules/react-native-ratings/src/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "4b9cf0cc747e3c1abc541befa05b1e37",
    "name": "airbnb-star-selected",
    "type": "png"
  });
},10493,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 57,
    "height": 57,
    "scales": [1],
    "hash": "2d37b6d01d0c1cef0f30027623f3b4d9",
    "name": "ic_selected",
    "type": "png"
  });
},10496,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 57,
    "height": 57,
    "scales": [1],
    "hash": "9bd1d21387321fad86c29230b3e51392",
    "name": "ic_unselected",
    "type": "png"
  });
},10499,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._renderItem = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNativeElements = _$$_REQUIRE(_dependencyMap[3]);

  var _renderItem = function _renderItem(_ref) {
    var item = _ref.item,
        itemClick = _ref.itemClick,
        itemCheckClick = _ref.itemCheckClick,
        isChecked = _ref.isChecked;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      style: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#fff'
      },
      onPress: function onPress() {
        itemClick();
      }
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: styles.item_container
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.sheetName
    }, item.sheetName + "  "), _react.default.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }), _react.default.createElement(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return itemCheckClick();
      }
    }, isChecked ? _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[4]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }) : _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[5]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }))), _react.default.createElement(_reactNative.View, {
      style: styles.line
    })));
  };

  exports._renderItem = _renderItem;

  var styles = _reactNative.StyleSheet.create({
    item_container: {
      height: 46,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    sheetName: {
      color: '#555454',
      marginStart: 30
    },
    sheetNameSelect: {
      color: '#33bac0',
      marginStart: 40
    }
  });
},10502,[14305,10297,10033,10061,10496,10499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._renderItem = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNativeElements = _$$_REQUIRE(_dependencyMap[3]);

  var _renderItem = function _renderItem(_ref) {
    var item = _ref.item,
        itemClick = _ref.itemClick,
        itemCheckClick = _ref.itemCheckClick,
        isChecked = _ref.isChecked;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      style: {
        flex: 1,
        flexDirection: 'column',
        backgroundColor: '#fff'
      },
      onPress: function onPress() {
        itemClick();
      }
    }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
      style: styles.item_container
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.wavName
    }, item.musicName + "  "), _react.default.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }), _react.default.createElement(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return itemCheckClick();
      }
    }, isChecked ? _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[4]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }) : _react.default.createElement(_reactNative.Image, {
      source: _$$_REQUIRE(_dependencyMap[5]),
      style: {
        width: 20,
        height: 20,
        marginEnd: 20
      }
    }))), _react.default.createElement(_reactNative.View, {
      style: styles.line
    })));
  };

  exports._renderItem = _renderItem;

  var styles = _reactNative.StyleSheet.create({
    item_container: {
      height: 46,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    wavName: {
      color: '#555454',
      marginStart: 30
    },
    wavNameSelect: {
      color: '#33bac0',
      marginStart: 40
    }
  });
},10505,[14305,10297,10033,10061,10496,10499]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.hopeRequestTools = exports.desTools = undefined;

  var desTools = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  exports.desTools = desTools;

  var hopeRequestTools = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  exports.hopeRequestTools = hopeRequestTools;
},10508,[14308,10511,10517]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.calc = undefined;

  var _reactNativeMd = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var hexUpperCase = function hexUpperCase(hex) {
    return hex.toUpperCase();
  };

  var toHexString = function toHexString(byte) {
    var hex = (byte & 255).toString(16);

    if (hex.length === 1) {
      hex = "0" + hex;
    }

    return hex;
  };

  var xorOperation = function xorOperation(yArray) {
    var result = yArray[0];

    for (var i = 1; i < yArray.length; i++) {
      {
        result = result ^ yArray[i] | 0;
      }
    }

    return result;
  };

  var getYArray = function getYArray(y) {
    var yArray = null;
    yArray = y.split('').map(function (s) {
      return s.charCodeAt(0);
    });
    return yArray;
  };

  var generateY = function generateY(value) {
    return value.toUpperCase();
  };

  var calcMD5 = function calcMD5(value) {
    return _reactNativeMd.default.hex_md5(value);
  };

  var splicingString = function splicingString(dat, key, cid, sid, ver) {
    var len = dat.toString().length;
    return len + key + cid + sid + ver;
  };

  var calc = function calc(dat, key, cid, sid, ver) {
    var X = splicingString(dat, key, cid, sid, ver);
    var xmd5 = calcMD5(X);
    var Y = generateY(xmd5);
    var yArray = getYArray(Y);
    var result = xorOperation(yArray);
    var hex = toHexString(result);
    var hexUpper = hexUpperCase(hex);
    return hexUpper;
  };

  exports.calc = calc;
},10511,[14305,10514]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hexcase = 0;
  var b64pad = "";
  var chrsz = 8;

  module.exports.hex_md5 = function (s) {
    return binl2hex(core_md5(str2binl(s), s.length * chrsz));
  };

  module.exports.b64_md5 = function (s) {
    return binl2b64(core_md5(str2binl(s), s.length * chrsz));
  };

  module.exports.str_md5 = function (s) {
    return binl2str(core_md5(str2binl(s), s.length * chrsz));
  };

  module.exports.hex_hmac_md5 = function (key, data) {
    return binl2hex(core_hmac_md5(key, data));
  };

  module.exports.b64_hmac_md5 = function (key, data) {
    return binl2b64(core_hmac_md5(key, data));
  };

  module.exports.str_hmac_md5 = function (key, data) {
    return binl2str(core_hmac_md5(key, data));
  };

  function core_md5(x, len) {
    x[len >> 5] |= 0x80 << len % 32;
    x[(len + 64 >>> 9 << 4) + 14] = len;
    var a = 1732584193;
    var b = -271733879;
    var c = -1732584194;
    var d = 271733878;

    for (var i = 0; i < x.length; i += 16) {
      var olda = a;
      var oldb = b;
      var oldc = c;
      var oldd = d;
      a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
      b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
      d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
      a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
      a = safe_add(a, olda);
      b = safe_add(b, oldb);
      c = safe_add(c, oldc);
      d = safe_add(d, oldd);
    }

    return Array(a, b, c, d);
  }

  function md5_cmn(q, a, b, x, s, t) {
    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
  }

  function md5_ff(a, b, c, d, x, s, t) {
    return md5_cmn(b & c | ~b & d, a, b, x, s, t);
  }

  function md5_gg(a, b, c, d, x, s, t) {
    return md5_cmn(b & d | c & ~d, a, b, x, s, t);
  }

  function md5_hh(a, b, c, d, x, s, t) {
    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
  }

  function md5_ii(a, b, c, d, x, s, t) {
    return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
  }

  function core_hmac_md5(key, data) {
    var bkey = str2binl(key);
    if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
    var ipad = Array(16),
        opad = Array(16);

    for (var i = 0; i < 16; i++) {
      ipad[i] = bkey[i] ^ 0x36363636;
      opad[i] = bkey[i] ^ 0x5C5C5C5C;
    }

    var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
    return core_md5(opad.concat(hash), 640);
  }

  function safe_add(x, y) {
    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return msw << 16 | lsw & 0xFFFF;
  }

  function bit_rol(num, cnt) {
    return num << cnt | num >>> 32 - cnt;
  }

  function str2binl(str) {
    var bin = Array();
    var mask = 255;

    for (var i = 0; i < str.length * chrsz; i += chrsz) {
      bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;
    }

    return bin;
  }

  function binl2str(bin) {
    var str = "";
    var mask = 255;

    for (var i = 0; i < bin.length * 32; i += chrsz) {
      str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);
    }

    return str;
  }

  function binl2hex(binarray) {
    var hex_tab = "0123456789abcdef";
    var str = "";

    for (var i = 0; i < binarray.length * 4; i++) {
      str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);
    }

    return str;
  }

  function binl2b64(binarray) {
    var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var str = "";

    for (var i = 0; i < binarray.length * 4; i += 3) {
      var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 0xFF;

      for (var j = 0; j < 4; j++) {
        if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;else str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);
      }
    }

    return str;
  }
},10514,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.hopeRequest = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ = _$$_REQUIRE(_dependencyMap[2]);

  var KEY = 'A716A953593940D2BD78E1A02CD3C070';
  var CID = '750064224428658688';
  var SID = '750837261197414400';
  var VER = '1.0';

  var hopeRequest = function hopeRequest(api, value, success, error) {
    value = JSON.stringify(value);
    var body = {
      key: KEY,
      cid: CID,
      sid: SID,
      ver: VER,
      des: _.desTools.calc(value, KEY, CID, SID, VER),
      dat: value,
      len: value.length
    };
    var formData = new FormData();

    for (var k in body) {
      formData.append(k, body[k]);
    }

    try {
      (function _callee() {
        var res, resJson;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(fetch(api, {
                  method: 'POST',
                  headers: {
                    Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                    'Content-Type': 'multipart/form-data'
                  },
                  body: formData
                }));

              case 2:
                res = _context.sent;

                if (!(res.status === 200)) {
                  _context.next = 10;
                  break;
                }

                _context.next = 6;
                return _regenerator.default.awrap(res.json());

              case 6:
                resJson = _context.sent;
                success(resJson);
                _context.next = 12;
                break;

              case 10:
                error(res);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        });
      })();
    } catch (err) {
      alert(err);
    }
  };

  exports.hopeRequest = hopeRequest;
},10517,[14305,14674,10508]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WAV_LIST = exports.LOCAL_LIST = exports.SHEET_LIST = exports.CURRENT_PLAY_LIST = undefined;
  var BASE_URL = 'http://open.nbhope.cn:80';
  var CURRENT_PLAY_LIST = "http://open.nbhope.cn:80/hopeApi/music/player";
  exports.CURRENT_PLAY_LIST = CURRENT_PLAY_LIST;
  var SHEET_LIST = "http://open.nbhope.cn:80/hopeApi/sheet/list";
  exports.SHEET_LIST = SHEET_LIST;
  var LOCAL_LIST = "http://open.nbhope.cn:80/hopeApi/music/listMusic";
  exports.LOCAL_LIST = LOCAL_LIST;
  var WAV_LIST = "http://open.nbhope.cn:80/hopeApi/music/alarm";
  exports.WAV_LIST = WAV_LIST;
},10520,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 30,
    "height": 17,
    "scales": [1],
    "hash": "4973977c30d810f39a082c98293be76e",
    "name": "btn_audio_switch_arrow",
    "type": "png"
  });
},10523,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 433,
    "height": 433,
    "scales": [1],
    "hash": "b0a728294a2fbac549004eb7e1ee4840",
    "name": "pic_songs_default",
    "type": "png"
  });
},10526,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "a8deb79e35f24f4554e058947cb5a6dd",
    "name": "ic_mute",
    "type": "png"
  });
},10529,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "c346b4999e1352b814f5350098960dbd",
    "name": "ic_volume_down",
    "type": "png"
  });
},10532,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "1880f711e372a47a4cd08ddcc4aab51c",
    "name": "ic_volume_plus",
    "type": "png"
  });
},10535,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "8b1255842ff326afe4db3fc60f40ba33",
    "name": "ic_mute_white",
    "type": "png"
  });
},10538,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "e38ddf5d14aedcb63aefbbacb25f9c00",
    "name": "ic_volume",
    "type": "png"
  });
},10541,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "5359d915e6dc332163eaa96864b3961e",
    "name": "ic_shuffle_play",
    "type": "png"
  });
},10544,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "cd8645a4a52496aae275e54c5beded41",
    "name": "ic_cycle_play",
    "type": "png"
  });
},10547,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "4a1418047d274d0dc6ea3e93e27ecd66",
    "name": "ic_single_play",
    "type": "png"
  });
},10550,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "a83afc88a1a75cf38f02f8d1cecb9785",
    "name": "ic_list_play",
    "type": "png"
  });
},10553,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "2b5eab419f8286e1d99b94b5e35cc5f3",
    "name": "ic_prev_song",
    "type": "png"
  });
},10556,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8eaad347c755917385711c36f281fd21",
    "name": "ic_stop",
    "type": "png"
  });
},10559,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0438583b51d5dcc297ec55a60013cee2",
    "name": "ic_play",
    "type": "png"
  });
},10562,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "727d805e7d79a4e2b21c0fea067aa65b",
    "name": "ic_next_song",
    "type": "png"
  });
},10565,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/main/imgs/img",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "d4fd63f2ca6f7113f487c92012759ec7",
    "name": "ic_playlist",
    "type": "png"
  });
},10568,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _protocol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[13]);

  var _strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var SettingPage = function (_React$Component) {
    (0, _inherits2.default)(SettingPage, _React$Component);

    function SettingPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SettingPage).call(this, props));
      _this.state = {
        protocol: null
      };
      return _this;
    }

    (0, _createClass2.default)(SettingPage, [{
      key: "initCommonSettingParams",
      value: function initCommonSettingParams() {
        this.commonSettingParams = {
          firstOptions: [_CommonSetting.SETTING_KEYS.first_options.SHARE, _CommonSetting.SETTING_KEYS.first_options.IFTTT, _CommonSetting.SETTING_KEYS.first_options.MORE],
          secondOptions: [],
          extraOptions: {
            option: "",
            showUpgrade: true
          }
        };
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.initCommonSettingParams();
        this.initProtocol();
      }
    }, {
      key: "initProtocol",
      value: function initProtocol() {
        var _this2 = this;

        _protocol.default.getProtocol().then(function (protocol) {
          _this2.setState({
            protocol: protocol
          });
        }).catch(function (error) {
          _miot.Service.smarthome.reportLog(_miot.Device.model, "Service.getServerName error: " + JSON.stringify(error));
        });
      }
    }, {
      key: "render",
      value: function render() {
        if (!this.state.protocol) {
          return null;
        }

        this.commonSettingParams.extraOptions.option = this.state.protocol;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1
          },
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_CommonSetting.CommonSetting, {
          navigation: this.props.navigation,
          firstOptions: this.commonSettingParams.firstOptions,
          secondOptions: this.commonSettingParams.secondOptions,
          extraOptions: this.commonSettingParams.extraOptions
        })));
      }
    }, {
      key: "openTimerSettingPageWithOptions",
      value: function openTimerSettingPageWithOptions() {
        var params = {
          onMethod: "power_on",
          onParam: "on",
          offMethod: "power_off",
          offParam: "off",
          timerTitle: "这是一个自定义标题",
          displayName: "自定义场景名称",
          identify: "identify_1",
          onTimerTips: '',
          offTimerTips: '定时列表页面、设置时间页面 关闭时间副标题（默认：关闭时间）',
          listTimerTips: '定时列表页面 定时时间段副标题（默认：开启时段）',
          bothTimerMustBeSet: false,
          showOnTimerType: true,
          showOffTimerType: false,
          showPeriodTimerType: false
        };

        _miot.Service.scene.openTimerSettingPageWithOptions(params);
      }
    }, {
      key: "openCountDownPage",
      value: function openCountDownPage() {
        var params = {
          onMethod: "power_on",
          offMethod: 'power_off',
          onParam: 'on',
          offParam: 'off',
          identify: "custom",
          displayName: '自定义名称'
        };

        _miot.Service.scene.openCountDownPage(true, params);
      }
    }]);
    return SettingPage;
  }(_react.default.Component);

  exports.default = SettingPage;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    }
  });
},10571,[14305,14320,14323,14371,14377,14386,10297,10074,10033,10353,10332,10574,10077,10338,10589]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[0]);

  var _default = {
    getProtocolWithParams: function getProtocolWithParams(countryCode, language) {
      if (!countryCode) {
        countryCode = 'GB';
      }

      if (!language) {
        language = 'en';
      }

      countryCode = countryCode.toUpperCase();
      language = language.toLowerCase();
      var result = {
        privacyURL: null,
        agreementURL: null,
        hideAgreement: false,
        hideUserExperiencePlan: true
      };

      switch (countryCode) {
        case 'CN':
          {
            if (language === 'en') {
              result.privacyURL = _$$_REQUIRE(_dependencyMap[1]);
              result.agreementURL = _$$_REQUIRE(_dependencyMap[2]);
            } else {
              result.privacyURL = _$$_REQUIRE(_dependencyMap[3]);
              result.agreementURL = _$$_REQUIRE(_dependencyMap[4]);
            }

            break;
          }

        case 'ES':
          {
            if (language === 'en') {} else {}

            break;
          }

        case 'PT':
          {
            break;
          }

        case 'NL':
          {
            break;
          }

        case 'FR':
        case 'NG':
          {
            break;
          }

        case 'IT':
          {
            break;
          }

        case 'CH':
          {
            break;
          }

        case 'NO':
          {
            break;
          }

        case 'DK':
          {
            break;
          }

        case 'SE':
          {
            break;
          }

        case 'FI':
          {
            break;
          }

        case 'PL':
          {
            break;
          }

        case 'DE':
        case 'AT':
          {
            break;
          }

        case 'IE':
        case 'GB':
          {
            break;
          }

        case 'UA':
          {
            break;
          }

        case 'BE':
          {
            break;
          }

        case 'HR':
          {
            if (language === 'en') {} else {}

            break;
          }

        case 'CZ':
          {
            if (language === 'en') {} else {}

            break;
          }

        case 'GR':
        case 'CY':
          {
            break;
          }

        case 'BG':
          {
            break;
          }

        case 'LU':
          {
            break;
          }

        case 'HU':
          {
            break;
          }

        case 'LT':
          {
            break;
          }

        case 'RU':
          {
            break;
          }

        case 'BY':
          {
            break;
          }

        case 'JP':
          {
            break;
          }

        case 'KR':
          {
            break;
          }

        case 'ID':
          {
            break;
          }

        case 'MY':
          {
            break;
          }

        case 'SG':
          {
            break;
          }

        case 'TH':
          {
            break;
          }

        case 'VN':
          {
            break;
          }

        case 'MM':
          {
            break;
          }

        case 'PK':
        case 'PH':
        case 'AU':
        case 'NZ':
        case 'KE':
          {
            break;
          }

        case 'CL':
        case 'PE':
        case 'MX':
        case 'CO':
          {
            break;
          }

        case 'BR':
          {
            break;
          }

        case 'EG':
        case 'MA':
        case 'AE':
        case 'SA':
        case 'QA':
        case 'OM':
        case 'IQ':
          {
            break;
          }

        case 'IL':
          {
            break;
          }

        case 'TR':
          {
            break;
          }

        case 'TW':
          {
            break;
          }

        case 'US':
          {
            break;
          }

        case 'RO':
          {
            break;
          }

        case 'SK':
          {
            break;
          }

        case 'SI':
          {
            break;
          }

        case 'EE':
          {
            break;
          }

        case 'LV':
          {
            break;
          }

        default:
          {
            result.privacyURL = _$$_REQUIRE(_dependencyMap[1]);
            result.agreementURL = _$$_REQUIRE(_dependencyMap[2]);
          }
      }

      return result;
    },
    getProtocol: function getProtocol() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        _miot.Service.getServerName().then(function (country) {
          var language = _miot.Resources.getLanguage();

          var countryCode = country.countryCode;

          var protocol = _this.getProtocolWithParams(countryCode, language);

          resolve(protocol);
        }).catch(function (error) {
          reject(error);
        });
      });
    }
  };
  exports.default = _default;
},10574,[10074,10577,10580,10583,10586]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/resources/protocol",
    "scales": [1],
    "hash": "c0bf8e7cf3c5c041b98d1df4d1257dcd",
    "name": "en_privacy_policy",
    "type": "html"
  });
},10577,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/resources/protocol",
    "scales": [1],
    "hash": "f24ac2ab5b4210a0325138bcfe3f0581",
    "name": "en_user_agreement",
    "type": "html"
  });
},10580,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/resources/protocol",
    "scales": [1],
    "hash": "e23924b84b15f25a5b1f1617199b3428",
    "name": "zh_privacy_policy",
    "type": "html"
  });
},10583,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.hope.pad3s/resources/protocol",
    "scales": [1],
    "hash": "5f0927995af9137e0f64feb5831cca01",
    "name": "zh_user_agreement",
    "type": "html"
  });
},10586,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[0]);

  var _resources = _$$_REQUIRE(_dependencyMap[1]);

  var LANGUAGE = _miot.Resources.getLanguage();

  function getLocalizedString(language) {
    var K = getI18nKeywords(language);
    return K;
  }

  function getI18nKeywords(language) {
    switch (language) {
      case _resources.Language.zh:
        return _$$_REQUIRE(_dependencyMap[2]);

      case _resources.Language.zh_tw:
        return _$$_REQUIRE(_dependencyMap[3]);

      case _resources.Language.zh_hk:
        return _$$_REQUIRE(_dependencyMap[4]);

      case _resources.Language.en:
        return _$$_REQUIRE(_dependencyMap[5]);

      case _resources.Language.ko:
        return _$$_REQUIRE(_dependencyMap[6]);

      case _resources.Language.ru:
        return _$$_REQUIRE(_dependencyMap[7]);

      case _resources.Language.es:
        return _$$_REQUIRE(_dependencyMap[8]);

      case _resources.Language.fr:
        return _$$_REQUIRE(_dependencyMap[9]);

      case _resources.Language.it:
        return _$$_REQUIRE(_dependencyMap[10]);

      case _resources.Language.de:
        return _$$_REQUIRE(_dependencyMap[11]);

      case _resources.Language.id:
        return _$$_REQUIRE(_dependencyMap[12]);

      case _resources.Language.pl:
        return _$$_REQUIRE(_dependencyMap[13]);

      case _resources.Language.vi:
        return _$$_REQUIRE(_dependencyMap[14]);

      case _resources.Language.ja:
        return _$$_REQUIRE(_dependencyMap[15]);

      case _resources.Language.th:
        return _$$_REQUIRE(_dependencyMap[16]);

      default:
        return _$$_REQUIRE(_dependencyMap[2]);
    }
  }

  var PluginStrings = getLocalizedString(LANGUAGE);
  var _default = PluginStrings;
  exports.default = _default;
},10589,[10074,10077,10592,10595,10598,10601,10604,10607,10610,10613,10616,10619,10622,10625,10628,10631,10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    hello: '你好，欢迎加入 MIOT 扩展程序开发!',
    selfDefineScene: '自定义场景',
    timeSetting: '时间设置',
    countDownTime: '倒计时'
  };
},10592,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10595,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10598,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    hello: 'hello，welcome to MIOT Extension development !',
    selfDefineScene: 'custom scene',
    timeSetting: 'time setting',
    countDownTime: 'countdown time'
  };
},10601,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10604,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10607,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10610,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10613,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10616,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10619,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10622,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10625,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10628,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10631,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
},10634,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _mhuiRn = _$$_REQUIRE(_dependencyMap[10]);

  var _utils = _$$_REQUIRE(_dependencyMap[11]);

  var TunnelPage = function (_React$Component) {
    (0, _inherits2.default)(TunnelPage, _React$Component);

    function TunnelPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TunnelPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TunnelPage).call(this, props));

      _this._itemChecked = function (item) {
        var dataArray = _this.state.dataArray;
        dataArray[item.id].enable = !item.enable;

        _this.setState({
          dataArray: dataArray
        });

        _utils.miotTools.setTunnelSwitch(item.id, item.enable ? 1 : 0);
      };

      _this._itemInc = function (item) {
        var dataArray = _this.state.dataArray;
        var volume = item.volume + 10;
        if (volume > 100) volume = 100;
        dataArray[item.id].volume = volume;

        _this.setState({
          dataArray: dataArray
        });

        _utils.miotTools.setTunnelVolume(item.id, volume);
      };

      _this._itemVolume = function (tunnelId, volume) {
        _utils.miotTools.setTunnelVolume(tunnelId, volume);
      };

      _this._itemDesc = function (item) {
        var dataArray = _this.state.dataArray;
        var volume = item.volume - 10;
        if (volume < 0) volume = 0;
        dataArray[item.id].volume = volume;

        _this.setState({
          dataArray: dataArray
        });

        _utils.miotTools.setTunnelVolume(item.id, volume);
      };

      _this.state = {
        isLoading: true,
        dataArray: []
      };

      _this.initDeviceSubscribe();

      return _this;
    }

    (0, _createClass2.default)(TunnelPage, [{
      key: "_loadData",
      value: function _loadData() {
        var _this2 = this;

        this.setState({
          isLoading: true
        });
        setTimeout(function () {
          _this2.setState({
            dataArray: ['新数据1', '新数据2'],
            isLoading: false
          });
        }, 500);
      }
    }, {
      key: "getDeviceInitialState",
      value: function getDeviceInitialState() {
        var _this3 = this;

        _utils.miotTools.getTunnelStatus(function (res) {
          _this3.setState({
            dataArray: JSON.parse(res[0].value).tunnels
          });
        });
      }
    }, {
      key: "initDeviceSubscribe",
      value: function initDeviceSubscribe() {
        _utils.miotTools.subscribeTunnelStatus();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getDeviceInitialState();
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this4 = this;

        this.deviceReceivedMessages = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, map, data) {
          switch (data[0].key) {
            case 'prop.7.1':
              {
                var tunnels = JSON.parse(data[0].value).tunnels;

                if (JSON.stringify(tunnels) != JSON.stringify(_this4.state.dataArray)) {
                  _this4.setState({
                    dataArray: JSON.parse(data[0].value).tunnels
                  });
                }

                break;
              }
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.deviceReceivedMessages && this.deviceReceivedMessages.remove();
      }
    }, {
      key: "_renderItem",
      value: function _renderItem(data) {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'column',
            backgroundColor: '#fff',
            marginBottom: 8
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_reactNative.View, {
          style: styles.item_container
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, data.tunnelName), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_mhuiRn.Switch, {
          style: {
            alignItems: 'flex-end',
            marginEnd: 25
          },
          value: data.enable,
          onValueChange: function onValueChange() {
            _this5._itemChecked(data);
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.line
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var _this$state = this.state,
            dataArray = _this$state.dataArray,
            isLoading = _this$state.isLoading;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.FlatList, {
          extraData: this.state,
          data: dataArray,
          keyExtractor: function keyExtractor(item) {
            return item.id;
          },
          refreshing: isLoading,
          renderItem: function renderItem(data) {
            return _this6._renderItem(data.item);
          }
        }));
      }
    }]);
    return TunnelPage;
  }(_react.default.Component);

  exports.default = TunnelPage;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#f7f7f7',
      flex: 1
    },
    item_container: {
      height: 50,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      paddingStart: 22,
      paddingEnd: 22
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    },
    innerLine: {
      height: 1,
      backgroundColor: '#e5e5e5',
      marginStart: 22
    },
    title: {
      color: '#000',
      marginStart: 22
    },
    img: {
      width: 22,
      height: 22
    },
    thumb: {
      width: 20,
      height: 20,
      backgroundColor: '#007aff',
      borderColor: '#007aff',
      borderWidth: 10,
      borderRadius: 10,
      shadowColor: 'black',
      shadowOffset: {
        width: 0,
        height: 1
      },
      shadowOpacity: 0.5,
      shadowRadius: 1
    }
  });
},10637,[14305,14320,14323,14371,14377,14386,10297,10033,13687,10074,22411,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _utils = _$$_REQUIRE(_dependencyMap[10]);

  var _network = _$$_REQUIRE(_dependencyMap[11]);

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _widgets = _$$_REQUIRE(_dependencyMap[13]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[15]);

  var PlayLocalPage = function (_React$Component) {
    (0, _inherits2.default)(PlayLocalPage, _React$Component);

    function PlayLocalPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayLocalPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayLocalPage).call(this, props));

      _this.getLocalList = function (refresh) {
        if (refresh) {
          _this.setState({
            localListLoading: true
          });
        }

        if (_this.deviceId === '' || _this.authCode === '') {
          _utils.miotTools.getDeviceAutoCode(function (res) {
            var value = JSON.parse(res[0].value);
            _this.authCode = value.authCode;
            _this.deviceId = value.deviceId;
          });

          _this.setState({
            playListLoading: false
          });
        }

        _network.hopeRequestTools.hopeRequest(_api.LOCAL_LIST, {
          deviceId: _this.deviceId,
          authCode: _this.authCode,
          currentPage: _this.localListPage
        }, function (res) {
          var newPlayList = [];

          if (!refresh) {
            newPlayList = _this.state.localList;
          }

          newPlayList = newPlayList.concat(res.rows);

          _this.setState({
            localList: newPlayList
          });

          if (refresh) {
            _this.setState({
              localListLoading: false
            });
          }
        }, function (error) {
          _this.setState({
            localListLoading: false
          });
        });
      };

      _this.localListRefresh = function () {
        _this.localListPage = 1;

        _this.getLocalList(true);
      };

      _this.localListLoadMore = function () {
        if (_this.state.localList.length >= 20) {
          _this.localListPage++;

          _this.getLocalList(false);
        }
      };

      _this.initNavigationBar();

      _this.authCode = '';
      _this.deviceId = '';
      _this.localListPage = 1;
      _this.state = {
        localList: [],
        localListLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(PlayLocalPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _utils.miotTools.getDeviceAutoCode(function (res) {
          var value = JSON.parse(res[0].value);
          _this2.authCode = value.authCode;
          _this2.deviceId = value.deviceId;

          _this2.getLocalList(true);
        });
      }
    }, {
      key: "initNavigationBar",
      value: function initNavigationBar() {
        var _this3 = this;

        this.props.navigation.setParams({
          titleProps: {
            title: (0, _MHLocalizableString.getString)('play_local'),
            left: [{
              key: _NavigationBar.default.ICON.BACK,
              onPress: function onPress() {
                _miot.Package.exit();
              }
            }],
            right: [{
              key: _NavigationBar.default.ICON.COMPLETE,
              onPress: function onPress() {
                _this3.saveScene();
              }
            }],
            type: _NavigationBar.default.TYPE.LIGHT,
            backgroundColor: '#ffffff'
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$state = this.state,
            localListLoading = _this$state.localListLoading,
            localList = _this$state.localList;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_widgets.PlayList, {
          ref: function ref(_ref) {
            return _this4.list = _ref;
          },
          id: 'musicId',
          dataArray: localList,
          refresh: this.localListRefresh,
          loadMore: this.localListLoadMore,
          isLoading: localListLoading,
          renderItem: _widgets.LocalListItem._renderItem,
          isSingleCheck: true
        }));
      }
    }, {
      key: "saveScene",
      value: function saveScene() {
        var value = this.list.state.items[0];

        if (value === undefined) {
          _reactNative.Alert.alert((0, _MHLocalizableString.getString)('warn'), (0, _MHLocalizableString.getString)('tip_playlocal'));

          return;
        }

        var action = _miot.Package.entryInfo;
        action.payload.value = [{
          did: _miot.Device.deviceID,
          siid: 6,
          piid: 7,
          value: JSON.stringify({
            type: 'localPlay',
            data: value.musicId.toString()
          })
        }];
        action.payload.name = "" + ((0, _MHLocalizableString.getString)('play') + value.musicName + (0, _MHLocalizableString.getString)('song'));
        _miot.Package.exitInfo = action;

        _miot.Package.exit();
      }
    }]);
    return PlayLocalPage;
  }(_react.default.Component);

  exports.default = PlayLocalPage;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    }
  });
},10640,[14305,14320,14323,14371,14377,14386,10297,10074,10033,10077,10022,10508,10520,10040,10719,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _utils = _$$_REQUIRE(_dependencyMap[10]);

  var _network = _$$_REQUIRE(_dependencyMap[11]);

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _widgets = _$$_REQUIRE(_dependencyMap[13]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[15]);

  var SheetListPage = function (_React$Component) {
    (0, _inherits2.default)(SheetListPage, _React$Component);

    function SheetListPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SheetListPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SheetListPage).call(this, props));

      _this.getSheetList = function (refresh) {
        if (refresh) {
          _this.setState({
            sheetListLoading: true
          });
        }

        if (_this.deviceId === '' || _this.authCode === '') {
          _utils.miotTools.getDeviceAutoCode(function (res) {
            var value = JSON.parse(res[0].value);
            _this.authCode = value.authCode;
            _this.deviceId = value.deviceId;
          });

          _this.setState({
            playListLoading: false
          });
        }

        _network.hopeRequestTools.hopeRequest(_api.SHEET_LIST, {
          deviceId: _this.deviceId,
          authCode: _this.authCode,
          currentPage: _this.sheetListPage
        }, function (res) {
          var newPlayList = [];

          if (!refresh) {
            newPlayList = _this.state.sheetList;
          }

          newPlayList = newPlayList.concat(res.rows);

          _this.setState({
            sheetList: newPlayList
          });

          if (refresh) {
            _this.setState({
              sheetListLoading: false
            });
          }
        }, function (error) {
          _this.setState({
            sheetListLoading: false
          });
        });
      };

      _this.sheetListRefresh = function () {
        _this.sheetListPage = 1;

        _this.getSheetList(true);
      };

      _this.sheetListLoadMore = function () {
        if (_this.state.sheetList.length >= 20) {
          _this.sheetListPage++;

          _this.getSheetList(false);
        }
      };

      _this.initNavigationBar();

      _this.authCode = '';
      _this.deviceId = '';
      _this.sheetListPage = 1;
      _this.state = {
        sheetList: [],
        sheetListLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(SheetListPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _utils.miotTools.getDeviceAutoCode(function (res) {
          var value = JSON.parse(res[0].value);
          _this2.authCode = value.authCode;
          _this2.deviceId = value.deviceId;

          _this2.getSheetList(true);
        });
      }
    }, {
      key: "initNavigationBar",
      value: function initNavigationBar() {
        var _this3 = this;

        this.props.navigation.setParams({
          titleProps: {
            title: (0, _MHLocalizableString.getString)('sheet_list'),
            left: [{
              key: _NavigationBar.default.ICON.BACK,
              onPress: function onPress() {
                _miot.Package.exit();
              }
            }],
            right: [{
              key: _NavigationBar.default.ICON.COMPLETE,
              onPress: function onPress() {
                _this3.saveScene();
              }
            }],
            type: _NavigationBar.default.TYPE.LIGHT,
            backgroundColor: '#ffffff'
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$state = this.state,
            sheetListLoading = _this$state.sheetListLoading,
            sheetList = _this$state.sheetList;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_widgets.PlayList, {
          ref: function ref(_ref) {
            return _this4.list = _ref;
          },
          id: 'sheetId',
          isSingleCheck: true,
          dataArray: sheetList,
          refresh: this.sheetListRefresh,
          loadMore: this.sheetListLoadMore,
          isLoading: sheetListLoading,
          renderItem: _widgets.SheetListItem._renderItem
        }));
      }
    }, {
      key: "saveScene",
      value: function saveScene() {
        var value = this.list.state.items[0];

        if (value === undefined) {
          Alert.alert((0, _MHLocalizableString.getString)('warn'), (0, _MHLocalizableString.getString)('tip_playsheet'));
          return;
        }

        var action = _miot.Package.entryInfo;
        action.payload.value = [{
          did: _miot.Device.deviceID,
          siid: 6,
          piid: 7,
          value: JSON.stringify({
            type: 'playList',
            data: value.sheetId.toString()
          })
        }];
        action.payload.name = "" + ((0, _MHLocalizableString.getString)('play') + value.sheetName + (0, _MHLocalizableString.getString)('sheet_list_low'));
        _miot.Package.exitInfo = action;

        _miot.Package.exit();
      }
    }]);
    return SheetListPage;
  }(_react.default.Component);

  exports.default = SheetListPage;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    },
    line: {
      height: 1,
      backgroundColor: '#e5e5e5'
    }
  });
},10643,[14305,14320,14323,14371,14377,14386,10297,10074,10033,10077,10022,10508,10520,10040,10719,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _MHLocalizableString = _$$_REQUIRE(_dependencyMap[11]);

  var _utils = _$$_REQUIRE(_dependencyMap[12]);

  var _network = _$$_REQUIRE(_dependencyMap[13]);

  var _api = _$$_REQUIRE(_dependencyMap[14]);

  var _widgets = _$$_REQUIRE(_dependencyMap[15]);

  var PlayWavPage = function (_React$Component) {
    (0, _inherits2.default)(PlayWavPage, _React$Component);

    function PlayWavPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, PlayWavPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayWavPage).call(this, props));

      _this.getWavList = function (refresh) {
        if (refresh) {
          _this.setState({
            wavListLoading: true
          });
        }

        if (_this.deviceId === '' || _this.authCode === '') {
          _utils.miotTools.getDeviceAutoCode(function (res) {
            var value = JSON.parse(res[0].value);
            _this.authCode = value.authCode;
            _this.deviceId = value.deviceId;
          });

          _this.setState({
            playListLoading: false
          });
        }

        _network.hopeRequestTools.hopeRequest(_api.WAV_LIST, {
          deviceId: _this.deviceId,
          authCode: _this.authCode,
          currentPage: _this.wavListPage
        }, function (res) {
          var newPlayList = [];

          if (!refresh) {
            newPlayList = _this.state.wavList;
          }

          newPlayList = newPlayList.concat(res.rows);

          _this.setState({
            wavList: newPlayList
          });

          if (refresh) {
            _this.setState({
              wavListLoading: false
            });
          }
        }, function (error) {
          _this.setState({
            wavListLoading: false
          });
        });
      };

      _this.wavListRefresh = function () {
        _this.wavListPage = 1;

        _this.getWavList(true);
      };

      _this.wavListLoadMore = function () {
        if (_this.state.wavList.length >= 20) {
          _this.wavListPage++;

          _this.getWavList(false);
        }
      };

      _this.initNavigationBar();

      _this.authCode = '';
      _this.deviceId = '';
      _this.wavListPage = 1;
      _this.state = {
        wavList: [],
        wavListLoading: false
      };
      return _this;
    }

    (0, _createClass2.default)(PlayWavPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _utils.miotTools.getDeviceAutoCode(function (res) {
          var value = JSON.parse(res[0].value);
          _this2.authCode = value.authCode;
          _this2.deviceId = value.deviceId;

          _this2.getWavList(true);
        });
      }
    }, {
      key: "initNavigationBar",
      value: function initNavigationBar() {
        var _this3 = this;

        this.props.navigation.setParams({
          titleProps: {
            title: (0, _MHLocalizableString.getString)('play_wav'),
            left: [{
              key: _NavigationBar.default.ICON.BACK,
              onPress: function onPress() {
                _miot.Package.exit();
              }
            }],
            right: [{
              key: _NavigationBar.default.ICON.COMPLETE,
              onPress: function onPress() {
                _this3.saveScene();
              }
            }],
            type: _NavigationBar.default.TYPE.LIGHT,
            backgroundColor: '#ffffff'
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$state = this.state,
            wavListLoading = _this$state.wavListLoading,
            wavList = _this$state.wavList;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.line
        }), _react.default.createElement(_widgets.PlayList, {
          ref: function ref(_ref) {
            return _this4.list = _ref;
          },
          id: 'musicId',
          isSingleCheck: true,
          dataArray: wavList,
          refresh: this.wavListRefresh,
          loadMore: this.wavListLoadMore,
          isLoading: wavListLoading,
          renderItem: _widgets.WavListItem._renderItem,
          itemCheckClick: this.wavListItemCheckClick
        }));
      }
    }, {
      key: "saveScene",
      value: function saveScene() {
        var value = this.list.state.items[0];

        if (value === undefined) {
          Alert.alert((0, _MHLocalizableString.getString)('warn'), (0, _MHLocalizableString.getString)('tip_playwav'));
          return;
        }

        var action = _miot.Package.entryInfo;
        action.payload.value = [{
          did: _miot.Device.deviceID,
          siid: 6,
          piid: 7,
          value: JSON.stringify({
            type: 'wav',
            data: value.musicName
          })
        }];
        action.payload.name = "" + ((0, _MHLocalizableString.getString)('play') + value.musicName + (0, _MHLocalizableString.getString)('wav'));
        _miot.Package.exitInfo = action;

        _miot.Package.exit();
      }
    }]);
    return PlayWavPage;
  }(_react.default.Component);

  exports.default = PlayWavPage;

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _resources.Styles.common.backgroundColor,
      flex: 1
    },
    btnStyle: {
      margin: 20,
      height: 44,
      backgroundColor: '#cccccc',
      justifyContent: 'center',
      alignItems: 'center'
    }
  });
},10646,[14305,14320,14323,14371,14377,14386,10297,10074,10033,10077,10719,10034,10022,10508,10520,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  function cloneReferencedElement(element, config) {
    var cloneRef = config.ref;
    var originalRef = element.ref;

    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    if (originalRef == null || cloneRef == null) {
      return React.cloneElement.apply(React, [element, config].concat(children));
    }

    if (typeof originalRef !== 'function') {
      return React.cloneElement.apply(React, [element, config].concat(children));
    }

    return React.cloneElement.apply(React, [element, _objectSpread({}, config, {
      ref: function ref(component) {
        cloneRef(component);
        originalRef(component);
      }
    })].concat(children));
  }

  module.exports = cloneReferencedElement;
},10675,[14314,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var reactIs = _$$_REQUIRE(_dependencyMap[0]);

  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
  TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

  function getStatics(component) {
    if (reactIs.isMemo(component)) {
      return MEMO_STATICS;
    }

    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
  }

  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},10993,[10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
  ;
  (function () {
    var undefined;
    var VERSION = '4.17.20';
    var LARGE_ARRAY_SIZE = 200;
    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
        FUNC_ERROR_TEXT = 'Expected a function';
    var HASH_UNDEFINED = '__lodash_hash_undefined__';
    var MAX_MEMOIZE_SIZE = 500;
    var PLACEHOLDER = '__lodash_placeholder__';
    var CLONE_DEEP_FLAG = 1,
        CLONE_FLAT_FLAG = 2,
        CLONE_SYMBOLS_FLAG = 4;
    var COMPARE_PARTIAL_FLAG = 1,
        COMPARE_UNORDERED_FLAG = 2;
    var WRAP_BIND_FLAG = 1,
        WRAP_BIND_KEY_FLAG = 2,
        WRAP_CURRY_BOUND_FLAG = 4,
        WRAP_CURRY_FLAG = 8,
        WRAP_CURRY_RIGHT_FLAG = 16,
        WRAP_PARTIAL_FLAG = 32,
        WRAP_PARTIAL_RIGHT_FLAG = 64,
        WRAP_ARY_FLAG = 128,
        WRAP_REARG_FLAG = 256,
        WRAP_FLIP_FLAG = 512;
    var DEFAULT_TRUNC_LENGTH = 30,
        DEFAULT_TRUNC_OMISSION = '...';
    var HOT_COUNT = 800,
        HOT_SPAN = 16;
    var LAZY_FILTER_FLAG = 1,
        LAZY_MAP_FLAG = 2,
        LAZY_WHILE_FLAG = 3;
    var INFINITY = 1 / 0,
        MAX_SAFE_INTEGER = 9007199254740991,
        MAX_INTEGER = 1.7976931348623157e+308,
        NAN = 0 / 0;
    var MAX_ARRAY_LENGTH = 4294967295,
        MAX_ARRAY_INDEX = 4294967294,
        HALF_MAX_ARRAY_LENGTH = 2147483647;
    var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
    var argsTag = '[object Arguments]',
        arrayTag = '[object Array]',
        asyncTag = '[object AsyncFunction]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        domExcTag = '[object DOMException]',
        errorTag = '[object Error]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        nullTag = '[object Null]',
        objectTag = '[object Object]',
        promiseTag = '[object Promise]',
        proxyTag = '[object Proxy]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        symbolTag = '[object Symbol]',
        undefinedTag = '[object Undefined]',
        weakMapTag = '[object WeakMap]',
        weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';
    var reEmptyStringLeading = /\b__p \+= '';/g,
        reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
        reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
        reUnescapedHtml = /[&<>"']/g,
        reHasEscapedHtml = RegExp(reEscapedHtml.source),
        reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    var reEscape = /<%-([\s\S]+?)%>/g,
        reEvaluate = /<%([\s\S]+?)%>/g,
        reInterpolate = /<%=([\s\S]+?)%>/g;
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        reIsPlainProp = /^\w*$/,
        rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
        reHasRegExpChar = RegExp(reRegExpChar.source);
    var reTrim = /^\s+|\s+$/g,
        reTrimStart = /^\s+/,
        reTrimEnd = /\s+$/;
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
        reSplitDetails = /,? & /;
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reEscapeChar = /\\(\\)?/g;
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var reFlags = /\w*$/;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var reNoMatch = /($^)/;
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    var rsAstralRange = "\\ud800-\\udfff",
        rsComboMarksRange = "\\u0300-\\u036f",
        reComboHalfMarksRange = "\\ufe20-\\ufe2f",
        rsComboSymbolsRange = "\\u20d0-\\u20ff",
        rsComboRange = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
        rsDingbatRange = "\\u2700-\\u27bf",
        rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
        rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
        rsPunctuationRange = "\\u2000-\\u206f",
        rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
        rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        rsVarRange = "\\ufe0e\\ufe0f",
        rsBreakRange = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsApos = "['\u2019]",
        rsAstral = "[\\ud800-\\udfff]",
        rsBreak = "[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]",
        rsCombo = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
        rsDigits = '\\d+',
        rsDingbat = "[\\u2700-\\u27bf]",
        rsLower = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
        rsMisc = "[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
        rsFitz = "\\ud83c[\\udffb-\\udfff]",
        rsModifier = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])",
        rsNonAstral = "[^\\ud800-\\udfff]",
        rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
        rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
        rsUpper = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
        rsZWJ = "\\u200d";
    var rsMiscLower = "(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])",
        rsMiscUpper = "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])",
        rsOptContrLower = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
        rsOptContrUpper = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
        reOptMod = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
        rsOptVar = "[\\ufe0e\\ufe0f]?",
        rsOptJoin = "(?:\\u200d(?:" + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
        rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
        rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
        rsSeq = "[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?" + rsOptJoin,
        rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
        rsSymbol = '(?:' + ["[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?", rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
    var reApos = RegExp(rsApos, 'g');
    var reComboMark = RegExp(rsCombo, 'g');
    var reUnicode = RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|" + rsSymbol + rsSeq, 'g');
    var reUnicodeWord = RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=" + [rsBreak, rsUpper, '$'].join('|') + ')', "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=" + [rsBreak, "[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])", '$'].join('|') + ')', "[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?", "[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?", rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
    var reHasUnicode = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
    var templateCounter = -1;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    var deburredLetters = {
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      "\u0100": 'A',
      "\u0102": 'A',
      "\u0104": 'A',
      "\u0101": 'a',
      "\u0103": 'a',
      "\u0105": 'a',
      "\u0106": 'C',
      "\u0108": 'C',
      "\u010A": 'C',
      "\u010C": 'C',
      "\u0107": 'c',
      "\u0109": 'c',
      "\u010B": 'c',
      "\u010D": 'c',
      "\u010E": 'D',
      "\u0110": 'D',
      "\u010F": 'd',
      "\u0111": 'd',
      "\u0112": 'E',
      "\u0114": 'E',
      "\u0116": 'E',
      "\u0118": 'E',
      "\u011A": 'E',
      "\u0113": 'e',
      "\u0115": 'e',
      "\u0117": 'e',
      "\u0119": 'e',
      "\u011B": 'e',
      "\u011C": 'G',
      "\u011E": 'G',
      "\u0120": 'G',
      "\u0122": 'G',
      "\u011D": 'g',
      "\u011F": 'g',
      "\u0121": 'g',
      "\u0123": 'g',
      "\u0124": 'H',
      "\u0126": 'H',
      "\u0125": 'h',
      "\u0127": 'h',
      "\u0128": 'I',
      "\u012A": 'I',
      "\u012C": 'I',
      "\u012E": 'I',
      "\u0130": 'I',
      "\u0129": 'i',
      "\u012B": 'i',
      "\u012D": 'i',
      "\u012F": 'i',
      "\u0131": 'i',
      "\u0134": 'J',
      "\u0135": 'j',
      "\u0136": 'K',
      "\u0137": 'k',
      "\u0138": 'k',
      "\u0139": 'L',
      "\u013B": 'L',
      "\u013D": 'L',
      "\u013F": 'L',
      "\u0141": 'L',
      "\u013A": 'l',
      "\u013C": 'l',
      "\u013E": 'l',
      "\u0140": 'l',
      "\u0142": 'l',
      "\u0143": 'N',
      "\u0145": 'N',
      "\u0147": 'N',
      "\u014A": 'N',
      "\u0144": 'n',
      "\u0146": 'n',
      "\u0148": 'n',
      "\u014B": 'n',
      "\u014C": 'O',
      "\u014E": 'O',
      "\u0150": 'O',
      "\u014D": 'o',
      "\u014F": 'o',
      "\u0151": 'o',
      "\u0154": 'R',
      "\u0156": 'R',
      "\u0158": 'R',
      "\u0155": 'r',
      "\u0157": 'r',
      "\u0159": 'r',
      "\u015A": 'S',
      "\u015C": 'S',
      "\u015E": 'S',
      "\u0160": 'S',
      "\u015B": 's',
      "\u015D": 's',
      "\u015F": 's',
      "\u0161": 's',
      "\u0162": 'T',
      "\u0164": 'T',
      "\u0166": 'T',
      "\u0163": 't',
      "\u0165": 't',
      "\u0167": 't',
      "\u0168": 'U',
      "\u016A": 'U',
      "\u016C": 'U',
      "\u016E": 'U',
      "\u0170": 'U',
      "\u0172": 'U',
      "\u0169": 'u',
      "\u016B": 'u',
      "\u016D": 'u',
      "\u016F": 'u',
      "\u0171": 'u',
      "\u0173": 'u',
      "\u0174": 'W',
      "\u0175": 'w',
      "\u0176": 'Y',
      "\u0177": 'y',
      "\u0178": 'Y',
      "\u0179": 'Z',
      "\u017B": 'Z',
      "\u017D": 'Z',
      "\u017A": 'z',
      "\u017C": 'z',
      "\u017E": 'z',
      "\u0132": 'IJ',
      "\u0133": 'ij',
      "\u0152": 'Oe',
      "\u0153": 'oe',
      "\u0149": "'n",
      "\u017F": 's'
    };
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };
    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      "\u2028": 'u2028',
      "\u2029": 'u2029'
    };
    var freeParseFloat = parseFloat,
        freeParseInt = parseInt;
    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function('return this')();
    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;

    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require('util').types;

        if (types) {
          return types;
        }

        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
        nodeIsDate = nodeUtil && nodeUtil.isDate,
        nodeIsMap = nodeUtil && nodeUtil.isMap,
        nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
        nodeIsSet = nodeUtil && nodeUtil.isSet,
        nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);

        case 1:
          return func.call(thisArg, args[0]);

        case 2:
          return func.call(thisArg, args[0], args[1]);

        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }

      return func.apply(thisArg, args);
    }

    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }

      return accumulator;
    }

    function arrayEach(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;

      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEvery(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }

      return true;
    }

    function arrayFilter(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }

      return result;
    }

    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }

      return false;
    }

    function arrayMap(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }

      return result;
    }

    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }

      return array;
    }

    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
          length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[++index];
      }

      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }

      return accumulator;
    }

    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[--length];
      }

      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }

      return accumulator;
    }

    function arraySome(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }

      return false;
    }

    var asciiSize = baseProperty('length');

    function asciiToArray(string) {
      return string.split('');
    }

    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
          index = fromIndex + (fromRight ? 1 : -1);

      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }

      return -1;
    }

    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }

      return -1;
    }

    function baseIsNaN(value) {
      return value !== value;
    }

    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }

    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined : object[key];
      };
    }

    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined : object[key];
      };
    }

    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);

      while (length--) {
        array[length] = array[length].value;
      }

      return array;
    }

    function baseSum(array, iteratee) {
      var result,
          index = -1,
          length = array.length;

      while (++index < length) {
        var current = iteratee(array[index]);

        if (current !== undefined) {
          result = result === undefined ? current : result + current;
        }
      }

      return result;
    }

    function baseTimes(n, iteratee) {
      var index = -1,
          result = Array(n);

      while (++index < n) {
        result[index] = iteratee(index);
      }

      return result;
    }

    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }

    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }

    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }

    function cacheHas(cache, key) {
      return cache.has(key);
    }

    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
          length = strSymbols.length;

      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;

      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function countHolders(array, placeholder) {
      var length = array.length,
          result = 0;

      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }

      return result;
    }

    var deburrLetter = basePropertyOf(deburredLetters);
    var escapeHtmlChar = basePropertyOf(htmlEscapes);

    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }

    function getValue(object, key) {
      return object == null ? undefined : object[key];
    }

    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }

    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    function iteratorToArray(iterator) {
      var data,
          result = [];

      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }

      return result;
    }

    function mapToArray(map) {
      var index = -1,
          result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }

    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }

    function replaceHolders(array, placeholder) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }

      return result;
    }

    function setToArray(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }

    function setToPairs(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }

    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }

      return -1;
    }

    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;

      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }

      return index;
    }

    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }

    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }

    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;

      while (reUnicode.test(string)) {
        ++result;
      }

      return result;
    }

    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }

    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    var runInContext = function runInContext(context) {
      context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
      var Array = context.Array,
          Date = context.Date,
          Error = context.Error,
          Function = context.Function,
          Math = context.Math,
          Object = context.Object,
          RegExp = context.RegExp,
          String = context.String,
          TypeError = context.TypeError;
      var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;
      var coreJsData = context['__core-js_shared__'];
      var funcToString = funcProto.toString;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var idCounter = 0;

      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
      }();

      var nativeObjectToString = objectProto.toString;
      var objectCtorString = funcToString.call(Object);
      var oldDash = root._;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      var Buffer = moduleExports ? context.Buffer : undefined,
          Symbol = context.Symbol,
          Uint8Array = context.Uint8Array,
          allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
          getPrototype = overArg(Object.getPrototypeOf, Object),
          objectCreate = Object.create,
          propertyIsEnumerable = objectProto.propertyIsEnumerable,
          splice = arrayProto.splice,
          spreadableSymbol = Symbol ? typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable" : undefined,
          symIterator = Symbol ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : undefined,
          symToStringTag = Symbol ? typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag" : undefined;

      var defineProperty = function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      }();

      var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
          ctxNow = Date && Date.now !== root.Date.now && Date.now,
          ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
      var nativeCeil = Math.ceil,
          nativeFloor = Math.floor,
          nativeGetSymbols = Object.getOwnPropertySymbols,
          nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
          nativeIsFinite = context.isFinite,
          nativeJoin = arrayProto.join,
          nativeKeys = overArg(Object.keys, Object),
          nativeMax = Math.max,
          nativeMin = Math.min,
          nativeNow = Date.now,
          nativeParseInt = context.parseInt,
          nativeRandom = Math.random,
          nativeReverse = arrayProto.reverse;
      var DataView = getNative(context, 'DataView'),
          Map = getNative(context, 'Map'),
          Promise = getNative(context, 'Promise'),
          Set = getNative(context, 'Set'),
          WeakMap = getNative(context, 'WeakMap'),
          nativeCreate = getNative(Object, 'create');
      var metaMap = WeakMap && new WeakMap();
      var realNames = {};
      var dataViewCtorString = toSource(DataView),
          mapCtorString = toSource(Map),
          promiseCtorString = toSource(Promise),
          setCtorString = toSource(Set),
          weakMapCtorString = toSource(WeakMap);
      var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
          symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
          symbolToString = symbolProto ? symbolProto.toString : undefined;

      function lodash(value) {
        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }

          if (hasOwnProperty.call(value, '__wrapped__')) {
            return wrapperClone(value);
          }
        }

        return new LodashWrapper(value);
      }

      var baseCreate = function () {
        function object() {}

        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }

          if (objectCreate) {
            return objectCreate(proto);
          }

          object.prototype = proto;
          var result = new object();
          object.prototype = undefined;
          return result;
        };
      }();

      function baseLodash() {}

      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined;
      }

      lodash.templateSettings = {
        'escape': reEscape,
        'evaluate': reEvaluate,
        'interpolate': reInterpolate,
        'variable': '',
        'imports': {
          '_': lodash
        }
      };
      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;

      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }

      function lazyClone() {
        var result = new LazyWrapper(this.__wrapped__);
        result.__actions__ = copyArray(this.__actions__);
        result.__dir__ = this.__dir__;
        result.__filtered__ = this.__filtered__;
        result.__iteratees__ = copyArray(this.__iteratees__);
        result.__takeCount__ = this.__takeCount__;
        result.__views__ = copyArray(this.__views__);
        return result;
      }

      function lazyReverse() {
        if (this.__filtered__) {
          var result = new LazyWrapper(this);
          result.__dir__ = -1;
          result.__filtered__ = true;
        } else {
          result = this.clone();
          result.__dir__ *= -1;
        }

        return result;
      }

      function lazyValue() {
        var array = this.__wrapped__.value(),
            dir = this.__dir__,
            isArr = isArray(array),
            isRight = dir < 0,
            arrLength = isArr ? array.length : 0,
            view = getView(0, arrLength, this.__views__),
            start = view.start,
            end = view.end,
            length = end - start,
            index = isRight ? end : start - 1,
            iteratees = this.__iteratees__,
            iterLength = iteratees.length,
            resIndex = 0,
            takeCount = nativeMin(length, this.__takeCount__);

        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }

        var result = [];

        outer: while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1,
              value = array[index];

          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex],
                iteratee = data.iteratee,
                type = data.type,
                computed = iteratee(value);

            if (type == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }

          result[resIndex++] = value;
        }

        return result;
      }

      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;

      function Hash(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }

      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }

      function hashGet(key) {
        var data = this.__data__;

        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined : result;
        }

        return hasOwnProperty.call(data, key) ? data[key] : undefined;
      }

      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
      }

      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
        return this;
      }

      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;

      function ListCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }

      function listCacheDelete(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          return false;
        }

        var lastIndex = data.length - 1;

        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }

        --this.size;
        return true;
      }

      function listCacheGet(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);
        return index < 0 ? undefined : data[index][1];
      }

      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }

      function listCacheSet(key, value) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }

        return this;
      }

      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;

      function MapCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          'hash': new Hash(),
          'map': new (Map || ListCache)(),
          'string': new Hash()
        };
      }

      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }

      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }

      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }

      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
            size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }

      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;

      function SetCache(values) {
        var index = -1,
            length = values == null ? 0 : values.length;
        this.__data__ = new MapCache();

        while (++index < length) {
          this.add(values[index]);
        }
      }

      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);

        return this;
      }

      function setCacheHas(value) {
        return this.__data__.has(value);
      }

      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;

      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }

      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }

      function stackDelete(key) {
        var data = this.__data__,
            result = data['delete'](key);
        this.size = data.size;
        return result;
      }

      function stackGet(key) {
        return this.__data__.get(key);
      }

      function stackHas(key) {
        return this.__data__.has(key);
      }

      function stackSet(key, value) {
        var data = this.__data__;

        if (data instanceof ListCache) {
          var pairs = data.__data__;

          if (!Map || pairs.length < 199) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }

          data = this.__data__ = new MapCache(pairs);
        }

        data.set(key, value);
        this.size = data.size;
        return this;
      }

      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;

      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
            isArg = !isArr && isArguments(value),
            isBuff = !isArr && !isArg && isBuffer(value),
            isType = !isArr && !isArg && !isBuff && isTypedArray(value),
            skipIndexes = isArr || isArg || isBuff || isType,
            result = skipIndexes ? baseTimes(value.length, String) : [],
            length = result.length;

        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
            result.push(key);
          }
        }

        return result;
      }

      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined;
      }

      function arraySampleSize(array, n) {
        return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
      }

      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }

      function assignMergeValue(object, key, value) {
        if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assignValue(object, key, value) {
        var objValue = object[key];

        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assocIndexOf(array, key) {
        var length = array.length;

        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }

        return -1;
      }

      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function (value, key, collection) {
          setter(accumulator, value, iteratee(value), collection);
        });
        return accumulator;
      }

      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }

      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }

      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            'configurable': true,
            'enumerable': true,
            'value': value,
            'writable': true
          });
        } else {
          object[key] = value;
        }
      }

      function baseAt(object, paths) {
        var index = -1,
            length = paths.length,
            result = Array(length),
            skip = object == null;

        while (++index < length) {
          result[index] = skip ? undefined : get(object, paths[index]);
        }

        return result;
      }

      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined) {
            number = number <= upper ? number : upper;
          }

          if (lower !== undefined) {
            number = number >= lower ? number : lower;
          }
        }

        return number;
      }

      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result,
            isDeep = bitmask & CLONE_DEEP_FLAG,
            isFlat = bitmask & CLONE_FLAT_FLAG,
            isFull = bitmask & CLONE_SYMBOLS_FLAG;

        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }

        if (result !== undefined) {
          return result;
        }

        if (!isObject(value)) {
          return value;
        }

        var isArr = isArray(value);

        if (isArr) {
          result = initCloneArray(value);

          if (!isDeep) {
            return copyArray(value, result);
          }
        } else {
          var tag = getTag(value),
              isFunc = tag == funcTag || tag == genTag;

          if (isBuffer(value)) {
            return cloneBuffer(value, isDeep);
          }

          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject(value);

            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }

            result = initCloneByTag(value, tag, isDeep);
          }
        }

        stack || (stack = new Stack());
        var stacked = stack.get(value);

        if (stacked) {
          return stacked;
        }

        stack.set(value, result);

        if (isSet(value)) {
          value.forEach(function (subValue) {
            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function (subValue, key) {
            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
          });
        }

        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined : keysFunc(value);
        arrayEach(props || value, function (subValue, key) {
          if (props) {
            key = subValue;
            subValue = value[key];
          }

          assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }

      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }

      function baseConformsTo(object, source, props) {
        var length = props.length;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (length--) {
          var key = props[length],
              predicate = source[key],
              value = object[key];

          if (value === undefined && !(key in object) || !predicate(value)) {
            return false;
          }
        }

        return true;
      }

      function baseDelay(func, wait, args) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return setTimeout(function () {
          func.apply(undefined, args);
        }, wait);
      }

      function baseDifference(array, values, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            isCommon = true,
            length = array.length,
            result = [],
            valuesLength = values.length;

        if (!length) {
          return result;
        }

        if (iteratee) {
          values = arrayMap(values, baseUnary(iteratee));
        }

        if (comparator) {
          includes = arrayIncludesWith;
          isCommon = false;
        } else if (values.length >= LARGE_ARRAY_SIZE) {
          includes = cacheHas;
          isCommon = false;
          values = new SetCache(values);
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;

            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }

            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }

        return result;
      }

      var baseEach = createBaseEach(baseForOwn);
      var baseEachRight = createBaseEach(baseForOwnRight, true);

      function baseEvery(collection, predicate) {
        var result = true;
        baseEach(collection, function (value, index, collection) {
          result = !!predicate(value, index, collection);
          return result;
        });
        return result;
      }

      function baseExtremum(array, iteratee, comparator) {
        var index = -1,
            length = array.length;

        while (++index < length) {
          var value = array[index],
              current = iteratee(value);

          if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
            var computed = current,
                result = value;
          }
        }

        return result;
      }

      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end === undefined || end > length ? length : toInteger(end);

        if (end < 0) {
          end += length;
        }

        end = start > end ? 0 : toLength(end);

        while (start < end) {
          array[start++] = value;
        }

        return array;
      }

      function baseFilter(collection, predicate) {
        var result = [];
        baseEach(collection, function (value, index, collection) {
          if (predicate(value, index, collection)) {
            result.push(value);
          }
        });
        return result;
      }

      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index = -1,
            length = array.length;
        predicate || (predicate = isFlattenable);
        result || (result = []);

        while (++index < length) {
          var value = array[index];

          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              arrayPush(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }

        return result;
      }

      var baseFor = createBaseFor();
      var baseForRight = createBaseFor(true);

      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }

      function baseForOwnRight(object, iteratee) {
        return object && baseForRight(object, iteratee, keys);
      }

      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction(object[key]);
        });
      }

      function baseGet(object, path) {
        path = castPath(path, object);
        var index = 0,
            length = path.length;

        while (object != null && index < length) {
          object = object[toKey(path[index++])];
        }

        return index && index == length ? object : undefined;
      }

      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
      }

      function baseGetTag(value) {
        if (value == null) {
          return value === undefined ? undefinedTag : nullTag;
        }

        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }

      function baseGt(value, other) {
        return value > other;
      }

      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }

      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }

      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }

      function baseIntersection(arrays, iteratee, comparator) {
        var includes = comparator ? arrayIncludesWith : arrayIncludes,
            length = arrays[0].length,
            othLength = arrays.length,
            othIndex = othLength,
            caches = Array(othLength),
            maxLength = Infinity,
            result = [];

        while (othIndex--) {
          var array = arrays[othIndex];

          if (othIndex && iteratee) {
            array = arrayMap(array, baseUnary(iteratee));
          }

          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
        }

        array = arrays[0];
        var index = -1,
            seen = caches[0];

        outer: while (++index < length && result.length < maxLength) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;

            while (--othIndex) {
              var cache = caches[othIndex];

              if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }

            if (seen) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function (value, key, object) {
          setter(accumulator, iteratee(value), key, object);
        });
        return accumulator;
      }

      function baseInvoke(object, path, args) {
        path = castPath(path, object);
        object = parent(object, path);
        var func = object == null ? object : object[toKey(last(path))];
        return func == null ? undefined : apply(func, object, args);
      }

      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }

      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }

      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }

      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }

        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }

        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }

      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray(object),
            othIsArr = isArray(other),
            objTag = objIsArr ? arrayTag : getTag(object),
            othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag,
            othIsObj = othTag == objectTag,
            isSameTag = objTag == othTag;

        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }

          objIsArr = true;
          objIsObj = false;
        }

        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }

        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
              othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object,
                othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }

        if (!isSameTag) {
          return false;
        }

        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }

      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }

      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length,
            length = index,
            noCustomizer = !customizer;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (index--) {
          var data = matchData[index];

          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }

        while (++index < length) {
          data = matchData[index];
          var key = data[0],
              objValue = object[key],
              srcValue = data[1];

          if (noCustomizer && data[2]) {
            if (objValue === undefined && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();

            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }

            if (!(result === undefined ? baseIsEqual(srcValue, objValue, 3, customizer, stack) : result)) {
              return false;
            }
          }
        }

        return true;
      }

      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }

        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }

      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }

      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }

      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }

      function baseIteratee(value) {
        if (typeof value == 'function') {
          return value;
        }

        if (value == null) {
          return identity;
        }

        if (typeof value == 'object') {
          return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }

        return property(value);
      }

      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }

        var result = [];

        for (var key in Object(object)) {
          if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
          }
        }

        return result;
      }

      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }

        var isProto = isPrototype(object),
            result = [];

        for (var key in object) {
          if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
            result.push(key);
          }
        }

        return result;
      }

      function baseLt(value, other) {
        return value < other;
      }

      function baseMap(collection, iteratee) {
        var index = -1,
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value, key, collection) {
          result[++index] = iteratee(value, key, collection);
        });
        return result;
      }

      function baseMatches(source) {
        var matchData = getMatchData(source);

        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }

        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }

      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }

        return function (object) {
          var objValue = get(object, path);
          return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, 3);
        };
      }

      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }

        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());

          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;

            if (newValue === undefined) {
              newValue = srcValue;
            }

            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }

      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key),
            srcValue = safeGet(source, key),
            stacked = stack.get(srcValue);

        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }

        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
        var isCommon = newValue === undefined;

        if (isCommon) {
          var isArr = isArray(srcValue),
              isBuff = !isArr && isBuffer(srcValue),
              isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;

          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;

            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }

        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }

        assignMergeValue(object, key, newValue);
      }

      function baseNth(array, n) {
        var length = array.length;

        if (!length) {
          return;
        }

        n += n < 0 ? length : 0;
        return isIndex(n, length) ? array[n] : undefined;
      }

      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee) {
            if (isArray(iteratee)) {
              return function (value) {
                return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
              };
            }

            return iteratee;
          });
        } else {
          iteratees = [identity];
        }

        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result = baseMap(collection, function (value, key, collection) {
          var criteria = arrayMap(iteratees, function (iteratee) {
            return iteratee(value);
          });
          return {
            'criteria': criteria,
            'index': ++index,
            'value': value
          };
        });
        return baseSortBy(result, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }

      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path) {
          return hasIn(object, path);
        });
      }

      function basePickBy(object, paths, predicate) {
        var index = -1,
            length = paths.length,
            result = {};

        while (++index < length) {
          var path = paths[index],
              value = baseGet(object, path);

          if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
          }
        }

        return result;
      }

      function basePropertyDeep(path) {
        return function (object) {
          return baseGet(object, path);
        };
      }

      function basePullAll(array, values, iteratee, comparator) {
        var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
            index = -1,
            length = values.length,
            seen = array;

        if (array === values) {
          values = copyArray(values);
        }

        if (iteratee) {
          seen = arrayMap(array, baseUnary(iteratee));
        }

        while (++index < length) {
          var fromIndex = 0,
              value = values[index],
              computed = iteratee ? iteratee(value) : value;

          while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
            if (seen !== array) {
              splice.call(seen, fromIndex, 1);
            }

            splice.call(array, fromIndex, 1);
          }
        }

        return array;
      }

      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0,
            lastIndex = length - 1;

        while (length--) {
          var index = indexes[length];

          if (length == lastIndex || index !== previous) {
            var previous = index;

            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }

        return array;
      }

      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }

      function baseRange(start, end, step, fromRight) {
        var index = -1,
            length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
            result = Array(length);

        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }

        return result;
      }

      function baseRepeat(string, n) {
        var result = '';

        if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
          return result;
        }

        do {
          if (n % 2) {
            result += string;
          }

          n = nativeFloor(n / 2);

          if (n) {
            string += string;
          }
        } while (n);

        return result;
      }

      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }

      function baseSample(collection) {
        return arraySample(values(collection));
      }

      function baseSampleSize(collection, n) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n, 0, array.length));
      }

      function baseSet(object, path, value, customizer) {
        if (!isObject(object)) {
          return object;
        }

        path = castPath(path, object);
        var index = -1,
            length = path.length,
            lastIndex = length - 1,
            nested = object;

        while (nested != null && ++index < length) {
          var key = toKey(path[index]),
              newValue = value;

          if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return object;
          }

          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined;

            if (newValue === undefined) {
              newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
            }
          }

          assignValue(nested, key, newValue);
          nested = nested[key];
        }

        return object;
      }

      var baseSetData = !metaMap ? identity : function (func, data) {
        metaMap.set(func, data);
        return func;
      };
      var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
          'configurable': true,
          'enumerable': false,
          'value': constant(string),
          'writable': true
        });
      };

      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }

      function baseSlice(array, start, end) {
        var index = -1,
            length = array.length;

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end > length ? length : end;

        if (end < 0) {
          end += length;
        }

        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);

        while (++index < length) {
          result[index] = array[index + start];
        }

        return result;
      }

      function baseSome(collection, predicate) {
        var result;
        baseEach(collection, function (value, index, collection) {
          result = predicate(value, index, collection);
          return !result;
        });
        return !!result;
      }

      function baseSortedIndex(array, value, retHighest) {
        var low = 0,
            high = array == null ? low : array.length;

        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1,
                computed = array[mid];

            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }

          return high;
        }

        return baseSortedIndexBy(array, value, identity, retHighest);
      }

      function baseSortedIndexBy(array, value, iteratee, retHighest) {
        var low = 0,
            high = array == null ? 0 : array.length;

        if (high === 0) {
          return 0;
        }

        value = iteratee(value);
        var valIsNaN = value !== value,
            valIsNull = value === null,
            valIsSymbol = isSymbol(value),
            valIsUndefined = value === undefined;

        while (low < high) {
          var mid = nativeFloor((low + high) / 2),
              computed = iteratee(array[mid]),
              othIsDefined = computed !== undefined,
              othIsNull = computed === null,
              othIsReflexive = computed === computed,
              othIsSymbol = isSymbol(computed);

          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }

          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }

        return nativeMin(high, MAX_ARRAY_INDEX);
      }

      function baseSortedUniq(array, iteratee) {
        var index = -1,
            length = array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;

          if (!index || !eq(computed, seen)) {
            var seen = computed;
            result[resIndex++] = value === 0 ? 0 : value;
          }
        }

        return result;
      }

      function baseToNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        return +value;
      }

      function baseToString(value) {
        if (typeof value == 'string') {
          return value;
        }

        if (isArray(value)) {
          return arrayMap(value, baseToString) + '';
        }

        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : '';
        }

        var result = value + '';
        return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
      }

      function baseUniq(array, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            length = array.length,
            isCommon = true,
            result = [],
            seen = result;

        if (comparator) {
          isCommon = false;
          includes = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set = iteratee ? null : createSet(array);

          if (set) {
            return setToArray(set);
          }

          isCommon = false;
          includes = cacheHas;
          seen = new SetCache();
        } else {
          seen = iteratee ? [] : result;
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var seenIndex = seen.length;

            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }

            if (iteratee) {
              seen.push(computed);
            }

            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseUnset(object, path) {
        path = castPath(path, object);
        object = parent(object, path);
        return object == null || delete object[toKey(last(path))];
      }

      function baseUpdate(object, path, updater, customizer) {
        return baseSet(object, path, updater(baseGet(object, path)), customizer);
      }

      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length,
            index = fromRight ? length : -1;

        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }

      function baseWrapperValue(value, actions) {
        var result = value;

        if (result instanceof LazyWrapper) {
          result = result.value();
        }

        return arrayReduce(actions, function (result, action) {
          return action.func.apply(action.thisArg, arrayPush([result], action.args));
        }, result);
      }

      function baseXor(arrays, iteratee, comparator) {
        var length = arrays.length;

        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }

        var index = -1,
            result = Array(length);

        while (++index < length) {
          var array = arrays[index],
              othIndex = -1;

          while (++othIndex < length) {
            if (othIndex != index) {
              result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
          }
        }

        return baseUniq(baseFlatten(result, 1), iteratee, comparator);
      }

      function baseZipObject(props, values, assignFunc) {
        var index = -1,
            length = props.length,
            valsLength = values.length,
            result = {};

        while (++index < length) {
          var value = index < valsLength ? values[index] : undefined;
          assignFunc(result, props[index], value);
        }

        return result;
      }

      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }

      function castFunction(value) {
        return typeof value == 'function' ? value : identity;
      }

      function castPath(value, object) {
        if (isArray(value)) {
          return value;
        }

        return isKey(value, object) ? [value] : stringToPath(toString(value));
      }

      var castRest = baseRest;

      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }

      var clearTimeout = ctxClearTimeout || function (id) {
        return root.clearTimeout(id);
      };

      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }

        var length = buffer.length,
            result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result);
        return result;
      }

      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }

      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }

      function cloneRegExp(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }

      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }

      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }

      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined,
              valIsNull = value === null,
              valIsReflexive = value === value,
              valIsSymbol = isSymbol(value);
          var othIsDefined = other !== undefined,
              othIsNull = other === null,
              othIsReflexive = other === other,
              othIsSymbol = isSymbol(other);

          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }

          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }

        return 0;
      }

      function compareMultiple(object, other, orders) {
        var index = -1,
            objCriteria = object.criteria,
            othCriteria = other.criteria,
            length = objCriteria.length,
            ordersLength = orders.length;

        while (++index < length) {
          var result = compareAscending(objCriteria[index], othCriteria[index]);

          if (result) {
            if (index >= ordersLength) {
              return result;
            }

            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
          }
        }

        return object.index - other.index;
      }

      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersLength = holders.length,
            leftIndex = -1,
            leftLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(leftLength + rangeLength),
            isUncurried = !isCurried;

        while (++leftIndex < leftLength) {
          result[leftIndex] = partials[leftIndex];
        }

        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[holders[argsIndex]] = args[argsIndex];
          }
        }

        while (rangeLength--) {
          result[leftIndex++] = args[argsIndex++];
        }

        return result;
      }

      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersIndex = -1,
            holdersLength = holders.length,
            rightIndex = -1,
            rightLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(rangeLength + rightLength),
            isUncurried = !isCurried;

        while (++argsIndex < rangeLength) {
          result[argsIndex] = args[argsIndex];
        }

        var offset = argsIndex;

        while (++rightIndex < rightLength) {
          result[offset + rightIndex] = partials[rightIndex];
        }

        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }

        return result;
      }

      function copyArray(source, array) {
        var index = -1,
            length = source.length;
        array || (array = Array(length));

        while (++index < length) {
          array[index] = source[index];
        }

        return array;
      }

      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

          if (newValue === undefined) {
            newValue = source[key];
          }

          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }

        return object;
      }

      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }

      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }

      function createAggregator(setter, initializer) {
        return function (collection, iteratee) {
          var func = isArray(collection) ? arrayAggregator : baseAggregator,
              accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee, 2), accumulator);
        };
      }

      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
              length = sources.length,
              customizer = length > 1 ? sources[length - 1] : undefined,
              guard = length > 2 ? sources[2] : undefined;
          customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined : customizer;
            length = 1;
          }

          object = Object(object);

          while (++index < length) {
            var source = sources[index];

            if (source) {
              assigner(object, source, index, customizer);
            }
          }

          return object;
        });
      }

      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee) {
          if (collection == null) {
            return collection;
          }

          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }

          var length = collection.length,
              index = fromRight ? length : -1,
              iterable = Object(collection);

          while (fromRight ? index-- : ++index < length) {
            if (iteratee(iterable[index], index, iterable) === false) {
              break;
            }
          }

          return collection;
        };
      }

      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
              iterable = Object(object),
              props = keysFunc(object),
              length = props.length;

          while (length--) {
            var key = props[fromRight ? length : ++index];

            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }

          return object;
        };
      }

      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }

        return wrapper;
      }

      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }

      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
        };
      }

      function createCtor(Ctor) {
        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return new Ctor();

            case 1:
              return new Ctor(args[0]);

            case 2:
              return new Ctor(args[0], args[1]);

            case 3:
              return new Ctor(args[0], args[1], args[2]);

            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);

            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);

            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }

          var thisBinding = baseCreate(Ctor.prototype),
              result = Ctor.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        };
      }

      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length,
              placeholder = getHolder(wrapper);

          while (index--) {
            args[index] = arguments[index];
          }

          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;

          if (length < arity) {
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
          }

          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }

        return wrapper;
      }

      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object(collection);

          if (!isArrayLike(collection)) {
            var iteratee = getIteratee(predicate, 3);
            collection = keys(collection);

            predicate = function predicate(key) {
              return iteratee(iterable[key], key, iterable);
            };
          }

          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
        };
      }

      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length,
              index = length,
              prereq = LodashWrapper.prototype.thru;

          if (fromRight) {
            funcs.reverse();
          }

          while (index--) {
            var func = funcs[index];

            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }

            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
              var wrapper = new LodashWrapper([], true);
            }
          }

          index = wrapper ? index : length;

          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func),
                data = funcName == 'wrapper' ? getData(func) : undefined;

            if (data && isLaziable(data[0]) && data[1] == 424 && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }

          return function () {
            var args = arguments,
                value = args[0];

            if (wrapper && args.length == 1 && isArray(value)) {
              return wrapper.plant(value).value();
            }

            var index = 0,
                result = length ? funcs[index].apply(this, args) : value;

            while (++index < length) {
              result = funcs[index].call(this, result);
            }

            return result;
          };
        });
      }

      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG,
            isBind = bitmask & WRAP_BIND_FLAG,
            isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
            isCurried = bitmask & 24,
            isFlip = bitmask & WRAP_FLIP_FLAG,
            Ctor = isBindKey ? undefined : createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length;

          while (index--) {
            args[index] = arguments[index];
          }

          if (isCurried) {
            var placeholder = getHolder(wrapper),
                holdersCount = countHolders(args, placeholder);
          }

          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }

          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }

          length -= holdersCount;

          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
          }

          var thisBinding = isBind ? thisArg : this,
              fn = isBindKey ? thisBinding[func] : func;
          length = args.length;

          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }

          if (isAry && ary < length) {
            args.length = ary;
          }

          if (this && this !== root && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }

          return fn.apply(thisBinding, args);
        }

        return wrapper;
      }

      function createInverter(setter, toIteratee) {
        return function (object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }

      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result;

          if (value === undefined && other === undefined) {
            return defaultValue;
          }

          if (value !== undefined) {
            result = value;
          }

          if (other !== undefined) {
            if (result === undefined) {
              return other;
            }

            if (typeof value == 'string' || typeof other == 'string') {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }

            result = operator(value, other);
          }

          return result;
        };
      }

      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee) {
              return apply(iteratee, thisArg, args);
            });
          });
        });
      }

      function createPadding(length, chars) {
        chars = chars === undefined ? ' ' : baseToString(chars);
        var charsLength = chars.length;

        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars, length) : chars;
        }

        var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
        return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
      }

      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var argsIndex = -1,
              argsLength = arguments.length,
              leftIndex = -1,
              leftLength = partials.length,
              args = Array(leftLength + argsLength),
              fn = this && this !== root && this instanceof wrapper ? Ctor : func;

          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }

          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }

          return apply(fn, isBind ? thisArg : this, args);
        }

        return wrapper;
      }

      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
            end = step = undefined;
          }

          start = toFinite(start);

          if (end === undefined) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }

          step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }

      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == 'string' && typeof other == 'string')) {
            value = toNumber(value);
            other = toNumber(other);
          }

          return operator(value, other);
        };
      }

      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG,
            newHolders = isCurry ? holders : undefined,
            newHoldersRight = isCurry ? undefined : holders,
            newPartials = isCurry ? partials : undefined,
            newPartialsRight = isCurry ? undefined : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= -4;
        }

        var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
        var result = wrapFunc.apply(undefined, newData);

        if (isLaziable(func)) {
          setData(result, newData);
        }

        result.placeholder = placeholder;
        return setWrapToString(result, func, bitmask);
      }

      function createRound(methodName) {
        var func = Math[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);

          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + 'e').split('e'),
                value = func(pair[0] + 'e' + (+pair[1] + precision));
            pair = (toString(value) + 'e').split('e');
            return +(pair[0] + 'e' + (+pair[1] - precision));
          }

          return func(number);
        };
      }

      var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
        return new Set(values);
      };

      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);

          if (tag == mapTag) {
            return mapToArray(object);
          }

          if (tag == setTag) {
            return setToPairs(object);
          }

          return baseToPairs(object, keysFunc(object));
        };
      }

      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;

        if (!isBindKey && typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var length = partials ? partials.length : 0;

        if (!length) {
          bitmask &= -97;
          partials = holders = undefined;
        }

        ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
        arity = arity === undefined ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;

        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials,
              holdersRight = holders;
          partials = holders = undefined;
        }

        var data = isBindKey ? undefined : getData(func);
        var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

        if (data) {
          mergeData(newData, data);
        }

        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

        if (!arity && bitmask & 24) {
          bitmask &= -25;
        }

        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == 33) && !holders.length) {
          result = createPartial(func, bitmask, thisArg, partials);
        } else {
          result = createHybrid.apply(undefined, newData);
        }

        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result, newData), func, bitmask);
      }

      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }

        return objValue;
      }

      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
          stack['delete'](srcValue);
        }

        return objValue;
      }

      function customOmitClone(value) {
        return isPlainObject(value) ? undefined : value;
      }

      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            arrLength = array.length,
            othLength = other.length;

        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }

        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);

        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }

        var index = -1,
            result = true,
            seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
        stack.set(array, other);
        stack.set(other, array);

        while (++index < arrLength) {
          var arrValue = array[index],
              othValue = other[index];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }

          if (compared !== undefined) {
            if (compared) {
              continue;
            }

            result = false;
            break;
          }

          if (seen) {
            if (!arraySome(other, function (othValue, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }

        stack['delete'](array);
        stack['delete'](other);
        return result;
      }

      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }

            object = object.buffer;
            other = other.buffer;

          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
              return false;
            }

            return true;

          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);

          case errorTag:
            return object.name == other.name && object.message == other.message;

          case regexpTag:
          case stringTag:
            return object == other + '';

          case mapTag:
            var convert = mapToArray;

          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);

            if (object.size != other.size && !isPartial) {
              return false;
            }

            var stacked = stack.get(object);

            if (stacked) {
              return stacked == other;
            }

            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;

          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }

        }

        return false;
      }

      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            objProps = getAllKeys(object),
            objLength = objProps.length,
            othProps = getAllKeys(other),
            othLength = othProps.length;

        if (objLength != othLength && !isPartial) {
          return false;
        }

        var index = objLength;

        while (index--) {
          var key = objProps[index];

          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }

        var objStacked = stack.get(object);
        var othStacked = stack.get(other);

        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }

        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;

        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key],
              othValue = other[key];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }

          if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }

          skipCtor || (skipCtor = key == 'constructor');
        }

        if (result && !skipCtor) {
          var objCtor = object.constructor,
              othCtor = other.constructor;

          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
          }
        }

        stack['delete'](object);
        stack['delete'](other);
        return result;
      }

      function flatRest(func) {
        return setToString(overRest(func, undefined, flatten), func + '');
      }

      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }

      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }

      var getData = !metaMap ? noop : function (func) {
        return metaMap.get(func);
      };

      function getFuncName(func) {
        var result = func.name + '',
            array = realNames[result],
            length = hasOwnProperty.call(realNames, result) ? array.length : 0;

        while (length--) {
          var data = array[length],
              otherFunc = data.func;

          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }

        return result;
      }

      function getHolder(func) {
        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
        return object.placeholder;
      }

      function getIteratee() {
        var result = lodash.iteratee || iteratee;
        result = result === iteratee ? baseIteratee : result;
        return arguments.length ? result(arguments[0], arguments[1]) : result;
      }

      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
      }

      function getMatchData(object) {
        var result = keys(object),
            length = result.length;

        while (length--) {
          var key = result[length],
              value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }

        return result;
      }

      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined;
      }

      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);
        {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }

        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result = [];

        while (object) {
          arrayPush(result, getSymbols(object));
          object = getPrototype(object);
        }

        return result;
      };
      var getTag = baseGetTag;

      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function getTag(value) {
          var result = baseGetTag(value),
              Ctor = result == objectTag ? value.constructor : undefined,
              ctorString = Ctor ? toSource(Ctor) : '';

          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;

              case mapCtorString:
                return mapTag;

              case promiseCtorString:
                return promiseTag;

              case setCtorString:
                return setTag;

              case weakMapCtorString:
                return weakMapTag;
            }
          }

          return result;
        };
      }

      function getView(start, end, transforms) {
        var index = -1,
            length = transforms.length;

        while (++index < length) {
          var data = transforms[index],
              size = data.size;

          switch (data.type) {
            case 'drop':
              start += size;
              break;

            case 'dropRight':
              end -= size;
              break;

            case 'take':
              end = nativeMin(end, start + size);
              break;

            case 'takeRight':
              start = nativeMax(start, end - size);
              break;
          }
        }

        return {
          'start': start,
          'end': end
        };
      }

      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }

      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index = -1,
            length = path.length,
            result = false;

        while (++index < length) {
          var key = toKey(path[index]);

          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }

          object = object[key];
        }

        if (result || ++index != length) {
          return result;
        }

        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
      }

      function initCloneArray(array) {
        var length = array.length,
            result = new array.constructor(length);

        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
          result.index = array.index;
          result.input = array.input;
        }

        return result;
      }

      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }

      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;

        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);

          case boolTag:
          case dateTag:
            return new Ctor(+object);

          case dataViewTag:
            return cloneDataView(object, isDeep);

          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);

          case mapTag:
            return new Ctor();

          case numberTag:
          case stringTag:
            return new Ctor(object);

          case regexpTag:
            return cloneRegExp(object);

          case setTag:
            return new Ctor();

          case symbolTag:
            return cloneSymbol(object);
        }
      }

      function insertWrapDetails(source, details) {
        var length = details.length;

        if (!length) {
          return source;
        }

        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
        details = details.join(length > 2 ? ', ' : ' ');
        return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
      }

      function isFlattenable(value) {
        return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }

      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
      }

      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }

        var type = typeof index;

        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
          return eq(object[index], value);
        }

        return false;
      }

      function isKey(value, object) {
        if (isArray(value)) {
          return false;
        }

        var type = typeof value;

        if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
          return true;
        }

        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }

      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
      }

      function isLaziable(func) {
        var funcName = getFuncName(func),
            other = lodash[funcName];

        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
          return false;
        }

        if (func === other) {
          return true;
        }

        var data = getData(other);
        return !!data && func === data[0];
      }

      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }

      var isMaskable = coreJsData ? isFunction : stubFalse;

      function isPrototype(value) {
        var Ctor = value && value.constructor,
            proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
      }

      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }

      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }

          return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
        };
      }

      function memoizeCapped(func) {
        var result = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }

          return key;
        });
        var cache = result.cache;
        return result;
      }

      function mergeData(data, source) {
        var bitmask = data[1],
            srcBitmask = source[1],
            newBitmask = bitmask | srcBitmask,
            isCommon = newBitmask < 131;
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == 384 && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

        if (!(isCommon || isCombo)) {
          return data;
        }

        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }

        var value = source[3];

        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }

        value = source[5];

        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }

        value = source[7];

        if (value) {
          data[7] = value;
        }

        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }

        if (data[9] == null) {
          data[9] = source[9];
        }

        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }

      function nativeKeysIn(object) {
        var result = [];

        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }

        return result;
      }

      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      function overRest(func, start, transform) {
        start = nativeMax(start === undefined ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
              index = -1,
              length = nativeMax(args.length - start, 0),
              array = Array(length);

          while (++index < length) {
            array[index] = args[start + index];
          }

          index = -1;
          var otherArgs = Array(start + 1);

          while (++index < start) {
            otherArgs[index] = args[index];
          }

          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }

      function parent(object, path) {
        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
      }

      function reorder(array, indexes) {
        var arrLength = array.length,
            length = nativeMin(indexes.length, arrLength),
            oldArray = copyArray(array);

        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
        }

        return array;
      }

      function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
          return;
        }

        if (key == '__proto__') {
          return;
        }

        return object[key];
      }

      var setData = shortOut(baseSetData);

      var setTimeout = ctxSetTimeout || function (func, wait) {
        return root.setTimeout(func, wait);
      };

      var setToString = shortOut(baseSetToString);

      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + '';
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }

      function shortOut(func) {
        var count = 0,
            lastCalled = 0;
        return function () {
          var stamp = nativeNow(),
              remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;

          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }

          return func.apply(undefined, arguments);
        };
      }

      function shuffleSelf(array, size) {
        var index = -1,
            length = array.length,
            lastIndex = length - 1;
        size = size === undefined ? length : size;

        while (++index < size) {
          var rand = baseRandom(index, lastIndex),
              value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }

        array.length = size;
        return array;
      }

      var stringToPath = memoizeCapped(function (string) {
        var result = [];

        if (string.charCodeAt(0) === 46) {
            result.push('');
          }

        string.replace(rePropName, function (match, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
        });
        return result;
      });

      function toKey(value) {
        if (typeof value == 'string' || isSymbol(value)) {
          return value;
        }

        var result = value + '';
        return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
      }

      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}

          try {
            return func + '';
          } catch (e) {}
        }

        return '';
      }

      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = '_.' + pair[0];

          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }

      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }

        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result.__actions__ = copyArray(wrapper.__actions__);
        result.__index__ = wrapper.__index__;
        result.__values__ = wrapper.__values__;
        return result;
      }

      function chunk(array, size, guard) {
        if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
          size = 1;
        } else {
          size = nativeMax(toInteger(size), 0);
        }

        var length = array == null ? 0 : array.length;

        if (!length || size < 1) {
          return [];
        }

        var index = 0,
            resIndex = 0,
            result = Array(nativeCeil(length / size));

        while (index < length) {
          result[resIndex++] = baseSlice(array, index, index += size);
        }

        return result;
      }

      function compact(array) {
        var index = -1,
            length = array == null ? 0 : array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index];

          if (value) {
            result[resIndex++] = value;
          }
        }

        return result;
      }

      function concat() {
        var length = arguments.length;

        if (!length) {
          return [];
        }

        var args = Array(length - 1),
            array = arguments[0],
            index = length;

        while (index--) {
          args[index - 1] = arguments[index];
        }

        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }

      var difference = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
      });
      var differenceBy = baseRest(function (array, values) {
        var iteratee = last(values);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
      });
      var differenceWith = baseRest(function (array, values) {
        var comparator = last(values);

        if (isArrayLikeObject(comparator)) {
          comparator = undefined;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
      });

      function drop(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function dropRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }

      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }

      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }

        return baseFill(array, value, start, end);
      }

      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }

      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length - 1;

        if (fromIndex !== undefined) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }

      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }

      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }

      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        depth = depth === undefined ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }

      function fromPairs(pairs) {
        var index = -1,
            length = pairs == null ? 0 : pairs.length,
            result = {};

        while (++index < length) {
          var pair = pairs[index];
          result[pair[0]] = pair[1];
        }

        return result;
      }

      function head(array) {
        return array && array.length ? array[0] : undefined;
      }

      function indexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseIndexOf(array, value, index);
      }

      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }

      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });
      var intersectionBy = baseRest(function (arrays) {
        var iteratee = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);

        if (iteratee === last(mapped)) {
          iteratee = undefined;
        } else {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
      });
      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == 'function' ? comparator : undefined;

        if (comparator) {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
      });

      function join(array, separator) {
        return array == null ? '' : nativeJoin.call(array, separator);
      }

      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined;
      }

      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length;

        if (fromIndex !== undefined) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }

      function nth(array, n) {
        return array && array.length ? baseNth(array, toInteger(n)) : undefined;
      }

      var pull = baseRest(pullAll);

      function pullAll(array, values) {
        return array && array.length && values && values.length ? basePullAll(array, values) : array;
      }

      function pullAllBy(array, values, iteratee) {
        return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
      }

      function pullAllWith(array, values, comparator) {
        return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
      }

      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length,
            result = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result;
      });

      function remove(array, predicate) {
        var result = [];

        if (!(array && array.length)) {
          return result;
        }

        var index = -1,
            indexes = [],
            length = array.length;
        predicate = getIteratee(predicate, 3);

        while (++index < length) {
          var value = array[index];

          if (predicate(value, index, array)) {
            result.push(value);
            indexes.push(index);
          }
        }

        basePullAt(array, indexes);
        return result;
      }

      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }

      function slice(array, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined ? length : toInteger(end);
        }

        return baseSlice(array, start, end);
      }

      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }

      function sortedIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
      }

      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value);

          if (index < length && eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }

      function sortedLastIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
      }

      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;

          if (eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }

      function sortedUniqBy(array, iteratee) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }

      function take(array, n, guard) {
        if (!(array && array.length)) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function takeRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }

      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }

      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });
      var unionBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
      });
      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
      });

      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }

      function uniqBy(array, iteratee) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function uniqWith(array, comparator) {
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return array && array.length ? baseUniq(array, undefined, comparator) : [];
      }

      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }

        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }

      function unzipWith(array, iteratee) {
        if (!(array && array.length)) {
          return [];
        }

        var result = unzip(array);

        if (iteratee == null) {
          return result;
        }

        return arrayMap(result, function (group) {
          return apply(iteratee, undefined, group);
        });
      }

      var without = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, values) : [];
      });
      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });
      var xorBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
      });
      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
      });
      var zip = baseRest(unzip);

      function zipObject(props, values) {
        return baseZipObject(props || [], values || [], assignValue);
      }

      function zipObjectDeep(props, values) {
        return baseZipObject(props || [], values || [], baseSet);
      }

      var zipWith = baseRest(function (arrays) {
        var length = arrays.length,
            iteratee = length > 1 ? arrays[length - 1] : undefined;
        iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
        return unzipWith(arrays, iteratee);
      });

      function chain(value) {
        var result = lodash(value);
        result.__chain__ = true;
        return result;
      }

      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }

      function thru(value, interceptor) {
        return interceptor(value);
      }

      var wrapperAt = flatRest(function (paths) {
        var length = paths.length,
            start = length ? paths[0] : 0,
            value = this.__wrapped__,
            interceptor = function interceptor(object) {
          return baseAt(object, paths);
        };

        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }

        value = value.slice(start, +start + (length ? 1 : 0));

        value.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined
        });

        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined);
          }

          return array;
        });
      });

      function wrapperChain() {
        return chain(this);
      }

      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }

      function wrapperNext() {
        if (this.__values__ === undefined) {
          this.__values__ = toArray(this.value());
        }

        var done = this.__index__ >= this.__values__.length,
            value = done ? undefined : this.__values__[this.__index__++];
        return {
          'done': done,
          'value': value
        };
      }

      function wrapperToIterator() {
        return this;
      }

      function wrapperPlant(value) {
        var result,
            parent = this;

        while (parent instanceof baseLodash) {
          var clone = wrapperClone(parent);
          clone.__index__ = 0;
          clone.__values__ = undefined;

          if (result) {
            previous.__wrapped__ = clone;
          } else {
            result = clone;
          }

          var previous = clone;
          parent = parent.__wrapped__;
        }

        previous.__wrapped__ = value;
        return result;
      }

      function wrapperReverse() {
        var value = this.__wrapped__;

        if (value instanceof LazyWrapper) {
          var wrapped = value;

          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }

          wrapped = wrapped.reverse();

          wrapped.__actions__.push({
            'func': thru,
            'args': [reverse],
            'thisArg': undefined
          });

          return new LodashWrapper(wrapped, this.__chain__);
        }

        return this.thru(reverse);
      }

      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }

      var countBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          ++result[key];
        } else {
          baseAssignValue(result, key, 1);
        }
      });

      function every(collection, predicate, guard) {
        var func = isArray(collection) ? arrayEvery : baseEvery;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      function filter(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }

      var find = createFind(findIndex);
      var findLast = createFind(findLastIndex);

      function flatMap(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), 1);
      }

      function flatMapDeep(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), INFINITY);
      }

      function flatMapDepth(collection, iteratee, depth) {
        depth = depth === undefined ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee), depth);
      }

      function forEach(collection, iteratee) {
        var func = isArray(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee, 3));
      }

      function forEachRight(collection, iteratee) {
        var func = isArray(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee, 3));
      }

      var groupBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          result[key].push(value);
        } else {
          baseAssignValue(result, key, [value]);
        }
      });

      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;

        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }

        return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }

      var invokeMap = baseRest(function (collection, path, args) {
        var index = -1,
            isFunc = typeof path == 'function',
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value) {
          result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
        });
        return result;
      });
      var keyBy = createAggregator(function (result, value, key) {
        baseAssignValue(result, key, value);
      });

      function map(collection, iteratee) {
        var func = isArray(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee, 3));
      }

      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }

        if (!isArray(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }

        orders = guard ? undefined : orders;

        if (!isArray(orders)) {
          orders = orders == null ? [] : [orders];
        }

        return baseOrderBy(collection, iteratees, orders);
      }

      var partition = createAggregator(function (result, value, key) {
        result[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });

      function reduce(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduce : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }

      function reduceRight(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduceRight : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
      }

      function reject(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }

      function sample(collection) {
        var func = isArray(collection) ? arraySample : baseSample;
        return func(collection);
      }

      function sampleSize(collection, n, guard) {
        if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        var func = isArray(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n);
      }

      function shuffle(collection) {
        var func = isArray(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }

      function size(collection) {
        if (collection == null) {
          return 0;
        }

        if (isArrayLike(collection)) {
          return isString(collection) ? stringSize(collection) : collection.length;
        }

        var tag = getTag(collection);

        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }

        return baseKeys(collection).length;
      }

      function some(collection, predicate, guard) {
        var func = isArray(collection) ? arraySome : baseSome;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }

        var length = iteratees.length;

        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }

        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });

      var now = ctxNow || function () {
        return root.Date.now();
      };

      function after(n, func) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n < 1) {
            return func.apply(this, arguments);
          }
        };
      }

      function ary(func, n, guard) {
        n = guard ? undefined : n;
        n = func && n == null ? func.length : n;
        return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
      }

      function before(n, func) {
        var result;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n > 0) {
            result = func.apply(this, arguments);
          }

          if (n <= 1) {
            func = undefined;
          }

          return result;
        };
      }

      var bind = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(func, bitmask, thisArg, partials, holders);
      });
      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = 3;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(key, bitmask, object, partials, holders);
      });

      function curry(func, arity, guard) {
        arity = guard ? undefined : arity;
        var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curry.placeholder;
        return result;
      }

      function curryRight(func, arity, guard) {
        arity = guard ? undefined : arity;
        var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curryRight.placeholder;
        return result;
      }

      function debounce(func, wait, options) {
        var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        wait = toNumber(wait) || 0;

        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        function invokeFunc(time) {
          var args = lastArgs,
              thisArg = lastThis;
          lastArgs = lastThis = undefined;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }

        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }

        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }

        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }

        function timerExpired() {
          var time = now();

          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }

          timerId = setTimeout(timerExpired, remainingWait(time));
        }

        function trailingEdge(time) {
          timerId = undefined;

          if (trailing && lastArgs) {
            return invokeFunc(time);
          }

          lastArgs = lastThis = undefined;
          return result;
        }

        function cancel() {
          if (timerId !== undefined) {
            clearTimeout(timerId);
          }

          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined;
        }

        function flush() {
          return timerId === undefined ? result : trailingEdge(now());
        }

        function debounced() {
          var time = now(),
              isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;

          if (isInvoking) {
            if (timerId === undefined) {
              return leadingEdge(lastCallTime);
            }

            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }

          if (timerId === undefined) {
            timerId = setTimeout(timerExpired, wait);
          }

          return result;
        }

        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }

      var defer = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });
      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });

      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }

      function memoize(func, resolver) {
        if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var memoized = function memoized() {
          var args = arguments,
              key = resolver ? resolver.apply(this, args) : args[0],
              cache = memoized.cache;

          if (cache.has(key)) {
            return cache.get(key);
          }

          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };

        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }

      memoize.Cache = MapCache;

      function negate(predicate) {
        if (typeof predicate != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return !predicate.call(this);

            case 1:
              return !predicate.call(this, args[0]);

            case 2:
              return !predicate.call(this, args[0], args[1]);

            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }

          return !predicate.apply(this, args);
        };
      }

      function once(func) {
        return before(2, func);
      }

      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1,
              length = nativeMin(args.length, funcsLength);

          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }

          return apply(func, this, args);
        });
      });
      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
      });
      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
      });
      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
      });

      function rest(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start === undefined ? start : toInteger(start);
        return baseRest(func, start);
      }

      function spread(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start],
              otherArgs = castSlice(args, 0, start);

          if (array) {
            arrayPush(otherArgs, array);
          }

          return apply(func, this, otherArgs);
        });
      }

      function throttle(func, wait, options) {
        var leading = true,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        return debounce(func, wait, {
          'leading': leading,
          'maxWait': wait,
          'trailing': trailing
        });
      }

      function unary(func) {
        return ary(func, 1);
      }

      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }

      function castArray() {
        if (!arguments.length) {
          return [];
        }

        var value = arguments[0];
        return isArray(value) ? value : [value];
      }

      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }

      function cloneWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }

      function cloneDeep(value) {
        return baseClone(value, 5);
      }

      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseClone(value, 5, customizer);
      }

      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }

      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }

      var gt = createRelationalOperation(baseGt);
      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });
      var isArguments = baseIsArguments(function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
      };
      var isArray = Array.isArray;
      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }

      function isBoolean(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }

      var isBuffer = nativeIsBuffer || stubFalse;
      var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

      function isElement(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }

      function isEmpty(value) {
        if (value == null) {
          return true;
        }

        if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }

        var tag = getTag(value);

        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }

        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }

        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }

        return true;
      }

      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }

      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        var result = customizer ? customizer(value, other) : undefined;
        return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
      }

      function isError(value) {
        if (!isObjectLike(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
      }

      function isFinite(value) {
        return typeof value == 'number' && nativeIsFinite(value);
      }

      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }

      function isInteger(value) {
        return typeof value == 'number' && value == toInteger(value);
      }

      function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }

      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }

      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }

      function isNaN(value) {
        return isNumber(value) && value != +value;
      }

      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error(CORE_ERROR_TEXT);
        }

        return baseIsNative(value);
      }

      function isNull(value) {
        return value === null;
      }

      function isNil(value) {
        return value == null;
      }

      function isNumber(value) {
        return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
      }

      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }

        var proto = getPrototype(value);

        if (proto === null) {
          return true;
        }

        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }

      var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

      function isSafeInteger(value) {
        return isInteger(value) && value >= -9007199254740991 && value <= MAX_SAFE_INTEGER;
      }

      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

      function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }

      function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }

      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

      function isUndefined(value) {
        return value === undefined;
      }

      function isWeakMap(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }

      function isWeakSet(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }

      var lt = createRelationalOperation(baseLt);
      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });

      function toArray(value) {
        if (!value) {
          return [];
        }

        if (isArrayLike(value)) {
          return isString(value) ? stringToArray(value) : copyArray(value);
        }

        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }

        var tag = getTag(value),
            func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }

      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }

        value = toNumber(value);

        if (value === INFINITY || value === -(1 / 0)) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }

        return value === value ? value : 0;
      }

      function toInteger(value) {
        var result = toFinite(value),
            remainder = result % 1;
        return result === result ? remainder ? result - remainder : result : 0;
      }

      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }

      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        if (isObject(value)) {
          var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }

        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }

        value = value.replace(reTrim, '');
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }

      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }

      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -9007199254740991, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }

      function toString(value) {
        return value == null ? '' : baseToString(value);
      }

      var assign = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }

        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });
      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });
      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });
      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });
      var at = flatRest(baseAt);

      function create(prototype, properties) {
        var result = baseCreate(prototype);
        return properties == null ? result : baseAssign(result, properties);
      }

      var defaults = baseRest(function (object, sources) {
        object = Object(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }

        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;

          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];

            if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }

        return object;
      });
      var defaultsDeep = baseRest(function (args) {
        args.push(undefined, customDefaultsMerge);
        return apply(mergeWith, undefined, args);
      });

      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }

      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }

      function forIn(object, iteratee) {
        return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
      }

      function forInRight(object, iteratee) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
      }

      function forOwn(object, iteratee) {
        return object && baseForOwn(object, getIteratee(iteratee, 3));
      }

      function forOwnRight(object, iteratee) {
        return object && baseForOwnRight(object, getIteratee(iteratee, 3));
      }

      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }

      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }

      function get(object, path, defaultValue) {
        var result = object == null ? undefined : baseGet(object, path);
        return result === undefined ? defaultValue : result;
      }

      function has(object, path) {
        return object != null && hasPath(object, path, baseHas);
      }

      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }

      var invert = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        result[value] = key;
      }, constant(identity));
      var invertBy = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }, getIteratee);
      var invoke = baseRest(baseInvoke);

      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }

      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }

      function mapKeys(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, iteratee(value, key, object), value);
        });
        return result;
      }

      function mapValues(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, key, iteratee(value, key, object));
        });
        return result;
      }

      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      var omit = flatRest(function (object, paths) {
        var result = {};

        if (object == null) {
          return result;
        }

        var isDeep = false;
        paths = arrayMap(paths, function (path) {
          path = castPath(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        copyObject(object, getAllKeysIn(object), result);

        if (isDeep) {
          result = baseClone(result, 7, customOmitClone);
        }

        var length = paths.length;

        while (length--) {
          baseUnset(result, paths[length]);
        }

        return result;
      });

      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }

      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });

      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }

        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path) {
          return predicate(value, path[0]);
        });
      }

      function result(object, path, defaultValue) {
        path = castPath(path, object);
        var index = -1,
            length = path.length;

        if (!length) {
          length = 1;
          object = undefined;
        }

        while (++index < length) {
          var value = object == null ? undefined : object[toKey(path[index])];

          if (value === undefined) {
            index = length;
            value = defaultValue;
          }

          object = isFunction(value) ? value.call(object) : value;
        }

        return object;
      }

      function set(object, path, value) {
        return object == null ? object : baseSet(object, path, value);
      }

      function setWith(object, path, value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return object == null ? object : baseSet(object, path, value, customizer);
      }

      var toPairs = createToPairs(keys);
      var toPairsIn = createToPairs(keysIn);

      function transform(object, iteratee, accumulator) {
        var isArr = isArray(object),
            isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = getIteratee(iteratee, 4);

        if (accumulator == null) {
          var Ctor = object && object.constructor;

          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }

        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
          return iteratee(accumulator, value, index, object);
        });
        return accumulator;
      }

      function unset(object, path) {
        return object == null ? true : baseUnset(object, path);
      }

      function update(object, path, updater) {
        return object == null ? object : baseUpdate(object, path, castFunction(updater));
      }

      function updateWith(object, path, updater, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
      }

      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }

      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }

      function clamp(number, lower, upper) {
        if (upper === undefined) {
          upper = lower;
          lower = undefined;
        }

        if (upper !== undefined) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }

        if (lower !== undefined) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }

        return baseClamp(toNumber(number), lower, upper);
      }

      function inRange(number, start, end) {
        start = toFinite(start);

        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }

        number = toNumber(number);
        return baseInRange(number, start, end);
      }

      function random(lower, upper, floating) {
        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined;
        }

        if (floating === undefined) {
          if (typeof upper == 'boolean') {
            floating = upper;
            upper = undefined;
          } else if (typeof lower == 'boolean') {
            floating = lower;
            lower = undefined;
          }
        }

        if (lower === undefined && upper === undefined) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);

          if (upper === undefined) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }

        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }

        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
        }

        return baseRandom(lower, upper);
      }

      var camelCase = createCompounder(function (result, word, index) {
        word = word.toLowerCase();
        return result + (index ? capitalize(word) : word);
      });

      function capitalize(string) {
        return upperFirst(toString(string).toLowerCase());
      }

      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
      }

      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }

      function escape(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }

      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
      }

      var kebabCase = createCompounder(function (result, word, index) {
        return result + (index ? '-' : '') + word.toLowerCase();
      });
      var lowerCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toLowerCase();
      });
      var lowerFirst = createCaseFirst('toLowerCase');

      function pad(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;

        if (!length || strLength >= length) {
          return string;
        }

        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
      }

      function padEnd(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
      }

      function padStart(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
      }

      function parseInt(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }

        return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
      }

      function repeat(string, n, guard) {
        if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        return baseRepeat(toString(string), n);
      }

      function replace() {
        var args = arguments,
            string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }

      var snakeCase = createCompounder(function (result, word, index) {
        return result + (index ? '_' : '') + word.toLowerCase();
      });

      function split(string, separator, limit) {
        if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
          separator = limit = undefined;
        }

        limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;

        if (!limit) {
          return [];
        }

        string = toString(string);

        if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
          separator = baseToString(separator);

          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit);
          }
        }

        return string.split(separator, limit);
      }

      var startCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + upperFirst(word);
      });

      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }

      function template(string, options, guard) {
        var settings = lodash.templateSettings;

        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined;
        }

        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
            importsKeys = keys(imports),
            importsValues = baseValues(imports, importsKeys);
        var isEscaping,
            isEvaluating,
            index = 0,
            interpolate = options.interpolate || reNoMatch,
            source = "__p += '";
        var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
        var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);
          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }

          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }

          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }

          index = offset + match.length;
          return match;
        });
        source += "';\n";
        var variable = hasOwnProperty.call(options, 'variable') && options.variable;

        if (!variable) {
          source = 'with (obj) {\n' + source + '\n}\n';
        }

        source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
        source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
        var result = attempt(function () {
          return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
        });
        result.source = source;

        if (isError(result)) {
          throw result;
        }

        return result;
      }

      function toLower(value) {
        return toString(value).toLowerCase();
      }

      function toUpper(value) {
        return toString(value).toUpperCase();
      }

      function trim(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrim, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            chrSymbols = stringToArray(chars),
            start = charsStartIndex(strSymbols, chrSymbols),
            end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join('');
      }

      function trimEnd(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrimEnd, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
        return castSlice(strSymbols, 0, end).join('');
      }

      function trimStart(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrimStart, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            start = charsStartIndex(strSymbols, stringToArray(chars));
        return castSlice(strSymbols, start).join('');
      }

      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH,
            omission = DEFAULT_TRUNC_OMISSION;

        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? toInteger(options.length) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        }

        string = toString(string);
        var strLength = string.length;

        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }

        if (length >= strLength) {
          return string;
        }

        var end = length - stringSize(omission);

        if (end < 1) {
          return omission;
        }

        var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

        if (separator === undefined) {
          return result + omission;
        }

        if (strSymbols) {
          end += result.length - end;
        }

        if (isRegExp(separator)) {
          if (string.slice(end).search(separator)) {
            var match,
                substring = result;

            if (!separator.global) {
              separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
            }

            separator.lastIndex = 0;

            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }

            result = result.slice(0, newEnd === undefined ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result.lastIndexOf(separator);

          if (index > -1) {
            result = result.slice(0, index);
          }
        }

        return result + omission;
      }

      function unescape(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }

      var upperCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toUpperCase();
      });
      var upperFirst = createCaseFirst('toUpperCase');

      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined : pattern;

        if (pattern === undefined) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }

        return string.match(pattern) || [];
      }

      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined, args);
        } catch (e) {
          return isError(e) ? e : new Error(e);
        }
      });
      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind(object[key], object));
        });
        return object;
      });

      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length,
            toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }

          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;

          while (++index < length) {
            var pair = pairs[index];

            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }

      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }

      function constant(value) {
        return function () {
          return value;
        };
      }

      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }

      var flow = createFlow();
      var flowRight = createFlow(true);

      function identity(value) {
        return value;
      }

      function iteratee(func) {
        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
      }

      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }

      function matchesProperty(path, srcValue) {
        return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
      }

      var method = baseRest(function (path, args) {
        return function (object) {
          return baseInvoke(object, path, args);
        };
      });
      var methodOf = baseRest(function (object, args) {
        return function (path) {
          return baseInvoke(object, path, args);
        };
      });

      function mixin(object, source, options) {
        var props = keys(source),
            methodNames = baseFunctions(source, props);

        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }

        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
            isFunc = isFunction(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;

          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;

              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                    actions = result.__actions__ = copyArray(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }

              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }

      function noConflict() {
        if (root._ === this) {
          root._ = oldDash;
        }

        return this;
      }

      function noop() {}

      function nthArg(n) {
        n = toInteger(n);
        return baseRest(function (args) {
          return baseNth(args, n);
        });
      }

      var over = createOver(arrayMap);
      var overEvery = createOver(arrayEvery);
      var overSome = createOver(arraySome);

      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }

      function propertyOf(object) {
        return function (path) {
          return object == null ? undefined : baseGet(object, path);
        };
      }

      var range = createRange();
      var rangeRight = createRange(true);

      function stubArray() {
        return [];
      }

      function stubFalse() {
        return false;
      }

      function stubObject() {
        return {};
      }

      function stubString() {
        return '';
      }

      function stubTrue() {
        return true;
      }

      function times(n, iteratee) {
        n = toInteger(n);

        if (n < 1 || n > MAX_SAFE_INTEGER) {
          return [];
        }

        var index = MAX_ARRAY_LENGTH,
            length = nativeMin(n, MAX_ARRAY_LENGTH);
        iteratee = getIteratee(iteratee);
        n -= MAX_ARRAY_LENGTH;
        var result = baseTimes(length, iteratee);

        while (++index < n) {
          iteratee(index);
        }

        return result;
      }

      function toPath(value) {
        if (isArray(value)) {
          return arrayMap(value, toKey);
        }

        return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
      }

      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }

      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);
      var ceil = createRound('ceil');
      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);
      var floor = createRound('floor');

      function max(array) {
        return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
      }

      function maxBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
      }

      function mean(array) {
        return baseMean(array, identity);
      }

      function meanBy(array, iteratee) {
        return baseMean(array, getIteratee(iteratee, 2));
      }

      function min(array) {
        return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
      }

      function minBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
      }

      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);
      var round = createRound('round');
      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);

      function sum(array) {
        return array && array.length ? baseSum(array, identity) : 0;
      }

      function sumBy(array, iteratee) {
        return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
      }

      lodash.after = after;
      lodash.ary = ary;
      lodash.assign = assign;
      lodash.assignIn = assignIn;
      lodash.assignInWith = assignInWith;
      lodash.assignWith = assignWith;
      lodash.at = at;
      lodash.before = before;
      lodash.bind = bind;
      lodash.bindAll = bindAll;
      lodash.bindKey = bindKey;
      lodash.castArray = castArray;
      lodash.chain = chain;
      lodash.chunk = chunk;
      lodash.compact = compact;
      lodash.concat = concat;
      lodash.cond = cond;
      lodash.conforms = conforms;
      lodash.constant = constant;
      lodash.countBy = countBy;
      lodash.create = create;
      lodash.curry = curry;
      lodash.curryRight = curryRight;
      lodash.debounce = debounce;
      lodash.defaults = defaults;
      lodash.defaultsDeep = defaultsDeep;
      lodash.defer = defer;
      lodash.delay = delay;
      lodash.difference = difference;
      lodash.differenceBy = differenceBy;
      lodash.differenceWith = differenceWith;
      lodash.drop = drop;
      lodash.dropRight = dropRight;
      lodash.dropRightWhile = dropRightWhile;
      lodash.dropWhile = dropWhile;
      lodash.fill = fill;
      lodash.filter = filter;
      lodash.flatMap = flatMap;
      lodash.flatMapDeep = flatMapDeep;
      lodash.flatMapDepth = flatMapDepth;
      lodash.flatten = flatten;
      lodash.flattenDeep = flattenDeep;
      lodash.flattenDepth = flattenDepth;
      lodash.flip = flip;
      lodash.flow = flow;
      lodash.flowRight = flowRight;
      lodash.fromPairs = fromPairs;
      lodash.functions = functions;
      lodash.functionsIn = functionsIn;
      lodash.groupBy = groupBy;
      lodash.initial = initial;
      lodash.intersection = intersection;
      lodash.intersectionBy = intersectionBy;
      lodash.intersectionWith = intersectionWith;
      lodash.invert = invert;
      lodash.invertBy = invertBy;
      lodash.invokeMap = invokeMap;
      lodash.iteratee = iteratee;
      lodash.keyBy = keyBy;
      lodash.keys = keys;
      lodash.keysIn = keysIn;
      lodash.map = map;
      lodash.mapKeys = mapKeys;
      lodash.mapValues = mapValues;
      lodash.matches = matches;
      lodash.matchesProperty = matchesProperty;
      lodash.memoize = memoize;
      lodash.merge = merge;
      lodash.mergeWith = mergeWith;
      lodash.method = method;
      lodash.methodOf = methodOf;
      lodash.mixin = mixin;
      lodash.negate = negate;
      lodash.nthArg = nthArg;
      lodash.omit = omit;
      lodash.omitBy = omitBy;
      lodash.once = once;
      lodash.orderBy = orderBy;
      lodash.over = over;
      lodash.overArgs = overArgs;
      lodash.overEvery = overEvery;
      lodash.overSome = overSome;
      lodash.partial = partial;
      lodash.partialRight = partialRight;
      lodash.partition = partition;
      lodash.pick = pick;
      lodash.pickBy = pickBy;
      lodash.property = property;
      lodash.propertyOf = propertyOf;
      lodash.pull = pull;
      lodash.pullAll = pullAll;
      lodash.pullAllBy = pullAllBy;
      lodash.pullAllWith = pullAllWith;
      lodash.pullAt = pullAt;
      lodash.range = range;
      lodash.rangeRight = rangeRight;
      lodash.rearg = rearg;
      lodash.reject = reject;
      lodash.remove = remove;
      lodash.rest = rest;
      lodash.reverse = reverse;
      lodash.sampleSize = sampleSize;
      lodash.set = set;
      lodash.setWith = setWith;
      lodash.shuffle = shuffle;
      lodash.slice = slice;
      lodash.sortBy = sortBy;
      lodash.sortedUniq = sortedUniq;
      lodash.sortedUniqBy = sortedUniqBy;
      lodash.split = split;
      lodash.spread = spread;
      lodash.tail = tail;
      lodash.take = take;
      lodash.takeRight = takeRight;
      lodash.takeRightWhile = takeRightWhile;
      lodash.takeWhile = takeWhile;
      lodash.tap = tap;
      lodash.throttle = throttle;
      lodash.thru = thru;
      lodash.toArray = toArray;
      lodash.toPairs = toPairs;
      lodash.toPairsIn = toPairsIn;
      lodash.toPath = toPath;
      lodash.toPlainObject = toPlainObject;
      lodash.transform = transform;
      lodash.unary = unary;
      lodash.union = union;
      lodash.unionBy = unionBy;
      lodash.unionWith = unionWith;
      lodash.uniq = uniq;
      lodash.uniqBy = uniqBy;
      lodash.uniqWith = uniqWith;
      lodash.unset = unset;
      lodash.unzip = unzip;
      lodash.unzipWith = unzipWith;
      lodash.update = update;
      lodash.updateWith = updateWith;
      lodash.values = values;
      lodash.valuesIn = valuesIn;
      lodash.without = without;
      lodash.words = words;
      lodash.wrap = wrap;
      lodash.xor = xor;
      lodash.xorBy = xorBy;
      lodash.xorWith = xorWith;
      lodash.zip = zip;
      lodash.zipObject = zipObject;
      lodash.zipObjectDeep = zipObjectDeep;
      lodash.zipWith = zipWith;
      lodash.entries = toPairs;
      lodash.entriesIn = toPairsIn;
      lodash.extend = assignIn;
      lodash.extendWith = assignInWith;
      mixin(lodash, lodash);
      lodash.add = add;
      lodash.attempt = attempt;
      lodash.camelCase = camelCase;
      lodash.capitalize = capitalize;
      lodash.ceil = ceil;
      lodash.clamp = clamp;
      lodash.clone = clone;
      lodash.cloneDeep = cloneDeep;
      lodash.cloneDeepWith = cloneDeepWith;
      lodash.cloneWith = cloneWith;
      lodash.conformsTo = conformsTo;
      lodash.deburr = deburr;
      lodash.defaultTo = defaultTo;
      lodash.divide = divide;
      lodash.endsWith = endsWith;
      lodash.eq = eq;
      lodash.escape = escape;
      lodash.escapeRegExp = escapeRegExp;
      lodash.every = every;
      lodash.find = find;
      lodash.findIndex = findIndex;
      lodash.findKey = findKey;
      lodash.findLast = findLast;
      lodash.findLastIndex = findLastIndex;
      lodash.findLastKey = findLastKey;
      lodash.floor = floor;
      lodash.forEach = forEach;
      lodash.forEachRight = forEachRight;
      lodash.forIn = forIn;
      lodash.forInRight = forInRight;
      lodash.forOwn = forOwn;
      lodash.forOwnRight = forOwnRight;
      lodash.get = get;
      lodash.gt = gt;
      lodash.gte = gte;
      lodash.has = has;
      lodash.hasIn = hasIn;
      lodash.head = head;
      lodash.identity = identity;
      lodash.includes = includes;
      lodash.indexOf = indexOf;
      lodash.inRange = inRange;
      lodash.invoke = invoke;
      lodash.isArguments = isArguments;
      lodash.isArray = isArray;
      lodash.isArrayBuffer = isArrayBuffer;
      lodash.isArrayLike = isArrayLike;
      lodash.isArrayLikeObject = isArrayLikeObject;
      lodash.isBoolean = isBoolean;
      lodash.isBuffer = isBuffer;
      lodash.isDate = isDate;
      lodash.isElement = isElement;
      lodash.isEmpty = isEmpty;
      lodash.isEqual = isEqual;
      lodash.isEqualWith = isEqualWith;
      lodash.isError = isError;
      lodash.isFinite = isFinite;
      lodash.isFunction = isFunction;
      lodash.isInteger = isInteger;
      lodash.isLength = isLength;
      lodash.isMap = isMap;
      lodash.isMatch = isMatch;
      lodash.isMatchWith = isMatchWith;
      lodash.isNaN = isNaN;
      lodash.isNative = isNative;
      lodash.isNil = isNil;
      lodash.isNull = isNull;
      lodash.isNumber = isNumber;
      lodash.isObject = isObject;
      lodash.isObjectLike = isObjectLike;
      lodash.isPlainObject = isPlainObject;
      lodash.isRegExp = isRegExp;
      lodash.isSafeInteger = isSafeInteger;
      lodash.isSet = isSet;
      lodash.isString = isString;
      lodash.isSymbol = isSymbol;
      lodash.isTypedArray = isTypedArray;
      lodash.isUndefined = isUndefined;
      lodash.isWeakMap = isWeakMap;
      lodash.isWeakSet = isWeakSet;
      lodash.join = join;
      lodash.kebabCase = kebabCase;
      lodash.last = last;
      lodash.lastIndexOf = lastIndexOf;
      lodash.lowerCase = lowerCase;
      lodash.lowerFirst = lowerFirst;
      lodash.lt = lt;
      lodash.lte = lte;
      lodash.max = max;
      lodash.maxBy = maxBy;
      lodash.mean = mean;
      lodash.meanBy = meanBy;
      lodash.min = min;
      lodash.minBy = minBy;
      lodash.stubArray = stubArray;
      lodash.stubFalse = stubFalse;
      lodash.stubObject = stubObject;
      lodash.stubString = stubString;
      lodash.stubTrue = stubTrue;
      lodash.multiply = multiply;
      lodash.nth = nth;
      lodash.noConflict = noConflict;
      lodash.noop = noop;
      lodash.now = now;
      lodash.pad = pad;
      lodash.padEnd = padEnd;
      lodash.padStart = padStart;
      lodash.parseInt = parseInt;
      lodash.random = random;
      lodash.reduce = reduce;
      lodash.reduceRight = reduceRight;
      lodash.repeat = repeat;
      lodash.replace = replace;
      lodash.result = result;
      lodash.round = round;
      lodash.runInContext = runInContext;
      lodash.sample = sample;
      lodash.size = size;
      lodash.snakeCase = snakeCase;
      lodash.some = some;
      lodash.sortedIndex = sortedIndex;
      lodash.sortedIndexBy = sortedIndexBy;
      lodash.sortedIndexOf = sortedIndexOf;
      lodash.sortedLastIndex = sortedLastIndex;
      lodash.sortedLastIndexBy = sortedLastIndexBy;
      lodash.sortedLastIndexOf = sortedLastIndexOf;
      lodash.startCase = startCase;
      lodash.startsWith = startsWith;
      lodash.subtract = subtract;
      lodash.sum = sum;
      lodash.sumBy = sumBy;
      lodash.template = template;
      lodash.times = times;
      lodash.toFinite = toFinite;
      lodash.toInteger = toInteger;
      lodash.toLength = toLength;
      lodash.toLower = toLower;
      lodash.toNumber = toNumber;
      lodash.toSafeInteger = toSafeInteger;
      lodash.toString = toString;
      lodash.toUpper = toUpper;
      lodash.trim = trim;
      lodash.trimEnd = trimEnd;
      lodash.trimStart = trimStart;
      lodash.truncate = truncate;
      lodash.unescape = unescape;
      lodash.uniqueId = uniqueId;
      lodash.upperCase = upperCase;
      lodash.upperFirst = upperFirst;
      lodash.each = forEach;
      lodash.eachRight = forEachRight;
      lodash.first = head;
      mixin(lodash, function () {
        var source = {};
        baseForOwn(lodash, function (func, methodName) {
          if (!hasOwnProperty.call(lodash.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), {
        'chain': false
      });
      lodash.VERSION = VERSION;
      arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
        lodash[methodName].placeholder = lodash;
      });
      arrayEach(['drop', 'take'], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n) {
          n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
          var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

          if (result.__filtered__) {
            result.__takeCount__ = nativeMin(n, result.__takeCount__);
          } else {
            result.__views__.push({
              'size': nativeMin(n, MAX_ARRAY_LENGTH),
              'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
            });
          }

          return result;
        };

        LazyWrapper.prototype[methodName + 'Right'] = function (n) {
          return this.reverse()[methodName](n).reverse();
        };
      });
      arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
        var type = index + 1,
            isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

        LazyWrapper.prototype[methodName] = function (iteratee) {
          var result = this.clone();

          result.__iteratees__.push({
            'iteratee': getIteratee(iteratee, 3),
            'type': type
          });

          result.__filtered__ = result.__filtered__ || isFilter;
          return result;
        };
      });
      arrayEach(['head', 'last'], function (methodName, index) {
        var takeName = 'take' + (index ? 'Right' : '');

        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });
      arrayEach(['initial', 'tail'], function (methodName, index) {
        var dropName = 'drop' + (index ? '' : 'Right');

        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });

      LazyWrapper.prototype.compact = function () {
        return this.filter(identity);
      };

      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };

      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };

      LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
        if (typeof path == 'function') {
          return new LazyWrapper(this);
        }

        return this.map(function (value) {
          return baseInvoke(value, path, args);
        });
      });

      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };

      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result = this;

        if (result.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result);
        }

        if (start < 0) {
          result = result.takeRight(-start);
        } else if (start) {
          result = result.drop(start);
        }

        if (end !== undefined) {
          end = toInteger(end);
          result = end < 0 ? result.dropRight(-end) : result.take(end - start);
        }

        return result;
      };

      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };

      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };

      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
            isTaker = /^(?:head|last)$/.test(methodName),
            lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
            retUnwrapped = isTaker || /^find/.test(methodName);

        if (!lodashFunc) {
          return;
        }

        lodash.prototype[methodName] = function () {
          var value = this.__wrapped__,
              args = isTaker ? [1] : arguments,
              isLazy = value instanceof LazyWrapper,
              iteratee = args[0],
              useLazy = isLazy || isArray(value);

          var interceptor = function interceptor(value) {
            var result = lodashFunc.apply(lodash, arrayPush([value], args));
            return isTaker && chainAll ? result[0] : result;
          };

          if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
            isLazy = useLazy = false;
          }

          var chainAll = this.__chain__,
              isHybrid = !!this.__actions__.length,
              isUnwrapped = retUnwrapped && !chainAll,
              onlyLazy = isLazy && !isHybrid;

          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result = func.apply(value, args);

            result.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined
            });

            return new LodashWrapper(result, chainAll);
          }

          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }

          result = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
        };
      });
      arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
        var func = arrayProto[methodName],
            chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
            retUnwrapped = /^(?:pop|shift)$/.test(methodName);

        lodash.prototype[methodName] = function () {
          var args = arguments;

          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray(value) ? value : [], args);
          }

          return this[chainName](function (value) {
            return func.apply(isArray(value) ? value : [], args);
          });
        };
      });
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash[methodName];

        if (lodashFunc) {
          var key = lodashFunc.name + '';

          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }

          realNames[key].push({
            'name': methodName,
            'func': lodashFunc
          });
        }
      });
      realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
        'name': 'wrapper',
        'func': undefined
      }];
      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;
      lodash.prototype.at = wrapperAt;
      lodash.prototype.chain = wrapperChain;
      lodash.prototype.commit = wrapperCommit;
      lodash.prototype.next = wrapperNext;
      lodash.prototype.plant = wrapperPlant;
      lodash.prototype.reverse = wrapperReverse;
      lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
      lodash.prototype.first = lodash.prototype.head;

      if (symIterator) {
        lodash.prototype[symIterator] = wrapperToIterator;
      }

      return lodash;
    };

    var _ = runInContext();

    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
      root._ = _;
      define(function () {
        return _;
      });
    } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
  }).call(this);
},11503,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var colorString = _$$_REQUIRE(_dependencyMap[0]);

  var convert = _$$_REQUIRE(_dependencyMap[1]);

  var _slice = [].slice;
  var skippedModels = ['keyword', 'gray', 'hex'];
  var hashedModelKeys = {};
  Object.keys(convert).forEach(function (model) {
    hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;
  });
  var limiters = {};

  function Color(obj, model) {
    if (!(this instanceof Color)) {
      return new Color(obj, model);
    }

    if (model && model in skippedModels) {
      model = null;
    }

    if (model && !(model in convert)) {
      throw new Error('Unknown model: ' + model);
    }

    var i;
    var channels;

    if (obj == null) {
      this.model = 'rgb';
      this.color = [0, 0, 0];
      this.valpha = 1;
    } else if (obj instanceof Color) {
      this.model = obj.model;
      this.color = obj.color.slice();
      this.valpha = obj.valpha;
    } else if (typeof obj === 'string') {
      var result = colorString.get(obj);

      if (result === null) {
        throw new Error('Unable to parse color from string: ' + obj);
      }

      this.model = result.model;
      channels = convert[this.model].channels;
      this.color = result.value.slice(0, channels);
      this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
    } else if (obj.length) {
      this.model = model || 'rgb';
      channels = convert[this.model].channels;

      var newArr = _slice.call(obj, 0, channels);

      this.color = zeroArray(newArr, channels);
      this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;
    } else if (typeof obj === 'number') {
      obj &= 0xFFFFFF;
      this.model = 'rgb';
      this.color = [obj >> 16 & 0xFF, obj >> 8 & 0xFF, obj & 0xFF];
      this.valpha = 1;
    } else {
      this.valpha = 1;
      var keys = Object.keys(obj);

      if ('alpha' in obj) {
        keys.splice(keys.indexOf('alpha'), 1);
        this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;
      }

      var hashedKeys = keys.sort().join('');

      if (!(hashedKeys in hashedModelKeys)) {
        throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));
      }

      this.model = hashedModelKeys[hashedKeys];
      var labels = convert[this.model].labels;
      var color = [];

      for (i = 0; i < labels.length; i++) {
        color.push(obj[labels[i]]);
      }

      this.color = zeroArray(color);
    }

    if (limiters[this.model]) {
      channels = convert[this.model].channels;

      for (i = 0; i < channels; i++) {
        var limit = limiters[this.model][i];

        if (limit) {
          this.color[i] = limit(this.color[i]);
        }
      }
    }

    this.valpha = Math.max(0, Math.min(1, this.valpha));

    if (Object.freeze) {
      Object.freeze(this);
    }
  }

  Color.prototype = {
    toString: function toString() {
      return this.string();
    },
    toJSON: function toJSON() {
      return this[this.model]();
    },
    string: function string(places) {
      var self = this.model in colorString.to ? this : this.rgb();
      self = self.round(typeof places === 'number' ? places : 1);
      var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
      return colorString.to[self.model](args);
    },
    percentString: function percentString(places) {
      var self = this.rgb().round(typeof places === 'number' ? places : 1);
      var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
      return colorString.to.rgb.percent(args);
    },
    array: function array() {
      return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
    },
    object: function object() {
      var result = {};
      var channels = convert[this.model].channels;
      var labels = convert[this.model].labels;

      for (var i = 0; i < channels; i++) {
        result[labels[i]] = this.color[i];
      }

      if (this.valpha !== 1) {
        result.alpha = this.valpha;
      }

      return result;
    },
    unitArray: function unitArray() {
      var rgb = this.rgb().color;
      rgb[0] /= 255;
      rgb[1] /= 255;
      rgb[2] /= 255;

      if (this.valpha !== 1) {
        rgb.push(this.valpha);
      }

      return rgb;
    },
    unitObject: function unitObject() {
      var rgb = this.rgb().object();
      rgb.r /= 255;
      rgb.g /= 255;
      rgb.b /= 255;

      if (this.valpha !== 1) {
        rgb.alpha = this.valpha;
      }

      return rgb;
    },
    round: function round(places) {
      places = Math.max(places || 0, 0);
      return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
    },
    alpha: function alpha(val) {
      if (arguments.length) {
        return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
      }

      return this.valpha;
    },
    red: getset('rgb', 0, maxfn(255)),
    green: getset('rgb', 1, maxfn(255)),
    blue: getset('rgb', 2, maxfn(255)),
    hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) {
      return (val % 360 + 360) % 360;
    }),
    saturationl: getset('hsl', 1, maxfn(100)),
    lightness: getset('hsl', 2, maxfn(100)),
    saturationv: getset('hsv', 1, maxfn(100)),
    value: getset('hsv', 2, maxfn(100)),
    chroma: getset('hcg', 1, maxfn(100)),
    gray: getset('hcg', 2, maxfn(100)),
    white: getset('hwb', 1, maxfn(100)),
    wblack: getset('hwb', 2, maxfn(100)),
    cyan: getset('cmyk', 0, maxfn(100)),
    magenta: getset('cmyk', 1, maxfn(100)),
    yellow: getset('cmyk', 2, maxfn(100)),
    black: getset('cmyk', 3, maxfn(100)),
    x: getset('xyz', 0, maxfn(100)),
    y: getset('xyz', 1, maxfn(100)),
    z: getset('xyz', 2, maxfn(100)),
    l: getset('lab', 0, maxfn(100)),
    a: getset('lab', 1),
    b: getset('lab', 2),
    keyword: function keyword(val) {
      if (arguments.length) {
        return new Color(val);
      }

      return convert[this.model].keyword(this.color);
    },
    hex: function hex(val) {
      if (arguments.length) {
        return new Color(val);
      }

      return colorString.to.hex(this.rgb().round().color);
    },
    rgbNumber: function rgbNumber() {
      var rgb = this.rgb().color;
      return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;
    },
    luminosity: function luminosity() {
      var rgb = this.rgb().color;
      var lum = [];

      for (var i = 0; i < rgb.length; i++) {
        var chan = rgb[i] / 255;
        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);
      }

      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
    },
    contrast: function contrast(color2) {
      var lum1 = this.luminosity();
      var lum2 = color2.luminosity();

      if (lum1 > lum2) {
        return (lum1 + 0.05) / (lum2 + 0.05);
      }

      return (lum2 + 0.05) / (lum1 + 0.05);
    },
    level: function level(color2) {
      var contrastRatio = this.contrast(color2);

      if (contrastRatio >= 7.1) {
        return 'AAA';
      }

      return contrastRatio >= 4.5 ? 'AA' : '';
    },
    isDark: function isDark() {
      var rgb = this.rgb().color;
      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
      return yiq < 128;
    },
    isLight: function isLight() {
      return !this.isDark();
    },
    negate: function negate() {
      var rgb = this.rgb();

      for (var i = 0; i < 3; i++) {
        rgb.color[i] = 255 - rgb.color[i];
      }

      return rgb;
    },
    lighten: function lighten(ratio) {
      var hsl = this.hsl();
      hsl.color[2] += hsl.color[2] * ratio;
      return hsl;
    },
    darken: function darken(ratio) {
      var hsl = this.hsl();
      hsl.color[2] -= hsl.color[2] * ratio;
      return hsl;
    },
    saturate: function saturate(ratio) {
      var hsl = this.hsl();
      hsl.color[1] += hsl.color[1] * ratio;
      return hsl;
    },
    desaturate: function desaturate(ratio) {
      var hsl = this.hsl();
      hsl.color[1] -= hsl.color[1] * ratio;
      return hsl;
    },
    whiten: function whiten(ratio) {
      var hwb = this.hwb();
      hwb.color[1] += hwb.color[1] * ratio;
      return hwb;
    },
    blacken: function blacken(ratio) {
      var hwb = this.hwb();
      hwb.color[2] += hwb.color[2] * ratio;
      return hwb;
    },
    grayscale: function grayscale() {
      var rgb = this.rgb().color;
      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
      return Color.rgb(val, val, val);
    },
    fade: function fade(ratio) {
      return this.alpha(this.valpha - this.valpha * ratio);
    },
    opaquer: function opaquer(ratio) {
      return this.alpha(this.valpha + this.valpha * ratio);
    },
    rotate: function rotate(degrees) {
      var hsl = this.hsl();
      var hue = hsl.color[0];
      hue = (hue + degrees) % 360;
      hue = hue < 0 ? 360 + hue : hue;
      hsl.color[0] = hue;
      return hsl;
    },
    mix: function mix(mixinColor, weight) {
      if (!mixinColor || !mixinColor.rgb) {
        throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
      }

      var color1 = mixinColor.rgb();
      var color2 = this.rgb();
      var p = weight === undefined ? 0.5 : weight;
      var w = 2 * p - 1;
      var a = color1.alpha() - color2.alpha();
      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
      var w2 = 1 - w1;
      return Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));
    }
  };
  Object.keys(convert).forEach(function (model) {
    if (skippedModels.indexOf(model) !== -1) {
      return;
    }

    var channels = convert[model].channels;

    Color.prototype[model] = function () {
      if (this.model === model) {
        return new Color(this);
      }

      if (arguments.length) {
        return new Color(arguments, model);
      }

      var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
      return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
    };

    Color[model] = function (color) {
      if (typeof color === 'number') {
        color = zeroArray(_slice.call(arguments), channels);
      }

      return new Color(color, model);
    };
  });

  function roundTo(num, places) {
    return Number(num.toFixed(places));
  }

  function roundToPlace(places) {
    return function (num) {
      return roundTo(num, places);
    };
  }

  function getset(model, channel, modifier) {
    model = Array.isArray(model) ? model : [model];
    model.forEach(function (m) {
      (limiters[m] || (limiters[m] = []))[channel] = modifier;
    });
    model = model[0];
    return function (val) {
      var result;

      if (arguments.length) {
        if (modifier) {
          val = modifier(val);
        }

        result = this[model]();
        result.color[channel] = val;
        return result;
      }

      result = this[model]().color[channel];

      if (modifier) {
        result = modifier(result);
      }

      return result;
    };
  }

  function maxfn(max) {
    return function (v) {
      return Math.max(0, Math.min(max, v));
    };
  }

  function assertArray(val) {
    return Array.isArray(val) ? val : [val];
  }

  function zeroArray(arr, length) {
    for (var i = 0; i < length; i++) {
      if (typeof arr[i] !== 'number') {
        arr[i] = 0;
      }
    }

    return arr;
  }

  module.exports = Color;
},11518,[11521,10070]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var colorNames = _$$_REQUIRE(_dependencyMap[0]);

  var swizzle = _$$_REQUIRE(_dependencyMap[1]);

  var reverseNames = {};

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      reverseNames[colorNames[name]] = name;
    }
  }

  var cs = module.exports = {
    to: {},
    get: {}
  };

  cs.get = function (string) {
    var prefix = string.substring(0, 3).toLowerCase();
    var val;
    var model;

    switch (prefix) {
      case 'hsl':
        val = cs.get.hsl(string);
        model = 'hsl';
        break;

      case 'hwb':
        val = cs.get.hwb(string);
        model = 'hwb';
        break;

      default:
        val = cs.get.rgb(string);
        model = 'rgb';
        break;
    }

    if (!val) {
      return null;
    }

    return {
      model: model,
      value: val
    };
  };

  cs.get.rgb = function (string) {
    if (!string) {
      return null;
    }

    var abbr = /^#([a-f0-9]{3,4})$/i;
    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
    var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
    var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
    var keyword = /(\D+)/;
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
      }

      if (hexAlpha) {
        rgb[3] = parseInt(hexAlpha, 16) / 255;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16);
      }

      if (hexAlpha) {
        rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0);
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!rgb) {
        return null;
      }

      rgb[3] = 1;
      return rgb;
    } else {
      return null;
    }

    for (i = 0; i < 3; i++) {
      rgb[i] = clamp(rgb[i], 0, 255);
    }

    rgb[3] = clamp(rgb[3], 0, 1);
    return rgb;
  };

  cs.get.hsl = function (string) {
    if (!string) {
      return null;
    }

    var hsl = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
    var match = string.match(hsl);

    if (match) {
      var alpha = parseFloat(match[4]);
      var h = (parseFloat(match[1]) + 360) % 360;
      var s = clamp(parseFloat(match[2]), 0, 100);
      var l = clamp(parseFloat(match[3]), 0, 100);
      var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, s, l, a];
    }

    return null;
  };

  cs.get.hwb = function (string) {
    if (!string) {
      return null;
    }

    var hwb = /^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
    var match = string.match(hwb);

    if (match) {
      var alpha = parseFloat(match[4]);
      var h = (parseFloat(match[1]) % 360 + 360) % 360;
      var w = clamp(parseFloat(match[2]), 0, 100);
      var b = clamp(parseFloat(match[3]), 0, 100);
      var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, w, b, a];
    }

    return null;
  };

  cs.to.hex = function () {
    var rgba = swizzle(arguments);
    return '#' + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '');
  };

  cs.to.rgb = function () {
    var rgba = swizzle(arguments);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')' : 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
  };

  cs.to.rgb.percent = function () {
    var rgba = swizzle(arguments);
    var r = Math.round(rgba[0] / 255 * 100);
    var g = Math.round(rgba[1] / 255 * 100);
    var b = Math.round(rgba[2] / 255 * 100);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)' : 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
  };

  cs.to.hsl = function () {
    var hsla = swizzle(arguments);
    return hsla.length < 4 || hsla[3] === 1 ? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)' : 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
  };

  cs.to.hwb = function () {
    var hwba = swizzle(arguments);
    var a = '';

    if (hwba.length >= 4 && hwba[3] !== 1) {
      a = ', ' + hwba[3];
    }

    return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
  };

  cs.to.keyword = function (rgb) {
    return reverseNames[rgb.slice(0, 3)];
  };

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  function hexDouble(num) {
    var str = num.toString(16).toUpperCase();
    return str.length < 2 ? '0' + str : str;
  }
},11521,[11524,11527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    "aliceblue": [240, 248, 255],
    "antiquewhite": [250, 235, 215],
    "aqua": [0, 255, 255],
    "aquamarine": [127, 255, 212],
    "azure": [240, 255, 255],
    "beige": [245, 245, 220],
    "bisque": [255, 228, 196],
    "black": [0, 0, 0],
    "blanchedalmond": [255, 235, 205],
    "blue": [0, 0, 255],
    "blueviolet": [138, 43, 226],
    "brown": [165, 42, 42],
    "burlywood": [222, 184, 135],
    "cadetblue": [95, 158, 160],
    "chartreuse": [127, 255, 0],
    "chocolate": [210, 105, 30],
    "coral": [255, 127, 80],
    "cornflowerblue": [100, 149, 237],
    "cornsilk": [255, 248, 220],
    "crimson": [220, 20, 60],
    "cyan": [0, 255, 255],
    "darkblue": [0, 0, 139],
    "darkcyan": [0, 139, 139],
    "darkgoldenrod": [184, 134, 11],
    "darkgray": [169, 169, 169],
    "darkgreen": [0, 100, 0],
    "darkgrey": [169, 169, 169],
    "darkkhaki": [189, 183, 107],
    "darkmagenta": [139, 0, 139],
    "darkolivegreen": [85, 107, 47],
    "darkorange": [255, 140, 0],
    "darkorchid": [153, 50, 204],
    "darkred": [139, 0, 0],
    "darksalmon": [233, 150, 122],
    "darkseagreen": [143, 188, 143],
    "darkslateblue": [72, 61, 139],
    "darkslategray": [47, 79, 79],
    "darkslategrey": [47, 79, 79],
    "darkturquoise": [0, 206, 209],
    "darkviolet": [148, 0, 211],
    "deeppink": [255, 20, 147],
    "deepskyblue": [0, 191, 255],
    "dimgray": [105, 105, 105],
    "dimgrey": [105, 105, 105],
    "dodgerblue": [30, 144, 255],
    "firebrick": [178, 34, 34],
    "floralwhite": [255, 250, 240],
    "forestgreen": [34, 139, 34],
    "fuchsia": [255, 0, 255],
    "gainsboro": [220, 220, 220],
    "ghostwhite": [248, 248, 255],
    "gold": [255, 215, 0],
    "goldenrod": [218, 165, 32],
    "gray": [128, 128, 128],
    "green": [0, 128, 0],
    "greenyellow": [173, 255, 47],
    "grey": [128, 128, 128],
    "honeydew": [240, 255, 240],
    "hotpink": [255, 105, 180],
    "indianred": [205, 92, 92],
    "indigo": [75, 0, 130],
    "ivory": [255, 255, 240],
    "khaki": [240, 230, 140],
    "lavender": [230, 230, 250],
    "lavenderblush": [255, 240, 245],
    "lawngreen": [124, 252, 0],
    "lemonchiffon": [255, 250, 205],
    "lightblue": [173, 216, 230],
    "lightcoral": [240, 128, 128],
    "lightcyan": [224, 255, 255],
    "lightgoldenrodyellow": [250, 250, 210],
    "lightgray": [211, 211, 211],
    "lightgreen": [144, 238, 144],
    "lightgrey": [211, 211, 211],
    "lightpink": [255, 182, 193],
    "lightsalmon": [255, 160, 122],
    "lightseagreen": [32, 178, 170],
    "lightskyblue": [135, 206, 250],
    "lightslategray": [119, 136, 153],
    "lightslategrey": [119, 136, 153],
    "lightsteelblue": [176, 196, 222],
    "lightyellow": [255, 255, 224],
    "lime": [0, 255, 0],
    "limegreen": [50, 205, 50],
    "linen": [250, 240, 230],
    "magenta": [255, 0, 255],
    "maroon": [128, 0, 0],
    "mediumaquamarine": [102, 205, 170],
    "mediumblue": [0, 0, 205],
    "mediumorchid": [186, 85, 211],
    "mediumpurple": [147, 112, 219],
    "mediumseagreen": [60, 179, 113],
    "mediumslateblue": [123, 104, 238],
    "mediumspringgreen": [0, 250, 154],
    "mediumturquoise": [72, 209, 204],
    "mediumvioletred": [199, 21, 133],
    "midnightblue": [25, 25, 112],
    "mintcream": [245, 255, 250],
    "mistyrose": [255, 228, 225],
    "moccasin": [255, 228, 181],
    "navajowhite": [255, 222, 173],
    "navy": [0, 0, 128],
    "oldlace": [253, 245, 230],
    "olive": [128, 128, 0],
    "olivedrab": [107, 142, 35],
    "orange": [255, 165, 0],
    "orangered": [255, 69, 0],
    "orchid": [218, 112, 214],
    "palegoldenrod": [238, 232, 170],
    "palegreen": [152, 251, 152],
    "paleturquoise": [175, 238, 238],
    "palevioletred": [219, 112, 147],
    "papayawhip": [255, 239, 213],
    "peachpuff": [255, 218, 185],
    "peru": [205, 133, 63],
    "pink": [255, 192, 203],
    "plum": [221, 160, 221],
    "powderblue": [176, 224, 230],
    "purple": [128, 0, 128],
    "rebeccapurple": [102, 51, 153],
    "red": [255, 0, 0],
    "rosybrown": [188, 143, 143],
    "royalblue": [65, 105, 225],
    "saddlebrown": [139, 69, 19],
    "salmon": [250, 128, 114],
    "sandybrown": [244, 164, 96],
    "seagreen": [46, 139, 87],
    "seashell": [255, 245, 238],
    "sienna": [160, 82, 45],
    "silver": [192, 192, 192],
    "skyblue": [135, 206, 235],
    "slateblue": [106, 90, 205],
    "slategray": [112, 128, 144],
    "slategrey": [112, 128, 144],
    "snow": [255, 250, 250],
    "springgreen": [0, 255, 127],
    "steelblue": [70, 130, 180],
    "tan": [210, 180, 140],
    "teal": [0, 128, 128],
    "thistle": [216, 191, 216],
    "tomato": [255, 99, 71],
    "turquoise": [64, 224, 208],
    "violet": [238, 130, 238],
    "wheat": [245, 222, 179],
    "white": [255, 255, 255],
    "whitesmoke": [245, 245, 245],
    "yellow": [255, 255, 0],
    "yellowgreen": [154, 205, 50]
  };
},11524,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var isArrayish = _$$_REQUIRE(_dependencyMap[0]);

  var concat = Array.prototype.concat;
  var slice = Array.prototype.slice;

  var swizzle = module.exports = function swizzle(args) {
    var results = [];

    for (var i = 0, len = args.length; i < len; i++) {
      var arg = args[i];

      if (isArrayish(arg)) {
        results = concat.call(results, slice.call(arg));
      } else {
        results.push(arg);
      }
    }

    return results;
  };

  swizzle.wrap = function (fn) {
    return function () {
      return fn(swizzle(arguments));
    };
  };
},11527,[10067]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }

    return result;
  }

  module.exports = arrayMap;
},11716,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ListCache = _$$_REQUIRE(_dependencyMap[0]),
      stackClear = _$$_REQUIRE(_dependencyMap[1]),
      stackDelete = _$$_REQUIRE(_dependencyMap[2]),
      stackGet = _$$_REQUIRE(_dependencyMap[3]),
      stackHas = _$$_REQUIRE(_dependencyMap[4]),
      stackSet = _$$_REQUIRE(_dependencyMap[5]);

  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  module.exports = Stack;
},11728,[11731,11755,11758,11761,11764,11767]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var listCacheClear = _$$_REQUIRE(_dependencyMap[0]),
      listCacheDelete = _$$_REQUIRE(_dependencyMap[1]),
      listCacheGet = _$$_REQUIRE(_dependencyMap[2]),
      listCacheHas = _$$_REQUIRE(_dependencyMap[3]),
      listCacheSet = _$$_REQUIRE(_dependencyMap[4]);

  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  module.exports = ListCache;
},11731,[11734,11737,11746,11749,11752]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  module.exports = listCacheClear;
},11734,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assocIndexOf = _$$_REQUIRE(_dependencyMap[0]);

  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;

  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }

    var lastIndex = data.length - 1;

    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }

    --this.size;
    return true;
  }

  module.exports = listCacheDelete;
},11737,[11740]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var eq = _$$_REQUIRE(_dependencyMap[0]);

  function assocIndexOf(array, key) {
    var length = array.length;

    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }

    return -1;
  }

  module.exports = assocIndexOf;
},11740,[11743]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  module.exports = eq;
},11743,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assocIndexOf = _$$_REQUIRE(_dependencyMap[0]);

  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  }

  module.exports = listCacheGet;
},11746,[11740]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assocIndexOf = _$$_REQUIRE(_dependencyMap[0]);

  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  module.exports = listCacheHas;
},11749,[11740]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assocIndexOf = _$$_REQUIRE(_dependencyMap[0]);

  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }

    return this;
  }

  module.exports = listCacheSet;
},11752,[11740]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ListCache = _$$_REQUIRE(_dependencyMap[0]);

  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }

  module.exports = stackClear;
},11755,[11731]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);
    this.size = data.size;
    return result;
  }

  module.exports = stackDelete;
},11758,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function stackGet(key) {
    return this.__data__.get(key);
  }

  module.exports = stackGet;
},11761,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function stackHas(key) {
    return this.__data__.has(key);
  }

  module.exports = stackHas;
},11764,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var ListCache = _$$_REQUIRE(_dependencyMap[0]),
      Map = _$$_REQUIRE(_dependencyMap[1]),
      MapCache = _$$_REQUIRE(_dependencyMap[2]);

  var LARGE_ARRAY_SIZE = 200;

  function stackSet(key, value) {
    var data = this.__data__;

    if (data instanceof ListCache) {
      var pairs = data.__data__;

      if (!Map || pairs.length < 199) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }

      data = this.__data__ = new MapCache(pairs);
    }

    data.set(key, value);
    this.size = data.size;
    return this;
  }

  module.exports = stackSet;
},11767,[11731,11770,11815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]),
      root = _$$_REQUIRE(_dependencyMap[1]);

  var Map = getNative(root, 'Map');
  module.exports = Map;
},11770,[11773,11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsNative = _$$_REQUIRE(_dependencyMap[0]),
      getValue = _$$_REQUIRE(_dependencyMap[1]);

  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  module.exports = getNative;
},11773,[11776,11812]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isFunction = _$$_REQUIRE(_dependencyMap[0]),
      isMasked = _$$_REQUIRE(_dependencyMap[1]),
      isObject = _$$_REQUIRE(_dependencyMap[2]),
      toSource = _$$_REQUIRE(_dependencyMap[3]);

  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var funcProto = Function.prototype,
      objectProto = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }

    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  module.exports = baseIsNative;
},11776,[11779,11803,11800,11809]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      isObject = _$$_REQUIRE(_dependencyMap[1]);

  var asyncTag = '[object AsyncFunction]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      proxyTag = '[object Proxy]';

  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }

    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  module.exports = isFunction;
},11779,[11782,11800]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]),
      getRawTag = _$$_REQUIRE(_dependencyMap[1]),
      objectToString = _$$_REQUIRE(_dependencyMap[2]);

  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';
  var symToStringTag = Symbol ? typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag" : undefined;

  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }

    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }

  module.exports = baseGetTag;
},11782,[11785,11794,11797]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var root = _$$_REQUIRE(_dependencyMap[0]);

  var Symbol = root.Symbol;
  module.exports = Symbol;
},11785,[11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var freeGlobal = _$$_REQUIRE(_dependencyMap[0]);

  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function('return this')();
  module.exports = root;
},11788,[11791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
  module.exports = freeGlobal;
},11791,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var nativeObjectToString = objectProto.toString;
  var symToStringTag = Symbol ? typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag" : undefined;

  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  module.exports = getRawTag;
},11794,[11785]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectProto = Object.prototype;
  var nativeObjectToString = objectProto.toString;

  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  module.exports = objectToString;
},11797,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  module.exports = isObject;
},11800,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var coreJsData = _$$_REQUIRE(_dependencyMap[0]);

  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  module.exports = isMasked;
},11803,[11806]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var root = _$$_REQUIRE(_dependencyMap[0]);

  var coreJsData = root['__core-js_shared__'];
  module.exports = coreJsData;
},11806,[11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var funcProto = Function.prototype;
  var funcToString = funcProto.toString;

  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}

      try {
        return func + '';
      } catch (e) {}
    }

    return '';
  }

  module.exports = toSource;
},11809,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  module.exports = getValue;
},11812,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var mapCacheClear = _$$_REQUIRE(_dependencyMap[0]),
      mapCacheDelete = _$$_REQUIRE(_dependencyMap[1]),
      mapCacheGet = _$$_REQUIRE(_dependencyMap[2]),
      mapCacheHas = _$$_REQUIRE(_dependencyMap[3]),
      mapCacheSet = _$$_REQUIRE(_dependencyMap[4]);

  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  module.exports = MapCache;
},11815,[11818,11842,11851,11854,11857]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Hash = _$$_REQUIRE(_dependencyMap[0]),
      ListCache = _$$_REQUIRE(_dependencyMap[1]),
      Map = _$$_REQUIRE(_dependencyMap[2]);

  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash(),
      'map': new (Map || ListCache)(),
      'string': new Hash()
    };
  }

  module.exports = mapCacheClear;
},11818,[11821,11731,11770]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var hashClear = _$$_REQUIRE(_dependencyMap[0]),
      hashDelete = _$$_REQUIRE(_dependencyMap[1]),
      hashGet = _$$_REQUIRE(_dependencyMap[2]),
      hashHas = _$$_REQUIRE(_dependencyMap[3]),
      hashSet = _$$_REQUIRE(_dependencyMap[4]);

  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;
    this.clear();

    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  module.exports = Hash;
},11821,[11824,11830,11833,11836,11839]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nativeCreate = _$$_REQUIRE(_dependencyMap[0]);

  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  module.exports = hashClear;
},11824,[11827]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]);

  var nativeCreate = getNative(Object, 'create');
  module.exports = nativeCreate;
},11827,[11773]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = hashDelete;
},11830,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nativeCreate = _$$_REQUIRE(_dependencyMap[0]);

  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function hashGet(key) {
    var data = this.__data__;

    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }

    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  module.exports = hashGet;
},11833,[11827]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nativeCreate = _$$_REQUIRE(_dependencyMap[0]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  module.exports = hashHas;
},11836,[11827]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nativeCreate = _$$_REQUIRE(_dependencyMap[0]);

  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  module.exports = hashSet;
},11839,[11827]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getMapData = _$$_REQUIRE(_dependencyMap[0]);

  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = mapCacheDelete;
},11842,[11845]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isKeyable = _$$_REQUIRE(_dependencyMap[0]);

  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  module.exports = getMapData;
},11845,[11848]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  module.exports = isKeyable;
},11848,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getMapData = _$$_REQUIRE(_dependencyMap[0]);

  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  module.exports = mapCacheGet;
},11851,[11845]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getMapData = _$$_REQUIRE(_dependencyMap[0]);

  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  module.exports = mapCacheHas;
},11854,[11845]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getMapData = _$$_REQUIRE(_dependencyMap[0]);

  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  module.exports = mapCacheSet;
},11857,[11845]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsEqualDeep = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }

    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }

    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  module.exports = baseIsEqual;
},11860,[11863,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Stack = _$$_REQUIRE(_dependencyMap[0]),
      equalArrays = _$$_REQUIRE(_dependencyMap[1]),
      equalByTag = _$$_REQUIRE(_dependencyMap[2]),
      equalObjects = _$$_REQUIRE(_dependencyMap[3]),
      getTag = _$$_REQUIRE(_dependencyMap[4]),
      isArray = _$$_REQUIRE(_dependencyMap[5]),
      isBuffer = _$$_REQUIRE(_dependencyMap[6]),
      isTypedArray = _$$_REQUIRE(_dependencyMap[7]);

  var COMPARE_PARTIAL_FLAG = 1;
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = objIsArr ? arrayTag : getTag(object),
        othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }

      objIsArr = true;
      objIsObj = false;
    }

    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }

    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }

    if (!isSameTag) {
      return false;
    }

    stack || (stack = new Stack());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  module.exports = baseIsEqualDeep;
},11863,[11728,11866,11884,11896,11977,11908,11938,11947]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var SetCache = _$$_REQUIRE(_dependencyMap[0]),
      arraySome = _$$_REQUIRE(_dependencyMap[1]),
      cacheHas = _$$_REQUIRE(_dependencyMap[2]);

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }

    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);

    if (arrStacked && othStacked) {
      return arrStacked == other && othStacked == array;
    }

    var index = -1,
        result = true,
        seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
    stack.set(array, other);
    stack.set(other, array);

    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }

      if (compared !== undefined) {
        if (compared) {
          continue;
        }

        result = false;
        break;
      }

      if (seen) {
        if (!arraySome(other, function (othValue, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }

    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  module.exports = equalArrays;
},11866,[11869,11878,11881]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var MapCache = _$$_REQUIRE(_dependencyMap[0]),
      setCacheAdd = _$$_REQUIRE(_dependencyMap[1]),
      setCacheHas = _$$_REQUIRE(_dependencyMap[2]);

  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;
    this.__data__ = new MapCache();

    while (++index < length) {
      this.add(values[index]);
    }
  }

  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;
  module.exports = SetCache;
},11869,[11815,11872,11875]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);

    return this;
  }

  module.exports = setCacheAdd;
},11872,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  module.exports = setCacheHas;
},11875,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }

    return false;
  }

  module.exports = arraySome;
},11878,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  module.exports = cacheHas;
},11881,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]),
      Uint8Array = _$$_REQUIRE(_dependencyMap[1]),
      eq = _$$_REQUIRE(_dependencyMap[2]),
      equalArrays = _$$_REQUIRE(_dependencyMap[3]),
      mapToArray = _$$_REQUIRE(_dependencyMap[4]),
      setToArray = _$$_REQUIRE(_dependencyMap[5]);

  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]';
  var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }

        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }

        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        return eq(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        return object == other + '';

      case mapTag:
        var convert = mapToArray;

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }

        var stacked = stack.get(object);

        if (stacked) {
          return stacked == other;
        }

        bitmask |= COMPARE_UNORDERED_FLAG;
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }

    }

    return false;
  }

  module.exports = equalByTag;
},11884,[11785,11887,11743,11866,11890,11893]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var root = _$$_REQUIRE(_dependencyMap[0]);

  var Uint8Array = root.Uint8Array;
  module.exports = Uint8Array;
},11887,[11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);
    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  module.exports = mapToArray;
},11890,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);
    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  module.exports = setToArray;
},11893,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getAllKeys = _$$_REQUIRE(_dependencyMap[0]);

  var COMPARE_PARTIAL_FLAG = 1;
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = getAllKeys(object),
        objLength = objProps.length,
        othProps = getAllKeys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }

    var index = objLength;

    while (index--) {
      var key = objProps[index];

      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }

    var objStacked = stack.get(object);
    var othStacked = stack.get(other);

    if (objStacked && othStacked) {
      return objStacked == other && othStacked == object;
    }

    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;

    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }

      if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }

      skipCtor || (skipCtor = key == 'constructor');
    }

    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }

    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  module.exports = equalObjects;
},11896,[11899]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetAllKeys = _$$_REQUIRE(_dependencyMap[0]),
      getSymbols = _$$_REQUIRE(_dependencyMap[1]),
      keys = _$$_REQUIRE(_dependencyMap[2]);

  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  module.exports = getAllKeys;
},11899,[11902,11911,11920]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayPush = _$$_REQUIRE(_dependencyMap[0]),
      isArray = _$$_REQUIRE(_dependencyMap[1]);

  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  module.exports = baseGetAllKeys;
},11902,[11905,11908]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }

    return array;
  }

  module.exports = arrayPush;
},11905,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isArray = Array.isArray;
  module.exports = isArray;
},11908,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayFilter = _$$_REQUIRE(_dependencyMap[0]),
      stubArray = _$$_REQUIRE(_dependencyMap[1]);

  var objectProto = Object.prototype;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
    if (object == null) {
      return [];
    }

    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };
  module.exports = getSymbols;
},11911,[11914,11917]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];

      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }

    return result;
  }

  module.exports = arrayFilter;
},11914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function stubArray() {
    return [];
  }

  module.exports = stubArray;
},11917,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayLikeKeys = _$$_REQUIRE(_dependencyMap[0]),
      baseKeys = _$$_REQUIRE(_dependencyMap[1]),
      isArrayLike = _$$_REQUIRE(_dependencyMap[2]);

  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  module.exports = keys;
},11920,[11923,11962,11974]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseTimes = _$$_REQUIRE(_dependencyMap[0]),
      isArguments = _$$_REQUIRE(_dependencyMap[1]),
      isArray = _$$_REQUIRE(_dependencyMap[2]),
      isBuffer = _$$_REQUIRE(_dependencyMap[3]),
      isIndex = _$$_REQUIRE(_dependencyMap[4]),
      isTypedArray = _$$_REQUIRE(_dependencyMap[5]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
        result.push(key);
      }
    }

    return result;
  }

  module.exports = arrayLikeKeys;
},11923,[11926,11929,11908,11938,11944,11947]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }

    return result;
  }

  module.exports = baseTimes;
},11926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsArguments = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  var isArguments = baseIsArguments(function () {
    return arguments;
  }()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };
  module.exports = isArguments;
},11929,[11932,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  var argsTag = '[object Arguments]';

  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  module.exports = baseIsArguments;
},11932,[11782,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  module.exports = isObjectLike;
},11935,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var root = _$$_REQUIRE(_dependencyMap[0]),
      stubFalse = _$$_REQUIRE(_dependencyMap[1]);

  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root.Buffer : undefined;
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
  var isBuffer = nativeIsBuffer || stubFalse;
  module.exports = isBuffer;
},11938,[11788,11941]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function stubFalse() {
    return false;
  }

  module.exports = stubFalse;
},11941,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var MAX_SAFE_INTEGER = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  function isIndex(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  module.exports = isIndex;
},11944,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseIsTypedArray = _$$_REQUIRE(_dependencyMap[0]),
      baseUnary = _$$_REQUIRE(_dependencyMap[1]),
      nodeUtil = _$$_REQUIRE(_dependencyMap[2]);

  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
  module.exports = isTypedArray;
},11947,[11950,11956,11959]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      isLength = _$$_REQUIRE(_dependencyMap[1]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[2]);

  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  module.exports = baseIsTypedArray;
},11950,[11782,11953,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var MAX_SAFE_INTEGER = 9007199254740991;

  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  module.exports = isLength;
},11953,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  module.exports = baseUnary;
},11956,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var freeGlobal = _$$_REQUIRE(_dependencyMap[0]);

  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal.process;

  var nodeUtil = function () {
    try {
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  module.exports = nodeUtil;
},11959,[11791]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isPrototype = _$$_REQUIRE(_dependencyMap[0]),
      nativeKeys = _$$_REQUIRE(_dependencyMap[1]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }

    var result = [];

    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }

    return result;
  }

  module.exports = baseKeys;
},11962,[11965,11968]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectProto = Object.prototype;

  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
  }

  module.exports = isPrototype;
},11965,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var overArg = _$$_REQUIRE(_dependencyMap[0]);

  var nativeKeys = overArg(Object.keys, Object);
  module.exports = nativeKeys;
},11968,[11971]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  module.exports = overArg;
},11971,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isFunction = _$$_REQUIRE(_dependencyMap[0]),
      isLength = _$$_REQUIRE(_dependencyMap[1]);

  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  module.exports = isArrayLike;
},11974,[11779,11953]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var DataView = _$$_REQUIRE(_dependencyMap[0]),
      Map = _$$_REQUIRE(_dependencyMap[1]),
      Promise = _$$_REQUIRE(_dependencyMap[2]),
      Set = _$$_REQUIRE(_dependencyMap[3]),
      WeakMap = _$$_REQUIRE(_dependencyMap[4]),
      baseGetTag = _$$_REQUIRE(_dependencyMap[5]),
      toSource = _$$_REQUIRE(_dependencyMap[6]);

  var mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';
  var dataViewTag = '[object DataView]';
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);
  var getTag = baseGetTag;

  if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
      var result = baseGetTag(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;

          case mapCtorString:
            return mapTag;

          case promiseCtorString:
            return promiseTag;

          case setCtorString:
            return setTag;

          case weakMapCtorString:
            return weakMapTag;
        }
      }

      return result;
    };
  }

  module.exports = getTag;
},11977,[11980,11770,11983,11986,11989,11782,11809]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]),
      root = _$$_REQUIRE(_dependencyMap[1]);

  var DataView = getNative(root, 'DataView');
  module.exports = DataView;
},11980,[11773,11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]),
      root = _$$_REQUIRE(_dependencyMap[1]);

  var Promise = getNative(root, 'Promise');
  module.exports = Promise;
},11983,[11773,11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]),
      root = _$$_REQUIRE(_dependencyMap[1]);

  var Set = getNative(root, 'Set');
  module.exports = Set;
},11986,[11773,11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]),
      root = _$$_REQUIRE(_dependencyMap[1]);

  var WeakMap = getNative(root, 'WeakMap');
  module.exports = WeakMap;
},11989,[11773,11788]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var castPath = _$$_REQUIRE(_dependencyMap[0]),
      toKey = _$$_REQUIRE(_dependencyMap[1]);

  function baseGet(object, path) {
    path = castPath(path, object);
    var index = 0,
        length = path.length;

    while (object != null && index < length) {
      object = object[toKey(path[index++])];
    }

    return index && index == length ? object : undefined;
  }

  module.exports = baseGet;
},12007,[12010,12034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isArray = _$$_REQUIRE(_dependencyMap[0]),
      isKey = _$$_REQUIRE(_dependencyMap[1]),
      stringToPath = _$$_REQUIRE(_dependencyMap[2]),
      toString = _$$_REQUIRE(_dependencyMap[3]);

  function castPath(value, object) {
    if (isArray(value)) {
      return value;
    }

    return isKey(value, object) ? [value] : stringToPath(toString(value));
  }

  module.exports = castPath;
},12010,[11908,12013,12019,12028]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isArray = _$$_REQUIRE(_dependencyMap[0]),
      isSymbol = _$$_REQUIRE(_dependencyMap[1]);

  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  function isKey(value, object) {
    if (isArray(value)) {
      return false;
    }

    var type = typeof value;

    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
      return true;
    }

    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }

  module.exports = isKey;
},12013,[11908,12016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[1]);

  var symbolTag = '[object Symbol]';

  function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
  }

  module.exports = isSymbol;
},12016,[11782,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var memoizeCapped = _$$_REQUIRE(_dependencyMap[0]);

  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath = memoizeCapped(function (string) {
    var result = [];

    if (string.charCodeAt(0) === 46) {
        result.push('');
      }

    string.replace(rePropName, function (match, number, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
    });
    return result;
  });
  module.exports = stringToPath;
},12019,[12022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var memoize = _$$_REQUIRE(_dependencyMap[0]);

  var MAX_MEMOIZE_SIZE = 500;

  function memoizeCapped(func) {
    var result = memoize(func, function (key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }

      return key;
    });
    var cache = result.cache;
    return result;
  }

  module.exports = memoizeCapped;
},12022,[12025]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var MapCache = _$$_REQUIRE(_dependencyMap[0]);

  var FUNC_ERROR_TEXT = 'Expected a function';

  function memoize(func, resolver) {
    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }

    var memoized = function memoized() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }

      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };

    memoized.cache = new (memoize.Cache || MapCache)();
    return memoized;
  }

  memoize.Cache = MapCache;
  module.exports = memoize;
},12025,[11815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseToString = _$$_REQUIRE(_dependencyMap[0]);

  function toString(value) {
    return value == null ? '' : baseToString(value);
  }

  module.exports = toString;
},12028,[12031]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]),
      arrayMap = _$$_REQUIRE(_dependencyMap[1]),
      isArray = _$$_REQUIRE(_dependencyMap[2]),
      isSymbol = _$$_REQUIRE(_dependencyMap[3]);

  var INFINITY = 1 / 0;
  var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  function baseToString(value) {
    if (typeof value == 'string') {
      return value;
    }

    if (isArray(value)) {
      return arrayMap(value, baseToString) + '';
    }

    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }

    var result = value + '';
    return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
  }

  module.exports = baseToString;
},12031,[11785,11716,11908,12016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isSymbol = _$$_REQUIRE(_dependencyMap[0]);

  var INFINITY = 1 / 0;

  function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) {
      return value;
    }

    var result = value + '';
    return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
  }

  module.exports = toKey;
},12034,[12016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseHasIn = _$$_REQUIRE(_dependencyMap[0]),
      hasPath = _$$_REQUIRE(_dependencyMap[1]);

  function hasIn(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }

  module.exports = hasIn;
},12037,[12040,12043]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }

  module.exports = baseHasIn;
},12040,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var castPath = _$$_REQUIRE(_dependencyMap[0]),
      isArguments = _$$_REQUIRE(_dependencyMap[1]),
      isArray = _$$_REQUIRE(_dependencyMap[2]),
      isIndex = _$$_REQUIRE(_dependencyMap[3]),
      isLength = _$$_REQUIRE(_dependencyMap[4]),
      toKey = _$$_REQUIRE(_dependencyMap[5]);

  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);
    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = toKey(path[index]);

      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }

      object = object[key];
    }

    if (result || ++index != length) {
      return result;
    }

    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
  }

  module.exports = hasPath;
},12043,[12010,11929,11908,11944,11953,12034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function identity(value) {
    return value;
  }

  module.exports = identity;
},12046,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      getPrototype = _$$_REQUIRE(_dependencyMap[1]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[2]);

  var objectTag = '[object Object]';
  var funcProto = Function.prototype,
      objectProto = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectCtorString = funcToString.call(Object);

  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }

    var proto = getPrototype(value);

    if (proto === null) {
      return true;
    }

    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }

  module.exports = isPlainObject;
},12085,[11782,12088,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var overArg = _$$_REQUIRE(_dependencyMap[0]);

  var getPrototype = overArg(Object.getPrototypeOf, Object);
  module.exports = getPrototype;
},12088,[11971]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var apply = _$$_REQUIRE(_dependencyMap[0]);

  var nativeMax = Math.max;

  function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
    return function () {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }

      index = -1;
      var otherArgs = Array(start + 1);

      while (++index < start) {
        otherArgs[index] = args[index];
      }

      otherArgs[start] = transform(array);
      return apply(func, this, otherArgs);
    };
  }

  module.exports = overRest;
},12115,[12118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);

      case 1:
        return func.call(thisArg, args[0]);

      case 2:
        return func.call(thisArg, args[0], args[1]);

      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }

    return func.apply(thisArg, args);
  }

  module.exports = apply;
},12118,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseSetToString = _$$_REQUIRE(_dependencyMap[0]),
      shortOut = _$$_REQUIRE(_dependencyMap[1]);

  var setToString = shortOut(baseSetToString);
  module.exports = setToString;
},12121,[12124,12133]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var constant = _$$_REQUIRE(_dependencyMap[0]),
      defineProperty = _$$_REQUIRE(_dependencyMap[1]),
      identity = _$$_REQUIRE(_dependencyMap[2]);

  var baseSetToString = !defineProperty ? identity : function (func, string) {
    return defineProperty(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': constant(string),
      'writable': true
    });
  };
  module.exports = baseSetToString;
},12124,[12127,12130,12046]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function constant(value) {
    return function () {
      return value;
    };
  }

  module.exports = constant;
},12127,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getNative = _$$_REQUIRE(_dependencyMap[0]);

  var defineProperty = function () {
    try {
      var func = getNative(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }();

  module.exports = defineProperty;
},12130,[11773]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var HOT_COUNT = 800,
      HOT_SPAN = 16;
  var nativeNow = Date.now;

  function shortOut(func) {
    var count = 0,
        lastCalled = 0;
    return function () {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;

      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }

      return func.apply(undefined, arguments);
    };
  }

  module.exports = shortOut;
},12133,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayLikeKeys = _$$_REQUIRE(_dependencyMap[0]),
      baseKeysIn = _$$_REQUIRE(_dependencyMap[1]),
      isArrayLike = _$$_REQUIRE(_dependencyMap[2]);

  function keysIn(object) {
    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }

  module.exports = keysIn;
},12139,[11923,12142,11974]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]),
      isPrototype = _$$_REQUIRE(_dependencyMap[1]),
      nativeKeysIn = _$$_REQUIRE(_dependencyMap[2]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function baseKeysIn(object) {
    if (!isObject(object)) {
      return nativeKeysIn(object);
    }

    var isProto = isPrototype(object),
        result = [];

    for (var key in object) {
      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
        result.push(key);
      }
    }

    return result;
  }

  module.exports = baseKeysIn;
},12142,[11800,11965,12145]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function nativeKeysIn(object) {
    var result = [];

    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }

    return result;
  }

  module.exports = nativeKeysIn;
},12145,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseAssignValue = _$$_REQUIRE(_dependencyMap[0]),
      eq = _$$_REQUIRE(_dependencyMap[1]);

  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;

  function assignValue(object, key, value) {
    var objValue = object[key];

    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
      baseAssignValue(object, key, value);
    }
  }

  module.exports = assignValue;
},12151,[12154,11743]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function baseAssignValue(object, key, value) {
    if (key == '__proto__' && defineProperty) {
      defineProperty(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
      });
    } else {
      object[key] = value;
    }
  }

  module.exports = baseAssignValue;
},12154,[12130]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assignValue = _$$_REQUIRE(_dependencyMap[0]),
      baseAssignValue = _$$_REQUIRE(_dependencyMap[1]);

  function copyObject(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});
    var index = -1,
        length = props.length;

    while (++index < length) {
      var key = props[index];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

      if (newValue === undefined) {
        newValue = source[key];
      }

      if (isNew) {
        baseAssignValue(object, key, newValue);
      } else {
        assignValue(object, key, newValue);
      }
    }

    return object;
  }

  module.exports = copyObject;
},12157,[12151,12154]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toFinite = _$$_REQUIRE(_dependencyMap[0]);

  function toInteger(value) {
    var result = toFinite(value),
        remainder = result % 1;
    return result === result ? remainder ? result - remainder : result : 0;
  }

  module.exports = toInteger;
},12178,[12181]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var toNumber = _$$_REQUIRE(_dependencyMap[0]);

  var INFINITY = 1 / 0,
      MAX_INTEGER = 1.7976931348623157e+308;

  function toFinite(value) {
    if (!value) {
      return value === 0 ? value : 0;
    }

    value = toNumber(value);

    if (value === INFINITY || value === -(1 / 0)) {
      var sign = value < 0 ? -1 : 1;
      return sign * MAX_INTEGER;
    }

    return value === value ? value : 0;
  }

  module.exports = toFinite;
},12181,[12184]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]),
      isSymbol = _$$_REQUIRE(_dependencyMap[1]);

  var NAN = 0 / 0;
  var reTrim = /^\s+|\s+$/g;
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  var reIsBinary = /^0b[01]+$/i;
  var reIsOctal = /^0o[0-7]+$/i;
  var freeParseInt = parseInt;

  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }

    if (isSymbol(value)) {
      return NAN;
    }

    if (isObject(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject(other) ? other + '' : other;
    }

    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }

    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
  }

  module.exports = toNumber;
},12184,[11800,12016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetTag = _$$_REQUIRE(_dependencyMap[0]),
      isArray = _$$_REQUIRE(_dependencyMap[1]),
      isObjectLike = _$$_REQUIRE(_dependencyMap[2]);

  var stringTag = '[object String]';

  function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
  }

  module.exports = isString;
},12208,[11782,11908,11935]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var basePick = _$$_REQUIRE(_dependencyMap[0]),
      flatRest = _$$_REQUIRE(_dependencyMap[1]);

  var pick = flatRest(function (object, paths) {
    return object == null ? {} : basePick(object, paths);
  });
  module.exports = pick;
},12244,[12247,12256]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var basePickBy = _$$_REQUIRE(_dependencyMap[0]),
      hasIn = _$$_REQUIRE(_dependencyMap[1]);

  function basePick(object, paths) {
    return basePickBy(object, paths, function (value, path) {
      return hasIn(object, path);
    });
  }

  module.exports = basePick;
},12247,[12250,12037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGet = _$$_REQUIRE(_dependencyMap[0]),
      baseSet = _$$_REQUIRE(_dependencyMap[1]),
      castPath = _$$_REQUIRE(_dependencyMap[2]);

  function basePickBy(object, paths, predicate) {
    var index = -1,
        length = paths.length,
        result = {};

    while (++index < length) {
      var path = paths[index],
          value = baseGet(object, path);

      if (predicate(value, path)) {
        baseSet(result, castPath(path, object), value);
      }
    }

    return result;
  }

  module.exports = basePickBy;
},12250,[12007,12253,12010]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var assignValue = _$$_REQUIRE(_dependencyMap[0]),
      castPath = _$$_REQUIRE(_dependencyMap[1]),
      isIndex = _$$_REQUIRE(_dependencyMap[2]),
      isObject = _$$_REQUIRE(_dependencyMap[3]),
      toKey = _$$_REQUIRE(_dependencyMap[4]);

  function baseSet(object, path, value, customizer) {
    if (!isObject(object)) {
      return object;
    }

    path = castPath(path, object);
    var index = -1,
        length = path.length,
        lastIndex = length - 1,
        nested = object;

    while (nested != null && ++index < length) {
      var key = toKey(path[index]),
          newValue = value;

      if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
        return object;
      }

      if (index != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : undefined;

        if (newValue === undefined) {
          newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
        }
      }

      assignValue(nested, key, newValue);
      nested = nested[key];
    }

    return object;
  }

  module.exports = baseSet;
},12253,[12151,12010,11944,11800,12034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var flatten = _$$_REQUIRE(_dependencyMap[0]),
      overRest = _$$_REQUIRE(_dependencyMap[1]),
      setToString = _$$_REQUIRE(_dependencyMap[2]);

  function flatRest(func) {
    return setToString(overRest(func, undefined, flatten), func + '');
  }

  module.exports = flatRest;
},12256,[12259,12115,12121]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseFlatten = _$$_REQUIRE(_dependencyMap[0]);

  function flatten(array) {
    var length = array == null ? 0 : array.length;
    return length ? baseFlatten(array, 1) : [];
  }

  module.exports = flatten;
},12259,[12262]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayPush = _$$_REQUIRE(_dependencyMap[0]),
      isFlattenable = _$$_REQUIRE(_dependencyMap[1]);

  function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1,
        length = array.length;
    predicate || (predicate = isFlattenable);
    result || (result = []);

    while (++index < length) {
      var value = array[index];

      if (depth > 0 && predicate(value)) {
        if (depth > 1) {
          baseFlatten(value, depth - 1, predicate, isStrict, result);
        } else {
          arrayPush(result, value);
        }
      } else if (!isStrict) {
        result[result.length] = value;
      }
    }

    return result;
  }

  module.exports = baseFlatten;
},12262,[11905,12265]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var Symbol = _$$_REQUIRE(_dependencyMap[0]),
      isArguments = _$$_REQUIRE(_dependencyMap[1]),
      isArray = _$$_REQUIRE(_dependencyMap[2]);

  var spreadableSymbol = Symbol ? typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable" : undefined;

  function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
  }

  module.exports = isFlattenable;
},12265,[11785,11929,11908]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var baseGetAllKeys = _$$_REQUIRE(_dependencyMap[0]),
      getSymbolsIn = _$$_REQUIRE(_dependencyMap[1]),
      keysIn = _$$_REQUIRE(_dependencyMap[2]);

  function getAllKeysIn(object) {
    return baseGetAllKeys(object, keysIn, getSymbolsIn);
  }

  module.exports = getAllKeysIn;
},12304,[11902,12307,12139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayPush = _$$_REQUIRE(_dependencyMap[0]),
      getPrototype = _$$_REQUIRE(_dependencyMap[1]),
      getSymbols = _$$_REQUIRE(_dependencyMap[2]),
      stubArray = _$$_REQUIRE(_dependencyMap[3]);

  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
    var result = [];

    while (object) {
      arrayPush(result, getSymbols(object));
      object = getPrototype(object);
    }

    return result;
  };
  module.exports = getSymbolsIn;
},12307,[11905,12088,11911,11917]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function last(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : undefined;
  }

  module.exports = last;
},12445,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var isObject = _$$_REQUIRE(_dependencyMap[0]);

  var objectCreate = Object.create;

  var baseCreate = function () {
    function object() {}

    return function (proto) {
      if (!isObject(proto)) {
        return {};
      }

      if (objectCreate) {
        return objectCreate(proto);
      }

      object.prototype = proto;
      var result = new object();
      object.prototype = undefined;
      return result;
    };
  }();

  module.exports = baseCreate;
},12892,[11800]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function copyArray(source, array) {
    var index = -1,
        length = source.length;
    array || (array = Array(length));

    while (++index < length) {
      array[index] = source[index];
    }

    return array;
  }

  module.exports = copyArray;
},12922,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var identity = _$$_REQUIRE(_dependencyMap[0]);

  function castFunction(value) {
    return typeof value == 'function' ? value : identity;
  }

  module.exports = castFunction;
},12928,[12046]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},13495,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.isIOS && _native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var InternalListViewType = _$$_REQUIRE(_dependencyMap[2]);

  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[3]);

  var React = _$$_REQUIRE(_dependencyMap[4]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[5]);

  var Platform = ReactNative.Platform;
  var RCTScrollViewManager = ReactNative.NativeModules.ScrollViewManager;
  var ScrollView = ReactNative.ScrollView;

  var ScrollResponderMixin = _$$_REQUIRE(_dependencyMap[6]).Mixin;

  var StaticRenderer = _$$_REQUIRE(_dependencyMap[7]);

  var View = ReactNative.View;

  var cloneReferencedElement = _$$_REQUIRE(_dependencyMap[8]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[9]);

  var isEmpty = _$$_REQUIRE(_dependencyMap[10]);

  var merge = _$$_REQUIRE(_dependencyMap[11]);

  var DEFAULT_PAGE_SIZE = 1;
  var DEFAULT_INITIAL_ROWS = 10;
  var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
  var DEFAULT_END_REACHED_THRESHOLD = 1000;
  var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;
  var ListView = createReactClass({
    displayName: 'ListView',
    _rafIds: [],
    _childFrames: [],
    _sentEndForContentLength: null,
    _scrollComponent: null,
    _prevRenderedRowsCount: 0,
    _visibleRows: {},
    scrollProperties: {},
    mixins: [ScrollResponderMixin],
    statics: {
      DataSource: ListViewDataSource
    },
    getMetrics: function getMetrics() {
      return {
        contentLength: this.scrollProperties.contentLength,
        totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
        renderedRows: this.state.curRenderedRowsCount,
        visibleRows: Object.keys(this._visibleRows).length
      };
    },
    getScrollResponder: function getScrollResponder() {
      if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
        return this._scrollComponent.getScrollResponder();
      }
    },
    getScrollableNode: function getScrollableNode() {
      if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
        return this._scrollComponent.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollComponent);
      }
    },
    scrollTo: function scrollTo() {
      if (this._scrollComponent && this._scrollComponent.scrollTo) {
        var _this$_scrollComponen;

        (_this$_scrollComponen = this._scrollComponent).scrollTo.apply(_this$_scrollComponen, arguments);
      }
    },
    scrollToEnd: function scrollToEnd(options) {
      if (this._scrollComponent) {
        if (this._scrollComponent.scrollToEnd) {
          this._scrollComponent.scrollToEnd(options);
        } else {}
      }
    },
    flashScrollIndicators: function flashScrollIndicators() {
      if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {
        this._scrollComponent.flashScrollIndicators();
      }
    },
    setNativeProps: function setNativeProps(props) {
      if (this._scrollComponent) {
        this._scrollComponent.setNativeProps(props);
      }
    },
    getDefaultProps: function getDefaultProps() {
      return {
        initialListSize: DEFAULT_INITIAL_ROWS,
        pageSize: DEFAULT_PAGE_SIZE,
        renderScrollComponent: function renderScrollComponent(props) {
          return React.createElement(ScrollView, props);
        },
        scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
        onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
        stickySectionHeadersEnabled: false,
        stickyHeaderIndices: []
      };
    },
    getInitialState: function getInitialState() {
      return {
        curRenderedRowsCount: this.props.initialListSize,
        highlightedRow: {}
      };
    },
    getInnerViewNode: function getInnerViewNode() {
      return this._scrollComponent && this._scrollComponent.getInnerViewNode();
    },
    UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {
      this.scrollProperties = {
        visibleLength: null,
        contentLength: null,
        offset: 0
      };
      this._rafIds = [];
      this._childFrames = [];
      this._visibleRows = {};
      this._prevRenderedRowsCount = 0;
      this._sentEndForContentLength = null;
    },
    componentWillUnmount: function componentWillUnmount() {
      this._rafIds.forEach(cancelAnimationFrame);

      this._rafIds = [];
    },
    componentDidMount: function componentDidMount() {
      var _this = this;

      this._requestAnimationFrame(function () {
        _this._measureAndUpdateScrollProps();
      });
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
        this.setState(function (state, props) {
          _this2._prevRenderedRowsCount = 0;
          return {
            curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
          };
        }, function () {
          return _this2._renderMoreRowsIfNeeded();
        });
      }
    },
    componentDidUpdate: function componentDidUpdate() {
      var _this3 = this;

      this._requestAnimationFrame(function () {
        _this3._measureAndUpdateScrollProps();
      });
    },
    _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
      this.setState({
        highlightedRow: {
          sectionID: sectionID,
          rowID: rowID
        }
      });
    },
    render: function render() {
      var bodyComponents = [];
      var dataSource = this.props.dataSource;
      var allRowIDs = dataSource.rowIdentities;
      var rowCount = 0;
      var stickySectionHeaderIndices = [];
      var renderSectionHeader = this.props.renderSectionHeader;
      var header = this.props.renderHeader && this.props.renderHeader();
      var footer = this.props.renderFooter && this.props.renderFooter();
      var totalIndex = header ? 1 : 0;

      for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
        var sectionID = dataSource.sectionIdentities[sectionIdx];
        var rowIDs = allRowIDs[sectionIdx];

        if (rowIDs.length === 0) {
          if (this.props.enableEmptySections === undefined) {
            var warning = _$$_REQUIRE(_dependencyMap[12]);

            warning(false, "In next release empty section headers will be rendered. In this release you can use 'enableEmptySections' flag to render empty section headers.");
            continue;
          } else {
            var invariant = _$$_REQUIRE(_dependencyMap[13]);

            invariant(this.props.enableEmptySections, "In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered. If empty section headers are not desirable their indices should be excluded from sectionIDs object. In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.");
          }
        }

        if (renderSectionHeader) {
          var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);

          if (element) {
            bodyComponents.push(React.cloneElement(element, {
              key: 's_' + sectionID
            }));

            if (this.props.stickySectionHeadersEnabled) {
              stickySectionHeaderIndices.push(totalIndex);
            }

            totalIndex++;
          }
        }

        for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
          var rowID = rowIDs[rowIdx];
          var comboID = sectionID + '_' + rowID;
          var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
          var row = React.createElement(StaticRenderer, {
            key: 'r_' + comboID,
            shouldUpdate: !!shouldUpdateRow,
            render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted)
          });
          bodyComponents.push(row);
          totalIndex++;

          if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
            var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
            var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);

            if (separator) {
              bodyComponents.push(React.createElement(View, {
                key: 's_' + comboID
              }, separator));
              totalIndex++;
            }
          }

          if (++rowCount === this.state.curRenderedRowsCount) {
            break;
          }
        }

        if (rowCount >= this.state.curRenderedRowsCount) {
          break;
        }
      }

      var _this$props = this.props,
          renderScrollComponent = _this$props.renderScrollComponent,
          props = _objectWithoutProperties(_this$props, ["renderScrollComponent"]);

      if (!props.scrollEventThrottle) {
        props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
      }

      if (props.removeClippedSubviews === undefined) {
        props.removeClippedSubviews = true;
      }

      _extends(props, {
        onScroll: this._onScroll,
        stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),
        onKeyboardWillShow: undefined,
        onKeyboardWillHide: undefined,
        onKeyboardDidShow: undefined,
        onKeyboardDidHide: undefined
      });

      return cloneReferencedElement(renderScrollComponent(props), {
        ref: this._setScrollComponentRef,
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined
      }, header, bodyComponents, footer);
    },
    _requestAnimationFrame: function _requestAnimationFrame(fn) {
      var _this4 = this;

      var rafId = requestAnimationFrame(function () {
        _this4._rafIds = _this4._rafIds.filter(function (id) {
          return id !== rafId;
        });
        fn();
      });

      this._rafIds.push(rafId);
    },
    _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
      var scrollComponent = this.getScrollResponder();

      if (!scrollComponent || !scrollComponent.getInnerViewNode) {
        return;
      }

      RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
    },
    _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
      this._scrollComponent = scrollComponent;
    },
    _onContentSizeChange: function _onContentSizeChange(width, height) {
      var contentLength = !this.props.horizontal ? height : width;

      if (contentLength !== this.scrollProperties.contentLength) {
        this.scrollProperties.contentLength = contentLength;

        this._updateVisibleRows();

        this._renderMoreRowsIfNeeded();
      }

      this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
    },
    _onLayout: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      var visibleLength = !this.props.horizontal ? height : width;

      if (visibleLength !== this.scrollProperties.visibleLength) {
        this.scrollProperties.visibleLength = visibleLength;

        this._updateVisibleRows();

        this._renderMoreRowsIfNeeded();
      }

      this.props.onLayout && this.props.onLayout(event);
    },
    _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
      if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
        this._sentEndForContentLength = this.scrollProperties.contentLength;
        this.props.onEndReached(event);
        return true;
      }

      return false;
    },
    _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
      if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
        this._maybeCallOnEndReached();

        return;
      }

      var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);

      if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
        this._pageInNewRows();
      }
    },
    _pageInNewRows: function _pageInNewRows() {
      var _this5 = this;

      this.setState(function (state, props) {
        var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
        _this5._prevRenderedRowsCount = state.curRenderedRowsCount;
        return {
          curRenderedRowsCount: rowsToRender
        };
      }, function () {
        _this5._measureAndUpdateScrollProps();

        _this5._prevRenderedRowsCount = _this5.state.curRenderedRowsCount;
      });
    },
    _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
      return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
    },
    _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
      var _this6 = this;

      if (!this.props.onChangeVisibleRows) {
        return;
      }

      if (updatedFrames) {
        updatedFrames.forEach(function (newFrame) {
          _this6._childFrames[newFrame.index] = merge(newFrame);
        });
      }

      var isVertical = !this.props.horizontal;
      var dataSource = this.props.dataSource;
      var visibleMin = this.scrollProperties.offset;
      var visibleMax = visibleMin + this.scrollProperties.visibleLength;
      var allRowIDs = dataSource.rowIdentities;
      var header = this.props.renderHeader && this.props.renderHeader();
      var totalIndex = header ? 1 : 0;
      var visibilityChanged = false;
      var changedRows = {};

      for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
        var rowIDs = allRowIDs[sectionIdx];

        if (rowIDs.length === 0) {
          continue;
        }

        var sectionID = dataSource.sectionIdentities[sectionIdx];

        if (this.props.renderSectionHeader) {
          totalIndex++;
        }

        var visibleSection = this._visibleRows[sectionID];

        if (!visibleSection) {
          visibleSection = {};
        }

        for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
          var rowID = rowIDs[rowIdx];
          var frame = this._childFrames[totalIndex];
          totalIndex++;

          if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
            totalIndex++;
          }

          if (!frame) {
            break;
          }

          var rowVisible = visibleSection[rowID];
          var min = isVertical ? frame.y : frame.x;
          var max = min + (isVertical ? frame.height : frame.width);

          if (!min && !max || min === max) {
            break;
          }

          if (min > visibleMax || max < visibleMin) {
            if (rowVisible) {
              visibilityChanged = true;
              delete visibleSection[rowID];

              if (!changedRows[sectionID]) {
                changedRows[sectionID] = {};
              }

              changedRows[sectionID][rowID] = false;
            }
          } else if (!rowVisible) {
            visibilityChanged = true;
            visibleSection[rowID] = true;

            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }

            changedRows[sectionID][rowID] = true;
          }
        }

        if (!isEmpty(visibleSection)) {
          this._visibleRows[sectionID] = visibleSection;
        } else if (this._visibleRows[sectionID]) {
          delete this._visibleRows[sectionID];
        }
      }

      visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
    },
    _onScroll: function _onScroll(e) {
      var isVertical = !this.props.horizontal;
      this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
      this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
      this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];

      this._updateVisibleRows(e.nativeEvent.updatedChildFrames);

      if (!this._maybeCallOnEndReached(e)) {
        this._renderMoreRowsIfNeeded();
      }

      if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
        this._sentEndForContentLength = null;
      }

      this.props.onScroll && this.props.onScroll(e);
    }
  });
  module.exports = ListView;
},14716,[14344,14407,14719,14722,10297,10033,10615,14728,10675,10456,10669,10339,10078,13495]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[6]);

  var InternalListViewType = function (_React$Component) {
    "use strict";

    _inherits(InternalListViewType, _React$Component);

    function InternalListViewType() {
      _classCallCheck(this, InternalListViewType);

      return _possibleConstructorReturn(this, _getPrototypeOf(InternalListViewType).apply(this, arguments));
    }

    _createClass(InternalListViewType, [{
      key: "setNativeProps",
      value: function setNativeProps(props) {}
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {}
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {}
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {}
    }, {
      key: "getMetrics",
      value: function getMetrics() {}
    }, {
      key: "scrollTo",
      value: function scrollTo() {}
    }, {
      key: "scrollToEnd",
      value: function scrollToEnd(options) {}
    }]);

    return InternalListViewType;
  }(React.Component);

  InternalListViewType.DataSource = ListViewDataSource;
  module.exports = InternalListViewType;
},14719,[14320,14323,14371,14377,14386,10297,14722]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1]);

  var _createClass = _$$_REQUIRE(_dependencyMap[2]);

  var invariant = _$$_REQUIRE(_dependencyMap[3]);

  var isEmpty = _$$_REQUIRE(_dependencyMap[4]);

  var warning = _$$_REQUIRE(_dependencyMap[5]);

  function defaultGetRowData(dataBlob, sectionID, rowID) {
    return dataBlob[sectionID][rowID];
  }

  function defaultGetSectionHeaderData(dataBlob, sectionID) {
    return dataBlob[sectionID];
  }

  var ListViewDataSource = function () {
    function ListViewDataSource(params) {
      _classCallCheck(this, ListViewDataSource);

      invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
      this._rowHasChanged = params.rowHasChanged;
      this._getRowData = params.getRowData || defaultGetRowData;
      this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
      this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;
      this._dataBlob = null;
      this._dirtyRows = [];
      this._dirtySections = [];
      this._cachedRowCount = 0;
      this.rowIdentities = [];
      this.sectionIdentities = [];
    }

    _createClass(ListViewDataSource, [{
      key: "cloneWithRows",
      value: function cloneWithRows(dataBlob, rowIdentities) {
        var rowIds = rowIdentities ? [_toConsumableArray(rowIdentities)] : null;

        if (!this._sectionHeaderHasChanged) {
          this._sectionHeaderHasChanged = function () {
            return false;
          };
        }

        return this.cloneWithRowsAndSections({
          s1: dataBlob
        }, ['s1'], rowIds);
      }
    }, {
      key: "cloneWithRowsAndSections",
      value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
        invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
        invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');
        var newSource = new ListViewDataSource({
          getRowData: this._getRowData,
          getSectionHeaderData: this._getSectionHeaderData,
          rowHasChanged: this._rowHasChanged,
          sectionHeaderHasChanged: this._sectionHeaderHasChanged
        });
        newSource._dataBlob = dataBlob;

        if (sectionIdentities) {
          newSource.sectionIdentities = sectionIdentities;
        } else {
          newSource.sectionIdentities = Object.keys(dataBlob);
        }

        if (rowIdentities) {
          newSource.rowIdentities = rowIdentities;
        } else {
          newSource.rowIdentities = [];
          newSource.sectionIdentities.forEach(function (sectionID) {
            newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
          });
        }

        newSource._cachedRowCount = countRows(newSource.rowIdentities);

        newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

        return newSource;
      }
    }, {
      key: "getRowCount",
      value: function getRowCount() {
        return this._cachedRowCount;
      }
    }, {
      key: "getRowAndSectionCount",
      value: function getRowAndSectionCount() {
        return this._cachedRowCount + this.sectionIdentities.length;
      }
    }, {
      key: "rowShouldUpdate",
      value: function rowShouldUpdate(sectionIndex, rowIndex) {
        var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
        warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
        return needsUpdate;
      }
    }, {
      key: "getRowData",
      value: function getRowData(sectionIndex, rowIndex) {
        var sectionID = this.sectionIdentities[sectionIndex];
        var rowID = this.rowIdentities[sectionIndex][rowIndex];
        warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
        return this._getRowData(this._dataBlob, sectionID, rowID);
      }
    }, {
      key: "getRowIDForFlatIndex",
      value: function getRowIDForFlatIndex(index) {
        var accessIndex = index;

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          if (accessIndex >= this.rowIdentities[ii].length) {
            accessIndex -= this.rowIdentities[ii].length;
          } else {
            return this.rowIdentities[ii][accessIndex];
          }
        }

        return null;
      }
    }, {
      key: "getSectionIDForFlatIndex",
      value: function getSectionIDForFlatIndex(index) {
        var accessIndex = index;

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          if (accessIndex >= this.rowIdentities[ii].length) {
            accessIndex -= this.rowIdentities[ii].length;
          } else {
            return this.sectionIdentities[ii];
          }
        }

        return null;
      }
    }, {
      key: "getSectionLengths",
      value: function getSectionLengths() {
        var results = [];

        for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
          results.push(this.rowIdentities[ii].length);
        }

        return results;
      }
    }, {
      key: "sectionHeaderShouldUpdate",
      value: function sectionHeaderShouldUpdate(sectionIndex) {
        var needsUpdate = this._dirtySections[sectionIndex];
        warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
        return needsUpdate;
      }
    }, {
      key: "getSectionHeaderData",
      value: function getSectionHeaderData(sectionIndex) {
        if (!this._getSectionHeaderData) {
          return null;
        }

        var sectionID = this.sectionIdentities[sectionIndex];
        warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
        return this._getSectionHeaderData(this._dataBlob, sectionID);
      }
    }, {
      key: "_calculateDirtyArrays",
      value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
        var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
        var prevRowsHash = {};

        for (var ii = 0; ii < prevRowIDs.length; ii++) {
          var sectionID = prevSectionIDs[ii];
          warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
          prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
        }

        this._dirtySections = [];
        this._dirtyRows = [];
        var dirty;

        for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
          var _sectionID = this.sectionIdentities[sIndex];
          dirty = !prevSectionsHash[_sectionID];
          var sectionHeaderHasChanged = this._sectionHeaderHasChanged;

          if (!dirty && sectionHeaderHasChanged) {
            dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, _sectionID), this._getSectionHeaderData(this._dataBlob, _sectionID));
          }

          this._dirtySections.push(!!dirty);

          this._dirtyRows[sIndex] = [];

          for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
            var rowID = this.rowIdentities[sIndex][rIndex];
            dirty = !prevSectionsHash[_sectionID] || !prevRowsHash[_sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, _sectionID, rowID), this._getRowData(this._dataBlob, _sectionID, rowID));

            this._dirtyRows[sIndex].push(!!dirty);
          }
        }
      }
    }]);

    return ListViewDataSource;
  }();

  function countRows(allRowIDs) {
    var totalRows = 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      totalRows += rowIDs.length;
    }

    return totalRows;
  }

  function keyedDictionaryFromArray(arr) {
    if (isEmpty(arr)) {
      return {};
    }

    var result = {};

    for (var ii = 0; ii < arr.length; ii++) {
      var _key = arr[ii];
      warning(!result[_key], 'Value appears more than once in array: ' + _key);
      result[_key] = true;
    }

    return result;
  }

  module.exports = ListViewDataSource;
},14722,[14359,14320,14323,13495,10669,10078]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StaticRenderer = function (_React$Component) {
    _inherits(StaticRenderer, _React$Component);

    function StaticRenderer() {
      _classCallCheck(this, StaticRenderer);

      return _possibleConstructorReturn(this, _getPrototypeOf(StaticRenderer).apply(this, arguments));
    }

    _createClass(StaticRenderer, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.render();
      }
    }]);

    return StaticRenderer;
  }(React.Component);

  module.exports = StaticRenderer;
},14728,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";
},22387,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            checkedBigCircleStyle = _this$props2.checkedBigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var borderColorChecked = checkedBigCircleStyle.borderColorChecked,
            backgroundColorChecked = checkedBigCircleStyle.backgroundColorChecked,
            borderColor = checkedBigCircleStyle.borderColor,
            backgroundColor = checkedBigCircleStyle.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    checkedBigCircleStyle: {
      borderColorChecked: '#32BAC0',
      backgroundColorChecked: '#32BAC0',
      borderColor: '#E5E5E5',
      backgroundColor: '#E5E5E5'
    },
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    total[role] = role;
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;

  function getAccessibilityConfig() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        accessible = _ref.accessible,
        accessibilityRole = _ref.accessibilityRole,
        accessibilityLabel = _ref.accessibilityLabel,
        accessibilityHint = _ref.accessibilityHint,
        accessibilityState = _ref.accessibilityState,
        accessibilityValue = _ref.accessibilityValue;

    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if ([AccessibilityRoles.image, AccessibilityRoles.imagebutton].indexOf(accessibility.accessibilityRole) !== -1) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome'
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native'
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.3)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.20)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isIOS && _check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var value = !this.state.value;

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }

        this.setState({
          value: value
        }, this.animated);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3])
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[4]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[5]),
          press: _$$_REQUIRE(_dependencyMap[6]),
          disable: _$$_REQUIRE(_dependencyMap[7])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[8]),
          press: _$$_REQUIRE(_dependencyMap[9]),
          disable: _$$_REQUIRE(_dependencyMap[10])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[11]),
          press: _$$_REQUIRE(_dependencyMap[12]),
          disable: _$$_REQUIRE(_dependencyMap[13])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[14]),
          press: _$$_REQUIRE(_dependencyMap[15]),
          disable: _$$_REQUIRE(_dependencyMap[16])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[17]),
          press: _$$_REQUIRE(_dependencyMap[18]),
          disable: _$$_REQUIRE(_dependencyMap[19])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[20]),
          press: _$$_REQUIRE(_dependencyMap[21]),
          disable: _$$_REQUIRE(_dependencyMap[22])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[23]),
          press: _$$_REQUIRE(_dependencyMap[24]),
          disable: _$$_REQUIRE(_dependencyMap[25])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[26]),
          press: _$$_REQUIRE(_dependencyMap[27]),
          disable: _$$_REQUIRE(_dependencyMap[28])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[29]),
          press: _$$_REQUIRE(_dependencyMap[30]),
          disable: _$$_REQUIRE(_dependencyMap[31])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[32]),
          press: _$$_REQUIRE(_dependencyMap[33]),
          disable: _$$_REQUIRE(_dependencyMap[34])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[35]),
          press: _$$_REQUIRE(_dependencyMap[36]),
          disable: _$$_REQUIRE(_dependencyMap[37])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[38]),
          press: _$$_REQUIRE(_dependencyMap[39]),
          disable: _$$_REQUIRE(_dependencyMap[40])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[41]),
          press: _$$_REQUIRE(_dependencyMap[42]),
          disable: _$$_REQUIRE(_dependencyMap[43])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[44]),
          press: _$$_REQUIRE(_dependencyMap[45]),
          disable: _$$_REQUIRE(_dependencyMap[46])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[47]),
          press: _$$_REQUIRE(_dependencyMap[48]),
          disable: _$$_REQUIRE(_dependencyMap[49])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[50]),
          press: _$$_REQUIRE(_dependencyMap[51]),
          disable: _$$_REQUIRE(_dependencyMap[52])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[53]),
          press: _$$_REQUIRE(_dependencyMap[54]),
          disable: _$$_REQUIRE(_dependencyMap[55])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[56]),
          press: _$$_REQUIRE(_dependencyMap[57]),
          disable: _$$_REQUIRE(_dependencyMap[58])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[59]),
          press: _$$_REQUIRE(_dependencyMap[60]),
          disable: _$$_REQUIRE(_dependencyMap[61])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[62]),
          press: _$$_REQUIRE(_dependencyMap[63]),
          disable: _$$_REQUIRE(_dependencyMap[64])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[65]),
          press: _$$_REQUIRE(_dependencyMap[66]),
          disable: _$$_REQUIRE(_dependencyMap[67])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[68]),
          press: _$$_REQUIRE(_dependencyMap[69]),
          disable: _$$_REQUIRE(_dependencyMap[70])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[71]),
          press: _$$_REQUIRE(_dependencyMap[72]),
          disable: _$$_REQUIRE(_dependencyMap[73])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[74]),
          press: _$$_REQUIRE(_dependencyMap[75]),
          disable: _$$_REQUIRE(_dependencyMap[76])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[77]),
          press: _$$_REQUIRE(_dependencyMap[78]),
          disable: _$$_REQUIRE(_dependencyMap[79])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[80]),
          press: _$$_REQUIRE(_dependencyMap[81]),
          disable: _$$_REQUIRE(_dependencyMap[82])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[83]),
          press: _$$_REQUIRE(_dependencyMap[84]),
          disable: _$$_REQUIRE(_dependencyMap[85])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[86]),
          press: _$$_REQUIRE(_dependencyMap[87]),
          disable: _$$_REQUIRE(_dependencyMap[88])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[89]),
          press: _$$_REQUIRE(_dependencyMap[90]),
          disable: _$$_REQUIRE(_dependencyMap[91])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[92]),
          press: _$$_REQUIRE(_dependencyMap[93]),
          disable: _$$_REQUIRE(_dependencyMap[94])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[95]),
          press: _$$_REQUIRE(_dependencyMap[96]),
          disable: _$$_REQUIRE(_dependencyMap[97])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[98]),
          press: _$$_REQUIRE(_dependencyMap[99]),
          disable: _$$_REQUIRE(_dependencyMap[100])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[101]),
          press: _$$_REQUIRE(_dependencyMap[102]),
          disable: _$$_REQUIRE(_dependencyMap[103])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[104]),
          press: _$$_REQUIRE(_dependencyMap[105]),
          disable: _$$_REQUIRE(_dependencyMap[106])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[107]),
          press: _$$_REQUIRE(_dependencyMap[108]),
          disable: _$$_REQUIRE(_dependencyMap[109])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[110]),
          press: _$$_REQUIRE(_dependencyMap[111]),
          disable: _$$_REQUIRE(_dependencyMap[112])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[113]),
          press: _$$_REQUIRE(_dependencyMap[114]),
          disable: _$$_REQUIRE(_dependencyMap[115])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[116]),
          press: _$$_REQUIRE(_dependencyMap[117]),
          disable: _$$_REQUIRE(_dependencyMap[118])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[119])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[120])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[121]),
        press: _$$_REQUIRE(_dependencyMap[122])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[123]),
        press: _$$_REQUIRE(_dependencyMap[124])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23260,23263,23266,23206,23209,23269,23272,23275,23278]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.25)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#E5E5E5', '#E5E5E5');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (isIOS && this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[12]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _reactNativeOrientation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('#666666', '#ffffff');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));

      _this.orientationDidChange = function (orientation) {
        if (orientation === 'LANDSCAPE') {
          var _width = _reactNative.Platform.OS === 'ios' ? _reactNative.Dimensions.get('window').width : _this.initWindow.height;

          _this.setState({
            navWidth: _width
          });
        } else {
          var _width2 = _reactNative.Platform.OS === 'ios' ? _reactNative.Dimensions.get('window').width : _this.initWindow.width;

          _this.setState({
            navWidth: _width2
          });
        }
      };

      (0, _reportDecorator.referenceReport)('NavigationBar');

      var _initWindow = _reactNative.Dimensions.get('window');

      if (_initWindow.width > _initWindow.height) {
        _this.initWindow = (0, _objectSpread2.default)({}, _initWindow, {
          width: _initWindow.height,
          height: _initWindow.width
        });
      } else {
        _this.initWindow = _initWindow;
      }

      _this.state = {
        navWidth: _reactNative.Dimensions.get('window').width
      };
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        _reactNativeOrientation.default.addOrientationListener(this.orientationDidChange);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNativeOrientation.default.removeOrientationListener(this.orientationDidChange);
      }
    }, {
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel,
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (_reactNative.Platform.OS === 'ios' && this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight,
            width: this.state.navWidth
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'MI-LANTING--GBK1-Light',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: {
      fontSize: 18,
      lineHeight: 24,
      fontFamily: 'D-DINCondensed-Bold',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    titleView: {
      fontSize: 16,
      fontFamily: 'D-DINCondensed-Bold',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 14,
      lineHeight: 18,
      fontFamily: 'MI-LANTING--GBK1-Light',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,10918,22435,22456,22795,22426,22420,22423,13579]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
},22861,[14305,14308,22864,22870,22873,22876]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: this.props.underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    underlayColor: _resources.Styles.common.underlayColor,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      backgroundColor: '#fff',
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = this.optionStep ? (w - offset) / this.length : (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * this.length;

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,0.9)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,0.3)', 'rgba(255,255,255,0.3)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : ''
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: this.props.leftTextColor
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: this.props.rightTextColor
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextStyle: {},
    maximumTrackTintColor: '#F5F5F5',
    rightTextColor: '#999',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _string = _$$_REQUIRE(_dependencyMap[14]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _utils = _$$_REQUIRE(_dependencyMap[16]);

  var _locale = _$$_REQUIRE(_dependencyMap[17]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _popButton = _$$_REQUIRE(_dependencyMap[22]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityHint: _this2.props.accessibilityHint
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.background
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {}
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: {
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16,
      fontFamily: 'MILanPro_MEDIUM--GB1-4',
      fontWeight: 'bold'
    },
    subtitle: {
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5,
      fontFamily: 'MILanPro_MEDIUM--GB1-4',
      fontWeight: 'bold'
    },
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22780,22927,22912,22930,22933,22426,22420,22423,22435,23212]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _locale = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _popButton = _$$_REQUIRE(_dependencyMap[17]);

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            fontWeight: 'bold',
            color: '#000',
            marginTop: height ? 7 : 10
          }, marginBottom, fontFamily, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.background, {
            backgroundColor: theme.colorOverLayerBlack
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    showTitle: _propTypes.default.bool,
    showSubtitle: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
      disabled: _propTypes.default.bool,
      onLongPress: _propTypes.default.func,
      backgroundColor: _propTypes.default.object,
      colorType: _propTypes.default.string
    })),
    showButton: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    useNewTheme: _propTypes.default.bool
  };
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22420,22423,22933,22426,22891,23212]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [{
            textAlign: 'left',
            fontSize: 16,
            color: '#000000',
            fontWeight: 'bold',
            lineHeight: 22,
            fontFamily: 'MILanPro_MEDIUM--GB1-4',
            marginLeft: 30
          }, this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: '#ECECEC',
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);
    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }]);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];
              if (item) selectedIndexArray.push(i);
            }

            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      _this.state = {
        visible: props.visible,
        selectedArray: []
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        if (!this.props.visible) return null;
        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          useNewTheme: true,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();
          }

          this.props.onSelect && this.props.onSelect([index]);
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: true
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: true
          });
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "checktextInputArray",
      value: function checktextInputArray(arr) {
        var result = false;
        arr.forEach(function (element) {
          if (element === '' || typeof element === undefined || element === null) result = true;
        });
        return result;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;
        var r = this.checktextInputArray(this.textInputArray);
        if (r !== this.state.disButton) this.setState({
          disButton: r
        });
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          backgroundColor: "white"
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              backgroundColor: 'white',
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer, {
              backgroundColor: 'white'
            }]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        if (!this.props.visible) return null;
        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: true
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误'
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19,
      color: '#999'
    },
    inputWarnText: {
      color: '#F43F31',
      alignSelf: 'flex-start',
      marginHorizontal: 16,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            this.timer = null;
            clearTimeout(this.timer);
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.timer = null;
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16,
      color: '#333333'
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        if (!this.props.visible) return null;
        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    extra: {}
  };
  MessageDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      fontSize: 16,
      color: '#333333',
      lineHeight: 22,
      fontFamily: 'MILanPro--GB1-4'
    },
    subText: {
      fontSize: 12,
      color: '#999999',
      lineHeight: 16,
      fontFamily: 'MILanPro--GB1-4'
    },
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#999'
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        if (!this.props.visible) return null;
        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: '#fff',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      color: '#333333',
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      backgroundColor: '#F5F5F5',
      borderRadius: 10,
      borderWidth: 2,
      borderColor: '#F5F5F5',
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      color: '#000000',
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19,
      color: '#333333'
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 100);
        }

        var progressText = Math.round(this.props.progress * 100) + "%";
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: this.props.unfilledColor,
          width: _resources.Styles.dialog.modal.width - 54,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.timer = null;
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    unfilledColor: '#F5F5F5',
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16,
      color: '#333333'
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var margin = ~~((_resources.Styles.dialog.modal.width - 80 - 192) / 3);
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: margin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[16]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'Kmedium'
          };
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? {
            fontWeight: 'bold'
          } : {}, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, fontFamily, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7,
          fontFamily: _font.FontDefault
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            fontWeight: 'bold',
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          this.setState({
            value: value,
            valueStr: this.format(value)
          });
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        if (_reactNative.Platform.OS === 'android') {
          extraStyle.fontFamily = 'KMedium';
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, this.props.useNewType ? {
            fontWeight: 'bold'
          } : {}, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;
  ListItemWithSwitch.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[15]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, {
          style: styles.imageContainer
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var fontFamily = {};
        if (_reactNative.Platform.OS === 'android') fontFamily = {
          fontFamily: 'Kmedium'
        };
        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, fontFamily, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Icons = _$$_REQUIRE(_dependencyMap[9]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _switch = _$$_REQUIRE(_dependencyMap[11]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[12]);

  var _sizes = _$$_REQUIRE(_dependencyMap[13]);

  var _fonts = _$$_REQUIRE(_dependencyMap[14]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            themeColor = _this$props2.themeColor,
            themeBackgroundColor = _this$props2.themeBackgroundColor,
            underlayColor = _this$props2.underlayColor,
            hasShadow = _this$props2.hasShadow,
            iconContainerStyle = _this$props2.iconContainerStyle,
            iconStyle = _this$props2.iconStyle,
            icon = _this$props2.icon,
            iconText = _this$props2.iconText,
            title = _this$props2.title,
            subtitle = _this$props2.subtitle,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            disabled = _this$props2.disabled,
            onPress = _this$props2.onPress,
            rightText = _this$props2.rightText,
            rightArrow = _this$props2.rightArrow;
        var opacity = disabled ? 0.3 : 1;

        if (!icon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.TouchableHighlight, {
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, _react.default.createElement(_react.default.Fragment, null, icon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: themeColor || _Colors.default.green,
            opacity: opacity
          }]
        }, icon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: icon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, {
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        })) : rightText || rightArrow ? _react.default.createElement(_react.default.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: Styles.rightArrow,
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: {
      fontFamily: _fonts.FontKmedium,
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    },
    titleContainer: {
      flex: 1
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999'
    },
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23077,[14308,14305,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        var type = horizontal ? 'column' : 'row';
        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible'
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {}
        })), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(30),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _styles = _$$_REQUIRE(_dependencyMap[9]);

  var _colors = _$$_REQUIRE(_dependencyMap[10]);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;
        return _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
            opacity: 0.3
          } : null])
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          disabled: disabled,
          style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
            backgroundColor: themeColor || _colors.ColorGreen,
            borderColor: themeColor || _colors.ColorGreen
          } : offColor ? {
            backgroundColor: offColor,
            borderColor: offColor
          } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
          activeOpacity: 1,
          onPress: this.onPress,
          onPressIn: this.onPressIn,
          onPressOut: this.onPressOut
        }, icon ? _react.default.createElement(_reactNative.Image, {
          style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
          source: selected && !disabled ? iconSelected || iconSelected : icon
        }) : _react.default.createElement(_reactNative.Text, {
          style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
        }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
          style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
            color: themeColor || _colors.ColorGreen
          } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
          numberOfLines: horizontal ? 2 : 1
        }, title) : null);
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: function onPress() {},
    title: '',
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14320,14323,14371,14377,14386,10297,10033,23098,23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 1,
      borderColor: 'rgba(176, 182, 184, 0.4)'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'transparent',
      borderColor: 'rgba(197, 201, 203, 1)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)',
      borderColor: 'rgba(197, 201, 203, 1)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#7F7F7F'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#7F7F7F'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4])
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Source0 = _$$_REQUIRE(_dependencyMap[14]);

  var Source1 = _$$_REQUIRE(_dependencyMap[15]);

  var Source2 = _$$_REQUIRE(_dependencyMap[16]);

  var Source3 = _$$_REQUIRE(_dependencyMap[17]);

  var Source4 = _$$_REQUIRE(_dependencyMap[18]);

  var Source5 = _$$_REQUIRE(_dependencyMap[19]);

  var Source6 = _$$_REQUIRE(_dependencyMap[20]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;
        var color = disabled ? '#47525F' : themeColor || '#FA9E19';

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, {
            color: color
          }]
        }, title));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        var _this2 = this;

        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000)
        }).start(function (_ref) {
          var finished = _ref.finished;

          if (finished) {
            _this2.state.progress.setValue(0);

            _this2.startAnimation();
          }
        });
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnimation();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var bottom = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [getRandomBetween(0, 20) + "%", '100%']
        });
        var left = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            bottom: bottom,
            left: left
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;

        if (!on) {
          return null;
        }

        var dots = this.getDots();
        return _react.default.createElement(_reactNative.View, {
          style: StylesBackground.container
        }, dots);
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any
  };
  Background.defaultProps = {
    on: false,
    themeColor: null
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(210),
      textAlign: 'center',
      color: '#f00'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(1263)
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var selected = selectedIndexs.indexOf(index) !== -1;
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, {
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            selected: selected,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.select(index);
            }
          }));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            items = _this$props3.items,
            hasShadow = _this$props3.hasShadow,
            showSwitch = _this$props3.showSwitch,
            disabled = _this$props3.disabled,
            switchOn = _this$props3.switchOn,
            themeColor = _this$props3.themeColor,
            onSwitch = _this$props3.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, {
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? null : _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _sizes = _$$_REQUIRE(_dependencyMap[14]);

  var _fonts = _$$_REQUIRE(_dependencyMap[15]);

  var _colors = _$$_REQUIRE(_dependencyMap[16]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            options = _this$props3.options,
            disabled = _this$props3.disabled,
            switchDisabled = _this$props3.switchDisabled,
            themeColor = _this$props3.themeColor,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch,
            initValue = _this$props3.initValue,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            hasShadow = _this$props3.hasShadow,
            min = _this$props3.min,
            max = _this$props3.max,
            step = _this$props3.step,
            contentType = _this$props3.contentType,
            showEndText = _this$props3.showEndText;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, {
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? null : _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, {
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: themeColor || _colors.ColorGreen,
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }))));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(45),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            showHighlight: true,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[5]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[6]);

  var _font = _$$_REQUIRE(_dependencyMap[7]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < str.length; i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: {
      textAlign: 'center',
      maxWidth: 282,
      fontWeight: 'bold',
      fontSize: 16,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    },
    mediumTitle: {
      textAlign: 'center',
      maxWidth: 123,
      fontWeight: 'bold',
      fontSize: 16,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    },
    smallTitle: {
      textAlign: 'center',
      maxWidth: 52,
      fontWeight: 'bold',
      fontSize: 13,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    }
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[5]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[6]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _font = _$$_REQUIRE(_dependencyMap[9]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: {
      fontSize: 16,
      lineHeight: 22,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    },
    mediumTitle: {
      fontSize: 16,
      lineHeight: 22,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    },
    smallTitle: {
      fontSize: 13,
      lineHeight: 18,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    }
  });
},23218,[14308,14305,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: false,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var borderColor = isFocused && this._notNull(inputValue) ? String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor) : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: {
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16,
            fontFamily: _font.FontLantingProMedium
          },
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23278,[10420]);
__r(10120);
__r(10001);