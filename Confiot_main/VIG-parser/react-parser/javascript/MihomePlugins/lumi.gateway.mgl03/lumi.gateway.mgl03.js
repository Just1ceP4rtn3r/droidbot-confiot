
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  _LHCommonFunction.LHDebugConfig.OffDebug();

  _miot.Package.entry(_index.default);
},10001,[14305,10074,10004,10262]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "LHAuthorizationUtils", {
    enumerable: true,
    get: function get() {
      return _LHAuthorizationUtils.default;
    }
  });
  Object.defineProperty(exports, "LHPureRenderDecorator", {
    enumerable: true,
    get: function get() {
      return _LHPureRenderDecorator.default;
    }
  });
  Object.defineProperty(exports, "LHUiUtils", {
    enumerable: true,
    get: function get() {
      return _LHUiUtils.default;
    }
  });
  Object.defineProperty(exports, "LHCommonLocalizableString", {
    enumerable: true,
    get: function get() {
      return _LHCommonLocalizableString.default;
    }
  });
  Object.defineProperty(exports, "CommonMethod", {
    enumerable: true,
    get: function get() {
      return _LHCommonMethod.default;
    }
  });
  Object.defineProperty(exports, "LHDateUtils", {
    enumerable: true,
    get: function get() {
      return _LHDateUtils.default;
    }
  });
  Object.defineProperty(exports, "LHMiServer", {
    enumerable: true,
    get: function get() {
      return _LHMiServer.default;
    }
  });
  Object.defineProperty(exports, "LHToastUtils", {
    enumerable: true,
    get: function get() {
      return _LHToastUtils.default;
    }
  });
  Object.defineProperty(exports, "LHDialogUtils", {
    enumerable: true,
    get: function get() {
      return _LHDialogUtils.default;
    }
  });
  Object.defineProperty(exports, "LHAppiumUtils", {
    enumerable: true,
    get: function get() {
      return _LHAppiumUtils.default;
    }
  });
  Object.defineProperty(exports, "LHDeviceAuthorityUtils", {
    enumerable: true,
    get: function get() {
      return _LHDeviceAuthorityUtils.default;
    }
  });
  Object.defineProperty(exports, "LHUiColorUtils", {
    enumerable: true,
    get: function get() {
      return _LHUiColorUtils.default;
    }
  });
  Object.defineProperty(exports, "LHFirmwareUpgradeAutoUtils", {
    enumerable: true,
    get: function get() {
      return _LHFirmwareUpgradeAutoUtils.default;
    }
  });
  Object.defineProperty(exports, "LHStringUtils", {
    enumerable: true,
    get: function get() {
      return _LHStringUtils.default;
    }
  });
  Object.defineProperty(exports, "LHSpecStatus", {
    enumerable: true,
    get: function get() {
      return _LHSpecStatus.default;
    }
  });
  Object.defineProperty(exports, "LHSpecHost", {
    enumerable: true,
    get: function get() {
      return _LHSpecHost.default;
    }
  });
  Object.defineProperty(exports, "LHDeviceUtils", {
    enumerable: true,
    get: function get() {
      return _LHDeviceUtils.default;
    }
  });
  Object.defineProperty(exports, "LHIFTTTManager", {
    enumerable: true,
    get: function get() {
      return _LHIFTTTManager.default;
    }
  });
  Object.defineProperty(exports, "LHLocalizedStrings", {
    enumerable: true,
    get: function get() {
      return _LHLocalizedStrings.default;
    }
  });
  Object.defineProperty(exports, "LHGuardTypeMode", {
    enumerable: true,
    get: function get() {
      return _LHGuardTypeMode.default;
    }
  });
  Object.defineProperty(exports, "LHDeviceModel", {
    enumerable: true,
    get: function get() {
      return _LHDeviceModel.default;
    }
  });
  Object.defineProperty(exports, "LHFunctionDialogUtils", {
    enumerable: true,
    get: function get() {
      return _LHFunctionDialogUtils.default;
    }
  });
  Object.defineProperty(exports, "LHSettingItem", {
    enumerable: true,
    get: function get() {
      return _LHSettingItem.default;
    }
  });
  Object.defineProperty(exports, "LHTimeSpanUtils", {
    enumerable: true,
    get: function get() {
      return _LHTimeSpanUtils.default;
    }
  });
  Object.defineProperty(exports, "LHPolicyLicenseUtils", {
    enumerable: true,
    get: function get() {
      return _LHPolicyLicenseUtils.default;
    }
  });
  Object.defineProperty(exports, "LHBleUtils", {
    enumerable: true,
    get: function get() {
      return _LHBleUtils.default;
    }
  });
  Object.defineProperty(exports, "LHDebugConfig", {
    enumerable: true,
    get: function get() {
      return _LHDebugConfig.default;
    }
  });
  exports.dp = undefined;

  var _LHAuthorizationUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _LHPureRenderDecorator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHUiUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHDateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHToastUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHAppiumUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHDeviceAuthorityUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHUiColorUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHFirmwareUpgradeAutoUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHStringUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHSpecStatus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHSpecHost = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHDeviceUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHIFTTTManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _LHLocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _LHFunctionDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _LHSettingItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _LHTimeSpanUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _LHPolicyLicenseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _LHBleUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _LHDebugConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _LHGetPx = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var dp = _LHGetPx.default;
  exports.dp = dp;
},10004,[14305,10007,10103,10109,10034,10019,10121,10013,10127,10160,10166,10097,10148,10172,10175,10181,10184,10154,10187,10223,10202,10196,10226,10232,10238,10028,10244,10256,10115]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHAuthorizationUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHAuthorizationUtils.default;
  exports.default = _default;
},10007,[14305,10010]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHPolicyLicenseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHDeviceAuthorityUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var privacyProtocolCacheKey = 'prop.s_auth_config';
  var isOnline = _miot.Device.isOnline;

  var LHAuthorizationUtils = function () {
    function LHAuthorizationUtils() {
      (0, _classCallCheck2.default)(this, LHAuthorizationUtils);
    }

    (0, _createClass2.default)(LHAuthorizationUtils, null, [{
      key: "Authorization",
      value: function Authorization(params) {
        if (!params.policyResource) {
          throw new Error('LHAuthorizationUtils: params policy resource is undefine!');
        }

        if (LHAuthorizationUtils.PolicyCode.hasRequest) {
          LHAuthorizationUtils.CheckAuthorized(params);
        } else {
          LHAuthorizationUtils.checkRegion(params);
        }

        return LHAuthorizationUtils.AuthorizationCancelListener(params);
      }
    }, {
      key: "AuthorizationCancelListener",
      value: function AuthorizationCancelListener(params) {
        return _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
          if (typeof params.authorizationCancelCallback === 'function') {
            params.authorizationCancelCallback();
          }

          if (_miot.Package && _reactNative.Platform.OS !== 'ios') {
            _miot.Package.exit();
          }
        });
      }
    }, {
      key: "checkRegion",
      value: function checkRegion(params) {
        var needCheckAuthorized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var callback = arguments.length > 2 ? arguments[2] : undefined;

        var onSucces = function onSucces() {
          if (needCheckAuthorized) LHAuthorizationUtils.CheckAuthorized(params);
          if (typeof callback === 'function') callback();
        };

        if (LHAuthorizationUtils.PolicyCode.hasRequest) {
          onSucces();
        } else {
          _LHPolicyLicenseUtils.default.GetCountryLanguageCode(function (res, serverCode, countryCode) {
            LHAuthorizationUtils.PolicyCode.languageCode = res;
            LHAuthorizationUtils.PolicyCode.countryCode = countryCode;
            LHAuthorizationUtils.PolicyCode.serverCode = serverCode;
            LHAuthorizationUtils.PolicyCode.hasRequest = true;
            onSucces();
          });
        }
      }
    }, {
      key: "CheckAuthorized",
      value: function CheckAuthorized(params) {
        if (_LHDeviceAuthorityUtils.default.isShared()) {
          if (typeof params.authorizationSucc === 'function') params.authorizationSucc();
          return;
        }

        _LHMiServer.default.BatchGetDeviceDatas([{
          did: _miot.Device.deviceID,
          props: [privacyProtocolCacheKey]
        }], function (res) {
          var alreadyAuthed = false;
          var result = res[_miot.Device.deviceID];
          var config;

          if (result && result[privacyProtocolCacheKey]) {
            config = result[privacyProtocolCacheKey];
          }

          if (config) {
            try {
              var authJson = JSON.parse(config);
              alreadyAuthed = authJson.privacyAuthed && true;
            } catch (err) {}
          }

          if (alreadyAuthed) {
            if (typeof params.authorizationSucc === 'function') params.authorizationSucc();
          } else {
            LHAuthorizationUtils.OpenPrivacyLicense(params);
          }
        }, function () {
          if (typeof params.authorizationSucc === 'function') params.authorizationSucc();
        });
      }
    }, {
      key: "OpenPrivacyLicense",
      value: function OpenPrivacyLicense(params) {
        var policyLicenseUrl = _LHPolicyLicenseUtils.default.GexPolicyLicenseUrl(params.policyResource, LHAuthorizationUtils.PolicyCode.languageCode, LHAuthorizationUtils.PolicyCode.serverCode, LHAuthorizationUtils.PolicyCode.countryCode);

        _LHMiServer.default.OpenPrivacyLicense(params.licenseTitle, policyLicenseUrl.licenseUrl, params.policyTitle, policyLicenseUrl.policyUrl).then(function (result) {
          if (result) {
            var onSucces = typeof params.authorizationSucc === 'function' ? params.authorizationSucc : function () {};
            LHAuthorizationUtils.SavePrivacyProtocolKey(onSucces);
          }
        });
      }
    }, {
      key: "SavePrivacyProtocolKey",
      value: function SavePrivacyProtocolKey(success) {
        _LHMiServer.default.BatchSetDeviceDatas([{
          did: _miot.Device.deviceID,
          props: (0, _defineProperty2.default)({}, privacyProtocolCacheKey, JSON.stringify({
            privacyAuthed: true
          }))
        }], function () {
          success();
        }, function () {
          success();
        });
      }
    }]);
    return LHAuthorizationUtils;
  }();

  exports.default = LHAuthorizationUtils;
  LHAuthorizationUtils.PolicyCode = {
    languageCode: 'en',
    countryCode: 'cn',
    serverCode: 'cn',
    hasRequest: false,
    hideLegalInfo: false
  };
},10010,[14305,14317,14320,14323,10074,10033,10013,10028,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHMiServer.default;
  exports.default = _default;
},10013,[14305,10016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _miot = _$$_REQUIRE(_dependencyMap[5]);

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var tempRPCParams;
  var rpcPayloads = {};
  var rpcStatus = {
    unExecuted: 0,
    success: 1,
    failed: 2
  };

  function baseRequire(requireFn, errorCount, params, onSuccess, onFail) {
    var nextErrorCount = errorCount + 1;
    requireFn(params).then(function (res) {
      if (typeof onSuccess === 'function') {
        nextErrorCount = -1;
        onSuccess(res);
      }
    }).catch(function (err) {
      if (nextErrorCount === -1) {} else {
        setTimeout(function () {
          if (errorCount < 3) {
            return baseRequire(requireFn, nextErrorCount, params, onSuccess, onFail);
          }

          if (typeof onFail === 'function') onFail(err);
          return null;
        }, 1000);
      }
    });
  }

  function baseRequireWithMultipleParams(requireFn, errorCount, onSuccess, onFail) {
    for (var _len = arguments.length, params = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      params[_key - 4] = arguments[_key];
    }

    var nextErrorCount = errorCount + 1;
    requireFn.apply(undefined, params).then(function (res) {
      if (typeof onSuccess === 'function') {
        nextErrorCount = -1;
        onSuccess(res);
      }
    }).catch(function (err) {
      if (nextErrorCount === -1) {} else {
        setTimeout(function () {
          if (errorCount < 3) {
            return baseRequireWithMultipleParams.apply(undefined, [requireFn, nextErrorCount, onSuccess, onFail].concat(params));
          }

          if (typeof onFail === 'function') onFail(err);
          return null;
        }, 1000);
      }
    });
  }

  var LHMiServer = function () {
    function LHMiServer() {
      (0, _classCallCheck2.default)(this, LHMiServer);
    }

    (0, _createClass2.default)(LHMiServer, null, [{
      key: "GetDeviceData",
      value: function GetDeviceData(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getDeviceData, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetDeviceDataRaw",
      value: function GetDeviceDataRaw(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getDeviceDataRaw, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetDeviceDataPromise",
      value: function GetDeviceDataPromise(params) {
        return _miot.Service.smarthome.getDeviceData(params);
      }
    }, {
      key: "GetUserDeviceDataTab",
      value: function GetUserDeviceDataTab(params, onSuccess, onFail) {
        var option = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        return baseRequire(_miot.Service.smarthome.getUserDeviceDataTab, option, params, onSuccess, onFail);
      }
    }, {
      key: "GetUserDeviceLog",
      value: function GetUserDeviceLog(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getUserDeviceLog, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetHostStorage",
      value: function GetHostStorage(key) {
        return _miot.Host.storage.get(key).then(function (res) {
          if (res && typeof res === 'object') {
            return _LHCommonMethod.default.DeepClone(res);
          }

          return res;
        });
      }
    }, {
      key: "SetHostStorage",
      value: function SetHostStorage(key, value, opt) {
        return _miot.Host.storage.set(key, value, opt || {
          expire: 0
        });
      }
    }, {
      key: "GetDeviceSetting",
      value: function GetDeviceSetting(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getDeviceSettingV2, 0, params, onSuccess, onFail);
      }
    }, {
      key: "SetDeviceSetting",
      value: function SetDeviceSetting(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.setDeviceSetting, 3, params, onSuccess, onFail);
      }
    }, {
      key: "OpenPrivacyLicense",
      value: function OpenPrivacyLicense(licenseText, licenseUrl, policyText, policyUrl) {
        return _miot.Host.ui.alertLegalInformationAuthorization({
          licenseText: licenseText,
          agreementURL: licenseUrl,
          policyText: policyText,
          privacyURL: policyUrl,
          hideUserExperiencePlan: true
        });
      }
    }, {
      key: "GetSubDevices",
      value: function GetSubDevices(onSuccess, onFail) {
        return _miot.Device.getSubDevices().then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "LoadRealDeviceConfig",
      value: function LoadRealDeviceConfig(model, onSuccess, onFail) {
        return _miot.Device.loadRealDeviceConfig(model).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "DeleteDevices",
      value: function DeleteDevices(didAndPid, onSuccess, onFail) {
        return _miot.Device.deleteDevices(didAndPid).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "ChangeDeviceName",
      value: function ChangeDeviceName(newName, did, onSuccess, onFail) {
        return _miot.Device.changeDeviceName(newName, did).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "LoadSceneList",
      value: function LoadSceneList(did, sceneType, opt, onSuccess, onFail) {
        return baseRequireWithMultipleParams(_miot.Service.scene.loadScenes, 0, onSuccess, onFail, did, sceneType, opt);
      }
    }, {
      key: "LoadScenesHistoryForDevice",
      value: function LoadScenesHistoryForDevice(did, timestamp, limit, onSuccess, onFail) {
        return baseRequireWithMultipleParams(_miot.Service.scene.loadScenesHistoryForDevice, 0, onSuccess, onFail, did, timestamp, limit);
      }
    }, {
      key: "GetPropertiesValue",
      value: function GetPropertiesValue(params, onSuccess, onFail) {
        var errorCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        return baseRequire(_miot.Service.spec.getPropertiesValue, errorCount, params, onSuccess, onFail);
      }
    }, {
      key: "SetPropertiesValue",
      value: function SetPropertiesValue(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.spec.setPropertiesValue, 3, params, onSuccess, onFail);
      }
    }, {
      key: "GetSpecProperties",
      value: function GetSpecProperties(params) {
        var _this = this;

        return new Promise(function (resolve, reject) {
          _this.GetPropertiesValue(params, resolve, reject, 3);
        }).catch(function (error) {
          throw error;
        });
      }
    }, {
      key: "SetSpecProperties",
      value: function SetSpecProperties(params) {
        var _this2 = this;

        return new Promise(function (resolve, reject) {
          _this2.SetPropertiesValue(params, resolve, reject);
        }).catch(function (error) {
          throw error;
        });
      }
    }, {
      key: "DoSpecAction",
      value: function DoSpecAction(params) {
        return new Promise(function (resolve, reject) {
          baseRequire(_miot.Service.spec.doAction, 3, params, resolve, reject);
        });
      }
    }, {
      key: "GetGateWayListWithModel",
      value: function GetGateWayListWithModel(model, onSuccess, onFail) {
        var includeGroupedDevice = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        return baseRequireWithMultipleParams(_miot.Host.ui.getDevicesWithModel, 0, onSuccess, onFail, model, includeGroupedDevice);
      }
    }, {
      key: "DoActionValue",
      value: function DoActionValue(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.spec.doAction, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetUserStatistics",
      value: function GetUserStatistics(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getUserStatistics, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetMultiSwitchTemplateWithModel",
      value: function GetMultiSwitchTemplateWithModel(model, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getMultiSwitchTemplateWithModel, 0, model, onSuccess, onFail);
      }
    }, {
      key: "GetMultiSwitchInfoWithDids",
      value: function GetMultiSwitchInfoWithDids(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.getMultiSwitchInfoWithDids, 0, params, onSuccess, onFail);
      }
    }, {
      key: "SendRPCRequest",
      value: function SendRPCRequest(methodName, array, params, onSuccess, onFail) {
        if (typeof _miot.Device.parentDevice === 'undefined') {
          _miot.Device.getDeviceWifi().callMethod(methodName, array, params !== null ? params : {}).then(function (res) {
            onSuccess(res);
          }).catch(function (err) {
            onFail(err);
          });
        } else {
          _miot.Device.parentDevice.getDeviceWifi().callMethod(methodName, [array], params !== null ? params : {}).then(function (res) {
            onSuccess(res);
          }).catch(function (err) {
            onFail(err);
          });
        }
      }
    }, {
      key: "SendRPCPayload",
      value: function SendRPCPayload(methodName, args) {
        var _this3 = this;

        var isChildMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var device = _miot.Device.parentDevice || _miot.Device;
        var rpcKey = this.getRPCPayloadKey(methodName, args, _miot.Device.deviceID);
        var rpcPayload = this.checkAndInitRPCPayload(rpcKey);

        if (!this.isAllowSendRPC(methodName, args, _miot.Device.deviceID)) {
          return new Promise(function (resolve, reject) {
            var result = rpcPayload.result;
            var status = rpcPayload.status;

            if (status === rpcStatus.success) {
              resolve(result);
            } else if (status === rpcStatus.failed) {
              reject(result);
            } else {
              if (!rpcPayload.promises) rpcPayload.promises = [];
              rpcPayload.promises.push({
                resolve: resolve,
                reject: reject
              });
            }
          });
        }

        rpcPayload.status = rpcStatus.unExecuted;
        this.updateTempRPCParams(methodName, args, _miot.Device.deviceID);
        return device.getDeviceWifi().callMethod(methodName, args, isChildMethod ? {
          sid: _miot.Device.deviceID
        } : {}).then(function (res) {
          var error = res.error;

          if (error) {
            throw (0, _extends2.default)(new Error(JSON.stringify(error)), {
              error: error
            });
          }

          _this3.tempPromiseList(rpcKey, res, true);

          return res;
        }).catch(function (error) {
          _this3.tempPromiseList(rpcKey, error, false);

          throw error;
        });
      }
    }, {
      key: "checkAndInitRPCPayload",
      value: function checkAndInitRPCPayload(rpcKey) {
        var rpcPayload = rpcPayloads[rpcKey];

        if (!rpcPayload) {
          rpcPayload = {
            promises: [],
            result: null,
            status: rpcStatus.unExecuted
          };
          rpcPayloads[rpcKey] = rpcPayload;
        }

        return rpcPayload;
      }
    }, {
      key: "tempPromiseList",
      value: function tempPromiseList(rpcKey, result, isSuccess) {
        var rpcPayload = this.checkAndInitRPCPayload(rpcKey);
        rpcPayload.time = new Date().getTime();
        rpcPayload.status = isSuccess ? rpcStatus.success : rpcStatus.failed;
        rpcPayload.result = result;

        if (rpcPayload.promises && rpcPayload.promises.length > 0) {
          rpcPayload.promises.forEach(function (element) {
            if (isSuccess) {
              if (element.resolve) element.resolve(result);
            } else if (element.reject) element.reject(result);
          });
        }

        rpcPayload.promises = [];
        this.removeRpcPayload();
      }
    }, {
      key: "removeRpcPayload",
      value: function removeRpcPayload() {
        var time = new Date().getTime();
        var keys = Object.keys(rpcPayloads);

        for (var i = 0, len = keys.length; i < len; i += 1) {
          if (rpcPayloads[keys[i]].status !== rpcStatus.unExecuted && time - rpcPayloads[keys[i]].time > 1100) {
            delete rpcPayloads[keys[i]];
          }
        }
      }
    }, {
      key: "getRPCPayloadKey",
      value: function getRPCPayloadKey(methodName, params, did) {
        var keyObj = {
          methodName: methodName,
          params: JSON.stringify(params),
          did: did
        };
        return JSON.stringify(keyObj);
      }
    }, {
      key: "isAllowSendRPC",
      value: function isAllowSendRPC(methodName, params, did) {
        if (!tempRPCParams) {
          return true;
        }

        if (methodName !== tempRPCParams.methodName || did !== tempRPCParams.did || JSON.stringify(params) !== tempRPCParams.params) {
          return true;
        }

        if (new Date().getTime() - tempRPCParams.time >= 1100) {
          return true;
        }

        return false;
      }
    }, {
      key: "updateTempRPCParams",
      value: function updateTempRPCParams(methodName, params, did) {
        tempRPCParams = {
          methodName: methodName,
          params: JSON.stringify(params),
          did: did,
          time: new Date().getTime()
        };
      }
    }, {
      key: "UpdateDeviceHardware",
      value: function UpdateDeviceHardware(onSuccess, onFail) {
        return baseRequireWithMultipleParams(_miot.Service.smarthome.checkDeviceVersion, 0, onSuccess, onFail, _miot.Device.deviceID, _miot.Device.type);
      }
    }, {
      key: "OpenYouPinShop",
      value: function OpenYouPinShop(key) {
        return _miot.Host.ui.openShopSearchPage(key);
      }
    }, {
      key: "BatchGetDeviceDatas",
      value: function BatchGetDeviceDatas(params, onSuccess, onFail) {
        return _miot.Service.smarthome.batchGetDeviceDatas(params).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "BatchSetDeviceDatas",
      value: function BatchSetDeviceDatas(params, onSuccess, onFail) {
        return baseRequire(_miot.Service.smarthome.batchSetDeviceDatas, 0, params, onSuccess, onFail);
      }
    }, {
      key: "GetCurrentServerInfo",
      value: function GetCurrentServerInfo(onSuccess) {
        var _this4 = this;

        if (this.ServerInfo) {
          onSuccess((0, _objectSpread2.default)({}, this.ServerInfo));
          return;
        }

        var serverInfo = {
          serverCode: 'cn',
          countryCode: 'cn'
        };

        _miot.Service.getServerName().then(function (res) {
          var serverCode = res.serverCode,
              countryCode = res.countryCode;
          _this4.ServerInfo = {
            serverCode: serverCode.toLowerCase(),
            countryCode: countryCode.toLowerCase()
          };
          if (typeof onSuccess === 'function') onSuccess((0, _objectSpread2.default)({}, _this4.ServerInfo));
        }).catch(function () {
          if (typeof onSuccess === 'function') onSuccess(serverInfo);
        });
      }
    }, {
      key: "isOverSea",
      value: function isOverSea(onSuccess) {
        LHMiServer.GetCurrentServerInfo(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res.serverCode !== 'cn');
        });
      }
    }, {
      key: "sendKeyFramePayLoad",
      value: function sendKeyFramePayLoad(params, sceneType) {
        var payload = params;

        if (_miot.Host.isIOS) {
          payload = {
            id: '',
            method: 'send_data_frame',
            params: params
          };
        }

        return _miot.Device.getDeviceWifi().sendKeyFramePayLoad(payload, 500, sceneType).then(function (res) {
          return _miot.Host.isIOS ? res.result : res;
        });
      }
    }, {
      key: "GetCurrentServerTime",
      value: function GetCurrentServerTime(onSuccess) {
        var _this5 = this;

        if (this.TimeReference) {
          var curLoacalTime = Date.parse(new Date()) / 1000;
          var curServerTime = this.TimeReference.baseServerTime + curLoacalTime - this.TimeReference.baseLoacalTime;
          if (typeof onSuccess === 'function') onSuccess(curServerTime);
          return Promise.resolve(curServerTime);
        } else {
          return _miot.Service.getUTCFromServer().then(function (baseServerTime) {
            var baseLoacalTime = Date.parse(new Date()) / 1000;
            _this5.TimeReference = {
              baseServerTime: baseServerTime,
              baseLoacalTime: baseLoacalTime
            };
            if (typeof onSuccess === 'function') onSuccess(baseServerTime);
            return baseServerTime;
          });
        }
      }
    }, {
      key: "openIftttAutoPage",
      value: function openIftttAutoPage() {
        _miot.Service.scene.openIftttAutoPage();
      }
    }, {
      key: "openTimerSettingPageWithOptions",
      value: function openTimerSettingPageWithOptions(options) {
        _miot.Service.scene.openTimerSettingPageWithOptions(options);
      }
    }, {
      key: "getLinkedBTDevices",
      value: function getLinkedBTDevices(did) {
        return _miot.Device.getLinkedBTDevices(did);
      }
    }, {
      key: "getAutoUpgradeConfig",
      value: function getAutoUpgradeConfig(did) {
        return _miot.Service.smarthome.getAutoUpgradeConfig(did);
      }
    }, {
      key: "reportEvent",
      value: function reportEvent(key, params) {
        return _miot.Service.smarthome.reportEvent(key, params);
      }
    }, {
      key: "reportRecords",
      value: function reportRecords(did, params) {
        return _miot.Service.smarthome.reportRecords(did, params);
      }
    }, {
      key: "getRoomInfoForCurrentHome",
      value: function getRoomInfoForCurrentHome() {
        var did = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _miot.Device.deviceID;
        return _miot.Device.getRoomInfoForCurrentHome(did);
      }
    }, {
      key: "createGroupDevice",
      value: function createGroupDevice(name, memberDids) {
        return _miot.Service.smarthome.createGroupDevice(name, memberDids);
      }
    }, {
      key: "refreshDeviceList",
      value: function refreshDeviceList() {
        return _miot.Host.ui.refreshDeviceList();
      }
    }]);
    return LHMiServer;
  }();

  exports.default = LHMiServer;
  LHMiServer.ServerInfo = null;
  LHMiServer.TimeReference = null;
},10016,[14305,14314,14344,14320,14323,10074,10019]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCommonMethod.default;
  exports.default = _default;
},10019,[14305,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _LHDeepClone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  function CRC16Array(data) {
    var result = new Array(2);
    var crc16 = 0x8005;
    var crc = 0x00;
    var bitLen = 8;

    if (!data || data.length === 0) {
      return [0, 0];
    }

    var flag;

    for (var k = 0, len = data.length; k < len; k += 1) {
      for (var i = 0; i < bitLen; i += 1) {
        flag = crc >> 15;
        crc <<= 1;
        crc |= data[k] >> 7 - i & 1;

        if ((flag & 1) == 1) {
          crc ^= crc16;
        }
      }
    }

    crc &= 0xffff;

    for (var _i = 0; _i < result.length; _i += 1) {
      result[_i] = crc >> 8 * _i & 0xFF;
    }

    return result;
  }

  var numberLocalMap = new Map([["fi", [" ", ","]], ["fr", [" ", ","]], ["hr", [".", ","]], ["hu", ["", ","]], ["id", [".", ","]], ["it", [".", ","]], ["ja", [",", "."]], ["ko", [",", "."]], ["nb", [" ", ","]], ["nl", [".", ","]], ["ca", [".", ","]], ["pl", [" ", ","]], ["cs", [" ", ","]], ["pt-BR", [".", ","]], ["da", [".", ","]], ["ro", [".", ","]], ["de", [".", ","]], ["ru", [" ", ","]], ["el", [".", ","]], ["sk", [" ", ","]], ["en-AU", [",", "."]], ["sv", [" ", ","]], ["en-CA", [",", "."]], ["th", [",", "."]], ["en-GB", [",", "."]], ["tr", [".", ","]], ["en-IN", [",", "."]], ["uk", [" ", ","]], ["en-NZ", [",", "."]], ["vi", [".", ","]], ["en-SG", [",", "."]], ["zh-Hans", [",", "."]], ["en-ZA", [" ", ","]], ["zh-Hant-HK", [",", "."]], ["en", [",", "."]], ["zh-Hant", [",", "."]], ["ar", [",", "."]], ["es", [".", ","]]]);

  var CommonMethod = function () {
    function CommonMethod() {
      (0, _classCallCheck2.default)(this, CommonMethod);
    }

    (0, _createClass2.default)(CommonMethod, null, [{
      key: "DeepClone",
      value: function DeepClone(source, targetObj) {
        return (0, _LHDeepClone.default)(source, targetObj);
      }
    }, {
      key: "RandomNum",
      value: function RandomNum(min, max) {
        var range = max - min;
        var rand = Math.random();
        var num = min + Math.round(rand * range);
        return num;
      }
    }, {
      key: "Find",
      value: function Find(array, attr, value) {
        for (var i = 0, len = array.length; i < len; i += 1) {
          if (array[i][attr] === value) return i;
        }

        return -1;
      }
    }, {
      key: "FindSpec",
      value: function FindSpec(array, siid, piid) {
        for (var i = 0, len = array.length; i < len; i += 1) {
          if (array[i].siid === siid && array[i].piid === piid) return array[i];
        }

        return null;
      }
    }, {
      key: "FindPropSpec",
      value: function FindPropSpec(array, spec) {
        var siid = spec.siid,
            piid = spec.piid;
        return CommonMethod.FindSpec(array, siid, piid);
      }
    }, {
      key: "CRC16String",
      value: function CRC16String(msg) {
        var data = [];

        for (var i = 0, len = msg.length; i < len; i += 2) {
          data.push('0x' + msg.substr(i, 2));
        }

        var crc = CRC16Array(data);
        var result = '';

        for (var j = 0, len1 = crc.length; j < len1; j += 1) {
          var crcStr = crc[j].toString(16);
          result += crcStr.length < 2 ? '0' + crcStr : crcStr;
        }

        return result;
      }
    }, {
      key: "bigEndianStrToLittleEndianString",
      value: function bigEndianStrToLittleEndianString(hexStr) {
        var littleEndianString = "";
        var byteArr = CommonMethod.hexStrToByteArr(hexStr);

        for (var i = byteArr.length - 1; i >= 0; i -= 1) {
          var hexNum = byteArr[i];

          if (hexNum >= 0 && hexNum <= 255) {
            var hexByteStr = hexNum.toString(16).toUpperCase();

            if (hexByteStr.length % 2 == 1) {
              hexByteStr = '0' + hexByteStr;
            }

            littleEndianString = littleEndianString + hexByteStr;
          }
        }

        return littleEndianString;
      }
    }, {
      key: "hexStrToByteArr",
      value: function hexStrToByteArr(hexStr) {
        var byteArr = [];

        if (!hexStr || !hexStr.length || hexStr.length % 2 !== 0) {
          return byteArr;
        }

        hexStr = hexStr.toLocaleUpperCase();
        var hexs = '0123456789ABCDEF';

        for (var i = 0; i < hexStr.length / 2; i += 1) {
          var bytePR = hexStr[2 * i];
          var byteSF = hexStr[2 * i + 1];

          if (bytePR.indexOf(hexs) && byteSF.indexOf(hexs)) {
            byteArr.push(parseInt(bytePR + byteSF, 16));
          }
        }

        return byteArr;
      }
    }, {
      key: "QuickSort",
      value: function QuickSort(array, attr) {
        var sortFn = function sortFn(start, end) {
          if (start === end) return;
          var oStart = start,
              oEnd = end,
              key = array[start];

          while (start < end) {
            if (attr ? key[attr] <= array[end][attr] : key <= array[end]) {
              end--;
            } else {
              array[start] = array[end];

              while (end > ++start) {
                if (attr ? key[attr] < array[start][attr] : array[start] > key) {
                  array[end] = array[start];
                  end--;
                  break;
                }
              }
            }
          }

          if (start === oStart) {
            sortFn(++oStart, oEnd);
            return;
          }

          array[start] = key;

          if (start === oEnd) {
            sortFn(oStart, --oEnd);
            return;
          }

          sortFn(oStart, --start);
          sortFn(++end, oEnd);
        };

        if (array.length > 1) sortFn(0, array.length - 1);
        return array;
      }
    }, {
      key: "getDistanceBetweenDot",
      value: function getDistanceBetweenDot(x1, y1, x2, y2) {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
      }
    }, {
      key: "CreatCacheKey",
      value: function CreatCacheKey(keyName, description) {
        var hasDid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var cacheKey = hasDid ? keyName + '_' + _miot.Device.deviceID + _miot.Service.account.ID : keyName;
        var found = CommonMethod.CacheKeys.find(function (item) {
          return item.key === cacheKey;
        });

        if (!found) {
          CommonMethod.CacheKeys.push({
            key: cacheKey,
            description: description
          });
        }

        return cacheKey;
      }
    }, {
      key: "PromiseRetry",
      value: function PromiseRetry(request, option) {
        var p = Promise.reject();
        var defaultOpt = {
          maxRetryTime: 3,
          interval: 1000
        };
        var opt = (0, _extends2.default)({}, defaultOpt, option);
        var interval = opt.interval,
            maxRetryTime = opt.maxRetryTime,
            onTest = opt.onTest,
            params = opt.params;

        function rejectDelay(reason) {
          return new Promise(function (resolve, reject) {
            setTimeout(reject.bind(null, reason), interval);
          });
        }

        for (var i = 0; i < maxRetryTime; i += 1) {
          p = p.catch(request.bind.apply(request, [null].concat((0, _toConsumableArray2.default)(params || [])))).then(onTest).catch(rejectDelay);
        }

        return p;
      }
    }, {
      key: "numToLocalString",
      value: function numToLocalString(number, options) {
        var fixed = options.fixed,
            language = options.language;

        if (typeof number !== 'number' && Number.isNaN(Number(number))) {
          return number;
        }

        var toFixed = fixed;

        if (typeof toFixed !== 'number' && Number.isNaN(Number(toFixed))) {
          toFixed = 0;
        }

        if (toFixed > 100 || toFixed < 0) {
          return number;
        }

        function format() {
          var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var lang = numberLocalMap.get(language);
          var thousand = lang ? lang[0] : ',';
          var reg = /\d{1,3}(?=(\d{3})+$)/g;
          return (num + '').replace(reg, '$&' + thousand);
        }

        var formatNumber = function formatNumber(number) {
          var fixNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var lang = numberLocalMap.get(language);
          var numberPoint = lang ? lang[1] || '.' : '.';
          var elec = number.toFixed(fixNum);
          var int = Number(elec) >= 0 ? Math.floor(Number(elec)) : Math.ceil(Number(elec));
          var match = /\.\d*/.exec(elec + '');
          var fraction = match ? match[0] || '' : '';
          var fracString = fraction.replace('.', numberPoint);
          return format(int) + fracString;
        };

        return formatNumber(number, toFixed);
      }
    }, {
      key: "round",
      value: function round(v, e) {
        var t = 1;

        for (; e > 0; t *= 10, e--) {
          ;
        }

        for (; e < 0; t /= 10, e++) {
          ;
        }

        return Math.round(v * t) / t;
      }
    }, {
      key: "getParentDeviceModel",
      value: function getParentDeviceModel() {
        if (_miot.Device.parentDevice && _miot.Device.parentDevice.model) {
          return _miot.Device.parentDevice.model;
        } else {
          return _miot.Device.model;
        }
      }
    }, {
      key: "getParentDeviceVersion",
      value: function getParentDeviceVersion() {
        if (_miot.Device.parentDevice && _miot.Device.parentDevice.extra) {
          return typeof _miot.Device.parentDevice.extra === 'string' ? JSON.parse(_miot.Device.parentDevice.extra).fw_version : _miot.Device.parentDevice.extra.fw_version;
        } else {
          return _miot.Device.lastVersion;
        }
      }
    }, {
      key: "toMiTimeStemp",
      value: function toMiTimeStemp(dateValue) {
        var dateInput = null;

        function isValidDate(date) {
          return date instanceof Date && !Number.isNaN(date.valueOf());
        }

        if (isValidDate(dateValue)) {
          dateInput = dateValue;
        } else if (Number.isNaN(Number(dateValue))) {
          var stemp = Number(dateValue).toString().length > 10 ? Number(dateValue) : Number(dateValue) * 1000;
          dateInput = new Date(stemp);
        } else {
          dateInput = new Date(dateValue);
        }

        if (!isValidDate(dateInput)) {
          dateInput = new Date();
        }

        var dateTime = parseInt(dateInput.getTime() / 1000, 10);
        var nowTime = parseInt(new Date().getTime() / 1000, 10);
        var time = dateTime > nowTime ? nowTime : dateTime;
        var resultDate = LHTimeSpanUtils.getEast8Date(time);
        var resultStemp = parseInt(resultDate.getTime() / 1000, 10);
        return resultStemp;
      }
    }, {
      key: "RemoveArrayEmptyItem",
      value: function RemoveArrayEmptyItem(array) {
        for (var i = 0; i < array.length; i += 1) {
          if (!array[i] && typeof array[i] !== 'number') {
            array.splice(i, 1);
            i -= 1;
          }
        }
      }
    }]);
    return CommonMethod;
  }();

  exports.default = CommonMethod;
  CommonMethod.CacheKeys = [];

  CommonMethod.AwaitForeach = function _callee(count, callback) {
    var k;
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            k = 0;

          case 1:
            if (!(k < count)) {
              _context.next = 7;
              break;
            }

            _context.next = 4;
            return _regenerator.default.awrap(callback(k));

          case 4:
            k += 1;
            _context.next = 1;
            break;

          case 7:
          case "end":
            return _context.stop();
        }
      }
    });
  };
},10022,[14305,14674,14359,14344,14320,14323,10074,10025]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = DeepClone;

  function DeepClone(source, targetObj) {
    if (!source || typeof source !== 'object') {
      throw new Error('error arguments', 'shallowClone');
    }

    var result = targetObj;

    if (!result) {
      result = source.constructor === Array ? [] : {};
    }

    for (var keys in source) {
      if (source.hasOwnProperty(keys)) {
        if (source[keys] && typeof source[keys] === 'object') {
          result[keys] = source[keys].constructor === Array ? [] : {};
          result[keys] = DeepClone(source[keys]);
        } else {
          result[keys] = source[keys];
        }
      }
    }

    return result;
  }
},10025,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHPolicyLicenseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHPolicyLicenseUtils.default;
  exports.default = _default;
},10028,[14305,10031]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var LanguageArray = {
    cn: 'zh',
    pl: 'pl',
    gr: 'el',
    de: 'de',
    pt: 'pt',
    ru: 'ru',
    id: 'id',
    vn: 'vi',
    th: 'th',
    ua: 'uk',
    by: 'be',
    ae: 'ar',
    eg: 'ar',
    il: 'he',
    tr: 'tr',
    ma: 'ar',
    es: 'es',
    tw: 'tw',
    hk: 'hk',
    mo: 'hk',
    it: 'it',
    fr: 'fr',
    sg: 'sg',
    us: 'us',
    kr: 'ko',
    nl: 'nl',
    cz: 'cz',
    ro: 'ro',
    sk: 'sk',
    at: 'de',
    br: 'pt_br',
    cl: 'es_la',
    pe: 'es_la',
    ar: 'es_la',
    mx: 'es_la',
    pa: 'es_la',
    co: 'es_la',
    iq: 'ar',
    om: 'ar',
    qa: 'ar',
    sa: 'ar',
    za: 'sg',
    nz: 'sg',
    au: 'sg',
    ph: 'sg',
    my: 'ms',
    be: 'belg',
    ch: 'ch',
    bh: 'ar',
    kw: 'ar',
    lu: 'lu',
    mm: 'my',
    jp: 'ja',
    bg: 'bg',
    dk: 'da',
    fi: 'fi',
    no: 'no',
    se: 'sv',
    hu: 'hu',
    gb: 'en'
  };
  var EU_GDPR = ['gb', 'de', 'es', 'it', 'fr', 'pl', 'ro', 'bg', 'gr', 'fi', 'se', 'dk', 'lt', 'ee', 'lv', 'pt', 'cz', 'hu', 'sk', 'si', 'hr', 'ie', 'nl', 'at', 'be', 'lu', 'cy', 'mt', 'no', 'is', 'li', 'ch', 'ua', 'by'];
  var SeverEn = {
    cn: 'en',
    sg: 'us_en',
    ru: 'us_en',
    us: 'us_en',
    de: 'eu_en',
    in: 'us_en'
  };
  var MijiaHTServer = {
    de: 'en',
    us: 'en',
    sg: 'en',
    ru: 'en',
    cn: 'zhen',
    in: 'en'
  };
  var NoShowModel = ['lumi.acpartner.v1', 'lumi.acpartner.v2', 'lumi.acpartner.v3', 'lumi.camera.aq1', 'lumi.camera.gwagl01', 'lumi.gateway.v2', 'lumi.gateway.v3'];
  var MijiaHkGateway = 'lumi.gateway.mihk01';
  var MijiaHt = 'lumi.sensor_ht.v1';
  var MijiaTwHk = ['lumi.gateway.mitw01', 'lumi.gateway.mihk01'];
  var Aqara3Switch = ['lumi.switch.l3acn3', 'lumi.switch.n3acn3'];
  var MijiaEuModel = 'lumi.gateway.mieu01';
  var MijiaUkModel = 'lumi.gateway.lmuk01';
  var MijiaEuPrefix = 'mieu01_';
  var MijiaUkPrefix = 'lmuk01_';
  var MijiaHkSmoke = 'lumi.sensor_smoke.v1';
  var PlugEuModel = 'lumi.plug.mmeu01';
  var OpLightModel = ['lumi.light.cwopcn01', 'lumi.light.cwopcn02', 'lumi.light.cwopcn03'];
  var WirelessSwitchModel = ['lumi.remote.b286opcn01', 'lumi.remote.b486opcn01', 'lumi.remote.b686opcn01'];
  var SubDeviceModel = ['lumi.remote.b1acn02', 'lumi.flood.agl02', 'lumi.motion.agl02', 'lumi.motion.agl04', 'lumi.sensor_ht.agl02', 'lumi.magnet.agl02', 'lumi.sen_ill.agl01', 'lumi.remote.b186acn03', 'lumi.remote.b286acn03', 'lumi.switch.b2lacn01', 'lumi.switch.b1lacn01', 'lumi.switch.b2nacn01', 'lumi.switch.b1nacn01', 'lumi.curtain.hagl07', 'lumi.sen_ill.mgl01', 'lumi.gateway.mgl03', 'lumi.light.cbacn1', 'lumi.switch.n1acn1', 'lumi.switch.n2acn1', 'lumi.switch.n3acn1', 'lumi.light.rgbac1', 'lumi.sensor_motion.v2', 'lumi.sensor_magnet.v2', 'lumi.plug.mitw01', 'lumi.plug.v1', 'lumi.plug.mmeu01', 'lumi.switch.n0acn2', 'lumi.sensor_switch.v2', 'lumi.gateway.acn01', 'lumi.curtain.hmcn01', 'lumi.curtain.vagl02', 'lumi.plug.macn01', 'lumi.plug.sacn02', 'lumi.switch.b3l01', 'lumi.switch.b3n01', 'lumi.airmonitor.acn01', 'lumi.aircondition.acn05', 'lumi.remote.cagl01', 'lumi.plug.sacn03', 'lumi.switch.l0acn1', 'lumi.curtain.hagl08', 'lumi.switch.l1acn1', 'lumi.switch.l2acn1', 'lumi.switch.l3acn1', 'lumi.flood.bmcn01', 'lumi.sensor_smoke.mcn02', 'lumi.sensor_gas.mcn02', 'lumi.airer.acn02', 'lumi.gateway.v3', 'lumi.curtain.hagl04', 'lumi.curtain.aq2', 'lumi.airer.acn01', 'lumi.airrtc.tcpco2ecn01', 'lumi.airrtc.tcpecn01', 'lumi.airrtc.tcpecn02', 'lumi.airrtc.vrfegl01', 'lumi.acpartner.v1', 'lumi.acpartner.v2', 'lumi.acpartner.v3', 'lumi.motion.bmgl01', 'lumi.curtain.hmcn02', 'lumi.gateway.aeu01', 'lumi.vibration.agl01', 'lumi.acpartner.mcn04', 'lumi.switch.b1nc01', 'lumi.switch.b2nc01', 'lumi.switch.b1lc04', 'lumi.switch.b2lc04'];
  var SpecialM1SChildDevice = ['lumi.sensor_motion.aq2', 'lumi.vibration.aq1', 'lumi.sensor_wleak.aq1', 'lumi.sensor_cube.aqgl01', 'lumi.sensor_magnet.aq2', 'lumi.weather.v1', 'lumi.remote.b1acn01', 'lumi.remote.b186acn01', 'lumi.remote.b286acn01', 'lumi.light.aqcn02', 'lumi.plug.maus01', 'lumi.plug.maeu01', 'lumi.curtain.v1', 'lumi.relay.c2acn01', 'lumi.ctrl_neutral1.v1', 'lumi.ctrl_neutral2.v1'];

  var LHPolicyLicenseUtils = function () {
    function LHPolicyLicenseUtils() {
      (0, _classCallCheck2.default)(this, LHPolicyLicenseUtils);
    }

    (0, _createClass2.default)(LHPolicyLicenseUtils, null, [{
      key: "GexPolicyLicenseUrl",
      value: function GexPolicyLicenseUrl(urls, languageCode, serveCode, countryCode) {
        var defaultEn = LHPolicyLicenseUtils.GetDefaultEn(urls, serveCode, countryCode);
        return {
          licenseUrl: urls['licenseUrl_' + languageCode] || defaultEn.dafaultLicenseUrl,
          policyUrl: urls['policyUrl_' + languageCode] || defaultEn.defaultPolicyUrl
        };
      }
    }]);
    return LHPolicyLicenseUtils;
  }();

  exports.default = LHPolicyLicenseUtils;

  LHPolicyLicenseUtils.NotShowPolicy = function (model) {
    return NoShowModel.indexOf(model) > -1;
  };

  LHPolicyLicenseUtils.checkOwnPolicySubDevice = function () {
    var showOweModels = [].concat(SubDeviceModel, SpecialM1SChildDevice);
    return showOweModels.indexOf(_miot.Device.model) > -1;
  };

  LHPolicyLicenseUtils.checkM1SChildDevice = function (countryCode) {
    return SpecialM1SChildDevice.indexOf(_miot.Device.model) > -1 && countryCode === 'cn';
  };

  LHPolicyLicenseUtils.checkMieu01 = function () {
    return _miot.Device.model === MijiaEuModel || _miot.Device.parentDevice && _miot.Device.parentDevice.model === MijiaEuModel;
  };

  LHPolicyLicenseUtils.checkLmuk01 = function () {
    return _miot.Device.model === MijiaUkModel || _miot.Device.parentDevice && _miot.Device.parentDevice.model === MijiaUkModel;
  };

  LHPolicyLicenseUtils.checkMitw01 = function () {
    return MijiaTwHk.indexOf(_miot.Device.model) > -1 || _miot.Device.parentDevice && MijiaTwHk.indexOf(_miot.Device.parentDevice.model) > -1;
  };

  LHPolicyLicenseUtils.checkMihktw = function (index) {
    return _miot.Device.model === MijiaTwHk[index] || _miot.Device.parentDevice && _miot.Device.parentDevice.model === MijiaTwHk[index];
  };

  LHPolicyLicenseUtils.checkHkSmoke = function () {
    return _miot.Device.model === MijiaHkSmoke && _miot.Device.parentDevice && _miot.Device.parentDevice.model === MijiaHkGateway;
  };

  LHPolicyLicenseUtils.checkMijiaHT = function () {
    return _miot.Device.model === MijiaHt;
  };

  LHPolicyLicenseUtils.checkSwitch = function () {
    return Aqara3Switch.indexOf(_miot.Device.model) > -1;
  };

  LHPolicyLicenseUtils.checkOpLight = function () {
    return OpLightModel.indexOf(_miot.Device.model) > -1;
  };

  LHPolicyLicenseUtils.checkWirelessSwitch = function () {
    return WirelessSwitchModel.indexOf(_miot.Device.model) > -1;
  };

  LHPolicyLicenseUtils.getSwitchModelSuffix = function () {
    var model = _miot.Device.model;
    if (!model || model.indexOf('.') === -1 || model.split('.').length < 3) return '';
    return model.split('.')[2] ? model.split('.')[2] : '';
  };

  LHPolicyLicenseUtils.getSwitchModelMiddle = function () {
    var model = _miot.Device.model;
    if (!model || model.indexOf('.') === -1 || model.split('.').length < 3) return '';
    return model.split('.')[1] ? model.split('.')[1] : '';
  };

  LHPolicyLicenseUtils.getModelSuffix = function () {
    var model = _miot.Device.model;
    if (!model || model.indexOf('.') === -1 || model.split('.').length < 3) return '';
    var modelArr = model.split('.');
    return modelArr[1] + '_' + modelArr[2];
  };

  LHPolicyLicenseUtils.checkEuPlug = function () {
    return _miot.Device.model === PlugEuModel;
  };

  LHPolicyLicenseUtils.checkEUGDPRArea = function (serveCode, countryCode) {
    return serveCode === 'de' && EU_GDPR.indexOf(countryCode) > -1;
  };

  LHPolicyLicenseUtils.GetCountryLanguageCode = function (onSuccess) {
    _LHMiServer.default.GetCurrentServerInfo(function (res) {
      var serverCode = res.serverCode;
      var countryCode = res.countryCode;
      var mServerCode = serverCode.toLowerCase();
      var mCountryCode = countryCode.toLowerCase();

      if (!LHPolicyLicenseUtils.checkM1SChildDevice(mCountryCode)) {
        if (LHPolicyLicenseUtils.checkWirelessSwitch() || LHPolicyLicenseUtils.checkOpLight()) {
          LHPolicyLicenseUtils.checkOpLightAndRemoteSwitchModel(mServerCode, mCountryCode, onSuccess);
          return;
        }

        if (LHPolicyLicenseUtils.checkOwnPolicySubDevice()) {
          LHPolicyLicenseUtils.checkSubDeviceModel(mServerCode, mCountryCode, onSuccess);
          return;
        }

        if (LHPolicyLicenseUtils.checkSwitch()) {
          LHPolicyLicenseUtils.checkSwitchModel(mServerCode, mCountryCode, onSuccess);
          return;
        }

        if (LHPolicyLicenseUtils.checkMijiaHT()) {
          LHPolicyLicenseUtils.checkMijiaHTModel(mServerCode, mCountryCode, onSuccess);
          return;
        }

        if (!LHPolicyLicenseUtils.checkEuPlug()) {
          if (LHPolicyLicenseUtils.checkMieu01()) {
            LHPolicyLicenseUtils.checkMieuModel(mServerCode, mCountryCode, onSuccess);
            return;
          }

          if (LHPolicyLicenseUtils.checkLmuk01()) {
            LHPolicyLicenseUtils.checkLmukModel(mServerCode, mCountryCode, onSuccess);
            return;
          }

          if (LHPolicyLicenseUtils.checkMitw01() && !LHPolicyLicenseUtils.checkHkSmoke()) {
            LHPolicyLicenseUtils.checkTwHkModel(mServerCode, mCountryCode, onSuccess);
            return;
          }
        }
      }

      if (mServerCode === 'de' && mCountryCode === 'gb') {
        onSuccess('eu_en', mServerCode, mCountryCode);
        return;
      }

      if (_LHCommonLocalizableString.default.getInterfaceLanguage() === 'en') {
        if (mCountryCode === 'us') {
          onSuccess('us_en', mServerCode, mCountryCode);
          return;
        }

        if (mCountryCode === 'kr') {
          onSuccess('ko_en', mServerCode, mCountryCode);
          return;
        }

        onSuccess(SeverEn[mServerCode] || 'en', mServerCode, mCountryCode);
        return;
      }

      onSuccess(LanguageArray[mCountryCode] || 'en', mServerCode, mCountryCode);
    });
  };

  LHPolicyLicenseUtils.checkSubDeviceModel = function (serverCode, countryCode, onSuccess) {
    var subDevicePrefix = LHPolicyLicenseUtils.getModelSuffix() + '_';

    var interfaceLanguage = _LHCommonLocalizableString.default.getInterfaceLanguage();

    var IS_EU_GDPR = LHPolicyLicenseUtils.checkEUGDPRArea(serverCode, countryCode);

    if (serverCode === 'de' && countryCode === 'gb') {
      onSuccess(subDevicePrefix + 'gdpr_en', serverCode, countryCode);
      return;
    }

    if (interfaceLanguage === 'en') {
      if (countryCode === 'cn') {
        onSuccess(subDevicePrefix + 'zh_en', serverCode, countryCode);
        return;
      }

      if (countryCode === 'us') {
        onSuccess(subDevicePrefix + 'us_en', serverCode, countryCode);
        return;
      }

      if (countryCode === 'kr') {
        onSuccess(subDevicePrefix + 'ko_en', serverCode, countryCode);
        return;
      }

      if (IS_EU_GDPR) {
        onSuccess(subDevicePrefix + 'gdpr_en', serverCode, countryCode);
      } else {
        onSuccess(subDevicePrefix + 'en', serverCode, countryCode);
      }

      return;
    }

    onSuccess(subDevicePrefix + LanguageArray[countryCode] || subDevicePrefix + 'en', serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkOpLightAndRemoteSwitchModel = function (serverCode, countryCode, onSuccess) {
    var opLightPrefix = LHPolicyLicenseUtils.getSwitchModelSuffix() + '_';

    if (_LHCommonLocalizableString.default.getInterfaceLanguage() === 'en') {
      onSuccess(opLightPrefix + 'en', serverCode, countryCode);
      return;
    }

    onSuccess(opLightPrefix + LanguageArray[countryCode] || opLightPrefix + 'en', serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkSwitchModel = function (serverCode, countryCode, onSuccess) {
    var switchPrefix = LHPolicyLicenseUtils.getSwitchModelSuffix() + '_';

    if (serverCode === 'us' && countryCode === 'us') {
      onSuccess(switchPrefix + 'en', serverCode, countryCode);
      return;
    }

    if (serverCode === 'de' && countryCode === 'gb') {
      onSuccess(switchPrefix + 'en', serverCode, countryCode);
      return;
    }

    if (_LHCommonLocalizableString.default.getInterfaceLanguage() === 'en') {
      onSuccess(switchPrefix + 'en', serverCode, countryCode);
      return;
    }

    onSuccess(switchPrefix + LanguageArray[countryCode] || switchPrefix + 'en', serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkMijiaHTModel = function (serverCode, countryCode, onSuccess) {
    var interfaceLanguage = _LHCommonLocalizableString.default.getInterfaceLanguage();

    var modelMiddle = LHPolicyLicenseUtils.getSwitchModelMiddle() + '_';
    var IS_EU_GDPR = LHPolicyLicenseUtils.checkEUGDPRArea(serverCode, countryCode);
    var commonEnArray = ['ph', 'sg', 'au', 'nz'];

    if (commonEnArray.indexOf(countryCode) > -1) {
      onSuccess(modelMiddle + 'en', serverCode, countryCode);
      return;
    }

    if (serverCode === 'de' && countryCode === 'gb') {
      onSuccess(modelMiddle + 'gdpr_en', serverCode, countryCode);
      return;
    }

    if (interfaceLanguage === 'en') {
      if (countryCode === 'kr') {
        onSuccess(modelMiddle + 'ko_en', serverCode, countryCode);
        return;
      }

      if (IS_EU_GDPR) {
        onSuccess(modelMiddle + 'gdpr_en', serverCode, countryCode);
      } else {
        onSuccess(modelMiddle + MijiaHTServer[serverCode], serverCode, countryCode);
      }

      return;
    }

    onSuccess(modelMiddle + LanguageArray[countryCode] || (IS_EU_GDPR ? modelMiddle + 'gdpr_en' : modelMiddle + MijiaHTServer[serverCode]), serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkMieuModel = function (serverCode, countryCode, onSuccess) {
    var IS_EU_GDPR = LHPolicyLicenseUtils.checkEUGDPRArea(serverCode, countryCode);

    if (serverCode === 'us' && countryCode === 'us') {
      onSuccess("mieu01_us_en", serverCode, countryCode);
      return;
    }

    if (serverCode === 'de' && countryCode === 'gb') {
      onSuccess("mieu01_eu_en", serverCode, countryCode);
      return;
    }

    if (_LHCommonLocalizableString.default.getInterfaceLanguage() === 'en') {
      if (IS_EU_GDPR) {
        onSuccess("mieu01_eu_en", serverCode, countryCode);
        return;
      }

      onSuccess("mieu01_us_en", serverCode, countryCode);
      return;
    }

    onSuccess(MijiaEuPrefix + LanguageArray[countryCode] || (IS_EU_GDPR ? "mieu01_eu_en" : "mieu01_us_en"), serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkLmukModel = function (serverCode, countryCode, onSuccess) {
    var IS_EU_GDPR = LHPolicyLicenseUtils.checkEUGDPRArea(serverCode, countryCode);

    if (serverCode === 'us' && countryCode === 'us') {
      onSuccess("lmuk01_en", serverCode, countryCode);
      return;
    }

    if (serverCode === 'de' && countryCode === 'gb') {
      onSuccess("lmuk01_eu_en", serverCode, countryCode);
      return;
    }

    if (IS_EU_GDPR) {
      onSuccess("lmuk01_eu_en", serverCode, countryCode);
      return;
    }

    if (serverCode === 'sg' && countryCode === 'sg') {
      onSuccess("lmuk01_en", serverCode, countryCode);
      return;
    }

    if (_LHCommonLocalizableString.default.getInterfaceLanguage() === 'en') {
      onSuccess("lmuk01_en", serverCode, countryCode);
      return;
    }

    onSuccess(MijiaUkPrefix + LanguageArray[countryCode] || "lmuk01_en", serverCode, countryCode);
  };

  LHPolicyLicenseUtils.checkTwHkModel = function (serverCode, countryCode, onSuccess) {
    var interfaceLanguage = _LHCommonLocalizableString.default.getInterfaceLanguage();

    if (LHPolicyLicenseUtils.checkMihktw(1) && countryCode === 'hk') {
      onSuccess(interfaceLanguage === 'en' ? 'mi_hk_en' : 'mi_hk', serverCode, countryCode);
      return;
    }

    if (LHPolicyLicenseUtils.checkMihktw(0) && countryCode === 'tw') {
      onSuccess(interfaceLanguage === 'en' ? 'mi_tw_en' : 'mi_tw', serverCode, countryCode);
      return;
    }

    onSuccess(LHPolicyLicenseUtils.checkMihktw(1) ? 'mi_hk_en' : 'mi_tw_en', serverCode, countryCode);
  };

  LHPolicyLicenseUtils.GetDefaultEn = function (urls, serveCode, countryCode) {
    var IS_EU_GDPR = LHPolicyLicenseUtils.checkEUGDPRArea(serveCode, countryCode);

    if (LHPolicyLicenseUtils.checkOwnPolicySubDevice()) {
      var subDevicePrefix = LHPolicyLicenseUtils.getModelSuffix() + '_';
      var prifixEn = IS_EU_GDPR ? subDevicePrefix + 'gdpr_en' : subDevicePrefix + 'en';
      return {
        dafaultLicenseUrl: urls['licenseUrl_' + prifixEn],
        defaultPolicyUrl: urls['policyUrl_' + prifixEn]
      };
    }

    if (LHPolicyLicenseUtils.checkMijiaHT()) {
      var modelMiddle = LHPolicyLicenseUtils.getSwitchModelMiddle() + '_';

      var _prifixEn = IS_EU_GDPR ? modelMiddle + 'gdpr_en' : modelMiddle + MijiaHTServer[serveCode];

      return {
        dafaultLicenseUrl: urls['licenseUrl_' + _prifixEn],
        defaultPolicyUrl: urls['policyUrl_' + _prifixEn]
      };
    }

    if (LHPolicyLicenseUtils.checkSwitch() || LHPolicyLicenseUtils.checkWirelessSwitch() || LHPolicyLicenseUtils.checkOpLight()) {
      var commonPrefix = LHPolicyLicenseUtils.getSwitchModelSuffix() + '_';
      return {
        dafaultLicenseUrl: urls['licenseUrl_' + commonPrefix + 'en'],
        defaultPolicyUrl: urls['policyUrl_' + commonPrefix + 'en']
      };
    }

    if (!LHPolicyLicenseUtils.checkEuPlug()) {
      if (LHPolicyLicenseUtils.checkMieu01()) {
        var _prifixEn2 = IS_EU_GDPR ? "mieu01_eu_en" : "mieu01_us_en";

        return {
          dafaultLicenseUrl: urls['licenseUrl_' + _prifixEn2],
          defaultPolicyUrl: urls['policyUrl_' + _prifixEn2]
        };
      }

      if (LHPolicyLicenseUtils.checkLmuk01()) {
        return {
          dafaultLicenseUrl: urls.licenseUrl_lmuk01_en,
          defaultPolicyUrl: urls.policyUrl_lmuk01_en
        };
      }

      if (LHPolicyLicenseUtils.checkMitw01()) {
        var _prifixEn3 = _miot.Device.model === MijiaTwHk[1] ? 'mi_hk_en' : 'mi_tw_en';

        return {
          dafaultLicenseUrl: urls['licenseUrl_' + _prifixEn3],
          defaultPolicyUrl: urls['policyUrl_' + _prifixEn3]
        };
      }
    }

    return {
      dafaultLicenseUrl: urls.licenseUrl_en,
      defaultPolicyUrl: urls.policyUrl_en
    };
  };
},10031,[14305,14320,14323,10074,10034,10013]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCommonLocalizableString.default;
  exports.default = _default;
},10034,[14305,10037]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function validateFormat(format) {};

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},10036,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHLocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _resources = _$$_REQUIRE(_dependencyMap[2]);

  var _ar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _de = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _en = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _es = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _fr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _id = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ja = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ko = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ms = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _pl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _pt = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ru = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _th = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _zhHans = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _zhHantHK = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _zhHant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var LHCommonLocalizableString = new _LHLocalizedStrings.default({
    ar: _ar.default,
    de: _de.default,
    en: _en.default,
    es: _es.default,
    fr: _fr.default,
    id: _id.default,
    it: _it.default,
    ja: _ja.default,
    ko: _ko.default,
    ms: _ms.default,
    pl: _pl.default,
    pt: _pt.default,
    ru: _ru.default,
    th: _th.default,
    tr: _tr.default,
    zh: _zhHans.default,
    zh_hk: _zhHantHK.default,
    zh_tw: _zhHant.default
  });
  exports.default = LHCommonLocalizableString;
  if (_resources.strings.ifttt) LHCommonLocalizableString.common_setting_ifttt_auto = _resources.strings.ifttt;
  if (_resources.strings.ifttt) LHCommonLocalizableString.common_setting_ifttt_auto_detail = _resources.strings.ifttt;
  if (LHCommonLocalizableString.common_operation_fail) LHCommonLocalizableString.common_tips_setting_failed = LHCommonLocalizableString.common_operation_fail;
},10037,[14305,10040,10077,10043,10046,10049,10052,10055,10058,10061,10064,10067,10070,10073,10076,10079,10082,10085,10088,10091,10094]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var interfaceLanguage = _miot.Host.locale.language;

  var LHLocalizedStrings = function () {
    (0, _createClass2.default)(LHLocalizedStrings, null, [{
      key: "getBestMatchingLanguage",
      value: function getBestMatchingLanguage(language, props) {
        if (props[language]) return language;
        return 'en';
      }
    }]);

    function LHLocalizedStrings(props) {
      (0, _classCallCheck2.default)(this, LHLocalizedStrings);
      this.props = props;
      this.setLanguage(interfaceLanguage);
    }

    (0, _createClass2.default)(LHLocalizedStrings, [{
      key: "setLanguage",
      value: function setLanguage(language) {
        var bestLanguage = LHLocalizedStrings.getBestMatchingLanguage(language, this.props);
        this.language = bestLanguage;

        if (this.props[bestLanguage]) {
          var localizedStrings = this.props[this.language];

          for (var key in localizedStrings) {
            if (localizedStrings.hasOwnProperty(key)) {
              this[key] = localizedStrings[key];
            }
          }
        }
      }
    }, {
      key: "getLanguage",
      value: function getLanguage() {
        return this.language;
      }
    }, {
      key: "getInterfaceLanguage",
      value: function getInterfaceLanguage() {
        return interfaceLanguage;
      }
    }, {
      key: "adjustLanguagePacket",
      value: function adjustLanguagePacket(languagePacket) {
        var keys = Object.keys(this.props);

        for (var i = 0, len = keys.length; i < len; i += 1) {
          if (!languagePacket[keys[i]]) delete this.props[keys[i]];
        }

        this.setLanguage(interfaceLanguage);
      }
    }]);
    return LHLocalizedStrings;
  }();

  exports.default = LHLocalizedStrings;
},10040,[14305,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ar = {
    "langugeName": "阿拉伯语",
    "common_setting_title": "Settings",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Function settings",
    "common_setting_general_setting": "General settings",
    "common_setting_device_name": "Device name",
    "common_setting_multiswitch": "Button settings",
    "common_setting_device_timeZone": "Regional settings",
    "common_setting_location_management": "Location management",
    "common_setting_share_device": "Device sharing",
    "common_setting_ifttt_auto": "Automation",
    "common_setting_btGateway": "蓝牙Mesh网关",
    "common_setting_btGateway_status_read_fail": "蓝牙Mesh网关状态读取失败",
    "common_setting_btGateway_connected": "连接的蓝牙设备",
    "common_setting_firmware_upgrate": "Check for firmware updates",
    "common_setting_more_setting": "Additional settings",
    "common_setting_add_to_desktop": "Add to home screen",
    "common_setting_privacy_agreement": "User Agreement & Privacy Policy",
    "common_setting_delete_device": "Delete device",
    "common_setting_help_page": "Help",
    "common_setting_more_seting_security": "Security settings",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Software License and Service Agreement",
    "common_setting_privacy_policy": "Privacy Policy",
    "common_setting_feature_plug_in": "Version",
    "common_setting_homekit_device_add": "Pair with HomeKit",
    "common_setting_homekit_device_bound": "مقيد",
    "common_setting_homekit_device_noBind": "غير مقيد",
    "common_setting_laboratory": "实验室功能",
    "common_setting_protect_delete": "防止误删除",
    "common_log_title": "Logs",
    "common_log_today": "Today",
    "common_log_yesterday": "Yesterday",
    "common_log_no_logs": "No logs",
    "common_log_loading": "Loading",
    "common_log_loading_with_dot": "Loading ...",
    "common_log_logDataHasloaded": "Logs have been fully loaded",
    "common_log_all_data_has_been_loaded": "All data has been loaded",
    "common_log_no_data": "No data",
    "common_cancel": "Cancel",
    "common_ok": "OK",
    "common_manufacturer": "Manufactured by",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Can't connect to the network",
    "common_tips_battery_low": "Low battery",
    "common_tips_iknow": "OK",
    "common_button_done": "Done",
    "common_button_delete": "Delete",
    "common_button_retry": "Try again",
    "common_button_save": "Save",
    "common_tips_delete_succeed": "Delete succeed",
    "common_tips_delete_failed": "Delete failed",
    "common_tips_loading_failed": "Could not load",
    "common_tips_request_failed": "Request failed. Check your network",
    "common_button_prev": "Back",
    "common_button_next": "Next",
    "common_button_changename": "Rename",
    "common_date_workday": "Mon to Fri",
    "common_date_weekend": "Weekend",
    "common_date_selfdefine": "Custom",
    "common_date_mon": "Monday",
    "common_date_tues": "Tuesday",
    "common_date_wed": "Wednesday",
    "common_date_thur": "Thursday",
    "common_date_fri": "Friday",
    "common_date_sat": "Saturday",
    "common_date_sun": "Sunday",
    "common_date_day": "يوم ",
    "common_date_week": "أسبوع ",
    "common_date_month": "شهر ",
    "common_date_hour": "س ",
    "common_date_minute": "د ",
    "common_date_second": "ث ",
    "common_tips_discard_operation": "Discard current operation?",
    "common_tips_setting": "Setting, please wait…",
    "common_tips_setting_failed": "Failed to set",
    "common_tips_loading_failed_retry": "Could not load, tap to try again",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "إحصائيات الكهرباء",
    "common_power_history": "سجل تاريخ الطاقة",
    "common_hardware_update_updating": "Updating firmware, please wait…",
    "common_hardware_update_default": "There is a new firmware version ({version}) available, update now?",
    "common_hardware_update_isforce": "Your device's current firmware version is outdated, please update to the latest version ({version}).",
    "common_hardware_update": "Update now",
    "common_out": "Sign out",
    "common_hardware_checkupdate": "View update",
    "common_operation_fail": "Operation failed.",
    "common_repeat_everyday": "كل يوم",
    "common_repeat_once": "مره واحده",
    "common_repeat_tomorrow": "غدا",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "The device will be removed from the list.",
    "common_setting_device_delete_confirm": "Delete device?",
    "common_voice_mute": "静音",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "子设备列表",
    "sub_device_list_header_tips": "下列子设备已经连接在本网关下",
    "zigbee_sub_device_list_header_tips": "ar",
    "sub_device_list_empty_tips": "该网关下暂无关联的子设备",
    "zigbee_sub_device_list_empty_tips": "该网关下暂无关联的Zigbee子设备",
    "sub_device_list_name_cant_empty": "لا يمكن أن يكون اسم الجهاز فارغًا",
    "sub_device_list_name_cant_support_emoji": "لا يدعم تعبيرات الرموز التعبيرية",
    "sub_device_list_name_cant_support_special_char": "لا يمكن أن يحتوي الاسم على رموز خاصة",
    "sub_device_list_name_cant_more_forty": "لا يمكن أن يتجاوز الاسم 40 حرفًا",
    "sub_device_list_name_cant_same": "اسم الجهاز لا يمكن أن يكون هو نفسه",
    "sub_device_list_device_offline": "تDevice is offline",
    "sub_device_list_selected": "تم تحديد عنصر {XX}",
    "sub_device_list_delete_multi_device": "هل أنت متأكد من حذف الأجهزة {XX} المحددة؟",
    "ifttt_triggle_single_press": "单击",
    "ifttt_triggle_double_press": "双击",
    "ifttt_triggle_long_press": "长按",
    "ifttt_triggle_shake": "摇一摇",
    "ifttt_triggle_someone_moved": "有人移动",
    "ifttt_triggle_windoor_open": "门窗打开",
    "ifttt_triggle_moved_afteronemin": "تم نقله بعد دقيقة واحدة من عدم النشاط",
    "ifttt_triggle_detect_vibration": "感应到震动",
    "ifttt_triggle_detect_fall": "感应到跌落",
    "ifttt_triggle_detect_tilting": "الاستشعار عن الميل",
    "ifttt_triggle_fire_alert": "火警报警",
    "ifttt_triggle_gas_leakage_alert": "气体泄露报警",
    "ifttt_triggle_flood_alert": "浸水报警",
    "guard_type_basic": "基础守护",
    "guard_type_home": "在家守护",
    "guard_type_away": "离家守护",
    "guard_type_sleep": "睡眠守护",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用在家守护",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用离家守护",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用睡眠守护",
    "ifttt_push_title_triggle_alert_1": "في {XX} ، يطلق {YY} إنذارًا",
    "ifttt_push_title_triggle_alert_2": "في {XX} ، يستشعر {YY} شخصًا يتحرك لإطلاق إنذار",
    "ifttt_push_title_triggle_alert_magnet": "{XX}守护中，门窗状态变化触发报警",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%守护中，s%状态变化触发报警",
    "ifttt_push_title_triggle_alert_3": "في {XX} ، يقوم {YY} بتشغيل إنذار الزناد",
    "ifttt_push_title_triggle_alert_4": "في {XX} ، يستشعر {YY} النقل",
    "ifttt_push_title_triggle_alert_5": "في {XX} ، يستشعر {YY} جهاز إنذار الفيضان",
    "ifttt_push_title_triggle_alert_6": "في {XX} ، اكتشف {YY} تركيز غاز يتجاوز المعيار",
    "ifttt_push_title_triggle_alert_7": "في {XX} ، اكتشف {YY} الدخان",
    "common_ifttt_scene_execute_result_fail": "فشل التنفيذ",
    "common_ifttt_scene_execute_result_unknow_error": "خطأ غير طبيعي",
    "common_ifttt_scene_execute_result_time_out": "مهلة التنفيذ",
    "common_ifttt_scene_execute_result_camera_sleep": "الكاميرا نائمة",
    "common_ifttt_device_offline": "(غير متصل)",
    "timersetting_on": "开启时间",
    "timersetting_off": "关闭时间",
    "timersetting_empty": "未设置",
    "timersetting_perio": "开启时段",
    "common_start": "开始",
    "common_end": "نهاية",
    "common_color": "Kleur",
    "common_open": "开启",
    "common_scene_name_lm_scene_1_1": "عند التنبيه ، مر شخص ما ناقوس الخطر",
    "common_scene_name_lm_scene_1_2": "باب ونافذة إنذار مفتوحة عند التنبيه",
    "common_scene_name_lm_scene_1_3": "عند تشغيل المنبه ، يضغط المفتاح اللاسلكي على المنبه.",
    "common_scene_name_lm_scene_1_4": "عند التنبيه ، يتم تشغيل مكعب روبيك لفترة من الوقت.",
    "common_scene_name_lm_scene_1_5": "عند التنبيه ، يتم تشغيل الملصقات الساكنة والثابتة لمدة دقيقتين ويتم تشغيل المنبه.",
    "common_scene_name_lm_scene_2_1": "شخص ما مرت ، وكان ضوء الليل مضاءة",
    "common_scene_name_lm_scene_3_1": "مفتاح لاسلكي يضغط على جرس الباب",
    "common_scene_name_lm_scene_3_2": "门窗打开响门铃",
    "common_scene_name_lm_scene_3_3": "شخص ما مرت جرس الرنين",
    "common_scene_name_lm_scene_4_1": "有人经过关闹钟",
    "common_scene_name_lm_scene_4_2": "门窗打开关闹钟",
    "common_scene_name_lm_scene_4_3": "مفتاح لاسلكي يضغط على المنبه",
    "common_scene_name_lm_scene_5_1": "烟感联动网关报警",
    "common_scene_name_lm_scene_5_2": "气感联动网关报警",
    "common_scene_name_lm_scene_5_3": "水浸联动网关报警",
    "common_close": "关闭",
    "common_state_closed": "已关闭",
    "sensor_set_ifttt_config_success": "التكوين الناجح",
    "common_automation_configuring": "جارٍ تهيئة أتمتة الحزمة ، يرجى الانتظار ...",
    "sensor_set_ifttt_config_fail": "فشل التكوين",
    "sensor_set_ifttt_config_fail_tip": "1. تحتاج إلى توصيل البوابة بـ wifi \n2. تحتاج إلى توصيل هاتفك بـ wifi \n3. يرجى التأكد من أن wifi طبيعية.",
    "mi_linuxHub_guard_guard_timer": "توقيت الوصي",
    "mi_linuxHub_timer_light_name": "فانوس الموقت",
    "mi_linuxHub_lazy_clock_name": "المنبه",
    "sensor_set_ifttt_scene_name_1": "تذكير فتح الباب",
    "sensor_set_ifttt_scene_name_2": "انقر فوق المفتاح اللاسلكي لتشغيل / إيقاف تشغيل ضوء الليل",
    "sensor_set_ifttt_scene_name_3": "انقر نقرًا مزدوجًا على تنبيه التبديل اللاسلكي",
    "sensor_set_ifttt_scene_name_4": "شخص ما مرت ، وكان ضوء الليل مضاءة",
    "sensor_set_ifttt_scene_name_5": "2 دقيقة ضوء الليل بدون طيار قبالة",
    "sensor_set_ifttt_scene_name_6": "شخص يتحرك ضوء الليل",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "لم يغلق بعد أكثر من دقيقة بعد الافتتاح",
    "sensor_set_ifttt_triggle_name_2": "2 دقيقة بدون طيار",
    "sensor_set_ifttt_triggle_name_3": "تشغيل نغمة الرنين المحددة",
    "sensor_set_ifttt_triggle_name_4": "على / قبالة ضوء الليل",
    "sensor_set_ifttt_triggle_name_5": "ضوء الليل التعريفي",
    "sensor_set_ifttt_triggle_name_6": "أطفئ ضوء الليل",
    "sensor_set_ifttt_triggle_name_7": "ضوء الليل",
    "sensor_set_ifttt_triggle_name_8": "تشغيل / إيقاف التنبيه",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "部分执行成功",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "Opsi ulangi",
    "common_repeat_self_timer_title": "Ulangi khusus",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Countdown",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "اليوم",
    "common_plug_month_elec": "شهر",
    "common_plug_current_power": "التيار",
    "mi_comboHub_mainPage_guard": "守护",
    "mi_comboHub_mainPage_guard_base": "基础",
    "mi_comboHub_mainPage_guard_home": "在家",
    "mi_comboHub_mainPage_guard_away": "离家",
    "mi_comboHub_mainPage_guard_sleep": "睡眠",
    "common_comboHub_triggle_device_alert": "报警",
    "common_comboHub_triggle_device_opened_guard": "（已在{XX}守护中开启）",
    "common_comboHub_triggle_device_only_open_basic": "（只可用于基础守护）",
    "common_comboHub_triggle_device_opened_basic": "（已在基础守护中开启）",
    "common_setting_homekit_device_desc": "该设备可在Apple家庭APP配置和使用",
    "common_ifttt_triggleName_switch": "开关状态变化触发报警",
    "common_ifttt_triggleName_vibration": "状态变化触发报警",
    "common_ifttt_triggleName_cube": "静止一分钟被移动触发报警",
    "common_ifttt_triggleName_magnet": "门窗状态变化触发报警",
    "common_ifttt_triggleName_motion": "有人移动触发报警",
    "common_timer_light_timer_light_period": "时间段定时",
    "common_timer_light_timer_on": "定时开启",
    "common_timer_light_timer_off": "定时关闭",
    "common_timer_light_timer_time_after": "开始时间在结束时间之后",
    "common_lumi_sensor_setting_battery": "电池电量",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "更换电池引导",
    "common_lumi_sensor_battery_guide_description": "请打开电池后盖，按照图示更换电池",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Low battery, please replace the battery",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "触发报警设备",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggle_device_header_title_1": "不可启用的设备",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "当网关下有持续监测环境的设备，如烟雾报警器、天然气报警器，可启用这些设备为基础守护的触发报警设备，开启后，基础守护将7×24小时无间断守护家庭安全。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "已作为在家/离家/睡眠守护的触发报警设备，不可用于基础守护",
    "mi_comboHub_triggle_device_header1_subtitle_home": "设置触发报警设备后，你可以开启在家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_home": "已作为基础守护的触发报警设备，不可用于在家守护",
    "mi_comboHub_triggle_device_header1_subtitle_away": "设置触发报警设备后，你可以开启离家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_away": "已作为基础守护的触发报警设备，不可用于离家守护",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "设置触发报警设备后，你可以开启睡眠守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "已作为基础守护的触发报警设备，不可用于睡眠守护",
    "mi_comboHub_triggle_device_empty_tip": "该网关下暂无可作为报警触发源的设备，如人体传感器、门窗传感器以及无线开关等",
    "mi_comboHub_triggle_device_go_to_bug": "去购买",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一满足时",
    "mi_ifttt_action": "就执行",
    "mi_commonHub_nightlight_open": "开启夜灯",
    "mi_commonHub_nightlight_motion_limit": "最多只能选择9个人体传感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分钟后关闭夜灯",
    "mi_commonHub_go_back_title": "退出编辑",
    "mi_commonHub_go_back_content": "退出后修改将丢失，是否退出？",
    "mi_commonHub_setting_nightlight": "感应夜灯",
    "mi_commonHub_nightlight_commont": "当{value}所在环境较暗时",
    "mi_commonHub_nightlight_timer": "感应时段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能选择10个网关报警",
    "common_offline": "غير متصل",
    "mi_commonHub_linkage_alarm_footer_text": "开启联动报警功能的网关中，当任意一个网关报警，其他网关也会联动报警，发出报警铃音和灯光",
    "mi_commonHub_linkage_alarm": "联动报警",
    "mi_commonHub_linkage_alarm_dis": "联动报警取消",
    "mi_commonHub_ring_doorbell": "Deurbeltoon",
    "mi_commonHub_ring_knocking": "Deur kloppen geluid",
    "mi_commonHub_ring_funny": "Gekke toon",
    "mi_commonHub_ring_alarm_clock": "Alarmkloktoon",
    "mi_commonHub_ring_alarm_music": "Alarmtoon",
    "mi_commonHub_ring_policecar1": "Politieauto toon 1",
    "mi_commonHub_ring_policecar2": "Politieauto toon 2",
    "mi_commonHub_ring_safety_accident": "Veiligheidsincident geluid",
    "mi_commonHub_ring_countdown": "Raketten aftellen",
    "mi_commonHub_ring_ghost": "Geest schreeuw",
    "mi_commonHub_ring_gun": "Scherpschuttersgeweer",
    "mi_commonHub_ring_battle": "Gevechtsgeluid",
    "mi_commonHub_ring_airraid": "Luchtaanval alarm",
    "mi_commonHub_ring_dog": "Blaffen",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "一直响",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}د ",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}ث ",
    "mi_comboHub_guardSetting": "守护设置",
    "mi_comboHub_guardSetting_delayTime_immediately": "立即生效",
    "mi_linuxHub_arming_ring": "报警铃音",
    "mi_comboHub_guardSetting_alarmDuration": "报警音时长",
    "mi_comboHub_guardSetting_alarmVolume": "报警音量",
    "mi_comboHub_guardSetting_delayTime": "进入守护倒计时",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Deurbel",
    "mi_commonHub_setting_volume_doorbell": "Deurbelvolume",
    "mi_commonHub_setting_push": "Telefoonbericht",
    "mi_commonHub_setting_alarmclock": "Sluimeren",
    "mi_commonHub_guard_go_config": "Ga naar Instellingen",
    "mi_commonHub_numbers": "items",
    "mi_commonHub_lazy_clock_list": "Alarmkloklijst",
    "mi_commonHub_lazy_clock_close_way": "Alarmklok uitmodus",
    "mi_commonHub_timersetting_repeat": "herhaling",
    "mi_commonHub_setting_bell": "Ringtone",
    "mi_commonHub_setting_volume": "Volume",
    "mi_commonHub_add_lazyclock": "Voeg een alarm toe",
    "mi_commonHub_lazy_clock_delete": "De geselecteerde timer verwijderen?",
    "mi_commonHub_sure_delete": "Weet u zeker dat u het geselecteerde item wilt verwijderen?",
    "mi_commonHub_lazy_clock_list_empty": "Geen alarmklok toegevoegd",
    "mi_commonHub_lazy_clock_name": "Wekker",
    "mi_commonHub_play_specific_tone": "Speel de specifieke beltoon",
    "mi_commonHub_tone_volume": "Volume nada dering",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "The name cannot be empty",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置...",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "放弃当前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Could not save, please try again.",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Eenmaal indrukken (vereist)",
    "mi_commonHub_must_choose": "nodig",
    "mi_commonHub_send_phone_msg": "Meldingen sturen naar de telefoon",
    "mi_commonHub_ring_the_bell": "Laat de deurbel horen",
    "mi_commonHub_lazy_clock_close": "Alarmklok uitschakelen",
    "mi_commonHub_system_ringtone": "Systeem beltoon",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "toevoegen",
    "mi_commonHub_guard_alarm_sound_light_settings": "Alert tones & light settings",
    "mi_commonHub_guard_guardian_countdown": "Aftellen om bewaking in te schakelen",
    "mi_commonHub_arming_light_length": "Light blinking duration",
    "mi_commonHub_arming_always_flashing": "Knippert altijd",
    "mi_commonHub_arming_not_flashing": "Knippert niet",
    "mi_commonHub_linkage_alarm_hint_detail": "Koppeling en alarm met andere Hub, verbeteren het veiligheidsniveau",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "选择日期",
    "common_month_1": "1月",
    "common_month_2": "2月",
    "common_month_3": "3月",
    "common_month_4": "4月",
    "common_month_5": "5月",
    "common_month_6": "6月",
    "common_month_7": "7月",
    "common_month_8": "8月",
    "common_month_9": "9月",
    "common_month_10": "10月",
    "common_month_11": "11月",
    "common_month_12": "12月",
    "common_year_month_1": "s%年1月",
    "common_year_month_2": "s%年2月",
    "common_year_month_3": "s%年3月",
    "common_year_month_4": "s%年4月",
    "common_year_month_5": "s%年5月",
    "common_year_month_6": "s%年6月",
    "common_year_month_7": "s%年7月",
    "common_year_month_8": "s%年8月",
    "common_year_month_9": "s%年9月",
    "common_year_month_10": "s%年10月",
    "common_year_month_11": "s%年11月",
    "common_year_month_12": "s%年12月",
    "common_week_mon_short": "一",
    "common_week_tue_short": "二",
    "common_week_wed_short": "三",
    "common_week_thu_short": "四",
    "common_week_fri_short": "五",
    "common_week_sat_short": "六",
    "common_week_sun_short": "日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "التقويم",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "د ",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人离开后延时关灯时间",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "支持固件自动更新功能",
    "mi_common_view_details": "点击可查看详情",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee子设备",
    "common_hub_bluetooth_subdevice": "蓝牙子设备"
  };
  exports.default = ar;
},10043,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var de = {
    "langugeName": "德语",
    "common_setting_title": "Einstellungen",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Funktionseinstellungen",
    "common_setting_general_setting": "Allgemeine Einstellungen",
    "common_setting_device_name": "Gerätename",
    "common_setting_multiswitch": "Schaltflächen-Einstellungen",
    "common_setting_device_timeZone": "Regionale Einstellungen",
    "common_setting_location_management": "Standortverwaltung",
    "common_setting_share_device": "Gerät freigeben",
    "common_setting_ifttt_auto": "Automatisierung",
    "common_setting_btGateway": "Bluetooth Mesh-Gateway",
    "common_setting_btGateway_status_read_fail": "Der Status des Bluetooth Mesh-Gateways konnte nicht abgerufen werden",
    "common_setting_btGateway_connected": "Verbundene Bluetooth-Geräte",
    "common_setting_firmware_upgrate": "Nach Firmware-Aktualisierungen suchen",
    "common_setting_more_setting": "Zusätzliche Einstellungen",
    "common_setting_add_to_desktop": "Zum Startbildschirm hinzufügen",
    "common_setting_privacy_agreement": "Nutzungsvereinbarung und Datenschutzerklärung",
    "common_setting_delete_device": "Gerät löschen",
    "common_setting_help_page": "Hilfe",
    "common_setting_more_seting_security": "Sicherheitseinstellungen",
    "common_setting_more_seting_faq": "Häufige Fragen",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Softwarelizenz- und Servicevereinbarung",
    "common_setting_privacy_policy": "Datenschutzerklärung",
    "common_setting_feature_plug_in": "Plug-in-Version",
    "common_setting_homekit_device_add": "Mit HomeKit koppeln",
    "common_setting_homekit_device_bound": "Binden",
    "common_setting_homekit_device_noBind": "Ungebunden",
    "common_setting_laboratory": "Lab-Funktionen",
    "common_setting_protect_delete": "Löschschutz",
    "common_log_title": "Protokolle",
    "common_log_today": "Heute",
    "common_log_yesterday": "Gestern",
    "common_log_no_logs": "Keine Protokolle",
    "common_log_loading": "Laden wird ausgeführt …",
    "common_log_loading_with_dot": "Laden wird ausgeführt …",
    "common_log_logDataHasloaded": "Die Protokolle wurden vollständig geladen",
    "common_log_all_data_has_been_loaded": "Alle Daten wurden geladen",
    "common_log_no_data": "Keine Daten",
    "common_cancel": "Abbrechen",
    "common_ok": "OK",
    "common_manufacturer": "Producent",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Verbindung zum Netzwerk nicht möglich",
    "common_tips_battery_low": "Niedriger Batterieladestatus",
    "common_tips_iknow": "OK",
    "common_button_done": "Fertig",
    "common_button_delete": "Löschen",
    "common_button_retry": "Erneut versuchen",
    "common_button_save": "Speichern",
    "common_tips_delete_succeed": "Gelöscht",
    "common_tips_delete_failed": "Fehler beim Löschen",
    "common_tips_loading_failed": "Konnte nicht geladen werden",
    "common_tips_request_failed": "Anforderung fehlgeschlagen. Prüfen Sie Ihr Netzwerk",
    "common_button_prev": "Zurück",
    "common_button_next": "Weiter",
    "common_button_changename": "Umbenennen",
    "common_date_workday": "Mo. bis Fr.",
    "common_date_weekend": "Wochenende",
    "common_date_selfdefine": "Angepasst",
    "common_date_mon": "Montag",
    "common_date_tues": "Dienstag",
    "common_date_wed": "Mittwoch",
    "common_date_thur": "Donnerstag",
    "common_date_fri": "Freitag",
    "common_date_sat": "Samstag",
    "common_date_sun": "Sonntag",
    "common_date_day": " Tag",
    "common_date_week": " Woche",
    "common_date_month": " Monat",
    "common_date_hour": " Std",
    "common_date_minute": " Min.",
    "common_date_second": " Sek.",
    "common_tips_discard_operation": "Aktuellen Vorgang abbrechen?",
    "common_tips_setting": "Wird eingestellt, bitte warten…",
    "common_tips_setting_failed": "Fehler beim Einstellen",
    "common_tips_loading_failed_retry": "Konnte nicht geladen werden, antippen, um es erneut zu versuchen",
    "common_tips_shared_no_promision": "Das gemeinsam genutzte Gerät hat keine Berechtigung",
    "common_electricity": "Elektrizitätsstatistik",
    "common_power_history": "Spannungsverlauf",
    "common_hardware_update_updating": "Aktualisierung der Firmware, bitte warten...",
    "common_hardware_update_default": "Es ist eine neue Firmware-Version ({version}) verfügbar, jetzt aktualisieren?",
    "common_hardware_update_isforce": "Die aktuelle Firmware-Version Ihres Gerätes ist veraltet, bitte aktualisieren Sie auf die neueste Version ({version}).",
    "common_hardware_update": "Jetzt aktualisieren",
    "common_out": "Abmelden",
    "common_hardware_checkupdate": "Aktualisierung anzeigen",
    "common_operation_fail": "Vorgang fehlgeschlagen.",
    "common_repeat_everyday": "Täglich",
    "common_repeat_once": "Einmalig",
    "common_repeat_tomorrow": "Morgen",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "Das Gerät wird aus der Liste entfernt.",
    "common_setting_device_delete_confirm": "Gerät löschen?",
    "common_voice_mute": "Leise",
    "common_voice_high": "Hoch",
    "common_voice_middle": "Mittel",
    "common_voice_low": "Niedrig ",
    "sub_device_list_title": "Untergerät-Liste",
    "sub_device_list_header_tips": "Die folgenden Untergeräte sind bereits mit dieser Zentrale gekoppelt.",
    "zigbee_sub_device_list_header_tips": "Die nachstehenden untergeordneten Zigbee Geräte sind mit diesem Gateway verbunden",
    "sub_device_list_empty_tips": "Es gibt keine Untergeräte, die mit dieser Steuerzentrale gekoppelt sind.",
    "zigbee_sub_device_list_empty_tips": "Es gibt keine Untergeräte, die mit dieser Steuerzentrale gekoppelt sind.",
    "sub_device_list_name_cant_empty": "Der Gerätename darf nicht leer sein",
    "sub_device_list_name_cant_support_emoji": "Unterstützt keine Emoji-Ausdrücke",
    "sub_device_list_name_cant_support_special_char": "Der Name darf keine Sonderzeichen enthalten",
    "sub_device_list_name_cant_more_forty": "Der Name darf nicht länger als 40 Zeichen sein",
    "sub_device_list_name_cant_same": "Der Gerätename darf nicht identisch sein",
    "sub_device_list_device_offline": "Gerät ist offline",
    "sub_device_list_selected": "{XX} Element ausgewählt",
    "sub_device_list_delete_multi_device": "Möchten Sie die ausgewählten {XX} Geräte wirklich löschen?",
    "ifttt_triggle_single_press": "Klicken",
    "ifttt_triggle_double_press": "Drücken und gedrückt halten",
    "ifttt_triggle_long_press": "Doppelklick",
    "ifttt_triggle_shake": "Schütteln",
    "ifttt_triggle_someone_moved": "Jemand ist umgezogen",
    "ifttt_triggle_windoor_open": "Fenster / Tür ist offen",
    "ifttt_triggle_moved_afteronemin": "Verschoben nach einer Minute Inaktivität",
    "ifttt_triggle_detect_vibration": "Vibration erkannt",
    "ifttt_triggle_detect_fall": "Sturz erkannt",
    "ifttt_triggle_detect_tilting": "Sensing zu kippen",
    "ifttt_triggle_fire_alert": "Feueralarm",
    "ifttt_triggle_gas_leakage_alert": "Gasleck-Alarm",
    "ifttt_triggle_flood_alert": "Hochwasseralarm",
    "guard_type_basic": "Basisschutz",
    "guard_type_home": "Zu-Hause-Schutz",
    "guard_type_away": "Außer-Hause-Schutz",
    "guard_type_sleep": "Schlafschutz",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Bitte stellen Sie mindestens ein Untergerät als Auslöser ein, um den Zu-Hause-Schutz zu aktivieren.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Bitte stellen Sie mindestens eine Untergerät als Auslösevorrichtung ein, um den Außer-Hause-Schutz zu aktivieren.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Bitte stellen Sie mindestens ein Untergerät als Auslöser ein, um den Schlafschutz zu aktivieren.",
    "ifttt_push_title_triggle_alert_1": "In {XX} löst {YY} einen Alarm aus",
    "ifttt_push_title_triggle_alert_2": "In {XX} erkennt {YY}, dass sich jemand bewegt, um einen Alarm auszulösen",
    "ifttt_push_title_triggle_alert_magnet": "{XX} ist aktiv, die Tür oder das Fenster wurde geöffnet oder geschlossen und löste den Alarm aus.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% ist aktiv, s% hat den Alarm ausgelöst.",
    "ifttt_push_title_triggle_alert_3": "In {XX} schaltet {YY} den Trigger-Alarm ein",
    "ifttt_push_title_triggle_alert_4": "In {XX} spürt {YY}, dass er bewegt wird",
    "ifttt_push_title_triggle_alert_5": "In {XX} erkennt {YY} den Hochwasseralarm",
    "ifttt_push_title_triggle_alert_6": "In {XX} hat {YY} eine Gaskonzentration festgestellt, die den Standard überschreitet",
    "ifttt_push_title_triggle_alert_7": "In {XX} hat {YY} Rauch festgestellt",
    "common_ifttt_scene_execute_result_fail": "Ausführung fehlgeschlagen",
    "common_ifttt_scene_execute_result_unknow_error": "Anormaler Fehler",
    "common_ifttt_scene_execute_result_time_out": "Implementierungs-Timeout",
    "common_ifttt_scene_execute_result_camera_sleep": "Die Kamera schläft",
    "common_ifttt_device_offline": "(offline)",
    "timersetting_on": "Startzeit",
    "timersetting_off": "Endzeit",
    "timersetting_empty": "Nicht festgelegt",
    "timersetting_perio": "Aktiv für",
    "common_start": "Start",
    "common_end": "Ende",
    "common_color": "farbe",
    "common_open": "Aktivieren",
    "common_scene_name_lm_scene_1_1": "Im Alarmfall hat jemand den Alarm bestanden",
    "common_scene_name_lm_scene_1_2": "Tür- und Fensteröffnungsalarm bei Alarmierung",
    "common_scene_name_lm_scene_1_3": "Wenn der Alarm aktiviert ist, drückt der Funkschalter auf den Alarm.",
    "common_scene_name_lm_scene_1_4": "Bei einem Alarm wird der Zauberwürfel für eine Weile ausgelöst.",
    "common_scene_name_lm_scene_1_5": "Bei Alarm werden die statischen und statischen Aufkleber für zwei Minuten ausgelöst und der Alarm wird ausgelöst.",
    "common_scene_name_lm_scene_2_1": "Jemand ging vorbei, das Nachtlicht wurde beleuchtet",
    "common_scene_name_lm_scene_3_1": "Funkschalter drückt auf die Türklingel",
    "common_scene_name_lm_scene_3_2": "Bei geöffneter Tür/Fenster klingelt die Türklingel",
    "common_scene_name_lm_scene_3_3": "Jemand passierte die Klinge",
    "common_scene_name_lm_scene_4_1": "Wecker wird ausgeschaltet, wenn jemand vorübergeht an",
    "common_scene_name_lm_scene_4_2": "Wecker ausschalten, wenn eine Tür/ein Fenster geöffnet ist",
    "common_scene_name_lm_scene_4_3": "Der Funkschalter drückt den Alarm aus",
    "common_scene_name_lm_scene_5_1": "Die Raucherkennung löst den Alarm des Hubs aus.",
    "common_scene_name_lm_scene_5_2": "Die Gaserkennung löst den Alarm des Hubs aus.",
    "common_scene_name_lm_scene_5_3": "Die Erkennung von Wasserleckagen löst den Alarm des Hubs aus.",
    "common_close": "Aus",
    "common_state_closed": "Deaktiviert",
    "sensor_set_ifttt_config_success": "Konfigurieren erfolgreich",
    "common_automation_configuring": "Paketautomatisierung wird konfiguriert, bitte warten ...",
    "sensor_set_ifttt_config_fail": "Konfiguration fehlgeschlagen",
    "sensor_set_ifttt_config_fail_tip": "1. Sie müssen das Gateway mit WLAN verbinden. \n2. Sie müssen Ihr Telefon mit WLAN verbinden. \n3. Stellen Sie sicher, dass WLAN normal ist",
    "mi_linuxHub_guard_guard_timer": "Wächter Timing",
    "mi_linuxHub_timer_light_name": "Laternentimer",
    "mi_linuxHub_lazy_clock_name": "Wecker",
    "sensor_set_ifttt_scene_name_1": "Türöffnung erinnerung",
    "sensor_set_ifttt_scene_name_2": "Klicken Sie auf den Funkschalter, um das Nachtlicht ein- oder auszuschalten",
    "sensor_set_ifttt_scene_name_3": "Doppelklicken Sie auf den Alarm für den Funkschalter",
    "sensor_set_ifttt_scene_name_4": "Jemand ging vorbei, das Nachtlicht wurde beleuchtet",
    "sensor_set_ifttt_scene_name_5": "2 Minuten unbemanntes Nachtlicht aus",
    "sensor_set_ifttt_scene_name_6": "Jemand, der das Nachtlicht anmacht",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Nicht mehr als 1 Minute nach dem Öffnen geschlossen",
    "sensor_set_ifttt_triggle_name_2": "2 Minuten unbemannt",
    "sensor_set_ifttt_triggle_name_3": "Spielen Sie den angegebenen Klingelton",
    "sensor_set_ifttt_triggle_name_4": "Nachtlicht ein / aus",
    "sensor_set_ifttt_triggle_name_5": "Induktionsnachtlicht",
    "sensor_set_ifttt_triggle_name_6": "Mach das Nachtlicht aus",
    "sensor_set_ifttt_triggle_name_7": "Nachtlicht",
    "sensor_set_ifttt_triggle_name_8": "Ein / Aus-Alarm",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Ein Teil der Aufgaben wurden erfolgreich ausgeführt.",
    "common_short_date_mon": "Mo",
    "common_short_date_tues": "Di",
    "common_short_date_wed": "Mi",
    "common_short_date_thur": "Do",
    "common_short_date_fri": "Fr",
    "common_short_date_sat": "Sa",
    "common_short_date_sun": "So",
    "common_repeat_timer_title": "Option wiederholen",
    "common_repeat_self_timer_title": "Benutzerdefinierte Wiederholung",
    "common_on": "EIN",
    "common_off": "AUS",
    "common_timer": "Timer",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Temporizador automático",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " °C",
    "common_degree_centigrade_str": "{value} °C",
    "common_plug_today_elec": "Heute",
    "common_plug_month_elec": "Monat",
    "common_plug_current_power": "Aktuell",
    "mi_comboHub_mainPage_guard": "Schutz",
    "mi_comboHub_mainPage_guard_base": "Basis",
    "mi_comboHub_mainPage_guard_home": "Zu Hause",
    "mi_comboHub_mainPage_guard_away": "Außer Hause",
    "mi_comboHub_mainPage_guard_sleep": "Ruhezustand",
    "common_comboHub_triggle_device_alert": "Alarm",
    "common_comboHub_triggle_device_opened_guard": "(Wurde für den {XX} Schutz aktiviert.)",
    "common_comboHub_triggle_device_only_open_basic": "(Kann nur für den Basisschutz verwendet werden.)",
    "common_comboHub_triggle_device_opened_basic": "(Wurde für den Basisschutz aktiviert.)",
    "common_setting_homekit_device_desc": "Das Gerät kann in der Apple Home App konfiguriert und verwendet werden.",
    "common_ifttt_triggleName_switch": "Der Alarm wird ausgelöst, wenn sich der Status des Schalters ändert.",
    "common_ifttt_triggleName_vibration": "Der Alarm wird ausgelöst, wenn sich der Status ändert.",
    "common_ifttt_triggleName_cube": "Der Alarm wird ausgelöst, wenn er bewegt wird, nachdem er über 1 Minute inaktiv war.",
    "common_ifttt_triggleName_magnet": "Der Alarm wird ausgelöst, wenn sich der Status des Tür- oder Fenstersensors ändert.",
    "common_ifttt_triggleName_motion": "Jemand bewegte und löste den Alarm aus.",
    "common_timer_light_timer_light_period": "Zeitraum",
    "common_timer_light_timer_on": "Zeitlich festgelegt am",
    "common_timer_light_timer_off": "Ausgeschaltet",
    "common_timer_light_timer_time_after": "Startzeit nach der Endzeit",
    "common_lumi_sensor_setting_battery": "Akku",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Anleitung zum Akkuaustausch",
    "common_lumi_sensor_battery_guide_description": "Bitte entfernen Sie den Akkudeckel und ersetzen Sie den Akku wie abgebildet.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Niedrige Batterie, bitte wechseln Sie die Batterie",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat protection",
    "common_overload_protect": "Overload protection",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Alarmauslösegerät",
    "mi_comboHub_triggleDevices_deleting": "Beim Löschen…",
    "mi_comboHub_triggleSubDevices_setting": "Beim Konfigurieren...",
    "mi_comboHub_triggle_device_header_title_1": "Geräte, die nicht aktiviert werden können",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Wenn an den Hub angeschlossene Geräte zur kontinuierlichen Überwachung der Umgebung vorhanden sind, z. B. Rauch- und Gasdetektoren, können Sie diese als Auslösegeräte der Basisüberwachung einstellen. Sobald sie aktiviert sind, wird die Basisüberwachung Ihr Zuhause rund um die Uhr überwachen.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Wurde er als Auslöser für den Zu-Hause-, Außer-Hause- oder Schlafschutz aktiviert, kann er nicht für den Basisschutz verwendet werden.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Nach der Einstellung des Auslösers können Sie den Hausschutz aktivieren.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Wurde als Auslöser für den Basisschutz aktiviert, kann er nicht für den Hausschutz verwendet werden.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Nach der Einstellung des Auslösers können Sie den Außer-Haus-Schutz aktivieren.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Wurde als Auslöser für den Basisschutz aktiviert, kann er nicht für den Außer-Haus-Schutz verwendet werden.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Nach der Einstellung des Auslösers können Sie den Schlafschutz aktivieren.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Wurde als Auslöser für den Basisschutz aktiviert, kann er nicht für den Schlafschutz verwendet werden.",
    "mi_comboHub_triggle_device_empty_tip": "Es gibt keine Geräte, die mit dieser Steuerzentrale gekoppelt sind, die zum Auslösen des Alarms verwendet werden können, wie z.B. Bewegungssensor, Fenster- und Türsensor oder drahtloser Schalter.",
    "mi_comboHub_triggle_device_go_to_bug": "Kaufen",
    "mi_commonHub_setting_nightlight_tomorrow": "Am nächsten tag",
    "mi_commonHub_setting_nightlight_allday": "Den ganzen Tag",
    "mi_ifttt_launch": "Wenn eine Bedingung erfüllt ist",
    "mi_ifttt_action": "Dann",
    "mi_commonHub_nightlight_open": "Nachtlicht einschalten",
    "mi_commonHub_nightlight_motion_limit": "Kann nur bis zu 9 Sensoren für den menschlichen Körper auswählen",
    "mi_commonHub_nightlight_delay_close_min": "Schalten Sie das Nachtlicht in {value} Minuten aus",
    "mi_commonHub_go_back_title": "Beenden",
    "mi_commonHub_go_back_content": "Änderungen verwerfen und jetzt beenden?",
    "mi_commonHub_setting_nightlight": "Induktions-Nachtlicht",
    "mi_commonHub_nightlight_commont": "Wenn sich das {value} in einer dunklen Umgebung befindet",
    "mi_commonHub_nightlight_timer": "Induktionszeit",
    "mi_commonHub_linkage_alarm_number_ten": "Kann nur bis zu 10 Gateway-Alarme auswählen",
    "common_offline": "offline",
    "mi_commonHub_linkage_alarm_footer_text": "Wenn die Alarm-Link-Funktion der Steuerzentrale aktiviert ist und eine Steuerzentrale ausgelöst wird, werden der Alarmklingelton und das Blinklicht aller Steuerzentralen ausgelöst.",
    "mi_commonHub_linkage_alarm": "Verknüpfungsalarm",
    "mi_commonHub_linkage_alarm_dis": "Verknüpfungsalarm abgebrochen",
    "mi_commonHub_ring_doorbell": "Ton der Türklingel",
    "mi_commonHub_ring_knocking": "Türklopfgeräusch",
    "mi_commonHub_ring_funny": "Lustiger Ton",
    "mi_commonHub_ring_alarm_clock": "Wecker-Ton",
    "mi_commonHub_ring_alarm_music": "Alarmton",
    "mi_commonHub_ring_policecar1": "Polizeiauto Ton 1",
    "mi_commonHub_ring_policecar2": "Polizeiauto Ton 2",
    "mi_commonHub_ring_safety_accident": "Sicherheitsstörgeräusch",
    "mi_commonHub_ring_countdown": "Raketen-Countdown",
    "mi_commonHub_ring_ghost": "Geisterschrei",
    "mi_commonHub_ring_gun": "Gewehrschuss",
    "mi_commonHub_ring_battle": "Kampfgeräusch",
    "mi_commonHub_ring_airraid": "Einbruchalarm",
    "mi_commonHub_ring_dog": "Bellen",
    "mi_commonHub_ring_mimix": "Mi Mix",
    "mi_commonHub_ring_enthusuastic": "Enthusiastisch",
    "mi_commonHub_ring_guitarclassic": "Klassische Gitarre",
    "mi_commonHub_ring_iceworldpiano": "Ice World Piano",
    "mi_commonHub_ring_leisuretime": "Freizeit",
    "mi_commonHub_ring_childhood": "Kindheit",
    "mi_commonHub_ring_morningstreamllet": "Morning Streamlet",
    "mi_commonHub_ring_musicbox": "Musik-Box",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Speicher bei Netzausfall",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Ständig klingeln",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} Min.",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} Sek.",
    "mi_comboHub_guardSetting": "Schutzeinstellungen",
    "mi_comboHub_guardSetting_delayTime_immediately": "Ab sofort gültig",
    "mi_linuxHub_arming_ring": "Alarm-Klingelton",
    "mi_comboHub_guardSetting_alarmDuration": "Alarmdauer",
    "mi_comboHub_guardSetting_alarmVolume": "Alarmtonlautstärke",
    "mi_comboHub_guardSetting_delayTime": "Schutzes Aktivierung Countdown",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Türklingel",
    "mi_commonHub_setting_volume_doorbell": "Lautstärke der Türklingel",
    "mi_commonHub_setting_push": "Telefonische Benachrichtigung",
    "mi_commonHub_setting_alarmclock": "Wecker",
    "mi_commonHub_guard_go_config": "Jetzt einstellen",
    "mi_commonHub_numbers": " Stck.",
    "mi_commonHub_lazy_clock_list": "Weckerliste",
    "mi_commonHub_lazy_clock_close_way": "Wecker im Aus-Zustand",
    "mi_commonHub_timersetting_repeat": "Wiederholen",
    "mi_commonHub_setting_bell": "Klingelton",
    "mi_commonHub_setting_volume": "Lautstärke",
    "mi_commonHub_add_lazyclock": "Fügen Sie einen Alarm hinzu",
    "mi_commonHub_lazy_clock_delete": "Ausgewählten Timer löschen?",
    "mi_commonHub_sure_delete": "Möchten Sie das ausgewählte Element wirklich löschen?",
    "mi_commonHub_lazy_clock_list_empty": "Kein Wecker hinzugefügt",
    "mi_commonHub_lazy_clock_name": "Wecker",
    "mi_commonHub_play_specific_tone": "Wiedergabe des angegebenen Klingeltons",
    "mi_commonHub_tone_volume": "Klingeltonlautstärke",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Anzeige ausschalten",
    "mi_common_close_indicator_light_tips": "Anzeige zwischen 21:00 und 09:00 Uhr ausschalten",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Route löschen",
    "mi_common_clear_position_comfirm_tip": "Aktuelle Vorhangroute löschen?",
    "mi_common_clear_position_success": "Erfolgreich gelöscht",
    "mi_common_adjust_direction": "Ausrichtung der Öffnungs-und Schließrichtung der Vorhänge",
    "mi_common_adjust": "Ausrichtung",
    "mi_common_adjust_success": "Erfolgreiche Ausrichtung",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Name kann nicht leer sein",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Offen bis {progress}%",
    "mi_common_opened_fully": "Völlig offen",
    "mi_common_closed_fully": "Komplett geschlossen",
    "mi_common_setting_success": "Erfolgreich konfiguiert",
    "mi_common_setting": "Konfiguieren...",
    "mi_common_control_curtain_manually": "Öffnen/Schließen Sie die Vorhänge manuell.",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Vorhangstil",
    "mi_common_curtain_install_guide": "Anleitung zur Routeeinstellung",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Öffnen Sie die Vorhänge an die angegebene Position",
    "mi_curtain_open_to": "Öffnen Sie die Vorhänge auf {progress}%",
    "mi_curtain_style_double": "Doppelter offener Vorhang",
    "mi_curtain_style_double_simple": "Doppelt offen",
    "mi_curtain_style_left": "Öffnen Sie den Vorhang links",
    "mi_curtain_style_left_simple": "Nach links öffnen",
    "mi_curtain_style_right": "Öffnen Sie den Vorhang rechts",
    "mi_curtain_style_right_simple": "Nach rechts öffnen",
    "mi_common_discard_operation": "Aktuelle Operation löschen?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Speichern fehlgeschlagen, bitte versuchen Sie es später erneut.",
    "mi_curtain_common_open": "Öffnen",
    "mi_curtain_common_close": "Schleißen",
    "mi_curtain_common_pause": "Pause",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Einmaliges Drücken (erforderlich)",
    "mi_commonHub_must_choose": "Erforderlich",
    "mi_commonHub_send_phone_msg": "Benachrichtigungen an Telefon senden",
    "mi_commonHub_ring_the_bell": "Klingeln an der Türklingel",
    "mi_commonHub_lazy_clock_close": "Wecker deaktivieren",
    "mi_commonHub_system_ringtone": "Systemklingelton",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "Hinzufügen",
    "mi_commonHub_guard_alarm_sound_light_settings": "Alarmtöne & Lichteinstellungen",
    "mi_commonHub_guard_guardian_countdown": "Schutzes Aktivierung Countdown",
    "mi_commonHub_arming_light_length": "Lichtblinkdauer",
    "mi_commonHub_arming_always_flashing": "Immer klingeln",
    "mi_commonHub_arming_not_flashing": "Kein Blinzeln",
    "mi_commonHub_linkage_alarm_hint_detail": "Verknüpfung und Benachrichtigung mit anderen Hubs, Erhöhung der Sicherheitsstufe",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Datum auswählen",
    "common_month_1": "Januar",
    "common_month_2": "Februar",
    "common_month_3": "März",
    "common_month_4": "April",
    "common_month_5": "Mai",
    "common_month_6": "Juni",
    "common_month_7": "Juli",
    "common_month_8": "August",
    "common_month_9": "September",
    "common_month_10": "Oktober",
    "common_month_11": "November",
    "common_month_12": "Dezember",
    "common_year_month_1": "Januar s%",
    "common_year_month_2": "Februar s%",
    "common_year_month_3": "März s%",
    "common_year_month_4": "April s%",
    "common_year_month_5": "Mai s%",
    "common_year_month_6": "Juni s%",
    "common_year_month_7": "Juli s%",
    "common_year_month_8": "August s%",
    "common_year_month_9": "September s%",
    "common_year_month_10": "Oktober s%",
    "common_year_month_11": "November s%",
    "common_year_month_12": "Dezember s%",
    "common_week_mon_short": "Montag",
    "common_week_tue_short": "Dienstag",
    "common_week_wed_short": "Mittwoch",
    "common_week_thu_short": "Donnerstag",
    "common_week_fri_short": "Freitag",
    "common_week_sat_short": "Samstag",
    "common_week_sun_short": "Sonntag",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Kalender",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " Min.",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Verzögerungszeit für das Ausschalten des Lichts, nachdem die Personen das Gebäude verlassen haben",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Unterstützt automatische Firmware-Updates",
    "mi_common_view_details": "Tippen Sie, um die Details anzuzeigen",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee untergeordnete Geräte",
    "common_hub_bluetooth_subdevice": "Untergeordnete Bluetooth-Geräte"
  };
  exports.default = de;
},10046,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var en = {
    "langugeName": "英语",
    "common_setting_title": "Settings",
    "mi_common_mode_cool": "Cooling",
    "mi_common_mode_heat": "Heating",
    "mi_common_mode_dry": "Dry",
    "mi_common_mode_fan": "Air supply",
    "mi_common_mode_auto": "Auto",
    "mi_common_fanspeed_low": "Low",
    "mi_common_fanspeed_medium": "Medium",
    "mi_common_fanspeed_high": "High",
    "mi_common_fanspeed_with_auto": "Auto Fan Speed",
    "mi_common_fanspeed_with_low": "Low Fan Speed",
    "mi_common_fanspeed_with_medium": "Medium Fan Speed",
    "mi_common_fanspeed_with_high": "High Fan Speed",
    "mi_common_with_mode_cool": "Cooling Mode",
    "mi_common_mode": "Mode",
    "mi_common_with_mode_heat": "Heating Mode",
    "mi_common_with_mode_auto": "Auto Mode",
    "mi_common_with_mode_fan": "Air Supply Mode",
    "mi_common_with_mode_dry": "Dry Mode",
    "mi_common_timer_workstate_wind_open": "Swing On",
    "mi_common_timer_workstate_wind_close": "Swing Off",
    "mi_common_power_on": "POWER-ON",
    "mi_common_power_off": "POWER-OFF",
    "common_setting_feature_setting": "Function settings",
    "common_setting_general_setting": "General settings",
    "common_setting_device_name": "Device name",
    "common_setting_multiswitch": "Button settings",
    "common_setting_device_timeZone": "Regional settings",
    "common_setting_location_management": "Location management",
    "common_setting_share_device": "Device sharing",
    "common_setting_ifttt_auto": "Automation",
    "common_setting_btGateway": "Bluetooth Mesh gateway",
    "common_setting_btGateway_status_read_fail": "Couldn't retrieve the status of Bluetooth Mesh gateway",
    "common_setting_btGateway_connected": "Connected Bluetooth devices",
    "common_setting_firmware_upgrate": "Check for firmware updates",
    "common_setting_more_setting": "Additional settings",
    "common_setting_add_to_desktop": "Add to home screen",
    "common_setting_privacy_agreement": "User Agreement & Privacy Policy",
    "common_setting_delete_device": "Delete device",
    "common_setting_help_page": "Help",
    "common_setting_more_seting_security": "Security settings",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Software License and Service Agreement",
    "common_setting_privacy_policy": "Privacy Policy",
    "common_setting_feature_plug_in": "Plug-in version",
    "common_setting_homekit_device_add": "Pair with HomeKit",
    "common_setting_homekit_device_bound": "Bound",
    "common_setting_homekit_device_noBind": "Unbound",
    "common_setting_laboratory": "Lab features",
    "common_setting_protect_delete": "Deletion protection",
    "common_log_title": "Logs",
    "common_log_today": "Today",
    "common_log_yesterday": "Yesterday",
    "common_log_no_logs": "No logs",
    "common_log_loading": "Loading...",
    "common_log_loading_with_dot": "Loading ...",
    "common_log_logDataHasloaded": "Logs have been fully loaded",
    "common_log_all_data_has_been_loaded": "All data has been loaded",
    "common_log_no_data": "No data",
    "common_cancel": "Cancel",
    "common_ok": "OK",
    "common_manufacturer": "Manufactured by",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Can't connect to the network",
    "common_tips_battery_low": "Low battery",
    "common_tips_iknow": "OK",
    "common_button_done": "Done",
    "common_button_delete": "Delete",
    "common_button_retry": "Try again",
    "common_button_save": "Save",
    "common_tips_delete_succeed": "Deleted",
    "common_tips_delete_failed": "Delete failed",
    "common_tips_loading_failed": "Could not load",
    "common_tips_request_failed": "Request failed. Check your network",
    "common_button_prev": "Back",
    "common_button_next": "Next",
    "common_button_changename": "Rename",
    "common_date_workday": "Mon to Fri",
    "common_date_weekend": "Weekend",
    "common_date_selfdefine": "Custom",
    "common_date_mon": "Monday",
    "common_date_tues": "Tuesday",
    "common_date_wed": "Wednesday",
    "common_date_thur": "Thursday",
    "common_date_fri": "Friday",
    "common_date_sat": "Saturday",
    "common_date_sun": "Sunday",
    "common_date_day": " Day",
    "common_date_week": " Week",
    "common_date_month": " Month",
    "common_date_hour": " h",
    "common_date_minute": " min",
    "common_date_second": " s",
    "common_tips_discard_operation": "Discard current operation?",
    "common_tips_setting": "Setting, please wait…",
    "common_tips_setting_failed": "Failed to set",
    "common_tips_loading_failed_retry": "Could not load, tap to try again",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "Electricity Consumption",
    "common_power_history": "Power history record",
    "common_hardware_update_updating": "Updating firmware, please wait…",
    "common_hardware_update_default": "There is a new firmware version ({version}) available, update now?",
    "common_hardware_update_isforce": "Your device's current firmware version is outdated, please update to the latest version ({version}).",
    "common_hardware_update": "Update now",
    "common_out": "Sign out",
    "common_hardware_checkupdate": "View update",
    "common_operation_fail": "Operation failed.",
    "common_repeat_everyday": "Everyday",
    "common_repeat_once": "One time",
    "common_repeat_tomorrow": "Tomorrow",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "The device will be removed from the list.",
    "common_setting_device_delete_confirm": "Delete device?",
    "common_voice_mute": "Silent",
    "common_voice_high": "High",
    "common_voice_middle": "Medium",
    "common_voice_low": "Low",
    "sub_device_list_title": "Child device list",
    "sub_device_list_header_tips": "The following child devices are already paired with this hub.",
    "zigbee_sub_device_list_header_tips": "The following Zigbee child devices are connected to this gateway",
    "sub_device_list_empty_tips": "There are no child devices paired with this control hub.",
    "zigbee_sub_device_list_empty_tips": "There are no Zigbee child devices paired with this control hub",
    "sub_device_list_name_cant_empty": "Device name can not be empty",
    "sub_device_list_name_cant_support_emoji": "Emoji is not supported",
    "sub_device_list_name_cant_support_special_char": "Special characters can not be included",
    "sub_device_list_name_cant_more_forty": "Only supports 40 characters at most",
    "sub_device_list_name_cant_same": "Device names can not be the same.",
    "sub_device_list_device_offline": "Device is offline",
    "sub_device_list_selected": "{XX}has been selected",
    "sub_device_list_delete_multi_device": "Delete {XX} selected devices?",
    "ifttt_triggle_single_press": "Click",
    "ifttt_triggle_double_press": "Press and hold",
    "ifttt_triggle_long_press": "Double-click",
    "ifttt_triggle_shake": "Shake",
    "ifttt_triggle_someone_moved": "Someone moved",
    "ifttt_triggle_windoor_open": "Window/door is open",
    "ifttt_triggle_moved_afteronemin": "Moved after being still for 1 minute",
    "ifttt_triggle_detect_vibration": "Vibration detected",
    "ifttt_triggle_detect_fall": "Fall detected",
    "ifttt_triggle_detect_tilting": "Tilt detected",
    "ifttt_triggle_fire_alert": "Fire alarm",
    "ifttt_triggle_gas_leakage_alert": "Gas leakage alert",
    "ifttt_triggle_flood_alert": "Flood alert",
    "guard_type_basic": "Basic guard",
    "guard_type_home": "At-home guard",
    "guard_type_away": "Away-from-home guard",
    "guard_type_sleep": "Sleep guard",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Please set at least one child device as a trigger device to enable the at-home guard.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Please set at least one child device as a trigger device to enable the away-from-home guard.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Please set at least one child device as a trigger device to enable the sleep guard.",
    "ifttt_push_title_triggle_alert_1": "{XX},{YY}triggers alarm",
    "ifttt_push_title_triggle_alert_2": "{XX},{YY}detects people moving and triggers alarm",
    "ifttt_push_title_triggle_alert_magnet": "{XX} is active, the door or window was opened or closed and triggered the alert.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% guard is active, s% triggered the alert.",
    "ifttt_push_title_triggle_alert_3": "{XX},{YY}has been opened and triggers alarm",
    "ifttt_push_title_triggle_alert_4": "{XX},{YY}detects motion",
    "ifttt_push_title_triggle_alert_5": "{XX},{YY}detects water leak and triggers alarm",
    "ifttt_push_title_triggle_alert_6": "{XX},{YY}detects the gas density has been over standard",
    "ifttt_push_title_triggle_alert_7": "{XX},{YY}detects smoke",
    "common_ifttt_scene_execute_result_fail": "Execution failed",
    "common_ifttt_scene_execute_result_unknow_error": "Unknow Error",
    "common_ifttt_scene_execute_result_time_out": "Timeout",
    "common_ifttt_scene_execute_result_camera_sleep": "The camera has been on sleep mode",
    "common_ifttt_device_offline": "(Offline)",
    "timersetting_on": "Start time",
    "timersetting_off": "End time",
    "timersetting_empty": "Not set",
    "timersetting_perio": "Active for",
    "common_start": "Start",
    "common_end": "End",
    "common_color": "color",
    "common_open": "Enable",
    "common_scene_name_lm_scene_1_1": "Alarm will be triggered when people pass by on security mode",
    "common_scene_name_lm_scene_1_2": "Alarm will be triggered when door or window is opened on security mode",
    "common_scene_name_lm_scene_1_3": "Press Wireless Mini Switch to trigger alarm on security mode",
    "common_scene_name_lm_scene_1_4": "Alarm will be triggered if the Cube has been still for some time on security mode",
    "common_scene_name_lm_scene_1_5": "Alarm will be triggered if Vibration Sensor has been still for 2 minutes on security mode",
    "common_scene_name_lm_scene_2_1": "The night light turns on when people pass by",
    "common_scene_name_lm_scene_3_1": "Press Wireless Mini Switch to ring the doorbell",
    "common_scene_name_lm_scene_3_2": "The doorbell rings when a door/window is opened",
    "common_scene_name_lm_scene_3_3": "The doorbell rings when people pass by.",
    "common_scene_name_lm_scene_4_1": "Turn off alarm clock when someone is passing by",
    "common_scene_name_lm_scene_4_2": "Turn off alarm clock when a door/window is opened",
    "common_scene_name_lm_scene_4_3": "Press Wireless Mini Switch to turn off the alarm clock",
    "common_scene_name_lm_scene_5_1": "Smoke detection will set off the hub's alert.",
    "common_scene_name_lm_scene_5_2": "Gas detection will set off the hub's alert.",
    "common_scene_name_lm_scene_5_3": "Water leak detection will set off the hub's alert.",
    "common_close": "Off",
    "common_state_closed": "Disabled",
    "sensor_set_ifttt_config_success": "Configured successfully",
    "common_automation_configuring": "Automation is setting, please wait...",
    "sensor_set_ifttt_config_fail": "Configuration failed",
    "sensor_set_ifttt_config_fail_tip": "1.The Hub must be connected to Wi-Fi \n2.The phone must be connected to Wi-Fi \n3.Make sure Wi-Fi works properly",
    "mi_linuxHub_guard_guard_timer": "Guard schedule",
    "mi_linuxHub_timer_light_name": "Colored light schedules",
    "mi_linuxHub_lazy_clock_name": "Alarm clock schedules",
    "sensor_set_ifttt_scene_name_1": "Alert for door opening",
    "sensor_set_ifttt_scene_name_2": "Single press the Wireless Mini Switch to turn on/off the night light",
    "sensor_set_ifttt_scene_name_3": "Double press the Wireless Mini Switch to turn the security mode on/off",
    "sensor_set_ifttt_scene_name_4": "The night light turns on when people pass by",
    "sensor_set_ifttt_scene_name_5": "The night light turns off when no motion has been detected in 2 minutes ",
    "sensor_set_ifttt_scene_name_6": "The night light turns on when people move.",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "1 minute passed and has not been turned off ",
    "sensor_set_ifttt_triggle_name_2": "No people move in 2 minutes",
    "sensor_set_ifttt_triggle_name_3": "Play set ringtone",
    "sensor_set_ifttt_triggle_name_4": "Turn on/off the night light",
    "sensor_set_ifttt_triggle_name_5": "The night light turns on",
    "sensor_set_ifttt_triggle_name_6": "Turn off the night light",
    "sensor_set_ifttt_triggle_name_7": "Turn on the night light",
    "sensor_set_ifttt_triggle_name_8": "Turn on/off the security mode",
    "sensor_set_ifttt_triggle_name_9": "In dark",
    "common_scene_execute_partiallysucceed": "Part of action completed",
    "common_short_date_mon": "Mon",
    "common_short_date_tues": "Tue",
    "common_short_date_wed": "Wed",
    "common_short_date_thur": "Thu",
    "common_short_date_fri": "Fri",
    "common_short_date_sat": "Sat",
    "common_short_date_sun": "Sun",
    "common_repeat_timer_title": "Repetition",
    "common_repeat_self_timer_title": "Customize Repetition",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Countdown",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Today",
    "common_plug_month_elec": "Month",
    "common_plug_current_power": "Current",
    "mi_comboHub_mainPage_guard": "Guard",
    "mi_comboHub_mainPage_guard_base": "Basic",
    "mi_comboHub_mainPage_guard_home": "At-home",
    "mi_comboHub_mainPage_guard_away": "Away-from-home",
    "mi_comboHub_mainPage_guard_sleep": "Sleep",
    "common_comboHub_triggle_device_alert": "Alert",
    "common_comboHub_triggle_device_opened_guard": "(Has been enabled for the {XX} guard.)",
    "common_comboHub_triggle_device_only_open_basic": "(Can only be used for the basic guard.)",
    "common_comboHub_triggle_device_opened_basic": "(Has been enabled for the basic guard.)",
    "common_setting_homekit_device_desc": "The device can be configured and used in Apple Home app.",
    "common_ifttt_triggleName_switch": "Alert is triggered when the switch's status changes.",
    "common_ifttt_triggleName_vibration": "Alert is triggered when the status changes.",
    "common_ifttt_triggleName_cube": "Alert is triggered when it is moved after being inactive over 1 minute.",
    "common_ifttt_triggleName_magnet": "Alert is triggered when the door or window sensor's status changes.",
    "common_ifttt_triggleName_motion": "Someone moved and triggered the alert.",
    "common_timer_light_timer_light_period": "Set timed period",
    "common_timer_light_timer_on": "Timed starting",
    "common_timer_light_timer_off": "Timed ending",
    "common_timer_light_timer_time_after": "The start time is after the end time",
    "common_lumi_sensor_setting_battery": "Battery",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Battery replacement guide",
    "common_lumi_sensor_battery_guide_description": "Please remove the battery cover and replace the battery as shown.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Low battery, please replace the battery",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat protection",
    "common_overload_protect": "Overload protection",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Alert trigger device",
    "mi_comboHub_triggleDevices_deleting": "Deleting…",
    "mi_comboHub_triggleSubDevices_setting": "Configuring…",
    "mi_comboHub_triggle_device_header_title_1": "Devices that cannot be enabled",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "When there are devices that can continuously monitor the environment connected to the hub, such as smoke detectors and gas detectors, you can set them as the basic guard's trigger devices. Once enabled, the basic guard will monitor your home 24/7.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Has been enabled as the trigger device for the at-home, away-from-home, or sleep guard, it cannot be used for the basic guard.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "After setting the trigger device, you can enable the home guard.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Has been enabled as the trigger device for the basic guard, it cannot be used for the at-home guard.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "After setting the trigger device, you can enable the away-from-home guard.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Has been enabled as the trigger device for the basic guard, it cannot be used for the  away-from-home guard.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "After setting the trigger device, you can enable the sleep guard.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Has been enabled as the trigger device for the basic guard, it cannot be used for the sleep guard.",
    "mi_comboHub_triggle_device_empty_tip": "There are no devices paired with this control hub that can be used to trigger the alert, such as a motion sensor, window and door sensor, or wireless switch.",
    "mi_comboHub_triggle_device_go_to_bug": "Purchase",
    "mi_commonHub_setting_nightlight_tomorrow": "Tomorrow",
    "mi_commonHub_setting_nightlight_allday": "All Day",
    "mi_ifttt_launch": "If any condition is met",
    "mi_ifttt_action": "Then",
    "mi_commonHub_nightlight_open": "Turn on the night light",
    "mi_commonHub_nightlight_motion_limit": "At most 9 Motion Sensors can be chosed",
    "mi_commonHub_nightlight_delay_close_min": "Turn off the night light in {value} min",
    "mi_commonHub_go_back_title": "Exit",
    "mi_commonHub_go_back_content": "Discard changes, and exit now?",
    "mi_commonHub_setting_nightlight": "Induction night light",
    "mi_commonHub_nightlight_commont": "When the {value} is in a dark environment",
    "mi_commonHub_nightlight_timer": "Effective Period",
    "mi_commonHub_linkage_alarm_number_ten": "Only 10 Hubs at most can be set to give off alarm",
    "common_offline": "Offline",
    "mi_commonHub_linkage_alarm_footer_text": "When the control hub's alert link function is enabled, and a control hubs is triggered, the alert ringtone and blinking light of all control hubs will be triggered.",
    "mi_commonHub_linkage_alarm": "Linkage alarm",
    "mi_commonHub_linkage_alarm_dis": "Linkage alarm canceled",
    "mi_commonHub_ring_doorbell": "Doorbell tone",
    "mi_commonHub_ring_knocking": "Door knocking sound",
    "mi_commonHub_ring_funny": "Funny tone",
    "mi_commonHub_ring_alarm_clock": "Alarm clock tone",
    "mi_commonHub_ring_alarm_music": "Alert tone",
    "mi_commonHub_ring_policecar1": "Police car tone 1",
    "mi_commonHub_ring_policecar2": "Police car tone 2",
    "mi_commonHub_ring_safety_accident": "Safety incident sound",
    "mi_commonHub_ring_countdown": "Missile countdown",
    "mi_commonHub_ring_ghost": "Ghost cry",
    "mi_commonHub_ring_gun": "Gunshot",
    "mi_commonHub_ring_battle": "Battle sound",
    "mi_commonHub_ring_airraid": "Air raid alarm",
    "mi_commonHub_ring_dog": "Barking",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "Guitar Classic",
    "mi_commonHub_ring_iceworldpiano": "Ice World Piano",
    "mi_commonHub_ring_leisuretime": "Leisure Time",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "Morning Stream Llet",
    "mi_commonHub_ring_musicbox": "Music Box",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Ring continuously",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} s",
    "mi_comboHub_guardSetting": "Guard settings",
    "mi_comboHub_guardSetting_delayTime_immediately": "Effective immediately",
    "mi_linuxHub_arming_ring": "Alert ringtone",
    "mi_comboHub_guardSetting_alarmDuration": "Alert duration",
    "mi_comboHub_guardSetting_alarmVolume": "Alert tone volume",
    "mi_comboHub_guardSetting_delayTime": "Guard activation countdown",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Doorbell",
    "mi_commonHub_setting_volume_doorbell": "Doorbell volume",
    "mi_commonHub_setting_push": "Phone notification",
    "mi_commonHub_setting_alarmclock": "Alarm clock",
    "mi_commonHub_guard_go_config": "Set now",
    "mi_commonHub_numbers": "pcs",
    "mi_commonHub_lazy_clock_list": "Alarm clock list",
    "mi_commonHub_lazy_clock_close_way": "Alarm clock off mode",
    "mi_commonHub_timersetting_repeat": "Repeat",
    "mi_commonHub_setting_bell": "Ringtone",
    "mi_commonHub_setting_volume": "Volume",
    "mi_commonHub_add_lazyclock": "Add alarm clock",
    "mi_commonHub_lazy_clock_delete": "Delete the selected timer?",
    "mi_commonHub_sure_delete": "Delete the selected choice?",
    "mi_commonHub_lazy_clock_list_empty": "No alarm clock added",
    "mi_commonHub_lazy_clock_name": "Alarm Clock Timer",
    "mi_commonHub_play_specific_tone": "Play the specified ringtone",
    "mi_commonHub_tone_volume": "Ringtone volume",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "Operating mode",
    "mi_common_timer_setting": "Set schedule",
    "mi_common_timer_temperature": "Temperature",
    "mi_common_fanspeed": "Fan speed",
    "mi_common_airswing": "Swing",
    "mi_common_timer_name": "Scheduled on/off",
    "mi_common_ask_add_ht": "Temperature and humidity sensor has not been added, are you sure to add it?",
    "mi_common_ask_force_ht": "Temperature and humidity sensor is not bound. Are you sure to bind it?",
    "mi_common_home_ht": "Indoor temperature and humidity{temperture} {humidity}",
    "mi_common_add_fail_retry": "Fail to add, please try again!",
    "mi_common_add_fail": "Add failed",
    "mi_common_add_success": "Added successfully",
    "mi_common_add_success_rename": "Added successfully, and please name the button",
    "mi_common_list": "List",
    "mi_common_skip": "Skip",
    "mi_common_reset": "Restore Default Settings",
    "mi_common_onoff": "On/Off",
    "mi_common_air_led_on": "Panel Brightness On",
    "mi_common_air_led_off": "Panel Brightness Off",
    "mi_common_air_led": "Panel Brightness",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "Turn off the indicator every day from 21:00 till the next day at 09:00",
    "common_stop": "Pause",
    "mi_common_find_device": "Search for devices",
    "mi_common_clear_position": "Clear route",
    "mi_common_clear_position_comfirm_tip": "Clear the current curtain route now?",
    "mi_common_clear_position_success": "Cleared successfully",
    "mi_common_adjust_direction": "Adjust the opening/closing direction of the curtain",
    "mi_common_adjust": "Adjust",
    "mi_common_adjust_success": "Adjusted successfully",
    "mi_common_add_remote": "Pair remote control",
    "mi_common_remote_reverse_search": "Remote control reverse search",
    "mi_common_remote_manager": "Remote control management",
    "mi_common_name_can_not_empty": "Name can't be empty",
    "mi_common_name_can_not_be_same": "Name can't be identical",
    "mi_common_input": "Enter",
    "mi_common_delete_remote": "Delete remote control",
    "mi_common_delete_comfirm": "Delete  {XX} now?",
    "mi_common_remote_empty": "No paired remote control",
    "mi_common_open_to": "Open to {progress}%",
    "mi_common_opened_fully": "Completely opened",
    "mi_common_closed_fully": "Completely closed",
    "mi_common_setting_success": "Configured successfully",
    "mi_common_setting": "Configuring…",
    "mi_common_control_curtain_manually": "Open/close curtains manually",
    "mi_common_curtain_manually_tip": "Once enabled, the curtain will open/close automatically depending on the direction you pull it.",
    "mi_common_curtain_type": "Curtain style",
    "mi_common_curtain_install_guide": "Route setting guide",
    "mi_common_later": "Later",
    "mi_common_curtain_open_to_a_specific_position": "Open the curtains to a specific position",
    "mi_curtain_open_to": "Open the curtains to {progress}%",
    "mi_curtain_style_double": "Open both curtains",
    "mi_curtain_style_double_simple": "Open both",
    "mi_curtain_style_left": "Open curtain to the left",
    "mi_curtain_style_left_simple": "Open to left",
    "mi_curtain_style_right": "Open curtain to the right",
    "mi_curtain_style_right_simple": "Open to right",
    "mi_common_discard_operation": "Discard the current operation?",
    "mi_common_saving_wait": "Saving, please wait...",
    "mi_common_saving_fail_retry": "Could not save, please try again.",
    "mi_curtain_common_open": "Open",
    "mi_curtain_common_close": "Close",
    "mi_curtain_common_pause": "Pause",
    "mi_common_remote_control_add_success": "Device added successfully",
    "mi_common_send_success": "Sent successfully",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "Hub info",
    "mi_common_sub_device_info": "Child device info",
    "mi_common_zigbee": "Zigbee channel",
    "mi_common_gateway_id": "Gateway ID",
    "mi_common_encryption": "Encryption",
    "mi_common_copy": "Copy",
    "mi_common_lan_protocol": "Wireless communication protocol",
    "mi_common_fetch_fail": "Loading failed",
    "mi_common_password": "Password",
    "mi_common_my_favorite": "My Favorites",
    "mi_common_fm_radio": "Network radio",
    "mi_common_favorite": "Favorites",
    "mi_common_radio_rank": "Ranking",
    "mi_common_radio_province": "Area",
    "mi_common_radio": "Radio",
    "mi_common_co2_is_up_to": "CO2 concentration is up to {value}",
    "mi_common_co2_is_down_to": "CO2 concentration is down to {value}",
    "mi_common_no_favorite_radio": "No favorite radio",
    "mi_common_limit_favorite_radio_20": "At most 20 radio stations can be added to favorites",
    "mi_common_fm_tips": "The resources, services and technical support are provided by third-party partners. Xiaomi does not guarantee the accuracy, validity, or other potential risks of third-party services.",
    "mi_common_aqara_vrfacc_co_level_info_strong": "Excellent (outdoor air)",
    "mi_common_aqara_vrfacc_co_level_info_good": "Good (good ventilation)",
    "mi_common_aqara_vrfacc_co_level_info_medium": "Fair (not enough O2)",
    "mi_common_aqara_vrfacc_co_level_info_weak": "Poor (lack of O2)",
    "mi_common_aqara_vrfacc_co_level_info_bad": "Very Poor (severe lack of O2)",
    "mi_common_aqara_vrfacc_co_level": "CO2 Level",
    "common_creat_scene": "Create automation",
    "common_ble_phone_connected": "Phone connected",
    "common_ble_gateway_connected": "Connected via Bluetooth gateway",
    "common_ble_gateway_not_found": "No Bluetooth gateway found",
    "common_ble_gateway_too_far": "The device may be too far away from the Bluetooth gateway.",
    "common_ble_connecting": "Connecting…",
    "common_ble_unable_to_connect": "Unable to connect",
    "common_ble_reconnect": "Reconnect",
    "common_signal_strength": "Zigbee signal strength",
    "common_ble_signal_strength": "Bluetooth gateway signal",
    "common_model": "Model",
    "common_signal_strength_good": "Good",
    "common_signal_strength_fine": "Fine",
    "common_signal_strength_mid": "Moderate",
    "common_signal_strength_poor": "Weak",
    "common_device_button_pressed": "Device's button has been pressed",
    "mi_commonHub_lazy_clock_gateway_choose": "Single press (required)",
    "mi_commonHub_must_choose": "Required",
    "mi_commonHub_send_phone_msg": "Send notifications to phone",
    "mi_commonHub_ring_the_bell": "Ring doorbell",
    "mi_commonHub_lazy_clock_close": "Disable alarm clock",
    "mi_commonHub_system_ringtone": "System Ringtone",
    "mi_commonHub_custom_ringtone": "Custom Ringtone",
    "mi_commonHub_delete_name": "Are you sure to delete{value}?",
    "mi_commonHub_add_ringtone": "Add ringtone",
    "mi_commonHub_set_ringtone": "Please set the name of sound recording",
    "mi_commonHub_add": "Add",
    "mi_commonHub_guard_alarm_sound_light_settings": "Alert tones & light settings",
    "mi_commonHub_guard_guardian_countdown": "Guard activation countdown",
    "mi_commonHub_arming_light_length": "Light blinking duration",
    "mi_commonHub_arming_always_flashing": "Always ring",
    "mi_commonHub_arming_not_flashing": "No blink",
    "mi_commonHub_linkage_alarm_hint_detail": "Linkage and alert with other Hub, enhance security level",
    "mi_common_lan_protocol_content": "1. The purpose of opening this Protocol is to enable devices from different manufacturers to be interconnected and jointly set up the Internet of Things.\n2. Users can integrate LUMI devices into HomeKit or other existing systems.\n3. This Protocol is only in the LAN communications, and the protocol or mechanismused are: udp protocol, multicast, AES encryption and decryption.\n4. Users can get sensor data with this protocol, such as doors and windows states,human motion at home, temperature and humidity value.\n5. Users can use this protocol to control LUMI Smart Plug, Wall Switch and other LUMI smart devices (need use the key to control).",
    "mi_common_lan_protocol_title": "LUMI Hub LAN Communication Protocol",
    "common_date_picker": "Select a date",
    "common_month_1": "Jan",
    "common_month_2": "Feb",
    "common_month_3": "Mar",
    "common_month_4": "Apr",
    "common_month_5": "May",
    "common_month_6": "Jun",
    "common_month_7": "Jul",
    "common_month_8": "Aug",
    "common_month_9": "Sep",
    "common_month_10": "Oct",
    "common_month_11": "Nov",
    "common_month_12": "Dec",
    "common_year_month_1": "January s%",
    "common_year_month_2": "February s% ",
    "common_year_month_3": "March s%",
    "common_year_month_4": "April s%",
    "common_year_month_5": "May s%",
    "common_year_month_6": "June s%",
    "common_year_month_7": "July s%",
    "common_year_month_8": "August s%",
    "common_year_month_9": "September s%",
    "common_year_month_10": "October s%",
    "common_year_month_11": "November s%",
    "common_year_month_12": "December s%",
    "common_week_mon_short": "Mon",
    "common_week_tue_short": "Tue",
    "common_week_wed_short": "Wed",
    "common_week_thu_short": "Thu",
    "common_week_fri_short": "Fri",
    "common_week_sat_short": "Sat",
    "common_week_sun_short": "Sun",
    "mi_common_audio_access_title": "Access to Microphone not authorized",
    "mi_common_audio_access_content": "Allow Mi Home to access your microphone in \"Settings > Privacy > Microphone\"",
    "mi_common_protect_delete_app": "Once enabled, the device can only be deleted via the app.",
    "mi_common_protect_delete_app_reduction": "Prevent accidental deletion description",
    "mi_common_protect_delete_app_reduction_detail": "Prevent accidental deletion: To prevent the device from being accidentally reset while operating the device, resulting in the device being deleted from the app.\nOnce this function is enabled, the device can only be deleted via the app.\nOnce this function is disabled, the device can be deleted via the app, or by pressing the button on the device.\nTips: Prevent accidental deletion is disabled by default. After resetting or deleting the device from the app, and then adding it again, this function is disabled by default.",
    "mi_common_protect_delele_sub_device": "Child devices that support preventing accidental deletion under the hub",
    "mi_common_open_fully": "Turn all on",
    "mi_common_close_fully": "Turn all off",
    "common_calender": "Calendar",
    "common_record_maxsum": "Custom record have reached maximum limit. Please delete some and try again.",
    "common_unit_minute_simple": " min",
    "common_device_offline": "Device offline",
    "mi_commonHub_setting_nightlight_holdtime": "Delay time of turning off the light after people leave",
    "mi_commonHub_play_fm": "Adjust radio volume",
    "mi_common_auto_upgrade": "Supports automatic firmware updates",
    "mi_common_view_details": "Tap to view the details",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Air Conditioning Controller(Advanced)",
    "mi_common_gateway_v3_device_default_name": "Mi Control Hub",
    "mi_common_triggle_vibration_three_press": "Three presses are detectedd",
    "mi_common_triggle_vibration_moved": "Motion detected",
    "common_hub_zigbee_subdevice": "Zigbee child devices",
    "common_hub_bluetooth_subdevice": "Bluetooth child devices"
  };
  exports.default = en;
},10049,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var es = {
    "langugeName": "西班牙语",
    "common_setting_title": "Ajustes",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Ajustes de función",
    "common_setting_general_setting": "Ajustes generales",
    "common_setting_device_name": "Nombre del dispositivo",
    "common_setting_multiswitch": "Ajustes de los botones",
    "common_setting_device_timeZone": "Configuraciones regionales",
    "common_setting_location_management": "Gestión de localización",
    "common_setting_share_device": "Uso compartido de dispositivos",
    "common_setting_ifttt_auto": "Automatización",
    "common_setting_btGateway": "Puerta de enlace del Bluetooth en Malla",
    "common_setting_btGateway_status_read_fail": "No se pudo recibir el estado de la puerta de enlace del Bluetooth en Malla",
    "common_setting_btGateway_connected": "Conectado a dispositivos Bluetooth",
    "common_setting_firmware_upgrate": "Buscar actualizaciones del firmware",
    "common_setting_more_setting": "Ajustes adicionales",
    "common_setting_add_to_desktop": "Añadir a la pantalla de inicio",
    "common_setting_privacy_agreement": "Acuerdo de usuario y Política de privacidad",
    "common_setting_delete_device": "Eliminar el dispositivo",
    "common_setting_help_page": "Ayuda",
    "common_setting_more_seting_security": "Ajustes de seguridad",
    "common_setting_more_seting_faq": "Preguntas frecuentes",
    "common_setting_more_seting_isssues": "Comentarios",
    "common_setting_user_agreement": "Licencia de Software y Acuerdo de Servicio",
    "common_setting_privacy_policy": "Política de privacidad",
    "common_setting_feature_plug_in": "Versión del complemento",
    "common_setting_homekit_device_add": "Vincular con HomeKit",
    "common_setting_homekit_device_bound": "Atar",
    "common_setting_homekit_device_noBind": "Sin consolidar",
    "common_setting_laboratory": "Funciones de laboratorio",
    "common_setting_protect_delete": "Guardia contra eliminación",
    "common_log_title": "Registro",
    "common_log_today": "Hoy",
    "common_log_yesterday": "Ayer",
    "common_log_no_logs": "Sin Registros",
    "common_log_loading": "Cargando...",
    "common_log_loading_with_dot": "Cargando ...",
    "common_log_logDataHasloaded": "Los registros se han cargado con éxito",
    "common_log_all_data_has_been_loaded": "Se han cargado todos los datos",
    "common_log_no_data": "No hay datos",
    "common_cancel": "Cancelar",
    "common_ok": "Aceptar",
    "common_manufacturer": "Prodotto da",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "No se puede conectar a la red",
    "common_tips_battery_low": "Batería baja",
    "common_tips_iknow": "Entendido",
    "common_button_done": "Hecho",
    "common_button_delete": "Eliminar",
    "common_button_retry": "Vuelva a intentarlo",
    "common_button_save": "Guardar",
    "common_tips_delete_succeed": "Eliminado",
    "common_tips_delete_failed": "No se pudo eliminar",
    "common_tips_loading_failed": "Error al cargar",
    "common_tips_request_failed": "Error al solicitar. Compruebe su red",
    "common_button_prev": "Atrás",
    "common_button_next": "Siguiente",
    "common_button_changename": "Renombrar",
    "common_date_workday": "De lunes a viernes",
    "common_date_weekend": "Fines de semana",
    "common_date_selfdefine": "Personalizado",
    "common_date_mon": "Lunes",
    "common_date_tues": "Martes",
    "common_date_wed": "Miércoles",
    "common_date_thur": "Jueves",
    "common_date_fri": "Viernes",
    "common_date_sat": "Sábado",
    "common_date_sun": "Domingo",
    "common_date_day": " Día",
    "common_date_week": " Semana",
    "common_date_month": " Mes",
    "common_date_hour": " h",
    "common_date_minute": "min",
    "common_date_second": "s",
    "common_tips_discard_operation": "¿Quiere anular la operación actual?",
    "common_tips_setting": "Estableciendo, espere...",
    "common_tips_setting_failed": "Error al establecer",
    "common_tips_loading_failed_retry": "No se ha podido realizar la carga, pulse para volver a intentarlo.",
    "common_tips_shared_no_promision": "El dispositivo compartido no tiene permiso",
    "common_electricity": "Estadísticas de electricidad",
    "common_power_history": "Registro histórico de energía",
    "common_hardware_update_updating": "Actualizando el firmware, espere ...",
    "common_hardware_update_default": "¿Hay una nueva versión ({version}) de firmware disponible, ¿quiere actualizar ahora?",
    "common_hardware_update_isforce": "La versión actual del firmware de su dispositivo no está actualizada, actualice a la última versión ({version}).",
    "common_hardware_update": "Actualizar ahora",
    "common_out": "Cerrar sesión",
    "common_hardware_checkupdate": "Ver actualización",
    "common_operation_fail": "Operación fallida",
    "common_repeat_everyday": "Todos los días",
    "common_repeat_once": "Una vez",
    "common_repeat_tomorrow": "Mañana",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "El dispositivo se eliminará de la lista.",
    "common_setting_device_delete_confirm": "¿Eliminar dispositivo?",
    "common_voice_mute": "Silencioso",
    "common_voice_high": "Alta",
    "common_voice_middle": "Media",
    "common_voice_low": "Baja",
    "sub_device_list_title": "Lista de dispositivos secundarios",
    "sub_device_list_header_tips": "Los siguientes dispositivos secundarios ya están vinculados con este centro.",
    "zigbee_sub_device_list_header_tips": "Los siguientes dispositivos secundarios de Zigbee están conectados a esta puerta de enlace",
    "sub_device_list_empty_tips": "No hay dispositivos secundarios vinculados con este centro de control.",
    "zigbee_sub_device_list_empty_tips": "No hay dispositivos secundarios vinculados con este centro de control.",
    "sub_device_list_name_cant_empty": "El nombre del dispositivo no puede estar vacío",
    "sub_device_list_name_cant_support_emoji": "No admite expresiones emoji",
    "sub_device_list_name_cant_support_special_char": "El nombre no puede contener símbolos especiales",
    "sub_device_list_name_cant_more_forty": "El nombre no puede superar los 40 caracteres.",
    "sub_device_list_name_cant_same": "El nombre del dispositivo no puede ser el mismo",
    "sub_device_list_device_offline": "El dispositivo no tiene conexión",
    "sub_device_list_selected": "{XX} elemento seleccionado",
    "sub_device_list_delete_multi_device": "¿Está seguro de eliminar los dispositivos {XX} seleccionados?",
    "ifttt_triggle_single_press": "Clic",
    "ifttt_triggle_double_press": "Mantener pulsado",
    "ifttt_triggle_long_press": "Doble clic",
    "ifttt_triggle_shake": "Agitar",
    "ifttt_triggle_someone_moved": "Alguien se mudó",
    "ifttt_triggle_windoor_open": "La ventana / puerta está abierta",
    "ifttt_triggle_moved_afteronemin": "Movido después de un minuto de inactividad",
    "ifttt_triggle_detect_vibration": "Vibración detectada",
    "ifttt_triggle_detect_fall": "Caída detectada",
    "ifttt_triggle_detect_tilting": "Sintiendo la inclinación",
    "ifttt_triggle_fire_alert": "Alarma de incendios",
    "ifttt_triggle_gas_leakage_alert": "Alerta de escape de gas",
    "ifttt_triggle_flood_alert": "Alerta de inundación",
    "guard_type_basic": "Guardia básica",
    "guard_type_home": "Guardia en el hogar",
    "guard_type_away": "Guardia del hogar en su ausencia",
    "guard_type_sleep": "Guardia del sueño",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Configure al menos un dispositivo secundario como dispositivo de activación para hacer posible la guardia en el hogar.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Configure al menos un dispositivo secundario como dispositivo de activación para hacer posible la guardia del hogar en su ausencia.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Configure al menos un dispositivo secundario como dispositivo de activación para hacer posible la guardia del sueño.",
    "ifttt_push_title_triggle_alert_1": "En {XX}, {YY} activa una alarma",
    "ifttt_push_title_triggle_alert_2": "En {XX}, {YY} detecta que alguien se mueve para activar una alarma",
    "ifttt_push_title_triggle_alert_magnet": "{XX} está activa, la puerta o ventana se abrió o cerró y detonó la alerta.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% se activa, s% activó la alarma.",
    "ifttt_push_title_triggle_alert_3": "En {XX}, {YY} activa la alarma de activación",
    "ifttt_push_title_triggle_alert_4": "En {XX}, {YY} siente que se mueve",
    "ifttt_push_title_triggle_alert_5": "En {XX}, {YY} detecta la alarma de inundación",
    "ifttt_push_title_triggle_alert_6": "En {XX}, {YY} detectó una concentración de gas superior al estándar",
    "ifttt_push_title_triggle_alert_7": "En {XX}, {YY} detectó humo",
    "common_ifttt_scene_execute_result_fail": "Ejecución fallida",
    "common_ifttt_scene_execute_result_unknow_error": "Error anormal",
    "common_ifttt_scene_execute_result_time_out": "Tiempo de espera de implementación",
    "common_ifttt_scene_execute_result_camera_sleep": "La camara esta durmiendo",
    "common_ifttt_device_offline": "(fuera de línea)",
    "timersetting_on": "Hora de inicio",
    "timersetting_off": "Hora de finalización",
    "timersetting_empty": "No establecido",
    "timersetting_perio": "Activo para",
    "common_start": "Empezar",
    "common_end": "Fin",
    "common_color": "Color",
    "common_open": "Activar",
    "common_scene_name_lm_scene_1_1": "Cuando estaba alerta, alguien pasó la alarma",
    "common_scene_name_lm_scene_1_2": "Alarma de puerta y ventana abierta al alertar",
    "common_scene_name_lm_scene_1_3": "Cuando la alarma está activada, el interruptor inalámbrico presiona la alarma.",
    "common_scene_name_lm_scene_1_4": "Al alertar, el Cubo de Rubik se activa por un tiempo.",
    "common_scene_name_lm_scene_1_5": "Cuando está alerta, los adhesivos estáticos y estáticos se activan durante dos minutos y se activa la alarma.",
    "common_scene_name_lm_scene_2_1": "Alguien pasó, la luz de la noche estaba iluminada.",
    "common_scene_name_lm_scene_3_1": "El interruptor inalámbrico presiona el timbre",
    "common_scene_name_lm_scene_3_2": "El timbre suena cuando se abre una puerta o ventana",
    "common_scene_name_lm_scene_3_3": "Alguien pasó la campana sonando",
    "common_scene_name_lm_scene_4_1": "Desactivar despertador cuando alguien pase",
    "common_scene_name_lm_scene_4_2": "Desactivar despertador cuando se abra una puerta o ventana",
    "common_scene_name_lm_scene_4_3": "El interruptor inalámbrico apaga la alarma",
    "common_scene_name_lm_scene_5_1": "La detección de humo activará la alerta del controlador.",
    "common_scene_name_lm_scene_5_2": "La detección de gas activará la alerta del controlador.",
    "common_scene_name_lm_scene_5_3": "La detección de fuga de agua activará la alerta del controlador.",
    "common_close": "Apagado",
    "common_state_closed": "Desactivado",
    "sensor_set_ifttt_config_success": "Se ha configurado correctamente",
    "common_automation_configuring": "Configurando la automatización del paquete, espere ...",
    "sensor_set_ifttt_config_fail": "Configuración fallida",
    "sensor_set_ifttt_config_fail_tip": "1. Debe conectar la puerta de enlace a wifi \n2. Debe conectar su teléfono a wifi \n3. Asegúrese de que wifi sea normal.",
    "mi_linuxHub_guard_guard_timer": "Temporizador guardián",
    "mi_linuxHub_timer_light_name": "Temporizador linterna",
    "mi_linuxHub_lazy_clock_name": "Reloj despertador",
    "sensor_set_ifttt_scene_name_1": "Recordatorio de apertura de puerta",
    "sensor_set_ifttt_scene_name_2": "Haga clic en el interruptor inalámbrico para encender / apagar la luz nocturna",
    "sensor_set_ifttt_scene_name_3": "Haga doble clic en la alerta del interruptor del interruptor inalámbrico",
    "sensor_set_ifttt_scene_name_4": "Alguien pasó, la luz de la noche estaba iluminada.",
    "sensor_set_ifttt_scene_name_5": "2 minutos de luz nocturna no tripulada apagada",
    "sensor_set_ifttt_scene_name_6": "Alguien moviendo la luz de la noche encendida",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "No cerrado después de más de 1 minuto después de abrir",
    "sensor_set_ifttt_triggle_name_2": "2 minutos sin tripulación",
    "sensor_set_ifttt_triggle_name_3": "Reproduce el tono de llamada especificado",
    "sensor_set_ifttt_triggle_name_4": "Luz de encendido / apagado nocturno",
    "sensor_set_ifttt_triggle_name_5": "Luz de la noche de inducción",
    "sensor_set_ifttt_triggle_name_6": "Apaga la luz de la noche",
    "sensor_set_ifttt_triggle_name_7": "Luz de la noche",
    "sensor_set_ifttt_triggle_name_8": "Alerta de encendido / apagado",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Parte de las tareas se han completado con éxito\"",
    "common_short_date_mon": "Lun.",
    "common_short_date_tues": "Mar.",
    "common_short_date_wed": "Mié.",
    "common_short_date_thur": "Jue.",
    "common_short_date_fri": "Vie.",
    "common_short_date_sat": "Sáb.",
    "common_short_date_sun": "Dom.",
    "common_repeat_timer_title": "Repetir opción",
    "common_repeat_self_timer_title": "Repetición personalizada",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Temporizador",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Обратный отсчет",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Hoy",
    "common_plug_month_elec": "Mes",
    "common_plug_current_power": "Corriente",
    "mi_comboHub_mainPage_guard": "Guardia",
    "mi_comboHub_mainPage_guard_base": "Básico",
    "mi_comboHub_mainPage_guard_home": "En el hogar",
    "mi_comboHub_mainPage_guard_away": "Hogar en su ausencia",
    "mi_comboHub_mainPage_guard_sleep": "Suspensión",
    "common_comboHub_triggle_device_alert": "Alerta",
    "common_comboHub_triggle_device_opened_guard": "(Ha sido habilitado para la guardia {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Solo puede utilizarse con la guardia básica.)",
    "common_comboHub_triggle_device_opened_basic": "(Se ha habilitado para la guardia básica.)",
    "common_setting_homekit_device_desc": "Este dispositivo puede configurarse y se utilizado en la aplicación Apple Home.",
    "common_ifttt_triggleName_switch": "La alarma se activa cuando el estado del interruptor cambie.",
    "common_ifttt_triggleName_vibration": "La alarma se activa cuando el estado cambie.",
    "common_ifttt_triggleName_cube": "La alarma se activa cuando se mueve o tras estar inactivo durante 1 minuto.",
    "common_ifttt_triggleName_magnet": "La alarma se activa cuando el estado del sensor de la ventana o puerta cambie.",
    "common_ifttt_triggleName_motion": "Alguien movió el sensor y activó la alarma.",
    "common_timer_light_timer_light_period": "Periodo de tiempo",
    "common_timer_light_timer_on": "Cronometrado en",
    "common_timer_light_timer_off": "Temporizado",
    "common_timer_light_timer_time_after": "Hora de inicio después de la hora de finalización",
    "common_lumi_sensor_setting_battery": "Batería",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Guía de reemplazo de baterías",
    "common_lumi_sensor_battery_guide_description": "Por favor, retire la tapa de la batería y reemplace la batería como se muestra.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Batería baja, sustitúyala",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat protection",
    "common_overload_protect": "Overload protection",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Dispositivo de activación de alarma",
    "mi_comboHub_triggleDevices_deleting": "Eliminando…",
    "mi_comboHub_triggleSubDevices_setting": "Configurando…",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivos que no pueden ser activados",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Cuando hay dispositivos que pueden vigilar continuamente el entorno conectado al nodo, como detectores de humo y detectores de gas, puede configurarlos como los dispositivos de activación de la protección básica. Una vez activados, la protección básica supervisará su casa 24 horas al día, 7 días a la semana.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Ha sido habilitado como dispositivo de activación para la guardia en casa, en su ausencia del hogar, o del sueño, no puede utilizarse para la guardia básica.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Una vez establezca el dispositivo de activación, podrá activar la guardia del hogar.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Ha sido habilitado como el dispositivo de activación para la guardia básica, no puede usarse para la guardia en el hogar.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Una vez establecido el dispositivo de activación, podrá habilitar la guardia en su ausencia del hogar.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Ha sido habilitado como el dispositivo de activación de guardia básica, no puede usarse para la guardia del hogar en su ausencia.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Una vez establezca el dispositivo de activación, podrá habilitar la guardia del sueño.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Ha sido habilitado como el dispositivo de activación de la guardia básica, no puede usarse para la guardia del sueño.",
    "mi_comboHub_triggle_device_empty_tip": "No hay dispositivos vinculados con este centro de control que se puedan usar para activar la alarma, como un sensor de movimiento, de ventana y de puerta, o un interruptor inalámbrico.",
    "mi_comboHub_triggle_device_go_to_bug": "Adquirir",
    "mi_commonHub_setting_nightlight_tomorrow": "Al dia siguiente",
    "mi_commonHub_setting_nightlight_allday": "Todo el dia",
    "mi_ifttt_launch": "Si se cumple alguna condición",
    "mi_ifttt_action": "Entonces",
    "mi_commonHub_nightlight_open": "Encender la luz de nocturna",
    "mi_commonHub_nightlight_motion_limit": "Solo puede seleccionar hasta 9 sensores del cuerpo humano",
    "mi_commonHub_nightlight_delay_close_min": "Apaga la luz nocturna en {value} min",
    "mi_commonHub_go_back_title": "Salir",
    "mi_commonHub_go_back_content": "¿Descartar los cambios y salir ahora?",
    "mi_commonHub_setting_nightlight": "Luz de inducción nocturna",
    "mi_commonHub_nightlight_commont": "Cuando el {value} está en un ambiente oscuro",
    "mi_commonHub_nightlight_timer": "Período de inducción",
    "mi_commonHub_linkage_alarm_number_ten": "Solo puede seleccionar hasta 10 alarmas de puerta de enlace",
    "common_offline": "fuera de línea",
    "mi_commonHub_linkage_alarm_footer_text": "Cuando la función de enlace de alarma del centro de control está activada y se gatilla un centro de control, se activará el tono de llamada de alarma y la luz intermitente de todos los centros de control.",
    "mi_commonHub_linkage_alarm": "Vinculación de la alarma",
    "mi_commonHub_linkage_alarm_dis": "Vinculación de la alarma cancelada",
    "mi_commonHub_ring_doorbell": "Tono del timbre",
    "mi_commonHub_ring_knocking": "Sonido de llamar a la puerta",
    "mi_commonHub_ring_funny": "Tono gracioso",
    "mi_commonHub_ring_alarm_clock": "Tono de despertador",
    "mi_commonHub_ring_alarm_music": "Tono de alerta",
    "mi_commonHub_ring_policecar1": "Coche de policía 1",
    "mi_commonHub_ring_policecar2": "Coche de policía 2",
    "mi_commonHub_ring_safety_accident": "Sonido de incidente de seguridad",
    "mi_commonHub_ring_countdown": "Cuenta atrás de misil",
    "mi_commonHub_ring_ghost": "Grito de fantasma",
    "mi_commonHub_ring_gun": "Rifle francotirador",
    "mi_commonHub_ring_battle": "Sonido de batalla",
    "mi_commonHub_ring_airraid": "Alarma de ataque aéreo",
    "mi_commonHub_ring_dog": "Ladrido",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Entusiasta",
    "mi_commonHub_ring_guitarclassic": "Guitarra clásica",
    "mi_commonHub_ring_iceworldpiano": "Piano mundo de hielo",
    "mi_commonHub_ring_leisuretime": "Tiempo libre",
    "mi_commonHub_ring_childhood": "Infancia",
    "mi_commonHub_ring_morningstreamllet": "Corriente mañanera",
    "mi_commonHub_ring_musicbox": "Caja de música",
    "mi_commonHub_ring_orange": "Naranja",
    "mi_commonHub_ring_thinker": "Pensador",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this protection, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Memoria de fallos eléctricos",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Suena continuamente",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}s",
    "mi_comboHub_guardSetting": "Configuración de la guardia",
    "mi_comboHub_guardSetting_delayTime_immediately": "Con efecto inmediato",
    "mi_linuxHub_arming_ring": "Tono de alarma",
    "mi_comboHub_guardSetting_alarmDuration": "Duración de la alerta",
    "mi_comboHub_guardSetting_alarmVolume": "Volumen de tono de alerta",
    "mi_comboHub_guardSetting_delayTime": "Cuenta atrás activación de guardia",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Timbre",
    "mi_commonHub_setting_volume_doorbell": "Volumen del timbre",
    "mi_commonHub_setting_push": "Notificación telefónica",
    "mi_commonHub_setting_alarmclock": "Despertador apacible",
    "mi_commonHub_guard_go_config": "Configurar ahora",
    "mi_commonHub_numbers": "Unidades",
    "mi_commonHub_lazy_clock_list": "Lista del despertador",
    "mi_commonHub_lazy_clock_close_way": "Modo despertador desactivado",
    "mi_commonHub_timersetting_repeat": "Repetir",
    "mi_commonHub_setting_bell": "Tono de llamada",
    "mi_commonHub_setting_volume": "Volumen",
    "mi_commonHub_add_lazyclock": "Agregar una alarma",
    "mi_commonHub_lazy_clock_delete": "¿Quiere eliminar el temporizador seleccionado?",
    "mi_commonHub_sure_delete": "¿Estás seguro de que deseas eliminar el elemento seleccionado?",
    "mi_commonHub_lazy_clock_list_empty": "Sin despertador agregado",
    "mi_commonHub_lazy_clock_name": "Reloj despertador",
    "mi_commonHub_play_specific_tone": "Suena el tono de llamada especificado",
    "mi_commonHub_tone_volume": "Volumen del tono",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Apagar indicador",
    "mi_common_close_indicator_light_tips": "Apagar el indicador de 21:00 a 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Eliminar la ruta",
    "mi_common_clear_position_comfirm_tip": "¿Elimina la ruta de la cortina actual?",
    "mi_common_clear_position_success": "Eliminación realizada.",
    "mi_common_adjust_direction": "Ajustar la dirección de apertura / cierre de la cortina",
    "mi_common_adjust": "Ajustar",
    "mi_common_adjust_success": "Ajuste realizado.",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "El nombre no puede estar en blanco",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Abre al {progress}%",
    "mi_common_opened_fully": "Completamente abierta",
    "mi_common_closed_fully": "Completamente cerrada",
    "mi_common_setting_success": "Configuración realizada.",
    "mi_common_setting": "Configurando...",
    "mi_common_control_curtain_manually": "Abrir / cerrar cortinas manualmente",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Estilo de cortina",
    "mi_common_curtain_install_guide": "Guía de configuración de ruta",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Abre las cortinas a una posición específica.",
    "mi_curtain_open_to": "Abre las cortinas al {progress}%",
    "mi_curtain_style_double": "Abre la cortina hacia los dos lados.",
    "mi_curtain_style_double_simple": "Abre hacia los dos lados.",
    "mi_curtain_style_left": "Abre la cortina hacia izquierda.",
    "mi_curtain_style_left_simple": "Abre hacia izquierda.",
    "mi_curtain_style_right": "Abre la cortina hacia derecha.",
    "mi_curtain_style_right_simple": "Abre hacia derecha.",
    "mi_common_discard_operation": "¿Abandonar la operación actual?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "No se ha podido guardar, inténtelo de nuevo más tarde.",
    "mi_curtain_common_open": "Abrir",
    "mi_curtain_common_close": "Cerrar",
    "mi_curtain_common_pause": "Pausa",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Presión simple (requerida)",
    "mi_commonHub_must_choose": "Requerido",
    "mi_commonHub_send_phone_msg": "Envía notificaciones al teléfono",
    "mi_commonHub_ring_the_bell": "Timbre de la puerta",
    "mi_commonHub_lazy_clock_close": "Despertador apacible",
    "mi_commonHub_system_ringtone": "Tono de llamada del sistema",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "Agregar",
    "mi_commonHub_guard_alarm_sound_light_settings": "Tonos de alerta y ajustes de luz",
    "mi_commonHub_guard_guardian_countdown": "Cuenta atrás activación de guardia",
    "mi_commonHub_arming_light_length": "Duración del parpadeo de la luz",
    "mi_commonHub_arming_always_flashing": "Sonar siempre",
    "mi_commonHub_arming_not_flashing": "Sin parpadeo",
    "mi_commonHub_linkage_alarm_hint_detail": "Vincular con otras centralitas para enviar una alarma, lo que mejora el nivel de seguridad",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Seleccione fecha",
    "common_month_1": "Enero",
    "common_month_2": "Febrero",
    "common_month_3": "Marzo",
    "common_month_4": "Abril",
    "common_month_5": "Mayo",
    "common_month_6": "Junio",
    "common_month_7": "Julio",
    "common_month_8": "Agosto",
    "common_month_9": "Septiembre",
    "common_month_10": "Octubre",
    "common_month_11": "Noviembre",
    "common_month_12": "Deciembre",
    "common_year_month_1": "Enero s%",
    "common_year_month_2": "Febrero s%",
    "common_year_month_3": "Marzo s%",
    "common_year_month_4": "Abril s%",
    "common_year_month_5": "Mayo s%",
    "common_year_month_6": "Junio s%",
    "common_year_month_7": "Julio s%",
    "common_year_month_8": "Agosto s%",
    "common_year_month_9": "Septiembre s%",
    "common_year_month_10": "Octubre s%",
    "common_year_month_11": "Noviembre s%",
    "common_year_month_12": "Deciembre s%",
    "common_week_mon_short": "Lunes",
    "common_week_tue_short": "Martes",
    "common_week_wed_short": "Miércoles",
    "common_week_thu_short": "Jueves",
    "common_week_fri_short": "Viernes",
    "common_week_sat_short": "Sábado",
    "common_week_sun_short": "Domingo",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Calendario",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "min",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Tiempo de retardo para apagar la luz después de que la persona se haya ido",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Admite actualizaciones automáticas de firmware",
    "mi_common_view_details": "Pulse para ver detalles",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Dispositivos Zigbee secundarios",
    "common_hub_bluetooth_subdevice": "Dispositivos bluetooth secundarios"
  };
  exports.default = es;
},10052,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var fr = {
    "langugeName": "法语",
    "common_setting_title": "Paramètres",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Paramètres de fonction",
    "common_setting_general_setting": "Paramètres généraux",
    "common_setting_device_name": "Nom de l’appareil",
    "common_setting_multiswitch": "Paramètres des boutons",
    "common_setting_device_timeZone": "Paramètres régionaux",
    "common_setting_location_management": "Gestion de la localisation",
    "common_setting_share_device": "Partage sur dispositif",
    "common_setting_ifttt_auto": "Automatisation",
    "common_setting_btGateway": "Passerelle Bluetooth Mesh",
    "common_setting_btGateway_status_read_fail": "Impossible de récupérer le statut de la passerelle du Bluetooth Mesh",
    "common_setting_btGateway_connected": "Appareils Bluetooth connectés",
    "common_setting_firmware_upgrate": "Vérifier les mises à jour du micrologiciel",
    "common_setting_more_setting": "Réglages supplémentaires",
    "common_setting_add_to_desktop": "Ajouter à l’écran d’accueil",
    "common_setting_privacy_agreement": "Contrat d'utilisation et Politique de confidentialité",
    "common_setting_delete_device": "Supprimer l’appareil",
    "common_setting_help_page": "Aide",
    "common_setting_more_seting_security": "Paramètres de sécurité",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "Rétroaction",
    "common_setting_user_agreement": "Accord de licence logicielle et de service",
    "common_setting_privacy_policy": "Politique de confidentialité",
    "common_setting_feature_plug_in": "Version de plug-in",
    "common_setting_homekit_device_add": "Coupler à HomeKit",
    "common_setting_homekit_device_bound": "Lier",
    "common_setting_homekit_device_noBind": "Non consolidé",
    "common_setting_laboratory": "Fonctionnalités du laboratoire",
    "common_setting_protect_delete": "Surveillance de suppression",
    "common_log_title": "Journaux",
    "common_log_today": "Aujourd'hui",
    "common_log_yesterday": "Hier",
    "common_log_no_logs": "Aucun journal",
    "common_log_loading": "Chargement en cours...",
    "common_log_loading_with_dot": "Chargement en cours ...",
    "common_log_logDataHasloaded": "Les journaux ont été chargés",
    "common_log_all_data_has_been_loaded": "Toutes les données ont été chargées",
    "common_log_no_data": "Aucune donnée",
    "common_cancel": "Annuler",
    "common_ok": "OK",
    "common_manufacturer": "Hersteller",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Connexion au réseau impossible",
    "common_tips_battery_low": "Batterie faible",
    "common_tips_iknow": "OK",
    "common_button_done": "Terminé",
    "common_button_delete": "Supprimer",
    "common_button_retry": "Réessayez",
    "common_button_save": "Enregistrer",
    "common_tips_delete_succeed": "Détecté",
    "common_tips_delete_failed": "Échec de la suppression",
    "common_tips_loading_failed": "Échec du chargement",
    "common_tips_request_failed": "Échec de l’envoi de la requête. Vérifiez votre connexion au réseau",
    "common_button_prev": "Face arrière",
    "common_button_next": "Suivant",
    "common_button_changename": "Renommer",
    "common_date_workday": "Du lundi au vendredi",
    "common_date_weekend": "Week-end",
    "common_date_selfdefine": "Personnalisée",
    "common_date_mon": "Lundi",
    "common_date_tues": "Mardi",
    "common_date_wed": "Mercredi",
    "common_date_thur": "Jeudi",
    "common_date_fri": "Vendredi",
    "common_date_sat": "Samedi",
    "common_date_sun": "Dimanche",
    "common_date_day": " Jour",
    "common_date_week": " Semaine",
    "common_date_month": " Mois",
    "common_date_hour": " h",
    "common_date_minute": "min",
    "common_date_second": "s",
    "common_tips_discard_operation": "Annuler l’opération en cours ?",
    "common_tips_setting": "Paramétrage en cours, veuillez patienter…",
    "common_tips_setting_failed": "Échec du paramétrage",
    "common_tips_loading_failed_retry": "Échec du téléchargement, appuyez pour réessayer",
    "common_tips_shared_no_promision": "L’appareil partagé n’a aucune permission",
    "common_electricity": "Statistiques d'électricité",
    "common_power_history": "Enregistrement de l’historique d’alimentation",
    "common_hardware_update_updating": "Mise àjour du micrologiciel en cours, veuillez patienter…",
    "common_hardware_update_default": "Une nouvelle version du micrologiciel est disponible ({version}), mettre à jour maintenant ?",
    "common_hardware_update_isforce": "La version actuelle du micrologiciele de votre appareil est obsolète, veuillez mettre à jour à la plus récente version ({version}).",
    "common_hardware_update": "Mettre à jour maintenant",
    "common_out": "Se déconnecter",
    "common_hardware_checkupdate": "Voir la mise à jour",
    "common_operation_fail": "Échec de l’opération. ",
    "common_repeat_everyday": "Tous les jours",
    "common_repeat_once": "Une fois",
    "common_repeat_tomorrow": "Demain",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "L'appareil sera supprimé de la liste.",
    "common_setting_device_delete_confirm": "Supprimer l'appareil ?",
    "common_voice_mute": "Silencieux",
    "common_voice_high": "Élevée",
    "common_voice_middle": "Moyenne",
    "common_voice_low": "Faible",
    "sub_device_list_title": "Liste dispositif enfant",
    "sub_device_list_header_tips": "Les dispositifs pour enfant suivants sont déjà appariés avec ce centre de commande.",
    "zigbee_sub_device_list_header_tips": "Les dispositifs Zigbee pour enfants ci-dessous sont connectés à cette passerelle",
    "sub_device_list_empty_tips": "Il n’y a pas de dispositifs pour enfant appariés avec ce centre de commande.",
    "zigbee_sub_device_list_empty_tips": "Il n’y a pas de dispositifs pour enfant appariés avec ce centre de commande.",
    "sub_device_list_name_cant_empty": "Le nom de l'appareil ne peut pas être vide",
    "sub_device_list_name_cant_support_emoji": "Ne supporte pas les expressions emoji",
    "sub_device_list_name_cant_support_special_char": "Le nom ne peut pas contenir de symboles spéciaux",
    "sub_device_list_name_cant_more_forty": "Le nom ne peut pas dépasser 40 caractères",
    "sub_device_list_name_cant_same": "Le nom de l'appareil ne peut pas être identique",
    "sub_device_list_device_offline": "L’appareil est hors ligne",
    "sub_device_list_selected": "{XX} élément sélectionné",
    "sub_device_list_delete_multi_device": "Êtes-vous sûr de vouloir supprimer les {XX} appareils sélectionnés?",
    "ifttt_triggle_single_press": "Cliquer",
    "ifttt_triggle_double_press": "Pression prolongée",
    "ifttt_triggle_long_press": "Double pression",
    "ifttt_triggle_shake": "Secouer",
    "ifttt_triggle_someone_moved": "Quelqu'un a bougé",
    "ifttt_triggle_windoor_open": "Fenêtre / porte ouverte",
    "ifttt_triggle_moved_afteronemin": "Déplacé après une minute d'inactivité",
    "ifttt_triggle_detect_vibration": "Vibration détectée",
    "ifttt_triggle_detect_fall": "Chute détectée",
    "ifttt_triggle_detect_tilting": "Sensation d'inclinaison",
    "ifttt_triggle_fire_alert": "Alarme incendie",
    "ifttt_triggle_gas_leakage_alert": "Alerte de fuite de gaz",
    "ifttt_triggle_flood_alert": "Alerte aux inondations",
    "guard_type_basic": "Surveillance de base",
    "guard_type_home": "Surveillance domicile",
    "guard_type_away": "Surveillance domicile distante",
    "guard_type_sleep": "Protège-sommeil",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Veuillez configurer au moins un dispositif enfant comme dispositif de déclenchement pour activer la Surveillance à domicile.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Veuillez configurer au moins un dispositif enfant comme dispositif de déclenchement pour activer le système éloigné de surveillance.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Veuillez configurer au moins un dispositif enfant comme dispositif de déclenchement pour activer le protecteur de sommeil.",
    "ifttt_push_title_triggle_alert_1": "Dans {XX}, {YY} déclenche une alarme",
    "ifttt_push_title_triggle_alert_2": "Dans {XX}, {YY} détecte une personne qui se déclenche pour déclencher une alarme",
    "ifttt_push_title_triggle_alert_magnet": "{XX} est active, la porte ou la fenêtre a été ouverte ou fermée et a déclenché l'alerte.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% est actif, s% a déclenché l'alerte.",
    "ifttt_push_title_triggle_alert_3": "Dans {XX}, {YY} active l'alarme de déclenchement.",
    "ifttt_push_title_triggle_alert_4": "Dans {XX}, {YY} détecte le déplacement",
    "ifttt_push_title_triggle_alert_5": "Dans {XX}, {YY} détecte l’alarme d’inondation.",
    "ifttt_push_title_triggle_alert_6": "Dans {XX}, {YY} a détecté une concentration de gaz supérieure à la norme",
    "ifttt_push_title_triggle_alert_7": "Dans {XX}, {YY} a détecté de la fumée",
    "common_ifttt_scene_execute_result_fail": "L'exécution a échoué",
    "common_ifttt_scene_execute_result_unknow_error": "Erreur anormale",
    "common_ifttt_scene_execute_result_time_out": "Délai de mise en œuvre",
    "common_ifttt_scene_execute_result_camera_sleep": "La caméra dort",
    "common_ifttt_device_offline": "(hors ligne)",
    "timersetting_on": "Heure de début",
    "timersetting_off": "Heure de fin",
    "timersetting_empty": "Non configuré",
    "timersetting_perio": "Actif pendant",
    "common_start": "Début",
    "common_end": "Fin",
    "common_color": "Couleur",
    "common_open": "Activer",
    "common_scene_name_lm_scene_1_1": "Lorsque alerte, quelqu'un a passé l'alarme",
    "common_scene_name_lm_scene_1_2": "Alarme porte et fenêtre ouverte lors de l'alerte",
    "common_scene_name_lm_scene_1_3": "Lorsque l'alarme est activée, le commutateur sans fil appuie sur l'alarme.",
    "common_scene_name_lm_scene_1_4": "Lors de l'alerte, le cube Rubik est déclenché pendant un certain temps.",
    "common_scene_name_lm_scene_1_5": "Lorsque alerte, les autocollants statiques et statiques sont déclenchés pendant deux minutes et l'alarme est déclenchée.",
    "common_scene_name_lm_scene_2_1": "Quelqu'un est passé, la veilleuse était allumée",
    "common_scene_name_lm_scene_3_1": "Interrupteur sans fil appuie sur la sonnette",
    "common_scene_name_lm_scene_3_2": "La sonnette retentit lorsqu’une porte ou une fenêtre est ouverte",
    "common_scene_name_lm_scene_3_3": "Quelqu'un a passé la sonnerie",
    "common_scene_name_lm_scene_4_1": "Éteindre le réveil lorsque quelqu’un passe à proximité",
    "common_scene_name_lm_scene_4_2": "Éteignez l’alarme du réveil lorsqu’une porte ou une fenêtre est ouverte",
    "common_scene_name_lm_scene_4_3": "Interrupteur sans fil appuie sur l'alarme",
    "common_scene_name_lm_scene_5_1": "La détection de fumée déclenchera l'alerte de l'assistant.",
    "common_scene_name_lm_scene_5_2": "La détection de gaz déclenchera l'alerte de l'assistant.",
    "common_scene_name_lm_scene_5_3": "La détection de fuite d'eau déclenchera l'alerte de l'assistant.",
    "common_close": "Arrêt",
    "common_state_closed": "Désactivé",
    "sensor_set_ifttt_config_success": "Paramétré avec succès",
    "common_automation_configuring": "Configuration de l'automatisation du package, veuillez patienter ...",
    "sensor_set_ifttt_config_fail": "La configuration a échoué",
    "sensor_set_ifttt_config_fail_tip": "1.The Hub must be connected to Wi-Fi \n2.The phone must be connected to Wi-Fi \n3.Make sure Wi-Fi works properly",
    "mi_linuxHub_guard_guard_timer": "Guard schedule",
    "mi_linuxHub_timer_light_name": "Minuterie de lanterne",
    "mi_linuxHub_lazy_clock_name": "Réveil",
    "sensor_set_ifttt_scene_name_1": "Rappel d'ouverture de porte",
    "sensor_set_ifttt_scene_name_2": "Cliquez sur le commutateur sans fil pour allumer / éteindre la veilleuse",
    "sensor_set_ifttt_scene_name_3": "Double-cliquez sur l'alerte de commutateur sans fil",
    "sensor_set_ifttt_scene_name_4": "Quelqu'un est passé, la veilleuse était allumée",
    "sensor_set_ifttt_scene_name_5": "2 minutes de veilleuse éteinte",
    "sensor_set_ifttt_scene_name_6": "Quelqu'un bouge la veilleuse",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Non fermé plus d'une minute après l'ouverture",
    "sensor_set_ifttt_triggle_name_2": "2 minutes sans personnel",
    "sensor_set_ifttt_triggle_name_3": "Jouer la sonnerie spécifiée",
    "sensor_set_ifttt_triggle_name_4": "Veilleuse marche / arrêt",
    "sensor_set_ifttt_triggle_name_5": "Veilleuse à induction",
    "sensor_set_ifttt_triggle_name_6": "Éteindre la veilleuse",
    "sensor_set_ifttt_triggle_name_7": "Veilleuse",
    "sensor_set_ifttt_triggle_name_8": "Alerte marche / arrêt",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Une partie des tâches est terminée avec succès",
    "common_short_date_mon": "Lun",
    "common_short_date_tues": "Mar",
    "common_short_date_wed": "Mer",
    "common_short_date_thur": "Jeu",
    "common_short_date_fri": "Ven",
    "common_short_date_sat": "Sam",
    "common_short_date_sun": "Dim",
    "common_repeat_timer_title": "Répéter l'option",
    "common_repeat_self_timer_title": "Répétition personnalisée",
    "common_on": "Marche",
    "common_off": "Arrêt",
    "common_timer": "Minuterie",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Conto alla rovescia",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Aujourd'hui",
    "common_plug_month_elec": "Mois",
    "common_plug_current_power": "Actuel",
    "mi_comboHub_mainPage_guard": "Surveillance",
    "mi_comboHub_mainPage_guard_base": "De base",
    "mi_comboHub_mainPage_guard_home": "À domicile",
    "mi_comboHub_mainPage_guard_away": "Domicile distante",
    "mi_comboHub_mainPage_guard_sleep": "Veille",
    "common_comboHub_triggle_device_alert": "Alerte",
    "common_comboHub_triggle_device_opened_guard": "(A été activé pour la surveillance {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Peut uniquement être utilisé pour la surveillance de base.)",
    "common_comboHub_triggle_device_opened_basic": "(A été activé pour la surveillance de base.)",
    "common_setting_homekit_device_desc": "Le dispositif peut être configuré et utilisé dans l'application Apple Home.",
    "common_ifttt_triggleName_switch": "L'alerte est déclenchée lorsque le commutateur change de statut.",
    "common_ifttt_triggleName_vibration": "L'alerte est déclenchée lorsque le statut change.",
    "common_ifttt_triggleName_cube": "L'alerte est déclenchée lorsque le dispositif est déplacé après avoir été inactif pendant 1 minute.",
    "common_ifttt_triggleName_magnet": "L'alerte est déclenchée lorsque change le statut du capteur de la porte ou de la fenêtre.",
    "common_ifttt_triggleName_motion": "Quelqu'un s'est déplacé et a déclenché l'alerte.",
    "common_timer_light_timer_light_period": "Période",
    "common_timer_light_timer_on": "Chronométré le",
    "common_timer_light_timer_off": "Chronométré",
    "common_timer_light_timer_time_after": "Heure de début après l'heure de fin",
    "common_lumi_sensor_setting_battery": "Batterie",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Guide de remplacement de la batterie",
    "common_lumi_sensor_battery_guide_description": "Veuillez retirer le couvercle de la batterie et remplacer la batterie comme indiqué.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Batterie faible, veuillez remplacer la batterie",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Dispositif de déclenchement d'alarme",
    "mi_comboHub_triggleDevices_deleting": "Suppression en cours…",
    "mi_comboHub_triggleSubDevices_setting": "Configuration en cours…",
    "mi_comboHub_triggle_device_header_title_1": "Les appareils ne pouvant être activés",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Lorsqu'il existe des appareils connecté au concentrateur qui peuvent surveiller en permanence l'environnement, tels que des détecteurs de fumée et des détecteurs de gaz, vous pouvez les définir comme dispositifs de déclenchement du protecteur de base. Une fois activé, le gardien de base surveillera votre maison 24h/7.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "A été activé comme dispositif de déclenchement pour une surveillance domicile, surveillance domicile distante ou protège-sommeil. Il ne peut être utilisé comme surveillance de base.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Après avoir configuré le dispositif de déclenchement, vous pouvez activer la surveillance domicile.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "A été activé comme dispositif de déclenchement pour la surveillance de base. Il ne peut pas être utilisé pour une surveillance domicile.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Après avoir configuré le dispositif de déclenchement, vous pouvez activer la surveillance domicile distante.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "A été activé comme dispositif de déclenchement pour la surveillance de base. Il ne peut pas être utilisé pour une surveillance domicile distante.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Après avoir configuré le dispositif de déclenchement, vous pouvez activer le protège-sommeil.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "A été activé comme dispositif de déclenchement pour la surveillance de base. Il ne peut pas être utilisé pour une surveillance en veille.",
    "mi_comboHub_triggle_device_empty_tip": "Il n’y a pas de dispositifs appariés avec ce centre de commande qui puissent être utilisés pour déclencher une alerte, telle qu’un détecteur de mouvement, un détecteur de fenêtre et de porte ou un commutateur sans fil.",
    "mi_comboHub_triggle_device_go_to_bug": "Achat",
    "mi_commonHub_setting_nightlight_tomorrow": "Jour suivant",
    "mi_commonHub_setting_nightlight_allday": "Toute la journée",
    "mi_ifttt_launch": "Au cas où une quelconque condition est satisfaite",
    "mi_ifttt_action": "Alors",
    "mi_commonHub_nightlight_open": "Allumer la veilleuse",
    "mi_commonHub_nightlight_motion_limit": "Ne peut sélectionner que 9 capteurs du corps humain",
    "mi_commonHub_nightlight_delay_close_min": "Éteindre la veilleuse dans {value} min",
    "mi_commonHub_go_back_title": "Quitter",
    "mi_commonHub_go_back_content": "Renoncer aux changements et quitter maintenant ?",
    "mi_commonHub_setting_nightlight": "Éclairage nocturne inductif",
    "mi_commonHub_nightlight_commont": "Lorsque {value} se trouve dans un environnement sombre",
    "mi_commonHub_nightlight_timer": "Période d'induction",
    "mi_commonHub_linkage_alarm_number_ten": "Impossible de sélectionner jusqu'à 10 alarmes de passerelle",
    "common_offline": "hors ligne",
    "mi_commonHub_linkage_alarm_footer_text": "Lorsque la fonction de liaison du centre de commande est activée et qu’un centre de commande est déclenché, la sonnerie de l’alerte et le clignotement lumineux de tous les centres de commande seront déclenchés.",
    "mi_commonHub_linkage_alarm": "Alerte de couplage",
    "mi_commonHub_linkage_alarm_dis": "Alerte de couplage annulée",
    "mi_commonHub_ring_doorbell": "Bruit de la sonnette",
    "mi_commonHub_ring_knocking": "Bruit de coups à la porte",
    "mi_commonHub_ring_funny": "Ton amusant",
    "mi_commonHub_ring_alarm_clock": "Son du réveil",
    "mi_commonHub_ring_alarm_music": "Sonnerie d’alerte",
    "mi_commonHub_ring_policecar1": "Son de voiture de police 1",
    "mi_commonHub_ring_policecar2": "Son de voiture de police 2",
    "mi_commonHub_ring_safety_accident": "Alerte d’incident de sécurité",
    "mi_commonHub_ring_countdown": "Missile Countdown",
    "mi_commonHub_ring_ghost": "Pleurs de fantôme",
    "mi_commonHub_ring_gun": "Tir d’arme à feu",
    "mi_commonHub_ring_battle": "Bruit de bataille",
    "mi_commonHub_ring_airraid": "Alarme raid aérien",
    "mi_commonHub_ring_dog": "Aboiement",
    "mi_commonHub_ring_mimix": "Mi Mix",
    "mi_commonHub_ring_enthusuastic": "Enthusiastic",
    "mi_commonHub_ring_guitarclassic": "Guitar Classic",
    "mi_commonHub_ring_iceworldpiano": "Ice World Piano",
    "mi_commonHub_ring_leisuretime": "Leisure Time",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "Morning Stream Llet",
    "mi_commonHub_ring_musicbox": "Music Box",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Mémoire de panne d’alimentation",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Sonner sans arrêt",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}s",
    "mi_comboHub_guardSetting": "Paramètres de surveillance",
    "mi_comboHub_guardSetting_delayTime_immediately": "Immédiatement en vigueur",
    "mi_linuxHub_arming_ring": "Son de l’alerte",
    "mi_comboHub_guardSetting_alarmDuration": "Durée de l'alerte",
    "mi_comboHub_guardSetting_alarmVolume": "Volume tonalité d'alerte",
    "mi_comboHub_guardSetting_delayTime": "Compte à rebours de l’activation de la surveillance",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Sonnette",
    "mi_commonHub_setting_volume_doorbell": "Volume de la sonnette",
    "mi_commonHub_setting_push": "Notification par téléphone",
    "mi_commonHub_setting_alarmclock": "Réveil",
    "mi_commonHub_guard_go_config": "Configurer maintenant",
    "mi_commonHub_numbers": "Pcs",
    "mi_commonHub_lazy_clock_list": "Liste de réveil",
    "mi_commonHub_lazy_clock_close_way": "Réveil désactivé",
    "mi_commonHub_timersetting_repeat": "Répéter",
    "mi_commonHub_setting_bell": "Sonnerie",
    "mi_commonHub_setting_volume": "Volume",
    "mi_commonHub_add_lazyclock": "Ajouter une alarme",
    "mi_commonHub_lazy_clock_delete": "Supprimer le chronomètre sélectionné ?",
    "mi_commonHub_sure_delete": "Êtes-vous sûr de vouloir supprimer l'élément sélectionné?",
    "mi_commonHub_lazy_clock_list_empty": "Aucun réveil ajouté",
    "mi_commonHub_lazy_clock_name": "Réveil",
    "mi_commonHub_play_specific_tone": "Jouer une sonnerie spécifique",
    "mi_commonHub_tone_volume": "Volume de la sonnerie",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Éteindre l’indicateur",
    "mi_common_close_indicator_light_tips": "Éteindre le voyant de 21 h 00 à 09 h 00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Effacer d'itinéraire",
    "mi_common_clear_position_comfirm_tip": "Effacer l'itinéraire  actuel du rideau maintenant?",
    "mi_common_clear_position_success": "Effacé avec succès",
    "mi_common_adjust_direction": "Ajuster le sens d'ouverture / fermeture du rideau",
    "mi_common_adjust": "Ajuster",
    "mi_common_adjust_success": "Ajusté avec succès",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Le champ « Nom » ne peut pas rester vide",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Ouvrir à {progress}%",
    "mi_common_opened_fully": "Totalement  ouvert",
    "mi_common_closed_fully": "Totalement  fermé",
    "mi_common_setting_success": "Configuration réussie",
    "mi_common_setting": "Configuration en cours...",
    "mi_common_control_curtain_manually": "Ouvrir/fermer manuellement les rideaux",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Modèle de rideau ",
    "mi_common_curtain_install_guide": "Guide de réglage d'itinéraire",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Ouvrir les rideaux dans une position spécifique",
    "mi_curtain_open_to": "Ouvrir  les rideaux à {progress}%",
    "mi_curtain_style_double": "Ouvrez les deux rideaux",
    "mi_curtain_style_double_simple": "Ouvrir les  deux",
    "mi_curtain_style_left": "Ouvrir le rideau vers la gauche",
    "mi_curtain_style_left_simple": "Ouvrir vers la gauche",
    "mi_curtain_style_right": "Ouvrir le rideau vers la droite",
    "mi_curtain_style_right_simple": "Ouvrir vers la droite",
    "mi_common_discard_operation": "Annuler l'opération en cours?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Enregistrement impossible, veuillez réessayer.",
    "mi_curtain_common_open": "Ouvrir ",
    "mi_curtain_common_close": "Fermer",
    "mi_curtain_common_pause": "Pause",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Pression unique (nécessaire)",
    "mi_commonHub_must_choose": "Requis",
    "mi_commonHub_send_phone_msg": "Envoyer des notifications au téléphone",
    "mi_commonHub_ring_the_bell": "Sonner la sonnette",
    "mi_commonHub_lazy_clock_close": "Désactiver le réveil",
    "mi_commonHub_system_ringtone": "Sonnerie système",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "Ajouter",
    "mi_commonHub_guard_alarm_sound_light_settings": "Paramètres de la lampe & des tonalités d'alerte",
    "mi_commonHub_guard_guardian_countdown": "Compte à rebours de l’activation de la surveillance",
    "mi_commonHub_arming_light_length": "Durée de clignotement de la lampe",
    "mi_commonHub_arming_always_flashing": "Toujours sonner",
    "mi_commonHub_arming_not_flashing": "Pas de clignotement",
    "mi_commonHub_linkage_alarm_hint_detail": "Liens et alertes avec d'autres Hub, améliorer le niveau de sécurité",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Choisir la date",
    "common_month_1": "Janvier ",
    "common_month_2": "Février ",
    "common_month_3": "Mars ",
    "common_month_4": "Avril ",
    "common_month_5": "Mai ",
    "common_month_6": "Juin",
    "common_month_7": "Juillet",
    "common_month_8": "Août ",
    "common_month_9": "Septembre ",
    "common_month_10": "Octobre ",
    "common_month_11": "Novembre ",
    "common_month_12": "Décembre ",
    "common_year_month_1": "Janvier  s% ",
    "common_year_month_2": "Février  s% ",
    "common_year_month_3": "Mars  s% ",
    "common_year_month_4": "Avril  s% ",
    "common_year_month_5": "Mai  s%",
    "common_year_month_6": "Juin s%",
    "common_year_month_7": "Juillet s%",
    "common_year_month_8": "Août  s%",
    "common_year_month_9": "Septembre s%",
    "common_year_month_10": "Octobre s%",
    "common_year_month_11": "Novembre  s%",
    "common_year_month_12": "Décembre s%",
    "common_week_mon_short": "Lundi",
    "common_week_tue_short": "Mardi",
    "common_week_wed_short": "Mercredi",
    "common_week_thu_short": "Jeudi",
    "common_week_fri_short": "Vendredi",
    "common_week_sat_short": "Samedi",
    "common_week_sun_short": "Dimanche",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Calendrier",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "min",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Délai de mise hors tension des éclairages après le départ des personnes",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Prend en charge les mises à jour automatiques du firmware",
    "mi_common_view_details": "Appuyez pour afficher les détails",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Dispositif Zigbee pour enfants",
    "common_hub_bluetooth_subdevice": "Dispositifs Bluetooth pour enfants"
  };
  exports.default = fr;
},10055,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var id = {
    "langugeName": "印度尼西亚语",
    "common_setting_title": "Pengaturan",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Pengaturan fungsi",
    "common_setting_general_setting": "Pengaturan umum",
    "common_setting_device_name": "Nama perangkat",
    "common_setting_multiswitch": "Pengaturan tombol",
    "common_setting_device_timeZone": "Pengaturan daerah",
    "common_setting_location_management": "Manajemen Lokasi",
    "common_setting_share_device": "Perangkat sedang berbagi",
    "common_setting_ifttt_auto": "Otomatisasi",
    "common_setting_btGateway": "Gateway Bluetooth Mesh",
    "common_setting_btGateway_status_read_fail": "Tidak dapat mengambil status gateway Bluetooth Mesh",
    "common_setting_btGateway_connected": "Perangkat Bluetooth terhubung",
    "common_setting_firmware_upgrate": "Periksa pembaruan firmware",
    "common_setting_more_setting": "Pengaturan tambahan",
    "common_setting_add_to_desktop": "Tambahkan ke layar beranda",
    "common_setting_privacy_agreement": "Perjanjian Pengguna & Kebijakan Privasi",
    "common_setting_delete_device": "Hapus perangkat",
    "common_setting_help_page": "Bantuan",
    "common_setting_more_seting_security": "Pengaturan keamanan",
    "common_setting_more_seting_faq": "Pertanyaan umum (FAQ)",
    "common_setting_more_seting_isssues": "Umpan Balik",
    "common_setting_user_agreement": "Perjanjian Layanan dan Lisensi Perangkat Lunak",
    "common_setting_privacy_policy": "Kebijakan Privasi",
    "common_setting_feature_plug_in": "Versi Plug-in",
    "common_setting_homekit_device_add": "Pasangkan dengan HomeKit",
    "common_setting_homekit_device_bound": "Bind",
    "common_setting_homekit_device_noBind": "Tidak terikat",
    "common_setting_laboratory": "Fitur lab",
    "common_setting_protect_delete": "Penghapusan perlindungan",
    "common_log_title": "Catatan",
    "common_log_today": "Hari ini",
    "common_log_yesterday": "Kemarin",
    "common_log_no_logs": "Tidak ada catatan",
    "common_log_loading": "Memuat",
    "common_log_loading_with_dot": "Memuat...",
    "common_log_logDataHasloaded": "Catatan Log telah dimuat sepenuhnya",
    "common_log_all_data_has_been_loaded": "Semua data telah dimuat",
    "common_log_no_data": "Tidak ada data",
    "common_cancel": "Batalkan",
    "common_ok": "Oke",
    "common_manufacturer": "Diproduksi oleh",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Tidak bisa tersambung ke jaringan",
    "common_tips_battery_low": "Baterai lemah",
    "common_tips_iknow": "Oke",
    "common_button_done": "Selesai",
    "common_button_delete": "Hapus",
    "common_button_retry": "Coba lagi",
    "common_button_save": "Simpan",
    "common_tips_delete_succeed": "Berhasil menghapus",
    "common_tips_delete_failed": "Gagal menghapus",
    "common_tips_loading_failed": "Tidak dapat memuat",
    "common_tips_request_failed": "Permintaan gagal. Periksa jaringan Anda",
    "common_button_prev": "Kembali",
    "common_button_next": "Selanjutnya",
    "common_button_changename": "Ubah nama",
    "common_date_workday": "Senin sampai Jumat",
    "common_date_weekend": "Akhir pekan",
    "common_date_selfdefine": "Kustom",
    "common_date_mon": "Senin",
    "common_date_tues": "Selasa",
    "common_date_wed": "Rabu",
    "common_date_thur": "Kamis",
    "common_date_fri": "Jumat",
    "common_date_sat": "Sabtu",
    "common_date_sun": "Minggu",
    "common_date_day": " Hari",
    "common_date_week": " Minggu",
    "common_date_month": " Bulan",
    "common_date_hour": " j",
    "common_date_minute": "mnt",
    "common_date_second": "dtk",
    "common_tips_discard_operation": "Tutup operasi saat ini?",
    "common_tips_setting": "Setting, please wait…",
    "common_tips_setting_failed": "Failed to set",
    "common_tips_loading_failed_retry": "Tidak bisa memuat, ketuk untuk mencoba lagi",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "Statistik kelistrikan",
    "common_power_history": "Catatan riwayat daya",
    "common_hardware_update_updating": "Memperbarui firmware, harap tunggu…",
    "common_hardware_update_default": "Tersedia versi firmware yang baru, ({version}), perbarui sekarang?",
    "common_hardware_update_isforce": "Versi firmware perangkat Anda saat ini sudah lama, harap perbarui ke versi baru, ({version}).",
    "common_hardware_update": "Perbarui sekarang",
    "common_out": "Keluar",
    "common_hardware_checkupdate": "Lihat pembaruan",
    "common_operation_fail": "Operasi gagal",
    "common_repeat_everyday": "Setiap hari",
    "common_repeat_once": "Satu kali",
    "common_repeat_tomorrow": "Besok",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "Perangkat akan dihapus dari daftar.",
    "common_setting_device_delete_confirm": "Hapus perangkat?",
    "common_voice_mute": "Sunyi",
    "common_voice_high": "Tinggi",
    "common_voice_middle": "Sedang",
    "common_voice_low": "Rendah",
    "sub_device_list_title": "Daftar perangkat turunan",
    "sub_device_list_header_tips": "Perangkat turunan berikut sudah dipasangkan dengan hub ini.",
    "zigbee_sub_device_list_header_tips": "Perangkat turunan Zigbee berikut dihubungkan ke gateway ini",
    "sub_device_list_empty_tips": "Tidak ada perangkat turunan terpasang dengan hub kontrol ini.",
    "zigbee_sub_device_list_empty_tips": "Tidak ada perangkat turunan terpasang dengan hub kontrol ini.",
    "sub_device_list_name_cant_empty": "Nama perangkat tidak boleh kosong",
    "sub_device_list_name_cant_support_emoji": "Tidak mendukung ekspresi emoji",
    "sub_device_list_name_cant_support_special_char": "Nama tidak boleh mengandung simbol khusus",
    "sub_device_list_name_cant_more_forty": "Nama tidak boleh melebihi 40 karakter",
    "sub_device_list_name_cant_same": "Nama perangkat tidak boleh sama",
    "sub_device_list_device_offline": "Perangkat offline",
    "sub_device_list_selected": "{XX} item dipilih",
    "sub_device_list_delete_multi_device": "Apakah Anda yakin akan menghapus perangkat {XX} yang dipilih?",
    "ifttt_triggle_single_press": "Klik",
    "ifttt_triggle_double_press": "Tekan dan tahan",
    "ifttt_triggle_long_press": "Klik dua kali",
    "ifttt_triggle_shake": "Guncangkan",
    "ifttt_triggle_someone_moved": "Seseorang bergerak",
    "ifttt_triggle_windoor_open": "Jendela/pintu terbuka",
    "ifttt_triggle_moved_afteronemin": "Pindah setelah satu menit tidak aktif",
    "ifttt_triggle_detect_vibration": "Terdeteksi getaran",
    "ifttt_triggle_detect_fall": "Terdeteksi jatuh",
    "ifttt_triggle_detect_tilting": "Merasa miring",
    "ifttt_triggle_fire_alert": "Alarm kebakaran",
    "ifttt_triggle_gas_leakage_alert": "Peringatan kebocoran gas",
    "ifttt_triggle_flood_alert": "Peringatan makanan",
    "guard_type_basic": "Penjaga dasar",
    "guard_type_home": "Penjaga di rumah",
    "guard_type_away": "Penjaga jauh-dari-rumah",
    "guard_type_sleep": "Penjaga tidur",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Harap atur paling tidak satu perangkat turunan sebagai perangkat pemicu untuk mengaktifkan mode penjaga di rumah.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Harap atur paling tidak satu perangkat turunan sebagai perangkat pemicu untuk mengaktifkan mode penjaga jauh-dari-rumah.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Harap atur paling tidak satu perangkat turunan sebagai perangkat pemicu untuk mengaktifkan mode penjaga tidur.",
    "ifttt_push_title_triggle_alert_1": "Di {XX}, {YY} memicu alarm",
    "ifttt_push_title_triggle_alert_2": "Dalam {XX}, {YY} merasakan seseorang bergerak untuk memicu alarm",
    "ifttt_push_title_triggle_alert_magnet": "{XX} aktif, pintu atau jendela terbuka atau tertutup dan memicu peringatan.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% aktif, s% memicu peringatan.",
    "ifttt_push_title_triggle_alert_3": "Di {XX}, {YY} menyalakan alarm pemicu",
    "ifttt_push_title_triggle_alert_4": "Dalam {XX}, {YY} indra dipindahkan",
    "ifttt_push_title_triggle_alert_5": "Dalam {XX}, {YY} merasakan alarm banjir",
    "ifttt_push_title_triggle_alert_6": "Pada {XX}, {YY} mendeteksi konsentrasi gas yang melebihi standar",
    "ifttt_push_title_triggle_alert_7": "Dalam {XX}, {YY} mendeteksi asap",
    "common_ifttt_scene_execute_result_fail": "Eksekusi gagal",
    "common_ifttt_scene_execute_result_unknow_error": "Kesalahan tidak normal",
    "common_ifttt_scene_execute_result_time_out": "Batas waktu implementasi",
    "common_ifttt_scene_execute_result_camera_sleep": "Kamera sedang tidur",
    "common_ifttt_device_offline": "(offline)",
    "timersetting_on": "Waktu mulai",
    "timersetting_off": "Waktu selesai",
    "timersetting_empty": "Tidak diatur",
    "timersetting_perio": "Aktif selama",
    "common_start": "Mulai",
    "common_end": "Akhir",
    "common_color": "Warna",
    "common_open": "Aktifkan",
    "common_scene_name_lm_scene_1_1": "Saat siaga, seseorang melewati alarm",
    "common_scene_name_lm_scene_1_2": "Alarm pintu dan jendela terbuka saat memperingatkan",
    "common_scene_name_lm_scene_1_3": "Ketika alarm menyala, saklar nirkabel menekan alarm.",
    "common_scene_name_lm_scene_1_4": "Saat memberi peringatan, Rubik's Cube dipicu untuk sementara waktu.",
    "common_scene_name_lm_scene_1_5": "Ketika peringatan, stiker statis dan statis dipicu selama dua menit dan alarm dipicu.",
    "common_scene_name_lm_scene_2_1": "Seseorang lewat, lampu malam menyala",
    "common_scene_name_lm_scene_3_1": "Sakelar nirkabel menekan bel pintu",
    "common_scene_name_lm_scene_3_2": "Bel pintu berdering saat pintu/jendela dibuka",
    "common_scene_name_lm_scene_3_3": "Seseorang melewati bel dering",
    "common_scene_name_lm_scene_4_1": "Matikan jam alarm saat seseorang lewat",
    "common_scene_name_lm_scene_4_2": "Matikan jam alarm saat pintu/jendela dibuka",
    "common_scene_name_lm_scene_4_3": "Sakelar nirkabel menekan alarm",
    "common_scene_name_lm_scene_5_1": "Deteksi asap akan mematikan peringatan hub.",
    "common_scene_name_lm_scene_5_2": "Deteksi gas akan mematikan peringatan hub.",
    "common_scene_name_lm_scene_5_3": "Deteksi kebocoran air akan mematikan peringatan hub.",
    "common_close": "Mati",
    "common_state_closed": "Nonaktif",
    "sensor_set_ifttt_config_success": "Konfigurasi yang berhasil",
    "common_automation_configuring": "Mengkonfigurasi otomatisasi paket, harap tunggu ...",
    "sensor_set_ifttt_config_fail": "Konfigurasi gagal",
    "sensor_set_ifttt_config_fail_tip": "1. Anda harus menghubungkan gateway ke wifi \n2. Anda harus menghubungkan ponsel Anda ke wifi \n3. Pastikan wifi itu normal.",
    "mi_linuxHub_guard_guard_timer": "Waktu pelindung",
    "mi_linuxHub_timer_light_name": "Timer lentera",
    "mi_linuxHub_lazy_clock_name": "Jam alarm",
    "sensor_set_ifttt_scene_name_1": "Pengingat pembukaan pintu",
    "sensor_set_ifttt_scene_name_2": "Klik sakelar nirkabel untuk menyalakan / mematikan lampu malam",
    "sensor_set_ifttt_scene_name_3": "Klik dua kali pada sakelar sakelar switch nirkabel",
    "sensor_set_ifttt_scene_name_4": "Seseorang lewat, lampu malam menyala",
    "sensor_set_ifttt_scene_name_5": "2 menit mati malam tanpa awak",
    "sensor_set_ifttt_scene_name_6": "Seseorang yang menyalakan lampu malam",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Tidak ditutup setelah lebih dari 1 menit setelah pembukaan",
    "sensor_set_ifttt_triggle_name_2": "2 menit tanpa awak",
    "sensor_set_ifttt_triggle_name_3": "Mainkan nada dering yang ditentukan",
    "sensor_set_ifttt_triggle_name_4": "Nyalakan / matikan lampu malam",
    "sensor_set_ifttt_triggle_name_5": "Lampu malam induksi",
    "sensor_set_ifttt_triggle_name_6": "Matikan lampu malam",
    "sensor_set_ifttt_triggle_name_7": "Cahaya malam",
    "sensor_set_ifttt_triggle_name_8": "Peringatan hidup / mati",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Bagian tugas berhasil diselesaikan",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "ทำซ้ำตัวเลือก",
    "common_repeat_self_timer_title": "ทำซ้ำที่กำหนดเอง",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-การนับถอยหลัง",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " Celsius",
    "common_degree_centigrade_str": "{value} Celsius",
    "common_plug_today_elec": "Hari ini",
    "common_plug_month_elec": "Bulan",
    "common_plug_current_power": "Saat ini",
    "mi_comboHub_mainPage_guard": "Penjaga",
    "mi_comboHub_mainPage_guard_base": "Dasar",
    "mi_comboHub_mainPage_guard_home": "Di rumah",
    "mi_comboHub_mainPage_guard_away": "Jauh-dari-rumah",
    "mi_comboHub_mainPage_guard_sleep": "Tidur",
    "common_comboHub_triggle_device_alert": "Peringatan",
    "common_comboHub_triggle_device_opened_guard": "(Telah diaktifkan untuk penjaga {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Hanya dapat digunakan untuk penjaga dasar.)",
    "common_comboHub_triggle_device_opened_basic": "(Telah diaktifkan untuk penjaga dasar.)",
    "common_setting_homekit_device_desc": "Perangkat dapat dikonfigurasikan dan digunakan di aplikasi Apple Home.",
    "common_ifttt_triggleName_switch": "Peringatan dipicu saat status tombol berubah.",
    "common_ifttt_triggleName_vibration": "Peringatan dipicu saat status berubah.",
    "common_ifttt_triggleName_cube": "Peringatan terpicu saat perangkat digerakkan setelah tidak aktif selama 1 menit.",
    "common_ifttt_triggleName_magnet": "Peringatan dipicu saat status sensor pintu atau jendela berubah.",
    "common_ifttt_triggleName_motion": "Seseorang bergerak dan memicu peringatan.",
    "common_timer_light_timer_light_period": "Periode waktu",
    "common_timer_light_timer_on": "Tepat waktu",
    "common_timer_light_timer_off": "Batas waktu",
    "common_timer_light_timer_time_after": "Mulai waktu setelah waktu akhir",
    "common_lumi_sensor_setting_battery": "Baterai",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Panduan penggantian baterai",
    "common_lumi_sensor_battery_guide_description": "Harap lepaskan penutup baterai, lalu ganti baterai sebagaimana ditunjukkan.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Baterai rendah, silahkan ganti baterai",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Perangkat pemicu alarm",
    "mi_comboHub_triggleDevices_deleting": "Menghapus...",
    "mi_comboHub_triggleSubDevices_setting": "Mengonfigurasi…",
    "mi_comboHub_triggle_device_header_title_1": "Perangkat yang tidak dapat diaktifkan",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Saat ada perangkat yang terus-menerus memantau lingkungan tersambung ke hub, seperti detektor asap dan detektor gas, Anda dapat mengaturnya sebagai perangkat pemicu penjagaan dasar. Setelah diaktifkan, penjaga dasar akan memantau rumah Anda 24/7.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Jika diaktifkan sebagai perangkat pemicu untuk penjaga di-rumah, penjaga jauh-dari-rumah, atau penjaga tidur, ini tidak dapat digunakan sebagai penjaga dasar.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Setelah mengatur perangkat pemicu, Anda dapat mengaktifkan penjaga rumah.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Jika diaktifkan sebagai perangkat pemicu untuk penjaga dasar, ini tidak dapat digunakan untuk penjaga di-rumah.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Setelah mengatur perangkat pemicu, Anda dapat mengaktifkan penjaga jauh-dari-rumah.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Jika diaktifkan sebagai perangkat pemicu untuk penjaga dasar, ini tidak dapat digunakan untuk penjaga jauh-dari-rumah.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Setelah mengatur perangkat pemicu, Anda dapat mengaktifkan penjaga tidur.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Jika diaktifkan sebagai perangkat pemicu untuk penjaga dasar, ini tidak dapat digunakan sebagai penjaga tidur.",
    "mi_comboHub_triggle_device_empty_tip": "Tidak ada perangkat terpasang dengan hub kontrol ini yang dapat digunakan untuk memicu peringatan, seperti sensor gerak, sensor jendela dan pintu, atau tombol nirkabel.",
    "mi_comboHub_triggle_device_go_to_bug": "Beli",
    "mi_commonHub_setting_nightlight_tomorrow": "Hari berikutnya",
    "mi_commonHub_setting_nightlight_allday": "Sepanjang hari",
    "mi_ifttt_launch": "Jika kondisi apa pun terpenuhi",
    "mi_ifttt_action": "Kemudian",
    "mi_commonHub_nightlight_open": "Nyalakan lampu malam",
    "mi_commonHub_nightlight_motion_limit": "Hanya dapat memilih hingga 9 sensor tubuh manusia",
    "mi_commonHub_nightlight_delay_close_min": "Matikan lampu malam dalam {value} menit",
    "mi_commonHub_go_back_title": "Keluar",
    "mi_commonHub_go_back_content": "Buang perubahan, lalu keluar sekarang?",
    "mi_commonHub_setting_nightlight": "Lampu malam otomatis",
    "mi_commonHub_nightlight_commont": "Saat {value} adalah lingkungan gelap",
    "mi_commonHub_nightlight_timer": "Periode induksi",
    "mi_commonHub_linkage_alarm_number_ten": "Hanya dapat memilih hingga 10 alarm gateway",
    "common_offline": "offline",
    "mi_commonHub_linkage_alarm_footer_text": "Saat fungsi tautan peringatan hub kontrol diaktifkan, dan hub kontrol dipicu, nada dering peringatan dan lampu berkedip dari semua hub kontrol akan dipicu.",
    "mi_commonHub_linkage_alarm": "Alarm terkait",
    "mi_commonHub_linkage_alarm_dis": "Alarm terkait dibatalkan",
    "mi_commonHub_ring_doorbell": "Dering bel pintu",
    "mi_commonHub_ring_knocking": "Suara ketukan pintu",
    "mi_commonHub_ring_funny": "Nada lucu",
    "mi_commonHub_ring_alarm_clock": "Nada jam alarm",
    "mi_commonHub_ring_alarm_music": "Nada peringatan",
    "mi_commonHub_ring_policecar1": "Nada mobil polisi 1",
    "mi_commonHub_ring_policecar2": "Nada mobil polisi 2",
    "mi_commonHub_ring_safety_accident": "Suara insiden keselamatan",
    "mi_commonHub_ring_countdown": "Hitung mundur misil",
    "mi_commonHub_ring_ghost": "Tangisan hantu",
    "mi_commonHub_ring_gun": "Senapan sniper",
    "mi_commonHub_ring_battle": "Suara pertempuran",
    "mi_commonHub_ring_airraid": "Alarm serangan udara",
    "mi_commonHub_ring_dog": "Gonggongan",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Berdering terus-menerus",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}mnt",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}dtk",
    "mi_comboHub_guardSetting": "Pengaturan penjaga",
    "mi_comboHub_guardSetting_delayTime_immediately": "Segera berlaku",
    "mi_linuxHub_arming_ring": "Nada dering peringatan hub",
    "mi_comboHub_guardSetting_alarmDuration": "Durasi peringatan",
    "mi_comboHub_guardSetting_alarmVolume": "Volume nada peringatan",
    "mi_comboHub_guardSetting_delayTime": "Hitung mundur pengaktifan penjaga",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Bel pintu",
    "mi_commonHub_setting_volume_doorbell": "Volume bel pintu",
    "mi_commonHub_setting_push": "Notifikasi ponsel",
    "mi_commonHub_setting_alarmclock": "Tunda",
    "mi_commonHub_guard_go_config": "Atur sekarang",
    "mi_commonHub_numbers": "item",
    "mi_commonHub_lazy_clock_list": "Daftar jam alarm",
    "mi_commonHub_lazy_clock_close_way": "Mode mati jam alarm",
    "mi_commonHub_timersetting_repeat": "Ulangi",
    "mi_commonHub_setting_bell": "Nada dering",
    "mi_commonHub_setting_volume": "Volume",
    "mi_commonHub_add_lazyclock": "Tambahkan alarm",
    "mi_commonHub_lazy_clock_delete": "Hapus timer yang dipilih?",
    "mi_commonHub_sure_delete": "Anda yakin ingin menghapus item yang dipilih?",
    "mi_commonHub_lazy_clock_list_empty": "Tidak ada jam alarm ditambahkan",
    "mi_commonHub_lazy_clock_name": "Jam alarm",
    "mi_commonHub_play_specific_tone": "Putar nada dering yang ditentukan",
    "mi_commonHub_tone_volume": "ระดับเสียงของริงโทน",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Nama tidak boleh kosong",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置...",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "放弃当前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Tidak dapat menyimpan, silakan coba lagi",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Satu kali tekan (diharuskan)",
    "mi_commonHub_must_choose": "Wajib",
    "mi_commonHub_send_phone_msg": "Kirim notifikasi ke ponsel",
    "mi_commonHub_ring_the_bell": "Deringkan bel pintu",
    "mi_commonHub_lazy_clock_close": "Nonaktifkan jam alarm",
    "mi_commonHub_system_ringtone": "Nada dering sistem",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "Tambah",
    "mi_commonHub_guard_alarm_sound_light_settings": "Pengaturan nada peringatan & lampu",
    "mi_commonHub_guard_guardian_countdown": "Hitung mundur untuk mengaktifkan penjagaan",
    "mi_commonHub_arming_light_length": "Durasi berkedip lampu",
    "mi_commonHub_arming_always_flashing": "Selalu berkedip",
    "mi_commonHub_arming_not_flashing": "Tidak ada kedipan",
    "mi_commonHub_linkage_alarm_hint_detail": "Keterkaitan dan peringatan dengan Hub lain, tingkatkan level keamanan",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Pilih tanggal",
    "common_month_1": "Januari",
    "common_month_2": "Februari",
    "common_month_3": "Maret",
    "common_month_4": "April",
    "common_month_5": "Mei",
    "common_month_6": "Juni",
    "common_month_7": "Juli",
    "common_month_8": "Agustus",
    "common_month_9": "September",
    "common_month_10": "Oktober",
    "common_month_11": "November",
    "common_month_12": "Desember",
    "common_year_month_1": "Januari Tahun s%",
    "common_year_month_2": "Februari Tahun s%",
    "common_year_month_3": "Maret Tahun s%",
    "common_year_month_4": "April Tahun s%",
    "common_year_month_5": "Mei Tahun s%",
    "common_year_month_6": "Juni Tahun s%",
    "common_year_month_7": "Juli Tahun s%",
    "common_year_month_8": "Agustus Tahun s%",
    "common_year_month_9": "September Tahun s%",
    "common_year_month_10": "Oktober Tahun s%",
    "common_year_month_11": "November Tahun s%",
    "common_year_month_12": "Desember Tahun s%",
    "common_week_mon_short": "Senin",
    "common_week_tue_short": "Selasa",
    "common_week_wed_short": "Rabu",
    "common_week_thu_short": "Kamis",
    "common_week_fri_short": "Jumat",
    "common_week_sat_short": "Sabtu",
    "common_week_sun_short": "Minggu",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Kalender",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "mnt",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Tunda waktu mematikan lampu setelah orang pergi",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Mendukung pembaruan firmware otomatis",
    "mi_common_view_details": "Ketuk untuk melihat detailnya",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Perangkat turunan Zigbee",
    "common_hub_bluetooth_subdevice": "Perangkat turunan Bluetooth"
  };
  exports.default = id;
},10058,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var it = {
    "langugeName": "意大利语",
    "common_setting_title": "Impostazioni",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Impostazioni della funzione",
    "common_setting_general_setting": "Impostazioni generali",
    "common_setting_device_name": "Nome dispositivo",
    "common_setting_multiswitch": "Impostazioni pulsante",
    "common_setting_device_timeZone": "Impostazioni regionali",
    "common_setting_location_management": "Gestione delle sedi",
    "common_setting_share_device": "Condivisione dispositivo",
    "common_setting_ifttt_auto": "Automazione",
    "common_setting_btGateway": "Gateway Mesh Bluetooth",
    "common_setting_btGateway_status_read_fail": "Impossibile recuperare lo stato del gateway Mesh Bluetooth ",
    "common_setting_btGateway_connected": "Dispositivi Bluetooth collegati",
    "common_setting_firmware_upgrate": "Controlla se sono disponibili aggiornamenti del firmware",
    "common_setting_more_setting": "Impostazioni aggiuntive",
    "common_setting_add_to_desktop": "Aggiungi a schermata iniziale",
    "common_setting_privacy_agreement": "Contratto di licenza e Informativa sulla privacy",
    "common_setting_delete_device": "Elimina dispositivo",
    "common_setting_help_page": "Guida",
    "common_setting_more_seting_security": "Impostazioni di sicurezza",
    "common_setting_more_seting_faq": "Domande frequenti",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Licenza Software e Accordo sui Servizi",
    "common_setting_privacy_policy": "Informativa sulla privacy",
    "common_setting_feature_plug_in": "Versione plug-in",
    "common_setting_homekit_device_add": "Abbina a HomeKit",
    "common_setting_homekit_device_bound": "legato",
    "common_setting_homekit_device_noBind": "Unbound",
    "common_setting_laboratory": "Funzioni di laboratorio",
    "common_setting_protect_delete": "Protezione dalla cancellazione",
    "common_log_title": "Registri",
    "common_log_today": "Oggi",
    "common_log_yesterday": "Ieri",
    "common_log_no_logs": "Nessun registro",
    "common_log_loading": "Caricamento in corso...",
    "common_log_loading_with_dot": "Caricamento in corso ...",
    "common_log_logDataHasloaded": "I registri sono stati completamente caricati",
    "common_log_all_data_has_been_loaded": "Tutti i dati sono stati caricati",
    "common_log_no_data": "Nessun dato",
    "common_cancel": "Cancella",
    "common_ok": "OK",
    "common_manufacturer": "Fabricado por",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Impossibile connettersi alla rete",
    "common_tips_battery_low": "Batteria scarica",
    "common_tips_iknow": "OK",
    "common_button_done": "Operazione completata",
    "common_button_delete": "Elimina",
    "common_button_retry": "Riprova",
    "common_button_save": "Salva",
    "common_tips_delete_succeed": "Cancellato",
    "common_tips_delete_failed": "Eliminazione non riuscita",
    "common_tips_loading_failed": "Impossibile caricare",
    "common_tips_request_failed": "Richiesta non riuscita. Controllare la connessione di rete",
    "common_button_prev": "Indietro",
    "common_button_next": "Successiva",
    "common_button_changename": "Rinomina",
    "common_date_workday": "Lun/ven",
    "common_date_weekend": "Fine settimana",
    "common_date_selfdefine": "Personalizza",
    "common_date_mon": "Lunedì",
    "common_date_tues": "Martedì",
    "common_date_wed": "Mercoledì",
    "common_date_thur": "Giovedì",
    "common_date_fri": "Venerdì",
    "common_date_sat": "Sabato",
    "common_date_sun": "Domenica",
    "common_date_day": " Giorno",
    "common_date_week": " Settimana",
    "common_date_month": " Mese",
    "common_date_hour": " o",
    "common_date_minute": " min",
    "common_date_second": " s",
    "common_tips_discard_operation": "Interrompere l’operazione attuale?",
    "common_tips_setting": "Impostazione in corso, attendere…",
    "common_tips_setting_failed": "Impostazione non riuscita",
    "common_tips_loading_failed_retry": "Impossibile effettuare il caricamento, tocca per riprovare",
    "common_tips_shared_no_promision": "Il dispositivo condiviso non dispone di alcuna autorizzazione",
    "common_electricity": "Statistiche sull'elettricità",
    "common_power_history": "Record cronologia alimentazione",
    "common_hardware_update_updating": "Aggiornamento firmware, attendere ...",
    "common_hardware_update_default": "È disponibile una nuova versione del firmware ({version}), aggiornare ora?",
    "common_hardware_update_isforce": "L'attuale versione del firmware del dispositivo è obsoleta, si prega di aggiornare all'ultima versione ({version}).",
    "common_hardware_update": "Aggiorna adesso",
    "common_out": "Disconnetti",
    "common_hardware_checkupdate": "Visualizzare aggiornamento",
    "common_operation_fail": "Operazione non riuscita. ",
    "common_repeat_everyday": "Tutti i giorni",
    "common_repeat_once": "Una volta",
    "common_repeat_tomorrow": "Domani",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "Il dispositivo verrà rimosso dall'elenco.",
    "common_setting_device_delete_confirm": "Eliminare il dispositivo?",
    "common_voice_mute": "Silenzioso",
    "common_voice_high": "Alto",
    "common_voice_middle": "Medio",
    "common_voice_low": "Basso",
    "sub_device_list_title": "Lista dispositivo di protezione per bambini",
    "sub_device_list_header_tips": "I seguenti dispositivi di protezione bambini sono già associati a questo hub.",
    "zigbee_sub_device_list_header_tips": "I seguenti dispositivi di protezione bambini Zigbee sono collegati a questo gateway",
    "sub_device_list_empty_tips": "Non ci sono dispositivi di protezione bambini associati a questo hub di controllo.",
    "zigbee_sub_device_list_empty_tips": "Non ci sono dispositivi di protezione bambini associati a questo hub di controllo.",
    "sub_device_list_name_cant_empty": "Il nome del dispositivo non può essere vuoto",
    "sub_device_list_name_cant_support_emoji": "Non supporta le espressioni emoji",
    "sub_device_list_name_cant_support_special_char": "Il nome non può contenere simboli speciali",
    "sub_device_list_name_cant_more_forty": "Il nome non può superare i 40 caratteri",
    "sub_device_list_name_cant_same": "Il nome del dispositivo non può essere lo stesso",
    "sub_device_list_device_offline": "Dispositivo offline",
    "sub_device_list_selected": "{XX} elemento selezionato",
    "sub_device_list_delete_multi_device": "Vuoi eliminare i dispositivi {XX} selezionati?",
    "ifttt_triggle_single_press": "Clic",
    "ifttt_triggle_double_press": "Tenere premuto",
    "ifttt_triggle_long_press": "Premere due volte",
    "ifttt_triggle_shake": "Agita",
    "ifttt_triggle_someone_moved": "Movimento rilevato",
    "ifttt_triggle_windoor_open": "La finestra/porta è aperta",
    "ifttt_triggle_moved_afteronemin": "Spostato dopo un minuto di inattività",
    "ifttt_triggle_detect_vibration": "Vibrazione rilevata",
    "ifttt_triggle_detect_fall": "Caduta rilevata",
    "ifttt_triggle_detect_tilting": "Senso di inclinazione",
    "ifttt_triggle_fire_alert": "Allarme antincendio",
    "ifttt_triggle_gas_leakage_alert": "Allarme del perditadi gas",
    "ifttt_triggle_flood_alert": "Allerta alluvione",
    "guard_type_basic": "Protezione di base",
    "guard_type_home": "Protezione domestica",
    "guard_type_away": "Protezione fuori casa",
    "guard_type_sleep": "Protezione del sonno",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Impostare almeno un dispositivo di protezione bambini come dispositivo di attivazione per abilitare la protezione domestica.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Impostare almeno un dispositivo di protezione bambini come dispositivo di attivazione per abilitare la protezione fuori casa.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Impostare almeno un dispositivo di protezione bambini come dispositivo di attivazione per abilitare la protezione del sonno.",
    "ifttt_push_title_triggle_alert_1": "In {XX}, {YY} attiva un allarme",
    "ifttt_push_title_triggle_alert_2": "In {XX}, {YY} rileva qualcuno che si muove per attivare un allarme",
    "ifttt_push_title_triggle_alert_magnet": "{XX} è attiva, la porta o la finestra è stata aperta o chiusa e ha attivato l'avviso.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% è attivo, s% ha attivato il segnale di allarme.",
    "ifttt_push_title_triggle_alert_3": "In {XX}, {YY} attiva l'allarme trigger",
    "ifttt_push_title_triggle_alert_4": "In {XX}, {YY} rileva lo spostamento",
    "ifttt_push_title_triggle_alert_5": "In {XX}, {YY} rileva l'allarme di allagamento",
    "ifttt_push_title_triggle_alert_6": "In {XX}, {YY} ha rilevato una concentrazione di gas superiore allo standard",
    "ifttt_push_title_triggle_alert_7": "In {XX}, {YY} ha rilevato fumo",
    "common_ifttt_scene_execute_result_fail": "Esecuzione non riuscita",
    "common_ifttt_scene_execute_result_unknow_error": "Errore anomalo",
    "common_ifttt_scene_execute_result_time_out": "Timeout di implementazione",
    "common_ifttt_scene_execute_result_camera_sleep": "La fotocamera sta dormendo",
    "common_ifttt_device_offline": "(Offline)",
    "timersetting_on": "Ora di inizio",
    "timersetting_off": "Ora di fine",
    "timersetting_empty": "Non impostato",
    "timersetting_perio": "Attivo per",
    "common_start": "Avvia",
    "common_end": "fine",
    "common_color": "Colore",
    "common_open": "Abilita",
    "common_scene_name_lm_scene_1_1": "Quando in allerta, qualcuno ha passato l'allarme",
    "common_scene_name_lm_scene_1_2": "Allarme di apertura di porte e finestre durante l'allerta",
    "common_scene_name_lm_scene_1_3": "Quando la sveglia è attiva, l'interruttore wireless preme la sveglia.",
    "common_scene_name_lm_scene_1_4": "Durante gli avvisi, il cubo di Rubik viene attivato per un po '.",
    "common_scene_name_lm_scene_1_5": "In caso di avviso, gli adesivi statici e statici vengono attivati per due minuti e viene attivato l'allarme.",
    "common_scene_name_lm_scene_2_1": "Qualcuno è passato, la luce notturna è stata illuminata",
    "common_scene_name_lm_scene_3_1": "L'interruttore wireless preme il campanello",
    "common_scene_name_lm_scene_3_2": "Il campanello suona quando una porta/finestra è aperta",
    "common_scene_name_lm_scene_3_3": "Qualcuno ha suonato il campanello",
    "common_scene_name_lm_scene_4_1": "Spegni sveglia quando sta passando qualcuno",
    "common_scene_name_lm_scene_4_2": "Spegni sveglia quando una porta/finestra è aperta",
    "common_scene_name_lm_scene_4_3": "L'interruttore wireless preme l'allarme",
    "common_scene_name_lm_scene_5_1": "Il rilevamento del fumo farà scattare l'allarme del mozzo.",
    "common_scene_name_lm_scene_5_2": "Il rilevamento del gas farà scattare l'allarme del mozzo.",
    "common_scene_name_lm_scene_5_3": "Il rilevamento delle perdite d'acqua farà scattare l'allarme del mozzo.",
    "common_close": "Disabilita",
    "common_state_closed": "Disabilitato",
    "sensor_set_ifttt_config_success": "Configurazione riuscita",
    "common_automation_configuring": "Configurazione dell'automazione del pacchetto, attendere ...",
    "sensor_set_ifttt_config_fail": "Configurazione non riuscita",
    "sensor_set_ifttt_config_fail_tip": "1. Devi connettere il gateway al wifi \n2. Devi connettere il tuo telefono al wifi \n3. Assicurati che il wifi sia normale.",
    "mi_linuxHub_guard_guard_timer": "Tempistica del guardiano",
    "mi_linuxHub_timer_light_name": "Timer lanterna",
    "mi_linuxHub_lazy_clock_name": "Sveglia",
    "sensor_set_ifttt_scene_name_1": "Promemoria apertura porta",
    "sensor_set_ifttt_scene_name_2": "Fare clic sull'interruttore wireless per accendere / spegnere la luce notturna",
    "sensor_set_ifttt_scene_name_3": "Fare doppio clic sull'avviso dell'interruttore wireless",
    "sensor_set_ifttt_scene_name_4": "Qualcuno è passato, la luce notturna è stata illuminata",
    "sensor_set_ifttt_scene_name_5": "2 minuti di luce notturna senza pilota spenta",
    "sensor_set_ifttt_scene_name_6": "Qualcuno che accende la luce notturna",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Non chiuso dopo più di 1 minuto dall'apertura",
    "sensor_set_ifttt_triggle_name_2": "2 minuti senza pilota",
    "sensor_set_ifttt_triggle_name_3": "Riproduci la suoneria specificata",
    "sensor_set_ifttt_triggle_name_4": "Luce notturna on / off",
    "sensor_set_ifttt_triggle_name_5": "Luce notturna a induzione",
    "sensor_set_ifttt_triggle_name_6": "Spegni la luce notturna",
    "sensor_set_ifttt_triggle_name_7": "Luce notturna",
    "sensor_set_ifttt_triggle_name_8": "Avviso on / off",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Una parte delle attività è stata completata",
    "common_short_date_mon": "Lun",
    "common_short_date_tues": "Mar",
    "common_short_date_wed": "Mer",
    "common_short_date_thur": "Gio",
    "common_short_date_fri": "Ven",
    "common_short_date_sat": "Sab",
    "common_short_date_sun": "Dom",
    "common_repeat_timer_title": "Ripeti opzione",
    "common_repeat_self_timer_title": "Ripetizione personalizzata",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Timer",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Retardateur",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " Celsius",
    "common_degree_centigrade_str": "{value} Celsius",
    "common_plug_today_elec": "Oggi",
    "common_plug_month_elec": "Mese",
    "common_plug_current_power": "In uso",
    "mi_comboHub_mainPage_guard": "Protezione",
    "mi_comboHub_mainPage_guard_base": "Di base",
    "mi_comboHub_mainPage_guard_home": "Domestica",
    "mi_comboHub_mainPage_guard_away": "Fuori casa",
    "mi_comboHub_mainPage_guard_sleep": "Sonno",
    "common_comboHub_triggle_device_alert": "Avviso",
    "common_comboHub_triggle_device_opened_guard": "(È stato abilitato per la protezione {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Può essere utilizzato solo per la protezione di base.)",
    "common_comboHub_triggle_device_opened_basic": "(È stato abilitato per la protezione di base.)",
    "common_setting_homekit_device_desc": "Il dispositivo può essere configurato e utilizzato nell'app Apple Home.",
    "common_ifttt_triggleName_switch": "L'allarme viene attivato quando lo stato dell'interruttore cambia.",
    "common_ifttt_triggleName_vibration": "L'allarme viene attivato quando lo stato cambia.",
    "common_ifttt_triggleName_cube": "L'allarme viene attivato quando viene spostato dopo essere rimasto inattivo per 1 minuto.",
    "common_ifttt_triggleName_magnet": "L'allarme viene attivato quando lo stato del sensore della porta o della finestra cambia.",
    "common_ifttt_triggleName_motion": "Qualcuno ha spostato e ha attivato l'avviso.",
    "common_timer_light_timer_light_period": "Periodo di tempo",
    "common_timer_light_timer_on": "A tempo",
    "common_timer_light_timer_off": "Scaduto",
    "common_timer_light_timer_time_after": "Ora di inizio dopo l'ora di fine",
    "common_lumi_sensor_setting_battery": "Batteria",
    "common_lumi_sensor_setting_battery_normal": "Normale",
    "common_lumi_sensor_battery_guide_title": "Guida sostituzione batteria",
    "common_lumi_sensor_battery_guide_description": "Rimuovere il coperchio della batteria e sostituirla come mostrato.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Batteria scarica, per cortesia sostituire la batteria",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Dispositivo di attivazione dell'allarme",
    "mi_comboHub_triggleDevices_deleting": "Eliminazione in corso...",
    "mi_comboHub_triggleSubDevices_setting": "Configurazione...",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivi che non possono essere abilitati",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Quando sono presenti dispositivi in grado di monitorare continuamente l'ambiente collegato all'hub, come rilevatori di fumo e rilevatori di gas, è possibile impostarli come dispositivi di attivazione della guardia di base. Una volta abilitata, la guardia di base monitorerà la tua casa 24 ore su 24, 7 giorni su 7.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "È stato abilitato come dispositivo di attivazione per la protezione domestica, fuori casa o del sonno, non può essere utilizzato per la protezione di base.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Dopo aver impostato il dispositivo di attivazione, è possibile abilitare la protezione domestica.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "È stato abilitato come dispositivo di attivazione per la protezione di base, non può essere utilizzato per la protezione domestica.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Dopo aver impostato il dispositivo di attivazione, è possibile abilitare la protezione fuori casa.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "È stato abilitato come dispositivo di attivazione per la protezione di base, non può essere utilizzato per la protezione fuori casa.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Dopo aver impostato il dispositivo di attivazione, è possibile abilitare la protezione del sonno.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "È stato abilitato come dispositivo di attivazione per la protezione di base, non può essere utilizzato per la protezione del sonno.",
    "mi_comboHub_triggle_device_empty_tip": "Non esistono dispositivi associati a questo hub di controllo che possono essere utilizzati per attivare l'avviso, come un sensore di movimento, un sensore di porte e finestre o un interruttore wireless.",
    "mi_comboHub_triggle_device_go_to_bug": "Acquista",
    "mi_commonHub_setting_nightlight_tomorrow": "Il giorno dopo",
    "mi_commonHub_setting_nightlight_allday": "Tutto il giorno",
    "mi_ifttt_launch": "Quando una qualsiasi condizione viene soddisfatta",
    "mi_ifttt_action": "Allora",
    "mi_commonHub_nightlight_open": "Accendi le luci notturne",
    "mi_commonHub_nightlight_motion_limit": "Può selezionare solo fino a 9 sensori del corpo umano",
    "mi_commonHub_nightlight_delay_close_min": "Spegnere la luce notturna in {value} min",
    "mi_commonHub_go_back_title": "Uscita",
    "mi_commonHub_go_back_content": "Ignorare le modifiche e uscire ora?",
    "mi_commonHub_setting_nightlight": "Luce notturna a induzione",
    "mi_commonHub_nightlight_commont": "Quando {value} si trova in un ambiente buio",
    "mi_commonHub_nightlight_timer": "Periodo di induzione",
    "mi_commonHub_linkage_alarm_number_ten": "È possibile selezionare solo fino a 10 allarmi gateway",
    "common_offline": "Offline",
    "mi_commonHub_linkage_alarm_footer_text": "Quando la funzione di collegamento di avviso dell'hub di controllo è abilitata e viene attivato un hub di controllo, verranno attivate la suoneria di avviso e la luce lampeggiante di tutti gli hub di controllo.",
    "mi_commonHub_linkage_alarm": "Avviso di collegamento",
    "mi_commonHub_linkage_alarm_dis": "Avviso di collegamento annullato",
    "mi_commonHub_ring_doorbell": "Suono del campanello",
    "mi_commonHub_ring_knocking": "Suono del bussare alla porta",
    "mi_commonHub_ring_funny": "Suono divertente",
    "mi_commonHub_ring_alarm_clock": "Suono sveglia",
    "mi_commonHub_ring_alarm_music": "Suono di allarme",
    "mi_commonHub_ring_policecar1": "Suono auto della polizia 1",
    "mi_commonHub_ring_policecar2": "Suono auto della polizia 2",
    "mi_commonHub_ring_safety_accident": "Suono incidente di sicurezza",
    "mi_commonHub_ring_countdown": "Conto alla rovescia missile",
    "mi_commonHub_ring_ghost": "Urlo del fantasma",
    "mi_commonHub_ring_gun": "Sparo",
    "mi_commonHub_ring_battle": "Suono di battaglia",
    "mi_commonHub_ring_airraid": "Allarme raid aereo",
    "mi_commonHub_ring_dog": "Latrati",
    "mi_commonHub_ring_mimix": "Mi Mix",
    "mi_commonHub_ring_enthusuastic": "Entusiasta",
    "mi_commonHub_ring_guitarclassic": "Chitarra classica",
    "mi_commonHub_ring_iceworldpiano": "Piano mondiale ghiaccio",
    "mi_commonHub_ring_leisuretime": "Tempo libero",
    "mi_commonHub_ring_childhood": "Infanzia",
    "mi_commonHub_ring_morningstreamllet": "Streamlet mattina",
    "mi_commonHub_ring_musicbox": "Casella musicale",
    "mi_commonHub_ring_orange": "Arancione",
    "mi_commonHub_ring_thinker": "Pensatore",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Memoria interruzione corrente",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Suonare continuamente",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} s",
    "mi_comboHub_guardSetting": "Impostazioni di protezione",
    "mi_comboHub_guardSetting_delayTime_immediately": "In vigore da subito",
    "mi_linuxHub_arming_ring": "Suoneria allarme",
    "mi_comboHub_guardSetting_alarmDuration": "Durata avviso",
    "mi_comboHub_guardSetting_alarmVolume": "Volume tono di avviso",
    "mi_comboHub_guardSetting_delayTime": "Conto alla rovescia per l'attivazione del protezione",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Campanello",
    "mi_commonHub_setting_volume_doorbell": "Volume del campanello",
    "mi_commonHub_setting_push": "Notifica telefonica",
    "mi_commonHub_setting_alarmclock": "Sveglia",
    "mi_commonHub_guard_go_config": "Imposta ora",
    "mi_commonHub_numbers": "Pz",
    "mi_commonHub_lazy_clock_list": "Elenco delle sveglie",
    "mi_commonHub_lazy_clock_close_way": "Modalità off sveglia",
    "mi_commonHub_timersetting_repeat": "ripetizione",
    "mi_commonHub_setting_bell": "Suoneria",
    "mi_commonHub_setting_volume": "Volume  ",
    "mi_commonHub_add_lazyclock": "Aggiungi un allarme",
    "mi_commonHub_lazy_clock_delete": "Eliminare il timer selezionato?",
    "mi_commonHub_sure_delete": "Sei sicuro di voler eliminare l'elemento selezionato?",
    "mi_commonHub_lazy_clock_list_empty": "Nessuna sveglia aggiunta",
    "mi_commonHub_lazy_clock_name": "Sveglia",
    "mi_commonHub_play_specific_tone": "Riprodurre la suoneria specificata",
    "mi_commonHub_tone_volume": "Volume suoneria",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Spegni indicatore",
    "mi_common_close_indicator_light_tips": "Spegnere l'indicatore dalle 21:00 alle 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Elimina percorso",
    "mi_common_clear_position_comfirm_tip": "Elimina il percorso attuale delle tende adesso?",
    "mi_common_clear_position_success": "Eliminazione con successo",
    "mi_common_adjust_direction": "Regola la direzione di apertura / chiusura della tenda",
    "mi_common_adjust": "Aggiusta",
    "mi_common_adjust_success": "Aggiustato con successo",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Il nome non può essere vuoto",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Aperto al {progress}%",
    "mi_common_opened_fully": "Completamente aperto",
    "mi_common_closed_fully": "Completamente chiuso",
    "mi_common_setting_success": "Configurato con successo",
    "mi_common_setting": "Configurazione in percorso...",
    "mi_common_control_curtain_manually": "Apre/chiude le tende manualmente",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Stile della tenda",
    "mi_common_curtain_install_guide": "Guida all'impostazione del percorso",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Apre le tende in una posizione specifica",
    "mi_curtain_open_to": "Apre le tende al {progress}%",
    "mi_curtain_style_double": "Apre entrambe le tende",
    "mi_curtain_style_double_simple": "Apre entrambi",
    "mi_curtain_style_left": "Tenda aperta a sinistra",
    "mi_curtain_style_left_simple": "Aperto a sinistra",
    "mi_curtain_style_right": "Tenda aperta a destra",
    "mi_curtain_style_right_simple": "Aperto a destra",
    "mi_common_discard_operation": "Annullare l'operazione attuale?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Impossibile salvare, riprovare più tardi.",
    "mi_curtain_common_open": "Apre",
    "mi_curtain_common_close": "Chiude",
    "mi_curtain_common_pause": "Pausa",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Pressione singola (necessaria)",
    "mi_commonHub_must_choose": "richiesto",
    "mi_commonHub_send_phone_msg": "Invia notifiche a dispositivo",
    "mi_commonHub_ring_the_bell": "Anello campanello",
    "mi_commonHub_lazy_clock_close": "Disabilitare la sveglia",
    "mi_commonHub_system_ringtone": "Suoneria di sistema",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "aggiungere",
    "mi_commonHub_guard_alarm_sound_light_settings": "Toni di avviso e impostazioni della luce",
    "mi_commonHub_guard_guardian_countdown": "Conto alla rovescia per l'attivazione del protezione",
    "mi_commonHub_arming_light_length": "Durata lampeggiamento luce",
    "mi_commonHub_arming_always_flashing": "Suonare sempre",
    "mi_commonHub_arming_not_flashing": "Nessun battito di ciglia",
    "mi_commonHub_linkage_alarm_hint_detail": "Collegamento e allarme con altri Hub, migliorare il livello di sicurezza",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Seleziona la data",
    "common_month_1": "Gennaio",
    "common_month_2": "Febbraio",
    "common_month_3": "Marzo",
    "common_month_4": "Aprile",
    "common_month_5": "Maggio",
    "common_month_6": "Giugno",
    "common_month_7": "Luglio",
    "common_month_8": "Agosto",
    "common_month_9": "Settembre",
    "common_month_10": "Ottobre",
    "common_month_11": "Novembre",
    "common_month_12": "Dicembre",
    "common_year_month_1": "Gennaio s%",
    "common_year_month_2": "Febbraio s%",
    "common_year_month_3": "Marzo s%",
    "common_year_month_4": "Aprile s%",
    "common_year_month_5": "Maggio s%",
    "common_year_month_6": "Giugno s%",
    "common_year_month_7": "Luglio s%",
    "common_year_month_8": "Agosto s%",
    "common_year_month_9": "Settembre s%",
    "common_year_month_10": "Ottobre s%",
    "common_year_month_11": "Novembre s%",
    "common_year_month_12": "Dicembre s%",
    "common_week_mon_short": "Lunedì",
    "common_week_tue_short": "Martedì",
    "common_week_wed_short": "Mercoledì",
    "common_week_thu_short": "Giovedì",
    "common_week_fri_short": "Venerdì",
    "common_week_sat_short": "Sabato",
    "common_week_sun_short": "Domenica",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Calendario",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " min",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Ritardo di spegnimento delle luci dopo che le persone sono uscite",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Supporta gli aggiornamenti firmware automatici",
    "mi_common_view_details": "Tocca per visualizzare i dettagli",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Dispositivo di protezione bambini Zigbee",
    "common_hub_bluetooth_subdevice": "Dispositivo di protezione bambini Bluetooth"
  };
  exports.default = it;
},10061,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ja = {
    "langugeName": "日语",
    "common_setting_title": "設定",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "機能設定",
    "common_setting_general_setting": "一般設定",
    "common_setting_device_name": "デバイス名",
    "common_setting_multiswitch": "ボタン設定",
    "common_setting_device_timeZone": "地域設定",
    "common_setting_location_management": "位置管理",
    "common_setting_share_device": "デバイスシェアリング",
    "common_setting_ifttt_auto": "オートメーション",
    "common_setting_btGateway": "ブルートゥースMeshゲートウェイ",
    "common_setting_btGateway_status_read_fail": "ブルートゥースMeshゲートウェイの読み込みに失敗しました。",
    "common_setting_btGateway_connected": "接続したブルートゥース機デバイス",
    "common_setting_firmware_upgrate": "ファームウェアアップデートを確認します",
    "common_setting_more_setting": "追加設定",
    "common_setting_add_to_desktop": "ホーム画面に追加します",
    "common_setting_privacy_agreement": "利用規約とプライバシーポリシー",
    "common_setting_delete_device": "デバイスを削除",
    "common_setting_help_page": "ヘルプ",
    "common_setting_more_seting_security": "セキュリティ設定",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "フィードバック",
    "common_setting_user_agreement": "ソフトウェアライセンスとサービス契約",
    "common_setting_privacy_policy": "プライバシーポリシー",
    "common_setting_feature_plug_in": "プラグインバージョン番号",
    "common_setting_homekit_device_add": "HomeKitに関連付けする",
    "common_setting_homekit_device_bound": "バインド",
    "common_setting_homekit_device_noBind": "バインドされていない",
    "common_setting_laboratory": "実験室機能",
    "common_setting_protect_delete": "削除防止",
    "common_log_title": "ログ",
    "common_log_today": "本日",
    "common_log_yesterday": "昨日",
    "common_log_no_logs": "ログなし",
    "common_log_loading": "ローディング",
    "common_log_loading_with_dot": "ローディング...",
    "common_log_logDataHasloaded": "ログが完全にロードされました",
    "common_log_all_data_has_been_loaded": "すべてのデータがロードされました",
    "common_log_no_data": "データなし",
    "common_cancel": "キャンセル",
    "common_ok": "はい",
    "common_manufacturer": "製造者",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "ネットワークに接続できません",
    "common_tips_battery_low": "ローバッテリー",
    "common_tips_iknow": "はい",
    "common_button_done": "完了",
    "common_button_delete": "削除",
    "common_button_retry": "リトライ",
    "common_button_save": "保存",
    "common_tips_delete_succeed": "削除に成功しました",
    "common_tips_delete_failed": "削除に失敗しました",
    "common_tips_loading_failed": "ローディングに失敗しました",
    "common_tips_request_failed": "リクエストが失敗しました。インターネット接続を確認してください。",
    "common_button_prev": "次のステップ",
    "common_button_next": "前のステップ",
    "common_button_changename": "名前を変更",
    "common_date_workday": "月曜日から金曜日",
    "common_date_weekend": "週末",
    "common_date_selfdefine": "ユーザ定義",
    "common_date_mon": "月曜日",
    "common_date_tues": "火曜日",
    "common_date_wed": "水曜日",
    "common_date_thur": "木曜日",
    "common_date_fri": "金曜日",
    "common_date_sat": "土曜日",
    "common_date_sun": "日曜日",
    "common_date_day": "日",
    "common_date_week": "週",
    "common_date_month": "月",
    "common_date_hour": "時",
    "common_date_minute": "分",
    "common_date_second": "秒",
    "common_tips_discard_operation": "この操作をやめますか。",
    "common_tips_setting": "設定中，請稍候..",
    "common_tips_setting_failed": "設定失敗",
    "common_tips_loading_failed_retry": "読み込めませんでした。タップしてもう一度試してください",
    "common_tips_shared_no_promision": "被共用裝置無此權限",
    "common_electricity": "電気統計",
    "common_power_history": "功率歷史記錄",
    "common_hardware_update_updating": "ファームウェアがアップデートしていますので、少々お待ちください…",
    "common_hardware_update_default": "デバイスに最新のファームウェアバージョン{version}があることを検知しましたが、アップデートしますか？",
    "common_hardware_update_isforce": "デバイス今のファームウェアバージョンが低すぎて、正常に使用できることを保証するため、最新バージョン{version}にアップデートしてください",
    "common_hardware_update": "アップデートします",
    "common_out": "終了",
    "common_hardware_checkupdate": "アップデートを調べます",
    "common_operation_fail": "操作に失敗しました。",
    "common_repeat_everyday": "毎日",
    "common_repeat_once": "一度",
    "common_repeat_tomorrow": "明日",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "デバイスがリストから削除されます。",
    "common_setting_device_delete_confirm": "デバイスを削除しますか?",
    "common_voice_mute": "サイレント",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "サブデバイスリスト",
    "sub_device_list_header_tips": "下記のサブデバイスがすでにこのゲートウェイに接続しました",
    "zigbee_sub_device_list_header_tips": "次のZigbeeの子機がこのゲートウェイに接続されています",
    "sub_device_list_empty_tips": "当該ゲートウェイでは関連のサブデバイスがありません",
    "zigbee_sub_device_list_empty_tips": "当該ゲートウェイでは関連のサブデバイスがありません",
    "sub_device_list_name_cant_empty": "デバイス名は空にできません",
    "sub_device_list_name_cant_support_emoji": "絵文字表現をサポートしていません",
    "sub_device_list_name_cant_support_special_char": "名前に特殊記号を含めることはできません",
    "sub_device_list_name_cant_more_forty": "名前は40文字を超えることはできません",
    "sub_device_list_name_cant_same": "デバイス名を同じにすることはできません",
    "sub_device_list_device_offline": "機器がオフライン状態です",
    "sub_device_list_selected": "{XX}個のアイテムが選択されました",
    "sub_device_list_delete_multi_device": "選択した{XX}デバイスを削除してもよろしいですか？",
    "ifttt_triggle_single_press": "クリック",
    "ifttt_triggle_double_press": "長押し",
    "ifttt_triggle_long_press": "ダブルクリックする",
    "ifttt_triggle_shake": "ちょっと揺れてください",
    "ifttt_triggle_someone_moved": "誰かが移動しています",
    "ifttt_triggle_windoor_open": "ドアと窓が開きます",
    "ifttt_triggle_moved_afteronemin": "1分間何も操作しないと移動した",
    "ifttt_triggle_detect_vibration": "振動を感知",
    "ifttt_triggle_detect_fall": "感度低下",
    "ifttt_triggle_detect_tilting": "傾きを検知",
    "ifttt_triggle_fire_alert": "火災警報",
    "ifttt_triggle_gas_leakage_alert": "ガス警報アラーム",
    "ifttt_triggle_flood_alert": "浸水アラーム警報",
    "guard_type_basic": "基本デーモンモード",
    "guard_type_home": "ローカルデーモンモード",
    "guard_type_away": "リモートデーモンモード",
    "guard_type_sleep": "スリープデーモンモード",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "最低１つのサブデバイスをアラーム起動としてデーモンモードにしてください。",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "最低１つのサブデバイスをアラーム起動としてリモートデーモンモードにしてください。",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "最低１つのデバイスをアラーム起動としてリモートデーモンモードにしてください。",
    "ifttt_push_title_triggle_alert_1": "{XX}で、{YY}はアラームをトリガーします",
    "ifttt_push_title_triggle_alert_2": "{XX}で、{YY}は誰かがアラームをトリガーするために動いていることを感知します",
    "ifttt_push_title_triggle_alert_magnet": "{XX}保護中、ドアと窓の変化でアラームが起動します。",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%保護中、s%状態が変化したためアラームをトリガします",
    "ifttt_push_title_triggle_alert_3": "{XX}で、{YY}はトリガーアラームをオンにします",
    "ifttt_push_title_triggle_alert_4": "{XX}で、{YY}は移動されたと感じています",
    "ifttt_push_title_triggle_alert_5": "{XX}で、{YY}はフラッディングアラームを検知します",
    "ifttt_push_title_triggle_alert_6": "{XX}で、{YY}は標準を超えるガス濃度を検出しました",
    "ifttt_push_title_triggle_alert_7": "{XX}で、{YY}は煙を検出しました",
    "common_ifttt_scene_execute_result_fail": "実行に失敗しました",
    "common_ifttt_scene_execute_result_unknow_error": "異常エラー",
    "common_ifttt_scene_execute_result_time_out": "実装タイムアウト",
    "common_ifttt_scene_execute_result_camera_sleep": "カメラは寝ています",
    "common_ifttt_device_offline": "（オフライン）",
    "timersetting_on": "開始時期",
    "timersetting_off": "終了時間",
    "timersetting_empty": "未設定",
    "timersetting_perio": "開始時間",
    "common_start": "開始",
    "common_end": "終了",
    "common_color": "色",
    "common_open": "オン",
    "common_scene_name_lm_scene_1_1": "警戒すると、誰かがアラームを渡しました",
    "common_scene_name_lm_scene_1_2": "アラート発生時のドアと窓のオープンアラーム",
    "common_scene_name_lm_scene_1_3": "アラームがオンになると、ワイヤレススイッチがアラームを押します。",
    "common_scene_name_lm_scene_1_4": "警告すると、ルービックキューブがしばらくトリガーされます。",
    "common_scene_name_lm_scene_1_5": "警告すると、静的および静的ステッカーが2分間トリガーされ、アラームがトリガーされます。",
    "common_scene_name_lm_scene_2_1": "誰かが通り過ぎ、夜の光が照らされた",
    "common_scene_name_lm_scene_3_1": "ワイヤレススイッチがドアベルを押す",
    "common_scene_name_lm_scene_3_2": "ドアまたは窓が開けられたため、チャイムが鳴ります",
    "common_scene_name_lm_scene_3_3": "誰かが鳴る鐘を渡した",
    "common_scene_name_lm_scene_4_1": "人が通ると目覚まし時計をオフします",
    "common_scene_name_lm_scene_4_2": "ドアまたは窓が開けられたため、目覚まし時計をオフします",
    "common_scene_name_lm_scene_4_3": "ワイヤレススイッチがアラームをオフにします",
    "common_scene_name_lm_scene_5_1": "煙感アラーム",
    "common_scene_name_lm_scene_5_2": "エアセンシングアラーム",
    "common_scene_name_lm_scene_5_3": "浸水アラーム",
    "common_close": "閉じる",
    "common_state_closed": "閉じられた",
    "sensor_set_ifttt_config_success": "成功した構成",
    "common_automation_configuring": "パッケージの自動化を設定しています。お待ちください...",
    "sensor_set_ifttt_config_fail": "構成に失敗しました",
    "sensor_set_ifttt_config_fail_tip": "1.ゲートウェイをwifi \n2に接続する必要があります。携帯電話をwifi \n3に接続する必要があります。wifiが正常であることを確認してください。",
    "mi_linuxHub_guard_guard_timer": "ガーディアンタイミング",
    "mi_linuxHub_timer_light_name": "ランタンタイマー",
    "mi_linuxHub_lazy_clock_name": "目覚まし時計",
    "sensor_set_ifttt_scene_name_1": "ドア開放リマインダー",
    "sensor_set_ifttt_scene_name_2": "ワイヤレススイッチをクリックして、夜間照明のオン/オフを切り替えます",
    "sensor_set_ifttt_scene_name_3": "ワイヤレススイッチスイッチアラートをダブルクリックします",
    "sensor_set_ifttt_scene_name_4": "誰かが通り過ぎ、夜の光が照らされた",
    "sensor_set_ifttt_scene_name_5": "2分間の無人夜間消灯",
    "sensor_set_ifttt_scene_name_6": "夜間照明を動かす人",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "開封後1分以上経っても閉まらない",
    "sensor_set_ifttt_triggle_name_2": "無人で2分",
    "sensor_set_ifttt_triggle_name_3": "指定した着信音を再生する",
    "sensor_set_ifttt_triggle_name_4": "夜間照明のオン/オフ",
    "sensor_set_ifttt_triggle_name_5": "誘導ナイトライト",
    "sensor_set_ifttt_triggle_name_6": "夜の明かりを消す",
    "sensor_set_ifttt_triggle_name_7": "ナイトライト",
    "sensor_set_ifttt_triggle_name_8": "オン/オフアラート",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "タスクの一部が正常に完了しました",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "Tekrarlama seçeneği",
    "common_repeat_self_timer_title": "Özel tekrar",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Geri sayım",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Today",
    "common_plug_month_elec": "Month",
    "common_plug_current_power": "Current",
    "mi_comboHub_mainPage_guard": "デーモン",
    "mi_comboHub_mainPage_guard_base": "基本",
    "mi_comboHub_mainPage_guard_home": "ローカル",
    "mi_comboHub_mainPage_guard_away": "リモート",
    "mi_comboHub_mainPage_guard_sleep": "スリープ",
    "common_comboHub_triggle_device_alert": "アラーム",
    "common_comboHub_triggle_device_opened_guard": "（すでに{XX}デーモンモード中で起動しました）",
    "common_comboHub_triggle_device_only_open_basic": "（基本デーモンモードだけに使える）",
    "common_comboHub_triggle_device_opened_basic": "（すでに基本デーモンモード中で起動しました）",
    "common_setting_homekit_device_desc": "AppleファミリーAPPで当該設備の配置と使用が可能です。",
    "common_ifttt_triggleName_switch": "ドアと窓の状態が変化すれば、アラームがトリガされます",
    "common_ifttt_triggleName_vibration": "状態が変化すれば、アラームがトリガされます",
    "common_ifttt_triggleName_cube": "一分間の静止の後に移動されれば、アラームがトリガされます",
    "common_ifttt_triggleName_magnet": "ドアと窓の状態が変化すれば、アラームがトリガされます",
    "common_ifttt_triggleName_motion": "人が移動すれば、アラームがトリガされます",
    "common_timer_light_timer_light_period": "期間",
    "common_timer_light_timer_on": "タイミング",
    "common_timer_light_timer_off": "時間切れ",
    "common_timer_light_timer_time_after": "終了時間後の開始時間",
    "common_lumi_sensor_setting_battery": "Miスマート光センサー",
    "common_lumi_sensor_setting_battery_normal": "ノーマル",
    "common_lumi_sensor_battery_guide_title": "電池の交換方法",
    "common_lumi_sensor_battery_guide_description": "電池カバーを開けて、図に従って電池を交換します。",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "電池残量不足なため、早めに電池を交換してください。",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "アラームトリガ",
    "mi_comboHub_triggleDevices_deleting": "削除中",
    "mi_comboHub_triggleSubDevices_setting": "情報を設定しています",
    "mi_comboHub_triggle_device_header_title_1": "起動できない設備",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "ゲートウェイの下に煙警報器、天然ガス警報器などのような持続的に環境を監視する設備があり、これらの設備を基礎的な保護のトリガ警報設備として起動されることができ、起動した後、基礎保護は7×24時間中断することなく家庭の安全を守ります。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "すでにローカル・リモート・スリープデーモンモードのアラームトリガとして使われるが、基本デーモンモードに適用しません。",
    "mi_comboHub_triggle_device_header1_subtitle_home": "アラームトリガした後、基本デーモンモードが起動すると設定できます。",
    "mi_comboHub_triggle_device_header2_subtitle_home": "すでに基本デーモンモードのアラームトリガとして使われるが、ローカルデーモンモードに適用しません。",
    "mi_comboHub_triggle_device_header1_subtitle_away": "アラームトリガした後、リモートデーモンモードが起動すると設定できます。",
    "mi_comboHub_triggle_device_header2_subtitle_away": "すでに基本デーモンモードのアラームトリガとして使われるが、リモートデーモンモードに適用しません。",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "アラームトリガした後、スリープデーモンモードが起動すると設定できます。",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "すでに基本デーモンモードのアラームトリガとして使われるが、スリープデーモンモードに適用しません。",
    "mi_comboHub_triggle_device_empty_tip": "当該ゲートウェイではアラームトリガとするデバイスがありません。例えばモーションセンサー、ドアと窓センサー及びワイヤレススイッチなど",
    "mi_comboHub_triggle_device_go_to_bug": "購入へ",
    "mi_commonHub_setting_nightlight_tomorrow": "翌日",
    "mi_commonHub_setting_nightlight_allday": "一日中",
    "mi_ifttt_launch": "いずれの条件に該当する場合",
    "mi_ifttt_action": "執行します",
    "mi_commonHub_nightlight_open": "ナイトライトをオンします",
    "mi_commonHub_nightlight_motion_limit": "最大9個の人体センサーのみを選択できます",
    "mi_commonHub_nightlight_delay_close_min": "{value}分間後ナイトライトをオフします",
    "mi_commonHub_go_back_title": "編集を終了します",
    "mi_commonHub_go_back_content": "終了した後修正した内容が紛失しますが、終了しますか？",
    "mi_commonHub_setting_nightlight": "感応ナイトライト",
    "mi_commonHub_nightlight_commont": "{value}所在する環境が暗い場合",
    "mi_commonHub_nightlight_timer": "導入期間",
    "mi_commonHub_linkage_alarm_number_ten": "最大10個のゲートウェイアラームのみを選択できます",
    "common_offline": "オフライン",
    "mi_commonHub_linkage_alarm_footer_text": "連動アラーム機能をオンしたゲートウェイの中で、いずれのゲートウェイがアラームすると、そのほかのゲートウェイも連動してアラームして、アラームの音がなり、また点灯します",
    "mi_commonHub_linkage_alarm": "連動アラーム",
    "mi_commonHub_linkage_alarm_dis": "連動アラームをキャンセルします",
    "mi_commonHub_ring_doorbell": "チャイムが鳴る音",
    "mi_commonHub_ring_knocking": "ノックの音",
    "mi_commonHub_ring_funny": "面白い音",
    "mi_commonHub_ring_alarm_clock": "目覚まし時計の音",
    "mi_commonHub_ring_alarm_music": "警戒音",
    "mi_commonHub_ring_policecar1": "パトカーの音 1",
    "mi_commonHub_ring_policecar2": "パトカーの音 2",
    "mi_commonHub_ring_safety_accident": "安全事故の音",
    "mi_commonHub_ring_countdown": "ミサイルのカウントダウン",
    "mi_commonHub_ring_ghost": "鬼の鳴き声",
    "mi_commonHub_ring_gun": "狙撃銃",
    "mi_commonHub_ring_battle": "激戦の音",
    "mi_commonHub_ring_airraid": "空襲音",
    "mi_commonHub_ring_dog": "犬の鳴き声",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "鳴り続ける",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}分",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}秒",
    "mi_comboHub_guardSetting": "デーモン設定",
    "mi_comboHub_guardSetting_delayTime_immediately": "すぐに発効する",
    "mi_linuxHub_arming_ring": "ゲートウェイのアラーム音",
    "mi_comboHub_guardSetting_alarmDuration": "アラームサウンドの長さ",
    "mi_comboHub_guardSetting_alarmVolume": "アラーム音量",
    "mi_comboHub_guardSetting_delayTime": "デーモンカウントダウン入力",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "チャイム",
    "mi_commonHub_setting_volume_doorbell": "チャイムの音量",
    "mi_commonHub_setting_push": "スマホに通知します",
    "mi_commonHub_setting_alarmclock": "怠け者用目覚まし時計",
    "mi_commonHub_guard_go_config": "設定",
    "mi_commonHub_numbers": "個",
    "mi_commonHub_lazy_clock_list": "目覚まし時計リスト",
    "mi_commonHub_lazy_clock_close_way": "目覚まし時計をオフする方式",
    "mi_commonHub_timersetting_repeat": "繰り返す",
    "mi_commonHub_setting_bell": "着信",
    "mi_commonHub_setting_volume": "ボリューム",
    "mi_commonHub_add_lazyclock": "アラームを追加する",
    "mi_commonHub_lazy_clock_delete": "選択した定時を削除しますか？",
    "mi_commonHub_sure_delete": "選択したアイテムを削除してもよろしいですか？",
    "mi_commonHub_lazy_clock_list_empty": "目覚まし時計を追加しません",
    "mi_commonHub_lazy_clock_name": "目覚まし時計",
    "mi_commonHub_play_specific_tone": "指定された音を放送します",
    "mi_commonHub_tone_volume": "Zil sesi düzeyi",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "名称は空欄がNG",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置...",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "放弃当前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "保存失敗、リトライしてください",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "ボタンを一回押します（必ず選択）",
    "mi_commonHub_must_choose": "必須",
    "mi_commonHub_send_phone_msg": "スマフォにメッセージを送信",
    "mi_commonHub_ring_the_bell": "チャイムが鳴ります",
    "mi_commonHub_lazy_clock_close": "目覚まし時計をオフします",
    "mi_commonHub_system_ringtone": "システムの着信音",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "追加する",
    "mi_commonHub_guard_alarm_sound_light_settings": "音響光学アラーム設定",
    "mi_commonHub_guard_guardian_countdown": "保護をオンするカウントダウン",
    "mi_commonHub_arming_light_length": "フラッシュ光量",
    "mi_commonHub_arming_always_flashing": "ずっと点滅します",
    "mi_commonHub_arming_not_flashing": "点滅しません",
    "mi_commonHub_linkage_alarm_hint_detail": "そのほかのゲートウェイと連動してアラームし、安全レベルをアップします",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "日付を選択する",
    "common_month_1": "1月",
    "common_month_2": "2月",
    "common_month_3": "3月",
    "common_month_4": "4月",
    "common_month_5": "5月",
    "common_month_6": "6月",
    "common_month_7": "7月",
    "common_month_8": "8月",
    "common_month_9": "9月",
    "common_month_10": "10月",
    "common_month_11": "11月",
    "common_month_12": "12月",
    "common_year_month_1": "s%年1月",
    "common_year_month_2": "s%年2月",
    "common_year_month_3": "s%年3月",
    "common_year_month_4": "s%年4月",
    "common_year_month_5": "s%年5月",
    "common_year_month_6": "s%年6月",
    "common_year_month_7": "s%年7月",
    "common_year_month_8": "s%年8月",
    "common_year_month_9": "s%年9月",
    "common_year_month_10": "s%年10月",
    "common_year_month_11": "s%年11月",
    "common_year_month_12": "s%年12月",
    "common_week_mon_short": "月曜日",
    "common_week_tue_short": "火曜日",
    "common_week_wed_short": "水曜日",
    "common_week_thu_short": "木曜日",
    "common_week_fri_short": "金曜日",
    "common_week_sat_short": "土曜日",
    "common_week_sun_short": "日曜日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "カレンダー",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人がここを出た後しばらくしてから消灯します",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "ファームウェア自動アップデート機能をサポート",
    "mi_common_view_details": "タップすると詳細を確認できます",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbeeの子機",
    "common_hub_bluetooth_subdevice": "Bluetoothの子機"
  };
  exports.default = ja;
},10064,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ko = {
    "langugeName": "韩国",
    "common_setting_title": "설정",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "기능 설정",
    "common_setting_general_setting": "일반 설정",
    "common_setting_device_name": "기기 이름",
    "common_setting_multiswitch": "버튼 설정",
    "common_setting_device_timeZone": "기기 표준 시간대",
    "common_setting_location_management": "위치 관리",
    "common_setting_share_device": "기기 공유",
    "common_setting_ifttt_auto": "지능형",
    "common_setting_btGateway": "블루투스 Mesh게이트웨어",
    "common_setting_btGateway_status_read_fail": "블루투스 Mesh 게이트웨어 식별 실패",
    "common_setting_btGateway_connected": "연결된 블루투스 설비",
    "common_setting_firmware_upgrate": "펌웨어 업그레이드 확인",
    "common_setting_more_setting": "추가 설정",
    "common_setting_add_to_desktop": "데스크톱에 추가",
    "common_setting_privacy_agreement": "사용자 약관 및 개인 정보 보호 정책",
    "common_setting_delete_device": "기기 삭제",
    "common_setting_help_page": "도움말",
    "common_setting_more_seting_security": "보안 설정",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "피드백 문제",
    "common_setting_user_agreement": "소프트웨어 라이센스 및 서비스 계약",
    "common_setting_privacy_policy": "개인 정보 보호 정책",
    "common_setting_feature_plug_in": "플러그인 버전",
    "common_setting_homekit_device_add": "HomeKit에 연동하기",
    "common_setting_homekit_device_bound": "바인드",
    "common_setting_homekit_device_noBind": "언 바운드",
    "common_setting_laboratory": "실험실 기능",
    "common_setting_protect_delete": "실수로 인한 삭제 방지",
    "common_log_title": "로그",
    "common_log_today": "오늘",
    "common_log_yesterday": "어제",
    "common_log_no_logs": "로그 없음",
    "common_log_loading": "로딩 중",
    "common_log_loading_with_dot": "로딩 중 ...",
    "common_log_logDataHasloaded": "전체 로그 로딩",
    "common_log_all_data_has_been_loaded": "모든 데이터가 로드되었습니다",
    "common_log_no_data": "데이터가 없습니다",
    "common_cancel": "취소",
    "common_ok": "확인",
    "common_manufacturer": "제조사",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "네트워크에 연결할 수 없습니다",
    "common_tips_battery_low": "배터리 전량 부족",
    "common_tips_iknow": "확인",
    "common_button_done": "완료",
    "common_button_delete": "삭제",
    "common_button_retry": "다시 시도",
    "common_button_save": "저장",
    "common_tips_delete_succeed": "삭제 성공",
    "common_tips_delete_failed": "삭제 실패",
    "common_tips_loading_failed": "로딩 실패",
    "common_tips_request_failed": "요청 실패. 네트워크 연결 상태를 확인하세요",
    "common_button_prev": "뒤로",
    "common_button_next": "다음",
    "common_button_changename": "이름 바꾸기",
    "common_date_workday": "월-금",
    "common_date_weekend": "주말",
    "common_date_selfdefine": "맞춤설정",
    "common_date_mon": "월요일",
    "common_date_tues": "화요일",
    "common_date_wed": "수요일",
    "common_date_thur": "목요일",
    "common_date_fri": "금요일",
    "common_date_sat": "토요일",
    "common_date_sun": "일요일",
    "common_date_day": " 일",
    "common_date_week": " 주",
    "common_date_month": " 월",
    "common_date_hour": " 시",
    "common_date_minute": "분",
    "common_date_second": "초",
    "common_tips_discard_operation": "현재 작업을 취소할까요?",
    "common_tips_setting": "설정 중, 잠시 기다려 주세요…",
    "common_tips_setting_failed": "설정 실패",
    "common_tips_loading_failed_retry": "로드하지 못했습니다. 다시 시도하려면 클릭하십시오",
    "common_tips_shared_no_promision": "공유 장치에 권한이 없습니다",
    "common_electricity": "전기 통계",
    "common_power_history": "전력 기록",
    "common_hardware_update_updating": "펌웨어를 업그레이드하는 중입니다, 잠시만 기다려주십시오...",
    "common_hardware_update_default": "장치에 최신 펌웨어 버전이 {version}인 것으로 감지되었습니다, 업그레이드하시겠습니까?",
    "common_hardware_update_isforce": "장치의 현재 펌웨어 버전이 너무 낮습니다， 정상적으로 사용하려면 최신 버전 {version}로 업그레이드하십시오",
    "common_hardware_update": "업그레이드로 이동",
    "common_out": "종료",
    "common_hardware_checkupdate": "업그레이드 보기",
    "common_operation_fail": "작동 실패",
    "common_repeat_everyday": "매일",
    "common_repeat_once": "1회",
    "common_repeat_tomorrow": "내일",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "기기 목록에서 기기가 제거될 것입니다.",
    "common_setting_device_delete_confirm": "정말 기기를 삭제하시겠습니까?",
    "common_voice_mute": "음소거",
    "common_voice_high": "높음",
    "common_voice_middle": "중간",
    "common_voice_low": "낮음",
    "sub_device_list_title": "하위 장치 목록",
    "sub_device_list_header_tips": "이 게이트웨이에는 다음과 같은 하위 장치가 연결되어 있습니다",
    "zigbee_sub_device_list_header_tips": "다음 지그비 종속 장치들은 본 게이트웨이에 연결되어 있습니다.",
    "sub_device_list_empty_tips": "이 게이트웨이에 연결된 하위 장치가 없습니다",
    "zigbee_sub_device_list_empty_tips": "이 게이트웨이에 연결된 하위 장치가 없습니다",
    "sub_device_list_name_cant_empty": "장치 이름은 비워 둘 수 없습니다",
    "sub_device_list_name_cant_support_emoji": "이모티콘 표현을 지원하지 않습니다",
    "sub_device_list_name_cant_support_special_char": "이름은 특수 기호를 포함 할 수 없습니다",
    "sub_device_list_name_cant_more_forty": "이름은 40자를 초과 할 수 없습니다",
    "sub_device_list_name_cant_same": "장치 이름은 같을 수 없습니다",
    "sub_device_list_device_offline": "장치가 오프라인 상태입니다",
    "sub_device_list_selected": "{XX} 항목 선택",
    "sub_device_list_delete_multi_device": "선택한 {XX} 기기를 삭제 하시겠습니까?",
    "ifttt_triggle_single_press": "한 번 누름",
    "ifttt_triggle_double_press": "누르고 홀드",
    "ifttt_triggle_long_press": "두 번 누름",
    "ifttt_triggle_shake": "흔듬",
    "ifttt_triggle_someone_moved": "인원 이동",
    "ifttt_triggle_windoor_open": "도어 및 창 열기",
    "ifttt_triggle_moved_afteronemin": "1 분 동안 활동이 없으면 이동",
    "ifttt_triggle_detect_vibration": "진동 감지",
    "ifttt_triggle_detect_fall": "드롭 다운 감지",
    "ifttt_triggle_detect_tilting": "기울이기 감지",
    "ifttt_triggle_fire_alert": "화재 경보",
    "ifttt_triggle_gas_leakage_alert": "가스 누설 경보",
    "ifttt_triggle_flood_alert": "침수 경보",
    "guard_type_basic": "기본 가드",
    "guard_type_home": "홈 가드",
    "guard_type_away": "외출 가드",
    "guard_type_sleep": "수면 가드",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "홈 가드를 활성화하려면 최소한 하나의 하위 장치를 경보 트리거 조건으로 설정하십시오",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "외출 가드를 활성화하려면 최소한 하나의 하위 장치를 경보 트리거 조건으로 설정하십시오",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "수면 가드를 활성화하려면 최소한 하나의 하위 장치를 경보 트리거 조건으로 설정하십시오",
    "ifttt_push_title_triggle_alert_1": "{XX}에서 {YY}는 알람을 트리거합니다",
    "ifttt_push_title_triggle_alert_2": "{XX}에서 {YY}는 누군가가 알람을 트리거하기 위해 움직이는 것을 감지합니다.",
    "ifttt_push_title_triggle_alert_magnet": "{XX}중，도어 및 창 상태가 변경되어 알람을 트리거합니다",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% 보호중, s% 상태 변화 시 경보를 촉발합니다.",
    "ifttt_push_title_triggle_alert_3": "{XX}에서 {YY}는 트리거 알람을 켭니다.",
    "ifttt_push_title_triggle_alert_4": "{XX}에서 {YY}가 움직입니다.",
    "ifttt_push_title_triggle_alert_5": "{XX}에서 {YY}는 범람 경보를 감지합니다",
    "ifttt_push_title_triggle_alert_6": "{XX}에서 {YY}가 표준을 초과하는 가스 농도를 감지했습니다.",
    "ifttt_push_title_triggle_alert_7": "{XX}에서 {YY}가 연기를 감지했습니다.",
    "common_ifttt_scene_execute_result_fail": "실행 실패",
    "common_ifttt_scene_execute_result_unknow_error": "비정상적인 오류",
    "common_ifttt_scene_execute_result_time_out": "구현 타임 아웃",
    "common_ifttt_scene_execute_result_camera_sleep": "카메라가 자요",
    "common_ifttt_device_offline": "(오프라인)",
    "timersetting_on": "실행 시간",
    "timersetting_off": "오프 시간",
    "timersetting_empty": "미설정",
    "timersetting_perio": "실행 기간",
    "common_start": "시작",
    "common_end": "끝",
    "common_color": "컬러",
    "common_open": "활성화",
    "common_scene_name_lm_scene_1_1": "경고 할 때 누군가가 경보를 통과 한 경우",
    "common_scene_name_lm_scene_1_2": "경보시 도어 및 창 열기 경보",
    "common_scene_name_lm_scene_1_3": "알람이 켜져 있으면 무선 스위치가 알람을 누릅니다.",
    "common_scene_name_lm_scene_1_4": "경고 할 때 Rubik 's Cube가 잠시 동안 트리거됩니다.",
    "common_scene_name_lm_scene_1_5": "경고가 표시되면 정적 및 정적 스티커가 2 분 동안 트리거되고 알람이 트리거됩니다.",
    "common_scene_name_lm_scene_2_1": "누군가 지나가고 야간 조명이 켜졌습니다",
    "common_scene_name_lm_scene_3_1": "무선 스위치가 초인종을 누른다",
    "common_scene_name_lm_scene_3_2": "문/창문이 열리면 초인종이 울립니다",
    "common_scene_name_lm_scene_3_3": "누군가 울리는 종을 통과했습니다",
    "common_scene_name_lm_scene_4_1": "누가 지나가면 알람 시계를 멈춥니다",
    "common_scene_name_lm_scene_4_2": "문/창문이 열리면 알람 시계가 멈춥니다",
    "common_scene_name_lm_scene_4_3": "무선 스위치가 알람을 해제합니다",
    "common_scene_name_lm_scene_5_1": "연기 감지 연동 게이트웨이 경보",
    "common_scene_name_lm_scene_5_2": "가스 감지 연동 게이트웨이 경보",
    "common_scene_name_lm_scene_5_3": "침수 연동 게이트웨이 경보",
    "common_close": "끄기",
    "common_state_closed": "끄는 중",
    "sensor_set_ifttt_config_success": "구성 성공",
    "common_automation_configuring": "패키지 자동화 구성 중입니다. 잠시만 기다려주십시오.",
    "sensor_set_ifttt_config_fail": "구성 실패",
    "sensor_set_ifttt_config_fail_tip": "1. 게이트웨이를 wifi \n2에 연결해야합니다. 휴대 전화를 wifi \n3에 연결해야합니다 .WiFi가 정상인지 확인하십시오.",
    "mi_linuxHub_guard_guard_timer": "가디언 타이밍",
    "mi_linuxHub_timer_light_name": "랜턴 타이머",
    "mi_linuxHub_lazy_clock_name": "알람 시계",
    "sensor_set_ifttt_scene_name_1": "문 열기 알림",
    "sensor_set_ifttt_scene_name_2": "야간 조명을 켜거나 끄려면 무선 스위치를 클릭하십시오",
    "sensor_set_ifttt_scene_name_3": "무선 스위치 스위치 경고를 두 번 클릭",
    "sensor_set_ifttt_scene_name_4": "누군가 지나가고 야간 조명이 켜졌습니다",
    "sensor_set_ifttt_scene_name_5": "무인 야간 조명 2 분",
    "sensor_set_ifttt_scene_name_6": "야간 조명을 움직이는 사람",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "개봉 후 1 분 이상 후에 닫히지 않음",
    "sensor_set_ifttt_triggle_name_2": "무인 2 분",
    "sensor_set_ifttt_triggle_name_3": "지정된 벨소리를 재생",
    "sensor_set_ifttt_triggle_name_4": "야간 조명 켜기 / 끄기",
    "sensor_set_ifttt_triggle_name_5": "유도 야간 조명",
    "sensor_set_ifttt_triggle_name_6": "야간 조명 끄기",
    "sensor_set_ifttt_triggle_name_7": "야간 조명",
    "sensor_set_ifttt_triggle_name_8": "온 / 오프 경고",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "일부 작업이 성공적으로 완료되었습니다.",
    "common_short_date_mon": "월",
    "common_short_date_tues": "화",
    "common_short_date_wed": "수",
    "common_short_date_thur": "목",
    "common_short_date_fri": "금",
    "common_short_date_sat": "토",
    "common_short_date_sun": "일",
    "common_repeat_timer_title": "반복 옵션",
    "common_repeat_self_timer_title": "맞춤 반복",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "타이머",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Countdown",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Today",
    "common_plug_month_elec": "Month",
    "common_plug_current_power": "Current",
    "mi_comboHub_mainPage_guard": "가드",
    "mi_comboHub_mainPage_guard_base": "기본",
    "mi_comboHub_mainPage_guard_home": "홈",
    "mi_comboHub_mainPage_guard_away": "외출",
    "mi_comboHub_mainPage_guard_sleep": "수면",
    "common_comboHub_triggle_device_alert": "알람",
    "common_comboHub_triggle_device_opened_guard": "(이미{XX}가드에 실행되었습니다)",
    "common_comboHub_triggle_device_only_open_basic": "(기본 가드에만 실행될 수 있습니다)",
    "common_comboHub_triggle_device_opened_basic": "(기본 가드에 실행되었습니다)",
    "common_setting_homekit_device_desc": "Apple Home APP에서 장치를 구성하고 사용할 수 있습니다",
    "common_ifttt_triggleName_switch": "스위치 상태 변경으로 경보가 트리거됩니다",
    "common_ifttt_triggleName_vibration": "상태 변경으로 경보가 트리거됩니다",
    "common_ifttt_triggleName_cube": "1분 동안 사용하지 않으면 이동하여 경보가 트리거됩니다",
    "common_ifttt_triggleName_magnet": "도어 및 창 상태 변경으로 경보가 트리거됩니다",
    "common_ifttt_triggleName_motion": "인원 이동으로 경보가 트리거됩니다",
    "common_timer_light_timer_light_period": "기간",
    "common_timer_light_timer_on": "정시에",
    "common_timer_light_timer_off": "시간 초과",
    "common_timer_light_timer_time_after": "종료 시간 이후 시작 시간",
    "common_lumi_sensor_setting_battery": "Mi 라이트 센서",
    "common_lumi_sensor_setting_battery_normal": "정상",
    "common_lumi_sensor_battery_guide_title": "배터리 교체 안내",
    "common_lumi_sensor_battery_guide_description": "배터리 뒤에 뚜껑을 켜서 이미지 도시에 따라 배터리를 교체합니다.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "배터리가 부족합니다.  배터리를  교체해 주세요.",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "트리거링 경보 장치",
    "mi_comboHub_triggleDevices_deleting": "삭제중",
    "mi_comboHub_triggleSubDevices_setting": "설정중",
    "mi_comboHub_triggle_device_header_title_1": "실행 불가한 장치",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "게이트웨어 상태에 지속적인 안개 경보기, 가스 경보기와 같은 환경 감지는 설비가 있으면 이런 설비를 기초 지키는 촉발 경보 설비로 오픈해서 사용할 수 있습니다. 오픈되면 기초 지키기는 7×24 시간 간격 없이 집안 안전을 지켜드리겠습니다.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "기본 가드가 아닌 홈 가드/외출 가드/수면 가드에 대한 트리거링 경보 장치로 사용되었습니다",
    "mi_comboHub_triggle_device_header1_subtitle_home": "트리거 경보 장치를 설정한 후 홈 가드 모드를 실행할 수 있습니다.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "홈 가드가 아닌 기본 가드에 대한 트리거링 경보 장치로 사용되었습니다",
    "mi_comboHub_triggle_device_header1_subtitle_away": "트리거 경보 장치를 설정한 후 외출 가드 모드를 실행할 수 있습니다.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "외출 가드가 아닌 기본 가드에 대한 트리거링 경보 장치로 사용되었습니다",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "트리거 경보 장치를 설정한 후 수면 가드 모드를 실행할 수 있습니다.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "수면 가드가 아닌 기본 가드에 대한 트리거링 경보 장치로 사용되었습니다",
    "mi_comboHub_triggle_device_empty_tip": "이 게이트웨이에는 인체감지 센서, 방범 센서 및 무선 스위치와 같은 경보 트리거 소스로 사용할 수있는 장치가 없습니다",
    "mi_comboHub_triggle_device_go_to_bug": "구매로 이동",
    "mi_commonHub_setting_nightlight_tomorrow": "다음날",
    "mi_commonHub_setting_nightlight_allday": "하루 종일",
    "mi_ifttt_launch": "그 중 하나가 만족되면",
    "mi_ifttt_action": "실행됩니다",
    "mi_commonHub_nightlight_open": "야간 조명 켜기",
    "mi_commonHub_nightlight_motion_limit": "최대 9 개의 인체 센서 만 선택할 수 있습니다",
    "mi_commonHub_nightlight_delay_close_min": "{value}분 후 야간 조명 끄기",
    "mi_commonHub_go_back_title": "편집 종료",
    "mi_commonHub_go_back_content": "종료 후 수정 사항이 분실됩니다, 종료하시겠습니까?",
    "mi_commonHub_setting_nightlight": "자동 야간 조명",
    "mi_commonHub_nightlight_commont": "{value}어두운 환경에 있을 때",
    "mi_commonHub_nightlight_timer": "유도 기간",
    "mi_commonHub_linkage_alarm_number_ten": "최대 10 개의 게이트웨이 경보 만 선택할 수 있습니다",
    "common_offline": "오프라인",
    "mi_commonHub_linkage_alarm_footer_text": "경보 기능이 연동된 게이트웨 중, 한 개 라도 경보가 울리면 다른 게이트 웨이에서도 경보가 울리고 라이트가 켜지는 기능 활성화",
    "mi_commonHub_linkage_alarm": "연결 알람",
    "mi_commonHub_linkage_alarm_dis": "연결 알람 취소됨",
    "mi_commonHub_ring_doorbell": "초인종 소리",
    "mi_commonHub_ring_knocking": "문 두드리는 소리",
    "mi_commonHub_ring_funny": "재미있는 소리",
    "mi_commonHub_ring_alarm_clock": "알람 시계 소리",
    "mi_commonHub_ring_alarm_music": "알림 소리",
    "mi_commonHub_ring_policecar1": "경찰차 소리 1",
    "mi_commonHub_ring_policecar2": "경찰차 소리 2",
    "mi_commonHub_ring_safety_accident": "안전 사고 사운드",
    "mi_commonHub_ring_countdown": "미사일 카운트다운",
    "mi_commonHub_ring_ghost": "유령 울음 소리",
    "mi_commonHub_ring_gun": "총 소리",
    "mi_commonHub_ring_battle": "전투 소리",
    "mi_commonHub_ring_airraid": "공습 경보",
    "mi_commonHub_ring_dog": "짖는 소리",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "열정적",
    "mi_commonHub_ring_guitarclassic": "기타 클래식",
    "mi_commonHub_ring_iceworldpiano": "아이스 월드 피아노",
    "mi_commonHub_ring_leisuretime": "여가 시간",
    "mi_commonHub_ring_childhood": "어린 시절",
    "mi_commonHub_ring_morningstreamllet": "아침 개울물",
    "mi_commonHub_ring_musicbox": "뮤직박스",
    "mi_commonHub_ring_orange": "오렌지",
    "mi_commonHub_ring_thinker": "생각하는 사람",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "정전 메모리",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "항상 울림",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}분",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}초",
    "mi_comboHub_guardSetting": "가드 설정",
    "mi_comboHub_guardSetting_delayTime_immediately": "바로 효과 발동",
    "mi_linuxHub_arming_ring": "알림 신호음",
    "mi_comboHub_guardSetting_alarmDuration": "경보음 지속 시간",
    "mi_comboHub_guardSetting_alarmVolume": "알람 볼륨",
    "mi_comboHub_guardSetting_delayTime": "가드 활성화 카운트다운",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "초인종",
    "mi_commonHub_setting_volume_doorbell": "초인종 음량",
    "mi_commonHub_setting_push": "휴대 전화 알림",
    "mi_commonHub_setting_alarmclock": "알람 시계",
    "mi_commonHub_guard_go_config": "설정으로 이동",
    "mi_commonHub_numbers": "개",
    "mi_commonHub_lazy_clock_list": "알람 리스트",
    "mi_commonHub_lazy_clock_close_way": "알람 시계 끄기 모드",
    "mi_commonHub_timersetting_repeat": "반복",
    "mi_commonHub_setting_bell": "벨소리",
    "mi_commonHub_setting_volume": "음량 설정",
    "mi_commonHub_add_lazyclock": "알람 추가",
    "mi_commonHub_lazy_clock_delete": "선택한 시간 설정을 삭제 하시겠습니까?",
    "mi_commonHub_sure_delete": "선택한 항목을 삭제 하시겠습니까?",
    "mi_commonHub_lazy_clock_list_empty": "알람이 추가되지 않았습니다",
    "mi_commonHub_lazy_clock_name": "알람 시계",
    "mi_commonHub_play_specific_tone": "지정된 벨소리 재생",
    "mi_commonHub_tone_volume": "신호음 음량",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "표시등 끄기",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "루트 지우기",
    "mi_common_clear_position_comfirm_tip": "현재 커튼 루트를 삭제하시겠습니까? ",
    "mi_common_clear_position_success": "삭제 완료",
    "mi_common_adjust_direction": "커튼 스윙의 방향 조정 ",
    "mi_common_adjust": "조정",
    "mi_common_adjust_success": "조정 완료",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "이름은 필수 입력 사항입니다",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "{progress}%까지 열립니다.",
    "mi_common_opened_fully": "전체 열기 ",
    "mi_common_closed_fully": "전체 닫기",
    "mi_common_setting_success": "설정 완료",
    "mi_common_setting": "설정 중...",
    "mi_common_control_curtain_manually": "수동으로 커튼 열기/닫기",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "커튼 스타일",
    "mi_common_curtain_install_guide": "루트 설정 안내 ",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "커튼이 지정된 위치로 열립니다.",
    "mi_curtain_open_to": "커튼이 {progress}%까지 열립니다.",
    "mi_curtain_style_double": "커튼이 양쪽으로 열립니다. ",
    "mi_curtain_style_double_simple": "양쪽으로 열기",
    "mi_curtain_style_left": "커튼이 왼쪽으로 열립니다. ",
    "mi_curtain_style_left_simple": "왼쪽으로 열기",
    "mi_curtain_style_right": "커튼이 오른쪽으로 열립니다. ",
    "mi_curtain_style_right_simple": "오른쪽으로 열기",
    "mi_common_discard_operation": "현재 작업을 취소하시겠습니까?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "저장 실패,다시 시도하십시오",
    "mi_curtain_common_open": "열기",
    "mi_curtain_common_close": "닫기",
    "mi_curtain_common_pause": "일시 중시",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "버튼을 1회 누릅니다 (필수 선택사항)",
    "mi_commonHub_must_choose": "필수",
    "mi_commonHub_send_phone_msg": "휴대 전화에 알림 보내기",
    "mi_commonHub_ring_the_bell": "벨 울림",
    "mi_commonHub_lazy_clock_close": "알람 끄기",
    "mi_commonHub_system_ringtone": "시스템 벨소리",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "추가",
    "mi_commonHub_guard_alarm_sound_light_settings": "경보음 및 조명 설정",
    "mi_commonHub_guard_guardian_countdown": "가드 카운트 다운",
    "mi_commonHub_arming_light_length": "조명 점멸 시간",
    "mi_commonHub_arming_always_flashing": "항상 점멸",
    "mi_commonHub_arming_not_flashing": "점멸 없음",
    "mi_commonHub_linkage_alarm_hint_detail": "다른 허브와의 연결 및 알림, 보안 수준 강화",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "날짜 선택",
    "common_month_1": "1월",
    "common_month_2": "2월",
    "common_month_3": "3월",
    "common_month_4": "4월",
    "common_month_5": "5월",
    "common_month_6": "6월",
    "common_month_7": "7월",
    "common_month_8": "8월",
    "common_month_9": "9월",
    "common_month_10": "10월",
    "common_month_11": "11월",
    "common_month_12": "12월",
    "common_year_month_1": "s%년 1월",
    "common_year_month_2": "s%년 2월",
    "common_year_month_3": "s%년 3월",
    "common_year_month_4": "s%년 4월",
    "common_year_month_5": "s%년 5월",
    "common_year_month_6": "s%년 6월",
    "common_year_month_7": "s%년 7월",
    "common_year_month_8": "s%년 8월",
    "common_year_month_9": "s%년 9월",
    "common_year_month_10": "s%년 10월",
    "common_year_month_11": "s%년 11월",
    "common_year_month_12": "s%년 12월",
    "common_week_mon_short": "월요일",
    "common_week_tue_short": "화요일",
    "common_week_wed_short": "수요일",
    "common_week_thu_short": "목요일",
    "common_week_fri_short": "금요일",
    "common_week_sat_short": "토요일",
    "common_week_sun_short": "일요일",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "캘린더",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "분",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "야간 조명 꺼지는 시간",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "펌웨어 자동 업그레이드 기능 지원",
    "mi_common_view_details": "클릭하여 세부 정보 확인",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "다음 지그비 종속 장치들은 본 게이트웨이에 연결되어 있습니다.",
    "common_hub_bluetooth_subdevice": "블루투스 종속 장치"
  };
  exports.default = ko;
},10067,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ms = {
    "langugeName": "马来语",
    "common_setting_title": "Settings",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Function settings",
    "common_setting_general_setting": "General settings",
    "common_setting_device_name": "Device name",
    "common_setting_multiswitch": "Button settings",
    "common_setting_device_timeZone": "Regional settings",
    "common_setting_location_management": "Location management",
    "common_setting_share_device": "Device sharing",
    "common_setting_ifttt_auto": "Automation",
    "common_setting_btGateway": "蓝牙Mesh网关",
    "common_setting_btGateway_status_read_fail": "蓝牙Mesh网关状态读取失败",
    "common_setting_btGateway_connected": "连接的蓝牙设备",
    "common_setting_firmware_upgrate": "Check for firmware updates",
    "common_setting_more_setting": "Additional settings",
    "common_setting_add_to_desktop": "Add to home screen",
    "common_setting_privacy_agreement": "User Agreement & Privacy Policy",
    "common_setting_delete_device": "Delete device",
    "common_setting_help_page": "Help",
    "common_setting_more_seting_security": "Security settings",
    "common_setting_more_seting_faq": "FAQ",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Software License and Service Agreement",
    "common_setting_privacy_policy": "Privacy Policy",
    "common_setting_feature_plug_in": "Version",
    "common_setting_homekit_device_add": "Pair with HomeKit",
    "common_setting_homekit_device_bound": "مقيد",
    "common_setting_homekit_device_noBind": "غير مقيد",
    "common_setting_laboratory": "实验室功能",
    "common_setting_protect_delete": "防止误删除",
    "common_log_title": "Logs",
    "common_log_today": "Today",
    "common_log_yesterday": "Yesterday",
    "common_log_no_logs": "No logs",
    "common_log_loading": "Loading",
    "common_log_loading_with_dot": "Loading ...",
    "common_log_logDataHasloaded": "Logs have been fully loaded",
    "common_log_all_data_has_been_loaded": "All data has been loaded",
    "common_log_no_data": "No data",
    "common_cancel": "Cancel",
    "common_ok": "OK",
    "common_manufacturer": "Manufactured by",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Can't connect to the network",
    "common_tips_battery_low": "Low battery",
    "common_tips_iknow": "OK",
    "common_button_done": "Done",
    "common_button_delete": "Delete",
    "common_button_retry": "Try again",
    "common_button_save": "Save",
    "common_tips_delete_succeed": "Delete succeed",
    "common_tips_delete_failed": "Delete failed",
    "common_tips_loading_failed": "Could not load",
    "common_tips_request_failed": "Request failed. Check your network",
    "common_button_prev": "Back",
    "common_button_next": "Next",
    "common_button_changename": "Rename",
    "common_date_workday": "Mon to Fri",
    "common_date_weekend": "Weekend",
    "common_date_selfdefine": "Custom",
    "common_date_mon": "Tuesday",
    "common_date_tues": "Wednesday",
    "common_date_wed": "Thursday",
    "common_date_thur": "Friday",
    "common_date_fri": "Saturday",
    "common_date_sat": "Sunday",
    "common_date_sun": "Monday",
    "common_date_day": "يوم ",
    "common_date_week": "أسبوع ",
    "common_date_month": "شهر ",
    "common_date_hour": "س ",
    "common_date_minute": "د ",
    "common_date_second": "ث ",
    "common_tips_discard_operation": "Discard current operation?",
    "common_tips_setting": "Setting, please wait…",
    "common_tips_setting_failed": "Failed to set",
    "common_tips_loading_failed_retry": "Could not load, tap to try again",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "إحصائيات الكهرباء",
    "common_power_history": "سجل تاريخ الطاقة",
    "common_hardware_update_updating": "Updating firmware, please wait…",
    "common_hardware_update_default": "There is a new firmware version ({version}) available, update now?",
    "common_hardware_update_isforce": "Your device's current firmware version is outdated, please update to the latest version ({version}).",
    "common_hardware_update": "Update now",
    "common_out": "Sign out",
    "common_hardware_checkupdate": "View update",
    "common_operation_fail": "Operation failed.",
    "common_repeat_everyday": "كل يوم",
    "common_repeat_once": "مره واحده",
    "common_repeat_tomorrow": "غدا",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "The device will be removed from the list.",
    "common_setting_device_delete_confirm": "Delete device?",
    "common_voice_mute": "静音",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "子设备列表",
    "sub_device_list_header_tips": "下列子设备已经连接在本网关下",
    "zigbee_sub_device_list_header_tips": "ms",
    "sub_device_list_empty_tips": "该网关下暂无关联的子设备",
    "zigbee_sub_device_list_empty_tips": "该网关下暂无关联的Zigbee子设备",
    "sub_device_list_name_cant_empty": "لا يمكن أن يكون اسم الجهاز فارغًا",
    "sub_device_list_name_cant_support_emoji": "لا يدعم تعبيرات الرموز التعبيرية",
    "sub_device_list_name_cant_support_special_char": "لا يمكن أن يحتوي الاسم على رموز خاصة",
    "sub_device_list_name_cant_more_forty": "لا يمكن أن يتجاوز الاسم 41 حرفًا",
    "sub_device_list_name_cant_same": "اسم الجهاز لا يمكن أن يكون هو نفسه",
    "sub_device_list_device_offline": "تDevice is offline",
    "sub_device_list_selected": "تم تحديد عنصر {XX}",
    "sub_device_list_delete_multi_device": "هل أنت متأكد من حذف الأجهزة {XX} المحددة؟",
    "ifttt_triggle_single_press": "单击",
    "ifttt_triggle_double_press": "双击",
    "ifttt_triggle_long_press": "长按",
    "ifttt_triggle_shake": "摇一摇",
    "ifttt_triggle_someone_moved": "有人移动",
    "ifttt_triggle_windoor_open": "门窗打开",
    "ifttt_triggle_moved_afteronemin": "تم نقله بعد دقيقة واحدة من عدم النشاط",
    "ifttt_triggle_detect_vibration": "感应到震动",
    "ifttt_triggle_detect_fall": "感应到跌落",
    "ifttt_triggle_detect_tilting": "الاستشعار عن الميل",
    "ifttt_triggle_fire_alert": "火警报警",
    "ifttt_triggle_gas_leakage_alert": "气体泄露报警",
    "ifttt_triggle_flood_alert": "浸水报警",
    "guard_type_basic": "基础守护",
    "guard_type_home": "在家守护",
    "guard_type_away": "离家守护",
    "guard_type_sleep": "睡眠守护",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用在家守护",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用离家守护",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用睡眠守护",
    "ifttt_push_title_triggle_alert_1": "في {XX} ، يطلق {YY} إنذارًا",
    "ifttt_push_title_triggle_alert_2": "في {XX} ، يستشعر {YY} شخصًا يتحرك لإطلاق إنذار",
    "ifttt_push_title_triggle_alert_magnet": "{XX}守护中，门窗状态变化触发报警",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%守护中，s%状态变化触发报警",
    "ifttt_push_title_triggle_alert_3": "في {XX} ، يقوم {YY} بتشغيل إنذار الزناد",
    "ifttt_push_title_triggle_alert_4": "في {XX} ، يستشعر {YY} النقل",
    "ifttt_push_title_triggle_alert_5": "في {XX} ، يستشعر {YY} جهاز إنذار الفيضان",
    "ifttt_push_title_triggle_alert_6": "في {XX} ، اكتشف {YY} تركيز غاز يتجاوز المعيار",
    "ifttt_push_title_triggle_alert_7": "في {XX} ، اكتشف {YY} الدخان",
    "common_ifttt_scene_execute_result_fail": "فشل التنفيذ",
    "common_ifttt_scene_execute_result_unknow_error": "خطأ غير طبيعي",
    "common_ifttt_scene_execute_result_time_out": "مهلة التنفيذ",
    "common_ifttt_scene_execute_result_camera_sleep": "الكاميرا نائمة",
    "common_ifttt_device_offline": "(غير متصل)",
    "timersetting_on": "开启时间",
    "timersetting_off": "关闭时间",
    "timersetting_empty": "未设置",
    "timersetting_perio": "开启时段",
    "common_start": "开始",
    "common_end": "نهاية",
    "common_color": "Kleur",
    "common_open": "开启",
    "common_scene_name_lm_scene_1_1": "عند التنبيه ، مر شخص ما ناقوس الخطر",
    "common_scene_name_lm_scene_1_2": "باب ونافذة إنذار مفتوحة عند التنبيه",
    "common_scene_name_lm_scene_1_3": "عند تشغيل المنبه ، يضغط المفتاح اللاسلكي على المنبه.",
    "common_scene_name_lm_scene_1_4": "عند التنبيه ، يتم تشغيل مكعب روبيك لفترة من الوقت.",
    "common_scene_name_lm_scene_1_5": "عند التنبيه ، يتم تشغيل الملصقات الساكنة والثابتة لمدة دقيقتين ويتم تشغيل المنبه.",
    "common_scene_name_lm_scene_2_1": "شخص ما مرت ، وكان ضوء الليل مضاءة",
    "common_scene_name_lm_scene_3_1": "مفتاح لاسلكي يضغط على جرس الباب",
    "common_scene_name_lm_scene_3_2": "门窗打开响门铃",
    "common_scene_name_lm_scene_3_3": "شخص ما مرت جرس الرنين",
    "common_scene_name_lm_scene_4_1": "有人经过关闹钟",
    "common_scene_name_lm_scene_4_2": "门窗打开关闹钟",
    "common_scene_name_lm_scene_4_3": "مفتاح لاسلكي يضغط على المنبه",
    "common_scene_name_lm_scene_5_1": "烟感联动网关报警",
    "common_scene_name_lm_scene_5_2": "气感联动网关报警",
    "common_scene_name_lm_scene_5_3": "水浸联动网关报警",
    "common_close": "关闭",
    "common_state_closed": "已关闭",
    "sensor_set_ifttt_config_success": "التكوين الناجح",
    "common_automation_configuring": "جارٍ تهيئة أتمتة الحزمة ، يرجى الانتظار ...",
    "sensor_set_ifttt_config_fail": "فشل التكوين",
    "sensor_set_ifttt_config_fail_tip": "1. تحتاج إلى توصيل البوابة بـ wifi \n2. تحتاج إلى توصيل هاتفك بـ wifi \n4. يرجى التأكد من أن wifi طبيعية.",
    "mi_linuxHub_guard_guard_timer": "توقيت الوصي",
    "mi_linuxHub_timer_light_name": "فانوس الموقت",
    "mi_linuxHub_lazy_clock_name": "المنبه",
    "sensor_set_ifttt_scene_name_1": "تذكير فتح الباب",
    "sensor_set_ifttt_scene_name_2": "انقر فوق المفتاح اللاسلكي لتشغيل / إيقاف تشغيل ضوء الليل",
    "sensor_set_ifttt_scene_name_3": "انقر نقرًا مزدوجًا على تنبيه التبديل اللاسلكي",
    "sensor_set_ifttt_scene_name_4": "شخص ما مرت ، وكان ضوء الليل مضاءة",
    "sensor_set_ifttt_scene_name_5": "3 دقيقة ضوء الليل بدون طيار قبالة",
    "sensor_set_ifttt_scene_name_6": "شخص يتحرك ضوء الليل",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "لم يغلق بعد أكثر من دقيقة بعد الافتتاح",
    "sensor_set_ifttt_triggle_name_2": "3 دقيقة بدون طيار",
    "sensor_set_ifttt_triggle_name_3": "تشغيل نغمة الرنين المحددة",
    "sensor_set_ifttt_triggle_name_4": "على / قبالة ضوء الليل",
    "sensor_set_ifttt_triggle_name_5": "ضوء الليل التعريفي",
    "sensor_set_ifttt_triggle_name_6": "أطفئ ضوء الليل",
    "sensor_set_ifttt_triggle_name_7": "ضوء الليل",
    "sensor_set_ifttt_triggle_name_8": "تشغيل / إيقاف التنبيه",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "部分执行成功",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "Opsi ulangi",
    "common_repeat_self_timer_title": "Ulangi khusus",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Countdown",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "اليوم",
    "common_plug_month_elec": "شهر",
    "common_plug_current_power": "التيار",
    "mi_comboHub_mainPage_guard": "守护",
    "mi_comboHub_mainPage_guard_base": "基础",
    "mi_comboHub_mainPage_guard_home": "在家",
    "mi_comboHub_mainPage_guard_away": "离家",
    "mi_comboHub_mainPage_guard_sleep": "睡眠",
    "common_comboHub_triggle_device_alert": "报警",
    "common_comboHub_triggle_device_opened_guard": "（已在{XX}守护中开启）",
    "common_comboHub_triggle_device_only_open_basic": "（只可用于基础守护）",
    "common_comboHub_triggle_device_opened_basic": "（已在基础守护中开启）",
    "common_setting_homekit_device_desc": "该设备可在Apple家庭APP配置和使用",
    "common_ifttt_triggleName_switch": "开关状态变化触发报警",
    "common_ifttt_triggleName_vibration": "状态变化触发报警",
    "common_ifttt_triggleName_cube": "静止一分钟被移动触发报警",
    "common_ifttt_triggleName_magnet": "门窗状态变化触发报警",
    "common_ifttt_triggleName_motion": "有人移动触发报警",
    "common_timer_light_timer_light_period": "时间段定时",
    "common_timer_light_timer_on": "定时开启",
    "common_timer_light_timer_off": "定时关闭",
    "common_timer_light_timer_time_after": "开始时间在结束时间之后",
    "common_lumi_sensor_setting_battery": "电池电量",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "更换电池引导",
    "common_lumi_sensor_battery_guide_description": "请打开电池后盖，按照图示更换电池",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Low battery, please replace the battery",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "触发报警设备",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggle_device_header_title_1": "不可启用的设备",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "当网关下有持续监测环境的设备，如烟雾报警器、天然气报警器，可启用这些设备为基础守护的触发报警设备，开启后，基础守护将7×24小时无间断守护家庭安全。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "已作为在家/离家/睡眠守护的触发报警设备，不可用于基础守护",
    "mi_comboHub_triggle_device_header1_subtitle_home": "设置触发报警设备后，你可以开启在家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_home": "已作为基础守护的触发报警设备，不可用于在家守护",
    "mi_comboHub_triggle_device_header1_subtitle_away": "设置触发报警设备后，你可以开启离家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_away": "已作为基础守护的触发报警设备，不可用于离家守护",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "设置触发报警设备后，你可以开启睡眠守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "已作为基础守护的触发报警设备，不可用于睡眠守护",
    "mi_comboHub_triggle_device_empty_tip": "该网关下暂无可作为报警触发源的设备，如人体传感器、门窗传感器以及无线开关等",
    "mi_comboHub_triggle_device_go_to_bug": "去购买",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一满足时",
    "mi_ifttt_action": "就执行",
    "mi_commonHub_nightlight_open": "开启夜灯",
    "mi_commonHub_nightlight_motion_limit": "最多只能选择10个人体传感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分钟后关闭夜灯",
    "mi_commonHub_go_back_title": "退出编辑",
    "mi_commonHub_go_back_content": "退出后修改将丢失，是否退出？",
    "mi_commonHub_setting_nightlight": "感应夜灯",
    "mi_commonHub_nightlight_commont": "当{value}所在环境较暗时",
    "mi_commonHub_nightlight_timer": "感应时段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能选择11个网关报警",
    "common_offline": "غير متصل",
    "mi_commonHub_linkage_alarm_footer_text": "开启联动报警功能的网关中，当任意一个网关报警，其他网关也会联动报警，发出报警铃音和灯光",
    "mi_commonHub_linkage_alarm": "联动报警",
    "mi_commonHub_linkage_alarm_dis": "联动报警取消",
    "mi_commonHub_ring_doorbell": "Deurbeltoon",
    "mi_commonHub_ring_knocking": "Deur kloppen geluid",
    "mi_commonHub_ring_funny": "Gekke toon",
    "mi_commonHub_ring_alarm_clock": "Alarmkloktoon",
    "mi_commonHub_ring_alarm_music": "Alarmtoon",
    "mi_commonHub_ring_policecar1": "Politieauto toon 2",
    "mi_commonHub_ring_policecar2": "Politieauto toon 3",
    "mi_commonHub_ring_safety_accident": "Veiligheidsincident geluid",
    "mi_commonHub_ring_countdown": "Raketten aftellen",
    "mi_commonHub_ring_ghost": "Geest schreeuw",
    "mi_commonHub_ring_gun": "Scherpschuttersgeweer",
    "mi_commonHub_ring_battle": "Gevechtsgeluid",
    "mi_commonHub_ring_airraid": "Luchtaanval alarm",
    "mi_commonHub_ring_dog": "Blaffen",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "一直响",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}د ",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}ث ",
    "mi_comboHub_guardSetting": "守护设置",
    "mi_comboHub_guardSetting_delayTime_immediately": "立即生效",
    "mi_linuxHub_arming_ring": "报警铃音",
    "mi_comboHub_guardSetting_alarmDuration": "报警音时长",
    "mi_comboHub_guardSetting_alarmVolume": "报警音量",
    "mi_comboHub_guardSetting_delayTime": "进入守护倒计时",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Deurbel",
    "mi_commonHub_setting_volume_doorbell": "Deurbelvolume",
    "mi_commonHub_setting_push": "Telefoonbericht",
    "mi_commonHub_setting_alarmclock": "Sluimeren",
    "mi_commonHub_guard_go_config": "Ga naar Instellingen",
    "mi_commonHub_numbers": "items",
    "mi_commonHub_lazy_clock_list": "Alarmkloklijst",
    "mi_commonHub_lazy_clock_close_way": "Alarmklok uitmodus",
    "mi_commonHub_timersetting_repeat": "herhaling",
    "mi_commonHub_setting_bell": "Ringtone",
    "mi_commonHub_setting_volume": "Volume",
    "mi_commonHub_add_lazyclock": "Voeg een alarm toe",
    "mi_commonHub_lazy_clock_delete": "De geselecteerde timer verwijderen?",
    "mi_commonHub_sure_delete": "Weet u zeker dat u het geselecteerde item wilt verwijderen?",
    "mi_commonHub_lazy_clock_list_empty": "Geen alarmklok toegevoegd",
    "mi_commonHub_lazy_clock_name": "Wekker",
    "mi_commonHub_play_specific_tone": "Speel de specifieke beltoon",
    "mi_commonHub_tone_volume": "Volume nada dering",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:01",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:01关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Jadual perjalanan yang jelas",
    "mi_common_clear_position_comfirm_tip": "Kosongkan jadual perjalanan langsir semasa?",
    "mi_common_clear_position_success": "Dibersihkan dengan jayanya",
    "mi_common_adjust_direction": "Selaraskan arah pembukaan / penutup langsir",
    "mi_common_adjust": "Disesuaikan",
    "mi_common_adjust_success": "Disesuaikan dengan jayanya",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "The name cannot be empty",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Terbuka ke {progress}%",
    "mi_common_opened_fully": "Buka sepenuhnya",
    "mi_common_closed_fully": "Tutup sepenuhnya",
    "mi_common_setting_success": "Tetapkan dengan jayanya",
    "mi_common_setting": "Tetapkan",
    "mi_common_control_curtain_manually": "Buka / tutup langsir secara manual",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Gaya langsir",
    "mi_common_curtain_install_guide": "Panduan jadual perjalanan",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Buka langsir ke kedudukan yang tertentu",
    "mi_curtain_open_to": "Buka langsir hingga {progress}%",
    "mi_curtain_style_double": "Buka kedua-dua langsir",
    "mi_curtain_style_double_simple": "Buka kedua-duanya",
    "mi_curtain_style_left": "Buka tirai ke kiri",
    "mi_curtain_style_left_simple": "Buka ke kiri",
    "mi_curtain_style_right": "Buka tirai ke kanan",
    "mi_curtain_style_right_simple": "Buka ke kanan",
    "mi_common_discard_operation": "Buang operasi semasa?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Could not save, please try again.",
    "mi_curtain_common_open": "Buka",
    "mi_curtain_common_close": "Tutup",
    "mi_curtain_common_pause": "Jeda sebentar",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO3浓度高至{value}",
    "mi_common_co2_is_down_to": "CO3浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏21个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO3等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Eenmaal indrukken (vereist)",
    "mi_commonHub_must_choose": "nodig",
    "mi_commonHub_send_phone_msg": "Meldingen sturen naar de telefoon",
    "mi_commonHub_ring_the_bell": "Laat de deurbel horen",
    "mi_commonHub_lazy_clock_close": "Alarmklok uitschakelen",
    "mi_commonHub_system_ringtone": "Systeem beltoon",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "toevoegen",
    "mi_commonHub_guard_alarm_sound_light_settings": "Alert tones & light settings",
    "mi_commonHub_guard_guardian_countdown": "Aftellen om bewaking in te schakelen",
    "mi_commonHub_arming_light_length": "Light blinking duration",
    "mi_commonHub_arming_always_flashing": "Knippert altijd",
    "mi_commonHub_arming_not_flashing": "Knippert niet",
    "mi_commonHub_linkage_alarm_hint_detail": "Koppeling en alarm met andere Hub, verbeteren het veiligheidsniveau",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n6. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "选择日期",
    "common_month_1": "2月",
    "common_month_2": "3月",
    "common_month_3": "4月",
    "common_month_4": "5月",
    "common_month_5": "6月",
    "common_month_6": "7月",
    "common_month_7": "8月",
    "common_month_8": "9月",
    "common_month_9": "10月",
    "common_month_10": "11月",
    "common_month_11": "12月",
    "common_month_12": "13月",
    "common_year_month_1": "s%年2月",
    "common_year_month_2": "s%年3月",
    "common_year_month_3": "s%年4月",
    "common_year_month_4": "s%年5月",
    "common_year_month_5": "s%年6月",
    "common_year_month_6": "s%年7月",
    "common_year_month_7": "s%年8月",
    "common_year_month_8": "s%年9月",
    "common_year_month_9": "s%年10月",
    "common_year_month_10": "s%年11月",
    "common_year_month_11": "s%年12月",
    "common_year_month_12": "s%年13月",
    "common_week_mon_short": "一",
    "common_week_tue_short": "二",
    "common_week_wed_short": "三",
    "common_week_thu_short": "四",
    "common_week_fri_short": "五",
    "common_week_sat_short": "六",
    "common_week_sun_short": "日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "日历",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人离开后延时关灯时间",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "支持固件自动更新功能",
    "mi_common_view_details": "点击可查看详情",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee子设备",
    "common_hub_bluetooth_subdevice": "蓝牙子设备"
  };
  exports.default = ms;
},10070,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var pl = {
    "langugeName": "波兰语",
    "common_setting_title": "Ustawienia",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Ustawienia funkcji",
    "common_setting_general_setting": "Ustawienia ogólne",
    "common_setting_device_name": "Nazwa urządzenia",
    "common_setting_multiswitch": "Ustawienia przycisku",
    "common_setting_device_timeZone": "Ustawienia regionalne",
    "common_setting_location_management": "Zarządzanie lokalizacją",
    "common_setting_share_device": "Udostępnianie urządzenia",
    "common_setting_ifttt_auto": "Automatyzacja",
    "common_setting_btGateway": "Brama Bluetooth Mesh",
    "common_setting_btGateway_status_read_fail": "Nie można odzyskać statusu bramy Bluetooth Mesh",
    "common_setting_btGateway_connected": "Połączono urządzenia Bluetooth",
    "common_setting_firmware_upgrate": "Sprawdź aktualizacje oprogramowania układowego",
    "common_setting_more_setting": "Dodatkowe ustawienia",
    "common_setting_add_to_desktop": "Dodaj do ekranu głównego",
    "common_setting_privacy_agreement": "Umowa użytkownika i polityka prywatności",
    "common_setting_delete_device": "Usuń urządzenie",
    "common_setting_help_page": "Pomoc",
    "common_setting_more_seting_security": "Ustawienia bezpieczeństwa",
    "common_setting_more_seting_faq": "Pytania i odpowiedzi",
    "common_setting_more_seting_isssues": "Opinia",
    "common_setting_user_agreement": "Umowa licencyjna na oprogramowanie oraz świadczenie usług",
    "common_setting_privacy_policy": "Polityka prywatności",
    "common_setting_feature_plug_in": "Wersja z wtyczką",
    "common_setting_homekit_device_add": "Sparuj z zestawem HomeKit",
    "common_setting_homekit_device_bound": "Bind",
    "common_setting_homekit_device_noBind": "Bez ograniczeń",
    "common_setting_laboratory": "Funkcje laboratorium",
    "common_setting_protect_delete": "Ochrona przed usuwaniem",
    "common_log_title": "Dzienniki",
    "common_log_today": "Dzisiaj",
    "common_log_yesterday": "Wczoraj",
    "common_log_no_logs": "Brak dzienników",
    "common_log_loading": "Ładowanie...",
    "common_log_loading_with_dot": "Ładowanie ...",
    "common_log_logDataHasloaded": "Dzienniki zostały załadowane",
    "common_log_all_data_has_been_loaded": "Wszystkie dane zostały załadowane",
    "common_log_no_data": "Brak danych",
    "common_cancel": "Anuluj",
    "common_ok": "OK",
    "common_manufacturer": "Производитель",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Nie można połączyć z siecią",
    "common_tips_battery_low": "Niski poziom naładowania",
    "common_tips_iknow": "OK",
    "common_button_done": "Gotowe",
    "common_button_delete": "Usuń",
    "common_button_retry": "Spróbuj ponownie",
    "common_button_save": "Zapisz",
    "common_tips_delete_succeed": "Usunięto",
    "common_tips_delete_failed": "Usunięcie nie powiodło się",
    "common_tips_loading_failed": "Nie można wczytać",
    "common_tips_request_failed": "Żądanie nie powiodło się. Sprawdź działanie sieci",
    "common_button_prev": "Wróć",
    "common_button_next": "Następny",
    "common_button_changename": "Zmień nazwę",
    "common_date_workday": "Od pon do pt",
    "common_date_weekend": "Weekend",
    "common_date_selfdefine": "Niestandardowe",
    "common_date_mon": "Poniedziałek",
    "common_date_tues": "Wtorek",
    "common_date_wed": "Środa",
    "common_date_thur": "Czwartek",
    "common_date_fri": "Piątek",
    "common_date_sat": "Sobota",
    "common_date_sun": "Niedziela",
    "common_date_day": " Dzień",
    "common_date_week": " Tydzień",
    "common_date_month": " Miesiąc",
    "common_date_hour": " godz.",
    "common_date_minute": " min",
    "common_date_second": " s",
    "common_tips_discard_operation": "Przerwać bieżącą operację?",
    "common_tips_setting": "Ustawianie, proszę czekać…",
    "common_tips_setting_failed": "Ustawienie nie powiodło się",
    "common_tips_loading_failed_retry": "Nie można pobrać, dotknij ponownie",
    "common_tips_shared_no_promision": "Udostępnione urządzenie nie ma uprawnień",
    "common_electricity": "Statystyka energii elektrycznej",
    "common_power_history": "Zapis historii zużycia energii elektrycznej",
    "common_hardware_update_updating": "Trwa aktualizowanie oprogramowania sprzętowego, proszę czekać…",
    "common_hardware_update_default": "Dostępna jest nowa wersja oprogramowania sprzętowego ({version}), zaktualizować teraz?",
    "common_hardware_update_isforce": "Bieżąca wersja oprogramowania sprzętowego na Twoim urządzeniu jest przedawniona, zaktualizuj ją do ostatniej wersji ({version}).",
    "common_hardware_update": "Aktualizuj teraz",
    "common_out": "Wyloguj",
    "common_hardware_checkupdate": "Zobacz aktualizację",
    "common_operation_fail": "Operacja nie powiodła się. ",
    "common_repeat_everyday": "Codziennie",
    "common_repeat_once": "Jeden raz",
    "common_repeat_tomorrow": "Jutro",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "Urządzenie zostanie usunięte z listy.",
    "common_setting_device_delete_confirm": "Czy usunąć urządzenie?",
    "common_voice_mute": "Cichy",
    "common_voice_high": "Wysoki",
    "common_voice_middle": "Średni",
    "common_voice_low": "Niski",
    "sub_device_list_title": "Połączono z urządzeniem dziecięcym",
    "sub_device_list_header_tips": "Następujące urządzenia dla dzieci zostały już sparowane z tym centrum.",
    "zigbee_sub_device_list_header_tips": "Następujące urządzenia dziecięce Zigbee połączone są z tą bramą",
    "sub_device_list_empty_tips": "Brak urządzeń dla dzieci sparowanych z tym centrum kontroli.",
    "zigbee_sub_device_list_empty_tips": "Brak urządzeń dla dzieci sparowanych z tym centrum kontroli.",
    "sub_device_list_name_cant_empty": "Nazwa urządzenia nie może być pusta",
    "sub_device_list_name_cant_support_emoji": "Nie obsługuje wyrażeń emoji",
    "sub_device_list_name_cant_support_special_char": "Nazwa nie może zawierać specjalnych symboli",
    "sub_device_list_name_cant_more_forty": "Nazwa nie może przekraczać 40 znaków",
    "sub_device_list_name_cant_same": "Nazwa urządzenia nie może być taka sama",
    "sub_device_list_device_offline": "Urządzenie jest w trybie offline",
    "sub_device_list_selected": "Wybrano element {XX}",
    "sub_device_list_delete_multi_device": "Czy na pewno chcesz usunąć wybrane urządzenia {XX}?",
    "ifttt_triggle_single_press": "Kliknij",
    "ifttt_triggle_double_press": "Naciśnij i przytrzymaj",
    "ifttt_triggle_long_press": "Naciśnij dwukrotnie",
    "ifttt_triggle_shake": "Wstrząśnij",
    "ifttt_triggle_someone_moved": "Wykryto ruch",
    "ifttt_triggle_windoor_open": "Okno/drzwi są otwarte",
    "ifttt_triggle_moved_afteronemin": "Przeniesiony po minucie bezczynności",
    "ifttt_triggle_detect_vibration": "Wykryto wibrację",
    "ifttt_triggle_detect_fall": "Wykryto upadek",
    "ifttt_triggle_detect_tilting": "Wykrywanie przechyłu",
    "ifttt_triggle_fire_alert": "Alarm pożarowy",
    "ifttt_triggle_gas_leakage_alert": "Alarm wykrywacza gazu",
    "ifttt_triggle_flood_alert": "Alarm powodziowy",
    "guard_type_basic": "Ochrona podstawowa",
    "guard_type_home": "Ochrona domowa",
    "guard_type_away": "Ochrona poza domem",
    "guard_type_sleep": "Ochrona snu",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Proszę ustawić co najmniej jedno urządzenie dziecięce jako urządzenie sterujące, aby włączyć tryb ochrony domowej.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Proszę ustawić co najmniej jedno urządzenie dziecięce jako urządzenie sterujące, aby włączyć tryb ochrony poza domem.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Proszę ustawić co najmniej jedno urządzenie dziecięce jako urządzenie sterujące, aby włączyć tryb ochrony snu.",
    "ifttt_push_title_triggle_alert_1": "W {XX} {YY} wyzwala alarm",
    "ifttt_push_title_triggle_alert_2": "W {XX} {YY} wyczuwa, że ktoś się porusza, aby uruchomić alarm",
    "ifttt_push_title_triggle_alert_magnet": "{XX} jest aktywna, drzwi lub okno zostały otwarte lub zamknięte i wywołały alarm.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% jest aktywy, s% wyzwolił alarm.",
    "ifttt_push_title_triggle_alert_3": "W {XX} {YY} włącza alarm wyzwalacza",
    "ifttt_push_title_triggle_alert_4": "W {XX} {YY} wyczuwa ruch",
    "ifttt_push_title_triggle_alert_5": "W {XX} {YY} wykrywa alarm zalania",
    "ifttt_push_title_triggle_alert_6": "W {XX} {YY} wykrył stężenie gazu przekraczające normę",
    "ifttt_push_title_triggle_alert_7": "W {XX} {YY} wykrył dym",
    "common_ifttt_scene_execute_result_fail": "Wykonanie nie powiodło się",
    "common_ifttt_scene_execute_result_unknow_error": "Nienormalny błąd",
    "common_ifttt_scene_execute_result_time_out": "Limit czasu realizacji",
    "common_ifttt_scene_execute_result_camera_sleep": "Aparat śpi",
    "common_ifttt_device_offline": "(offline)",
    "timersetting_on": "Czas rozpoczęcia",
    "timersetting_off": "Czas zakończenia",
    "timersetting_empty": "Nie ustawiono",
    "timersetting_perio": "Aktywny dla",
    "common_start": "Uruchom",
    "common_end": "Koniec",
    "common_color": "Kolor",
    "common_open": "Włącz",
    "common_scene_name_lm_scene_1_1": "Gdy alarm, ktoś przeszedł alarm",
    "common_scene_name_lm_scene_1_2": "Alarm otwarcia drzwi i okna podczas ostrzegania",
    "common_scene_name_lm_scene_1_3": "Gdy alarm jest włączony, przełącznik bezprzewodowy naciska alarm.",
    "common_scene_name_lm_scene_1_4": "Podczas alarmowania Kostka Rubika jest na chwilę uruchamiana.",
    "common_scene_name_lm_scene_1_5": "Po alarmie statyczne i statyczne naklejki są uruchamiane na dwie minuty, a alarm jest uruchamiany.",
    "common_scene_name_lm_scene_2_1": "Ktoś przeszedł, nocne światło było oświetlone",
    "common_scene_name_lm_scene_3_1": "Przełącznik bezprzewodowy naciska dzwonek do drzwi",
    "common_scene_name_lm_scene_3_2": "Dzwonek do drzwi dzwoni, gdy zostaną otwarte drzwi/okno",
    "common_scene_name_lm_scene_3_3": "Ktoś minął dzwonek",
    "common_scene_name_lm_scene_4_1": "Wyłącz budzik, gdy ktoś przechodzi",
    "common_scene_name_lm_scene_4_2": "Wyłącz budzik, gdy są otwarte drzwi lub okno",
    "common_scene_name_lm_scene_4_3": "Przełącznik bezprzewodowy naciska alarm",
    "common_scene_name_lm_scene_5_1": "Wykrycie dymu wyzwoli alarm centrali.",
    "common_scene_name_lm_scene_5_2": "Wykrycie gazu wyzwoli alarm centrali.",
    "common_scene_name_lm_scene_5_3": "Wykrycie wycieku wody wyzwoli alarm centrali.",
    "common_close": "Wył.",
    "common_state_closed": "Wyłączono",
    "sensor_set_ifttt_config_success": "Skonfigurowano pomyślnie",
    "common_automation_configuring": "Konfigurowanie automatyzacji pakietów, proszę czekać ...",
    "sensor_set_ifttt_config_fail": "Konfiguracja nie powiodła się",
    "sensor_set_ifttt_config_fail_tip": "1. Musisz podłączyć bramę do Wi-Fi \n2. Musisz podłączyć telefon do Wi-Fi \n3. Upewnij się, że Wi-Fi działa normalnie.",
    "mi_linuxHub_guard_guard_timer": "Czas opiekuna",
    "mi_linuxHub_timer_light_name": "Licznik latarni",
    "mi_linuxHub_lazy_clock_name": "Budzik",
    "sensor_set_ifttt_scene_name_1": "Przypomnienie o otwarciu drzwi",
    "sensor_set_ifttt_scene_name_2": "Kliknij przełącznik sieci bezprzewodowej, aby włączyć / wyłączyć lampkę nocną",
    "sensor_set_ifttt_scene_name_3": "Kliknij dwukrotnie alert przełącznika przełącznika łączności bezprzewodowej",
    "sensor_set_ifttt_scene_name_4": "Ktoś przeszedł, nocne światło było oświetlone",
    "sensor_set_ifttt_scene_name_5": "2 minuty bezzałogowego nocnego światła wyłączone",
    "sensor_set_ifttt_scene_name_6": "Ktoś włącza lampkę nocną",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Nie zamknięte po ponad 1 minucie od otwarcia",
    "sensor_set_ifttt_triggle_name_2": "2 minuty bezzałogowe",
    "sensor_set_ifttt_triggle_name_3": "Odtwórz określony dzwonek",
    "sensor_set_ifttt_triggle_name_4": "Włączanie / wyłączanie lampki nocnej",
    "sensor_set_ifttt_triggle_name_5": "Indukcyjne światło nocne",
    "sensor_set_ifttt_triggle_name_6": "Wyłącz lampkę nocną",
    "sensor_set_ifttt_triggle_name_7": "Światło nocne",
    "sensor_set_ifttt_triggle_name_8": "Alarm wł. / Wył",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Część zadań wykonano pomyślnie",
    "common_short_date_mon": "Pon",
    "common_short_date_tues": "Wto",
    "common_short_date_wed": "Śr",
    "common_short_date_thur": "Cz.",
    "common_short_date_fri": "Pia",
    "common_short_date_sat": "Sob",
    "common_short_date_sun": "Nie",
    "common_repeat_timer_title": "Powtórz opcję",
    "common_repeat_self_timer_title": "Niestandardowe powtórzenie",
    "common_on": "WŁ",
    "common_off": "WYŁ",
    "common_timer": "Czasomierz",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-카운트 다운",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Dzisiaj",
    "common_plug_month_elec": "Miesiąc",
    "common_plug_current_power": "Bieżący",
    "mi_comboHub_mainPage_guard": "Ochrona",
    "mi_comboHub_mainPage_guard_base": "Podstawowa",
    "mi_comboHub_mainPage_guard_home": "Domowa",
    "mi_comboHub_mainPage_guard_away": "Poza domem",
    "mi_comboHub_mainPage_guard_sleep": "Uśpienie",
    "common_comboHub_triggle_device_alert": "Alarm",
    "common_comboHub_triggle_device_opened_guard": "(Został włączony dla ochrony {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Można go użyć tylko w przypadku ochrony podstawowej.)",
    "common_comboHub_triggle_device_opened_basic": "(Został włączony dla ochrony podstawowej.)",
    "common_setting_homekit_device_desc": "Urządzenie można skonfigurować i skorzystać z niego w aplikacji Apple Home.",
    "common_ifttt_triggleName_switch": "Alarm jest wyzwalany, gdy zmienia się status przełącznika.",
    "common_ifttt_triggleName_vibration": "Alarm jest wyzwalany, gdy zmienia się status.",
    "common_ifttt_triggleName_cube": "Alarm jest wyzwalany, gdy po okresie nieaktywności zostaje przesunięty o ponad 1 minutę.",
    "common_ifttt_triggleName_magnet": "Alarm jest wyzwalany, gdy zmienia się status czujnika drzwi lub okna.",
    "common_ifttt_triggleName_motion": "Ktoś się poruszył i wyzwolił alarm.",
    "common_timer_light_timer_light_period": "Okres czasu",
    "common_timer_light_timer_on": "Czas na",
    "common_timer_light_timer_off": "Czas skończył się",
    "common_timer_light_timer_time_after": "Czas rozpoczęcia po godzinie zakończenia",
    "common_lumi_sensor_setting_battery": "Akumulator",
    "common_lumi_sensor_setting_battery_normal": "Normalny",
    "common_lumi_sensor_battery_guide_title": "Instrukcja wymiany akumulatora",
    "common_lumi_sensor_battery_guide_description": "Zdejmij pokrywę akumulatora i wymień akumulator zgodnie z opisem.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Niski poziom naładowania baterii, wymień baterię",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": "lx",
    "mi_comboHub_mainPage_trigger_devices": "Urządzenie wyzwalające alarm",
    "mi_comboHub_triggleDevices_deleting": "Usuwanie...",
    "mi_comboHub_triggleSubDevices_setting": "Trwa konfigurowanie…",
    "mi_comboHub_triggle_device_header_title_1": "Urządzenia, których nie można włączyć",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Gdy z centrum połączone są urządzenia stale monitorujące środowisko, takie jak czujniki dymu lub gazu, można je ustawić w taki sposób, że będą pełnić rolę urządzeń wyzwalających podstawowej osłony. Po włączeniu podstawowa osłona będzie monitorować Twój dom 24 godziny na dobę, 7 dni w tygodniu.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Został włączony jako urządzenie wyzwalające w ramach ochrony domowej, ochrony poza domem lub ochrony snu; nie można go użyć jako ochrony podstawowej.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Po ustawieniu urządzenia wyzwalającego można włączyć ochronę domową.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Został włączony jako urządzenie wyzwalające w ramach ochrony podstawowej; nie można go użyć jako ochrony domowej.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Po ustawieniu urządzenia wyzwalającego można włączyć ochronę poza domem.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Został włączony jako urządzenie wyzwalające w ramach ochrony podstawowej; nie można go użyć jako ochrony poza domem.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Po ustawieniu urządzenia wyzwalającego można włączyć ochronę snu.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Został włączony jako urządzenie wyzwalające w ramach ochrony podstawowej; nie można go użyć jako ochrony snu.",
    "mi_comboHub_triggle_device_empty_tip": "Brak urządzeń sparowanych z tym centrum kontroli, które można by wykorzystać do wyzwolenia alarmu, np. czujnik ruchu, czujnik okien i drzwi czy bezprzewodowy wyłącznik.",
    "mi_comboHub_triggle_device_go_to_bug": "Kup",
    "mi_commonHub_setting_nightlight_tomorrow": "Następnego dnia",
    "mi_commonHub_setting_nightlight_allday": "Cały dzień",
    "mi_ifttt_launch": "Jeśli dowolny warunek jest spełniony",
    "mi_ifttt_action": "to",
    "mi_commonHub_nightlight_open": "Włącz światło nocne",
    "mi_commonHub_nightlight_motion_limit": "Można wybrać maksymalnie 9 czujników ludzkiego ciała",
    "mi_commonHub_nightlight_delay_close_min": "Wyłącz światło nocne za {value} minut/-y",
    "mi_commonHub_go_back_title": "Wyjdź",
    "mi_commonHub_go_back_content": "Zaniechać zmian i opuścić teraz?",
    "mi_commonHub_setting_nightlight": "Indukcyjne oświetlenie nocne",
    "mi_commonHub_nightlight_commont": "Gdy {value} znajduje się w ciemnym otoczeniu",
    "mi_commonHub_nightlight_timer": "Okres indukcyjny",
    "mi_commonHub_linkage_alarm_number_ten": "Można wybrać maksymalnie 10 alarmów bramy",
    "common_offline": "offline",
    "mi_commonHub_linkage_alarm_footer_text": "Jeśli funkcja łączenia alarmu z centrum kontroli jest włączona, a centrum kontroli zostało wyzwolone, wyzwoli się również dźwięk dzwonka towarzyszący alarmowi i migające światła wszystkich centrów kontroli.",
    "mi_commonHub_linkage_alarm": "Alarm powiązania",
    "mi_commonHub_linkage_alarm_dis": "Alarm powiązania anulowany",
    "mi_commonHub_ring_doorbell": "Dźwięk dzwonka do drzwi",
    "mi_commonHub_ring_knocking": "Dźwięk pukania do drzwi",
    "mi_commonHub_ring_funny": "Zabawny dźwięk",
    "mi_commonHub_ring_alarm_clock": "Dźwięk budzika",
    "mi_commonHub_ring_alarm_music": "Dźwięk alarmu",
    "mi_commonHub_ring_policecar1": "Dźwięk syreny policyjnej 1",
    "mi_commonHub_ring_policecar2": "Dźwięk syreny policyjnej 2",
    "mi_commonHub_ring_safety_accident": "Dźwięk incydentu dot. zabezpieczeń",
    "mi_commonHub_ring_countdown": "Odliczanie przed wystrzałem pocisku",
    "mi_commonHub_ring_ghost": "Płacz ducha",
    "mi_commonHub_ring_gun": "Strzał z broni palnej",
    "mi_commonHub_ring_battle": "Odgłosy bitwy",
    "mi_commonHub_ring_airraid": "Alarm przeciwlotniczy",
    "mi_commonHub_ring_dog": "Szczekanie",
    "mi_commonHub_ring_mimix": "Mi Mix",
    "mi_commonHub_ring_enthusuastic": "Entuzjastyczny",
    "mi_commonHub_ring_guitarclassic": "Klasyka gitarowa",
    "mi_commonHub_ring_iceworldpiano": "Fortepian lodowy",
    "mi_commonHub_ring_leisuretime": "Czas wolny",
    "mi_commonHub_ring_childhood": "Dzieciństwo",
    "mi_commonHub_ring_morningstreamllet": "Strumień poranny",
    "mi_commonHub_ring_musicbox": "Pozytywka",
    "mi_commonHub_ring_orange": "Pomarańczowy",
    "mi_commonHub_ring_thinker": "Myśliciel",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Pamięć ustawień w przypadku zaniku zasilania",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Ciągły dzwonek",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} s",
    "mi_comboHub_guardSetting": "Ustawienia ochrony",
    "mi_comboHub_guardSetting_delayTime_immediately": "Obowiązuje natychmiast",
    "mi_linuxHub_arming_ring": "Dzwonek alarmu",
    "mi_comboHub_guardSetting_alarmDuration": "Czas trwania alarmu",
    "mi_comboHub_guardSetting_alarmVolume": "Głośność dźwięku alarmu",
    "mi_comboHub_guardSetting_delayTime": "Odliczanie do aktywowania ochrony",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Dzwonek do drzwi",
    "mi_commonHub_setting_volume_doorbell": "Głośność dzwonka do drzwi",
    "mi_commonHub_setting_push": "Powiadomienia telefonu",
    "mi_commonHub_setting_alarmclock": "Budzik",
    "mi_commonHub_guard_go_config": "Ustaw teraz",
    "mi_commonHub_numbers": " Szt.",
    "mi_commonHub_lazy_clock_list": "Lista budzika",
    "mi_commonHub_lazy_clock_close_way": "Tryb wyłączenia budzika",
    "mi_commonHub_timersetting_repeat": "Powtórz",
    "mi_commonHub_setting_bell": "Dzwonek",
    "mi_commonHub_setting_volume": "Wielkość",
    "mi_commonHub_add_lazyclock": "Dodaj alarm",
    "mi_commonHub_lazy_clock_delete": "Skasować wybrany czasomierz?",
    "mi_commonHub_sure_delete": "Czy na pewno chcesz usunąć wybrany element?",
    "mi_commonHub_lazy_clock_list_empty": "Brak dodanych budzików",
    "mi_commonHub_lazy_clock_name": "Budzik",
    "mi_commonHub_play_specific_tone": "Odtwórz konkretny dźwięk dzwonka",
    "mi_commonHub_tone_volume": "Głośność dzwonka",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Wyłącz wskaźnik",
    "mi_common_close_indicator_light_tips": "Wskaźnik można wyłączyć w godzinach od 21:00 do 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Wyczyścić trasę",
    "mi_common_clear_position_comfirm_tip": "Wyczyścić teraz aktualną trasę zasłony?",
    "mi_common_clear_position_success": "Wyczyszczono pomyślnie",
    "mi_common_adjust_direction": "Dostosować kierunek odsuwania/zasuwania zasłony",
    "mi_common_adjust": "Dostosować",
    "mi_common_adjust_success": "Dostosowano pomyślnie",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Nazwa nie może być pusta",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Odsunąć zasłony do {progress}%",
    "mi_common_opened_fully": "Całkowicie odsunięta",
    "mi_common_closed_fully": "Całkowicie zasunięta",
    "mi_common_setting_success": "Ustawiono pomyślnie",
    "mi_common_setting": "Ustawianie potrwa…",
    "mi_common_control_curtain_manually": "Ręcznie odsunąć/zasunąć zasłony",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Styl zasłon",
    "mi_common_curtain_install_guide": "Instrukcja ustawiania trasy",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Odsunąć zasłony do określonej pozycji",
    "mi_curtain_open_to": "Odsunąć zasłony do {progress}%",
    "mi_curtain_style_double": "Odsunąć obie zasłony",
    "mi_curtain_style_double_simple": "Odsunąć obie",
    "mi_curtain_style_left": "Odsunąć zasłony w lewo",
    "mi_curtain_style_left_simple": "Odsunąć w lewo",
    "mi_curtain_style_right": "Odsunąć zasłony w prawo",
    "mi_curtain_style_right_simple": "Odsunąć w prawo",
    "mi_common_discard_operation": "Odrzucić aktualną operację?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Nie można zapisać, spróbuj ponownie później.",
    "mi_curtain_common_open": "Odsunąć",
    "mi_curtain_common_close": "Zasunąć",
    "mi_curtain_common_pause": "Zatrzymać",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Pojedyncze naciśnięcie (wymagane)",
    "mi_commonHub_must_choose": "Wymagane",
    "mi_commonHub_send_phone_msg": "Wyślij powiadomienia do telefonu",
    "mi_commonHub_ring_the_bell": "Uruchom dzwonek przy drzwiach",
    "mi_commonHub_lazy_clock_close": "Wyłącz budzik",
    "mi_commonHub_system_ringtone": "Systemowy dzwonek",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "Dodaj",
    "mi_commonHub_guard_alarm_sound_light_settings": "Ustawienia oświetlenia i dźwięków alarmu",
    "mi_commonHub_guard_guardian_countdown": "Odliczanie do aktywowania ochrony",
    "mi_commonHub_arming_light_length": "Czas migania światła",
    "mi_commonHub_arming_always_flashing": "Zawsze pierścień",
    "mi_commonHub_arming_not_flashing": "Brak mrugnięcia",
    "mi_commonHub_linkage_alarm_hint_detail": "Powiązania i alarm z innymi koncentratorami, zwiększenie poziomu ",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Wybierz datę",
    "common_month_1": "styczeń",
    "common_month_2": "luty",
    "common_month_3": "marzec",
    "common_month_4": "kwiecień",
    "common_month_5": "maj",
    "common_month_6": "czerwiec",
    "common_month_7": "lipiec",
    "common_month_8": "sierpień",
    "common_month_9": "wrzesień",
    "common_month_10": "październik",
    "common_month_11": "listopad",
    "common_month_12": "grudzień",
    "common_year_month_1": "styczeń s%",
    "common_year_month_2": "luty s%",
    "common_year_month_3": "marzec s%",
    "common_year_month_4": "kwiecień s%",
    "common_year_month_5": "maj s%",
    "common_year_month_6": "czerwiec s%",
    "common_year_month_7": "lipiec s%",
    "common_year_month_8": "sierpień s%",
    "common_year_month_9": "wrzesień s%",
    "common_year_month_10": "październik s%",
    "common_year_month_11": "listopad s%",
    "common_year_month_12": "grudzień s%",
    "common_week_mon_short": "Poniedziałek",
    "common_week_tue_short": "Wtorek",
    "common_week_wed_short": "Środa",
    "common_week_thu_short": "Czwartek",
    "common_week_fri_short": "Piątek",
    "common_week_sat_short": "Sobota",
    "common_week_sun_short": "Niedziela",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Kalendarz",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " min",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Czas opóźnienia wyłączenia światła po wyjściu osób",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Obsługuje automatyczną aktualizację oprogramowania układowego",
    "mi_common_view_details": "Naciśnij, aby wyświetlić szczegóły",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Urządzenia dziecięce Zigbee",
    "common_hub_bluetooth_subdevice": "Urządzenia dziecięce z funkcją Bluetooth"
  };
  exports.default = pl;
},10073,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var pt = {
    "langugeName": "巴西葡萄牙语",
    "common_setting_title": "Configurações",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Configurações do dispositivo",
    "common_setting_general_setting": "Configurações gerais",
    "common_setting_device_name": "Nome do dispositivo",
    "common_setting_multiswitch": "Configurações do teclado",
    "common_setting_device_timeZone": "Fuso horário do dispositivo",
    "common_setting_location_management": "Gerenciamento de localização",
    "common_setting_share_device": "Compartilhar dispositivo",
    "common_setting_ifttt_auto": "Automação",
    "common_setting_btGateway": "Gateway de malha de rede Bluetooth",
    "common_setting_btGateway_status_read_fail": "Não foi possível recuperar o status do gateway de malha de rede Bluetooth",
    "common_setting_btGateway_connected": "Dispositivos Bluetooth conectados",
    "common_setting_firmware_upgrate": "Verificar se há atualizações de firmware",
    "common_setting_more_setting": "Configurações adicionais",
    "common_setting_add_to_desktop": "Adicionar à tela de início",
    "common_setting_privacy_agreement": "Acordo do Usuário e Política de Privacidade",
    "common_setting_delete_device": "Excluir dispositivo",
    "common_setting_help_page": "Ajuda",
    "common_setting_more_seting_security": "Configurações de segurança",
    "common_setting_more_seting_faq": "Perguntas frequentes",
    "common_setting_more_seting_isssues": "Feedback",
    "common_setting_user_agreement": "Licença de Software e Contrato de Serviço",
    "common_setting_privacy_policy": "Política de Privacidade",
    "common_setting_feature_plug_in": "Versão de plug-in",
    "common_setting_homekit_device_add": "Emparelhar com HomeKit",
    "common_setting_homekit_device_bound": "Vinculado",
    "common_setting_homekit_device_noBind": "Desvinculado",
    "common_setting_laboratory": "实验室功能",
    "common_setting_protect_delete": "Problema de exclusão",
    "common_log_title": "Registros",
    "common_log_today": "Hoje",
    "common_log_yesterday": "Ontem",
    "common_log_no_logs": "Sem registros",
    "common_log_loading": "Carregando...",
    "common_log_loading_with_dot": "Carregando...",
    "common_log_logDataHasloaded": "Registros totalmente carregados",
    "common_log_all_data_has_been_loaded": "Todos os dados foram carregados",
    "common_log_no_data": "Não há dados",
    "common_cancel": "Cancelar",
    "common_ok": "OK",
    "common_manufacturer": "制造商",
    "common_lumi": "绿米联创",
    "common_tips_network_unconnect": "网络连接不可用",
    "common_tips_battery_low": "电池电量低",
    "common_tips_iknow": "OK",
    "common_button_done": "Concluído",
    "common_button_delete": "Excluir",
    "common_button_retry": "Tente novamente",
    "common_button_save": "Salvar",
    "common_tips_delete_succeed": "Excluído",
    "common_tips_delete_failed": "Falha ao excluir",
    "common_tips_loading_failed": "Não foi possível carregar",
    "common_tips_request_failed": "Falha de solicitação. Verifique sua rede.",
    "common_button_prev": "上一步",
    "common_button_next": "下一步",
    "common_button_changename": "Renomear",
    "common_date_workday": "Seg a Sex",
    "common_date_weekend": "Final de semana",
    "common_date_selfdefine": "Personalizar",
    "common_date_mon": "Segunda-feira",
    "common_date_tues": "Terça-feira",
    "common_date_wed": "Quarta-feira",
    "common_date_thur": "Quinta-feira",
    "common_date_fri": "Sexta-feira",
    "common_date_sat": "Sábado",
    "common_date_sun": "Domingo",
    "common_date_day": " Dia",
    "common_date_week": " Semana",
    "common_date_month": " Mês",
    "common_date_hour": " h",
    "common_date_minute": " mín",
    "common_date_second": " s",
    "common_tips_discard_operation": "Descartar operação atual?",
    "common_tips_setting": "Configurando, aguarde...",
    "common_tips_setting_failed": "Falha ao configurar",
    "common_tips_loading_failed_retry": "Não foi possível carregar, toque para tentar de novo",
    "common_tips_shared_no_promision": "O dispositivo compartilhado não possui permissões",
    "common_electricity": "电量统计",
    "common_power_history": "功率历史记录",
    "common_hardware_update_updating": "固件正在升级，请稍候…",
    "common_hardware_update_default": "检测到设备有最新固件版本{version}，是否升级？",
    "common_hardware_update_isforce": "设备当前固件版本过低，为了能正常使用，请升级至最新版本{version}",
    "common_hardware_update": "去升级",
    "common_out": "Sair",
    "common_hardware_checkupdate": "查看升级",
    "common_operation_fail": "Falha de operação.",
    "common_repeat_everyday": "Todos os dias",
    "common_repeat_once": "Uma vez só",
    "common_repeat_tomorrow": "Amanhã",
    "comon_unit_kwh": "度",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "O dispositivo será removido da lista.",
    "common_setting_device_delete_confirm": "Excluir dispositivo?",
    "common_voice_mute": "Silencioso",
    "common_voice_high": "Alta",
    "common_voice_middle": "Média",
    "common_voice_low": "Baixa",
    "sub_device_list_title": "Lista de dispositivos infantis",
    "sub_device_list_header_tips": "Os seguintes dispositivos infantis já estão vinculados com este hub.",
    "zigbee_sub_device_list_header_tips": "Os dispositivos infantis Zigbee a seguir estão conectados a este gateway",
    "sub_device_list_empty_tips": "Não há dispositivos infantis pareados com este hub de controle.",
    "zigbee_sub_device_list_empty_tips": "Não há dispositivos infantis pareados com este hub de controle.",
    "sub_device_list_name_cant_empty": "O nome do dispositivo não pode estar em branco",
    "sub_device_list_name_cant_support_emoji": "Emoji indisponível",
    "sub_device_list_name_cant_support_special_char": "Caracteres especiais não podem ser incluídos",
    "sub_device_list_name_cant_more_forty": "Limite máximo de 40 caracteres",
    "sub_device_list_name_cant_same": "Os nomes de dispositivos não podem ser iguais.",
    "sub_device_list_device_offline": "Dispositivo offline",
    "sub_device_list_selected": "{XX} foi selecionado",
    "sub_device_list_delete_multi_device": "Excluir {XX} dispositivos selecionados?",
    "ifttt_triggle_single_press": "Clique",
    "ifttt_triggle_double_press": "Manter pressionado",
    "ifttt_triggle_long_press": "Clique duas vezes",
    "ifttt_triggle_shake": "Sacudir",
    "ifttt_triggle_someone_moved": "Alguém se moveu",
    "ifttt_triggle_windoor_open": "A janela / porta está aberta",
    "ifttt_triggle_moved_afteronemin": "Se moveu após ficar parado(a) por um minuto",
    "ifttt_triggle_detect_vibration": "Vibração detectada",
    "ifttt_triggle_detect_fall": "Queda detectada",
    "ifttt_triggle_detect_tilting": "Inclinação detectada",
    "ifttt_triggle_fire_alert": "Alarme de incêndio",
    "ifttt_triggle_gas_leakage_alert": "Alerta de vazamento de gás",
    "ifttt_triggle_flood_alert": "Alerta de inundação",
    "guard_type_basic": "Guarda básica",
    "guard_type_home": "Guarda em casa",
    "guard_type_away": "Guarda longe de casa",
    "guard_type_sleep": "Guarda em repouso",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Defina pelo menos um dispositivo infantil como dispositivo acionador do recurso de guarda em casa.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Defina pelo menos um dispositivo infantil como dispositivo acionador do recurso de guarda longe de casa.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Defina pelo menos um dispositivo infantil como dispositivo acionador do recurso de guarda em repouso.",
    "ifttt_push_title_triggle_alert_1": "{XX},{YY} aciona alarme",
    "ifttt_push_title_triggle_alert_2": "{XX},{YY} detecta pessoas se movendo e aciona alarme",
    "ifttt_push_title_triggle_alert_magnet": "{XX} está ativo(a). A porta ou janela foi aberta ou fechada e acionou o alerta.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "Aguarda %d está ativa. %s acionou o alerta.",
    "ifttt_push_title_triggle_alert_3": "{XX},{YY} foi aberto(a) e acionou o alarme",
    "ifttt_push_title_triggle_alert_4": "{XX},{YY} detecta movimento",
    "ifttt_push_title_triggle_alert_5": "{XX},{YY} detecta vazamento de água e aciona alarme",
    "ifttt_push_title_triggle_alert_6": "{XX},{YY} detecta que o vazamento de gás está acima do padrão",
    "ifttt_push_title_triggle_alert_7": "{XX},{YY} detecta fumaça",
    "common_ifttt_scene_execute_result_fail": "Falha de execução",
    "common_ifttt_scene_execute_result_unknow_error": "Erro desconhecido",
    "common_ifttt_scene_execute_result_time_out": "Tempo esgotado",
    "common_ifttt_scene_execute_result_camera_sleep": "A câmera está em repouso",
    "common_ifttt_device_offline": "(Offline)",
    "timersetting_on": "Hora de início",
    "timersetting_off": "Hora de término",
    "timersetting_empty": "Não definida",
    "timersetting_perio": "Ativo por",
    "common_start": "Iniciar",
    "common_end": "Finalizar",
    "common_color": "顏色",
    "common_open": "Habilitar",
    "common_scene_name_lm_scene_1_1": "警戒时，有人经过报警",
    "common_scene_name_lm_scene_1_2": "警戒时，门窗打开报警",
    "common_scene_name_lm_scene_1_3": "警戒时，无线开关按下报警",
    "common_scene_name_lm_scene_1_4": "警戒时，魔方静止一段时间被触发报警",
    "common_scene_name_lm_scene_1_5": "警戒时，动静贴静止两分钟被触发报警",
    "common_scene_name_lm_scene_2_1": "有人经过，感应夜灯亮",
    "common_scene_name_lm_scene_3_1": "无线开关按下响门铃",
    "common_scene_name_lm_scene_3_2": "门窗打开响门铃",
    "common_scene_name_lm_scene_3_3": "有人经过响门铃",
    "common_scene_name_lm_scene_4_1": "有人经过关闹钟",
    "common_scene_name_lm_scene_4_2": "门窗打开关闹钟",
    "common_scene_name_lm_scene_4_3": "无线开关按下关闹钟",
    "common_scene_name_lm_scene_5_1": "烟感联动网关报警",
    "common_scene_name_lm_scene_5_2": "气感联动网关报警",
    "common_scene_name_lm_scene_5_3": "水浸联动网关报警",
    "common_close": "关闭",
    "common_state_closed": "Desabilitado",
    "sensor_set_ifttt_config_success": "配置成功",
    "common_automation_configuring": "正在配置套装自动化，请稍候...",
    "sensor_set_ifttt_config_fail": "配置失败",
    "sensor_set_ifttt_config_fail_tip": "1. 需将网关连接wifi\n2. 需将手机连接wifi\n3. 请保证wifi正常",
    "mi_linuxHub_guard_guard_timer": "守护定时",
    "mi_linuxHub_timer_light_name": "彩灯定时器",
    "mi_linuxHub_lazy_clock_name": "闹钟定时器",
    "sensor_set_ifttt_scene_name_1": "门口打开提醒",
    "sensor_set_ifttt_scene_name_2": "单击无线开关开/关夜灯",
    "sensor_set_ifttt_scene_name_3": "双击无线开关开关警戒",
    "sensor_set_ifttt_scene_name_4": "有人经过，感应夜灯亮",
    "sensor_set_ifttt_scene_name_5": "2分钟无人移动夜灯关",
    "sensor_set_ifttt_scene_name_6": "有人移动夜灯开",
    "sensor_set_ifttt_scene_name_7": "单击无线开关开/关插座",
    "sensor_set_ifttt_triggle_name_1": "打开后超过1分钟未关闭",
    "sensor_set_ifttt_triggle_name_2": "2分钟无人移动",
    "sensor_set_ifttt_triggle_name_3": "播放指定的铃音",
    "sensor_set_ifttt_triggle_name_4": "开/关夜灯",
    "sensor_set_ifttt_triggle_name_5": "感应夜灯亮",
    "sensor_set_ifttt_triggle_name_6": "关夜灯",
    "sensor_set_ifttt_triggle_name_7": "开夜灯",
    "sensor_set_ifttt_triggle_name_8": "开/关警戒",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Parte de ação concluída",
    "common_short_date_mon": "Seg.",
    "common_short_date_tues": "Ter.",
    "common_short_date_wed": "Qua.",
    "common_short_date_thur": "Qui.",
    "common_short_date_fri": "Sex.",
    "common_short_date_sat": "Sáb.",
    "common_short_date_sun": "Dom.",
    "common_repeat_timer_title": "重复选项",
    "common_repeat_self_timer_title": "自定义重复",
    "common_on": "Ligar",
    "common_off": "Desligar",
    "common_timer": "定时",
    "common_unit_minute_short": "分钟",
    "common_count_down": "{XX}-倒计时",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " °C",
    "common_degree_centigrade_str": "{value} °C",
    "common_plug_today_elec": "今日用电",
    "common_plug_month_elec": "当月用电",
    "common_plug_current_power": "当前功率",
    "mi_comboHub_mainPage_guard": "Guarda",
    "mi_comboHub_mainPage_guard_base": "Básica",
    "mi_comboHub_mainPage_guard_home": "Em casa",
    "mi_comboHub_mainPage_guard_away": "Longe de casa",
    "mi_comboHub_mainPage_guard_sleep": "Repouso",
    "common_comboHub_triggle_device_alert": "Alerta",
    "common_comboHub_triggle_device_opened_guard": "(Recurso habilitado para a guarda {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Só pode ser utilizado para a guarda básica.)",
    "common_comboHub_triggle_device_opened_basic": "(Recurso habilitado para a guarda básica.)",
    "common_setting_homekit_device_desc": "Este dispositivo pode ser configurado e utilizado no app Apple Home.",
    "common_ifttt_triggleName_switch": "Um alerta é acionado quando o status do interruptor é alterado.",
    "common_ifttt_triggleName_vibration": "Um alerta é acionado quando o status é alterado.",
    "common_ifttt_triggleName_cube": "Um alerta é acionado quando o dispositivo é movido após estar inativo por mais de um minuto.",
    "common_ifttt_triggleName_magnet": "Um alerta é acionado quando há uma alteração no status do sensor da porta ou da janela.",
    "common_ifttt_triggleName_motion": "Alguém deve ter se movido e acionado o alerta.",
    "common_timer_light_timer_light_period": "时间段定时",
    "common_timer_light_timer_on": "定时开启",
    "common_timer_light_timer_off": "定时关闭",
    "common_timer_light_timer_time_after": "开始时间在结束时间之后",
    "common_lumi_sensor_setting_battery": "电池电量",
    "common_lumi_sensor_setting_battery_normal": "正常",
    "common_lumi_sensor_battery_guide_title": "更换电池引导",
    "common_lumi_sensor_battery_guide_description": "请打开电池后盖，按照图示更换电池",
    "common_ifttt_suit_apart_fail": "配置部分失败",
    "common_ifttt_suit_success_tips": "可在智能场景列表查看或编辑",
    "common_ifttt_suit_apart_fail_tips": "已创建成功的可在智能场景列表查看或编辑",
    "common_ifttt_suit_not_build": "暂不创建",
    "common_kpa": " kPa",
    "common_battery_power_low": "Low battery, please replace the battery",
    "common_overheat_abnormal": "过温异常",
    "common_overload_abnormal": "过载异常",
    "common_overheat_protect": "过温保护",
    "common_overload_protect": "过载保护",
    "common_overheat_warn": "过温报警",
    "common_overload_warn": "过载报警",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Dispositivo acionador de alarme",
    "mi_comboHub_triggleDevices_deleting": "Excluindo...",
    "mi_comboHub_triggleSubDevices_setting": "Configurando…",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivos que não podem ser ativados",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Quando há dispositivos que monitoram continuamente o ambiente conectado ao hub, como detectores de fumaça e de gás, é possível defini-los como dispositivos acionadores da guarda básica. Ao ser ativado, o dispositivo de guarda básica monitorará seu lar 24 horas por dia, todos os dias.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Foi habilitado como acionador para guarda em casa, guarda longe de casa, ou guarda em repouso, e por isso não pode ser utilizado como guarda básica.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Após definir o acionador, você poderá habilitar o recurso de guarda doméstica.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Foi habilitado como dispositivo acionador para guarda básica, e por isso não pode ser utilizado como guarda em casa.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Após definir o dispositivo acionador, você poderá habilitar o recurso de guarda longe de casa.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Foi habilitado como dispositivo acionador da guarda básica, e por isso não pode ser utilizado como guarda longe de casa.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Após definir o dispositivo acionador, você poderá habilitar a guarda em repouso.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Foi habilitado como dispositivo acionador da guarda básica, e por isso não pode ser utilizado como guarda em repouso.",
    "mi_comboHub_triggle_device_empty_tip": "Não há dispositivos emparelhados com este hub de controle que possam ser utilizados para acionar o alerta, como um sensor de movimento, sensores de janela e porta, ou switch wireless.",
    "mi_comboHub_triggle_device_go_to_bug": "Comprar",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一满足时",
    "mi_ifttt_action": "就执行",
    "mi_commonHub_nightlight_open": "开启夜灯",
    "mi_commonHub_nightlight_motion_limit": "最多只能选择9个人体传感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分钟后关闭夜灯",
    "mi_commonHub_go_back_title": "退出编辑",
    "mi_commonHub_go_back_content": "退出后修改将丢失，是否退出？",
    "mi_commonHub_setting_nightlight": "感应夜灯",
    "mi_commonHub_nightlight_commont": "当{value}所在环境较暗时",
    "mi_commonHub_nightlight_timer": "感应时段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能选择10个网关报警",
    "common_offline": "Offline",
    "mi_commonHub_linkage_alarm_footer_text": "开启联动报警功能的网关中，当任意一个网关报警，其他网关也会联动报警，发出报警铃音和灯光",
    "mi_commonHub_linkage_alarm": "联动报警",
    "mi_commonHub_linkage_alarm_dis": "联动报警取消",
    "mi_commonHub_ring_doorbell": "门铃音",
    "mi_commonHub_ring_knocking": "敲门音",
    "mi_commonHub_ring_funny": "搞笑音",
    "mi_commonHub_ring_alarm_clock": "闹钟音",
    "mi_commonHub_ring_alarm_music": "警戒音",
    "mi_commonHub_ring_policecar1": "警车音1",
    "mi_commonHub_ring_policecar2": "警车音2",
    "mi_commonHub_ring_safety_accident": "安全事故音",
    "mi_commonHub_ring_countdown": "导弹倒计时",
    "mi_commonHub_ring_ghost": "鬼叫声",
    "mi_commonHub_ring_gun": "狙击枪声",
    "mi_commonHub_ring_battle": "激战声",
    "mi_commonHub_ring_airraid": "空袭警报",
    "mi_commonHub_ring_dog": "狗叫声",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "功率高于 {value}",
    "mi_common_power_is_below": "功率低于 {value}",
    "mi_common_please_enter_the_value": "请输入{value}的数值",
    "mi_common_max_value": "最大值为{value}",
    "mi_common_min_value": "最小值为{value}",
    "mi_common_temp_error_fail": "温度过高，请及时检查设备",
    "mi_common_temp_error": "温度过高，已自动断开设备电源。需单击按键或断电解除本次保护，即可继续使用。",
    "mi_common_power_error_fail": "功率过载，请及时检查设备",
    "mi_common_power_error": "功率过载，已自动断开设备电源。需单击按键或断电解除本次保护，即可继续使用。",
    "mi_common_setting_cutOff": "断电记忆",
    "mi_common_setting_cutOff_tps": "来电后，开关保持断电之前的状态",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Tocar continuamente",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} min",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} s",
    "mi_comboHub_guardSetting": "Configurações de guarda",
    "mi_comboHub_guardSetting_delayTime_immediately": "Vigente imediatamente",
    "mi_linuxHub_arming_ring": "报警铃音",
    "mi_comboHub_guardSetting_alarmDuration": "Duração de alerta",
    "mi_comboHub_guardSetting_alarmVolume": "Volume de toque de alerta",
    "mi_comboHub_guardSetting_delayTime": "Contagem regressiva para ativar guarda",
    "mi_common_power_is_up_to": "功率高至{value}",
    "mi_common_power_is_down_to": "功率低至{value}",
    "mi_commonHub_setting_doorbell": "门铃",
    "mi_commonHub_setting_volume_doorbell": "门铃音量",
    "mi_commonHub_setting_push": "手机通知",
    "mi_commonHub_setting_alarmclock": "懒人闹钟",
    "mi_commonHub_guard_go_config": "Definir agora",
    "mi_commonHub_numbers": "个",
    "mi_commonHub_lazy_clock_list": "闹钟列表",
    "mi_commonHub_lazy_clock_close_way": "关闭闹钟方式",
    "mi_commonHub_timersetting_repeat": "重复",
    "mi_commonHub_setting_bell": "铃音",
    "mi_commonHub_setting_volume": "音量",
    "mi_commonHub_add_lazyclock": "添加闹钟",
    "mi_commonHub_lazy_clock_delete": "确认删除所选定时？",
    "mi_commonHub_sure_delete": "确认删除所选项吗？",
    "mi_commonHub_lazy_clock_list_empty": "未添加闹钟",
    "mi_commonHub_lazy_clock_name": "闹钟定时器",
    "mi_commonHub_play_specific_tone": "播放指定铃声",
    "mi_commonHub_tone_volume": "铃声音量",
    "mi_common_timer_list_empty": "还没有添加定时哦",
    "mi_common_check_same_remote": "当前匹配的空调无法支持定时中设定的空调状态，将导致定时不生效，请重新设置定时",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "关闭指示灯",
    "mi_common_close_indicator_light_tips": "每天21:00至09:00关闭指示灯",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "名称不能为空",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置…",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "Descartar operação atual?",
    "mi_common_saving_wait": "Gravando. Aguarde…",
    "mi_common_saving_fail_retry": "Não foi possível gravar, tente novamente.",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "Enviado com sucesso",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operação bem-sucedida",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "按键按一下（必选）",
    "mi_commonHub_must_choose": "必选",
    "mi_commonHub_send_phone_msg": "向手机发送通知",
    "mi_commonHub_ring_the_bell": "响门铃",
    "mi_commonHub_lazy_clock_close": "关闭闹钟",
    "mi_commonHub_system_ringtone": "系统铃音",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "添加",
    "mi_commonHub_guard_alarm_sound_light_settings": "报警声光设置",
    "mi_commonHub_guard_guardian_countdown": "Contagem regressiva de ativação de guarda",
    "mi_commonHub_arming_light_length": "灯光闪烁时长",
    "mi_commonHub_arming_always_flashing": "一直闪",
    "mi_commonHub_arming_not_flashing": "不闪烁",
    "mi_commonHub_linkage_alarm_hint_detail": "联动其他网关一起报警，提升安全等级",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Selecione data",
    "common_month_1": "Jan",
    "common_month_2": "Fev",
    "common_month_3": "Mar",
    "common_month_4": "Abr",
    "common_month_5": "Mai",
    "common_month_6": "Jun",
    "common_month_7": "Jul",
    "common_month_8": "Ago",
    "common_month_9": "Set",
    "common_month_10": "Out",
    "common_month_11": "Nov",
    "common_month_12": "Dez",
    "common_year_month_1": "s%年2月",
    "common_year_month_2": "s%年3月",
    "common_year_month_3": "s%年4月",
    "common_year_month_4": "s%年5月",
    "common_year_month_5": "s%年6月",
    "common_year_month_6": "s%年7月",
    "common_year_month_7": "s%年8月",
    "common_year_month_8": "s%年9月",
    "common_year_month_9": "s%年10月",
    "common_year_month_10": "s%年11月",
    "common_year_month_11": "s%年12月",
    "common_year_month_12": "s%年13月",
    "common_week_mon_short": "Seg.",
    "common_week_tue_short": "Ter.",
    "common_week_wed_short": "Qua.",
    "common_week_thu_short": "Qui.",
    "common_week_fri_short": "Sex.",
    "common_week_sat_short": "Sáb.",
    "common_week_sun_short": "Dom.",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "Uma vez habilitado, o dispositivo só poderá ser excluído por app.",
    "mi_common_protect_delete_app_reduction": "Evita apagamento acidental de descrição",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "日历",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人离开后延时关灯时间",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Compatível com atualizações automáticas do firmware",
    "mi_common_view_details": "Toque para ver os detalhes",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Dispositivos infantis Zigbee",
    "common_hub_bluetooth_subdevice": "Dispositivos infantis Bluetooth"
  };
  exports.default = pt;
},10076,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ru = {
    "langugeName": "俄语",
    "common_setting_title": "Настройки",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "Настройки функции",
    "common_setting_general_setting": "Общие настройки",
    "common_setting_device_name": "Имя устройства",
    "common_setting_multiswitch": "Настройка кнопок",
    "common_setting_device_timeZone": "Региональные настройки",
    "common_setting_location_management": "Управление местоположением",
    "common_setting_share_device": "Предоставление доступа к устройству",
    "common_setting_ifttt_auto": "Автоматизация",
    "common_setting_btGateway": "Bluetooth Mesh-шлюз",
    "common_setting_btGateway_status_read_fail": "Не удалось получить статус Bluetooth Mesh- шлюза",
    "common_setting_btGateway_connected": "Подключённые устройства Bluetooth",
    "common_setting_firmware_upgrate": "Проверка наличия обновлений встроенного ПО",
    "common_setting_more_setting": "Дополнительные настройки",
    "common_setting_add_to_desktop": "Добавить на главный экран",
    "common_setting_privacy_agreement": "Пользовательское соглашение и политика конфиденциальности",
    "common_setting_delete_device": "Удалить устройство",
    "common_setting_help_page": "Справка",
    "common_setting_more_seting_security": "Настройки безопасности",
    "common_setting_more_seting_faq": "Часто задаваемые вопросы",
    "common_setting_more_seting_isssues": "Отзыв",
    "common_setting_user_agreement": "Лицензия на программное обеспечение и соглашение об обслуживании",
    "common_setting_privacy_policy": "Политика конфиденциальности",
    "common_setting_feature_plug_in": "Версия плагина",
    "common_setting_homekit_device_add": "Сопряжение с HomeKit",
    "common_setting_homekit_device_bound": "у нас есть статистика",
    "common_setting_homekit_device_noBind": "несвязанный",
    "common_setting_laboratory": "Функции лаборатории",
    "common_setting_protect_delete": "Защита от удаления",
    "common_log_title": "Журнал",
    "common_log_today": "Сегодня",
    "common_log_yesterday": "Вчера",
    "common_log_no_logs": "Нет журнала",
    "common_log_loading": "Загрузка...",
    "common_log_loading_with_dot": "Загрузка ...",
    "common_log_logDataHasloaded": "Журналы полностью загружены",
    "common_log_all_data_has_been_loaded": "Все данные загружены",
    "common_log_no_data": "Нет данных",
    "common_cancel": "Отмена",
    "common_ok": "ОК",
    "common_manufacturer": "Produit fabriqué par",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Не удается подключиться к сети",
    "common_tips_battery_low": "Низкий уровень заряда аккумулятора",
    "common_tips_iknow": "OK",
    "common_button_done": "Готово",
    "common_button_delete": "Удалить",
    "common_button_retry": "Повторить попытку",
    "common_button_save": "Сохранить",
    "common_tips_delete_succeed": "Удалено",
    "common_tips_delete_failed": "Не удалось удалить",
    "common_tips_loading_failed": "Не удалось загрузить",
    "common_tips_request_failed": "Ошибка запроса. Проверьте сеть.",
    "common_button_prev": "Назад",
    "common_button_next": "Далее",
    "common_button_changename": "Переименовать",
    "common_date_workday": "С понедельника по пятницу",
    "common_date_weekend": "По будням",
    "common_date_selfdefine": "Другой",
    "common_date_mon": "Понедельник",
    "common_date_tues": "Вторник",
    "common_date_wed": "Среда",
    "common_date_thur": "Четверг",
    "common_date_fri": "Пятница",
    "common_date_sat": "Суббота",
    "common_date_sun": "Воскресенье",
    "common_date_day": " День",
    "common_date_week": " Неделя",
    "common_date_month": " Месяц",
    "common_date_hour": " ч",
    "common_date_minute": " мин",
    "common_date_second": " с",
    "common_tips_discard_operation": "Отменить текущую операцию?",
    "common_tips_setting": "Идет установка. Подождите...",
    "common_tips_setting_failed": "Не удалось установить",
    "common_tips_loading_failed_retry": "Не удалось выполнить загрузку. Коснитесь, чтобы повторить попытку",
    "common_tips_shared_no_promision": "У общего устройства нет разрешения",
    "common_electricity": "Статистика электричества",
    "common_power_history": "Запись журнала энергопотребления",
    "common_hardware_update_updating": "Обновление прошивки, подождите…",
    "common_hardware_update_default": "Доступна новая версия прошивки ({version}), обновить сейчас?",
    "common_hardware_update_isforce": "Текущая версия прошивки вашего устройства устарела. Обновите ее до последней версии ({version}).",
    "common_hardware_update": "Обновить",
    "common_out": "Выйти из системы",
    "common_hardware_checkupdate": "Просмотреть данные обновления",
    "common_operation_fail": "Сбой операции",
    "common_repeat_everyday": "Ежедневно",
    "common_repeat_once": "Один раз",
    "common_repeat_tomorrow": "Завтра",
    "comon_unit_kwh": " кВт⋅ч",
    "comon_unit_w": " Вт",
    "common_setting_device_delete_tip": "Устройство будет удалено из списка.",
    "common_setting_device_delete_confirm": "Удалить устройство?",
    "common_voice_mute": "Бесшумный режим",
    "common_voice_high": "Высокая",
    "common_voice_middle": "Средняя",
    "common_voice_low": "Низкая",
    "sub_device_list_title": "Дочернее устройство подключено",
    "sub_device_list_header_tips": "Следующие дочерние устройства уже сопряжены с этим контроллером.",
    "zigbee_sub_device_list_header_tips": "К этому шлюзу подключены следующие дочерние устройства Zigbee",
    "sub_device_list_empty_tips": "Нет подчиненных устройств, сопряженных с этим контроллером для умного дома.",
    "zigbee_sub_device_list_empty_tips": "Нет подчиненных устройств, сопряженных с этим контроллером для умного дома.",
    "sub_device_list_name_cant_empty": "Имя устройства не может быть пустым",
    "sub_device_list_name_cant_support_emoji": "Не поддерживает выражения Emoji",
    "sub_device_list_name_cant_support_special_char": "Имя не может содержать специальные символы",
    "sub_device_list_name_cant_more_forty": "Имя не может превышать 40 символов",
    "sub_device_list_name_cant_same": "Имя устройства не может быть одинаковым",
    "sub_device_list_device_offline": "Устройство не в сети",
    "sub_device_list_selected": "{XX} пункт выбран",
    "sub_device_list_delete_multi_device": "Вы уверены, что хотите удалить выбранные устройства {XX}?",
    "ifttt_triggle_single_press": "Щелкните",
    "ifttt_triggle_double_press": "Нажмите и удерживайте",
    "ifttt_triggle_long_press": "Дважды щелкните",
    "ifttt_triggle_shake": "Потрясите",
    "ifttt_triggle_someone_moved": "Зафиксировано движение",
    "ifttt_triggle_windoor_open": "Дверь или окно открыта(-о)",
    "ifttt_triggle_moved_afteronemin": "Перемещено после одной минуты бездействия",
    "ifttt_triggle_detect_vibration": "Обнаружена вибрация",
    "ifttt_triggle_detect_fall": "Обнаружено падение",
    "ifttt_triggle_detect_tilting": "Ощущение наклона",
    "ifttt_triggle_fire_alert": "Пожарная тревога",
    "ifttt_triggle_gas_leakage_alert": "Обнаружена утечка газа",
    "ifttt_triggle_flood_alert": "Обнаружено подтопление",
    "guard_type_basic": "Основной режим охранной системы",
    "guard_type_home": "Режим охранной системы «Дома»",
    "guard_type_away": "Режим охранной системы «Вне дома»",
    "guard_type_sleep": "Режим охранной системы «Сон»",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Задайте не менее одного дочернего устройства как спусковое устройство для включения режима охранной системы «Дома».",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Задайте не менее одного дочернего устройства как спусковое устройство для включения режима охранной системы «Вне дома».",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Задайте не менее одного дочернего устройства как спусковое устройство для\nвключения режима охранной системы «Сон».",
    "ifttt_push_title_triggle_alert_1": "В {XX} {YY} вызывает тревогу",
    "ifttt_push_title_triggle_alert_2": "В {XX} {YY} чувствует, что кто-то двигается, чтобы вызвать тревогу",
    "ifttt_push_title_triggle_alert_magnet": "{XX} включен, дверь или окно было открыта(-о) и это вызвало сигнал тревоги.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% активен, s% вызвал тревогу.",
    "ifttt_push_title_triggle_alert_3": "В {XX} {YY} включает тревогу триггера",
    "ifttt_push_title_triggle_alert_4": "В {XX}, {YY} чувства перемещаются",
    "ifttt_push_title_triggle_alert_5": "В {XX} {YY} чувствует тревогу затопления",
    "ifttt_push_title_triggle_alert_6": "В {XX} {YY} обнаружена концентрация газа, превышающая стандартную",
    "ifttt_push_title_triggle_alert_7": "В {XX} {YY} обнаружен дым",
    "common_ifttt_scene_execute_result_fail": "Выполнение не удалось",
    "common_ifttt_scene_execute_result_unknow_error": "Ненормальная ошибка",
    "common_ifttt_scene_execute_result_time_out": "Тайм-аут реализации",
    "common_ifttt_scene_execute_result_camera_sleep": "Камера спит",
    "common_ifttt_device_offline": "(Offline)",
    "timersetting_on": "Время начала",
    "timersetting_off": "Время окончания",
    "timersetting_empty": "Не задано",
    "timersetting_perio": "Активно в течение",
    "common_start": "Пуск",
    "common_end": "конец",
    "common_color": "индикатора",
    "common_open": "Включить",
    "common_scene_name_lm_scene_1_1": "Когда сигнал тревоги, кто-то передал сигнал тревоги",
    "common_scene_name_lm_scene_1_2": "Дверь и окно открывают сигнализацию при предупреждении",
    "common_scene_name_lm_scene_1_3": "Когда будильник включен, беспроводной переключатель нажимает на будильник.",
    "common_scene_name_lm_scene_1_4": "При получении оповещения кубик Рубика срабатывает на некоторое время.",
    "common_scene_name_lm_scene_1_5": "При получении предупреждения статические и статические наклейки запускаются в течение двух минут, и срабатывает сигнализация.",
    "common_scene_name_lm_scene_2_1": "Кто-то прошел, ночной свет был освещен",
    "common_scene_name_lm_scene_3_1": "Беспроводной переключатель нажимает на дверной звонок",
    "common_scene_name_lm_scene_3_2": "Дверной звонок срабатывает при открытии двери или окна",
    "common_scene_name_lm_scene_3_3": "Кто-то передал звонок",
    "common_scene_name_lm_scene_4_1": "Выключать будильник при прохождении человека",
    "common_scene_name_lm_scene_4_2": "Выключать будильник при открытии двери или окна",
    "common_scene_name_lm_scene_4_3": "Беспроводной выключатель выключает будильник",
    "common_scene_name_lm_scene_5_1": "Выявление дыма приведет к срабатыванию тревожного сигнала центрального контроллера.",
    "common_scene_name_lm_scene_5_2": "Выявление газа приведет к срабатыванию тревожного сигнала центрального контроллера.",
    "common_scene_name_lm_scene_5_3": "Выявление утечки воды приведет к срабатыванию тревожного сигнала центрального контроллера.",
    "common_close": "Выкл.",
    "common_state_closed": "Отключено",
    "sensor_set_ifttt_config_success": "Настроено",
    "common_automation_configuring": "Настройка автоматизации пакета, пожалуйста, подождите ...",
    "sensor_set_ifttt_config_fail": "Конфигурация не удалась",
    "sensor_set_ifttt_config_fail_tip": "1. Вам необходимо подключить шлюз к Wi-Fi \n2. Вам необходимо подключить телефон к Wi-Fi \n3. Убедитесь, что Wi-Fi работает нормально.",
    "mi_linuxHub_guard_guard_timer": "Время опекуна",
    "mi_linuxHub_timer_light_name": "Фонарь таймер",
    "mi_linuxHub_lazy_clock_name": "Будильник",
    "sensor_set_ifttt_scene_name_1": "Напоминание об открытии двери",
    "sensor_set_ifttt_scene_name_2": "Нажмите на беспроводной переключатель, чтобы включить / выключить ночной свет",
    "sensor_set_ifttt_scene_name_3": "Двойной щелчок по сигналу переключателя беспроводного коммутатора",
    "sensor_set_ifttt_scene_name_4": "Кто-то прошел, ночной свет был освещен",
    "sensor_set_ifttt_scene_name_5": "2 минуты безлюдного ночного света",
    "sensor_set_ifttt_scene_name_6": "Кто-то двигает ночной свет",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Не закрывается более чем через 1 минуту после открытия",
    "sensor_set_ifttt_triggle_name_2": "2 минуты беспилотный",
    "sensor_set_ifttt_triggle_name_3": "Воспроизвести указанный рингтон",
    "sensor_set_ifttt_triggle_name_4": "Вкл / выкл ночной свет",
    "sensor_set_ifttt_triggle_name_5": "Индукционный ночной свет",
    "sensor_set_ifttt_triggle_name_6": "Выключить ночной свет",
    "sensor_set_ifttt_triggle_name_7": "Ночной свет",
    "sensor_set_ifttt_triggle_name_8": "Вкл / выкл предупреждение",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Часть задач успешно завершена",
    "common_short_date_mon": "ПН",
    "common_short_date_tues": "ВТ",
    "common_short_date_wed": "СР",
    "common_short_date_thur": "ЧТ",
    "common_short_date_fri": "ПТ",
    "common_short_date_sat": "СБ",
    "common_short_date_sun": "ВС",
    "common_repeat_timer_title": "Повторить вариант",
    "common_repeat_self_timer_title": "Пользовательское повторение",
    "common_on": "ВКЛ",
    "common_off": "ВЫКЛ",
    "common_timer": "Таймер",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Odliczanie",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Сегодня",
    "common_plug_month_elec": "Месяц",
    "common_plug_current_power": "Ток",
    "mi_comboHub_mainPage_guard": "Oхраны",
    "mi_comboHub_mainPage_guard_base": "Базовый",
    "mi_comboHub_mainPage_guard_home": "Дома",
    "mi_comboHub_mainPage_guard_away": "Вне дома",
    "mi_comboHub_mainPage_guard_sleep": "Сон",
    "common_comboHub_triggle_device_alert": "Оповещение",
    "common_comboHub_triggle_device_opened_guard": "(Включен для режима охранной системы {XX}.)",
    "common_comboHub_triggle_device_only_open_basic": "(Может использоваться толькодля основного режима охранной системы.)",
    "common_comboHub_triggle_device_opened_basic": "(Был включен для основного режима охранной системы.)",
    "common_setting_homekit_device_desc": "Устройство можно настроить и использовать в приложении Apple Home.",
    "common_ifttt_triggleName_switch": "Сигнал оповещения срабатывает, когда изменяется состояние переключателя.",
    "common_ifttt_triggleName_vibration": "Сигнал оповещения срабатывает, когда изменяется состояние.",
    "common_ifttt_triggleName_cube": "Сигнал оповещения срабатывает при обнаружении движения после периода неактивности более 1 минуты.",
    "common_ifttt_triggleName_magnet": "Сигнал оповещения срабатывает, когда изменяется состояние датчика двери или окна.",
    "common_ifttt_triggleName_motion": "Обнаружено движение, вызвавшее срабатывание сигнала оповещения.",
    "common_timer_light_timer_light_period": "Период времени",
    "common_timer_light_timer_on": "Приурочен к",
    "common_timer_light_timer_off": "Тайм-аут",
    "common_timer_light_timer_time_after": "Время начала после времени окончания",
    "common_lumi_sensor_setting_battery": "Аккумулятор",
    "common_lumi_sensor_setting_battery_normal": "Нормальный",
    "common_lumi_sensor_battery_guide_title": "Руководство по замене батареи",
    "common_lumi_sensor_battery_guide_description": "Пожалуйста, снимите крышку батарейного отсека и замените батарею, как показано на рисунке.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Разряженный аккумулятор, замените аккумулятор",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": "люкс",
    "mi_comboHub_mainPage_trigger_devices": "Устройство запуска звукового сигнала",
    "mi_comboHub_triggleDevices_deleting": "Удаление…",
    "mi_comboHub_triggleSubDevices_setting": "Настройка параметров…",
    "mi_comboHub_triggle_device_header_title_1": "Устройства не могут быть включены",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Если к концентратору подключены устройства, которые могут непрерывно контролировать окружающую среду, например детекторы дыма и детекторы газа, вы можете установить их в качестве пусковых устройств базовой защиты. После включения базовая охрана будет контролировать ваш дом 24/7.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Был включен как устройство срабатывания для систем «дома», «вне дома» или «сон» и не может использоваться как основной режим охранной системы.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "После настройки устройства срабатывания можно включить режим охранной системы «дома».",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Был включен как устройство срабатывания для основного режима охранной системы, не может использоваться для режима охранной системы «дома».",
    "mi_comboHub_triggle_device_header1_subtitle_away": "После настройки режима срабатывания можно включить режим охранной системы «вне дома».",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Был включен как устройство срабатывания для основного режима охранной системы, не может использоваться для режима охранной системы «вне дома».",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "После настройки устройства срабатывания можно включить режим охранной системы «сон».",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Был включен как устройство срабатывания для основного режима охранной системы, не может использоваться для режима охранной системы «сон».",
    "mi_comboHub_triggle_device_empty_tip": "С этим контроллером не сопряжено ни одно устройство, способное активировать сигнал оповещения (например, датчик движения, датчик открывания окон и дверей или беспроводной переключатель).",
    "mi_comboHub_triggle_device_go_to_bug": "Купить",
    "mi_commonHub_setting_nightlight_tomorrow": "Следующий день",
    "mi_commonHub_setting_nightlight_allday": "Весь день",
    "mi_ifttt_launch": "Если выполняется любое условие",
    "mi_ifttt_action": "Тогда",
    "mi_commonHub_nightlight_open": "Включить дежурное освещение",
    "mi_commonHub_nightlight_motion_limit": "Можно выбрать только до 9 датчиков человеческого тела.",
    "mi_commonHub_nightlight_delay_close_min": "Выключить дежурное освещение через {value} мин",
    "mi_commonHub_go_back_title": "Выйти",
    "mi_commonHub_go_back_content": "Отменить изменения и выйти?",
    "mi_commonHub_setting_nightlight": "Индукционное ночное освещение",
    "mi_commonHub_nightlight_commont": "Когда {value} в темноте",
    "mi_commonHub_nightlight_timer": "Индукционный период",
    "mi_commonHub_linkage_alarm_number_ten": "Можно выбрать только до 10 сигналов шлюза",
    "common_offline": "Offline",
    "mi_commonHub_linkage_alarm_footer_text": "При срабатывании контроллера для умного дома с активированной функцией обмена тревожными сигналами, будут активированы звуковая сигнализация и мигающие индикаторы всех контроллеров для умного дома.",
    "mi_commonHub_linkage_alarm": "Звуковой сигнал при соединении",
    "mi_commonHub_linkage_alarm_dis": "Звуковой сигнал при соединении отменен",
    "mi_commonHub_ring_doorbell": "Тональный сигнал дверного звонка",
    "mi_commonHub_ring_knocking": "Звук стука в дверь",
    "mi_commonHub_ring_funny": "Веселый тональный сигнал",
    "mi_commonHub_ring_alarm_clock": "Тональный сигнал будильника",
    "mi_commonHub_ring_alarm_music": "Тональный сигнал оповещения",
    "mi_commonHub_ring_policecar1": "Тональный сигнал полицейского автомобиля 1",
    "mi_commonHub_ring_policecar2": "Тональный сигнал полицейского автомобиля 2",
    "mi_commonHub_ring_safety_accident": "Звук при инциденте в области безопасности",
    "mi_commonHub_ring_countdown": "Обратный отсчет",
    "mi_commonHub_ring_ghost": "Крик привидения",
    "mi_commonHub_ring_gun": "Снайперская винтовка",
    "mi_commonHub_ring_battle": "Звук битвы",
    "mi_commonHub_ring_airraid": "Воздушный налет",
    "mi_commonHub_ring_dog": "Лай",
    "mi_commonHub_ring_mimix": "Микс Mi",
    "mi_commonHub_ring_enthusuastic": "Воодушевление",
    "mi_commonHub_ring_guitarclassic": "Классическая гитара",
    "mi_commonHub_ring_iceworldpiano": "Ледяное пианино",
    "mi_commonHub_ring_leisuretime": "Отдых",
    "mi_commonHub_ring_childhood": "Детство",
    "mi_commonHub_ring_morningstreamllet": "Ручеек",
    "mi_commonHub_ring_musicbox": "Шарманка",
    "mi_commonHub_ring_orange": "Апельсин",
    "mi_commonHub_ring_thinker": "Раздумья",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Память сбоев питания",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Повторяющийся звонок",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} мин",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} с",
    "mi_comboHub_guardSetting": "Настройки охранной системы",
    "mi_comboHub_guardSetting_delayTime_immediately": "Вступает в силу немедленно",
    "mi_linuxHub_arming_ring": "Мелодия звукового сигнала",
    "mi_comboHub_guardSetting_alarmDuration": "Продолжительность сигнала оповещения",
    "mi_comboHub_guardSetting_alarmVolume": "Громкость тонального сигнала оповещения",
    "mi_comboHub_guardSetting_delayTime": "Отсчет активации охраны",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Дверной звонок",
    "mi_commonHub_setting_volume_doorbell": "Громкость дверного звонка",
    "mi_commonHub_setting_push": "Оповещение на смартфон",
    "mi_commonHub_setting_alarmclock": "Будильник",
    "mi_commonHub_guard_go_config": "Задать",
    "mi_commonHub_numbers": "шт.",
    "mi_commonHub_lazy_clock_list": "Список будильников",
    "mi_commonHub_lazy_clock_close_way": "Режим выключения будильника",
    "mi_commonHub_timersetting_repeat": "повторение",
    "mi_commonHub_setting_bell": "Рингтон",
    "mi_commonHub_setting_volume": "Громкость",
    "mi_commonHub_add_lazyclock": "Добавить будильник",
    "mi_commonHub_lazy_clock_delete": "Удалить выбранный таймер?",
    "mi_commonHub_sure_delete": "Вы уверены, что хотите удалить выбранный элемент?",
    "mi_commonHub_lazy_clock_list_empty": "Будильники не добавлены",
    "mi_commonHub_lazy_clock_name": "Будильник",
    "mi_commonHub_play_specific_tone": "Воспроизвести указанную мелодию",
    "mi_commonHub_tone_volume": "Громкость мелодии",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Выключить индикатор",
    "mi_common_close_indicator_light_tips": "Выключить индикатор с 21:00 до 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "Очистить маршрут",
    "mi_common_clear_position_comfirm_tip": "Очистить текущий маршрут штор?",
    "mi_common_clear_position_success": "Очистка успешно завершена",
    "mi_common_adjust_direction": "Регулировка направления открытия / закрытия шторы",
    "mi_common_adjust": "Отрегулировать",
    "mi_common_adjust_success": "Регулировка успешно завершена",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Имя  не может быть пустым",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "Открыть на {progress}%",
    "mi_common_opened_fully": "Полностью открыты",
    "mi_common_closed_fully": "Полностью закрыты",
    "mi_common_setting_success": "Настройка успешно завершена",
    "mi_common_setting": "Настройка…",
    "mi_common_control_curtain_manually": "Открыть / закрыть шторы вручную",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "Стиль штор",
    "mi_common_curtain_install_guide": "Руководство по настройке маршрута",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "Открыть шторы до указанного места",
    "mi_curtain_open_to": "Открыть шторы на {progress}%",
    "mi_curtain_style_double": "Открыть обе шторы",
    "mi_curtain_style_double_simple": "Открыть обе",
    "mi_curtain_style_left": "Открыть штору слева",
    "mi_curtain_style_left_simple": "Открыть слева",
    "mi_curtain_style_right": "Открыть штору справа",
    "mi_curtain_style_right_simple": "Открыть справа",
    "mi_common_discard_operation": "Отменить текущую операцию?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Не удалось сохранить. Повторите попытку.",
    "mi_curtain_common_open": "Открыть",
    "mi_curtain_common_close": "Закрыть",
    "mi_curtain_common_pause": "Пауза",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Одиночное нажатие (необходимо)",
    "mi_commonHub_must_choose": "требуется",
    "mi_commonHub_send_phone_msg": "Отправка оповещения на смартфон",
    "mi_commonHub_ring_the_bell": "Дверной звонок",
    "mi_commonHub_lazy_clock_close": "Отключить будильник",
    "mi_commonHub_system_ringtone": "Системный звонок",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "добавлять",
    "mi_commonHub_guard_alarm_sound_light_settings": "Настройки звуковых сигналов и световых индикаторов оповещения",
    "mi_commonHub_guard_guardian_countdown": "Отсчет активации охраны",
    "mi_commonHub_arming_light_length": "Продолжительность мигания светового индикатора",
    "mi_commonHub_arming_always_flashing": "Всегда звенеть",
    "mi_commonHub_arming_not_flashing": "Не мигать",
    "mi_commonHub_linkage_alarm_hint_detail": "Соединение с другими шлюзами для отправки звукового сигнала и повышения безопасности",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Выберите дату",
    "common_month_1": "Январь ",
    "common_month_2": "Февраль",
    "common_month_3": "Март ",
    "common_month_4": "Апрель ",
    "common_month_5": "Май ",
    "common_month_6": "Июнь ",
    "common_month_7": "Июль ",
    "common_month_8": "Август ",
    "common_month_9": "Сентябрь ",
    "common_month_10": "Октябрь ",
    "common_month_11": "Ноябрь ",
    "common_month_12": "Декабрь",
    "common_year_month_1": "s% год Январь",
    "common_year_month_2": "s% год Февраль",
    "common_year_month_3": "s% год Март",
    "common_year_month_4": "s% год Апрель",
    "common_year_month_5": "s% год Май",
    "common_year_month_6": "s% год Июнь",
    "common_year_month_7": "s% год Июль",
    "common_year_month_8": "s% год Август",
    "common_year_month_9": "s% год Сентябрь",
    "common_year_month_10": "s% год Октябрь",
    "common_year_month_11": "s% год Ноябрь",
    "common_year_month_12": "s% год Декабрь",
    "common_week_mon_short": "Понедельник",
    "common_week_tue_short": "Вторник",
    "common_week_wed_short": "Среда",
    "common_week_thu_short": "Четверг",
    "common_week_fri_short": "Пятница",
    "common_week_sat_short": "Суббота",
    "common_week_sun_short": "Воскресенье",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Календарь",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " мин",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "Задержка при выключении света после ухода людей",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Поддержка автоматического обновления встроенного ПО",
    "mi_common_view_details": "Коснитесь, чтобы просмотреть сведения",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Дочерние устройства Zigbee",
    "common_hub_bluetooth_subdevice": "Дочерние устройства Bluetooth"
  };
  exports.default = ru;
},10079,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var th = {
    "langugeName": "泰语",
    "common_setting_title": "การตั้งค่า",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "การตั้งค่าฟังก์ชั่น",
    "common_setting_general_setting": "การตั้งค่าทั่วไป",
    "common_setting_device_name": "ชื่ออุปกรณ์",
    "common_setting_multiswitch": "การตั้งค่าปุ่ม",
    "common_setting_device_timeZone": "การตั้งค่าภูมิภาค",
    "common_setting_location_management": "การจัดการตำแหน่งที่ตั้ง",
    "common_setting_share_device": "กำลังแชร์อุปกรณ์",
    "common_setting_ifttt_auto": "ระบบอัตโนมัติ",
    "common_setting_btGateway": "บลูทูธเมชเกตเวย์",
    "common_setting_btGateway_status_read_fail": "ไม่สามารถกู้คืนสถานะของบลูทูธเมชเกตเวย์ได้",
    "common_setting_btGateway_connected": "อุปกรณ์บลูทูธที่เชื่อมต่อ",
    "common_setting_firmware_upgrate": "ตรวจสอบหาการอัปเดตเฟิร์มแวร์",
    "common_setting_more_setting": "การตั้งค่าเพิ่มเติม",
    "common_setting_add_to_desktop": "เพิ่มไปยังหน้าโฮม",
    "common_setting_privacy_agreement": "ข้อตกลงผู้ใช้งานและนโยบายความเป็นส่วนตัว",
    "common_setting_delete_device": "ลบอุปกรณ์",
    "common_setting_help_page": "ความช่วยเหลือ",
    "common_setting_more_seting_security": "การตั้งค่าความปลอดภัย",
    "common_setting_more_seting_faq": "คำถามที่พบบ่อย",
    "common_setting_more_seting_isssues": "คำติชม",
    "common_setting_user_agreement": "สิทธิในการใช้งานซอฟต์แวร์และข้อตกลงการให้บริการ",
    "common_setting_privacy_policy": "นโยบายความเป็นส่วนตัว",
    "common_setting_feature_plug_in": "เวอร์ชันปลั๊กอิน",
    "common_setting_homekit_device_add": "จับคู่กับ HomeKit",
    "common_setting_homekit_device_bound": "ขอบเขต",
    "common_setting_homekit_device_noBind": "หลุด",
    "common_setting_laboratory": "ห้องทดลองการฟังก์ชัน",
    "common_setting_protect_delete": "การป้องกันการลบ",
    "common_log_title": "รายการบันทึก",
    "common_log_today": "วันนี้",
    "common_log_yesterday": "เมื่อวานนี้",
    "common_log_no_logs": "ไม่มีรายการบันทึก",
    "common_log_loading": "กำลังโหลด",
    "common_log_loading_with_dot": "กำลังโหลด...",
    "common_log_logDataHasloaded": "รายการบันทึกได้รับการโหลดเรียบร้อย",
    "common_log_all_data_has_been_loaded": "ข้อมูลทั้งหมดได้รับการโหลดแล้ว",
    "common_log_no_data": "ไม่มีข้อมูล",
    "common_cancel": "ยกเลิก",
    "common_ok": "ตกลง",
    "common_manufacturer": "ผลิตโดย",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "ไม่สามารถเชื่อมต่อกับเครือข่ายได้",
    "common_tips_battery_low": "แบตเตอรี่ต่ำ",
    "common_tips_iknow": "ตกลง",
    "common_button_done": "เสร็จสิ้น",
    "common_button_delete": "ลบ",
    "common_button_retry": "ลองอีกครั้ง",
    "common_button_save": "บันทึก",
    "common_tips_delete_succeed": "ทำการลบเรียบร้อย",
    "common_tips_delete_failed": "ไม่สามารถทำการลบได้",
    "common_tips_loading_failed": "ไม่สามารถโหลดได้",
    "common_tips_request_failed": "ไม่สามารถส่งคำร้องขอได้ ตรวจสอบเครือข่ายของคุณ",
    "common_button_prev": "ย้อนกลับ",
    "common_button_next": "ถัดไป",
    "common_button_changename": "ตั้งชื่อใหม่",
    "common_date_workday": "จันทร์ถึงศุกร์",
    "common_date_weekend": "สุดสัปดาห์",
    "common_date_selfdefine": "กำหนดเอง",
    "common_date_mon": "จันทร์",
    "common_date_tues": "อังคาร",
    "common_date_wed": "พุธ",
    "common_date_thur": "พฤหัสฯ",
    "common_date_fri": "ศุกร์",
    "common_date_sat": "เสาร์",
    "common_date_sun": "อาทิตย์",
    "common_date_day": " วัน",
    "common_date_week": " สัปดาห์",
    "common_date_month": " เดือน",
    "common_date_hour": " ชม.",
    "common_date_minute": " นาที",
    "common_date_second": " วินาที",
    "common_tips_discard_operation": "ยกเลิกการดำเนินการในปัจจุบันหรือไม่?",
    "common_tips_setting": "กำลังตั้งค่าโปรดรอ ...",
    "common_tips_setting_failed": "การตั้งค่าล้มเหลว",
    "common_tips_loading_failed_retry": "ไม่สามารถโหลดได้ แตะเพื่อลองอีกครั้ง",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "สถิติไฟฟ้า",
    "common_power_history": "บันทึกประวัติพลังงาน",
    "common_hardware_update_updating": "กำลังอัปเดตเฟิร์มแวร์ กรุณารอ…",
    "common_hardware_update_default": "มีเฟิร์มแวร์เวอร์ชั่นใหม่ ({version}) พร้อมใช้งาน จะอัปเดตเลยหรือไม่",
    "common_hardware_update_isforce": "เวอร์ชันเฟิร์มแวร์ในปัจจุบันของอุปกรณ์ของคุณเป็นเวอร์ชันเก่า กรุณาอัปเดตเป็นเวอร์ชันล่าสุด ({version})",
    "common_hardware_update": "อัปเดตตอนนี้เลย",
    "common_out": "ลงชื่อออก",
    "common_hardware_checkupdate": "ดูการอัปเดต",
    "common_operation_fail": "การดำเนินการล้มเหลว",
    "common_repeat_everyday": "ทุกวัน",
    "common_repeat_once": "ครั้งหนึ่ง",
    "common_repeat_tomorrow": "วันพรุ่งนี้",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "อุปกรณ์นี้จะถูกลบออกจากรายการ",
    "common_setting_device_delete_confirm": "ลบอุปกรณ์หรือไม่",
    "common_voice_mute": "เงียบ",
    "common_voice_high": "สูง",
    "common_voice_middle": "ปานกลาง",
    "common_voice_low": "ต่ำ",
    "sub_device_list_title": "รายชื่ออุปกรณ์สำหรับเด็ก",
    "sub_device_list_header_tips": "อุปกรณ์สำหรับเด็กดังต่อไปนี้ได้รับการจับคู่กับฮับนี้แล้ว",
    "zigbee_sub_device_list_header_tips": "อุปกรณ์สำหรับเด็ก Zigbee ดังต่อไปนี้เชื่อมต่อเข้ากับเกตเวย์นี้",
    "sub_device_list_empty_tips": "ไม่มีอุปกรณ์สำหรับเด็กซึ่งได้รับการจับคู่กับฮับควบคุมนี้",
    "zigbee_sub_device_list_empty_tips": "ไม่มีอุปกรณ์สำหรับเด็กซึ่งได้รับการจับคู่กับฮับควบคุมนี้",
    "sub_device_list_name_cant_empty": "ชื่ออุปกรณ์ต้องไม่ว่างเปล่า",
    "sub_device_list_name_cant_support_emoji": "ไม่รองรับการแสดงออกอิโมจิ",
    "sub_device_list_name_cant_support_special_char": "ชื่อต้องไม่มีสัญลักษณ์พิเศษ",
    "sub_device_list_name_cant_more_forty": "ชื่อต้องไม่เกิน 40 ตัวอักษร",
    "sub_device_list_name_cant_same": "ชื่ออุปกรณ์ต้องไม่เหมือนกัน",
    "sub_device_list_device_offline": "อุปกรณ์ออฟไลน์",
    "sub_device_list_selected": "เลือก {XX} รายการ",
    "sub_device_list_delete_multi_device": "คุณแน่ใจว่าจะลบอุปกรณ์ {XX} ที่เลือกหรือไม่",
    "ifttt_triggle_single_press": "คลิก",
    "ifttt_triggle_double_press": "กดค้างไว้",
    "ifttt_triggle_long_press": "ดับเบิลคลิก",
    "ifttt_triggle_shake": "เขย่า",
    "ifttt_triggle_someone_moved": "มีคนย้ายไปแล้ว",
    "ifttt_triggle_windoor_open": "หน้าต่าง/ประตูเปิดอยู่",
    "ifttt_triggle_moved_afteronemin": "ย้ายหลังจากไม่มีกิจกรรมหนึ่งนาที",
    "ifttt_triggle_detect_vibration": "ตรวจพบการสั่นสะเทือน",
    "ifttt_triggle_detect_fall": "ตรวจพบการร่วงหล่น",
    "ifttt_triggle_detect_tilting": "การตรวจจับการเอียง",
    "ifttt_triggle_fire_alert": "การแจ้งเหตุเพลิงไหม้",
    "ifttt_triggle_gas_leakage_alert": "การแจ้งเตือนการรั่วของก๊าซ",
    "ifttt_triggle_flood_alert": "การแจ้งเตือนน้ำท่วม",
    "guard_type_basic": "การปกป้องขั้นพื้นฐาน",
    "guard_type_home": "การปกป้องเมื่ออยู่บ้าน",
    "guard_type_away": "การปกป้องเมื่อไม่อยู่บ้าน",
    "guard_type_sleep": "การปกป้องในยามหลับ",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "กรุณาตั้งค่าอุปกรณ์สำหรับเด็กในฐานะที่เป็นอุปกรณ์สั่งงานอย่างน้อยหนึ่งอุปกรณ์เพื่อเปิดใช้งานการปกป้องเมื่ออยู่บ้าน",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "กรุณาตั้งค่าอุปกรณ์สำหรับเด็กในฐานะที่เป็นอุปกรณ์สั่งงานอย่างน้อยหนึ่งอุปกรณ์เพื่อเปิดใช้งานการปกป้องเมื่อไม่อยู่บ้าน",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "กรุณาตั้งค่าอุปกรณ์สำหรับเด็กในฐานะที่เป็นอุปกรณ์สั่งงานอย่างน้อยหนึ่งอุปกรณ์เพื่อเปิดใช้งานการปกป้องในยามหลับ",
    "ifttt_push_title_triggle_alert_1": "ใน {XX} {YY} ทริกเกอร์การเตือน",
    "ifttt_push_title_triggle_alert_2": "ใน {XX}, {YY} จะรู้สึกว่ามีใครบางคนกำลังเคลื่อนไหวเพื่อส่งสัญญาณ",
    "ifttt_push_title_triggle_alert_magnet": "{XX} ทำงานอยู่ เซ็นเซอร์ประตูหรือหน้าต่างได้ทำให้เกิดการแจ้งเตือน",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "%d ทำงานอยู่ %s สั่งการการแจ้งเตือนแล้ว",
    "ifttt_push_title_triggle_alert_3": "ใน {XX}, {YY} จะเปิดการแจ้งเตือนทริกเกอร์",
    "ifttt_push_title_triggle_alert_4": "ใน {XX} มีการเคลื่อนไหวประสาทสัมผัส {YY}",
    "ifttt_push_title_triggle_alert_5": "ใน {XX}, {YY} จะตรวจจับสัญญาณเตือนน้ำท่วม",
    "ifttt_push_title_triggle_alert_6": "ใน {XX}, {YY} ตรวจพบความเข้มข้นของก๊าซเกินมาตรฐาน",
    "ifttt_push_title_triggle_alert_7": "ใน {XX}, {YY} ตรวจพบควัน",
    "common_ifttt_scene_execute_result_fail": "การดำเนินการล้มเหลว",
    "common_ifttt_scene_execute_result_unknow_error": "ข้อผิดพลาดที่ผิดปกติ",
    "common_ifttt_scene_execute_result_time_out": "หมดเวลาการใช้งาน",
    "common_ifttt_scene_execute_result_camera_sleep": "กล้องกำลังหลับ",
    "common_ifttt_device_offline": "(ออฟไลน์)",
    "timersetting_on": "เวลาที่เริ่ม",
    "timersetting_off": "เวลาสิ้นสุด",
    "timersetting_empty": "ไม่ได้ตั้งค่า",
    "timersetting_perio": "ใช้งานสำหรับ",
    "common_start": "เริ่ม",
    "common_end": "ปลาย",
    "common_color": "สี",
    "common_open": "เปิดใช้งาน",
    "common_scene_name_lm_scene_1_1": "เมื่อมีการแจ้งเตือนมีคนส่งสัญญาณเตือน",
    "common_scene_name_lm_scene_1_2": "เปิดประตูและหน้าต่างแจ้งเตือนเมื่อมีการแจ้งเตือน",
    "common_scene_name_lm_scene_1_3": "เมื่อเปิดสัญญาณเตือนสวิตช์ไร้สายจะกดสัญญาณเตือน",
    "common_scene_name_lm_scene_1_4": "เมื่อมีการแจ้งเตือน Cube ของ Rubik จะเริ่มทำงานชั่วขณะหนึ่ง",
    "common_scene_name_lm_scene_1_5": "เมื่อมีการแจ้งเตือนสติกเกอร์คงที่และคงที่จะถูกเรียกใช้เป็นเวลาสองนาทีและการแจ้งเตือนจะถูกเรียก",
    "common_scene_name_lm_scene_2_1": "มีคนผ่านไปแสงกลางคืนส่องสว่าง",
    "common_scene_name_lm_scene_3_1": "สวิตช์ไร้สายกดออด",
    "common_scene_name_lm_scene_3_2": "กริ่งประตูจะดังเมื่อประตู/หน้าต่างเปิดอยู่",
    "common_scene_name_lm_scene_3_3": "มีคนส่งเสียงระฆัง",
    "common_scene_name_lm_scene_4_1": "ปิดนาฬิกาปลุกเมื่อมีคนเดินผ่าน",
    "common_scene_name_lm_scene_4_2": "ปิดนาฬิกาปลุกเมื่อประตู/หน้าต่างเปิดอยู่",
    "common_scene_name_lm_scene_4_3": "สวิตช์ไร้สายกดปิดการเตือน",
    "common_scene_name_lm_scene_5_1": "การตรวจจพบควันจะเริ่มการแจ้งเตือนของศูนย์กลาง",
    "common_scene_name_lm_scene_5_2": "การตรวจจพบก๊าซจะเริ่มการแจ้งเตือนของศูนย์กลาง",
    "common_scene_name_lm_scene_5_3": "การตรวจจพบการรั่วของน้ำจะเริ่มการแจ้งเตือนของศูนย์กลาง",
    "common_close": "ปิด",
    "common_state_closed": "ปิดใช้งานแล้ว",
    "sensor_set_ifttt_config_success": "การกำหนดค่าที่ประสบความสำเร็จ",
    "common_automation_configuring": "กำลังกำหนดค่าแพ็คเกจอัตโนมัติโปรดรอ ...",
    "sensor_set_ifttt_config_fail": "การกำหนดค่าล้มเหลว",
    "sensor_set_ifttt_config_fail_tip": "1. คุณต้องเชื่อมต่อเกตเวย์กับ wifi \n2 คุณต้องเชื่อมต่อโทรศัพท์ของคุณกับ wifi \n3 โปรดตรวจสอบว่า wifi เป็นเรื่องปกติ",
    "mi_linuxHub_guard_guard_timer": "เวลาการ์เดียน",
    "mi_linuxHub_timer_light_name": "โคมไฟจับเวลา",
    "mi_linuxHub_lazy_clock_name": "นาฬิกาปลุก",
    "sensor_set_ifttt_scene_name_1": "เตือนการเปิดประตู",
    "sensor_set_ifttt_scene_name_2": "คลิกสวิตช์ไร้สายเพื่อเปิด / ปิดไฟกลางคืน",
    "sensor_set_ifttt_scene_name_3": "ดับเบิลคลิกที่สวิตช์แจ้งเตือนสวิตช์ไร้สาย",
    "sensor_set_ifttt_scene_name_4": "มีคนผ่านไปแสงกลางคืนส่องสว่าง",
    "sensor_set_ifttt_scene_name_5": "ไฟกลางคืนไร้คนขับ 2 นาทีดับลง",
    "sensor_set_ifttt_scene_name_6": "มีคนย้ายไฟกลางคืนบน",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "ไม่ปิดหลังจากเกิน 1 นาทีหลังจากเปิด",
    "sensor_set_ifttt_triggle_name_2": "หมดกำลังใจ 2 นาที",
    "sensor_set_ifttt_triggle_name_3": "เล่นเสียงเรียกเข้าที่ระบุ",
    "sensor_set_ifttt_triggle_name_4": "เปิด / ปิดไฟกลางคืน",
    "sensor_set_ifttt_triggle_name_5": "แสงกลางคืนเหนี่ยวนำ",
    "sensor_set_ifttt_triggle_name_6": "ปิดไฟกลางคืน",
    "sensor_set_ifttt_triggle_name_7": "ไฟกลางคืน",
    "sensor_set_ifttt_triggle_name_8": "เปิด / ปิดการแจ้งเตือน",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "งานส่วนหนึ่งเสร็จสมบูรณ์เป็นที่เรียบร้อยแล้ว",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "Herhaal optie",
    "common_repeat_self_timer_title": "Aangepaste herhaling",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-Countdown",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " เซลเซียส",
    "common_degree_centigrade_str": "{value} เซลเซียส",
    "common_plug_today_elec": "วันนี้",
    "common_plug_month_elec": "เดือน",
    "common_plug_current_power": "ปัจจุบัน",
    "mi_comboHub_mainPage_guard": "การปกป้อง",
    "mi_comboHub_mainPage_guard_base": "ขั้นพื้นฐาน",
    "mi_comboHub_mainPage_guard_home": "เมื่ออยู่บ้าน",
    "mi_comboHub_mainPage_guard_away": "เมื่อไม่อยู่บ้าน",
    "mi_comboHub_mainPage_guard_sleep": "ในยามหลับ",
    "common_comboHub_triggle_device_alert": "การแจ้งเตือน",
    "common_comboHub_triggle_device_opened_guard": "(ถูกเปิดใช้งานสำหรับการปกป้อง {XX})",
    "common_comboHub_triggle_device_only_open_basic": "(สามารถใช้ได้กับการปกป้องขั้นพื้นฐานเท่านั้น)",
    "common_comboHub_triggle_device_opened_basic": "(ถูกเปิดใช้งานสำหรับการปกป้องขั้นพื้นฐาน)",
    "common_setting_homekit_device_desc": "สามารถปรับแต่งและใช้งานอุปกรณ์ในแอป Apple Home ได้",
    "common_ifttt_triggleName_switch": "การแจ้งเตือนจะถูกสั่งงานเมื่อสถานะของสวิตช์มีการเปลี่ยนแปลง",
    "common_ifttt_triggleName_vibration": "การแจ้งเตือนจะถูกสั่งงานเมื่อสถานะมีการเปลี่ยนแปลง",
    "common_ifttt_triggleName_cube": "การแจ้งเตือนจะทำงานเมื่อมีการขยับหลังจากไม่ทำงานมานานเกิน 1 นาที",
    "common_ifttt_triggleName_magnet": "การแจ้งเตือนจะถูกสั่งงานเมื่อสถานะของเซ็นเซอร์ประตูหรือหน้าต่างมีการเปลี่ยนแปลง",
    "common_ifttt_triggleName_motion": "มีคนขยับและทำให้การแจ้งเตือนทำงาน",
    "common_timer_light_timer_light_period": "ระยะเวลา",
    "common_timer_light_timer_on": "หมดเวลาแล้ว",
    "common_timer_light_timer_off": "หมดเวลา",
    "common_timer_light_timer_time_after": "เวลาเริ่มหลังจากสิ้นสุดเวลา",
    "common_lumi_sensor_setting_battery": "แบตเตอรี่",
    "common_lumi_sensor_setting_battery_normal": "ปกติ",
    "common_lumi_sensor_battery_guide_title": "คู่มือการเปลี่ยนแบตเตอรี",
    "common_lumi_sensor_battery_guide_description": "กรุณานำฝาครอบแบตเตอรีออกและเปลี่ยนแบตเตอรีตามที่แสดงในรูป",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "แบตเตอรี่อ่อน โปรดเปลี่ยนแบตเตอรี่",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": "ลักซ์",
    "mi_comboHub_mainPage_trigger_devices": "อุปกรณ์สั่งงานการแจ้งเตือน",
    "mi_comboHub_triggleDevices_deleting": "กำลังลบ...",
    "mi_comboHub_triggleSubDevices_setting": "กำลังปรับแต่ง…",
    "mi_comboHub_triggle_device_header_title_1": "อุปกรณ์ที่ไม่สามารถเปิดใช้งานได้",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "เมื่อมีอุปกรณ์ต่างๆ ที่สามารถติดตามสภาพแวดล้อมที่เชื่อมต่อเข้ากับศูนย์กลางได้อย่างต่อเนื่อง เช่น อุปกรณ์ตรวจจับควันและอุปกรณ์ตรวจจับก๊าซ คุณจะสามารถตั้งค่าให้อุปกรณ์ดังกล่าวเป็นอุปกรณ์สั่งงานของการป้องกันพื้นฐานได้ เมื่อเปิดใช้งานแล้ว การป้องกันพื้นฐานจะติดตามบ้านของคุณตลอด 24 ชั่วโมงทุกวัน",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "ถูกเปิดใช้งานเป็นอุปกรณ์สั่งงานเมื่ออยู่บ้าน เมื่อไม่อยู่บ้านหรือในยามหลับ ไม่สามารถใช้กับการปกป้องขั้นพื้นฐานได้",
    "mi_comboHub_triggle_device_header1_subtitle_home": "หลังตั้งค่าอุปกรณ์สั่งงานแล้ว คุณสามารถเปิดใช้งานการปกป้องเมื่ออยู่บ้านได้",
    "mi_comboHub_triggle_device_header2_subtitle_home": "ถูกเปิดใช้งานเป็นอุปกรณ์สั่งงานสำหรับการปกป้องขั้นพื้นฐาน ไม่สามารถใช้กับการปกป้องเมื่ออยู่บ้านได้",
    "mi_comboHub_triggle_device_header1_subtitle_away": "หลังตั้งค่าอุปกรณ์สั่งงานแล้ว คุณสามารถเปิดใช้งานการปกป้องเมื่อไม่อยู่บ้านได้",
    "mi_comboHub_triggle_device_header2_subtitle_away": "ถูกเปิดใช้งานเป็นอุปกรณ์สั่งงานสำหรับการปกป้องขั้นพื้นฐาน ไม่สามารถใช้กับการปกป้องเมื่อไม่อยู่บ้านได้",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "หลังตั้งค่าอุปกรณ์สั่งงานแล้ว คุณสามารถเปิดใช้งานการปกป้องในยามหลับได้",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "ถูกเปิดใช้งานเป็นอุปกรณ์สั่งงานสำหรับการปกป้องขั้นพื้นฐาน ไม่สามารถใช้กับการปกป้องในยามหลับได้",
    "mi_comboHub_triggle_device_empty_tip": "ไม่มีอุปกรณ์ที่สามารถใช้ได้ในการสั่งงานการแจ้งเตือนได้รับการจับคู่กับฮับควบคุมนี้ เช่น เซ็นเซอร์ตรวจจับความเคลื่อนไหว เซ็นเซอร์หน้าต่างและประตูหรือสวิตซ์ไร้สาย",
    "mi_comboHub_triggle_device_go_to_bug": "ซื้อ",
    "mi_commonHub_setting_nightlight_tomorrow": "วันถัดไป",
    "mi_commonHub_setting_nightlight_allday": "ทั้งวัน",
    "mi_ifttt_launch": "หากตรงตามเงื่อนไขข้อใดข้อหนึ่ง",
    "mi_ifttt_action": "จากนั้น",
    "mi_commonHub_nightlight_open": "เปิดแสงกลางคืน",
    "mi_commonHub_nightlight_motion_limit": "สามารถเลือกเซ็นเซอร์ร่างกายมนุษย์ได้สูงสุด 9 ตัวเท่านั้น",
    "mi_commonHub_nightlight_delay_close_min": "ปิดแสงกลางคืนใน {value} นาที",
    "mi_commonHub_go_back_title": "ออก",
    "mi_commonHub_go_back_content": "ยกเลิกการเปลี่ยนแปลงและออกตอนนี้เลยหรือไม่?",
    "mi_commonHub_setting_nightlight": "แสงกลางคืนอัตโนมัติ",
    "mi_commonHub_nightlight_commont": "เมื่อ {value} อยู่ในที่มืด",
    "mi_commonHub_nightlight_timer": "ระยะเวลาการเหนี่ยวนำ",
    "mi_commonHub_linkage_alarm_number_ten": "เลือกสัญญาณเตือนเกตเวย์ได้สูงสุด 10 รายการเท่านั้น",
    "common_offline": "ออฟไลน์",
    "mi_commonHub_linkage_alarm_footer_text": "เมื่อเปิดใช้งานฟังก์ชันการเชื่อมต่อการแจ้งเตือนของฮับควบคุมและฮับควบคุมได้รับการสั่งงาน เสียงแจ้งเตือนและไฟกะพริบของฮับควบคุมทั้งหมดจะทำงาน",
    "mi_commonHub_linkage_alarm": "การแจ้งเตือนการเชื่อมต่อ",
    "mi_commonHub_linkage_alarm_dis": "ยกเลิกการแจ้งเตือนการเชื่อมต่อแล้ว",
    "mi_commonHub_ring_doorbell": "เสียงกริ่งประตู",
    "mi_commonHub_ring_knocking": "เสียงเคาะประตู",
    "mi_commonHub_ring_funny": "เสียงตลกๆ",
    "mi_commonHub_ring_alarm_clock": "เสียงนาฬิกาปลุก",
    "mi_commonHub_ring_alarm_music": "เสียงแจ้งเตือน",
    "mi_commonHub_ring_policecar1": "เสียงรถตำรวจ 1",
    "mi_commonHub_ring_policecar2": "เสียงรถตำรวจ 2",
    "mi_commonHub_ring_safety_accident": "เสียงอุบัติเหตุและความปลอดภัย",
    "mi_commonHub_ring_countdown": "เสียงนับถอยหลังการปล่อยชีปนาวุธ",
    "mi_commonHub_ring_ghost": "เสียงร้องของผี",
    "mi_commonHub_ring_gun": "เสียงปืนไรเฟิลของสไนเปอร์",
    "mi_commonHub_ring_battle": "เสียงการสู้รบ",
    "mi_commonHub_ring_airraid": "เสียงเตือนการโจมตีทางอากาศ",
    "mi_commonHub_ring_dog": "เสียงเห่า",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "ดังต่อเนื่อง",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} นาที",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} วินาที",
    "mi_comboHub_guardSetting": "การตั้งค่าการปกป้อง",
    "mi_comboHub_guardSetting_delayTime_immediately": "มีผลทันที",
    "mi_linuxHub_arming_ring": "เสียงแจ้งเตือนของฮับ",
    "mi_comboHub_guardSetting_alarmDuration": "ระยะเวลาของการแจ้งเตือน",
    "mi_comboHub_guardSetting_alarmVolume": "ระดับเสียงของเสียงแจ้งเตือน",
    "mi_comboHub_guardSetting_delayTime": "นับถอยหลังในการเปิดใช้งานการปกป้อง",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "กริ่งประตู",
    "mi_commonHub_setting_volume_doorbell": "ระดับเสียงของกริ่งประตู",
    "mi_commonHub_setting_push": "การแจ้งเตือนของโทรศัพท์",
    "mi_commonHub_setting_alarmclock": "ปลุกซ้ำ",
    "mi_commonHub_guard_go_config": "ตั้งค่าเดี๋ยวนี้",
    "mi_commonHub_numbers": "รายการ",
    "mi_commonHub_lazy_clock_list": "รายชื่อนาฬิกาปลุก",
    "mi_commonHub_lazy_clock_close_way": "โหมดปิดนาฬิกาปลุก",
    "mi_commonHub_timersetting_repeat": "ทำซ้ำ",
    "mi_commonHub_setting_bell": "ริงโทน",
    "mi_commonHub_setting_volume": "ระดับเสียง",
    "mi_commonHub_add_lazyclock": "เพิ่มการเตือน",
    "mi_commonHub_lazy_clock_delete": "ต้องการลบตัวตั้งเวลาที่เลือกหรือไม่",
    "mi_commonHub_sure_delete": "คุณแน่ใจหรือว่าต้องการลบรายการที่เลือก?",
    "mi_commonHub_lazy_clock_list_empty": "ไม่มีการเพิ่มนาฬิกาปลุก",
    "mi_commonHub_lazy_clock_name": "นาฬิกาปลุก",
    "mi_commonHub_play_specific_tone": "เล่นเสียงที่ระบุ",
    "mi_commonHub_tone_volume": "Beltoonvolume",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "ตัวแสดงสถานะการปิด",
    "mi_common_close_indicator_light_tips": "ปิดตัวแสดงสถานะตั้งแต่เวลา 21:00 ถึง 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "ล้างข้อมูลการเดินทาง",
    "mi_common_clear_position_comfirm_tip": "ล้างกำหนดการของผ้าม่านปัจจุบัน ?",
    "mi_common_clear_position_success": "ล้างสำเร็จ",
    "mi_common_adjust_direction": "การปรับทิศทางการเปิดและปิดผ้าม่าน",
    "mi_common_adjust": "แก้ไข",
    "mi_common_adjust_success": "แก้ไขสำเร็จ",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "ชื่อต้องไม่ว่างเปล่า",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "เปิดถึง {progress}%",
    "mi_common_opened_fully": "เปิดทั้งหมด",
    "mi_common_closed_fully": "ปิดทั้งหมด",
    "mi_common_setting_success": "ตั้งค่าสำเร็จ",
    "mi_common_setting": "กำลังตั้งค่า",
    "mi_common_control_curtain_manually": "เปิด / ปิดผ้าม่านระบบมือ",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "รูปแบบของผ้าม่าน",
    "mi_common_curtain_install_guide": "คู่มือการเดินทาง",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "ผ้าม่านเปิดตามตำแหน่งที่กำหนด",
    "mi_curtain_open_to": "เปิดม่านถึง {progress}%",
    "mi_curtain_style_double": "เปิดผ้าม่านสองด้าน",
    "mi_curtain_style_double_simple": "เปิดสองทาง",
    "mi_curtain_style_left": "เปิดผ้าม่านด้านซ้าย",
    "mi_curtain_style_left_simple": "เปิดทางซ้าย",
    "mi_curtain_style_right": "เปิดผ้าม่านด้านขวา",
    "mi_curtain_style_right_simple": "เปิดทางขวา",
    "mi_common_discard_operation": "ทิ้งการดำเนินการปัจจุบันหรือไม่ ?",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "ไม่สามารถบันทึกได้ กรุณาลองใหม่อีกครั้ง",
    "mi_curtain_common_open": "เปิด",
    "mi_curtain_common_close": "ปิด",
    "mi_curtain_common_pause": "หยุดเล่น",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "กดหนึ่งครั้ง (จำเป็นต้องทำ)",
    "mi_commonHub_must_choose": "จำเป็นต้องใช้",
    "mi_commonHub_send_phone_msg": "ส่งการแจ้งเตือนไปยังโทรศัพท์",
    "mi_commonHub_ring_the_bell": "กดกริ่งประตู",
    "mi_commonHub_lazy_clock_close": "ปิดใช้งานนาฬิกาปลุก",
    "mi_commonHub_system_ringtone": "ระบบเสียงเรียกเข้า",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "เพิ่ม",
    "mi_commonHub_guard_alarm_sound_light_settings": "เสียงแจ้งเตือนและการตั้งค่าแสง",
    "mi_commonHub_guard_guardian_countdown": "นับถอยหลังเพื่อเปิดใช้งานการป้องกัน",
    "mi_commonHub_arming_light_length": "ระยะเวลาการกะพริบของแสง",
    "mi_commonHub_arming_always_flashing": "กะพริบเสมอ",
    "mi_commonHub_arming_not_flashing": "ไม่กะพริบ",
    "mi_commonHub_linkage_alarm_hint_detail": "การเชื่อมต่อและการแจ้งเตือนด้วยฮับอื่นเพื่อเพิ่มระดับความปลอดภัย",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "เลือกวันที่",
    "common_month_1": "มกราคม",
    "common_month_2": "กุมภาพันธ์",
    "common_month_3": "มีนาคม",
    "common_month_4": "เมษายน",
    "common_month_5": "พฤษภาคม",
    "common_month_6": "มิถุนายน",
    "common_month_7": "กรกฎาคม",
    "common_month_8": "สิงหาคม",
    "common_month_9": "กันยายน",
    "common_month_10": "ตุลาคม",
    "common_month_11": "พฤศจิกายน",
    "common_month_12": "ธันวาคม",
    "common_year_month_1": "มกราคม s%",
    "common_year_month_2": "กุมภาพันธ์ s%",
    "common_year_month_3": "มีนาคม s%",
    "common_year_month_4": "เมษายน s%",
    "common_year_month_5": "พฤษภาคม s%",
    "common_year_month_6": "มิถุนายน s%",
    "common_year_month_7": "กรกฎาคม s%",
    "common_year_month_8": "สิงหาคม s%",
    "common_year_month_9": "กันยายน s%",
    "common_year_month_10": "ตุลาคม s%",
    "common_year_month_11": "พฤศจิกายน s%",
    "common_year_month_12": "ธันวาคม s%",
    "common_week_mon_short": "จันทร์",
    "common_week_tue_short": "อังคาร",
    "common_week_wed_short": "พุธ",
    "common_week_thu_short": "พฤหัสฯ",
    "common_week_fri_short": "ศุกร์",
    "common_week_sat_short": "เสาร์",
    "common_week_sun_short": "อาทิตย์",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "ปฏิทิน",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " นาที",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "เวลาหน่วงของการปิดแสงหลังจากที่คนอออกไป",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "รองรับการอัปเดตเฟิร์มแวร์อัตโนมัติ",
    "mi_common_view_details": "แตะเพื่อดูรายละเอียด",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "อุปกรณ์สำหรับเด็ก Zigbee",
    "common_hub_bluetooth_subdevice": "อุปกรณ์สำหรับเด็กผ่านบลูทูธ"
  };
  exports.default = th;
},10082,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var tr = {
    "langugeName": "土耳其语",
    "common_setting_title": "Ayarlar",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "İşlev ayarları",
    "common_setting_general_setting": "Genel ayarlar",
    "common_setting_device_name": "Cihaz adı",
    "common_setting_multiswitch": "Tuş ayarları",
    "common_setting_device_timeZone": "Bölgesel ayarlar",
    "common_setting_location_management": "Konum yönetimi",
    "common_setting_share_device": "Cihaz paylaşımı",
    "common_setting_ifttt_auto": "Otomasyon",
    "common_setting_btGateway": "Bluetooth Mesh ağ geçidi",
    "common_setting_btGateway_status_read_fail": "Bluetooth Mesh ağ geçidinin durum bilgisi alınamadı",
    "common_setting_btGateway_connected": "Bağlı Bluetooth cihazları",
    "common_setting_firmware_upgrate": "Donanım yazılımı güncellemelerini kontrol et",
    "common_setting_more_setting": "Ek ayarlar",
    "common_setting_add_to_desktop": "Ana ekrana ekle",
    "common_setting_privacy_agreement": "Kullanıcı Sözleşmesi ve Gizlilik Politikası",
    "common_setting_delete_device": "Cihazı sil",
    "common_setting_help_page": "Yardım",
    "common_setting_more_seting_security": "Güvenlik ayarları",
    "common_setting_more_seting_faq": "SSS",
    "common_setting_more_seting_isssues": "Geri bildirim",
    "common_setting_user_agreement": "Yazılım Lisansı ve Hizmet Anlaşması",
    "common_setting_privacy_policy": "Gizlilik İlkesi",
    "common_setting_feature_plug_in": "Kablolu sürüm",
    "common_setting_homekit_device_add": "HomeKit ile eşleştir",
    "common_setting_homekit_device_bound": "ciltli",
    "common_setting_homekit_device_noBind": "bağsız",
    "common_setting_laboratory": "Deneysel özellikler",
    "common_setting_protect_delete": "Silme koruması",
    "common_log_title": "Kayıtlar",
    "common_log_today": "Bugün",
    "common_log_yesterday": "Dün",
    "common_log_no_logs": "Kayıt yok",
    "common_log_loading": "Yükleniyor",
    "common_log_loading_with_dot": "Yükleniyor...",
    "common_log_logDataHasloaded": "Kayıtların tamamı yüklendi",
    "common_log_all_data_has_been_loaded": "Tüm veriler yüklendi",
    "common_log_no_data": "Veri yok",
    "common_cancel": "İptal",
    "common_ok": "Tamam",
    "common_manufacturer": "Tarafından imal edilmiştir",
    "common_lumi": "Lumi United Technology Co., Ltd.",
    "common_tips_network_unconnect": "Ağa bağlanılamadı",
    "common_tips_battery_low": "Düşük batarya",
    "common_tips_iknow": "Tamam",
    "common_button_done": "Bitti",
    "common_button_delete": "Sil",
    "common_button_retry": "Tekrar deneyin",
    "common_button_save": "Kaydet",
    "common_tips_delete_succeed": "Silme başarılı",
    "common_tips_delete_failed": "Silme başarısız",
    "common_tips_loading_failed": "Yüklenemedi",
    "common_tips_request_failed": "Talep başarısız oldu. Ağ bağlantınızı kontrol edin",
    "common_button_prev": "Geri",
    "common_button_next": "Sonraki",
    "common_button_changename": "Yeniden adlandır",
    "common_date_workday": "Pzt - Cum",
    "common_date_weekend": "Haftasonu",
    "common_date_selfdefine": "Özel",
    "common_date_mon": "Pazartesi",
    "common_date_tues": "Salı",
    "common_date_wed": "Çarşamba",
    "common_date_thur": "Perşembe",
    "common_date_fri": "Cuma",
    "common_date_sat": "Cumartesi",
    "common_date_sun": "Pazar",
    "common_date_day": " Gün",
    "common_date_week": " Hafta",
    "common_date_month": " Ay",
    "common_date_hour": " s",
    "common_date_minute": " dk.",
    "common_date_second": " sn.",
    "common_tips_discard_operation": "Mevcut işlem iptal edilsin mi?",
    "common_tips_setting": "Setting, please wait…",
    "common_tips_setting_failed": "Failed to set",
    "common_tips_loading_failed_retry": "Yüklenemedi, tekrar denemek için dokunun",
    "common_tips_shared_no_promision": "The shared device has no permission",
    "common_electricity": "Elektrik istatistikleri",
    "common_power_history": "Power history record",
    "common_hardware_update_updating": "Aygıt yazılımını güncelleniyor, lütfen bekleyin...",
    "common_hardware_update_default": "Aygıt yazılımının yeni sürümü ({version}) mevcut, şimdi güncellensin mi?",
    "common_hardware_update_isforce": "Cihazınızın mevcut aygıt yazılımı sürümü eskimiştir, lütfen son sürümü yükleyin ({version}).",
    "common_hardware_update": "Şimdi güncelle",
    "common_out": "Oturumu kapat",
    "common_hardware_checkupdate": "Güncellemeyi görüntüle",
    "common_operation_fail": "Operasyon başarısız",
    "common_repeat_everyday": "Her gün",
    "common_repeat_once": "Bir kere",
    "common_repeat_tomorrow": "Yarın",
    "comon_unit_kwh": " kWh",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "Cihaz listeden kaldırılacak.",
    "common_setting_device_delete_confirm": "Cihaz şimdi silinsin mi?",
    "common_voice_mute": "Sessiz",
    "common_voice_high": "Yüksek",
    "common_voice_middle": "Orta",
    "common_voice_low": "Düşük",
    "sub_device_list_title": "Çocuk cihazı listesi",
    "sub_device_list_header_tips": "Takip eden çocuk cihazları bu merkezi ünite ile zaten eşleşmiştir.",
    "zigbee_sub_device_list_header_tips": "Aşağıdaki Zigbee çocuk cihazları bu ağ geçidine bağlıdır",
    "sub_device_list_empty_tips": "Bu merkezi kontrol ünitesi ile eşleştirilmiş hiçbir çocuk cihazı bulunmuyor.",
    "zigbee_sub_device_list_empty_tips": "Bu merkezi kontrol ünitesi ile eşleştirilmiş hiçbir çocuk cihazı bulunmuyor.",
    "sub_device_list_name_cant_empty": "Cihaz adı boş olamaz",
    "sub_device_list_name_cant_support_emoji": "Emoji ifadelerini desteklemiyor",
    "sub_device_list_name_cant_support_special_char": "İsim özel semboller içeremez",
    "sub_device_list_name_cant_more_forty": "İsim 40 karakteri aşamaz",
    "sub_device_list_name_cant_same": "Cihaz adı aynı olamaz",
    "sub_device_list_device_offline": "Cihaz çevrimdışı",
    "sub_device_list_selected": "{XX} öğe seçildi",
    "sub_device_list_delete_multi_device": "Seçilen {XX} aygıtları silmek istediğinize emin misiniz?",
    "ifttt_triggle_single_press": "Tıklayın",
    "ifttt_triggle_double_press": "Basın ve basılı tutun",
    "ifttt_triggle_long_press": "Çift tıklayın",
    "ifttt_triggle_shake": "Sallayın",
    "ifttt_triggle_someone_moved": "Birisi hareket etti",
    "ifttt_triggle_windoor_open": "Pencere/kapı açık",
    "ifttt_triggle_moved_afteronemin": "Bir dakika işlem yapılmadığında taşındı",
    "ifttt_triggle_detect_vibration": "Titreşim algılandı",
    "ifttt_triggle_detect_fall": "Düşme algılandı",
    "ifttt_triggle_detect_tilting": "Eğim algılama",
    "ifttt_triggle_fire_alert": "Yangın alarmı",
    "ifttt_triggle_gas_leakage_alert": "Gaz sızıntısı algılandı",
    "ifttt_triggle_flood_alert": "Sel uyarısı",
    "guard_type_basic": "Standart koruyucu",
    "guard_type_home": "Evdeyken koruyucu",
    "guard_type_away": "Evde değilken koruyucu",
    "guard_type_sleep": "Uykuda koruyucu",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "Evdeyken koruyucuyu etkinleştirmek için lütfen en az bir çocuk cihazını tetikleyici cihaz olarak ayarlayın.",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "Evde değilken koruyucuyu etkinleştirmek için lütfen en az bir çocuk cihazını tetikleyici cihaz olarak ayarlayın.",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "Uykuda koruyucuyu etkinleştirmek için lütfen en az bir çocuk cihazını tetikleyici cihaz olarak ayarlayın.",
    "ifttt_push_title_triggle_alert_1": "{XX} 'de, {YY} bir alarmı tetikler",
    "ifttt_push_title_triggle_alert_2": "{XX} 'de, {YY} bir alarmı tetiklemek için hareket eden birini algılar",
    "ifttt_push_title_triggle_alert_magnet": "{XX} etkin, kapı veya pencere açıldı veya kapandı ve uyarıyı tetikledi.",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d% aktif, s% alarmı tetikledi.",
    "ifttt_push_title_triggle_alert_3": "{XX} 'da, {YY} tetikleyici alarmını açar",
    "ifttt_push_title_triggle_alert_4": "{XX} 'de, {YY} hareket edildiğini algılar",
    "ifttt_push_title_triggle_alert_5": "{XX} 'de, {YY} sel alarmını algılar",
    "ifttt_push_title_triggle_alert_6": "{XX} 'de, {YY} standardı aşan bir gaz konsantrasyonu tespit etti.",
    "ifttt_push_title_triggle_alert_7": "{XX} 'de, {YY} duman tespit etti",
    "common_ifttt_scene_execute_result_fail": "İcra başarısız oldu",
    "common_ifttt_scene_execute_result_unknow_error": "Anormal hata",
    "common_ifttt_scene_execute_result_time_out": "Uygulama zaman aşımı",
    "common_ifttt_scene_execute_result_camera_sleep": "Kamera uyuyor",
    "common_ifttt_device_offline": "(Offline)",
    "timersetting_on": "Başlangıç zamanı",
    "timersetting_off": "Bitiş saati",
    "timersetting_empty": "Ayarlanmadı",
    "timersetting_perio": "Aktif",
    "common_start": "Başlat",
    "common_end": "uç",
    "common_color": "rengi",
    "common_open": "Etkinleştir",
    "common_scene_name_lm_scene_1_1": "Uyarı olduğunda, biri alarmı geçti",
    "common_scene_name_lm_scene_1_2": "Uyarı sırasında kapı ve pencere açık alarmı",
    "common_scene_name_lm_scene_1_3": "Alarm açıkken, kablosuz anahtar alarma basar.",
    "common_scene_name_lm_scene_1_4": "Uyarırken, Rubik Küpü bir süre tetiklenir.",
    "common_scene_name_lm_scene_1_5": "Uyarıldığında, statik ve statik çıkartmalar iki dakika boyunca tetiklenir ve alarm tetiklenir.",
    "common_scene_name_lm_scene_2_1": "Biri geçti, gece lambası aydınlatıldı.",
    "common_scene_name_lm_scene_3_1": "Kablosuz anahtar kapı zili basar",
    "common_scene_name_lm_scene_3_2": "Bir kapı/pencere açıldığında kapı zili çalar",
    "common_scene_name_lm_scene_3_3": "Birisi çalan zili geçti",
    "common_scene_name_lm_scene_4_1": "Birisi geçerken çalar saati kapat",
    "common_scene_name_lm_scene_4_2": "Kapı/pencere açıldığında çalar saati kapat",
    "common_scene_name_lm_scene_4_3": "Kablosuz anahtar alarmı bastırır",
    "common_scene_name_lm_scene_5_1": "Duman tespiti, hub alarmını tetikleyecektir.",
    "common_scene_name_lm_scene_5_2": "Gaz tespiti, hub alarmını tetikleyecektir.",
    "common_scene_name_lm_scene_5_3": "Su sızıntısı tespiti, hub alarmını tetikleyecektir.",
    "common_close": "Kapalı",
    "common_state_closed": "Devre dışı",
    "sensor_set_ifttt_config_success": "Başarılı yapılandırma",
    "common_automation_configuring": "Paket otomasyonu yapılandırılıyor, lütfen bekleyin ...",
    "sensor_set_ifttt_config_fail": "Yapılandırma başarısız oldu",
    "sensor_set_ifttt_config_fail_tip": "1. Ağ geçidini wifi \n2'ye bağlamanız gerekir .. Telefonunuzu wifi \n3'e bağlamanız gerekir. Lütfen wifi'nin normal olduğundan emin olun.",
    "mi_linuxHub_guard_guard_timer": "Koruyucu zamanlama",
    "mi_linuxHub_timer_light_name": "Fener zamanlayıcı",
    "mi_linuxHub_lazy_clock_name": "Çalar saat",
    "sensor_set_ifttt_scene_name_1": "Kapı açma hatırlatma",
    "sensor_set_ifttt_scene_name_2": "Gece lambasını açmak / kapatmak için kablosuz düğmeyi tıklayın",
    "sensor_set_ifttt_scene_name_3": "Kablosuz anahtar anahtarı uyarısına çift tıklayın",
    "sensor_set_ifttt_scene_name_4": "Biri geçti, gece lambası aydınlatıldı.",
    "sensor_set_ifttt_scene_name_5": "2 dakika insansız gece ışığı",
    "sensor_set_ifttt_scene_name_6": "Gece ışığını hareket ettiren biri",
    "sensor_set_ifttt_scene_name_7": "Single press the Wireless Switch to turn plug on/off",
    "sensor_set_ifttt_triggle_name_1": "Açıldıktan sonra 1 dakikadan fazla kapanmadı",
    "sensor_set_ifttt_triggle_name_2": "2 dakika insansız",
    "sensor_set_ifttt_triggle_name_3": "Belirtilen zil sesini çal",
    "sensor_set_ifttt_triggle_name_4": "Açık / kapalı gece lambası",
    "sensor_set_ifttt_triggle_name_5": "İndüksiyon gece lambası",
    "sensor_set_ifttt_triggle_name_6": "Gece lambasını söndür",
    "sensor_set_ifttt_triggle_name_7": "Gece lambası",
    "sensor_set_ifttt_triggle_name_8": "Açık / kapalı uyarısı",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "Kısmen başarıyla çalıştırıldı",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "繰り返しオプション",
    "common_repeat_self_timer_title": "カスタムリピート",
    "common_on": "ON",
    "common_off": "OFF",
    "common_timer": "Schedules",
    "common_unit_minute_short": "min",
    "common_count_down": "{XX}-カウントダウン",
    "common_percent": " %",
    "common_percent_str": "% {value}",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "Today",
    "common_plug_month_elec": "Month",
    "common_plug_current_power": "Current",
    "mi_comboHub_mainPage_guard": "Koruyucu",
    "mi_comboHub_mainPage_guard_base": "Standart",
    "mi_comboHub_mainPage_guard_home": "Evde",
    "mi_comboHub_mainPage_guard_away": "Evde değil",
    "mi_comboHub_mainPage_guard_sleep": "Uyku",
    "common_comboHub_triggle_device_alert": "Uyarı",
    "common_comboHub_triggle_device_opened_guard": "({XX} koruyucusu için etkinleştirildi.)",
    "common_comboHub_triggle_device_only_open_basic": "(Yalnızca standart koruyucu için kullanılabilir.)",
    "common_comboHub_triggle_device_opened_basic": "(Standart koruyucu için etkinleştirildi.)",
    "common_setting_homekit_device_desc": "Cihaz, Apple Home uygulamasında yapılandırılabilir ve kullanılabilir.",
    "common_ifttt_triggleName_switch": "Anahtarın durumu değiştiğinde uyarı tetiklenir.",
    "common_ifttt_triggleName_vibration": "Durum değiştiğinde uyarı tetiklenir.",
    "common_ifttt_triggleName_cube": "1 dakikadan uzun süre hareketsiz kaldıktan sonra hareket ettiğinde uyarı tetiklenir.",
    "common_ifttt_triggleName_magnet": "Kapı ya da pencere sensorunun durumu değiştiğinde uyarı tetiklenir.",
    "common_ifttt_triggleName_motion": "Birisi hareket etti ve uyarıyı tetikledi.",
    "common_timer_light_timer_light_period": "Zaman dönemi",
    "common_timer_light_timer_on": "Zaman aşımına uğradı",
    "common_timer_light_timer_off": "Zaman aşımına uğradı",
    "common_timer_light_timer_time_after": "Bitiş zamanından sonra başlangıç zamanı",
    "common_lumi_sensor_setting_battery": "Pil",
    "common_lumi_sensor_setting_battery_normal": "Normal",
    "common_lumi_sensor_battery_guide_title": "Pil değiştirme kılavuzu",
    "common_lumi_sensor_battery_guide_description": "Lütfen pil kapağını çıkarın ve pili gösterildiği gibi değiştirin.",
    "common_ifttt_suit_apart_fail": "Partial configure failed",
    "common_ifttt_suit_success_tips": "Can be viewed or edited in the automation list",
    "common_ifttt_suit_apart_fail_tips": "What has been created successfully can be viewed or edited in the automation list",
    "common_ifttt_suit_not_build": "Not created yet",
    "common_kpa": " kPa",
    "common_battery_power_low": "Düşük pil seviyesi,lütfen pili değiştirin",
    "common_overheat_abnormal": "Overheated abnormality",
    "common_overload_abnormal": "Overloaded abnormality",
    "common_overheat_protect": "Overheat Surveillance",
    "common_overload_protect": "Overload Surveillance",
    "common_overheat_warn": "Overheated alert",
    "common_overload_warn": "Overloaded alert",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "Alarm tetikleyici cihaz",
    "mi_comboHub_triggleDevices_deleting": "Siliniyor…",
    "mi_comboHub_triggleSubDevices_setting": "Yapılandırılıyor…",
    "mi_comboHub_triggle_device_header_title_1": "Etkinleştirilemeyen cihazlar",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "Duman detektörleri ve gaz detektörleri gibi istasyona bağlı olup sürekli olarak ortamı izleyen cihazlar olduğunda, bunları ana koruyucunun tetikleyici cihazları olarak ayarlayabilirsiniz. Bir kez etkinleştirildikten sonra ana koruyucu, evinizi 7/24 izleyecektir.",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "Evde, evde değilken veya uyku koruyucusu için tetikleyici cihaz olarak etkinleştirildi, standart koruyucu için kullanılamaz.",
    "mi_comboHub_triggle_device_header1_subtitle_home": "Tetikleyici cihazı ayarladıktan sonra, evde koruyucusunu etkinleştirebilirsiniz.",
    "mi_comboHub_triggle_device_header2_subtitle_home": "Standart koruyucu için tetikleyici cihaz olarak etkinleştirildi, evde koruyucusu için kullanılamaz.",
    "mi_comboHub_triggle_device_header1_subtitle_away": "Tetikleyici cihazı ayarladıktan sonra, evde değilken koruyucusunu etkinleştirebilirsiniz.",
    "mi_comboHub_triggle_device_header2_subtitle_away": "Standart koruyucu için tetikleyici cihaz olarak etkinleştirildi, evde değilken koruyucusu için kullanılamaz.",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "Tetikleyici cihazı ayarladıktan sonra, uyku koruyucusunu etkinleştirebilirsiniz.",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "Standart koruyucu için tetikleyici cihaz olarak etkinleştirildi, uyku koruyucusu için kullanılamaz.",
    "mi_comboHub_triggle_device_empty_tip": "Bu kontrol Hub'ıyla eşleştirilmiş, hareket sensörü, pencere ve kapı sensörü veya kablosuz anahtar gibi uyarıyı tetiklemek için kullanılabilecek hiçbir cihaz yoktur.",
    "mi_comboHub_triggle_device_go_to_bug": "Satın al",
    "mi_commonHub_setting_nightlight_tomorrow": "Ertesi gün",
    "mi_commonHub_setting_nightlight_allday": "Bütün gün",
    "mi_ifttt_launch": "Herhangi bir koşul karşılanırsa",
    "mi_ifttt_action": "Ardından",
    "mi_commonHub_nightlight_open": "Gece lambasını aç",
    "mi_commonHub_nightlight_motion_limit": "Yalnızca 9 adede kadar insan vücudu sensörünü seçebilir",
    "mi_commonHub_nightlight_delay_close_min": "Gece lambasını {value} dk içinde kapat",
    "mi_commonHub_go_back_title": "Çıkış",
    "mi_commonHub_go_back_content": "Değişiklikleri sil ve şimdi çık?",
    "mi_commonHub_setting_nightlight": "Otomatik gece lambası",
    "mi_commonHub_nightlight_commont": "{value} karanlık bir ortamdayken",
    "mi_commonHub_nightlight_timer": "İndüksiyon süresi",
    "mi_commonHub_linkage_alarm_number_ten": "Yalnızca 10 ağ geçidi alarmı seçebilir",
    "common_offline": "Offline",
    "mi_commonHub_linkage_alarm_footer_text": "Merkezi kontrol ünitesi uyarı bağlantı işlevi etkinleştirildiğinde ve bir merkezi kontrol ünitesi tetiklendiğinde, tüm merkezi kontrol ünitelerinde uyarı zil sesi ve yanıp sönen ışıklar tetiklenir.",
    "mi_commonHub_linkage_alarm": "Bağlantı alarmı",
    "mi_commonHub_linkage_alarm_dis": "Bağlantı alarmı iptal edildi",
    "mi_commonHub_ring_doorbell": "Kapı zili sesi",
    "mi_commonHub_ring_knocking": "Kapı tıklatma sesi",
    "mi_commonHub_ring_funny": "Komik ses",
    "mi_commonHub_ring_alarm_clock": "Çalar saat sesi",
    "mi_commonHub_ring_alarm_music": "Uyarı zil sesi",
    "mi_commonHub_ring_policecar1": "Polis arabası sesi 1",
    "mi_commonHub_ring_policecar2": "Polis arabası sesi 2",
    "mi_commonHub_ring_safety_accident": "Güvenlik olayı sesi",
    "mi_commonHub_ring_countdown": "Fırlatma geri sayım",
    "mi_commonHub_ring_ghost": "Hayalet çığlığı",
    "mi_commonHub_ring_gun": "Keskin nişancı tüfeği",
    "mi_commonHub_ring_battle": "Savaş sesleri",
    "mi_commonHub_ring_airraid": "Hava saldırısı alarmı",
    "mi_commonHub_ring_dog": "Köpek havlaması",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "Power is above {value}",
    "mi_common_power_is_below": "Power is below {value}",
    "mi_common_please_enter_the_value": "Please enter the value {value}",
    "mi_common_max_value": "Max {value}",
    "mi_common_min_value": "Min {value}",
    "mi_common_temp_error_fail": "Overheated. Please check the device immediately",
    "mi_common_temp_error": "The temperature is too high and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_power_error_fail": "Power overloaded. Please check the device immediately",
    "mi_common_power_error": "The power is overloaded and the power has been automatically disconnected. You need to single click the button or power off to remove this surveillance, and then you can continue to use it.",
    "mi_common_setting_cutOff": "Power outage memory",
    "mi_common_setting_cutOff_tps": "Switch keeps the previous status after it powers on",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "Sürekli zil sesi",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value} dk.",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value} sn.",
    "mi_comboHub_guardSetting": "Koruyucu ayarları",
    "mi_comboHub_guardSetting_delayTime_immediately": "Hemen geçerli",
    "mi_linuxHub_arming_ring": "Ünite uyarı zil sesi",
    "mi_comboHub_guardSetting_alarmDuration": "Alarm süresi",
    "mi_comboHub_guardSetting_alarmVolume": "Alarm ses düzeyi",
    "mi_comboHub_guardSetting_delayTime": "Koruma etkinleştirmek için geri sayım",
    "mi_common_power_is_up_to": "Power is up to {value}",
    "mi_common_power_is_down_to": "Power is down to {value}",
    "mi_commonHub_setting_doorbell": "Kapı zili",
    "mi_commonHub_setting_volume_doorbell": "Kapı zili düzeyi",
    "mi_commonHub_setting_push": "Telefon bildirimi",
    "mi_commonHub_setting_alarmclock": "Uyku modu",
    "mi_commonHub_guard_go_config": "Şimdi ayarla",
    "mi_commonHub_numbers": "öge",
    "mi_commonHub_lazy_clock_list": "Çalar saat listesi",
    "mi_commonHub_lazy_clock_close_way": "Çalar saat kapalı modu",
    "mi_commonHub_timersetting_repeat": "tekrar",
    "mi_commonHub_setting_bell": "Zil sesi",
    "mi_commonHub_setting_volume": "Ses düzeyi",
    "mi_commonHub_add_lazyclock": "Alarm ekle",
    "mi_commonHub_lazy_clock_delete": "Seçili zamanlayıcı silinsin mi?",
    "mi_commonHub_sure_delete": "Seçili öğeyi silmek istediğinize emin misiniz?",
    "mi_commonHub_lazy_clock_list_empty": "Hiçbir çalar saat eklenmedi",
    "mi_commonHub_lazy_clock_name": "Çalar saat",
    "mi_commonHub_play_specific_tone": "Belirlenen zil sesini çal",
    "mi_commonHub_tone_volume": "着信音の音量",
    "mi_common_timer_list_empty": "No schedule added",
    "mi_common_check_same_remote": "The set status in the timed schedule can not be supported by current AC, which may cause it not workable. Please reset the timed schedule.",
    "mi_common_dialog_ok": "OK",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "Turn off indicator",
    "mi_common_close_indicator_light_tips": "Turn off the indicator from 21:00 to 09:00",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "Ad alanı boş bırakılamaz",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置...",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "放弃当前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "Kaydedilemedi, lütfen tekrar deneyin.",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "Operation succeeded",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "Bir defa bas (zorunlu)",
    "mi_commonHub_must_choose": "gereken",
    "mi_commonHub_send_phone_msg": "Telefona bildirim gönder",
    "mi_commonHub_ring_the_bell": "Kapı zilini çal",
    "mi_commonHub_lazy_clock_close": "Çalar saati devre dışı bırak",
    "mi_commonHub_system_ringtone": "Sistem zil sesi",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "eklemek",
    "mi_commonHub_guard_alarm_sound_light_settings": "Alarm zil sesi ve ışık ayarları",
    "mi_commonHub_guard_guardian_countdown": "Korumayı etkinleştirmek için geri sayım",
    "mi_commonHub_arming_light_length": "Işık yanıp sönme süresi",
    "mi_commonHub_arming_always_flashing": "Sürekli yanar",
    "mi_commonHub_arming_not_flashing": "Yanmaz",
    "mi_commonHub_linkage_alarm_hint_detail": "Başka bir Ünite ile bağlantı ve uyarı, güvenlik düzeyinizi artırın",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "Tarih seç",
    "common_month_1": "Ocak ",
    "common_month_2": "Şubat",
    "common_month_3": "Mart ",
    "common_month_4": "Nisan",
    "common_month_5": "Mayıs",
    "common_month_6": "Haziran ",
    "common_month_7": "Temmuz ",
    "common_month_8": "Ağustos",
    "common_month_9": "Eylül ",
    "common_month_10": "Ekim ",
    "common_month_11": "Kasım",
    "common_month_12": "Aralık",
    "common_year_month_1": "Ocak  s%",
    "common_year_month_2": "Şubat s%",
    "common_year_month_3": "Mart  s%",
    "common_year_month_4": "Nisan s%",
    "common_year_month_5": "Mayıs s%",
    "common_year_month_6": "Haziran  s%",
    "common_year_month_7": "Temmuz  s%",
    "common_year_month_8": "Ağustos s%",
    "common_year_month_9": "Eylül  s%",
    "common_year_month_10": "Ekim  s%",
    "common_year_month_11": "Kasım s%",
    "common_year_month_12": "Aralık s%",
    "common_week_mon_short": "Pazartesi",
    "common_week_tue_short": "Salı",
    "common_week_wed_short": "Çarşamba",
    "common_week_thu_short": "Perşembe",
    "common_week_fri_short": "Cuma",
    "common_week_sat_short": "Cumartesi",
    "common_week_sun_short": "Pazar",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "Takvim",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": " dk.",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "İnsanlar çıktıktan sonra lambanın kapanma süresini geciktir",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "Otomatik üretici yazılımı güncelleştirmeleri destekleniyor",
    "mi_common_view_details": "Ayrıntıları görüntülemek için dokunun",
    "mi_common_gateway_profile_alarm_setting_title": "Alert ringtone",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee çocuk cihazları",
    "common_hub_bluetooth_subdevice": "Bluetooth çocuk cihazları"
  };
  exports.default = tr;
},10085,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHans = {
    "langugeName": "中文",
    "common_setting_title": "设置",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "功能设置",
    "common_setting_general_setting": "通用设置",
    "common_setting_device_name": "设备名称",
    "common_setting_multiswitch": "按键设置",
    "common_setting_device_timeZone": "设备时区",
    "common_setting_location_management": "位置管理",
    "common_setting_share_device": "设备共享",
    "common_setting_ifttt_auto": "智能场景",
    "common_setting_btGateway": "蓝牙Mesh网关",
    "common_setting_btGateway_status_read_fail": "蓝牙Mesh网关状态读取失败",
    "common_setting_btGateway_connected": "连接的蓝牙设备",
    "common_setting_firmware_upgrate": "检查固件升级",
    "common_setting_more_setting": "更多设置",
    "common_setting_add_to_desktop": "添加到桌面",
    "common_setting_privacy_agreement": "使用条款和隐私政策",
    "common_setting_delete_device": "删除设备",
    "common_setting_help_page": "使用帮助",
    "common_setting_more_seting_security": "安全设置",
    "common_setting_more_seting_faq": "常见问题",
    "common_setting_more_seting_isssues": "反馈问题",
    "common_setting_user_agreement": "软件许可及服务协议",
    "common_setting_privacy_policy": "隐私政策",
    "common_setting_feature_plug_in": "插件版本号",
    "common_setting_homekit_device_add": "绑定到HomeKit",
    "common_setting_homekit_device_bound": "已绑定",
    "common_setting_homekit_device_noBind": "未绑定",
    "common_setting_laboratory": "实验室功能",
    "common_setting_protect_delete": "防止误删除",
    "common_log_title": "日志",
    "common_log_today": "今天",
    "common_log_yesterday": "昨天",
    "common_log_no_logs": "暂无日志",
    "common_log_loading": "加载中",
    "common_log_loading_with_dot": "加载中...",
    "common_log_logDataHasloaded": "加载完全部日志",
    "common_log_all_data_has_been_loaded": "全部数据已加载完成",
    "common_log_no_data": "暂无数据",
    "common_cancel": "取消",
    "common_ok": "确定",
    "common_manufacturer": "制造商",
    "common_lumi": "绿米联创",
    "common_tips_network_unconnect": "网络连接不可用",
    "common_tips_battery_low": "电池电量低",
    "common_tips_iknow": "我知道了",
    "common_button_done": "完成",
    "common_button_delete": "删除",
    "common_button_retry": "重试",
    "common_button_save": "保存",
    "common_tips_delete_succeed": "删除成功",
    "common_tips_delete_failed": "删除失败",
    "common_tips_loading_failed": "加载失败",
    "common_tips_request_failed": "请求失败，请检查网络",
    "common_button_prev": "上一步",
    "common_button_next": "下一步",
    "common_button_changename": "重命名",
    "common_date_workday": "周一至周五",
    "common_date_weekend": "周末",
    "common_date_selfdefine": "自定义",
    "common_date_mon": "星期一",
    "common_date_tues": "星期二",
    "common_date_wed": "星期三",
    "common_date_thur": "星期四",
    "common_date_fri": "星期五",
    "common_date_sat": "星期六",
    "common_date_sun": "星期日",
    "common_date_day": "日",
    "common_date_week": "周",
    "common_date_month": "月",
    "common_date_hour": "时",
    "common_date_minute": "分钟",
    "common_date_second": "秒",
    "common_tips_discard_operation": "确认放弃本次操作？",
    "common_tips_setting": "设置中，请稍候...",
    "common_tips_setting_failed": "设置失败",
    "common_tips_loading_failed_retry": "加载失败，点击重试",
    "common_tips_shared_no_promision": "被分享设备无此权限",
    "common_electricity": "电量统计",
    "common_power_history": "功率历史记录",
    "common_hardware_update_updating": "固件正在升级，请稍候…",
    "common_hardware_update_default": "检测到设备有最新固件版本{version}，是否升级？",
    "common_hardware_update_isforce": "设备当前固件版本过低，为了能正常使用，请升级至最新版本{version}",
    "common_hardware_update": "去升级",
    "common_out": "退出",
    "common_hardware_checkupdate": "查看升级",
    "common_operation_fail": "操作失败",
    "common_repeat_everyday": "每天",
    "common_repeat_once": "执行一次",
    "common_repeat_tomorrow": "明天",
    "comon_unit_kwh": "度",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "删除设备后，设备将从列表中移除。",
    "common_setting_device_delete_confirm": "确认删除设备吗？",
    "common_voice_mute": "静音",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "子设备列表",
    "sub_device_list_header_tips": "下列子设备已经连接在本网关下",
    "zigbee_sub_device_list_header_tips": "下列Zigbee子设备已连接在本网关下",
    "sub_device_list_empty_tips": "该网关下暂无关联的子设备",
    "zigbee_sub_device_list_empty_tips": "该网关下暂无关联的Zigbee子设备",
    "sub_device_list_name_cant_empty": "设备名称不能为空",
    "sub_device_list_name_cant_support_emoji": "不支持emoji表情",
    "sub_device_list_name_cant_support_special_char": "名称不能包含特殊符号",
    "sub_device_list_name_cant_more_forty": "名称不能超过40个字符",
    "sub_device_list_name_cant_same": "设备名称不能相同",
    "sub_device_list_device_offline": "设备已离线",
    "sub_device_list_selected": "已选中{XX}项",
    "sub_device_list_delete_multi_device": "确认删除所选的{XX}个设备吗？",
    "ifttt_triggle_single_press": "单击",
    "ifttt_triggle_double_press": "双击",
    "ifttt_triggle_long_press": "长按",
    "ifttt_triggle_shake": "摇一摇",
    "ifttt_triggle_someone_moved": "有人移动",
    "ifttt_triggle_windoor_open": "门窗打开",
    "ifttt_triggle_moved_afteronemin": "静止一分钟后被移动",
    "ifttt_triggle_detect_vibration": "感应到震动",
    "ifttt_triggle_detect_fall": "感应到跌落",
    "ifttt_triggle_detect_tilting": "感应到倾斜",
    "ifttt_triggle_fire_alert": "火警报警",
    "ifttt_triggle_gas_leakage_alert": "气体泄露报警",
    "ifttt_triggle_flood_alert": "漏水报警",
    "guard_type_basic": "基础守护",
    "guard_type_home": "在家守护",
    "guard_type_away": "离家守护",
    "guard_type_sleep": "睡眠守护",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用在家守护",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用离家守护",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "请设置至少一个子设备作为报警触发条件，以启用睡眠守护",
    "ifttt_push_title_triggle_alert_1": "{XX}中，{YY}触发报警",
    "ifttt_push_title_triggle_alert_2": "{XX}中，{YY}感应到有人移动触发报警",
    "ifttt_push_title_triggle_alert_magnet": "{XX}守护中，门窗状态变化触发报警",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%守护中，s%状态变化触发报警",
    "ifttt_push_title_triggle_alert_3": "{XX}中，{YY}打开触发报警",
    "ifttt_push_title_triggle_alert_4": "{XX}中，{YY}感应到被移动",
    "ifttt_push_title_triggle_alert_5": "{XX}中，{YY}感应到浸水报警",
    "ifttt_push_title_triggle_alert_6": "{XX}中，{YY}检测到气体浓度超标",
    "ifttt_push_title_triggle_alert_7": "{XX}中，{YY}检测到烟雾",
    "common_ifttt_scene_execute_result_fail": "执行失败",
    "common_ifttt_scene_execute_result_unknow_error": "异常错误",
    "common_ifttt_scene_execute_result_time_out": "执行超时",
    "common_ifttt_scene_execute_result_camera_sleep": "摄像机已休眠",
    "common_ifttt_device_offline": "（已离线）",
    "timersetting_on": "开启时间",
    "timersetting_off": "关闭时间",
    "timersetting_empty": "未设置",
    "timersetting_perio": "开启时段",
    "common_start": "开始",
    "common_end": "结束",
    "common_color": "颜色",
    "common_open": "开启",
    "common_scene_name_lm_scene_1_1": "警戒时，有人经过报警",
    "common_scene_name_lm_scene_1_2": "警戒时，门窗打开报警",
    "common_scene_name_lm_scene_1_3": "警戒时，无线开关按下报警",
    "common_scene_name_lm_scene_1_4": "警戒时，魔方静止一段时间被触发报警",
    "common_scene_name_lm_scene_1_5": "警戒时，动静贴静止两分钟被触发报警",
    "common_scene_name_lm_scene_2_1": "有人经过，感应夜灯亮",
    "common_scene_name_lm_scene_3_1": "无线开关按下响门铃",
    "common_scene_name_lm_scene_3_2": "门窗打开响门铃",
    "common_scene_name_lm_scene_3_3": "有人经过响门铃",
    "common_scene_name_lm_scene_4_1": "有人经过关闹钟",
    "common_scene_name_lm_scene_4_2": "门窗打开关闹钟",
    "common_scene_name_lm_scene_4_3": "无线开关按下关闹钟",
    "common_scene_name_lm_scene_5_1": "烟感联动网关报警",
    "common_scene_name_lm_scene_5_2": "气感联动网关报警",
    "common_scene_name_lm_scene_5_3": "水浸联动网关报警",
    "common_close": "关闭",
    "common_state_closed": "已关闭",
    "sensor_set_ifttt_config_success": "配置成功",
    "common_automation_configuring": "正在配置套装自动化，请稍候...",
    "sensor_set_ifttt_config_fail": "配置失败",
    "sensor_set_ifttt_config_fail_tip": "1. 需将网关连接wifi\n2. 需将手机连接wifi\n3. 请保证wifi正常",
    "mi_linuxHub_guard_guard_timer": "守护定时",
    "mi_linuxHub_timer_light_name": "彩灯定时器",
    "mi_linuxHub_lazy_clock_name": "闹钟定时器",
    "sensor_set_ifttt_scene_name_1": "门口打开提醒",
    "sensor_set_ifttt_scene_name_2": "单击无线开关开/关夜灯",
    "sensor_set_ifttt_scene_name_3": "双击无线开关开关警戒",
    "sensor_set_ifttt_scene_name_4": "有人经过，感应夜灯亮",
    "sensor_set_ifttt_scene_name_5": "2分钟无人移动夜灯关",
    "sensor_set_ifttt_scene_name_6": "有人移动夜灯开",
    "sensor_set_ifttt_scene_name_7": "单击无线开关开/关插座",
    "sensor_set_ifttt_triggle_name_1": "打开后超过1分钟未关闭",
    "sensor_set_ifttt_triggle_name_2": "2分钟无人移动",
    "sensor_set_ifttt_triggle_name_3": "播放指定的铃音",
    "sensor_set_ifttt_triggle_name_4": "开/关夜灯",
    "sensor_set_ifttt_triggle_name_5": "感应夜灯亮",
    "sensor_set_ifttt_triggle_name_6": "关夜灯",
    "sensor_set_ifttt_triggle_name_7": "开夜灯",
    "sensor_set_ifttt_triggle_name_8": "开/关警戒",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "部分执行成功",
    "common_short_date_mon": "周一",
    "common_short_date_tues": "周二",
    "common_short_date_wed": "周三",
    "common_short_date_thur": "周四",
    "common_short_date_fri": "周五",
    "common_short_date_sat": "周六",
    "common_short_date_sun": "周日",
    "common_repeat_timer_title": "重复选项",
    "common_repeat_self_timer_title": "自定义重复",
    "common_on": "开",
    "common_off": "关",
    "common_timer": "定时",
    "common_unit_minute_short": "分钟",
    "common_count_down": "{XX}-倒计时",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " °C",
    "common_degree_centigrade_str": "{value} °C",
    "common_plug_today_elec": "今日用电",
    "common_plug_month_elec": "当月用电",
    "common_plug_current_power": "当前功率",
    "mi_comboHub_mainPage_guard": "守护",
    "mi_comboHub_mainPage_guard_base": "基础",
    "mi_comboHub_mainPage_guard_home": "在家",
    "mi_comboHub_mainPage_guard_away": "离家",
    "mi_comboHub_mainPage_guard_sleep": "睡眠",
    "common_comboHub_triggle_device_alert": "报警",
    "common_comboHub_triggle_device_opened_guard": "（已在{XX}守护中开启）",
    "common_comboHub_triggle_device_only_open_basic": "（只可用于基础守护）",
    "common_comboHub_triggle_device_opened_basic": "（已在基础守护中开启）",
    "common_setting_homekit_device_desc": "该设备可在Apple家庭APP配置和使用",
    "common_ifttt_triggleName_switch": "开关状态变化触发报警",
    "common_ifttt_triggleName_vibration": "状态变化触发报警",
    "common_ifttt_triggleName_cube": "静止一分钟被移动触发报警",
    "common_ifttt_triggleName_magnet": "门窗状态变化触发报警",
    "common_ifttt_triggleName_motion": "有人移动触发报警",
    "common_timer_light_timer_light_period": "时间段定时",
    "common_timer_light_timer_on": "定时开启",
    "common_timer_light_timer_off": "定时关闭",
    "common_timer_light_timer_time_after": "开始时间在结束时间之后",
    "common_lumi_sensor_setting_battery": "电池电量",
    "common_lumi_sensor_setting_battery_normal": "正常",
    "common_lumi_sensor_battery_guide_title": "更换电池引导",
    "common_lumi_sensor_battery_guide_description": "请打开电池后盖，按照图示更换电池",
    "common_ifttt_suit_apart_fail": "配置部分失败",
    "common_ifttt_suit_success_tips": "可在智能场景列表查看或编辑",
    "common_ifttt_suit_apart_fail_tips": "已创建成功的可在智能场景列表查看或编辑",
    "common_ifttt_suit_not_build": "暂不创建",
    "common_kpa": " kPa",
    "common_battery_power_low": "电量低，请尽快更换电池。",
    "common_overheat_abnormal": "过温异常",
    "common_overload_abnormal": "过载异常",
    "common_overheat_protect": "过温保护",
    "common_overload_protect": "过载保护",
    "common_overheat_warn": "过温报警",
    "common_overload_warn": "过载报警",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "触发报警设备",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggle_device_header_title_1": "不可启用的设备",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "当网关下有持续监测环境的设备，如烟雾报警器、天然气报警器，可启用这些设备为基础守护的触发报警设备，开启后，基础守护将7×24小时无间断守护家庭安全。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "已作为在家/离家/睡眠守护的触发报警设备，不可用于基础守护",
    "mi_comboHub_triggle_device_header1_subtitle_home": "设置触发报警设备后，你可以开启在家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_home": "已作为基础守护的触发报警设备，不可用于在家守护",
    "mi_comboHub_triggle_device_header1_subtitle_away": "设置触发报警设备后，你可以开启离家守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_away": "已作为基础守护的触发报警设备，不可用于离家守护",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "设置触发报警设备后，你可以开启睡眠守护模式了",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "已作为基础守护的触发报警设备，不可用于睡眠守护",
    "mi_comboHub_triggle_device_empty_tip": "该网关下暂无可作为报警触发源的设备，如人体传感器、门窗传感器以及无线开关等",
    "mi_comboHub_triggle_device_go_to_bug": "去购买",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一满足时",
    "mi_ifttt_action": "就执行",
    "mi_commonHub_nightlight_open": "开启夜灯",
    "mi_commonHub_nightlight_motion_limit": "最多只能选择9个人体传感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分钟后关闭夜灯",
    "mi_commonHub_go_back_title": "退出编辑",
    "mi_commonHub_go_back_content": "退出后修改将丢失，是否退出？",
    "mi_commonHub_setting_nightlight": "感应夜灯",
    "mi_commonHub_nightlight_commont": "当{value}所在环境较暗时",
    "mi_commonHub_nightlight_timer": "感应时段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能选择10个网关报警",
    "common_offline": "已离线",
    "mi_commonHub_linkage_alarm_footer_text": "开启联动报警功能的网关中，当任意一个网关报警，其他网关也会联动报警，发出报警铃音和灯光",
    "mi_commonHub_linkage_alarm": "联动报警",
    "mi_commonHub_linkage_alarm_dis": "联动报警取消",
    "mi_commonHub_ring_doorbell": "门铃音",
    "mi_commonHub_ring_knocking": "敲门音",
    "mi_commonHub_ring_funny": "搞笑音",
    "mi_commonHub_ring_alarm_clock": "闹钟音",
    "mi_commonHub_ring_alarm_music": "警戒音",
    "mi_commonHub_ring_policecar1": "警车音1",
    "mi_commonHub_ring_policecar2": "警车音2",
    "mi_commonHub_ring_safety_accident": "安全事故音",
    "mi_commonHub_ring_countdown": "导弹倒计时",
    "mi_commonHub_ring_ghost": "鬼叫声",
    "mi_commonHub_ring_gun": "狙击枪声",
    "mi_commonHub_ring_battle": "激战声",
    "mi_commonHub_ring_airraid": "空袭警报",
    "mi_commonHub_ring_dog": "狗叫声",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "功率高于 {value}",
    "mi_common_power_is_below": "功率低于 {value}",
    "mi_common_please_enter_the_value": "请输入{value}的数值",
    "mi_common_max_value": "最大值为{value}",
    "mi_common_min_value": "最小值为{value}",
    "mi_common_temp_error_fail": "温度过高，请及时检查设备",
    "mi_common_temp_error": "温度过高，已自动断开设备电源。需单击按键或断电解除本次保护，即可继续使用。",
    "mi_common_power_error_fail": "功率过载，请及时检查设备",
    "mi_common_power_error": "功率过载，已自动断开设备电源。需单击按键或断电解除本次保护，即可继续使用。",
    "mi_common_setting_cutOff": "断电记忆",
    "mi_common_setting_cutOff_tps": "来电后，开关保持断电之前的状态",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "一直响",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}分钟",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}秒",
    "mi_comboHub_guardSetting": "守护设置",
    "mi_comboHub_guardSetting_delayTime_immediately": "立即生效",
    "mi_linuxHub_arming_ring": "报警铃音",
    "mi_comboHub_guardSetting_alarmDuration": "报警音时长",
    "mi_comboHub_guardSetting_alarmVolume": "报警音量",
    "mi_comboHub_guardSetting_delayTime": "进入守护倒计时",
    "mi_common_power_is_up_to": "功率高至{value}",
    "mi_common_power_is_down_to": "功率低至{value}",
    "mi_commonHub_setting_doorbell": "门铃",
    "mi_commonHub_setting_volume_doorbell": "门铃音量",
    "mi_commonHub_setting_push": "手机通知",
    "mi_commonHub_setting_alarmclock": "懒人闹钟",
    "mi_commonHub_guard_go_config": "去设置",
    "mi_commonHub_numbers": "个",
    "mi_commonHub_lazy_clock_list": "闹钟列表",
    "mi_commonHub_lazy_clock_close_way": "关闭闹钟方式",
    "mi_commonHub_timersetting_repeat": "重复",
    "mi_commonHub_setting_bell": "铃音",
    "mi_commonHub_setting_volume": "音量",
    "mi_commonHub_add_lazyclock": "添加闹钟",
    "mi_commonHub_lazy_clock_delete": "确认删除所选定时？",
    "mi_commonHub_sure_delete": "确认删除所选项吗？",
    "mi_commonHub_lazy_clock_list_empty": "未添加闹钟",
    "mi_commonHub_lazy_clock_name": "闹钟定时器",
    "mi_commonHub_play_specific_tone": "播放指定铃声",
    "mi_commonHub_tone_volume": "铃声音量",
    "mi_common_timer_list_empty": "还没有添加定时哦",
    "mi_common_check_same_remote": "当前匹配的空调无法支持定时中设定的空调状态，将导致定时不生效，请重新设置定时",
    "mi_common_dialog_ok": "好的",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "关闭指示灯",
    "mi_common_close_indicator_light_tips": "每天21:00至09:00关闭指示灯",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除当前窗帘行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗帘开合方向调正",
    "mi_common_adjust": "调正",
    "mi_common_adjust_success": "调正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "名称不能为空",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "开至{progress}%",
    "mi_common_opened_fully": "完全开启",
    "mi_common_closed_fully": "完全关闭",
    "mi_common_setting_success": "设置成功",
    "mi_common_setting": "正在设置…",
    "mi_common_control_curtain_manually": "手动开/关窗帘",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗帘样式",
    "mi_common_curtain_install_guide": "行程设置引导",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗帘开至指定位置",
    "mi_curtain_open_to": "窗帘开至{progress}%",
    "mi_curtain_style_double": "双开窗帘",
    "mi_curtain_style_double_simple": "双开",
    "mi_curtain_style_left": "左开窗帘",
    "mi_curtain_style_left_simple": "左开",
    "mi_curtain_style_right": "右开窗帘",
    "mi_curtain_style_right_simple": "右开",
    "mi_common_discard_operation": "放弃当前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "保存失败，请重试",
    "mi_curtain_common_open": "打开",
    "mi_curtain_common_close": "关闭",
    "mi_curtain_common_pause": "暂停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "操作成功",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "按键按一下（必选）",
    "mi_commonHub_must_choose": "必选",
    "mi_commonHub_send_phone_msg": "向手机发送通知",
    "mi_commonHub_ring_the_bell": "响门铃",
    "mi_commonHub_lazy_clock_close": "关闭闹钟",
    "mi_commonHub_system_ringtone": "系统铃音",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "添加",
    "mi_commonHub_guard_alarm_sound_light_settings": "报警声光设置",
    "mi_commonHub_guard_guardian_countdown": "守护开启倒计时",
    "mi_commonHub_arming_light_length": "灯光闪烁时长",
    "mi_commonHub_arming_always_flashing": "一直闪",
    "mi_commonHub_arming_not_flashing": "不闪烁",
    "mi_commonHub_linkage_alarm_hint_detail": "联动其他网关一起报警，提升安全等级",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "选择日期",
    "common_month_1": "1月",
    "common_month_2": "2月",
    "common_month_3": "3月",
    "common_month_4": "4月",
    "common_month_5": "5月",
    "common_month_6": "6月",
    "common_month_7": "7月",
    "common_month_8": "8月",
    "common_month_9": "9月",
    "common_month_10": "10月",
    "common_month_11": "11月",
    "common_month_12": "12月",
    "common_year_month_1": "s%年1月",
    "common_year_month_2": "s%年2月",
    "common_year_month_3": "s%年3月",
    "common_year_month_4": "s%年4月",
    "common_year_month_5": "s%年5月",
    "common_year_month_6": "s%年6月",
    "common_year_month_7": "s%年7月",
    "common_year_month_8": "s%年8月",
    "common_year_month_9": "s%年9月",
    "common_year_month_10": "s%年10月",
    "common_year_month_11": "s%年11月",
    "common_year_month_12": "s%年12月",
    "common_week_mon_short": "一",
    "common_week_tue_short": "二",
    "common_week_wed_short": "三",
    "common_week_thu_short": "四",
    "common_week_fri_short": "五",
    "common_week_sat_short": "六",
    "common_week_sun_short": "日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "日历",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人离开后延时关灯时间",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "支持固件自动更新功能",
    "mi_common_view_details": "点击可查看详情",
    "mi_common_gateway_profile_alarm_setting_title": "报警铃音设置",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee子设备",
    "common_hub_bluetooth_subdevice": "蓝牙子设备"
  };
  exports.default = zhHans;
},10088,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHantHK = {
    "langugeName": "粤语(中国香港)",
    "common_setting_title": "設定",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "功能設定",
    "common_setting_general_setting": "通用設定",
    "common_setting_device_name": "裝置名稱",
    "common_setting_multiswitch": "按鍵設定",
    "common_setting_device_timeZone": "裝置時區",
    "common_setting_location_management": "位置管理",
    "common_setting_share_device": "裝置共享",
    "common_setting_ifttt_auto": "智能場景",
    "common_setting_btGateway": "藍牙Mesh網關",
    "common_setting_btGateway_status_read_fail": "藍牙Mesh網關狀態讀取失敗",
    "common_setting_btGateway_connected": "連接的藍牙設備",
    "common_setting_firmware_upgrate": "檢查韌體升級",
    "common_setting_more_setting": "更多設定",
    "common_setting_add_to_desktop": "新增至桌面",
    "common_setting_privacy_agreement": "使用者條款和私隱政策",
    "common_setting_delete_device": "刪除裝置",
    "common_setting_help_page": "使用説明",
    "common_setting_more_seting_security": "安全設定",
    "common_setting_more_seting_faq": "常見問題",
    "common_setting_more_seting_isssues": "意見反饋",
    "common_setting_user_agreement": "軟件許可及服務協議",
    "common_setting_privacy_policy": "私隱政策",
    "common_setting_feature_plug_in": "韌體程式版本號",
    "common_setting_homekit_device_add": "綁定到HomeKit",
    "common_setting_homekit_device_bound": "已綁定",
    "common_setting_homekit_device_noBind": "未綁定",
    "common_setting_laboratory": "實驗室功能",
    "common_setting_protect_delete": "防止誤刪除",
    "common_log_title": "日誌",
    "common_log_today": "今天",
    "common_log_yesterday": "昨天",
    "common_log_no_logs": "暫無記錄",
    "common_log_loading": "載入中...",
    "common_log_loading_with_dot": "載入中...",
    "common_log_logDataHasloaded": "載入所有記錄",
    "common_log_all_data_has_been_loaded": "所有數據已載入完畢",
    "common_log_no_data": "暫無數據",
    "common_cancel": "取消",
    "common_ok": "確定",
    "common_manufacturer": "製造商",
    "common_lumi": "綠米聯創",
    "common_tips_network_unconnect": "網絡連接不可用",
    "common_tips_battery_low": "電池電量低",
    "common_tips_iknow": "我知道了",
    "common_button_done": "完成",
    "common_button_delete": "刪除",
    "common_button_retry": "重試",
    "common_button_save": "保存",
    "common_tips_delete_succeed": "刪除成功",
    "common_tips_delete_failed": "刪除失敗",
    "common_tips_loading_failed": "載入失敗",
    "common_tips_request_failed": "請求失敗，請檢查網路",
    "common_button_prev": "上一步",
    "common_button_next": "下一步",
    "common_button_changename": "重命名",
    "common_date_workday": "週一至週五",
    "common_date_weekend": "週末",
    "common_date_selfdefine": "自定義",
    "common_date_mon": "星期一",
    "common_date_tues": "星期二",
    "common_date_wed": "星期三",
    "common_date_thur": "星期四",
    "common_date_fri": "星期五",
    "common_date_sat": "星期六",
    "common_date_sun": "星期日",
    "common_date_day": "日",
    "common_date_week": "週",
    "common_date_month": "月",
    "common_date_hour": "時",
    "common_date_minute": "分鐘",
    "common_date_second": "秒",
    "common_tips_discard_operation": "確認放棄本次操作？",
    "common_tips_setting": "設定中，請稍候..",
    "common_tips_setting_failed": "設定失敗",
    "common_tips_loading_failed_retry": "載入失敗，點選再試一次",
    "common_tips_shared_no_promision": "被共用裝置無此權限",
    "common_electricity": "電量統計",
    "common_power_history": "功率歷史記錄",
    "common_hardware_update_updating": "韌體正在升級，請稍候…",
    "common_hardware_update_default": "偵測到裝置有最新韌體版本 {version}，是否升級?",
    "common_hardware_update_isforce": "裝置目前韌體版本過低，為了能正常使用，請升級至最新版本 {version}",
    "common_hardware_update": "去升級",
    "common_out": "離開",
    "common_hardware_checkupdate": "檢視升級",
    "common_operation_fail": "操作失敗",
    "common_repeat_everyday": "每天",
    "common_repeat_once": "執行一次",
    "common_repeat_tomorrow": "明天",
    "comon_unit_kwh": "度",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "刪除裝置後，裝置將從清單中移除。",
    "common_setting_device_delete_confirm": "確認刪除裝置嗎？",
    "common_voice_mute": "靜音",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "子裝置清單",
    "sub_device_list_header_tips": "下列子裝置已經連接在本閘道下",
    "zigbee_sub_device_list_header_tips": "下列Zigbee子設備已連接在本網關下",
    "sub_device_list_empty_tips": "該閘道下暫無關聯的子裝置",
    "zigbee_sub_device_list_empty_tips": "該閘道下暫無關聯的Zigbee子裝置",
    "sub_device_list_name_cant_empty": "設備名稱不能為空",
    "sub_device_list_name_cant_support_emoji": "不支持emoji表情",
    "sub_device_list_name_cant_support_special_char": "名稱不能包含特殊符號",
    "sub_device_list_name_cant_more_forty": "名稱不能超過40個字符",
    "sub_device_list_name_cant_same": "設備名稱不能相同",
    "sub_device_list_device_offline": "裝置已離線",
    "sub_device_list_selected": "已選中{XX}項",
    "sub_device_list_delete_multi_device": "確認刪除所選的{XX}個設備嗎？",
    "ifttt_triggle_single_press": "按一下",
    "ifttt_triggle_double_press": "長按",
    "ifttt_triggle_long_press": "按兩下",
    "ifttt_triggle_shake": "搖一搖",
    "ifttt_triggle_someone_moved": "有人移動",
    "ifttt_triggle_windoor_open": "門窗開啟",
    "ifttt_triggle_moved_afteronemin": "靜止一分鐘後被移動",
    "ifttt_triggle_detect_vibration": "感應到震動",
    "ifttt_triggle_detect_fall": "感應到跌落",
    "ifttt_triggle_detect_tilting": "感應到傾斜",
    "ifttt_triggle_fire_alert": "火警報警",
    "ifttt_triggle_gas_leakage_alert": "氣體洩露報警",
    "ifttt_triggle_flood_alert": "漏水報警",
    "guard_type_basic": "基礎守護",
    "guard_type_home": "在家守護",
    "guard_type_away": "離家守護",
    "guard_type_sleep": "睡眠守護",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用在家守護",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用離家守護",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用睡眠守護",
    "ifttt_push_title_triggle_alert_1": "{XX}中，{YY}觸發報警",
    "ifttt_push_title_triggle_alert_2": "{XX}中，{YY}感應到有人移動觸發報警",
    "ifttt_push_title_triggle_alert_magnet": "{XX}守護中，門窗狀態變化觸發報警",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%守護中，s%狀態變化觸發報警",
    "ifttt_push_title_triggle_alert_3": "{XX}中，{YY}打開觸發報警",
    "ifttt_push_title_triggle_alert_4": "{XX}中，{YY}感應到被移動",
    "ifttt_push_title_triggle_alert_5": "{XX}中，{YY}感應到浸水報警",
    "ifttt_push_title_triggle_alert_6": "{XX}中，{YY}檢測到氣體濃度超標",
    "ifttt_push_title_triggle_alert_7": "{XX}中，{YY}檢測到煙霧",
    "common_ifttt_scene_execute_result_fail": "執行失敗",
    "common_ifttt_scene_execute_result_unknow_error": "異常錯誤",
    "common_ifttt_scene_execute_result_time_out": "執行超時",
    "common_ifttt_scene_execute_result_camera_sleep": "攝像機已休眠",
    "common_ifttt_device_offline": "（已離線）",
    "timersetting_on": "開啓時間",
    "timersetting_off": "關閉時間",
    "timersetting_empty": "未設定",
    "timersetting_perio": "開啓時段",
    "common_start": "開始",
    "common_end": "結束",
    "common_color": "顏色",
    "common_open": "開啟",
    "common_scene_name_lm_scene_1_1": "警戒時，有人經過報警",
    "common_scene_name_lm_scene_1_2": "警戒時，門窗打開報警",
    "common_scene_name_lm_scene_1_3": "警戒時，無線開關按下報警",
    "common_scene_name_lm_scene_1_4": "警戒時，魔方靜止一段時間被觸發報警",
    "common_scene_name_lm_scene_1_5": "警戒時，動靜貼靜止兩分鐘被觸發報警",
    "common_scene_name_lm_scene_2_1": "有人經過，感應夜燈亮",
    "common_scene_name_lm_scene_3_1": "無線開關按下響門鈴",
    "common_scene_name_lm_scene_3_2": "門窗打開響門鈴",
    "common_scene_name_lm_scene_3_3": "有人經過響門鈴",
    "common_scene_name_lm_scene_4_1": "有人經過關鬧鐘",
    "common_scene_name_lm_scene_4_2": "門窗打開關鬧鐘",
    "common_scene_name_lm_scene_4_3": "無線開關按下關鬧鐘",
    "common_scene_name_lm_scene_5_1": "煙感連動網關警報",
    "common_scene_name_lm_scene_5_2": "氣感連動網關警報",
    "common_scene_name_lm_scene_5_3": "水浸連動網關警報",
    "common_close": "關閉",
    "common_state_closed": "已關閉",
    "sensor_set_ifttt_config_success": "配置成功",
    "common_automation_configuring": "正在配置套裝自動化，請稍候...",
    "sensor_set_ifttt_config_fail": "配置失敗",
    "sensor_set_ifttt_config_fail_tip": "1. 需將網關連接wifi\n2. 需將手機連接wifi\n3. 請保證wifi正常",
    "mi_linuxHub_guard_guard_timer": "守護定時",
    "mi_linuxHub_timer_light_name": "彩燈定時器",
    "mi_linuxHub_lazy_clock_name": "鬧鐘定時器",
    "sensor_set_ifttt_scene_name_1": "門口打開提醒",
    "sensor_set_ifttt_scene_name_2": "單擊無線開關開/關夜燈",
    "sensor_set_ifttt_scene_name_3": "雙擊無線開關開關警戒",
    "sensor_set_ifttt_scene_name_4": "有人經過，感應夜燈亮",
    "sensor_set_ifttt_scene_name_5": "2分鐘無人移動夜燈關",
    "sensor_set_ifttt_scene_name_6": "有人移動夜燈開",
    "sensor_set_ifttt_scene_name_7": "单击无线开关开/关插座",
    "sensor_set_ifttt_triggle_name_1": "打開後超過1分鐘未關閉",
    "sensor_set_ifttt_triggle_name_2": "2分鐘無人移動",
    "sensor_set_ifttt_triggle_name_3": "播放指定的鈴音",
    "sensor_set_ifttt_triggle_name_4": "開/關夜燈",
    "sensor_set_ifttt_triggle_name_5": "感應夜燈亮",
    "sensor_set_ifttt_triggle_name_6": "關夜燈",
    "sensor_set_ifttt_triggle_name_7": "開夜燈",
    "sensor_set_ifttt_triggle_name_8": "開/關警戒",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "部分執行成功",
    "common_short_date_mon": "週一",
    "common_short_date_tues": "週二",
    "common_short_date_wed": "週三",
    "common_short_date_thur": "週四",
    "common_short_date_fri": "週五",
    "common_short_date_sat": "週六",
    "common_short_date_sun": "週日",
    "common_repeat_timer_title": "重複選項",
    "common_repeat_self_timer_title": "自定義重複",
    "common_on": "開",
    "common_off": "關",
    "common_timer": "定時",
    "common_unit_minute_short": "分鐘",
    "common_count_down": "{XX}-倒計時",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "今日用电",
    "common_plug_month_elec": "当月用电",
    "common_plug_current_power": "当前功率",
    "mi_comboHub_mainPage_guard": "守護",
    "mi_comboHub_mainPage_guard_base": "基礎",
    "mi_comboHub_mainPage_guard_home": "在家",
    "mi_comboHub_mainPage_guard_away": "離家",
    "mi_comboHub_mainPage_guard_sleep": "睡眠",
    "common_comboHub_triggle_device_alert": "報警",
    "common_comboHub_triggle_device_opened_guard": "（已在{XX}守護中開啟）",
    "common_comboHub_triggle_device_only_open_basic": "（只可用於基礎守護）",
    "common_comboHub_triggle_device_opened_basic": "（已在基礎守護中開啟）",
    "common_setting_homekit_device_desc": "該設備可在Apple家庭APP配置和使用",
    "common_ifttt_triggleName_switch": "開關狀態變化觸發警報",
    "common_ifttt_triggleName_vibration": "狀態變化觸發警報",
    "common_ifttt_triggleName_cube": "靜止一分鐘被移動觸發警報",
    "common_ifttt_triggleName_magnet": "門窗狀態變化觸發警報",
    "common_ifttt_triggleName_motion": "有人移動觸發警報",
    "common_timer_light_timer_light_period": "時間段定時",
    "common_timer_light_timer_on": "定時開啟",
    "common_timer_light_timer_off": "定時關閉",
    "common_timer_light_timer_time_after": "開始時間在結束時間之後",
    "common_lumi_sensor_setting_battery": "電池電量",
    "common_lumi_sensor_setting_battery_normal": "正常",
    "common_lumi_sensor_battery_guide_title": "更換電池指引",
    "common_lumi_sensor_battery_guide_description": "請打開電池後蓋，按照圖示更換電池",
    "common_ifttt_suit_apart_fail": "配置部分失败",
    "common_ifttt_suit_success_tips": "可在智能场景列表查看或编辑",
    "common_ifttt_suit_apart_fail_tips": "已创建成功的可在智能场景列表查看或编辑",
    "common_ifttt_suit_not_build": "暂不创建",
    "common_kpa": " kPa",
    "common_battery_power_low": "電量低，請儘快更換電池。",
    "common_overheat_abnormal": "过温异常",
    "common_overload_abnormal": "过载异常",
    "common_overheat_protect": "过温保护",
    "common_overload_protect": "过载保护",
    "common_overheat_warn": "过温报警",
    "common_overload_warn": "过载报警",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "觸發報警裝置",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggle_device_header_title_1": "不可啟用的設備",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "不用翻當網關下有持續監測環境的設備，如煙霧報警器，可啟用這些設備為基礎守護的觸發報警設備，開啟後，基礎守護將7×24小時無間斷守護家庭安全。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "已作為在家/離家/睡眠守護的觸發警報設備，不可用於基礎守護",
    "mi_comboHub_triggle_device_header1_subtitle_home": "設置觸發警報設備後，你可以開啟在家守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_home": "已作為基礎守護的觸發警報設備，不可用於在家守護",
    "mi_comboHub_triggle_device_header1_subtitle_away": "設置觸發警報設備後，你可以開啟離家守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_away": "已作為基礎守護的觸發警報設備，不可用於離家守護",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "設置觸發警報設備後，你可以開啟睡眠守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "已作為基礎守護的觸發警報設備，不可用於睡眠守護",
    "mi_comboHub_triggle_device_empty_tip": "該閘道下暫無可作為報警觸發源的裝置，如人體感測器、門窗感測器以及無線開關等",
    "mi_comboHub_triggle_device_go_to_bug": "去購買",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一滿足時",
    "mi_ifttt_action": "就執行",
    "mi_commonHub_nightlight_open": "開啟夜燈",
    "mi_commonHub_nightlight_motion_limit": "最多只能選擇9個人體傳感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分鐘後關閉夜燈",
    "mi_commonHub_go_back_title": "離開編輯",
    "mi_commonHub_go_back_content": "離開後修改將丟失，是否離開?",
    "mi_commonHub_setting_nightlight": "感應夜燈",
    "mi_commonHub_nightlight_commont": "當{value}所在環境較暗時",
    "mi_commonHub_nightlight_timer": "感應時段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能選擇10個網關報警",
    "common_offline": "已離線",
    "mi_commonHub_linkage_alarm_footer_text": "開啟聯動報警功能的閘道中，當任意一個閘道報警，其他閘道也會聯動報警，發出報警鈴音和燈光",
    "mi_commonHub_linkage_alarm": "聯動警報",
    "mi_commonHub_linkage_alarm_dis": "聯動警報取消",
    "mi_commonHub_ring_doorbell": "門鈴聲",
    "mi_commonHub_ring_knocking": "敲門音",
    "mi_commonHub_ring_funny": "搞笑音",
    "mi_commonHub_ring_alarm_clock": "鬧鐘音",
    "mi_commonHub_ring_alarm_music": "警報鈴聲",
    "mi_commonHub_ring_policecar1": "警車音1",
    "mi_commonHub_ring_policecar2": "警車音2",
    "mi_commonHub_ring_safety_accident": "安全事故音",
    "mi_commonHub_ring_countdown": "導彈倒計時",
    "mi_commonHub_ring_ghost": "鬼叫聲",
    "mi_commonHub_ring_gun": "狙擊槍",
    "mi_commonHub_ring_battle": "激戰聲",
    "mi_commonHub_ring_airraid": "空襲警報",
    "mi_commonHub_ring_dog": "狗叫聲",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "功率高於 {value}",
    "mi_common_power_is_below": "功率低於 {value}",
    "mi_common_please_enter_the_value": "請輸入{value}的數值",
    "mi_common_max_value": "最大值為{value}",
    "mi_common_min_value": "最小值为{value}",
    "mi_common_temp_error_fail": "溫度過高，請及時檢查設備",
    "mi_common_temp_error": "溫度過高，已自動斷開設備電源。需單擊按鍵或斷電解除本次保護，即可繼續使用。",
    "mi_common_power_error_fail": "功率過載，請及時檢查設備",
    "mi_common_power_error": "功率過載，已自動斷開設備電源。需單擊按鍵或斷電解除本次保護，即可繼續使用。",
    "mi_common_setting_cutOff": "断电记忆",
    "mi_common_setting_cutOff_tps": "来电后，开关保持断电之前的状态",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "一直響",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}分鐘",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}秒",
    "mi_comboHub_guardSetting": "守護設定",
    "mi_comboHub_guardSetting_delayTime_immediately": "立即生效",
    "mi_linuxHub_arming_ring": "報警鈴音",
    "mi_comboHub_guardSetting_alarmDuration": "報警音時長",
    "mi_comboHub_guardSetting_alarmVolume": "報警音量",
    "mi_comboHub_guardSetting_delayTime": "進入守護倒計時",
    "mi_common_power_is_up_to": "功率高至{value}",
    "mi_common_power_is_down_to": "功率低至{value}",
    "mi_commonHub_setting_doorbell": "門鈴",
    "mi_commonHub_setting_volume_doorbell": "門鈴音量",
    "mi_commonHub_setting_push": "手機通知",
    "mi_commonHub_setting_alarmclock": "懶人鬧鐘",
    "mi_commonHub_guard_go_config": "前往設定",
    "mi_commonHub_numbers": "個",
    "mi_commonHub_lazy_clock_list": "鬧鐘清單",
    "mi_commonHub_lazy_clock_close_way": "關閉鬧鐘方式",
    "mi_commonHub_timersetting_repeat": "重複",
    "mi_commonHub_setting_bell": "鈴音",
    "mi_commonHub_setting_volume": "音量",
    "mi_commonHub_add_lazyclock": "添加鬧鐘",
    "mi_commonHub_lazy_clock_delete": "確認刪除所選定時?",
    "mi_commonHub_sure_delete": "確認刪除所選項嗎？",
    "mi_commonHub_lazy_clock_list_empty": "未新增鬧鐘",
    "mi_commonHub_lazy_clock_name": "鬧鐘定時器",
    "mi_commonHub_play_specific_tone": "播放指定鈴聲",
    "mi_commonHub_tone_volume": "鈴聲音量",
    "mi_common_timer_list_empty": "还没有添加定时哦",
    "mi_common_check_same_remote": "当前匹配的空调无法支持定时中设定的空调状态，将导致定时不生效，请重新设置定时",
    "mi_common_dialog_ok": "好的",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "關閉指示燈",
    "mi_common_close_indicator_light_tips": "每天21:00至09:00关闭指示灯",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除當前窗簾行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗簾開合方向調正",
    "mi_common_adjust": "調正",
    "mi_common_adjust_success": "調正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "名稱不能為空",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "開至{progress}%",
    "mi_common_opened_fully": "完全開啟",
    "mi_common_closed_fully": "完全關閉",
    "mi_common_setting_success": "設置成功",
    "mi_common_setting": "正在設置…",
    "mi_common_control_curtain_manually": "手動開/關窗簾",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗簾樣式",
    "mi_common_curtain_install_guide": "行程設置引導",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗簾開至指定位置",
    "mi_curtain_open_to": "窗簾開至{progress}%",
    "mi_curtain_style_double": "雙開窗簾",
    "mi_curtain_style_double_simple": "雙開",
    "mi_curtain_style_left": "左開窗簾",
    "mi_curtain_style_left_simple": "左開",
    "mi_curtain_style_right": "右開窗簾",
    "mi_curtain_style_right_simple": "右開",
    "mi_common_discard_operation": "放棄當前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "儲存失敗，請重試",
    "mi_curtain_common_open": "打開",
    "mi_curtain_common_close": "關閉",
    "mi_curtain_common_pause": "暫停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "操作成功",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "按鍵按一下（必選）",
    "mi_commonHub_must_choose": "必選",
    "mi_commonHub_send_phone_msg": "向手機傳送通知",
    "mi_commonHub_ring_the_bell": "響門鈴",
    "mi_commonHub_lazy_clock_close": "關閉鬧鐘",
    "mi_commonHub_system_ringtone": "系統鈴音",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "添加",
    "mi_commonHub_guard_alarm_sound_light_settings": "報警聲光設定",
    "mi_commonHub_guard_guardian_countdown": "守護開啟倒計時",
    "mi_commonHub_arming_light_length": "燈光閃爍時長",
    "mi_commonHub_arming_always_flashing": "一直閃",
    "mi_commonHub_arming_not_flashing": "不閃爍",
    "mi_commonHub_linkage_alarm_hint_detail": "聯動其他網關一起報警，提升安全等級",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "選擇日期",
    "common_month_1": "1月",
    "common_month_2": "2月",
    "common_month_3": "3月",
    "common_month_4": "4月",
    "common_month_5": "5月",
    "common_month_6": "6月",
    "common_month_7": "7月",
    "common_month_8": "8月",
    "common_month_9": "9月",
    "common_month_10": "10月",
    "common_month_11": "11月",
    "common_month_12": "12月",
    "common_year_month_1": "s%年1月",
    "common_year_month_2": "s%年2月",
    "common_year_month_3": "s%年3月",
    "common_year_month_4": "s%年4月",
    "common_year_month_5": "s%年5月",
    "common_year_month_6": "s%年6月",
    "common_year_month_7": "s%年7月",
    "common_year_month_8": "s%年8月",
    "common_year_month_9": "s%年9月",
    "common_year_month_10": "s%年10月",
    "common_year_month_11": "s%年11月",
    "common_year_month_12": "s%年12月",
    "common_week_mon_short": "星期一",
    "common_week_tue_short": "星期二",
    "common_week_wed_short": "星期三",
    "common_week_thu_short": "星期四",
    "common_week_fri_short": "星期五",
    "common_week_sat_short": "星期六",
    "common_week_sun_short": "星期日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "日歷",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人離開後延時關燈時間",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "支援韌體自動更新功能",
    "mi_common_view_details": "點擊即可查看詳情",
    "mi_common_gateway_profile_alarm_setting_title": "报警铃音设置",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee子設備",
    "common_hub_bluetooth_subdevice": "藍牙子設備"
  };
  exports.default = zhHantHK;
},10091,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHant = {
    "langugeName": "粤语(中国台湾)",
    "common_setting_title": "設定",
    "mi_common_mode_cool": "制冷",
    "mi_common_mode_heat": "制热",
    "mi_common_mode_dry": "除湿",
    "mi_common_mode_fan": "送风",
    "mi_common_mode_auto": "自动",
    "mi_common_fanspeed_low": "低速",
    "mi_common_fanspeed_medium": "中速",
    "mi_common_fanspeed_high": "高速",
    "mi_common_fanspeed_with_auto": "风速自动",
    "mi_common_fanspeed_with_low": "风速低",
    "mi_common_fanspeed_with_medium": "风速中",
    "mi_common_fanspeed_with_high": "风速高",
    "mi_common_with_mode_cool": "制冷模式",
    "mi_common_mode": "模式",
    "mi_common_with_mode_heat": "制热模式",
    "mi_common_with_mode_auto": "自动模式",
    "mi_common_with_mode_fan": "送风模式",
    "mi_common_with_mode_dry": "除湿模式",
    "mi_common_timer_workstate_wind_open": "扫风开",
    "mi_common_timer_workstate_wind_close": "扫风关",
    "mi_common_power_on": "电源-开",
    "mi_common_power_off": "电源-关",
    "common_setting_feature_setting": "功能設定",
    "common_setting_general_setting": "通用設定",
    "common_setting_device_name": "裝置名稱",
    "common_setting_multiswitch": "按鍵設定",
    "common_setting_device_timeZone": "裝置時區",
    "common_setting_location_management": "位置管理",
    "common_setting_share_device": "裝置共用",
    "common_setting_ifttt_auto": "智慧場景",
    "common_setting_btGateway": "藍牙Mesh網關",
    "common_setting_btGateway_status_read_fail": "藍牙Mesh網關狀態讀取失敗",
    "common_setting_btGateway_connected": "連接的藍牙裝置",
    "common_setting_firmware_upgrate": "檢查韌體升級",
    "common_setting_more_setting": "更多設定",
    "common_setting_add_to_desktop": "新增至桌面",
    "common_setting_privacy_agreement": "使用者條款和隱私權政策",
    "common_setting_delete_device": "刪除裝置",
    "common_setting_help_page": "使用説明",
    "common_setting_more_seting_security": "安全設定",
    "common_setting_more_seting_faq": "常見問題",
    "common_setting_more_seting_isssues": "意見反應",
    "common_setting_user_agreement": "軟體授權及服務協議",
    "common_setting_privacy_policy": "隱私權政策",
    "common_setting_feature_plug_in": "韌體程式版本號",
    "common_setting_homekit_device_add": "綁定到HomeKit",
    "common_setting_homekit_device_bound": "已綁定",
    "common_setting_homekit_device_noBind": "未綁定",
    "common_setting_laboratory": "實驗室功能",
    "common_setting_protect_delete": "防止誤刪除",
    "common_log_title": "日誌",
    "common_log_today": "今天",
    "common_log_yesterday": "昨天",
    "common_log_no_logs": "暫無記錄",
    "common_log_loading": "載入中...",
    "common_log_loading_with_dot": "載入中...",
    "common_log_logDataHasloaded": "載入所有記錄",
    "common_log_all_data_has_been_loaded": "所有資料已載入完畢",
    "common_log_no_data": "暫無資料",
    "common_cancel": "取消",
    "common_ok": "確定",
    "common_manufacturer": "製造商",
    "common_lumi": "綠米聯創",
    "common_tips_network_unconnect": "網絡連接不可用",
    "common_tips_battery_low": "電池電量低",
    "common_tips_iknow": "我知道了",
    "common_button_done": "完成",
    "common_button_delete": "刪除",
    "common_button_retry": "重試",
    "common_button_save": "保存",
    "common_tips_delete_succeed": "刪除成功",
    "common_tips_delete_failed": "刪除失敗",
    "common_tips_loading_failed": "載入失敗",
    "common_tips_request_failed": "請求失敗，請檢查網路",
    "common_button_prev": "上一步",
    "common_button_next": "下一步",
    "common_button_changename": "重命名",
    "common_date_workday": "週一至週五",
    "common_date_weekend": "週末",
    "common_date_selfdefine": "自定義",
    "common_date_mon": "星期一",
    "common_date_tues": "星期二",
    "common_date_wed": "星期三",
    "common_date_thur": "星期四",
    "common_date_fri": "星期五",
    "common_date_sat": "星期六",
    "common_date_sun": "星期日",
    "common_date_day": "日",
    "common_date_week": "週",
    "common_date_month": "月",
    "common_date_hour": "時",
    "common_date_minute": "分鐘",
    "common_date_second": "秒",
    "common_tips_discard_operation": "確認放棄本次操作？",
    "common_tips_setting": "設定中，請稍候..",
    "common_tips_setting_failed": "設定失敗",
    "common_tips_loading_failed_retry": "載入失敗，點選再試一次",
    "common_tips_shared_no_promision": "被共用裝置無此權限",
    "common_electricity": "電量統計",
    "common_power_history": "功率歷史記錄",
    "common_hardware_update_updating": "韌體正在升級，請稍候…",
    "common_hardware_update_default": "偵測到裝置有最新韌體版本 {version}，是否升級?",
    "common_hardware_update_isforce": "裝置目前韌體版本過低，為了能正常使用，請升級至最新版本 {version}",
    "common_hardware_update": "去升級",
    "common_out": "離開",
    "common_hardware_checkupdate": "檢視升級",
    "common_operation_fail": "操作失敗",
    "common_repeat_everyday": "每天",
    "common_repeat_once": "執行一次",
    "common_repeat_tomorrow": "明天",
    "comon_unit_kwh": "度",
    "comon_unit_w": " W",
    "common_setting_device_delete_tip": "刪除裝置後，裝置將從清單中移除。",
    "common_setting_device_delete_confirm": "確認刪除裝置嗎？",
    "common_voice_mute": "靜音",
    "common_voice_high": "高",
    "common_voice_middle": "中",
    "common_voice_low": "低",
    "sub_device_list_title": "子裝置清單",
    "sub_device_list_header_tips": "下列子裝置已經連接在本閘道下",
    "zigbee_sub_device_list_header_tips": "下列Zigbee子設備已連接在本網關下",
    "sub_device_list_empty_tips": "該閘道下暫無關聯的子裝置",
    "zigbee_sub_device_list_empty_tips": "該閘道下暫無關聯的Zigbee子裝置",
    "sub_device_list_name_cant_empty": "設備名稱不能為空",
    "sub_device_list_name_cant_support_emoji": "不支持emoji表情",
    "sub_device_list_name_cant_support_special_char": "名稱不能包含特殊符號",
    "sub_device_list_name_cant_more_forty": "名稱不能超過40個字符",
    "sub_device_list_name_cant_same": "設備名稱不能相同",
    "sub_device_list_device_offline": "裝置已離線",
    "sub_device_list_selected": "已選中{XX}項",
    "sub_device_list_delete_multi_device": "確認刪除所選的{XX}個設備嗎？",
    "ifttt_triggle_single_press": "按一下",
    "ifttt_triggle_double_press": "長按",
    "ifttt_triggle_long_press": "按兩下",
    "ifttt_triggle_shake": "搖一搖",
    "ifttt_triggle_someone_moved": "有人移動",
    "ifttt_triggle_windoor_open": "門窗開啟",
    "ifttt_triggle_moved_afteronemin": "靜止一分鐘後被移動",
    "ifttt_triggle_detect_vibration": "感應到震動",
    "ifttt_triggle_detect_fall": "感應到跌落",
    "ifttt_triggle_detect_tilting": "感應到傾斜",
    "ifttt_triggle_fire_alert": "火警報警",
    "ifttt_triggle_gas_leakage_alert": "氣體洩露報警",
    "ifttt_triggle_flood_alert": "漏水報警",
    "guard_type_basic": "基礎守護",
    "guard_type_home": "在家守護",
    "guard_type_away": "離家守護",
    "guard_type_sleep": "睡眠守護",
    "mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用在家守護",
    "mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用離家守護",
    "mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips": "請設定至少一個子裝置作為報警觸發條件，以啟用睡眠守護",
    "ifttt_push_title_triggle_alert_1": "{XX}中，{YY}觸發報警",
    "ifttt_push_title_triggle_alert_2": "{XX}中，{YY}感應到有人移動觸發報警",
    "ifttt_push_title_triggle_alert_magnet": "{XX}守護中，門窗狀態變化觸發報警",
    "ifttt_push_title_triggle_alert_magnet_with_deviceName": "d%守護中，s%狀態變化觸發報警",
    "ifttt_push_title_triggle_alert_3": "{XX}中，{YY}打開觸發報警",
    "ifttt_push_title_triggle_alert_4": "{XX}中，{YY}感應到被移動",
    "ifttt_push_title_triggle_alert_5": "{XX}中，{YY}感應到浸水報警",
    "ifttt_push_title_triggle_alert_6": "{XX}中，{YY}檢測到氣體濃度超標",
    "ifttt_push_title_triggle_alert_7": "{XX}中，{YY}檢測到煙霧",
    "common_ifttt_scene_execute_result_fail": "執行失敗",
    "common_ifttt_scene_execute_result_unknow_error": "異常錯誤",
    "common_ifttt_scene_execute_result_time_out": "執行超時",
    "common_ifttt_scene_execute_result_camera_sleep": "攝像機已休眠",
    "common_ifttt_device_offline": "（已離線）",
    "timersetting_on": "開啓時間",
    "timersetting_off": "關閉時間",
    "timersetting_empty": "未設定",
    "timersetting_perio": "開啓時段",
    "common_start": "開始",
    "common_end": "結束",
    "common_color": "顏色",
    "common_open": "開啟",
    "common_scene_name_lm_scene_1_1": "警戒時，有人經過報警",
    "common_scene_name_lm_scene_1_2": "警戒時，門窗打開報警",
    "common_scene_name_lm_scene_1_3": "警戒時，無線開關按下報警",
    "common_scene_name_lm_scene_1_4": "警戒時，魔方靜止一段時間被觸發報警",
    "common_scene_name_lm_scene_1_5": "警戒時，動靜貼靜止兩分鐘被觸發報警",
    "common_scene_name_lm_scene_2_1": "有人經過，感應夜燈亮",
    "common_scene_name_lm_scene_3_1": "無線開關按下響門鈴",
    "common_scene_name_lm_scene_3_2": "門窗打開響門鈴",
    "common_scene_name_lm_scene_3_3": "有人經過響門鈴",
    "common_scene_name_lm_scene_4_1": "有人經過關鬧鐘",
    "common_scene_name_lm_scene_4_2": "門窗打開關鬧鐘",
    "common_scene_name_lm_scene_4_3": "無線開關按下關鬧鐘",
    "common_scene_name_lm_scene_5_1": "煙感連動網關警報",
    "common_scene_name_lm_scene_5_2": "氣感連動網關警報",
    "common_scene_name_lm_scene_5_3": "水浸連動網關警報",
    "common_close": "關閉",
    "common_state_closed": "已關閉",
    "sensor_set_ifttt_config_success": "配置成功",
    "common_automation_configuring": "正在配置套裝自動化，請稍候...",
    "sensor_set_ifttt_config_fail": "配置失敗",
    "sensor_set_ifttt_config_fail_tip": "1. 需將網關連接wifi\n2. 需將手機連接wifi\n3. 請保證wifi正常",
    "mi_linuxHub_guard_guard_timer": "守護定時",
    "mi_linuxHub_timer_light_name": "彩燈定時器",
    "mi_linuxHub_lazy_clock_name": "鬧鐘定時器",
    "sensor_set_ifttt_scene_name_1": "門口打開提醒",
    "sensor_set_ifttt_scene_name_2": "單擊無線開關開/關夜燈",
    "sensor_set_ifttt_scene_name_3": "雙擊無線開關開關警戒",
    "sensor_set_ifttt_scene_name_4": "有人經過，感應夜燈亮",
    "sensor_set_ifttt_scene_name_5": "2分鐘無人移動夜燈關",
    "sensor_set_ifttt_scene_name_6": "有人移動夜燈開",
    "sensor_set_ifttt_scene_name_7": "单击无线开关开/关插座",
    "sensor_set_ifttt_triggle_name_1": "打開後超過1分鐘未關閉",
    "sensor_set_ifttt_triggle_name_2": "2分鐘無人移動",
    "sensor_set_ifttt_triggle_name_3": "播放指定的鈴音",
    "sensor_set_ifttt_triggle_name_4": "開/關夜燈",
    "sensor_set_ifttt_triggle_name_5": "感應夜燈亮",
    "sensor_set_ifttt_triggle_name_6": "關夜燈",
    "sensor_set_ifttt_triggle_name_7": "開夜燈",
    "sensor_set_ifttt_triggle_name_8": "開/關警戒",
    "sensor_set_ifttt_triggle_name_9": "亮度较暗",
    "common_scene_execute_partiallysucceed": "部分執行成功",
    "common_short_date_mon": "週一",
    "common_short_date_tues": "週二",
    "common_short_date_wed": "週三",
    "common_short_date_thur": "週四",
    "common_short_date_fri": "週五",
    "common_short_date_sat": "週六",
    "common_short_date_sun": "週日",
    "common_repeat_timer_title": "重複選項",
    "common_repeat_self_timer_title": "自定義重複",
    "common_on": "開",
    "common_off": "關",
    "common_timer": "定時",
    "common_unit_minute_short": "分鐘",
    "common_count_down": "{XX}-倒計時",
    "common_percent": " %",
    "common_percent_str": "{value} %",
    "common_degree_centigrade": " ℃",
    "common_degree_centigrade_str": "{value} ℃",
    "common_plug_today_elec": "今日用电",
    "common_plug_month_elec": "当月用电",
    "common_plug_current_power": "当前功率",
    "mi_comboHub_mainPage_guard": "守護",
    "mi_comboHub_mainPage_guard_base": "基礎",
    "mi_comboHub_mainPage_guard_home": "在家",
    "mi_comboHub_mainPage_guard_away": "離家",
    "mi_comboHub_mainPage_guard_sleep": "睡眠",
    "common_comboHub_triggle_device_alert": "報警",
    "common_comboHub_triggle_device_opened_guard": "（已在{XX}守護中開啟）",
    "common_comboHub_triggle_device_only_open_basic": "（只可用於基礎守護）",
    "common_comboHub_triggle_device_opened_basic": "（已在基礎守護中開啟）",
    "common_setting_homekit_device_desc": "該裝置可在Apple家庭APP配置和使用",
    "common_ifttt_triggleName_switch": "開關狀態變化觸發警報",
    "common_ifttt_triggleName_vibration": "狀態變化觸發警報",
    "common_ifttt_triggleName_cube": "靜止一分鐘被移動觸發警報",
    "common_ifttt_triggleName_magnet": "門窗狀態變化觸發警報",
    "common_ifttt_triggleName_motion": "有人移動觸發警報",
    "common_timer_light_timer_light_period": "時間段定時",
    "common_timer_light_timer_on": "定時開啟",
    "common_timer_light_timer_off": "定時關閉",
    "common_timer_light_timer_time_after": "開始時間在結束時間之後",
    "common_lumi_sensor_setting_battery": "電池型號",
    "common_lumi_sensor_setting_battery_normal": "正常",
    "common_lumi_sensor_battery_guide_title": "更換電池指引",
    "common_lumi_sensor_battery_guide_description": "請打開電池後蓋，按照圖示更換電池",
    "common_ifttt_suit_apart_fail": "配置部分失败",
    "common_ifttt_suit_success_tips": "可在智能场景列表查看或编辑",
    "common_ifttt_suit_apart_fail_tips": "已创建成功的可在智能场景列表查看或编辑",
    "common_ifttt_suit_not_build": "暂不创建",
    "common_kpa": " kPa",
    "common_battery_power_low": "電量低，請儘快更換電池。",
    "common_overheat_abnormal": "过温异常",
    "common_overload_abnormal": "过载异常",
    "common_overheat_protect": "过温保护",
    "common_overload_protect": "过载保护",
    "common_overheat_warn": "过温报警",
    "common_overload_warn": "过载报警",
    "common_Lux": " Lux",
    "mi_comboHub_mainPage_trigger_devices": "觸發報警裝置",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggle_device_header_title_1": "不可啟用的裝置",
    "mi_comboHub_triggle_device_header1_subtitle_basic": "當網關下有持續監測環境的裝置，如煙霧報警器、天然氣報警器，可啟用這些裝置為基礎守護的觸發報警裝置，開啟後，基礎守護將7×24小時無間斷守護家庭安全。",
    "mi_comboHub_triggle_device_header2_subtitle_basic": "已作為在家/離家/睡眠守護的觸發警報裝置，不可用於基礎守護",
    "mi_comboHub_triggle_device_header1_subtitle_home": "設定觸發警報裝置後，你可以開啟在家守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_home": "已作為基礎守護的觸發警報裝置，不可用於在家守護",
    "mi_comboHub_triggle_device_header1_subtitle_away": "設定觸發警報裝置後，你可以開啟離家守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_away": "已作為基礎守護的觸發警報裝置，不可用於離家守護",
    "mi_comboHub_triggle_device_header1_subtitle_sleep": "設置觸發警報裝置後，你可以開啟睡眠守護模式了",
    "mi_comboHub_triggle_device_header2_subtitle_sleep": "已作為基礎守護的觸發警報裝置，不可用於睡眠守護",
    "mi_comboHub_triggle_device_empty_tip": "該閘道下暫無可作為報警觸發源的裝置，如人體感測器、門窗感測器以及無線開關等",
    "mi_comboHub_triggle_device_go_to_bug": "去購買",
    "mi_commonHub_setting_nightlight_tomorrow": "次日",
    "mi_commonHub_setting_nightlight_allday": "全天",
    "mi_ifttt_launch": "如果任一滿足時",
    "mi_ifttt_action": "就執行",
    "mi_commonHub_nightlight_open": "開啟夜燈",
    "mi_commonHub_nightlight_motion_limit": "最多只能選擇9個人體傳感器",
    "mi_commonHub_nightlight_delay_close_min": "{value}分鐘後關閉夜燈",
    "mi_commonHub_go_back_title": "離開編輯",
    "mi_commonHub_go_back_content": "離開後修改將丟失，是否離開?",
    "mi_commonHub_setting_nightlight": "感應夜燈",
    "mi_commonHub_nightlight_commont": "當{value}所在環境較暗時",
    "mi_commonHub_nightlight_timer": "感應時段",
    "mi_commonHub_linkage_alarm_number_ten": "最多只能選擇10個網關報警",
    "common_offline": "已離線",
    "mi_commonHub_linkage_alarm_footer_text": "開啟聯動報警功能的閘道中，當任意一個閘道報警，其他閘道也會聯動報警，發出報警鈴音和燈光",
    "mi_commonHub_linkage_alarm": "連動警報",
    "mi_commonHub_linkage_alarm_dis": "連動警報取消",
    "mi_commonHub_ring_doorbell": "門鈴聲",
    "mi_commonHub_ring_knocking": "敲門音",
    "mi_commonHub_ring_funny": "搞笑音",
    "mi_commonHub_ring_alarm_clock": "鬧鐘音",
    "mi_commonHub_ring_alarm_music": "警報鈴聲",
    "mi_commonHub_ring_policecar1": "警車音1",
    "mi_commonHub_ring_policecar2": "警車音2",
    "mi_commonHub_ring_safety_accident": "安全事故音",
    "mi_commonHub_ring_countdown": "導彈倒計時",
    "mi_commonHub_ring_ghost": "鬼叫聲",
    "mi_commonHub_ring_gun": "狙擊槍",
    "mi_commonHub_ring_battle": "激戰聲",
    "mi_commonHub_ring_airraid": "空襲警報",
    "mi_commonHub_ring_dog": "狗叫聲",
    "mi_commonHub_ring_mimix": "MiMix",
    "mi_commonHub_ring_enthusuastic": "Enthusuastic",
    "mi_commonHub_ring_guitarclassic": "GuitarClassic",
    "mi_commonHub_ring_iceworldpiano": "IceWorldPiano",
    "mi_commonHub_ring_leisuretime": "LeisureTime",
    "mi_commonHub_ring_childhood": "Childhood",
    "mi_commonHub_ring_morningstreamllet": "MorningStreamLlet",
    "mi_commonHub_ring_musicbox": "MusicBox",
    "mi_commonHub_ring_orange": "Orange",
    "mi_commonHub_ring_thinker": "Thinker",
    "mi_common_power_is_above": "功率高於 {value}",
    "mi_common_power_is_below": "功率低於 {value}",
    "mi_common_please_enter_the_value": "請輸入{value}的數值",
    "mi_common_max_value": "最大值為{value}",
    "mi_common_min_value": "最小值为{value}",
    "mi_common_temp_error_fail": "溫度過高，請及時檢查設備",
    "mi_common_temp_error": "溫度過高，已自動斷開設備電源。需單擊按鍵或斷電解除本次保護，即可繼續使用。",
    "mi_common_power_error_fail": "功率過載，請及時檢查設備",
    "mi_common_power_error": "功率過載，已自動斷開設備電源。需單擊按鍵或斷電解除本次保護，即可繼續使用。",
    "mi_common_setting_cutOff": "断电记忆",
    "mi_common_setting_cutOff_tps": "来电后，开关保持断电之前的状态",
    "mi_comboHub_guardSetting_alarmDuration_alwaysRinging": "一直響",
    "mi_comboHub_guardSetting_alarmDuration_minutes": "{value}分鐘",
    "mi_comboHub_guardSetting_alarmDuration_seconds": "{value}秒",
    "mi_comboHub_guardSetting": "守護設定",
    "mi_comboHub_guardSetting_delayTime_immediately": "立即生效",
    "mi_linuxHub_arming_ring": "報警鈴音",
    "mi_comboHub_guardSetting_alarmDuration": "報警音時長",
    "mi_comboHub_guardSetting_alarmVolume": "報警音量",
    "mi_comboHub_guardSetting_delayTime": "進入守護倒計時",
    "mi_common_power_is_up_to": "功率高至{value}",
    "mi_common_power_is_down_to": "功率低至{value}",
    "mi_commonHub_setting_doorbell": "門鈴",
    "mi_commonHub_setting_volume_doorbell": "門鈴音量",
    "mi_commonHub_setting_push": "手機通知",
    "mi_commonHub_setting_alarmclock": "懶人鬧鐘",
    "mi_commonHub_guard_go_config": "前往設定",
    "mi_commonHub_numbers": "個",
    "mi_commonHub_lazy_clock_list": "鬧鐘清單",
    "mi_commonHub_lazy_clock_close_way": "關閉鬧鐘方式",
    "mi_commonHub_timersetting_repeat": "重複",
    "mi_commonHub_setting_bell": "鈴音",
    "mi_commonHub_setting_volume": "音量",
    "mi_commonHub_add_lazyclock": "添加鬧鐘",
    "mi_commonHub_lazy_clock_delete": "確認刪除所選定時?",
    "mi_commonHub_sure_delete": "確認刪除所選項嗎？",
    "mi_commonHub_lazy_clock_list_empty": "未新增鬧鐘",
    "mi_commonHub_lazy_clock_name": "鬧鐘定時器",
    "mi_commonHub_play_specific_tone": "播放指定鈴聲",
    "mi_commonHub_tone_volume": "鈴聲音量",
    "mi_common_timer_list_empty": "还没有添加定时哦",
    "mi_common_check_same_remote": "当前匹配的空调无法支持定时中设定的空调状态，将导致定时不生效，请重新设置定时",
    "mi_common_dialog_ok": "好的",
    "mi_common_timer_workstatue": "工作状态",
    "mi_common_timer_setting": "设置定时",
    "mi_common_timer_temperature": "温度",
    "mi_common_fanspeed": "风速",
    "mi_common_airswing": "扫风",
    "mi_common_timer_name": "定时开关",
    "mi_common_ask_add_ht": "还未添加温湿度传感器，是否添加？",
    "mi_common_ask_force_ht": "还未关联温湿度传感器，是否关联？",
    "mi_common_home_ht": "室内温湿度{temperture} {humidity}",
    "mi_common_add_fail_retry": "添加失败，请重试！",
    "mi_common_add_fail": "添加失败",
    "mi_common_add_success": "添加成功",
    "mi_common_add_success_rename": "添加成功，给按键起个名字吧",
    "mi_common_list": "列表",
    "mi_common_skip": "跳过",
    "mi_common_reset": "恢复默认",
    "mi_common_onoff": "开关",
    "mi_common_air_led_on": "面板灯光开",
    "mi_common_air_led_off": "面板灯光关",
    "mi_common_air_led": "面板灯光",
    "mi_common_close_indicator_light": "關閉指示燈",
    "mi_common_close_indicator_light_tips": "每天21:00至09:00关闭指示灯",
    "mi_common_close_indicator_light_tips_1": "每天21:00至第二天09:00关闭指示灯",
    "common_stop": "暂停",
    "mi_common_find_device": "查找设备",
    "mi_common_clear_position": "清除行程",
    "mi_common_clear_position_comfirm_tip": "清除當前窗簾行程？",
    "mi_common_clear_position_success": "清除成功",
    "mi_common_adjust_direction": "窗簾開合方向調正",
    "mi_common_adjust": "調正",
    "mi_common_adjust_success": "調正成功",
    "mi_common_add_remote": "绑定遥控器",
    "mi_common_remote_reverse_search": "遥控器反向查找",
    "mi_common_remote_manager": "遥控器管理",
    "mi_common_name_can_not_empty": "名稱不能為空",
    "mi_common_name_can_not_be_same": "名称不能相同",
    "mi_common_input": "请输入",
    "mi_common_delete_remote": "删除遥控器",
    "mi_common_delete_comfirm": "删除{XX}?",
    "mi_common_remote_empty": "未绑定任何遥控器",
    "mi_common_open_to": "開至{progress}%",
    "mi_common_opened_fully": "完全開啟",
    "mi_common_closed_fully": "完全關閉",
    "mi_common_setting_success": "設定成功",
    "mi_common_setting": "正在設定…",
    "mi_common_control_curtain_manually": "手動開/關窗簾",
    "mi_common_curtain_manually_tip": "开启后，手轻拉窗帘本体，窗帘将随手拉方向自动开/关",
    "mi_common_curtain_type": "窗簾樣式",
    "mi_common_curtain_install_guide": "行程設定引導",
    "mi_common_later": "稍后",
    "mi_common_curtain_open_to_a_specific_position": "窗簾開至指定位置",
    "mi_curtain_open_to": "窗簾開至{progress}%",
    "mi_curtain_style_double": "雙開窗簾",
    "mi_curtain_style_double_simple": "雙開",
    "mi_curtain_style_left": "左開窗簾",
    "mi_curtain_style_left_simple": "左開",
    "mi_curtain_style_right": "右開窗簾",
    "mi_curtain_style_right_simple": "右開",
    "mi_common_discard_operation": "放弃當前操作？",
    "mi_common_saving_wait": "保存中，请稍候...",
    "mi_common_saving_fail_retry": "儲存失敗，請再試一次",
    "mi_curtain_common_open": "打開",
    "mi_curtain_common_close": "關閉",
    "mi_curtain_common_pause": "暫停",
    "mi_common_remote_control_add_success": "添加成功",
    "mi_common_send_success": "发送成功",
    "mi_commonHub_setting_protect_subdevice_delete": "子设备防误删",
    "mi_common_operation_success": "操作成功",
    "mi_common_gateway_info": "网关信息",
    "mi_common_sub_device_info": "子设备信息",
    "mi_common_zigbee": "Zigbee通道",
    "mi_common_gateway_id": "网关ID",
    "mi_common_encryption": "加密",
    "mi_common_copy": "复制",
    "mi_common_lan_protocol": "局域网通信协议",
    "mi_common_fetch_fail": "获取失败",
    "mi_common_password": "密码",
    "mi_common_my_favorite": "我的收藏",
    "mi_common_fm_radio": "网络收音机",
    "mi_common_favorite": "收藏",
    "mi_common_radio_rank": "排行",
    "mi_common_radio_province": "地区",
    "mi_common_radio": "电台",
    "mi_common_co2_is_up_to": "CO2浓度高至{value}",
    "mi_common_co2_is_down_to": "CO2浓度低至{value}",
    "mi_common_no_favorite_radio": "暂无收藏",
    "mi_common_limit_favorite_radio_20": "最多收藏20个电台",
    "mi_common_fm_tips": "“网络收音机”功能所用资源和技术支持由第三方提供，小米不保证第三方服务的准确性、有效性可能产生的其他风险。",
    "mi_common_aqara_vrfacc_co_level_info_strong": "优（户外空气）",
    "mi_common_aqara_vrfacc_co_level_info_good": "良（通风良好）",
    "mi_common_aqara_vrfacc_co_level_info_medium": "中（氧气不足）",
    "mi_common_aqara_vrfacc_co_level_info_weak": "差（缺氧）",
    "mi_common_aqara_vrfacc_co_level_info_bad": "极差（严重缺氧）",
    "mi_common_aqara_vrfacc_co_level": "CO2等级",
    "common_creat_scene": "创建智能",
    "common_ble_phone_connected": "已连接手机",
    "common_ble_gateway_connected": "已连接蓝牙网关",
    "common_ble_gateway_not_found": "未找到蓝牙网关",
    "common_ble_gateway_too_far": "可能设备与蓝牙网关距离太远",
    "common_ble_connecting": "正在连接…",
    "common_ble_unable_to_connect": "无法连接",
    "common_ble_reconnect": "重新连接",
    "common_signal_strength": "信号强度",
    "common_ble_signal_strength": "蓝牙网关信号",
    "common_model": "型号",
    "common_signal_strength_good": "好",
    "common_signal_strength_fine": "良",
    "common_signal_strength_mid": "中",
    "common_signal_strength_poor": "差",
    "common_device_button_pressed": "已按下设备按键",
    "mi_commonHub_lazy_clock_gateway_choose": "按鍵按一下（必選）",
    "mi_commonHub_must_choose": "必選",
    "mi_commonHub_send_phone_msg": "向手機傳送通知",
    "mi_commonHub_ring_the_bell": "響門鈴",
    "mi_commonHub_lazy_clock_close": "關閉鬧鐘",
    "mi_commonHub_system_ringtone": "系統鈴音",
    "mi_commonHub_custom_ringtone": "自定义铃音",
    "mi_commonHub_delete_name": "是否确定删除{value}？",
    "mi_commonHub_add_ringtone": "添加铃音",
    "mi_commonHub_set_ringtone": "请设置录音名称",
    "mi_commonHub_add": "添加",
    "mi_commonHub_guard_alarm_sound_light_settings": "報警聲光設定",
    "mi_commonHub_guard_guardian_countdown": "守護開啟倒計時",
    "mi_commonHub_arming_light_length": "燈光閃爍時長",
    "mi_commonHub_arming_always_flashing": "一直閃",
    "mi_commonHub_arming_not_flashing": "不閃爍",
    "mi_commonHub_linkage_alarm_hint_detail": "連動其他網關一起報警，提升安全等級",
    "mi_common_lan_protocol_content": "1. 开放本协议的目的是为了让不同厂家的设备能够互联互通，共同组建物联网。\n2. 用户可以把绿米的设备集成到homekit或其它现有系统中。\n3. 本协议只在局域网中通讯，使用的协议或机制主要有：udp协议，组播，AES加解密。\n4. 用户可以通过本协议获取到绿米传感器的数据，例如门窗的状态，家里有没有人，温湿度值等。\n5. 用户可以通过本协议控制绿米的插座、墙壁开关等设备（控制必须使用密钥)。",
    "mi_common_lan_protocol_title": "绿米多功能网关局域网通讯协议",
    "common_date_picker": "選擇日期",
    "common_month_1": "1月",
    "common_month_2": "2月",
    "common_month_3": "3月",
    "common_month_4": "4月",
    "common_month_5": "5月",
    "common_month_6": "6月",
    "common_month_7": "7月",
    "common_month_8": "8月",
    "common_month_9": "9月",
    "common_month_10": "10月",
    "common_month_11": "11月",
    "common_month_12": "12月",
    "common_year_month_1": "s%年1月",
    "common_year_month_2": "s%年2月",
    "common_year_month_3": "s%年3月",
    "common_year_month_4": "s%年4月",
    "common_year_month_5": "s%年5月",
    "common_year_month_6": "s%年6月",
    "common_year_month_7": "s%年7月",
    "common_year_month_8": "s%年8月",
    "common_year_month_9": "s%年9月",
    "common_year_month_10": "s%年10月",
    "common_year_month_11": "s%年11月",
    "common_year_month_12": "s%年12月",
    "common_week_mon_short": "星期一",
    "common_week_tue_short": "星期二",
    "common_week_wed_short": "星期三",
    "common_week_thu_short": "星期四",
    "common_week_fri_short": "星期五",
    "common_week_sat_short": "星期六",
    "common_week_sun_short": "星期日",
    "mi_common_audio_access_title": "未授权使用麦克风",
    "mi_common_audio_access_content": "请在iOS的“设置-隐私-麦克风”选项中，允许米家访问你的手机麦克风",
    "mi_common_protect_delete_app": "开启后，设备只能通过APP删除",
    "mi_common_protect_delete_app_reduction": "防止误删除功能说明",
    "mi_common_protect_delete_app_reduction_detail": "防止误删除：防止在设备端误操作将设备重置，导致设备从APP删除。\n\n开启防止误删除功能后，设备只能通过APP删除。\n\n关闭防止误删除功能后，设备可以通过APP删除，也可以通过操作设备端按键删除。\n\n温馨提示：防止误删除功能默认关闭。设备被重置后（从APP删除后），重新添加设备，防止误删除功能将默认关闭。",
    "mi_common_protect_delele_sub_device": "网关下支持防止误删除的子设备",
    "mi_common_open_fully": "全开",
    "mi_common_close_fully": "全关",
    "common_calender": "日歷",
    "common_record_maxsum": "自定义铃音已达上限，请删除部分后重试",
    "common_unit_minute_simple": "分",
    "common_device_offline": "设备已离线",
    "mi_commonHub_setting_nightlight_holdtime": "人離開後延時關燈時間",
    "mi_commonHub_play_fm": "播放指定电台",
    "mi_common_auto_upgrade": "支援韌體自動更新功能",
    "mi_common_view_details": "輕觸可查看詳細資料",
    "mi_common_gateway_profile_alarm_setting_title": "报警铃音设置",
    "mi_common_acpartner_v3_device_default_name": "Aqara 空调伴侣(升级版)",
    "mi_common_gateway_v3_device_default_name": "小米多功能网关",
    "mi_common_triggle_vibration_three_press": "感应到三击",
    "mi_common_triggle_vibration_moved": "感应到移动",
    "common_hub_zigbee_subdevice": "Zigbee子設備",
    "common_hub_bluetooth_subdevice": "藍牙子設備"
  };
  exports.default = zhHant;
},10094,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDeviceAuthorityUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDeviceAuthorityUtils.default;
  exports.default = _default;
},10097,[14305,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var LHDeviceAuthorityUtils = function () {
    function LHDeviceAuthorityUtils() {
      (0, _classCallCheck2.default)(this, LHDeviceAuthorityUtils);
    }

    (0, _createClass2.default)(LHDeviceAuthorityUtils, null, [{
      key: "isFamilyShare",
      value: function isFamilyShare() {
        if (!_miot.Device.isOwner) {
          return _miot.Device.isFamily;
        }

        return false;
      }
    }, {
      key: "isShared",
      value: function isShared() {
        return !_miot.Device.isOwner;
      }
    }]);
    return LHDeviceAuthorityUtils;
  }();

  exports.default = LHDeviceAuthorityUtils;
},10100,[14305,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHPureRenderDecorator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHPureRenderDecorator.default;
  exports.default = _default;
},10103,[14305,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.deepCompare = deepCompare;
  exports.default = undefined;
  var maxDep = 6;
  var jsType = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Object', 'Error'];
  var dUtil = {};

  var _loop = function _loop(i) {
    dUtil['is' + jsType[i]] = function (obj) {
      return Object.prototype.toString.call(obj) === '[object ' + jsType[i] + ']';
    };
  };

  for (var i = 0; i < jsType.length; i += 1) {
    _loop(i);
  }

  function skipKeys(key) {
    var keyMaps = {
      $$typeof: 1,
      _owner: 1,
      _store: 1,
      _self: 1,
      _source: 1
    };

    if (keyMaps[key]) {
      return true;
    }

    return false;
  }

  function deepEqual(objA, objB, depth) {
    if (depth > maxDep) {
      return false;
    }

    depth += 1;

    if (!dUtil.isObject(objA) && !dUtil.isArray(objB)) {
      if (!valCompare(objA, objB, depth)) {
        return false;
      }
    }

    var keysA = Object.keys(objA || {});
    var keysB = Object.keys(objB || {});

    if (keysA.length !== keysB.length) {
      return false;
    }

    for (var i = 0; i < keysA.length; i += 1) {
      var comPareValA = objA[keysA[i]];
      var comPareValB = objB[keysB[i]];

      if (keysA[0] === '$$typeof' && keysA[i] === 'children') {
        return true;
      } else if (keysA[0] === '$$typeof' && skipKeys(keysA[i])) {
        continue;
      }

      if (!objB.hasOwnProperty(keysA[i])) {
        return false;
      }

      if (!valCompare(comPareValA, comPareValB, depth)) {
        return false;
      }
    }

    return true;
  }

  function valCompare(valA, valB, depth) {
    if (dUtil.isFunction(valA)) {
      if (valA.hasOwnProperty('name') && valB.hasOwnProperty('name') && valA.name === valB.name) {
        return true;
      }

      return false;
    }

    if (dUtil.isString(valA) || dUtil.isNumber(valA) || dUtil.isBoolean(valA)) {
      if (valA !== valB) {
        return false;
      }

      return true;
    }

    if (dUtil.isDate(valA)) {
      if (valA.getTime() !== valB.getTime()) {
        return false;
      }

      return true;
    }

    if (dUtil.isObject(valA) || dUtil.isArray(valA)) {
      return deepEqual(valA, valB, depth);
    }

    if (valA !== valB) {
      return false;
    }

    return true;
  }

  function deepCompare(instance, nextProps, nextState) {
    var result = !deepEqual(instance.props, nextProps, 1) || !deepEqual(instance.state, nextState, 1);
    return result;
  }

  function shouldComponentUpdate(nextProps, nextState) {
    return deepCompare(this, nextProps, nextState);
  }

  function LHPureRenderDecorator(component) {
    component.prototype.shouldComponentUpdate = shouldComponentUpdate;
    return component;
  }

  var _default = LHPureRenderDecorator;
  exports.default = _default;
},10106,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHUiUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHUiUtils.default;
  exports.default = _default;
},10109,[14305,10112]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _LHGetPx = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var isDark = _miot.DarkMode && _miot.DarkMode.getColorScheme() === 'dark';

  var LHUiUtils = function () {
    function LHUiUtils() {
      (0, _classCallCheck2.default)(this, LHUiUtils);
    }

    (0, _createClass2.default)(LHUiUtils, null, [{
      key: "GetPx",
      value: function GetPx(px, design, minDesign) {
        return (0, _LHGetPx.default)(px, design, minDesign);
      }
    }, {
      key: "GetFontFamily",
      value: function GetFontFamily() {
        var android = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'MI-LANTING_GB-OUTSIDE-YS';
        var iOS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'PingFangSC-Regular';

        if (_reactNative.Platform.OS === 'android') {
          return android;
        } else {
          return iOS;
        }
      }
    }]);
    return LHUiUtils;
  }();

  exports.default = LHUiUtils;
  LHUiUtils.MiJiaBlue = '#0099FF';
  LHUiUtils.MiJiaBluePres = '#18BAF0';
  LHUiUtils.MiJiaGreen = '#18BAF0';
  LHUiUtils.MiJiaRed = '#F43F31';
  LHUiUtils.MiJiaRedPres = '#d53c32';
  LHUiUtils.MiJiaWhite = '#ffffff';
  LHUiUtils.MiJiaBackgroundGray = '#f7f7f7';
  LHUiUtils.MiJiaCellSelBgColor = isDark ? 'rgba(255,255,255,0.2)' : '#ececec';
  LHUiUtils.MiJiaTitleColor = '#000';
  LHUiUtils.MiJiaSubTitleColor = '#666666';
  LHUiUtils.MiJiaDescriptionColor = '#999999';
  LHUiUtils.MiJiaLineColor = '#E5E5E5';
  LHUiUtils.MiJiaBorderWidth = _reactNative.StyleSheet.hairlineWidth || 0.5;
  LHUiUtils.MiJiaListHeaderColor = '#7F7F7F';
  LHUiUtils.MiJiaOrangeColor = '#FF9900';
  LHUiUtils.MiJiaLightGray = '#ccc';
  LHUiUtils.FontFamilyDDINCondensed = 'D-DINCondensed';
  LHUiUtils.FontFamilyDDIN = 'D-DIN';
  LHUiUtils.CellDefaultFontFamily = 'D-DINCondensed';
  LHUiUtils.TitleBarHeight = (0, _LHGetPx.default)(53);
  LHUiUtils.NumberDefaultFontFamily = _reactNative.Platform.OS === 'android' ? 'Mitype2018-60' : 'PingFangSC-Regular';
  LHUiUtils.DefaultFontFamily = _reactNative.Platform.OS === 'android' ? 'MI-LANTING_GB-OUTSIDE-YS' : 'PingFangSC-Regular';
  LHUiUtils.isDark = isDark;
},10112,[14305,14320,14323,10033,10074,10115]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHGetPx = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHGetPx.default;
  exports.default = _default;
},10115,[14305,10118]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = GetPx;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  function GetPx(px, design, minDesign) {
    design = design || 360;
    minDesign = minDesign || 360;
    var calPx = Math.abs(px) / design * (width > 400 ? 400 : width < minDesign ? minDesign : width);

    var roundToNearestPixel = _reactNative.PixelRatio.roundToNearestPixel(calPx);

    return px < 0 ? -roundToNearestPixel : roundToNearestPixel;
  }
},10118,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDateUtils.default;
  exports.default = _default;
},10121,[14305,10124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var LHDateUtils = function () {
    function LHDateUtils() {
      (0, _classCallCheck2.default)(this, LHDateUtils);
    }

    (0, _createClass2.default)(LHDateUtils, null, [{
      key: "DateFormat",
      value: function DateFormat(format, time, isUtc) {
        var time2Date = function time2Date(value) {
          if (Number(value) > 10000000000) {
            return new Date(value);
          }

          return new Date(value * 1000);
        };

        var date = time2Date(time);
        var formatS = format;
        var fortmatKey;
        var fullYear;

        if (isUtc) {
          fortmatKey = {
            'M+': date.getUTCMonth() + 1,
            'd+': date.getUTCDate(),
            'h+': date.getUTCHours(),
            'm+': date.getUTCMinutes(),
            's+': date.getUTCSeconds(),
            'q+': Math.floor((date.getUTCMonth() + 3) / 3),
            'S+': date.getMilliseconds()
          };
          fullYear = date.getUTCFullYear();
        } else {
          fortmatKey = {
            'M+': date.getMonth() + 1,
            'd+': date.getDate(),
            'h+': date.getHours(),
            'm+': date.getMinutes(),
            's+': date.getSeconds(),
            'q+': Math.floor((date.getMonth() + 3) / 3),
            'S+': date.getMilliseconds()
          };
          fullYear = date.getFullYear();
        }

        if (/(y+)/i.test(formatS)) {
          formatS = formatS.replace(RegExp.$1, (fullYear + '').substr(4 - RegExp.$1.length));
        }

        for (var k in fortmatKey) {
          if (new RegExp('(' + k + ')').test(formatS)) {
            formatS = formatS.replace(RegExp.$1, RegExp.$1.length === 1 ? fortmatKey[k] : ('00' + fortmatKey[k]).substr(('' + fortmatKey[k]).length));
          }
        }

        return formatS;
      }
    }, {
      key: "GetStandardTimeText",
      value: function GetStandardTimeText(time) {
        var today = new Date();
        var todaySec = Math.floor(today.getTime() / 1000);
        var yesterday = new Date(today.getFullYear(), today.getMonth());
        yesterday.setDate(today.getDate() - 1);
        var yesterdaySec = Math.floor(yesterday.getTime() / 1000);

        if (LHDateUtils.DateFormat('yyyy-MM-dd', todaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return _LHCommonLocalizableString.default.common_log_today;
        } else if (LHDateUtils.DateFormat('yyyy-MM-dd', yesterdaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return _LHCommonLocalizableString.default.common_log_yesterday;
        }

        if (LHDateUtils.DateFormat('yyyy', todaySec) !== LHDateUtils.DateFormat('yyyy', time)) {
          return LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter(true), time);
        }

        return LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter(), time);
      }
    }, {
      key: "GetHomeLogTime",
      value: function GetHomeLogTime(time) {
        var today = new Date();
        var todaySec = Math.floor(today.getTime() / 1000);
        var todayYear = today.getFullYear();
        var todayMonth = today.getMonth();
        var todayDate = today.getDate();
        var yesterday = new Date(todayYear, todayMonth);
        yesterday.setDate(todayDate - 1);
        var yesterdaySec = Math.floor(yesterday.getTime() / 1000);

        if (LHDateUtils.DateFormat('yyyy-MM-dd', todaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return LHDateUtils.DateFormat('hh:mm', time);
        } else if (LHDateUtils.DateFormat('yyyy-MM-dd', yesterdaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return _LHCommonLocalizableString.default.common_log_yesterday + ' ' + LHDateUtils.DateFormat('hh:mm', time);
        }

        return todayYear === new Date(time * 1000).getFullYear() ? LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter() + ' hh:mm', time) : LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter(true) + ' hh:mm', time);
      }
    }, {
      key: "GetDateText",
      value: function GetDateText(time) {
        var today = new Date();
        var todaySec = Math.floor(today.getTime() / 1000);
        var todayYear = today.getFullYear();
        var todayMonth = today.getMonth();
        var todayDate = today.getDate();
        var yesterday = new Date(todayYear, todayMonth);
        yesterday.setDate(todayDate - 1);
        var yesterdaySec = Math.floor(yesterday.getTime() / 1000);

        if (LHDateUtils.DateFormat('yyyy-MM-dd', todaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return _LHCommonLocalizableString.default.common_log_today;
        } else if (LHDateUtils.DateFormat('yyyy-MM-dd', yesterdaySec) === LHDateUtils.DateFormat('yyyy-MM-dd', time)) {
          return _LHCommonLocalizableString.default.common_log_yesterday;
        }

        return todayYear === new Date(time * 1000).getFullYear() ? LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter(), time) : LHDateUtils.DateFormat(LHDateUtils.GetDateFormatter(true), time);
      }
    }, {
      key: "GetDateFormatter",
      value: function GetDateFormatter() {
        var hasYear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        var hasDay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var YMD = ['ja', 'zh', 'zh_tw', 'zh_hk', 'ko'];
        var DMY = ['es', 'fr', 'ru', 'it', 'pl', 'id', 'de', 'vi', 'th', 'pt', 'ar', 'tr'];
        var language = _miot.Host.locale.language;
        var format = 'MM/dd/yyyy';

        if (DMY.indexOf(language) > -1) {
          format = 'dd/MM/yyyy';
        } else if (YMD.indexOf(language) > -1) {
          format = 'yyyy/MM/dd';
        }

        if (!hasYear) {
          var formatArr = format.split('/');
          formatArr.splice(formatArr.indexOf('yyyy'), 1);
          format = formatArr.join('/');
        }

        if (!hasDay) {
          var _formatArr = format.split('/');

          _formatArr.splice(_formatArr.indexOf('dd'), 1);

          format = _formatArr.join('/');
        }

        return format;
      }
    }, {
      key: "GetDateFormatterCommon",
      value: function GetDateFormatterCommon(hasYear) {
        var symbol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';
        var YMD = ['ja', 'zh', 'zh_tw', 'zh_hk', 'ko'];
        var DMY = ['es', 'fr', 'ru', 'it', 'pl', 'id', 'de', 'vi', 'th', 'pt', 'ar', 'tr'];
        var language = _miot.Host.locale.language;

        if (DMY.indexOf(language) > -1) {
          return hasYear ? 'dd' + symbol + 'MM' + symbol + 'yyyy' : 'dd' + symbol + 'MM';
        } else if (YMD.indexOf(language) > -1) {
          return hasYear ? 'yyyy' + symbol + 'MM' + symbol + 'dd' : 'MM' + symbol + 'dd';
        } else {
          return hasYear ? 'MM' + symbol + 'dd' + symbol + 'yyyy' : 'MM' + symbol + 'dd';
        }
      }
    }, {
      key: "isLeapYear",
      value: function isLeapYear(eDate) {
        var year = eDate.getFullYear();
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      }
    }, {
      key: "getDaysInMonth",
      value: function getDaysInMonth(eDate) {
        var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        daysInMonth[1] = LHDateUtils.isLeapYear(eDate) ? 29 : 28;
        return daysInMonth[eDate.getMonth() + 1];
      }
    }, {
      key: "getTimeDiff",
      value: function getTimeDiff(date) {
        var currentDate = new Date();
        currentDate.setMinutes(0);
        currentDate.setHours(0);
        currentDate.setSeconds(0);
        currentDate.setMilliseconds(0);
        var difValue = (date.getTime() - currentDate.getTime()) / 86400000;
        return Math.floor(difValue);
      }
    }, {
      key: "isTomorrow",
      value: function isTomorrow(date) {
        if (this.getTimeDiff(date) === 1) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "isYesterday",
      value: function isYesterday(date) {
        if (this.getTimeDiff(date) === -1) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "isToday",
      value: function isToday(date) {
        if (this.getTimeDiff(date) === 0) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "isAfter",
      value: function isAfter(date) {
        var currentDate = new Date();

        if (date.getTime() > currentDate.getTime()) {
          return true;
        }

        return false;
      }
    }, {
      key: "isBefore",
      value: function isBefore(date) {
        var currentDate = new Date();

        if (date.getTime() < currentDate.getTime()) {
          return true;
        }

        return false;
      }
    }, {
      key: "getWeekDate",
      value: function getWeekDate(time) {
        var weeks = [_LHCommonLocalizableString.default.common_date_sun, _LHCommonLocalizableString.default.common_date_mon, _LHCommonLocalizableString.default.common_date_tues, _LHCommonLocalizableString.default.common_date_wed, _LHCommonLocalizableString.default.common_date_thur, _LHCommonLocalizableString.default.common_date_fri, _LHCommonLocalizableString.default.common_date_sat];
        return weeks[new Date(time * 1000).getDay()];
      }
    }]);
    return LHDateUtils;
  }();

  exports.default = LHDateUtils;
},10124,[14305,14320,14323,10074,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHToastUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHToastUtils.default;
  exports.default = _default;
},10127,[14305,10130]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _LHUiUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHUiColorUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHDeviceUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var Instance = null;
  var textStyle = {
    fontSize: _LHUiUtils.default.GetPx(16),
    lineHeight: _LHUiUtils.default.GetPx(19),
    color: _LHUiUtils.default.isDark ? '#b3b3b3' : '#4c4c4c',
    fontFamily: _LHUiUtils.default.DefaultFontFamily
  };
  var containerStyle = {
    borderRadius: _LHUiUtils.default.GetPx(12),
    backgroundColor: _LHUiUtils.default.isDark ? '#1a1a1a' : 'rgba(255,255,255,0.97)',
    paddingHorizontal: _LHUiUtils.default.GetPx(15),
    paddingVertical: _LHUiUtils.default.GetPx(9),
    minWidth: _LHUiUtils.default.GetPx(175),
    opacity: 1,
    borderWidth: _LHUiUtils.default.GetPx(0.5),
    borderColor: _LHUiColorUtils.default.colorSeparator,
    shadowColor: _LHUiUtils.default.isDark ? '#1a1a1a' : '#000',
    shadowOffset: {
      width: 0,
      height: _LHUiUtils.default.GetPx(13)
    },
    shadowOpacity: 0.05,
    shadowRadius: _LHUiUtils.default.GetPx(6),
    elevation: _LHUiUtils.default.GetPx(13)
  };
  var keyBoardHeight = 0;

  _reactNative.Keyboard.addListener('keyboardDidShow', function (e) {
    var endCoordinates = e.endCoordinates;
    var height = endCoordinates.height;
    keyBoardHeight = height;
  });

  _reactNative.Keyboard.addListener('keyboardDidHide', function () {
    keyBoardHeight = 0;
  });

  var LHToastUtils = function () {
    function LHToastUtils() {
      (0, _classCallCheck2.default)(this, LHToastUtils);
    }

    (0, _createClass2.default)(LHToastUtils, null, [{
      key: "showShortToast",
      value: function showShortToast(message, options) {
        this.show(message, options, _reactNativeRootToast.default.durations.SHORT);
      }
    }, {
      key: "show",
      value: function show(message, options, duration) {
        this.hide();
        Instance = _reactNativeRootToast.default.show(message, (0, _extends2.default)({
          visible: true,
          duration: duration,
          position: -keyBoardHeight || _LHUiUtils.default.GetPx(-86 - _LHDeviceUtils.default.AppHomeIndicatorHeight),
          textStyle: textStyle,
          containerStyle: containerStyle,
          shadow: false
        }, options));
      }
    }, {
      key: "hide",
      value: function hide() {
        var toast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Instance;
        if (toast) _reactNativeRootToast.default.hide(toast);
      }
    }, {
      key: "showLongToast",
      value: function showLongToast(message, options) {
        this.show(message, options, _reactNativeRootToast.default.durations.LONG);
      }
    }]);
    return LHToastUtils;
  }();

  exports.default = LHToastUtils;

  LHToastUtils.showOperateFailedToast = function () {
    var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'bottom';
    var positions = {
      top: _reactNativeRootToast.default.positions.TOP,
      bottom: _reactNativeRootToast.default.positions.BOTTOM,
      center: _reactNativeRootToast.default.positions.CENTER
    };
    LHToastUtils.showShortToast(_LHCommonLocalizableString.default.common_operation_fail, {
      position: positions[position]
    });
  };

  LHToastUtils.showRequestFailedToast = function () {
    LHToastUtils.showShortToast(_LHCommonLocalizableString.default.common_tips_request_failed);
  };
},10130,[14305,14344,14320,14323,10133,10033,10109,10034,10148,10154]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;

  var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  Object.keys(_Toast).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _Toast[key];
      }
    });
  });
  var _default = _Toast.default;
  exports.default = _default;
},10133,[14308,10136]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _reactNativeRootSiblings.default;
    }
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var Toast = function (_Component) {
    (0, _inherits2.default)(Toast, _Component);

    function Toast() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Toast);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._toast = null;

      _this.componentWillMount = function () {
        _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
          duration: 0
        })));
      };

      _this.componentWillReceiveProps = function (nextProps) {
        _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
          duration: 0
        })));
      };

      _this.componentWillUnmount = function () {
        _this._toast.destroy();
      };

      return _this;
    }

    (0, _createClass2.default)(Toast, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Toast;
  }(_react.Component);

  Toast.displayName = 'Toast';
  Toast.propTypes = _ToastContainer.default.propTypes;
  Toast.positions = _ToastContainer.positions;
  Toast.durations = _ToastContainer.durations;

  Toast.show = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      position: _ToastContainer.positions.BOTTOM,
      duration: _ToastContainer.durations.SHORT
    };
    return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
      visible: true
    }), message));
  };

  Toast.hide = function (toast) {
    if (toast instanceof _reactNativeRootSiblings.default) {
      toast.destroy();
    } else {}
  };

  var _default = Toast;
  exports.default = _default;
},10136,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10139,10145]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    }
  });

  var Provider = function (_Component) {
    (0, _inherits2.default)(Provider, _Component);

    function Provider() {
      (0, _classCallCheck2.default)(this, Provider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Provider).apply(this, arguments));
    }

    (0, _createClass2.default)(Provider, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          store: this.props.store
        };
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.children;
      }
    }]);
    return Provider;
  }(_react.Component);

  Provider.childContextTypes = {
    store: _propTypes.default.shape({
      subscribe: _propTypes.default.func.isRequired,
      dispatch: _propTypes.default.func.isRequired,
      getState: _propTypes.default.func.isRequired
    })
  };

  function RootSiblingsWrapper(props) {
    return _react.default.createElement(_reactNative.View, {
      style: styles.container,
      pointerEvents: "box-none"
    }, props.children, _react.default.createElement(RootSiblings, null));
  }

  ;

  if (!global.__rootSiblingsInjected) {
    _reactNative.AppRegistry.setWrapperComponentProvider(function () {
      return RootSiblingsWrapper;
    });

    global.__rootSiblingsInjected = true;
  }

  var uuid = 0;
  var triggers = [];

  var RootSiblings = function (_Component2) {
    (0, _inherits2.default)(RootSiblings, _Component2);

    function RootSiblings(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RootSiblings);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RootSiblings).call(this, props));
      _this._updatedSiblings = {};
      _this._siblings = {};
      _this._stores = {};

      _this._update = function (id, element, callback, store) {
        var siblings = (0, _objectSpread2.default)({}, _this._siblings);
        var stores = (0, _objectSpread2.default)({}, _this._stores);

        if (siblings[id] && !element) {
          delete siblings[id];
          delete stores[id];
        } else if (element) {
          siblings[id] = element;
          stores[id] = store;
        }

        _this._updatedSiblings[id] = true;
        _this._siblings = siblings;
        _this._stores = stores;

        _this.forceUpdate(callback);
      };

      _this._siblings = {};
      triggers.push(_this._update);
      return _this;
    }

    (0, _createClass2.default)(RootSiblings, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        triggers.splice(triggers.indexOf(this._update), 1);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var siblings = this._siblings;
        var stores = this._stores;
        var elements = [];
        Object.keys(siblings).forEach(function (key) {
          var element = siblings[key];

          if (element) {
            var sibling = _react.default.createElement(_staticContainer.default, {
              key: "root-sibling-" + key,
              shouldUpdate: !!_this2._updatedSiblings[key]
            }, element);

            var store = stores[key];

            if (store) {
              elements.push(_react.default.createElement(Provider, {
                store: store,
                key: "root-sibling-" + key + "-provider"
              }, sibling));
            } else {
              elements.push(sibling);
            }
          }
        });
        this._updatedSiblings = {};
        return elements;
      }
    }]);
    return RootSiblings;
  }(_react.Component);

  var RootSiblingManager = function RootSiblingManager(element, callback, store) {
    (0, _classCallCheck2.default)(this, RootSiblingManager);
    var id = uuid++;

    function update(element, callback, store) {
      triggers.forEach(function (trigger) {
        trigger(id, element, callback, store);
      });
    }

    function destroy(callback) {
      triggers.forEach(function (trigger) {
        trigger(id, null, callback);
      });
    }

    update(element, callback, store);
    this.update = update;
    this.destroy = destroy;
  };

  exports.default = RootSiblingManager;
},10139,[14308,14305,14314,14320,14323,14371,14377,14386,10297,10033,10142,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default() {
      (0, _classCallCheck2.default)(this, _default);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
    }

    (0, _createClass2.default)(_default, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;
        return child === null || child === false ? null : _react.Children.only(child);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    shouldUpdate: _propTypes.default.bool.isRequired
  };
},10142,[14305,14320,14323,14371,14377,14386,10297,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.durations = exports.positions = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TOAST_MAX_WIDTH = 0.8;
  var TOAST_ANIMATION_DURATION = 200;
  var positions = {
    TOP: 20,
    BOTTOM: -20,
    CENTER: 0
  };
  exports.positions = positions;
  var durations = {
    LONG: 3500,
    SHORT: 2000
  };
  exports.durations = durations;

  var styles = _reactNative.StyleSheet.create({
    defaultStyle: {
      position: 'absolute',
      left: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    containerStyle: {
      padding: 10,
      backgroundColor: '#000',
      opacity: 0.8,
      borderRadius: 5
    },
    shadowStyle: {
      shadowColor: '#000',
      shadowOffset: {
        width: 4,
        height: 4
      },
      shadowOpacity: 0.8,
      shadowRadius: 6,
      elevation: 10
    },
    textStyle: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var ToastContainer = function (_Component) {
    (0, _inherits2.default)(ToastContainer, _Component);

    function ToastContainer() {
      var _this;

      (0, _classCallCheck2.default)(this, ToastContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

      _this.componentDidMount = function () {
        if (_this.state.visible) {
          _this._showTimeout = setTimeout(function () {
            return _this._show();
          }, _this.props.delay);
        }
      };

      _this.componentWillReceiveProps = function (nextProps) {
        if (nextProps.visible !== _this.props.visible) {
          if (nextProps.visible) {
            clearTimeout(_this._showTimeout);
            clearTimeout(_this._hideTimeout);
            _this._showTimeout = setTimeout(function () {
              return _this._show();
            }, _this.props.delay);
          } else {
            _this._hide();
          }

          _this.setState({
            visible: nextProps.visible
          });
        }
      };

      _this.componentWillUnmount = function () {
        _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

        _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);

        _this._hide();
      };

      _this._animating = false;
      _this._root = null;
      _this._hideTimeout = null;
      _this._showTimeout = null;
      _this._keyboardHeight = 0;

      _this._windowChanged = function (_ref) {
        var window = _ref.window;

        _this.setState({
          windowWidth: window.width,
          windowHeight: window.height
        });
      };

      _this._keyboardDidChangeFrame = function (_ref2) {
        var endCoordinates = _ref2.endCoordinates;

        _this.setState({
          keyboardScreenY: endCoordinates.screenY
        });
      };

      _this._show = function () {
        clearTimeout(_this._showTimeout);

        if (!_this._animating) {
          clearTimeout(_this._hideTimeout);
          _this._animating = true;

          _this._root.setNativeProps({
            pointerEvents: 'auto'
          });

          _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: _this.props.opacity,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.out(_reactNative.Easing.ease)
          }).start(function (_ref3) {
            var finished = _ref3.finished;

            if (finished) {
              _this._animating = !finished;
              _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

              if (_this.props.duration > 0) {
                _this._hideTimeout = setTimeout(function () {
                  return _this._hide();
                }, _this.props.duration);
              }
            }
          });
        }
      };

      _this._hide = function () {
        clearTimeout(_this._showTimeout);
        clearTimeout(_this._hideTimeout);

        if (!_this._animating) {
          _this._root.setNativeProps({
            pointerEvents: 'none'
          });

          _this.props.onHide && _this.props.onHide(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: 0,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.in(_reactNative.Easing.ease)
          }).start(function (_ref4) {
            var finished = _ref4.finished;

            if (finished) {
              _this._animating = false;
              _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
            }
          });
        }
      };

      var _window = _reactNative.Dimensions.get('window');

      _this.state = {
        visible: _this.props.visible,
        opacity: new _reactNative.Animated.Value(0),
        windowWidth: _window.width,
        windowHeight: _window.height,
        keyboardScreenY: _window.height
      };
      return _this;
    }

    (0, _createClass2.default)(ToastContainer, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        _reactNative.Dimensions.addEventListener('change', this._windowChanged);

        _reactNative.Keyboard.addListener('keyboardDidChangeFrame', this._keyboardDidChangeFrame);
      }
    }, {
      key: "componentWillUpdate",
      value: function componentWillUpdate() {
        var _this$state = this.state,
            windowHeight = _this$state.windowHeight,
            keyboardScreenY = _this$state.keyboardScreenY;
        this._keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var props = this.props;
        var windowWidth = this.state.windowWidth;
        var offset = props.position;
        var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? this._keyboardHeight - offset : offset) : {
          top: 0,
          bottom: this._keyboardHeight
        };
        return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
          style: [styles.defaultStyle, position],
          pointerEvents: "box-none"
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
            _this2.props.hideOnPress ? _this2._hide() : null;
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.containerStyle, {
            marginHorizontal: windowWidth * 0.09999999999999998
          }, props.containerStyle, props.backgroundColor && {
            backgroundColor: props.backgroundColor
          }, {
            opacity: this.state.opacity
          }, props.shadow && styles.shadowStyle, props.shadowColor && {
            shadowColor: props.shadowColor
          }],
          pointerEvents: "none",
          ref: function ref(ele) {
            return _this2._root = ele;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, props.textStyle, props.textColor && {
            color: props.textColor
          }]
        }, this.props.children)))) : null;
      }
    }]);
    return ToastContainer;
  }(_react.Component);

  ToastContainer.displayName = 'ToastContainer';
  ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
    containerStyle: _reactNative.ViewPropTypes.style,
    duration: _propTypes.default.number,
    visible: _propTypes.default.bool,
    position: _propTypes.default.number,
    animation: _propTypes.default.bool,
    shadow: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    opacity: _propTypes.default.number,
    shadowColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    textStyle: _reactNative.Text.propTypes.style,
    delay: _propTypes.default.number,
    hideOnPress: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onHide: _propTypes.default.func,
    onHidden: _propTypes.default.func,
    onShow: _propTypes.default.func,
    onShown: _propTypes.default.func
  });
  ToastContainer.defaultProps = {
    visible: false,
    duration: durations.SHORT,
    animation: true,
    shadow: true,
    position: positions.BOTTOM,
    opacity: 0.8,
    delay: 0,
    hideOnPress: true
  };
  var _default = ToastContainer;
  exports.default = _default;
},10145,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHUiColorUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHUiColorUtils.default;
  exports.default = _default;
},10148,[14305,10151]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var isDark = _miot.DarkMode && _miot.DarkMode.getColorScheme() === 'dark';

  var _getColor = function getColor(color, darkColor) {
    if (isDark && darkColor) {
      return darkColor;
    }

    return color;
  };

  var LHUiColorUtils = function () {
    function LHUiColorUtils() {
      (0, _classCallCheck2.default)(this, LHUiColorUtils);
    }

    (0, _createClass2.default)(LHUiColorUtils, null, [{
      key: "getColor",
      value: function getColor(color, darkColor) {
        return _getColor(color, darkColor);
      }
    }]);
    return LHUiColorUtils;
  }();

  exports.default = LHUiColorUtils;
  LHUiColorUtils.isDark = isDark;
  LHUiColorUtils.colorGreenNormal = _getColor('#32bac0', '#25A9AF');
  LHUiColorUtils.colorWhiteShallow = _getColor('#33333380', '#FFFFFF99');
  LHUiColorUtils.colorGreenHeavy = _getColor('#25A9AF', '#158B90');
  LHUiColorUtils.colorGreenLight = _getColor('#32bac04D', '#25A9AF4D');
  LHUiColorUtils.colorRedNormal = _getColor('#F43F31', '#D92719');
  LHUiColorUtils.colorRedHeavy = _getColor('#D53C32', '#B62920');
  LHUiColorUtils.colorRedLight = _getColor('#F43F314D', '#D927194D');
  LHUiColorUtils.colorBlack = _getColor('#000000', '#e6e6e6');
  LHUiColorUtils.colorGrayNormal = _getColor('#666666', '#999999');
  LHUiColorUtils.colorGrayLight = _getColor('#7f7f7f', '#808080');
  LHUiColorUtils.colorGrayHeavier = _getColor('#333333', '#cccccc');
  LHUiColorUtils.colorGrayHeavy = _getColor('#4c4c4c', '#b3b3b3');
  LHUiColorUtils.colorGrayLighter = _getColor('#999999', '#666666');
  LHUiColorUtils.colorWhite = _getColor('#ffffff', '#000000');
  LHUiColorUtils.colorTextHighlight = _getColor('#32bac0', '#25A9AF');
  LHUiColorUtils.colorTextWarning = _getColor('#F43F31', '#D92719');
  LHUiColorUtils.colorSeparator = _getColor('#e5e5e5', '#262626');
  LHUiColorUtils.colorBackground = _getColor('#f7f7f7', '#000000');
  LHUiColorUtils.colorForeground = _getColor('#ffffff', '#1a1a1a');
  LHUiColorUtils.colorOverLayerBlack = _getColor('#00000066', '#00000099');
  LHUiColorUtils.colorBtnGreenNor = _getColor('#32bac0', '#25A9AF');
  LHUiColorUtils.colorBtnGreenPres = _getColor('#25A9AF', '#158B90');
  LHUiColorUtils.colorBtnGrayNor = _getColor('#f5f5f5', '#333333');
  LHUiColorUtils.colorBtnGrayPres = _getColor('#e2e2e2', '#666666');
  LHUiColorUtils.colorTransparentBackground = _getColor('#ffffff', 'rgba(0,0,0,0.30)');
  LHUiColorUtils.colorCardDefaultBackgroundDisable = _getColor('#ffffff4D', '#1A1A1A4D');
  LHUiColorUtils.colorMainLog = _getColor('#ffffff', '#1A1A1A');
  LHUiColorUtils.colorOrange = _getColor('#FD6E03', '#E68A00');
  LHUiColorUtils.colorCardDefaultBackgroundNormal = _getColor('#ffffff', '#1A1A1A');

  LHUiColorUtils.getColorWhiteWithOpaticy = function (opacity) {
    var white = 'rgba(255,255,255,opacity)';
    var whiteDark = 'rgba(0,0,0,opacity)';
    return _getColor(white.replace('opacity', opacity), whiteDark.replace('opacity', opacity));
  };

  LHUiColorUtils.getColorBlackWithOpaticy = function (opacity) {
    var black = 'rgba(0,0,0,opacity)';
    var blackDark = 'rgba(255,255,255,opacity)';
    return _getColor(black.replace('opacity', opacity), blackDark.replace('opacity', opacity));
  };
},10151,[14305,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDeviceUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDeviceUtils.default;
  exports.default = _default;
},10154,[14305,10157]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XSMAX_WIDTH = 414;
  var XSMAX_HEIGHT = 896;
  var PAD_WIDTH = 768;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      D_HEIGHT = _Dimensions$get.height,
      D_WIDTH = _Dimensions$get.width;

  var isIPhoneX = function () {
    return _reactNative.Platform.OS === 'ios' && (D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH || D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT) || D_HEIGHT === XSMAX_HEIGHT && D_WIDTH === XSMAX_WIDTH || D_HEIGHT === XSMAX_WIDTH && D_WIDTH === XSMAX_HEIGHT;
  }();

  var isIPad = function () {
    if (_reactNative.Platform.OS !== 'ios' || isIPhoneX) return false;

    if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
      return false;
    }

    if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
      return false;
    }

    return true;
  }();

  var statusBarHeight = function statusBarHeight(isLandscape) {
    if (_reactNative.Platform.OS === 'android') {
      return _reactNative.StatusBar.currentHeight;
    }

    if (isIPhoneX) {
      return isLandscape ? 0 : 44;
    }

    if (isIPad) {
      return 20;
    }

    return isLandscape ? 0 : 20;
  };

  function getInset(key, isLandscape) {
    switch (key) {
      case 'horizontal':
      case 'right':
      case 'left':
        {
          return isLandscape ? isIPhoneX ? 44 : 0 : 0;
        }

      case 'vertical':
      case 'top':
        {
          return statusBarHeight(isLandscape);
        }

      case 'bottom':
        {
          return isIPhoneX ? isLandscape ? 24 : 34 : 0;
        }

      default:
        return 0;
    }
  }

  var androidHeight = 0;

  var LHDeviceUtils = function () {
    function LHDeviceUtils() {
      (0, _classCallCheck2.default)(this, LHDeviceUtils);
    }

    (0, _createClass2.default)(LHDeviceUtils, null, [{
      key: "getPhoneInset",
      value: function getPhoneInset(key, isLandscape) {
        return getInset(key, isLandscape);
      }
    }, {
      key: "GetPhoneScreenHeight",
      value: function GetPhoneScreenHeight(onSuccess) {
        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            height = _Dimensions$get2.height;

        if (_reactNative.Platform.OS === 'android') {
          if (androidHeight > 0) {
            if (typeof onSuccess === 'function') onSuccess(androidHeight);
          } else {
            setTimeout(function () {
              _miot.Host.getPhoneScreenInfo().then(function (res) {
                if (res && res.viewHeight) androidHeight = res.viewHeight;
                if (typeof onSuccess === 'function') onSuccess(res ? res.viewHeight || height : height);
              }).catch(function () {
                if (typeof onSuccess === 'function') onSuccess(height);
              });
            }, 100);
          }
        } else {
          if (typeof onSuccess === 'function') onSuccess(height);
        }
      }
    }]);
    return LHDeviceUtils;
  }();

  exports.default = LHDeviceUtils;
  LHDeviceUtils.statusBarHeight = getInset('top', false);
  LHDeviceUtils.AppHomeIndicatorHeight = getInset('bottom', false);
},10157,[14305,14320,14323,10074,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDialogUtils.default;
  exports.default = _default;
},10160,[14305,10163]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _miot = _$$_REQUIRE(_dependencyMap[5]);

  var _LHUiColorUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var LHDialogUtils = function () {
    function LHDialogUtils() {
      (0, _classCallCheck2.default)(this, LHDialogUtils);
    }

    (0, _createClass2.default)(LHDialogUtils, null, [{
      key: "MessageDialogShow",
      value: function MessageDialogShow(config) {
        var data = (0, _extends2.default)({}, config);

        if (_miot.API_LEVEL >= 10022) {
          var getBtnData = function getBtnData(type, configData) {
            var result = {};

            if (type === 'confirm') {
              result.callback = configData.onConfirm;
              result.text = configData.confirm;
              result.style = (0, _extends2.default)({
                color: _LHUiColorUtils.default.colorGreenNormal
              }, configData.confirmStyle || {});
            } else {
              result.callback = configData.onCancel;
              result.text = configData.cancel;
            }

            return result;
          };

          if (data.confirm && data.cancel && !data.buttons) {
            data.buttons = [getBtnData('cancel', data), getBtnData('confirm', data)];
          } else if (data.confirm && !data.buttons) {
            data.buttons = [getBtnData('confirm', data)];
          } else if (data.cancel && !data.buttons) {
            data.buttons = [getBtnData('cancel', data)];
          }
        }

        _reactNative.DeviceEventEmitter.emit('LHMessageDialog', (0, _extends2.default)({
          visible: true
        }, data));
      }
    }, {
      key: "MessageDialogHide",
      value: function MessageDialogHide() {
        _reactNative.DeviceEventEmitter.emit('LHMessageDialog', (0, _extends2.default)({
          visible: false
        }));
      }
    }, {
      key: "LoadingDialogShow",
      value: function LoadingDialogShow(config) {
        _reactNative.DeviceEventEmitter.emit('LHLoadingDialog', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "LoadingDialogHide",
      value: function LoadingDialogHide() {
        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;
        setTimeout(function () {
          _reactNative.DeviceEventEmitter.emit('LHLoadingDialog', (0, _extends2.default)({
            visible: false
          }));
        }, delay);
      }
    }, {
      key: "InputDialogShow",
      value: function InputDialogShow(config) {
        _reactNative.DeviceEventEmitter.emit('LHInputDialog', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "ShowInputDialog",
      value: function ShowInputDialog(config) {
        var data = (0, _extends2.default)({}, config);

        var getBtnData = function getBtnData(type, configData) {
          var result = {};

          if (type === 'confirm') {
            result.callback = configData.onConfirm;
            result.text = configData.confirm;
            result.style = (0, _extends2.default)({
              color: _LHUiColorUtils.default.colorGreenNormal
            }, configData.confirmStyle || {});
          } else {
            result.callback = configData.onCancel;
            result.text = configData.cancel;
          }

          return result;
        };

        if (data.confirm && data.cancel && !data.buttons) {
          data.buttons = [getBtnData('cancel', data), getBtnData('confirm', data)];
        } else if (data.confirm && !data.buttons) {
          data.buttons = [getBtnData('confirm', data)];
        } else if (data.cancel && !data.buttons) {
          data.buttons = [getBtnData('cancel', data)];
        }

        _reactNative.DeviceEventEmitter.emit('LHNewInputDialog', (0, _extends2.default)({
          visible: true
        }, data));
      }
    }, {
      key: "HideInputDialog",
      value: function HideInputDialog() {
        _reactNative.DeviceEventEmitter.emit('LHNewInputDialog', (0, _extends2.default)({
          visible: false
        }));
      }
    }, {
      key: "ShowSingleChoseDialog",
      value: function ShowSingleChoseDialog(config) {
        _reactNative.DeviceEventEmitter.emit('SingleChoseDialog', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "HideSingleChoseDialog",
      value: function HideSingleChoseDialog() {
        _reactNative.DeviceEventEmitter.emit('SingleChoseDialog', (0, _extends2.default)({
          visible: false
        }));
      }
    }, {
      key: "showConfirmDialog",
      value: function showConfirmDialog(config) {
        _reactNative.DeviceEventEmitter.emit('LHConfirmDialog', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "hideConfirmDialog",
      value: function hideConfirmDialog() {
        _reactNative.DeviceEventEmitter.emit('LHConfirmDialog', (0, _extends2.default)({
          visible: false
        }));
      }
    }, {
      key: "showCustomLoadingDialog",
      value: function showCustomLoadingDialog(config) {
        _reactNative.DeviceEventEmitter.emit('CustomLoadingDialog', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "hideCustomLoadingDialog",
      value: function hideCustomLoadingDialog() {
        _reactNative.DeviceEventEmitter.emit('CustomLoadingDialog', (0, _extends2.default)({
          visible: false
        }));
      }
    }, {
      key: "showCustomSingleChoseDialog",
      value: function showCustomSingleChoseDialog(config) {
        _reactNative.DeviceEventEmitter.emit('CustomSingleChose', (0, _extends2.default)({
          visible: true
        }, config));
      }
    }, {
      key: "hideCustomSingleChoseDialog",
      value: function hideCustomSingleChoseDialog() {
        _reactNative.DeviceEventEmitter.emit('CustomSingleChose', (0, _extends2.default)({
          visible: false
        }));
      }
    }]);
    return LHDialogUtils;
  }();

  exports.default = LHDialogUtils;
},10163,[14305,14344,14320,14323,10033,10074,10148]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHAppiumUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHAppiumUtils.default;
  exports.default = _default;
},10166,[14305,10169]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var LHAppiumUtils = function () {
    function LHAppiumUtils() {
      (0, _classCallCheck2.default)(this, LHAppiumUtils);
    }

    (0, _createClass2.default)(LHAppiumUtils, null, [{
      key: "GetAccessibilityLabel",
      value: function GetAccessibilityLabel(contentDesc) {
        if (_reactNative.Platform.OS === 'android') {
          return contentDesc;
        } else {
          return null;
        }
      }
    }, {
      key: "getWhiteList",
      value: function getWhiteList() {
        return ['840907289', '1090807515', '702333240', '2250935325', '978172332', '115453283', '272310686'];
      }
    }, {
      key: "isWhiteList",
      value: function isWhiteList() {
        var whiteList = LHAppiumUtils.getWhiteList();
        var isWhite = whiteList.indexOf('' + _miot.Service.account.ID) > -1;
        return isWhite;
      }
    }, {
      key: "handleTestRequestData",
      value: function handleTestRequestData(originalData, type, key, requestTime, params, response, dataMaxLength) {
        var requestClone = _LHCommonMethod.default.DeepClone(originalData);

        if (LHAppiumUtils.isWhiteList()) {
          if (!requestClone[key]) requestClone[key] = [];
          if (requestClone[key].length >= (dataMaxLength || 3)) requestClone[key].shift();
          requestClone[key].push({
            type: type,
            requestTime: requestTime,
            params: params || {},
            response: response || {},
            responseTime: new Date().getTime()
          });
        }

        return requestClone;
      }
    }]);
    return LHAppiumUtils;
  }();

  exports.default = LHAppiumUtils;
},10169,[14305,14320,14323,10033,10074,10019]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHGetPx = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHDeviceAuthorityUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var dp = _LHGetPx.default;

  var LHFirmwareUpgradeAutoUtils = function () {
    function LHFirmwareUpgradeAutoUtils() {
      (0, _classCallCheck2.default)(this, LHFirmwareUpgradeAutoUtils);
    }

    (0, _createClass2.default)(LHFirmwareUpgradeAutoUtils, null, [{
      key: "checkFirmwareUpgradeAutoShouldShow",
      value: function checkFirmwareUpgradeAutoShouldShow(callback) {
        var _this = this;

        if (!_miot.Device.isOnline || _LHDeviceAuthorityUtils.default.isShared()) {
          callback(false);
          return;
        }

        _LHMiServer.default.getAutoUpgradeConfig(_miot.Device.deviceID).then(function (res) {
          if (res.support_upgrade) {
            _this.isSupportAutoUpgrade = true;
            var params = [{
              did: _miot.Device.deviceID,
              props: [_this.autoUpgradeAlreadyPressKey]
            }];

            _LHMiServer.default.BatchGetDeviceDatas(params, function (res1) {
              var alreadyPress = false;
              var result = res1[_miot.Device.deviceID];
              var config;

              if (result && result[_this.autoUpgradeAlreadyPressKey]) {
                alreadyPress = true;
              }

              callback(!alreadyPress);

              if (!alreadyPress) {
                var reportParams = {
                  "device_model": _miot.Device.model,
                  "did": _miot.Device.deviceID,
                  "tip": "6.2.0.1.2682"
                };

                _LHMiServer.default.reportEvent('Autoupdate_show', reportParams);

                _LHMiServer.default.BatchGetDeviceDatas([{
                  did: _miot.Device.deviceID,
                  props: [_this.autoUpgradeFirstSetKey]
                }], function (res) {
                  var isFirstSet = true;

                  if (res) {
                    var _result = res[_miot.Device.deviceID];

                    if (_result) {
                      var isFirstSetTemp = _result[_this.autoUpgradeFirstSetKey];

                      if (isFirstSetTemp === "false") {
                        isFirstSet = false;
                      }
                    }
                  }

                  if (isFirstSet) {
                    var switchParams = {
                      "did": _miot.Device.deviceID,
                      "props": {
                        "prop.s_auto_upgrade_switch": "1"
                      }
                    };

                    _miot.Service.smarthome.setDeviceProp(switchParams).then(function (res) {
                      _miot.Service.smarthome.reportLog(_miot.Device.model, "setDeviceProp success " + JSON.stringify(res));
                    }).catch(function (error) {
                      _miot.Service.smarthome.reportLog(_miot.Device.model, "setDeviceProp error " + JSON.stringify(error));
                    });

                    var _params = [{
                      did: _miot.Device.deviceID,
                      props: (0, _defineProperty2.default)({}, _this.autoUpgradeFirstSetKey, "false")
                    }];

                    _LHMiServer.default.BatchSetDeviceDatas(_params, function () {});
                  }
                });
              }
            }, function () {
              callback(false);
            });
          } else {
            callback(false);
          }
        }).catch(function () {
          callback(false);
        });
      }
    }, {
      key: "setAutoUpgradePress",
      value: function setAutoUpgradePress() {
        var params = [{
          did: _miot.Device.deviceID,
          props: (0, _defineProperty2.default)({}, this.autoUpgradeAlreadyPressKey, "true")
        }];

        _LHMiServer.default.BatchSetDeviceDatas(params, function () {});
      }
    }, {
      key: "getCardConfig",
      value: function getCardConfig(iconSource, _onPress) {
        return [{
          testID: 'autoUpgrade',
          title: _LHCommonLocalizableString.default.mi_common_auto_upgrade,
          subTitle: _LHCommonLocalizableString.default.mi_common_view_details,
          iconSource: iconSource,
          height: dp(60),
          autoHeight: true,
          titleNumberOfLines: 20,
          iconStyle: {
            width: dp(30),
            height: dp(30),
            marginLeft: dp(25),
            marginRight: dp(18)
          },
          onPress: function onPress() {
            LHFirmwareUpgradeAutoUtils.setAutoUpgradePress();
            if (typeof _onPress === 'function') _onPress();
          }
        }];
      }
    }]);
    return LHFirmwareUpgradeAutoUtils;
  }();

  exports.default = LHFirmwareUpgradeAutoUtils;
  LHFirmwareUpgradeAutoUtils.autoUpgradeAlreadyPressKey = 'prop.s_ota_auto_upgrade_tips';
  LHFirmwareUpgradeAutoUtils.autoUpgradeFirstSetKey = 'prop.s_ota_auto_upgrade_first_set';
  LHFirmwareUpgradeAutoUtils.isSupportAutoUpgrade = false;
},10172,[14305,14317,14320,14323,10074,10034,10013,10115,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStringUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStringUtils.default;
  exports.default = _default;
},10175,[14305,10178]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var LHStringUtils = function () {
    function LHStringUtils() {
      (0, _classCallCheck2.default)(this, LHStringUtils);
    }

    (0, _createClass2.default)(LHStringUtils, null, [{
      key: "isContainsEmoji",
      value: function isContainsEmoji(substring) {
        if (substring) {
          for (var i = 0; i < substring.length; i += 1) {
            var hs = substring.charCodeAt(i);

            if (hs >= 0xd800 && hs <= 0xdbff) {
              if (substring.length > 1) {
                var ls = substring.charCodeAt(i + 1);
                var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

                if (uc >= 0x1d000 && uc <= 0x1f9f9) {
                  return true;
                }
              }
            } else if (substring.length > 1) {
              var _ls = substring.charCodeAt(i + 1);

              if (_ls === 0x20e3 || _ls === 0xfe0f || _ls === 0xd83c) {
                return true;
              }
            } else if (hs >= 0x2100 && hs <= 0x27ff && hs !== 0x2103) {
              return true;
            } else if (hs >= 0x2B05 && hs <= 0x2b07) {
              return true;
            } else if (hs >= 0x2934 && hs <= 0x2935) {
              return true;
            } else if (hs >= 0x3297 && hs <= 0x3299) {
              return true;
            } else if (hs === 0xa9 || hs === 0xae || hs === 0x303d || hs === 0x3030 || hs === 0x2b55 || hs === 0x2b1c || hs === 0x2b1b || hs === 0x2b50 || hs === 0x231a) {
              return true;
            }
          }
        }

        return false;
      }
    }, {
      key: "isContainsNotSupportChar",
      value: function isContainsNotSupportChar(substring) {
        if (substring.indexOf('--') !== -1) {
          return true;
        }

        if (substring.indexOf('\\') !== -1) {
          return true;
        }

        var pattern = new RegExp('[!$^*{}<>?\\[\\]=|]');

        if (pattern.test(substring)) {
          return true;
        }

        return false;
      }
    }, {
      key: "versionNumeric",
      value: function versionNumeric(version) {
        var stringNumber = version.replace(/[._]/g, '');
        return Number(stringNumber);
      }
    }, {
      key: "deviceVersionCompare",
      value: function deviceVersionCompare(currentVersion, latestVersion) {
        if (latestVersion.length > currentVersion.length) {
          return true;
        }

        var currentVersionNum = this.versionNumeric(currentVersion);
        var latestVersionNum = this.versionNumeric(latestVersion);
        return latestVersionNum > currentVersionNum;
      }
    }, {
      key: "uuid",
      value: function uuid() {
        var d = new Date().getTime();
        var uuid = 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
          var r = (d + Math.random() * 16) % 16 | 0;
          d = Math.floor(d / 16);
          return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
        });
        return uuid;
      }
    }]);
    return LHStringUtils;
  }();

  exports.default = LHStringUtils;

  LHStringUtils.judgeStringLength = function (str) {
    var strLen = 0;

    for (var i = 0; i < str.length; i += 1) {
      var code = str.charAt(i);

      if (code.match(/[^\x00-\xff]/ig) !== null) {
        strLen += 2;
      } else {
        strLen += 1;
      }
    }

    return strLen;
  };
},10178,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function LHSpecStatus(siid, piid, updateState) {
    var cacheKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
    var operationFailText = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _LHCommonLocalizableString.default.common_operation_fail;
    var hasLoad = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    this.siid = siid;
    this.piid = piid;
    this.updateState = updateState;
    this.cacheKey = cacheKey;
    this.operationFailText = operationFailText;
    this.hasLoad = hasLoad;
  }

  var _default = LHSpecStatus;
  exports.default = _default;
},10181,[14305,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHToastUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var LHSpecHost = function () {
    function LHSpecHost() {
      (0, _classCallCheck2.default)(this, LHSpecHost);
    }

    (0, _createClass2.default)(LHSpecHost, null, [{
      key: "loadAllDataFromCache",
      value: function loadAllDataFromCache(specObjs) {
        if (!specObjs) return;
        var keys = Object.keys(specObjs);
        if (keys.length <= 0) return;

        for (var i = 0; i < keys.length; i += 1) {
          var specObj = specObjs[keys[i]];

          if (specObj && specObj.cacheKey) {
            this.loadDataFromCache(specObj);
          }
        }
      }
    }, {
      key: "loadDataFromCache",
      value: function loadDataFromCache(specObj) {
        if (specObj && specObj.cacheKey) {
          _LHMiServer.default.GetHostStorage(specObj.cacheKey).then(function (value) {
            if (value || value === 0) {
              if (!specObj.hasLoad) {
                if (typeof specObj.updateState === 'function') specObj.updateState(value);
              }
            }
          });
        }
      }
    }, {
      key: "getPropertiesValue",
      value: function getPropertiesValue(specObjs) {
        var _this = this;

        var needTips = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var specKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
        if (!specObjs) return;
        var keys = Object.keys(specObjs);
        if (keys.length <= 0) return;
        var params = [];

        if (specKey) {
          var specObj = specObjs[specKey];
          var param = this.specObjToSpecParam(specObj);
          if (param) params.push(param);
        } else {
          for (var i = 0; i < keys.length; i += 1) {
            var _specObj = specObjs[keys[i]];

            var _param = this.specObjToSpecParam(_specObj);

            if (_param) params.push(_param);
          }
        }

        if (params.length <= 0) return;
        this.GetPropertiesValuePromise(params).then(function (res) {
          if (specKey) {
            _this.loadValueSuccess(res, specObjs, specKey).catch(function (err) {
              throw err;
            });
          } else {
            var fns = [];

            for (var _i = 0; _i < keys.length; _i += 1) {
              fns.push(_this.loadValueSuccess(res, specObjs, keys[_i]));
            }

            Promise.all(fns).catch(function (err) {
              throw err;
            });
          }
        }).catch(function (error) {
          if (needTips) _LHToastUtils.default.showShortToast(_LHCommonLocalizableString.default.common_tips_request_failed);
        });
      }
    }, {
      key: "GetPropertiesValuePromise",
      value: function GetPropertiesValuePromise(params) {
        return new Promise(function (resolve, reject) {
          _LHMiServer.default.GetPropertiesValue(params, function (res) {
            resolve(res);
          }, function (err) {
            reject(err);
          });
        });
      }
    }, {
      key: "specObjToSpecParam",
      value: function specObjToSpecParam(specObj) {
        if (specObj && specObj.siid && specObj.piid) {
          return {
            did: _miot.Device.deviceID,
            siid: specObj.siid,
            piid: specObj.piid
          };
        }

        return null;
      }
    }, {
      key: "loadValueSuccess",
      value: function loadValueSuccess(res, specObjs, specKey) {
        return new Promise(function (reject) {
          var specObj = specObjs[specKey];

          if (specObj && specObj.siid && specObj.piid) {
            var specItem = _LHCommonMethod.default.FindSpec(res || [], specObj.siid, specObj.piid);

            if (specItem && specItem.code === 0) {
              specObj.hasLoad = true;
              if (typeof specObj.updateState === 'function') specObj.updateState(specItem.value);
              if (specObj.cacheKey) _LHMiServer.default.SetHostStorage(specObj.cacheKey, specItem.value);
            } else {
              reject(new Error(' result invalid！'));
            }
          }
        });
      }
    }, {
      key: "setPropertiesValue",
      value: function setPropertiesValue(newValue, oldValue, specObj) {
        if (specObj && specObj.siid && specObj.piid) {
          _LHMiServer.default.SetPropertiesValue([{
            did: _miot.Device.deviceID,
            siid: specObj.siid,
            piid: specObj.piid,
            value: newValue
          }], function (res) {
            if (res && res.length > 0 && +res[0].code !== 0) {
              if (typeof specObj.updateState === 'function') specObj.updateState(oldValue);
            } else {
              if (typeof specObj.updateState === 'function') specObj.updateState(newValue, true);
              if (specObj.cacheKey) _LHMiServer.default.SetHostStorage(specObj.cacheKey, newValue);
            }
          }, function () {
            if (specObj.operationFailText) _LHToastUtils.default.showShortToast(specObj.operationFailText);
            if (typeof specObj.updateState === 'function') specObj.updateState(oldValue);
          });
        }
      }
    }, {
      key: "setPropertiesValueOnly",
      value: function setPropertiesValueOnly(newValue, specObj) {
        if (specObj && specObj.siid && specObj.piid) {
          _LHMiServer.default.SetPropertiesValue([{
            did: _miot.Device.deviceID,
            siid: specObj.siid,
            piid: specObj.piid,
            value: newValue
          }], function (res) {}, function () {
            if (specObj.operationFailText) _LHToastUtils.default.showShortToast(specObj.operationFailText);
          });
        }
      }
    }]);
    return LHSpecHost;
  }();

  exports.default = LHSpecHost;
},10184,[14305,14320,14323,10074,10019,10034,10013,10127]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHIFTTTManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHIFTTTManager.default;
  exports.default = _default;
},10187,[14305,10190]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHAlarmIFTTTAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHDeviceActionModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHDeviceTriggleModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var MiJiaIFTTTTypeIFThen = 15;
  var AlarmIFTTTTypeIFThen = 22;
  var AlarmIFTTTTypeWhenIFThen = 53;

  var LHIFTTTManager = function () {
    function LHIFTTTManager() {
      (0, _classCallCheck2.default)(this, LHIFTTTManager);
    }

    (0, _createClass2.default)(LHIFTTTManager, null, [{
      key: "fetchAlarmTriggleDeviceList",
      value: function fetchAlarmTriggleDeviceList(did, onSuccess, onFail) {
        var _this = this;

        this.fetchSubDeviceListAndSceneData(did, AlarmIFTTTTypeWhenIFThen, function (res) {
          if (typeof onSuccess === 'function') onSuccess(_this.adaptAlarmTriggleDeviceData(res[0], res[1]));
        }, function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "getLinuxGatewayIFTTTDeviceList",
      value: function getLinuxGatewayIFTTTDeviceList(did, type, onSuccess, onFail) {
        var _this2 = this;

        this.fetchSubDeviceListAndSceneData(did, AlarmIFTTTTypeIFThen, function (res) {
          if (typeof onSuccess === 'function') onSuccess(_this2.adaptLinuxGatewayIFTTTDeviceData(res[0], res[1], type));
        }, function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "isLinuxGatewayCanControlAlarm",
      value: function isLinuxGatewayCanControlAlarm(did, onSuccess, onFail) {
        var _this3 = this;

        this.fetchSubDeviceListAndSceneData(did, AlarmIFTTTTypeIFThen, function (res) {
          var canControl = _this3.matchAlarmTriggleDeviceData(res[0], res[1], _LHGuardTypeMode.default.getNormalGuardType());

          var dataList = _this3.adaptLinuxGatewayIFTTTDeviceData(res[0], res[1], _LHGuardTypeMode.default.getNormalGuardType());

          if (typeof onSuccess === 'function') onSuccess(canControl, dataList);
        }, function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "removeNightLightScene",
      value: function removeNightLightScene(scenesList) {
        if (!scenesList) return [];

        for (var i = 0; i < scenesList.length; i += 1) {
          if (scenesList[i].identify === _LHGuardTypeMode.default.getNightLightIdentify()) {
            scenesList.splice(i, 1);
            i -= 1;
          }
        }

        return scenesList;
      }
    }, {
      key: "fetchSubDeviceListAndSceneData",
      value: function fetchSubDeviceListAndSceneData(did, type, onSuccess, onFail) {
        var _this4 = this;

        var allPromise = [new Promise(function (resolve, reject) {
          return _LHMiServer.default.LoadSceneList(did, type, [], function (scenesList) {
            var newScenesList = _this4.removeNightLightScene(scenesList);

            resolve(newScenesList);
          }, function (err) {
            reject(err);
          });
        }), new Promise(function (resolve, reject) {
          return _LHMiServer.default.GetSubDevices(function (subDevices) {
            resolve(subDevices);
          }).catch(function (err) {
            reject(err);
          });
        })];

        if (_LHDeviceModel.default.isBleGateway()) {
          allPromise.push(_LHMiServer.default.getLinkedBTDevices(did));
        }

        Promise.all(allPromise).then(function (res) {
          var bleSubDevices = _this4.getBleSubDevices(res);

          res[1] = (res && res[1] || []).concat(bleSubDevices);
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "getBleSubDevices",
      value: function getBleSubDevices(res) {
        if (!res || res.length < 3) {
          return [];
        } else {
          return this.getBleSupportDevices(res[2]);
        }
      }
    }, {
      key: "getBleSupportDevices",
      value: function getBleSupportDevices(res) {
        var bleDevices = res && res.normal || [];
        var devices = [];

        for (var i = 0, len = bleDevices.length; i < len; i += 1) {
          if (_LHDeviceModel.default.isSupportBleDevices().indexOf(bleDevices[i].model) > -1) {
            bleDevices[i].deviceID = bleDevices[i].did;
            devices.push(bleDevices[i]);
          }
        }

        return devices;
      }
    }, {
      key: "getMultiModeHubReadyToDeleteSceneIDList",
      value: function getMultiModeHubReadyToDeleteSceneIDList(type, triggleDeviceId, onSuccess, onFail) {
        this.getReadyToDeleteSceneIDList(type, triggleDeviceId, onSuccess, onFail, AlarmIFTTTTypeWhenIFThen);
      }
    }, {
      key: "getReadyToDeleteSceneIDList",
      value: function getReadyToDeleteSceneIDList(type, triggleDeviceId, onSuccess, onFail) {
        var _this5 = this;

        var iftttType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : AlarmIFTTTTypeIFThen;

        _LHMiServer.default.LoadSceneList(_miot.Device.deviceID, iftttType, [], function (scenesList) {
          var deviceSceneList = [];
          scenesList.forEach(function (scene) {
            if (_LHAlarmIFTTTAdapter.default.isSceneNeedToShow(scene.identify, type)) {
              var triggleDevice = _this5.getTriggleDeviceWithScene(scene);

              if (triggleDevice === null || triggleDevice.did === triggleDeviceId) {
                deviceSceneList.push(scene.sceneID + '');
              }
            }
          });
          if (typeof onSuccess === 'function') onSuccess(deviceSceneList);
        }, function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "adaptAlarmTriggleDeviceData",
      value: function adaptAlarmTriggleDeviceData() {
        var sceneList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var subDevices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var data = [];
        var canControlDatas = [];
        var cantControlDatas = [];
        var newSceneList = this.deleteSceneWhichStatusNotCorrect(sceneList);

        for (var index = 0; index < 4; index += 1) {
          canControlDatas = [];
          cantControlDatas = [];
          var guardType = index;

          for (var i = 0, deviceLen = subDevices.length; i < deviceLen; i += 1) {
            var subDevice = subDevices[i];

            if (_LHAlarmIFTTTAdapter.default.isSupportIFTTT(subDevice.model, guardType, sceneList)) {
              var isCanControl = true;
              var isAdded = false;
              var cantControlAddedGuardTypeList = [];

              for (var j = 0, sceneLen = newSceneList.length; j < sceneLen; j += 1) {
                var scene = newSceneList[j];
                var triggleDevice = this.getTriggleDeviceWithScene(scene);

                if (triggleDevice !== null && triggleDevice.did === subDevice.deviceID) {
                  if (scene.identify === _LHGuardTypeMode.default.getGuardModelWithGuardType(guardType).identify) {
                    isCanControl = true;
                    isAdded = true;
                    break;
                  }

                  if (scene.identify === _LHGuardTypeMode.default.getGuardModelWithGuardType(_LHGuardTypeMode.default.getBaseGuardType()).identify && guardType !== _LHGuardTypeMode.default.getBaseGuardType()) {
                    isCanControl = false;
                    cantControlAddedGuardTypeList.push(_LHGuardTypeMode.default.getGuardTypeWithSceneIdentify(scene.identify));
                    break;
                  }

                  if (scene.identify !== _LHGuardTypeMode.default.getGuardModelWithGuardType(_LHGuardTypeMode.default.getBaseGuardType()).identify && guardType === _LHGuardTypeMode.default.getBaseGuardType()) {
                    isCanControl = false;
                    cantControlAddedGuardTypeList.push(_LHGuardTypeMode.default.getGuardTypeWithSceneIdentify(scene.identify));
                  }
                }
              }

              if (isCanControl) {
                var model = _LHAlarmIFTTTAdapter.default.getAlarmTriggleDeviceModel(subDevice);

                model.isAdded = isAdded;
                canControlDatas.push(model);
              } else {
                var _model = _LHAlarmIFTTTAdapter.default.getAlarmTriggleDeviceCantControlModel(subDevice, cantControlAddedGuardTypeList, guardType, sceneList);

                cantControlDatas.push(_model);
              }
            } else if ((subDevice.model === _LHDeviceModel.default.DeviceModelSensorNatgasV1() || subDevice.model === _LHDeviceModel.default.DeviceModelSensorSmokeV1() || subDevice.model === _LHDeviceModel.default.DeviceModelSensorWleakAq1() || subDevice.model === _LHDeviceModel.default.AqaraWleakT1() || subDevice.model === _LHDeviceModel.default.DeviceModelMijiaBleFlood() || subDevice.model === _LHDeviceModel.default.DeviceModelMijiaBleSensorSmoke()) && guardType !== _LHGuardTypeMode.default.getBaseGuardType()) {
              var _model2 = _LHAlarmIFTTTAdapter.default.getAlarmTriggleDeviceCantControlModel(subDevice, [], guardType, sceneList);

              cantControlDatas.push(_model2);
            }
          }

          data.push([canControlDatas, cantControlDatas]);
        }

        return data;
      }
    }, {
      key: "adaptLinuxGatewayIFTTTDeviceData",
      value: function adaptLinuxGatewayIFTTTDeviceData() {
        var sceneList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var subDevices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var type = arguments.length > 2 ? arguments[2] : undefined;
        var newSceneList = this.deleteSceneWhichStatusNotCorrect(sceneList);
        var datas = [];

        for (var j = 0, deviceLen = subDevices.length; j < deviceLen; j += 1) {
          var subDevice = subDevices[j];

          if (_LHAlarmIFTTTAdapter.default.isSupportIFTTT(subDevice.model, type, sceneList)) {
            var newSubDeviceModel = _LHAlarmIFTTTAdapter.default.getLinuxGatewayAlarmIFTTTModel(subDevice);

            for (var i = 0, sceneLen = newSceneList.length; i < sceneLen; i += 1) {
              var scene = newSceneList[i];
              var triggleDevice = this.getTriggleDeviceWithScene(scene);

              if (triggleDevice !== null && _LHAlarmIFTTTAdapter.default.isSceneNeedToShow(scene.identify, type)) {
                if (triggleDevice.did === subDevice.deviceID) {
                  newSubDeviceModel.isAddedInLinuxGateway = true;
                  newSubDeviceModel.sceneID = scene.sceneID;
                  datas.push(newSubDeviceModel);
                  break;
                }
              }
            }

            if (newSubDeviceModel.isAddedInLinuxGateway === false) {
              datas.push(newSubDeviceModel);
            }
          }
        }

        return datas;
      }
    }, {
      key: "isLinuxGatewayCanGotoGuardSettingPage",
      value: function isLinuxGatewayCanGotoGuardSettingPage(onSuccess, onFail) {
        _LHMiServer.default.GetSubDevices(function (subDevices) {
          var isCanGo = false;

          for (var j = 0, deviceLen = subDevices.length; j < deviceLen; j += 1) {
            var subDevice = subDevices[j];

            if (_LHAlarmIFTTTAdapter.default.isSupportIFTTT(subDevice.model, _LHGuardTypeMode.default.getNormalGuardType())) {
              isCanGo = true;
              break;
            }
          }

          if (typeof onSuccess === 'function') onSuccess(isCanGo);
        }, function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "matchAlarmTriggleDeviceData",
      value: function matchAlarmTriggleDeviceData() {
        var sceneList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var subDevices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var guardType = arguments.length > 2 ? arguments[2] : undefined;
        var match = false;

        for (var i = 0, sceneLen = sceneList.length; i < sceneLen; i += 1) {
          if (match) {
            break;
          }

          var scene = sceneList[i];
          var triggleDevice = this.getTriggleDeviceWithScene(scene);

          if (triggleDevice !== null && _LHAlarmIFTTTAdapter.default.isSceneNeedToShow(scene.identify, guardType)) {
            for (var j = 0, deviceLen = subDevices.length; j < deviceLen; j += 1) {
              var subDevice = subDevices[j];

              if (triggleDevice.did === subDevice.deviceID) {
                match = true;
                break;
              }
            }
          }
        }

        return match;
      }
    }, {
      key: "getTriggleDeviceWithScene",
      value: function getTriggleDeviceWithScene(scene) {
        if (scene === null || scene === undefined) {
          return null;
        }

        var triggleList;

        if (scene.setting.trigger) {
          triggleList = scene.setting.trigger;
        } else {
          triggleList = scene.setting.launch.attr;
        }

        if (triggleList === null || triggleList === undefined || triggleList.length === 0) {
          return null;
        }

        var triggleDevice = null;

        for (var i = 0, triggleLen = triggleList.length; i < triggleLen; i += 1) {
          var triggle = triggleList[i];

          if (triggle.did !== _miot.Device.deviceID) {
            triggleDevice = triggle;
            break;
          }
        }

        return triggleDevice;
      }
    }, {
      key: "isAlarmTriggleDeviceCanBeDeletedWithModel",
      value: function isAlarmTriggleDeviceCanBeDeletedWithModel(model) {
        if (model === undefined || model === null || model === '') {
          return true;
        }

        if (model === _LHDeviceModel.default.DeviceModelSensorNatgasV1() || model === _LHDeviceModel.default.DeviceModelSensorSmokeV1()) {
          return false;
        }

        return true;
      }
    }, {
      key: "saveSceneRecord",
      value: function saveSceneRecord(did, device, alarmType, onSuccess, onFail) {
        var params = null;

        if (alarmType === _LHGuardTypeMode.default.getBaseGuardType() || alarmType === _LHGuardTypeMode.default.getHomeGuardType() || alarmType === _LHGuardTypeMode.default.getAwayGuardType() || alarmType === _LHGuardTypeMode.default.getSleepGuardType()) {
          params = this.getWhenIfThenIFTTTParams(device, alarmType);
        } else if (alarmType === _LHGuardTypeMode.default.getNormalGuardType()) {
          params = this.getAlarmTriggleIFTTTParams(device, alarmType);
        } else if (alarmType === _LHGuardTypeMode.default.getDoorbellType()) {
          params = this.getDoorBellIFTTTParams(device, alarmType);
        } else if (alarmType === _LHGuardTypeMode.default.getCloseAlarmClockType()) {
          params = this.getCloseClockIFTTTParams(device, alarmType);
        }

        if (params === null) {
          if (typeof onFail === 'function') onFail();
          return;
        }

        this.editSceneRecord(params, onSuccess, onFail);
      }
    }, {
      key: "saveMijiaSmartSceneRecord",
      value: function saveMijiaSmartSceneRecord(triggerList, actionList, authedList, name, enable, onSuccess, onFail) {
        var params = {
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: MiJiaIFTTTTypeIFThen,
          identify: '',
          name: name,
          authed: authedList,
          setting: {
            enable: enable,
            enable_push: 0,
            launch: {
              attr: triggerList,
              express: 1
            },
            action_list: actionList
          }
        };
        this.editSceneRecord(params, onSuccess, onFail);
      }
    }, {
      key: "editSceneRecord",
      value: function editSceneRecord(params, onSuccess, onFail) {
        _miot.Service.scene.editSceneRecord(params).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "getWhenIfThenIFTTTParams",
      value: function getWhenIfThenIFTTTParams(device, alarmType) {
        var whenList = device.triggleModel.triggle;

        var triggerModel = _LHDeviceTriggleModel.default.getGatewayAlarmTriggleModelWithAlarmType(alarmType);

        var triggerList = Array.isArray(triggerModel) ? triggerModel : [triggerModel];

        var actionList = _LHDeviceActionModel.default.getGatewayAlarmActionListWithAlarmType(alarmType);

        var authedList = [_miot.Device.deviceID, device.did];

        var pushString = _LHAlarmIFTTTAdapter.default.getIFTTTPushString(device.model, device.subTitle, alarmType);

        return {
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: AlarmIFTTTTypeWhenIFThen,
          identify: _LHGuardTypeMode.default.getGuardModelWithGuardType(alarmType).identify,
          name: pushString,
          authed: authedList,
          setting: {
            enable: 1,
            enable_push: 1,
            launch: {
              attr: triggerList,
              express: 1
            },
            action_list: actionList,
            trigger: whenList
          }
        };
      }
    }, {
      key: "getAlarmTriggleIFTTTParams",
      value: function getAlarmTriggleIFTTTParams(device, alarmType) {
        var triggerList = [];
        triggerList.push(device.triggleModel.triggle);
        triggerList.push(_LHDeviceTriggleModel.default.getGatewayAlarmTriggleModelWithAlarmType(alarmType));
        var authedList = [_miot.Device.deviceID, device.did];
        return {
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: AlarmIFTTTTypeIFThen,
          identify: _LHGuardTypeMode.default.getGuardModelWithGuardType(alarmType).identify,
          name: _LHAlarmIFTTTAdapter.default.getNormalGatewayAlarmIFTTTName(device),
          authed: authedList,
          setting: {
            enable: 1,
            enable_push: 0,
            launch: {
              attr: triggerList,
              express: 0
            },
            action_list: _LHDeviceActionModel.default.getGatewayAlarmActionListWithAlarmType(alarmType)
          }
        };
      }
    }, {
      key: "getDoorBellIFTTTParams",
      value: function getDoorBellIFTTTParams(device, alarmType) {
        var triggerList = [];
        triggerList.push(device.triggleModel.triggle);
        var authedList = [_miot.Device.deviceID, device.did];
        return {
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: AlarmIFTTTTypeIFThen,
          identify: _LHGuardTypeMode.default.getGuardModelWithGuardType(alarmType).identify,
          name: _LHAlarmIFTTTAdapter.default.getNormalGatewayDoorBellIFTTTName(device),
          authed: authedList,
          setting: {
            enable: 1,
            enable_push: 0,
            launch: {
              attr: triggerList,
              express: 0
            },
            action_list: _LHDeviceActionModel.default.getDoorbellAction()
          }
        };
      }
    }, {
      key: "getCloseClockIFTTTParams",
      value: function getCloseClockIFTTTParams(device, alarmType) {
        var triggerList = [];
        triggerList.push(device.triggleModel.triggle);
        var authedList = [_miot.Device.deviceID, device.did];
        return {
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: AlarmIFTTTTypeIFThen,
          identify: _LHGuardTypeMode.default.getGuardModelWithGuardType(alarmType).identify,
          name: _LHAlarmIFTTTAdapter.default.getNormalGatewayClockIFTTTName(device),
          authed: authedList,
          setting: {
            enable: 1,
            enable_push: 0,
            launch: {
              attr: triggerList,
              express: 0
            },
            action_list: _LHDeviceActionModel.default.getCloseClockAction()
          }
        };
      }
    }, {
      key: "getLinkageAlarmIFTTTParams",
      value: function getLinkageAlarmIFTTTParams(type) {
        if (type !== 1 && type !== 2 && type !== 3) return null;
        var identify = 'lm_scene_5_' + String(type);
        var authedList = [_miot.Device.deviceID, _miot.Device.parentDevice.deviceID];

        var action = _LHDeviceActionModel.default.getLinkageAlarmSensorAction(_miot.Device.parentDevice);

        var triggle;

        if (type === 1) {
          triggle = _LHDeviceTriggleModel.default.getSensorSmokeTriggleModel(_miot.Device, '火警报警');
        } else if (type === 2) {
          triggle = _LHDeviceTriggleModel.default.getSensorNatgasTriggleModel(_miot.Device, '气体泄漏报警');
        } else {
          triggle = _LHDeviceTriggleModel.default.getSensorWleakTriggleModel(_miot.Device, '水浸报警');
        }

        return {
          identify: identify,
          name: _LHAlarmIFTTTAdapter.default.getLeakAlarmIFTTTName(type),
          us_id: 0,
          model: _miot.Device.model,
          did: _miot.Device.deviceID,
          st_id: AlarmIFTTTTypeIFThen,
          authed: authedList,
          setting: {
            enable: 1,
            enable_push: 0,
            st_id: 0,
            launch: {
              attr: [triggle],
              express: 0
            },
            action_list: [action]
          }
        };
      }
    }, {
      key: "deleteSceneWhichStatusNotCorrect",
      value: function deleteSceneWhichStatusNotCorrect(sceneList) {
        if (sceneList.length === 0 || sceneList === null || sceneList === undefined) {
          return [];
        }

        var finalSceneList = [];
        var notCorrectSceneList = [];
        sceneList.forEach(function (scene) {
          if (scene.status === 3) {
            notCorrectSceneList.push(scene);
          } else {
            finalSceneList.push(scene);
          }
        });

        if (notCorrectSceneList.length !== 0) {
          this.deleteAllScenes(notCorrectSceneList);
        }

        return finalSceneList;
      }
    }, {
      key: "deleteAllScenes",
      value: function deleteAllScenes(sceneList, onSuccess, onFail) {
        var sceneIdList = [];
        sceneList.forEach(function (scene) {
          sceneIdList.push(scene.sceneID + '');
        });
        this.deleteScenes(sceneIdList, onSuccess, onFail);
      }
    }, {
      key: "deleteScenes",
      value: function deleteScenes() {
        var sceneIdList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var onSuccess = arguments.length > 1 ? arguments[1] : undefined;
        var onFail = arguments.length > 2 ? arguments[2] : undefined;

        if (!Array.isArray(sceneIdList) || sceneIdList.length === 0) {
          if (typeof onFail === 'function') onFail();
          return;
        }

        _miot.Service.scene.deleteSceneRecords(sceneIdList).then(function (res) {
          if (typeof onSuccess === 'function') onSuccess(res);
        }).catch(function (err) {
          if (typeof onFail === 'function') onFail(err);
        });
      }
    }, {
      key: "getTriggerTemplatesWithDid",
      value: function getTriggerTemplatesWithDid(did) {
        _miot.Service.scene.triggerTemplatesForQualified(did).then(function (res) {}).catch(function (err) {});
      }
    }, {
      key: "ifScenesExistWithIdentify",
      value: function ifScenesExistWithIdentify(identify, triggleID, actionID) {
        return new Promise(function (resolve, reject) {
          _LHMiServer.default.LoadSceneList(_miot.Device.deviceID, 22, [], function (sceneList) {
            var targetList = [];

            if (sceneList.length > 0) {
              sceneList.forEach(function (scene) {
                if (scene.identify === identify) {
                  var isTriggerDid = false;
                  var isActionDid = false;
                  scene.setting.launch.attr.forEach(function (triggle) {
                    if (triggle.did === triggleID) {
                      isTriggerDid = true;
                    }
                  });
                  scene.setting.action_list.forEach(function (action) {
                    if (action.payload.did === actionID) {
                      isActionDid = true;
                    }
                  });

                  if (isTriggerDid && isActionDid) {
                    targetList.push(scene);
                  }
                }
              });
            }

            resolve(targetList);
          }, function (err) {
            reject(err);
          });
        });
      }
    }, {
      key: "sendAlarmDeviceToGW",
      value: function sendAlarmDeviceToGW(devicesList) {
        if (_LHDeviceModel.default.JudgeHomeKitGwDevice(_miot.Device.model)) {
          var away = [];
          var home = [];
          var sleep = [];

          for (var index = 0; index < devicesList.length; index += 1) {
            var singleList = devicesList[index];

            if (singleList.length === 2) {
              var canControlOriginData = singleList[0];

              for (var i = 0, len = canControlOriginData.length; i < len; i += 1) {
                var device = canControlOriginData[i];

                if (device.isAdded && _LHDeviceModel.default.JudgeHomeKitTriggleDevice(device.model)) {
                  if (index === _LHGuardTypeMode.default.getHomeGuardType()) {
                    home.push(device.did);
                  } else if (index === _LHGuardTypeMode.default.getAwayGuardType()) {
                    away.push(device.did);
                  } else if (index === _LHGuardTypeMode.default.getSleepGuardType()) {
                    sleep.push(device.did);
                  }
                }
              }
            }
          }

          var param = {};
          param.home = home;
          param.away = away;
          param.sleep = sleep;

          _LHMiServer.default.sendKeyFramePayLoad(param, 'arming_devlist');
        }
      }
    }]);
    return LHIFTTTManager;
  }();

  exports.default = LHIFTTTManager;
  LHIFTTTManager.AlarmIFTTTTypeIFThen = AlarmIFTTTTypeIFThen;
  LHIFTTTManager.AlarmIFTTTTypeWhenIFThen = AlarmIFTTTTypeWhenIFThen;

  LHIFTTTManager.changeToBaseGuard = function () {
    if (_LHDeviceModel.default.JudgeFixBaseGuardGwDevice(_miot.Device.model)) {
      _miot.Service.spec.getPropertiesValue([{
        did: _miot.Device.deviceID,
        siid: 3,
        piid: 1
      }]).then(function (res) {
        if (res && res.length > 0 && res[0].code === 0) {
          _miot.Service.spec.setPropertiesValue([{
            did: _miot.Device.deviceID,
            siid: 3,
            piid: 1,
            value: 1
          }]).then(function () {
            _miot.Service.spec.setPropertiesValue([{
              did: _miot.Device.deviceID,
              siid: 3,
              piid: 1,
              value: 0
            }]);
          });
        }
      });
    }
  };
},10190,[14305,14320,14323,10074,10193,10220,10013,10202,10196,10208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHDeviceTriggleModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHDeviceTrigglesConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHSensorSetIFTTTConstant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var kIFTTTKeyClick = 'click';
  var kIFTTTKeyDoubleClick = 'double_click';
  var kIFTTTKeyLongClickPress = 'long_click_press';
  var kIFTTTKeyShake = 'shake';
  var kIFTTTKeyVibrate = 'vibrate';
  var kIFTTTKeyFreefall = 'free_fall';
  var kIFTTTKeyTilt = 'tilt';
  var kIFTTTKeyMotion = 'motion';
  var kIFTTTKeyOpen = 'open';
  var kIFTTTKeyClose = 'close';
  var kIFTTTKeyClickCh0 = 'click_ch0';
  var kIFTTTKeyDoubleClickCh0 = 'double_click_ch0';
  var kIFTTTKeyLongClickCh0 = 'long_click_ch0';

  var LHAlarmIFTTTAdapter = function () {
    function LHAlarmIFTTTAdapter() {
      (0, _classCallCheck2.default)(this, LHAlarmIFTTTAdapter);
    }

    (0, _createClass2.default)(LHAlarmIFTTTAdapter, null, [{
      key: "isSupportIFTTT",
      value: function isSupportIFTTT(model, iftttType, sceneList) {
        if (_miot.Device.model === _LHDeviceModel.default.DeviceModelMijiaMultiModeHub() || _LHDeviceModel.default.isOtherMultiModeHub(_miot.Device.model)) {
          if (iftttType === _LHGuardTypeMode.default.getBaseGuardType()) {
            if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.AqaraSwitchT1() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2() || model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2() || model === _LHDeviceModel.default.DeviceModelAqaraMotionT1() || model === _LHDeviceModel.default.DeviceModelAqaraHighPrecisionMotionT1() || model === _LHDeviceModel.default.DeviceModelMotionBmgl01() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelAqaraMagnetT1() || model === _LHDeviceModel.default.DeviceModelMagnetISA() || model === _LHDeviceModel.default.DeviceModelVibrationAq1() || model === _LHDeviceModel.default.DeviceModelVibrationAgl01() || model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1() || model === _LHDeviceModel.default.DeviceModelSensor86SWV1() || model === _LHDeviceModel.default.DeviceModelSensor86ACN01() || model === _LHDeviceModel.default.AqaraSwitchRemoteT1() || model === _LHDeviceModel.default.AqaraSwitchRemoteDoubleT1() || model === _LHDeviceModel.default.DeviceModelSensorNatgasV1() || model === _LHDeviceModel.default.DeviceModelSensorSmokeV1() || model === _LHDeviceModel.default.DeviceModelSensorWleakAq1() || model === _LHDeviceModel.default.AqaraWleakT1() || model === _LHDeviceModel.default.DeviceModelMijiaBleFlood() || model === _LHDeviceModel.default.DeviceModelMijiaBleSensorSmoke()) {
              return true;
            }
          } else if (iftttType === _LHGuardTypeMode.default.getHomeGuardType() || iftttType === _LHGuardTypeMode.default.getAwayGuardType() || iftttType === _LHGuardTypeMode.default.getSleepGuardType()) {
            if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.AqaraSwitchT1() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2() || model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2() || model === _LHDeviceModel.default.DeviceModelAqaraMotionT1() || model === _LHDeviceModel.default.DeviceModelAqaraHighPrecisionMotionT1() || model === _LHDeviceModel.default.DeviceModelMotionBmgl01() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelAqaraMagnetT1() || model === _LHDeviceModel.default.DeviceModelMagnetISA() || model === _LHDeviceModel.default.DeviceModelVibrationAq1() || model === _LHDeviceModel.default.DeviceModelVibrationAgl01() || model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1() || model === _LHDeviceModel.default.DeviceModelSensor86SWV1() || model === _LHDeviceModel.default.DeviceModelSensor86ACN01() || model === _LHDeviceModel.default.AqaraSwitchRemoteT1() || model === _LHDeviceModel.default.AqaraSwitchRemoteDoubleT1() || this.checkHistoryWleak(model, sceneList)) {
                return true;
              }
          }
        } else if (_LHDeviceModel.default.isProfileGateway(_miot.Device.model)) {
          if (iftttType === _LHGuardTypeMode.default.getNormalGuardType()) {
            return model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2() || model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelVibrationAq1() || model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1();
          } else if (iftttType === _LHGuardTypeMode.default.getDoorbellType() || iftttType === _LHGuardTypeMode.default.getCloseAlarmClockType()) {
            return model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2() || model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2();
          } else {
            return false;
          }
        } else {
          return false;
        }

        return false;
      }
    }, {
      key: "checkHistoryWleak",
      value: function checkHistoryWleak(model, sceneList) {
        for (var i = 0, len = sceneList.length; i < len; i += 1) {
          if (model === _LHDeviceModel.default.DeviceModelSensorWleakAq1() || model === _LHDeviceModel.default.AqaraWleakT1()) {
            if (sceneList[i].identify === _LHGuardTypeMode.default.homeIdentify || sceneList[i].identify === _LHGuardTypeMode.default.awayIdentify || sceneList[i].identify === _LHGuardTypeMode.default.sleepIdentify) {
              if (sceneList[i].setting && sceneList[i].setting.trigger && sceneList[i].setting.trigger.length && sceneList[i].setting.trigger[0].key.indexOf(model) > -1) {
                return true;
              }
            }
          }
        }

        return false;
      }
    }, {
      key: "isSceneNeedToShow",
      value: function isSceneNeedToShow(identify, guardType) {
        var guardMode = _LHGuardTypeMode.default.getGuardModelWithGuardType(guardType);

        if (identify === guardMode.identify) {
          return true;
        } else if (guardType === _LHGuardTypeMode.default.getBaseGuardType()) {
          if (identify === 'lm_scene_5_1' || identify === 'lm_scene_5_2' || identify === 'lm_scene_5_3') {
            return true;
          }
        } else if (guardType === _LHGuardTypeMode.default.getNormalGuardType()) {
          if (identify === 'lm_scene_1_1' || identify === 'lm_scene_1_2' || identify === 'lm_scene_1_3' || identify === 'lm_scene_1_4' || identify === 'lm_scene_1_5' || identify === 'lm_scene_1_6' || identify === 'lm_scene_1_7') {
            return true;
          }
        } else if (guardType === _LHGuardTypeMode.default.getDoorbellType()) {
          if (identify === 'lm_scene_3_1' || identify === 'lm_scene_3_2' || identify === 'lm_scene_3_3') {
            return true;
          }
        } else if (guardType === _LHGuardTypeMode.default.getCloseAlarmClockType()) {
          if (identify === 'lm_scene_4_1' || identify === 'lm_scene_4_2' || identify === 'lm_scene_4_3') {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "getAlarmTriggleDeviceModel",
      value: function getAlarmTriggleDeviceModel(subDevice) {
        var iconURL = subDevice.iconURL,
            name = subDevice.name,
            isOnline = subDevice.isOnline,
            did = subDevice.deviceID,
            model = subDevice.model;
        var triggleModel = this.getDeviceTriggleModel(subDevice);
        return {
          model: model,
          iconURL: iconURL,
          title: triggleModel.triggleName,
          isOnline: isOnline,
          subTitle: name,
          triggleModel: triggleModel,
          did: did,
          isAdded: false
        };
      }
    }, {
      key: "getAlarmTriggleDeviceCantControlModel",
      value: function getAlarmTriggleDeviceCantControlModel(subDevice) {
        var addedGuardList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var currentGuardType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
        var sceneList = arguments.length > 3 ? arguments[3] : undefined;
        var newAddedGuardList = addedGuardList;

        for (var i = 0; i < newAddedGuardList.length - 1; i += 1) {
          for (var j = 0; j < newAddedGuardList.length - i - 1; j += 1) {
            if (newAddedGuardList[j] > newAddedGuardList[j + 1]) {
              var swap = newAddedGuardList[j];
              newAddedGuardList[j] = newAddedGuardList[j + 1];
              newAddedGuardList[j + 1] = swap;
            }
          }
        }

        var iconURL = subDevice.iconURL,
            name = subDevice.name,
            isOnline = subDevice.isOnline,
            did = subDevice.deviceID,
            model = subDevice.model;
        var triggleModel = this.getDeviceTriggleModel(subDevice);
        var subTitleDescribe = '';

        if (currentGuardType === _LHGuardTypeMode.default.getBaseGuardType()) {
          for (var index = 0; index < newAddedGuardList.length; index += 1) {
            var element = newAddedGuardList[index];
            subTitleDescribe += _LHGuardTypeMode.default.getGuardModelWithGuardType(element).guardShortName;

            if (index !== newAddedGuardList.length - 1) {
              subTitleDescribe += '、';
            }
          }

          subTitleDescribe = _LHCommonLocalizableString.default.common_comboHub_triggle_device_opened_guard.replace('{XX}', subTitleDescribe);
        } else {
          if (this.isSupportIFTTT(model, currentGuardType, sceneList) === false) {
            subTitleDescribe = _LHCommonLocalizableString.default.common_comboHub_triggle_device_only_open_basic;
          } else {
            subTitleDescribe = _LHCommonLocalizableString.default.common_comboHub_triggle_device_opened_basic;
          }
        }

        return {
          model: model,
          iconURL: iconURL,
          title: triggleModel.triggleName,
          isOnline: isOnline,
          subTitle: name + ' ' + subTitleDescribe,
          did: did
        };
      }
    }, {
      key: "getAlarmTriggleDeviceCellTitle",
      value: function getAlarmTriggleDeviceCellTitle(model, triggleName) {
        if (model === _LHDeviceModel.default.DeviceModelSensorNatgasV1() || model === _LHDeviceModel.default.DeviceModelSensorSmokeV1() || model === _LHDeviceModel.default.DeviceModelMijiaBleSensorSmoke() || model === _LHDeviceModel.default.DeviceModelSensorWleakAq1()) {
          return triggleName;
        } else {
          return triggleName + ' ' + _LHCommonLocalizableString.default.common_comboHub_triggle_device_alert;
        }
      }
    }, {
      key: "getLinuxGatewayAlarmIFTTTModel",
      value: function getLinuxGatewayAlarmIFTTTModel(subDevice) {
        var triggleModel = this.getDeviceTriggleModel(subDevice);
        var name = subDevice.name,
            isOnline = subDevice.isOnline,
            did = subDevice.deviceID,
            model = subDevice.model;
        var onLineString = isOnline ? '' : _LHCommonLocalizableString.default.common_ifttt_device_offline;
        return {
          title: triggleModel.triggleName,
          isOnline: isOnline,
          subTitle: name + onLineString,
          triggleModel: triggleModel,
          did: did,
          isAddedInLinuxGateway: false,
          sceneID: '',
          model: model
        };
      }
    }, {
      key: "getDeviceTriggleModel",
      value: function getDeviceTriggleModel(device) {
        if (_miot.Device.model === _LHDeviceModel.default.DeviceModelMijiaMultiModeHub() || _LHDeviceModel.default.isOtherMultiModeHub(_miot.Device.model)) {
          return this.getMijiaMultiModeGatewayTriggleModelWithDevice(device);
        } else if (_LHDeviceModel.default.isProfileGateway(_miot.Device.model)) {
          return this.getNormalGatewayTriggleModelWithDevice(device);
        }

        return null;
      }
    }, {
      key: "getMijiaMultiModeGatewayTriggleModelWithDevice",
      value: function getMijiaMultiModeGatewayTriggleModelWithDevice(device) {
        if (device === null || device === undefined) {
          return null;
        }

        var model = device.model;
        var triggles;
        var triggleName = '';

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '270', kIFTTTKeyClick, _LHCommonLocalizableString.default.ifttt_triggle_single_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '271', kIFTTTKeyDoubleClick, _LHCommonLocalizableString.default.ifttt_triggle_double_press)];
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '688', kIFTTTKeyClick, _LHCommonLocalizableString.default.ifttt_triggle_single_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '689', kIFTTTKeyDoubleClick, _LHCommonLocalizableString.default.ifttt_triggle_double_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '690', kIFTTTKeyLongClickPress, _LHCommonLocalizableString.default.ifttt_triggle_long_press)];
        } else if (model === _LHDeviceModel.default.AqaraSwitchT1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraSwitchT1());
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '406', kIFTTTKeyClick, _LHCommonLocalizableString.default.ifttt_triggle_single_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '407', kIFTTTKeyDoubleClick, _LHCommonLocalizableString.default.ifttt_triggle_double_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '408', kIFTTTKeyLongClickPress, _LHCommonLocalizableString.default.ifttt_triggle_long_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '409', kIFTTTKeyShake, _LHCommonLocalizableString.default.ifttt_triggle_shake)];
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '18', kIFTTTKeyClick, _LHCommonLocalizableString.default.ifttt_triggle_single_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '19', kIFTTTKeyDoubleClick, _LHCommonLocalizableString.default.ifttt_triggle_double_press), _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, '58', kIFTTTKeyLongClickPress, _LHCommonLocalizableString.default.ifttt_triggle_long_press)];
        } else if (model === _LHDeviceModel.default.DeviceModelVibrationAq1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_vibration;
          triggles = [_LHDeviceTriggleModel.default.getVibrationTriggleModel(device, '199', kIFTTTKeyVibrate, _LHCommonLocalizableString.default.ifttt_triggle_detect_vibration), _LHDeviceTriggleModel.default.getVibrationTriggleModel(device, '277', kIFTTTKeyFreefall, _LHCommonLocalizableString.default.ifttt_triggle_detect_fall), _LHDeviceTriggleModel.default.getVibrationTriggleModel(device, '498', kIFTTTKeyTilt, _LHCommonLocalizableString.default.ifttt_triggle_detect_tilting)];
        } else if (model === _LHDeviceModel.default.DeviceModelVibrationAgl01()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_vibration;
          triggles = [_LHDeviceTriggleModel.default.getVibrationT1TriggleModel(device, '4634', _LHCommonLocalizableString.default.mi_common_triggle_vibration_moved), _LHDeviceTriggleModel.default.getVibrationT1TriggleModel(device, '4633', _LHCommonLocalizableString.default.mi_common_triggle_vibration_three_press)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_motion;
          triggles = [_LHDeviceTriggleModel.default.getSensorMotionTriggleModel(device, '264', kIFTTTKeyMotion, _LHCommonLocalizableString.default.ifttt_triggle_someone_moved)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionV2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_motion;
          triggles = [_LHDeviceTriggleModel.default.getSensorMotionTriggleModel(device, '23', kIFTTTKeyMotion, _LHCommonLocalizableString.default.ifttt_triggle_someone_moved)];
        } else if (model === _LHDeviceModel.default.DeviceModelAqaraMotionT1()) {
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraMotionT1());
        } else if (model === _LHDeviceModel.default.DeviceModelAqaraHighPrecisionMotionT1()) {
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraHighPrecisionMotionT1());
        } else if (model === _LHDeviceModel.default.DeviceModelMotionBmgl01()) {
          triggles = [_LHDeviceTriggleModel.default.getSensorMotion2TriggleModel(device, '5572', _LHCommonLocalizableString.default.ifttt_triggle_someone_moved)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetV2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet;
          triggles = [_LHDeviceTriggleModel.default.getSensorMagnetTriggleModel(device, '20', kIFTTTKeyOpen, triggleName), _LHDeviceTriggleModel.default.getSensorMagnetTriggleModel(device, '21', kIFTTTKeyClose, triggleName)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet;
          triggles = [_LHDeviceTriggleModel.default.getSensorMagnetTriggleModel(device, '272', kIFTTTKeyOpen, triggleName), _LHDeviceTriggleModel.default.getSensorMagnetTriggleModel(device, '273', kIFTTTKeyClose, triggleName)];
        } else if (model === _LHDeviceModel.default.DeviceModelAqaraMagnetT1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet;
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraMagnetT1());
        } else if (model === _LHDeviceModel.default.DeviceModelMagnetISA()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet;
          triggles = [_LHDeviceTriggleModel.default.getSensorMagnetISATriggleModel(device, '5447', 0), _LHDeviceTriggleModel.default.getSensorMagnetISATriggleModel(device, '5448', 1)];
        } else if (model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_cube;
          triggles = [_LHDeviceTriggleModel.default.getSensorCubeTriggleModel(device, _LHCommonLocalizableString.default.ifttt_triggle_moved_afteronemin)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorWleakAq1()) {
          triggles = [_LHDeviceTriggleModel.default.getSensorWleakTriggleModel(device, _LHCommonLocalizableString.default.ifttt_triggle_flood_alert)];
        } else if (model === _LHDeviceModel.default.AqaraWleakT1()) {
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraWleakT1());
        } else if (model === _LHDeviceModel.default.DeviceModelMijiaBleFlood()) {
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetMijiaBleFlood());
        } else if (model === _LHDeviceModel.default.DeviceModelMijiaBleSensorSmoke()) {
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetMijiaBleSensorSmoke());
        } else if (model === _LHDeviceModel.default.DeviceModelSensorSmokeV1()) {
          triggles = [_LHDeviceTriggleModel.default.getSensorSmokeTriggleModel(device, _LHCommonLocalizableString.default.ifttt_triggle_fire_alert)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensorNatgasV1()) {
          triggles = [_LHDeviceTriggleModel.default.getSensorNatgasTriggleModel(device, _LHCommonLocalizableString.default.ifttt_triggle_gas_leakage_alert)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensor86SWV1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensor86SWTriggleModel(device, '83', kIFTTTKeyClickCh0, _LHCommonLocalizableString.default.ifttt_triggle_single_press)];
        } else if (model === _LHDeviceModel.default.DeviceModelSensor86ACN01()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = [_LHDeviceTriggleModel.default.getSensor86SWTriggleModel(device, '691', kIFTTTKeyClickCh0, _LHCommonLocalizableString.default.ifttt_triggle_single_press), _LHDeviceTriggleModel.default.getSensor86SWTriggleModel(device, '692', kIFTTTKeyDoubleClickCh0, _LHCommonLocalizableString.default.ifttt_triggle_double_press), _LHDeviceTriggleModel.default.getSensor86SWTriggleModel(device, '693', kIFTTTKeyLongClickCh0, _LHCommonLocalizableString.default.ifttt_triggle_long_press)];
        } else if (model === _LHDeviceModel.default.AqaraSwitchRemoteT1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraSwitchRemoteT1());
        } else if (model === _LHDeviceModel.default.AqaraSwitchRemoteDoubleT1()) {
          triggleName = _LHCommonLocalizableString.default.common_ifttt_triggleName_switch;
          triggles = _LHDeviceTriggleModel.default.getDeviceTriggles(device, _LHDeviceTrigglesConfig.default.GetAqaraSwitchRemoteDoubleT1());
        }

        return {
          triggle: triggles,
          triggleName: triggleName === '' ? this.getTriggleNameWithTriggles(triggles) : triggleName
        };
      }
    }, {
      key: "getIFTTTPushString",
      value: function getIFTTTPushString(model, deviceName, guardType) {
        var _LHGuardTypeMode$getG = _LHGuardTypeMode.default.getGuardModelWithGuardType(guardType),
            guardName = _LHGuardTypeMode$getG.guardName;

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.AqaraSwitchT1() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2() || model === _LHDeviceModel.default.DeviceModelSensor86SWV1() || model === _LHDeviceModel.default.DeviceModelSensor86ACN01() || model === _LHDeviceModel.default.AqaraSwitchRemoteT1() || model === _LHDeviceModel.default.AqaraSwitchRemoteDoubleT1() || model === _LHDeviceModel.default.DeviceModelVibrationAq1() || model === _LHDeviceModel.default.DeviceModelVibrationAgl01()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_1.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2() || model === _LHDeviceModel.default.DeviceModelAqaraMotionT1() || model === _LHDeviceModel.default.DeviceModelAqaraHighPrecisionMotionT1() || model === _LHDeviceModel.default.DeviceModelMotionBmgl01()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_2.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelAqaraMagnetT1() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelMagnetISA()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_magnet_with_deviceName.replace('d%', guardName).replace('s%', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_4.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelSensorWleakAq1() || model === _LHDeviceModel.default.AqaraWleakT1() || model === _LHDeviceModel.default.DeviceModelMijiaBleFlood()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_5.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelSensorNatgasV1()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_6.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else if (model === _LHDeviceModel.default.DeviceModelSensorSmokeV1() || model === _LHDeviceModel.default.DeviceModelMijiaBleSensorSmoke()) {
          return _LHCommonLocalizableString.default.ifttt_push_title_triggle_alert_7.replace('{XX}', guardName).replace('{YY}', deviceName);
        } else {
          return 'unknown';
        }
      }
    }, {
      key: "getNormalGatewayTriggleModelWithDevice",
      value: function getNormalGatewayTriggleModelWithDevice(device) {
        if (device === null || device === undefined) {
          return null;
        }

        var model = device.model;
        var triggles;
        var pushString;

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2()) {
          triggles = _LHDeviceTriggleModel.default.getSensorSwitchTriggleModel(device, _LHSensorSetIFTTTConstant.default.senceConditionIdJSON[model] + '', kIFTTTKeyClick, _LHCommonLocalizableString.default.ifttt_triggle_single_press);
          pushString = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_3;
        } else if (model === _LHDeviceModel.default.DeviceModelVibrationAq1()) {
          triggles = _LHDeviceTriggleModel.default.getVibrationTriggleModel(device, _LHSensorSetIFTTTConstant.default.senceConditionIdJSON[model] + '', kIFTTTKeyVibrate, _LHCommonLocalizableString.default.ifttt_triggle_detect_vibration);
          pushString = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_5;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2()) {
          triggles = _LHDeviceTriggleModel.default.getSensorMotionTriggleModel(device, _LHSensorSetIFTTTConstant.default.senceConditionIdJSON[model] + '', kIFTTTKeyMotion, _LHCommonLocalizableString.default.ifttt_triggle_someone_moved);
          pushString = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_1;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2()) {
          triggles = _LHDeviceTriggleModel.default.getSensorMagnetTriggleModel(device, _LHSensorSetIFTTTConstant.default.senceConditionIdJSON[model] + '', kIFTTTKeyOpen, _LHCommonLocalizableString.default.ifttt_triggle_windoor_open);
          pushString = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_2;
        } else if (model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1()) {
          triggles = _LHDeviceTriggleModel.default.getSensorCubeTriggleModel(device, _LHCommonLocalizableString.default.ifttt_triggle_moved_afteronemin);
          pushString = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_4;
        }

        return {
          triggle: triggles,
          triggleName: this.getTriggleNameWithTriggles(triggles),
          pushString: pushString
        };
      }
    }, {
      key: "getNormalGatewayDoorBellIFTTTName",
      value: function getNormalGatewayDoorBellIFTTTName(device) {
        if (device === null || device === undefined) {
          return null;
        }

        var model = device.model;
        var name = 'unknown';

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_1;
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_1;
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_1;
        } else if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_1;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_3;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_3;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_2;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_3_2;
        }

        return name;
      }
    }, {
      key: "getNormalGatewayAlarmIFTTTName",
      value: function getNormalGatewayAlarmIFTTTName(device) {
        if (device === null || device === undefined) {
          return null;
        }

        var model = device.model;
        var name = 'unknown';

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.AqaraSwitchT1() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_3;
        } else if (model === _LHDeviceModel.default.DeviceModelVibrationAq1()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_5;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_1;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetV2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_2;
        } else if (model === _LHDeviceModel.default.DeviceModelCubeAq1() || model === _LHDeviceModel.default.DeviceModelCubeMijiaV1()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_1_4;
        }

        return name;
      }
    }, {
      key: "getNormalGatewayClockIFTTTName",
      value: function getNormalGatewayClockIFTTTName(device) {
        if (device === null || device === undefined) {
          return null;
        }

        var model = device.model;
        var name = 'unknown';

        if (model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq2() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchCN01() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchAq3() || model === _LHDeviceModel.default.DeviceModelWirelessSwitchV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_4_3;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMotionAq2() || model === _LHDeviceModel.default.DeviceModelSensorMotionV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_4_1;
        } else if (model === _LHDeviceModel.default.DeviceModelSensorMagnetAq2() || model === _LHDeviceModel.default.DeviceModelSensorMagnetV2()) {
          name = _LHCommonLocalizableString.default.common_scene_name_lm_scene_4_2;
        }

        return name;
      }
    }, {
      key: "getLeakAlarmIFTTTName",
      value: function getLeakAlarmIFTTTName(type) {
        if (type === 1) {
          return _LHCommonLocalizableString.default.common_scene_name_lm_scene_5_1;
        } else if (type === 2) {
          return _LHCommonLocalizableString.default.common_scene_name_lm_scene_5_2;
        } else if (type === 3) {
          return _LHCommonLocalizableString.default.common_scene_name_lm_scene_5_3;
        }

        return null;
      }
    }, {
      key: "getTriggleNameWithTriggles",
      value: function getTriggleNameWithTriggles(triggles) {
        if (triggles === null || triggles === undefined) {
          return '';
        }

        if (!Array.isArray(triggles)) {
          return triggles.name;
        }

        var name = '';

        for (var i = 0, triggleLen = triggles.length; i < triggleLen; i += 1) {
          var triggle = triggles[i].name;

          if (name === '') {
            name = triggle;
          } else {
            name = name + '/' + triggle;
          }
        }

        return name;
      }
    }]);
    return LHAlarmIFTTTAdapter;
  }();

  exports.default = LHAlarmIFTTTAdapter;
},10193,[14305,14320,14323,10074,10034,10196,10202,10208,10214,10217]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDeviceModel.default;
  exports.default = _default;
},10196,[14305,10199]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var LHDeviceModel = function () {
    function LHDeviceModel() {
      (0, _classCallCheck2.default)(this, LHDeviceModel);
    }

    (0, _createClass2.default)(LHDeviceModel, null, [{
      key: "isSupportBleDevices",
      value: function isSupportBleDevices() {
        return [this.DeviceModelMijiaBleFlood(), this.DeviceModelMijiaBleSensorSmoke(), this.DeviceModelMotionBmgl01(), this.DeviceModelMagnetISA()];
      }
    }, {
      key: "DeviceModelVibrationAgl01",
      value: function DeviceModelVibrationAgl01() {
        return 'lumi.vibration.agl01';
      }
    }, {
      key: "DeviceModelMotionBmgl01",
      value: function DeviceModelMotionBmgl01() {
        return 'lumi.motion.bmgl01';
      }
    }, {
      key: "DeviceModelMijiaBleFlood",
      value: function DeviceModelMijiaBleFlood() {
        return 'lumi.flood.bmcn01';
      }
    }, {
      key: "DeviceModelMijiaBleSensorSmoke",
      value: function DeviceModelMijiaBleSensorSmoke() {
        return 'lumi.sensor_smoke.mcn02';
      }
    }, {
      key: "AqaraHubM1S",
      value: function AqaraHubM1S() {
        return 'lumi.gateway.acn01';
      }
    }, {
      key: "AqaraHubM1SEU",
      value: function AqaraHubM1SEU() {
        return 'lumi.gateway.aeu01';
      }
    }, {
      key: "DeviceModelMijiaMultiModeHub",
      value: function DeviceModelMijiaMultiModeHub() {
        return 'lumi.gateway.mgl03';
      }
    }, {
      key: "DeviceModelAqaraHubLmUK01",
      value: function DeviceModelAqaraHubLmUK01() {
        return 'lumi.gateway.lmuk01';
      }
    }, {
      key: "DeviceModelAqaraHubMiEU01",
      value: function DeviceModelAqaraHubMiEU01() {
        return 'lumi.gateway.mieu01';
      }
    }, {
      key: "DeviceModelAqaraHubMiTW01",
      value: function DeviceModelAqaraHubMiTW01() {
        return 'lumi.gateway.mitw01';
      }
    }, {
      key: "DeviceModelAqaraHubMiHK01",
      value: function DeviceModelAqaraHubMiHK01() {
        return 'lumi.gateway.mihk01';
      }
    }, {
      key: "DeviceModelAqaraHubAqHM01",
      value: function DeviceModelAqaraHubAqHM01() {
        return 'lumi.gateway.aqhm01';
      }
    }, {
      key: "DeviceModelAqaraHubAqHM02",
      value: function DeviceModelAqaraHubAqHM02() {
        return 'lumi.gateway.aqhm02';
      }
    }, {
      key: "DeviceModelAqaraHubAqHM03",
      value: function DeviceModelAqaraHubAqHM03() {
        return 'lumi.gateway.aqhm03';
      }
    }, {
      key: "DeviceModelGatewayV1",
      value: function DeviceModelGatewayV1() {
        return 'lumi.gateway.v1';
      }
    }, {
      key: "DeviceModelGatewayV2",
      value: function DeviceModelGatewayV2() {
        return 'lumi.gateway.v2';
      }
    }, {
      key: "DeviceModelGatewayV3",
      value: function DeviceModelGatewayV3() {
        return 'lumi.gateway.v3';
      }
    }, {
      key: "DeviceAcpartnerV1",
      value: function DeviceAcpartnerV1() {
        return 'lumi.acpartner.v1';
      }
    }, {
      key: "DeviceAcpartnerV2",
      value: function DeviceAcpartnerV2() {
        return 'lumi.acpartner.v2';
      }
    }, {
      key: "DeviceAcpartnerV3",
      value: function DeviceAcpartnerV3() {
        return 'lumi.acpartner.v3';
      }
    }, {
      key: "DeviceAcpartnerACN05",
      value: function DeviceAcpartnerACN05() {
        return 'lumi.aircondition.acn05';
      }
    }, {
      key: "DeviceAcpartnerMCN02",
      value: function DeviceAcpartnerMCN02() {
        return 'lumi.acpartner.mcn02';
      }
    }, {
      key: "DeviceAcpartnerMCN04",
      value: function DeviceAcpartnerMCN04() {
        return 'lumi.acpartner.mcn04';
      }
    }, {
      key: "DeviceCameraAq1",
      value: function DeviceCameraAq1() {
        return 'lumi.camera.aq1';
      }
    }, {
      key: "DeviceCameraGwAq1",
      value: function DeviceCameraGwAq1() {
        return 'lumi.camera.gwagl01';
      }
    }, {
      key: "DeviceModelWirelessSwitchAq2",
      value: function DeviceModelWirelessSwitchAq2() {
        return 'lumi.sensor_switch.aq2';
      }
    }, {
      key: "DeviceModelWirelessSwitchCN01",
      value: function DeviceModelWirelessSwitchCN01() {
        return 'lumi.remote.b1acn01';
      }
    }, {
      key: "AqaraSwitchT1",
      value: function AqaraSwitchT1() {
        return 'lumi.remote.b1acn02';
      }
    }, {
      key: "DeviceModelWirelessSwitchAq3",
      value: function DeviceModelWirelessSwitchAq3() {
        return 'lumi.sensor_switch.aq3';
      }
    }, {
      key: "DeviceModelWirelessSwitchV2",
      value: function DeviceModelWirelessSwitchV2() {
        return 'lumi.sensor_switch.v2';
      }
    }, {
      key: "DeviceModelSensorMotionAq2",
      value: function DeviceModelSensorMotionAq2() {
        return 'lumi.sensor_motion.aq2';
      }
    }, {
      key: "DeviceModelSensorMotionV2",
      value: function DeviceModelSensorMotionV2() {
        return 'lumi.sensor_motion.v2';
      }
    }, {
      key: "DeviceModelAqaraMotionT1",
      value: function DeviceModelAqaraMotionT1() {
        return 'lumi.motion.agl02';
      }
    }, {
      key: "DeviceModelAqaraHighPrecisionMotionT1",
      value: function DeviceModelAqaraHighPrecisionMotionT1() {
        return 'lumi.motion.agl04';
      }
    }, {
      key: "DeviceModelSensorMagnetAq2",
      value: function DeviceModelSensorMagnetAq2() {
        return 'lumi.sensor_magnet.aq2';
      }
    }, {
      key: "DeviceModelSensorMagnetV2",
      value: function DeviceModelSensorMagnetV2() {
        return 'lumi.sensor_magnet.v2';
      }
    }, {
      key: "DeviceModelAqaraMagnetT1",
      value: function DeviceModelAqaraMagnetT1() {
        return 'lumi.magnet.agl02';
      }
    }, {
      key: "DeviceModelMagnetISA",
      value: function DeviceModelMagnetISA() {
        return 'isa.magnet.dw2hl';
      }
    }, {
      key: "DeviceModelVibrationAq1",
      value: function DeviceModelVibrationAq1() {
        return 'lumi.vibration.aq1';
      }
    }, {
      key: "DeviceModelCubeAq1",
      value: function DeviceModelCubeAq1() {
        return 'lumi.sensor_cube.aqgl01';
      }
    }, {
      key: "DeviceModelCubeMijiaV1",
      value: function DeviceModelCubeMijiaV1() {
        return 'lumi.sensor_cube.v1';
      }
    }, {
      key: "DeviceModelSensorHTV1",
      value: function DeviceModelSensorHTV1() {
        return 'lumi.sensor_ht.v1';
      }
    }, {
      key: "DeviceModelWeatherV1",
      value: function DeviceModelWeatherV1() {
        return 'lumi.weather.v1';
      }
    }, {
      key: "DeviceModelSensorWleakAq1",
      value: function DeviceModelSensorWleakAq1() {
        return 'lumi.sensor_wleak.aq1';
      }
    }, {
      key: "AqaraWleakT1",
      value: function AqaraWleakT1() {
        return 'lumi.flood.agl02';
      }
    }, {
      key: "DeviceModelSensor86SWV1",
      value: function DeviceModelSensor86SWV1() {
        return 'lumi.sensor_86sw1.v1';
      }
    }, {
      key: "DeviceModelSensor86ACN01",
      value: function DeviceModelSensor86ACN01() {
        return 'lumi.remote.b186acn01';
      }
    }, {
      key: "AqaraSwitchRemoteT1",
      value: function AqaraSwitchRemoteT1() {
        return 'lumi.remote.b186acn03';
      }
    }, {
      key: "AqaraSwitchRemoteDoubleT1",
      value: function AqaraSwitchRemoteDoubleT1() {
        return 'lumi.remote.b286acn03';
      }
    }, {
      key: "DeviceModelSensorNatgasV1",
      value: function DeviceModelSensorNatgasV1() {
        return 'lumi.sensor_natgas.v1';
      }
    }, {
      key: "DeviceModelSensorSmokeV1",
      value: function DeviceModelSensorSmokeV1() {
        return 'lumi.sensor_smoke.v1';
      }
    }, {
      key: "DeviceModelPlugUs",
      value: function DeviceModelPlugUs() {
        return 'lumi.plug.maus01';
      }
    }, {
      key: "isProfileGateway",
      value: function isProfileGateway() {
        var deviceModel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _miot.Device.model;

        if (!deviceModel) {
          return false;
        }

        var data = [];
        data.push(this.DeviceAcpartnerV1());
        data.push(this.DeviceAcpartnerV2());
        data.push(this.DeviceAcpartnerV3());
        data.push(this.DeviceModelGatewayV1());
        data.push(this.DeviceModelGatewayV2());
        data.push(this.DeviceModelGatewayV3());
        data.push(this.DeviceModelAqaraHubAqHM01());
        data.push(this.DeviceModelAqaraHubAqHM02());
        data.push(this.DeviceModelAqaraHubLmUK01());
        data.push(this.DeviceModelAqaraHubMiEU01());
        data.push(this.DeviceModelAqaraHubMiHK01());
        data.push(this.DeviceModelAqaraHubMiTW01());
        data.push(this.DeviceCameraAq1());
        data.push(this.DeviceCameraGwAq1());
        return data.indexOf(deviceModel) > -1;
      }
    }, {
      key: "isOtherMultiModeHub",
      value: function isOtherMultiModeHub(deviceModel) {
        var modes = [this.AqaraHubM1SEU(), this.AqaraHubM1S(), this.DeviceAcpartnerACN05()];
        return modes.indexOf(deviceModel) > -1;
      }
    }, {
      key: "isMotionDevice",
      value: function isMotionDevice(model) {
        var motionDevices = [this.DeviceModelSensorMotionV2(), this.DeviceModelSensorMotionAq2(), this.DeviceModelAqaraMotionT1(), this.DeviceModelAqaraHighPrecisionMotionT1()];
        return motionDevices.indexOf(model) > -1;
      }
    }, {
      key: "isBleGateway",
      value: function isBleGateway() {
        var model = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _miot.Device.model;
        return model === LHDeviceModel.DeviceModelMijiaMultiModeHub();
      }
    }, {
      key: "isMijiaMultiModeHub",
      value: function isMijiaMultiModeHub() {
        var model = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _miot.Device.model;
        return model === LHDeviceModel.DeviceModelMijiaMultiModeHub();
      }
    }]);
    return LHDeviceModel;
  }();

  exports.default = LHDeviceModel;

  LHDeviceModel.JudgeAqaraHub = function () {
    var AqaraHub = ['lumi.gateway.aqhm01', 'lumi.gateway.aqhm02'];
    return AqaraHub.indexOf(_miot.Device.model) > -1;
  };

  LHDeviceModel.isAcPartner = function () {
    return _miot.Device.model.indexOf('acpartner') > -1 || _miot.Device.model.indexOf('aircondition') > -1;
  };

  LHDeviceModel.JudgeHomeKitTriggleDevice = function (model) {
    var HomeKitTriggleDevice = [LHDeviceModel.DeviceModelSensorMagnetV2(), LHDeviceModel.DeviceModelSensorMagnetAq2(), LHDeviceModel.DeviceModelAqaraMagnetT1(), LHDeviceModel.DeviceModelAqaraMotionT1(), LHDeviceModel.DeviceModelSensorMotionV2(), LHDeviceModel.DeviceModelSensorMotionAq2(), LHDeviceModel.DeviceModelAqaraHighPrecisionMotionT1()];
    return HomeKitTriggleDevice.indexOf(model) > -1;
  };

  LHDeviceModel.JudgeHomeKitGwDevice = function (model) {
    var HomeKitTriggleDevice = [LHDeviceModel.AqaraHubM1S()];
    return HomeKitTriggleDevice.indexOf(model) > -1;
  };

  LHDeviceModel.JudgeFixBaseGuardGwDevice = function (model) {
    var HomeKitTriggleDevice = [LHDeviceModel.AqaraHubM1S(), LHDeviceModel.AqaraHubM1SEU(), LHDeviceModel.DeviceAcpartnerACN05()];
    return HomeKitTriggleDevice.indexOf(model) > -1;
  };
},10199,[14305,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHGuardTypeMode.default;
  exports.default = _default;
},10202,[14305,10205]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var LHGuardTypeMode = function () {
    function LHGuardTypeMode() {
      (0, _classCallCheck2.default)(this, LHGuardTypeMode);
    }

    (0, _createClass2.default)(LHGuardTypeMode, null, [{
      key: "getBaseGuardType",
      value: function getBaseGuardType() {
        return 0;
      }
    }, {
      key: "getHomeGuardType",
      value: function getHomeGuardType() {
        return 1;
      }
    }, {
      key: "getAwayGuardType",
      value: function getAwayGuardType() {
        return 2;
      }
    }, {
      key: "getSleepGuardType",
      value: function getSleepGuardType() {
        return 3;
      }
    }, {
      key: "getNormalGuardType",
      value: function getNormalGuardType() {
        return 20;
      }
    }, {
      key: "getDoorbellType",
      value: function getDoorbellType() {
        return 21;
      }
    }, {
      key: "getCloseAlarmClockType",
      value: function getCloseAlarmClockType() {
        return 22;
      }
    }, {
      key: "getLinkageAlarmType",
      value: function getLinkageAlarmType() {
        return 23;
      }
    }, {
      key: "getNightLightIdentify",
      value: function getNightLightIdentify() {
        return 'lm_scene_toggle_smart_light';
      }
    }, {
      key: "getGuardTypeWithSceneIdentify",
      value: function getGuardTypeWithSceneIdentify(identify) {
        if (identify === this.baseIdentify) {
          return this.getBaseGuardType();
        } else if (identify === this.homeIdentify) {
          return this.getHomeGuardType();
        } else if (identify === this.awayIdentify) {
          return this.getAwayGuardType();
        } else if (identify === this.sleepIdentify) {
          return this.getSleepGuardType();
        } else {
          return null;
        }
      }
    }, {
      key: "getGuardModelWithGuardType",
      value: function getGuardModelWithGuardType(guardType) {
        var guardModel = {};

        switch (guardType) {
          case this.getBaseGuardType():
            guardModel = this.buildGuardModel(this.baseIdentify, '2135', _LHCommonLocalizableString.default.guard_type_basic, _LHCommonLocalizableString.default.mi_comboHub_mainPage_guard_base);
            break;

          case this.getHomeGuardType():
            guardModel = this.buildGuardModel(this.homeIdentify, '2132', _LHCommonLocalizableString.default.guard_type_home, _LHCommonLocalizableString.default.mi_comboHub_mainPage_guard_home);
            break;

          case this.getAwayGuardType():
            guardModel = this.buildGuardModel(this.awayIdentify, '2133', _LHCommonLocalizableString.default.guard_type_away, _LHCommonLocalizableString.default.mi_comboHub_mainPage_guard_away);
            break;

          case this.getSleepGuardType():
            guardModel = this.buildGuardModel(this.sleepIdentify, '2134', _LHCommonLocalizableString.default.guard_type_sleep, _LHCommonLocalizableString.default.mi_comboHub_mainPage_guard_sleep);
            break;

          case this.getNormalGuardType():
            guardModel = this.buildGuardModel('lm_scene_alarm');
            break;

          case this.getDoorbellType():
            guardModel = this.buildGuardModel('lm_scene_doorbell');
            break;

          case this.getCloseAlarmClockType():
            guardModel = this.buildGuardModel('lm_scene_closeAlarmClock');
            break;

          case this.getLinkageAlarmType():
            guardModel = this.buildGuardModel('lm_scene_linkageAlarm');
            break;

          default:
            break;
        }

        return guardModel;
      }
    }, {
      key: "buildGuardModel",
      value: function buildGuardModel(identify) {
        var scId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var guardName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
        var guardShortName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
        return {
          sc_id: scId,
          identify: identify,
          guardName: guardName,
          guardShortName: guardShortName
        };
      }
    }]);
    return LHGuardTypeMode;
  }();

  exports.default = LHGuardTypeMode;
  LHGuardTypeMode.baseIdentify = 'lm_scene_base';
  LHGuardTypeMode.homeIdentify = 'lm_scene_home';
  LHGuardTypeMode.awayIdentify = 'lm_scene_away';
  LHGuardTypeMode.sleepIdentify = 'lm_scene_sleep';
},10205,[14305,14320,14323,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDeivceTriggleModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDeivceTriggleModel.default;
  exports.default = _default;
},10208,[14305,10211]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHDeviceTrigglesConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var LHDeviceTriggleModel = function () {
    function LHDeviceTriggleModel() {
      (0, _classCallCheck2.default)(this, LHDeviceTriggleModel);
    }

    (0, _createClass2.default)(LHDeviceTriggleModel, null, [{
      key: "getVibrationTriggleModel",
      value: function getVibrationTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 101,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: ''
        };
      }
    }, {
      key: "getVibrationT1TriggleModel",
      value: function getVibrationT1TriggleModel(device, scId, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + (scId === '4634' ? '.6.2' : '.6.1'),
          device_name: device.name,
          sc_id: scId,
          tr_id: 101,
          default_value: 0,
          value: 1,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorMotionTriggleModel",
      value: function getSensorMotionTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 108,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorMotion2TriggleModel",
      value: function getSensorMotion2TriggleModel(device, scId, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.15',
          device_name: device.name,
          sc_id: scId,
          tr_id: 108,
          default_value: 0,
          value: {
            min: 0,
            max: 256
          },
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorSwitchTriggleModel",
      value: function getSensorSwitchTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 101,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorMagnetTriggleModel",
      value: function getSensorMagnetTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 107,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorMagnetISATriggleModel",
      value: function getSensorMagnetISATriggleModel(device, scId, value) {
        return {
          name: _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet,
          did: device.deviceID,
          key: 'prop.' + device.model + '.' + 0x1019,
          device_name: device.name,
          sc_id: scId,
          tr_id: 102,
          default_value: 0,
          value: value,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorCubeTriggleModel",
      value: function getSensorCubeTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.alert',
          extra: '[1,18,2,85,[0,2],0,0]',
          device_name: device.name,
          sc_id: '',
          tr_id: 0,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorWleakTriggleModel",
      value: function getSensorWleakTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.leak',
          device_name: device.name,
          sc_id: '300',
          tr_id: 104,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorSmokeTriggleModel",
      value: function getSensorSmokeTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.alarm',
          device_name: device.name,
          sc_id: '125',
          tr_id: 104,
          default_value: 0,
          value: 1,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensorNatgasTriggleModel",
      value: function getSensorNatgasTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.alarm',
          device_name: device.name,
          sc_id: '124',
          tr_id: 104,
          default_value: 0,
          value: 1,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getSensor86SWTriggleModel",
      value: function getSensor86SWTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'event.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 101,
          default_value: 0,
          value: '',
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getGatewayAlarmTriggleModelWithAlarmType",
      value: function getGatewayAlarmTriggleModelWithAlarmType(alarmType) {
        var guardModel = _LHGuardTypeMode.default.getGuardModelWithGuardType(alarmType);

        if (alarmType === _LHGuardTypeMode.default.getNormalGuardType()) {
          return {
            device_name: _miot.Device.name,
            did: _miot.Device.deviceID,
            src: 'device',
            tr_id: 104,
            sc_id: 0,
            value: 'on',
            default_value: 0,
            extra: '[1,19,6,111,[0,1],2,0]',
            key: 'prop.' + _miot.Device.model + '.arming',
            device_abbr: ''
          };
        } else if (alarmType === _LHGuardTypeMode.default.getBaseGuardType()) {
          return [{
            device_name: _miot.Device.name,
            did: _miot.Device.deviceID,
            src: 'device',
            tr_id: 104,
            sc_id: guardModel.sc_id,
            value: alarmType,
            default_value: 0,
            key: 'prop.' + _miot.Device.model + '.3.1',
            device_abbr: ''
          }, this.getGatewayAlarmTriggleModelWithAlarmType(_LHGuardTypeMode.default.getHomeGuardType()), this.getGatewayAlarmTriggleModelWithAlarmType(_LHGuardTypeMode.default.getAwayGuardType()), this.getGatewayAlarmTriggleModelWithAlarmType(_LHGuardTypeMode.default.getSleepGuardType())];
        } else {
          return {
            device_name: _miot.Device.name,
            did: _miot.Device.deviceID,
            src: 'device',
            tr_id: 104,
            sc_id: guardModel.sc_id,
            value: alarmType,
            default_value: 0,
            key: 'prop.' + _miot.Device.model + '.3.1',
            device_abbr: ''
          };
        }
      }
    }, {
      key: "getM1SNightTriggleModel",
      value: function getM1SNightTriggleModel(device, scId, key, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'prop.' + device.model + '.' + key,
          device_name: device.name,
          sc_id: scId,
          tr_id: 104,
          default_value: 0,
          value: {
            min: 0,
            max: 30
          },
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getCurtainLightDarkTriggleModel",
      value: function getCurtainLightDarkTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'prop.' + device.model + '.3.11',
          device_name: device.name,
          sc_id: 6985,
          tr_id: 101,
          default_value: 0,
          value: 0,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getCurtainLightBrightTriggleModel",
      value: function getCurtainLightBrightTriggleModel(device, triggleName) {
        return {
          name: triggleName,
          did: device.deviceID,
          key: 'prop.' + device.model + '.3.11',
          device_name: device.name,
          sc_id: 6984,
          tr_id: 101,
          default_value: 0,
          value: 1,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getDeviceTriggleItem",
      value: function getDeviceTriggleItem(device, triggle) {
        return {
          name: triggle.triggleName,
          did: device.deviceID,
          key: triggle.type + '.' + device.model + '.' + triggle.key,
          device_name: device.name,
          sc_id: triggle.scId,
          tr_id: triggle.tr_id,
          default_value: triggle.default_value,
          value: typeof triggle.value !== 'undefined' ? triggle.value : triggle.default_value,
          src: 'device',
          device_abbr: 'device'
        };
      }
    }, {
      key: "getDeviceTriggles",
      value: function getDeviceTriggles(device, deviceTrigglesConfig) {
        var triggles = [];

        for (var i = 0, len = deviceTrigglesConfig.length; i < len; i += 1) {
          var triggle = deviceTrigglesConfig[i];
          triggles.push(this.getDeviceTriggleItem(device, triggle));
        }

        return triggles;
      }
    }, {
      key: "getLinkageAlarmLaunchAttr",
      value: function getLinkageAlarmLaunchAttr(device) {
        var attr = this.getLinkageAttr(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm);

        if (_LHDeviceModel.default.isProfileGateway(device.model)) {
          attr.key = 'event.' + device.model + '.arming';
          attr.extra = '[1,19,1,111,[0,1],2,0]';
        } else {
          attr.key = 'prop.' + device.model + '.3.22';
          attr.value = {
            min: 1,
            max: 2
          };
        }

        return attr;
      }
    }, {
      key: "getLinkageDisAlarmLaunchAttr",
      value: function getLinkageDisAlarmLaunchAttr(device) {
        var attr = this.getLinkageAttr(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm_dis);

        if (_LHDeviceModel.default.isProfileGateway(device.model)) {
          attr.key = 'event.' + device.model + '.alarm';
          attr.extra = '[1,19,9,111,[0,0],0,0]';
          attr.value = 'off';
        } else {
          attr.key = 'prop.' + device.model + '.3.22';
          attr.value = 0;
        }

        return attr;
      }
    }, {
      key: "getLinkageDisAllAlarmLaunchAttr",
      value: function getLinkageDisAllAlarmLaunchAttr(device) {
        var attr = this.getLinkageAttr(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm_dis);

        if (_LHDeviceModel.default.isProfileGateway(device.model)) {
          attr.key = 'event.' + device.model + '.alarm';
          attr.extra = '[1,19,9,111,[0,0],0,0]';
          attr.value = 'all_off';
        } else {
          attr.key = 'prop.' + device.model + '.3.22';
          attr.value = 0;
        }

        return attr;
      }
    }, {
      key: "getLinkageAttr",
      value: function getLinkageAttr(device, name) {
        return {
          device_name: device.name,
          did: device.deviceID ? device.deviceID : device.did,
          name: name,
          src: 'device'
        };
      }
    }, {
      key: "getMotionMoveTriggleModel",
      value: function getMotionMoveTriggleModel(device) {
        var model = device.model;
        var triggleName = _LHCommonLocalizableString.default.ifttt_triggle_someone_moved;
        var scId = {};
        scId[_LHDeviceModel.default.DeviceModelSensorMotionV2()] = '23';
        scId[_LHDeviceModel.default.DeviceModelSensorMotionAq2()] = '264';

        if (Object.keys(scId).indexOf(model) > -1) {
          return this.getSensorMotionTriggleModel(device, scId[model], 'motion', triggleName);
        }

        if (model === _LHDeviceModel.default.DeviceModelAqaraMotionT1()) {
          return this.getDeviceTriggleItem(device, _LHDeviceTrigglesConfig.default.GetAqaraMotionT1()[0]);
        } else if (model === _LHDeviceModel.default.DeviceModelAqaraHighPrecisionMotionT1()) {
          return this.getDeviceTriggleItem(device, _LHDeviceTrigglesConfig.default.GetAqaraHighPrecisionMotionT1()[0]);
        }

        return '';
      }
    }]);
    return LHDeviceTriggleModel;
  }();

  exports.default = LHDeviceTriggleModel;
},10211,[14305,14320,14323,10074,10202,10196,10034,10214]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var LHDeviceTrigglesConfig = function () {
    function LHDeviceTrigglesConfig() {
      (0, _classCallCheck2.default)(this, LHDeviceTrigglesConfig);
    }

    (0, _createClass2.default)(LHDeviceTrigglesConfig, null, [{
      key: "GetBaseItem",
      value: function GetBaseItem(scId, type, key, trId, defaultValue, triggleName) {
        return {
          triggleName: triggleName || '',
          type: type,
          key: key,
          scId: scId,
          tr_id: trId,
          default_value: defaultValue
        };
      }
    }, {
      key: "GetSpecMotion",
      value: function GetSpecMotion(scId, key) {
        return this.GetBaseItem(scId, 'event', key, 108, '', _LHCommonLocalizableString.default.common_ifttt_triggleName_motion);
      }
    }, {
      key: "GetSpecMagnet",
      value: function GetSpecMagnet(scId, defaultValue) {
        return this.GetBaseItem(scId, 'prop', '2.1', 107, defaultValue, _LHCommonLocalizableString.default.common_ifttt_triggleName_magnet);
      }
    }, {
      key: "GetBasePress",
      value: function GetBasePress(scId, key, triggleName) {
        return this.GetBaseItem(scId, 'event', key, 104, '', triggleName);
      }
    }, {
      key: "GetSinglePress",
      value: function GetSinglePress(scId) {
        return this.GetBasePress(scId, '3.1', _LHCommonLocalizableString.default.ifttt_triggle_single_press);
      }
    }, {
      key: "GetDoublePress",
      value: function GetDoublePress(scId) {
        return this.GetBasePress(scId, '3.2', _LHCommonLocalizableString.default.ifttt_triggle_double_press);
      }
    }, {
      key: "GetLongPress",
      value: function GetLongPress(scId) {
        return this.GetBasePress(scId, '3.3', _LHCommonLocalizableString.default.ifttt_triggle_long_press);
      }
    }, {
      key: "GetAqaraMotionT1",
      value: function GetAqaraMotionT1() {
        return [this.GetSpecMotion(4300, '4.1')];
      }
    }, {
      key: "GetAqaraHighPrecisionMotionT1",
      value: function GetAqaraHighPrecisionMotionT1() {
        return [this.GetSpecMotion(4416, '2.1')];
      }
    }, {
      key: "GetAqaraMagnetT1",
      value: function GetAqaraMagnetT1() {
        return [this.GetSpecMagnet(3431, true), this.GetSpecMagnet(3430, false)];
      }
    }, {
      key: "GetAqaraWleakT1",
      value: function GetAqaraWleakT1() {
        return [this.GetBaseItem(3434, 'prop', '2.1', 104, true, _LHCommonLocalizableString.default.ifttt_triggle_flood_alert)];
      }
    }, {
      key: "GetMijiaBleFlood",
      value: function GetMijiaBleFlood() {
        return [this.GetBaseItem(4150, 'prop', '4116', 104, 1, _LHCommonLocalizableString.default.ifttt_triggle_flood_alert)];
      }
    }, {
      key: "GetMijiaBleSensorSmoke",
      value: function GetMijiaBleSensorSmoke() {
        return [this.GetBaseItem(4942, 'prop', '4117', 104, 1, _LHCommonLocalizableString.default.ifttt_triggle_fire_alert)];
      }
    }, {
      key: "GetAqaraSwitchT1",
      value: function GetAqaraSwitchT1() {
        return [this.GetSinglePress(3420), this.GetDoublePress(3421), this.GetLongPress(3422)];
      }
    }, {
      key: "GetAqaraSwitchRemoteT1",
      value: function GetAqaraSwitchRemoteT1() {
        return [this.GetSinglePress(3768), this.GetDoublePress(3769), this.GetLongPress(3770)];
      }
    }, {
      key: "GetAqaraSwitchRemoteDoubleT1",
      value: function GetAqaraSwitchRemoteDoubleT1() {
        return [this.GetSinglePress(3771), this.GetBasePress(3772), this.GetLongPress(3773), this.GetBasePress(3774, '4.1'), this.GetBasePress(3775, '4.2'), this.GetBasePress(3776, '4.3'), this.GetBasePress(3777, '5.1')];
      }
    }]);
    return LHDeviceTrigglesConfig;
  }();

  exports.default = LHDeviceTrigglesConfig;
},10214,[14305,14320,14323,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var SensorSetIFTTTType = {
    UnNecessary: -1,
    V3: 1,
    ACP201705: 2,
    TW: 3,
    EU: 4,
    ACDongpeng2018: 5,
    UK: 6,
    US: 100
  };

  var LHSensorSetIFTTTConstant = function () {
    function LHSensorSetIFTTTConstant() {
      (0, _classCallCheck2.default)(this, LHSensorSetIFTTTConstant);
    }

    (0, _createClass2.default)(LHSensorSetIFTTTConstant, null, [{
      key: "errorCode",
      value: function errorCode() {
        return {
          OFFLine: -1,
          NotSupportSensorSetIFTTT: -2,
          RPCError: -3,
          DeviceListEmpty: -4,
          BuildError: -5
        };
      }
    }, {
      key: "successCode",
      value: function successCode() {
        return {
          AlreadyBuild: 1,
          NeedBuild: 2,
          SuccessBuild: 3,
          ApartBuild: 4
        };
      }
    }, {
      key: "IFTTTType",
      value: function IFTTTType() {
        return SensorSetIFTTTType;
      }
    }, {
      key: "getCurrentGatewaySensorSetIFTTTType",
      value: function getCurrentGatewaySensorSetIFTTTType() {
        if (_miot.Device.model === _LHDeviceModel.default.DeviceModelAqaraHubLmUK01()) {
          return SensorSetIFTTTType.UK;
        } else if (_miot.Device.model === _LHDeviceModel.default.DeviceModelAqaraHubMiEU01()) {
          return SensorSetIFTTTType.EU;
        } else if (_miot.Device.model === _LHDeviceModel.default.DeviceModelAqaraHubAqHM02()) {
          return SensorSetIFTTTType.US;
        }

        return SensorSetIFTTTType.UnNecessary;
      }
    }]);
    return LHSensorSetIFTTTConstant;
  }();

  exports.default = LHSensorSetIFTTTConstant;
  LHSensorSetIFTTTConstant.US_SWITCH_TOGGLE_PLUG = 'us_switch_toggle_plug';
  LHSensorSetIFTTTConstant.US_SWITCH_ALARM = 'us_switch_alarm';
  LHSensorSetIFTTTConstant.US_MAGNET_ALARM = 'us_magnet_alarm';
  LHSensorSetIFTTTConstant.US_MOTION_ALARM = 'us_motion_alarm';
  LHSensorSetIFTTTConstant.US_OPEN_SMART_LIGHT = 'us_open_smart_light';
  LHSensorSetIFTTTConstant.senceConditionIdJSON = {
    'lumi.sensor_switch.aq2': 270,
    'lumi.remote.b1acn01': 688,
    'lumi.sensor_switch.aq3': 406,
    'lumi.sensor_switch.v2': 18,
    'lumi.vibration.aq1': 199,
    'lumi.sensor_motion.aq2': 264,
    'lumi.sensor_motion.v2': 23,
    'lumi.sensor_magnet.v2': 20,
    'lumi.sensor_magnet.aq2': 272
  };
},10217,[14305,14320,14323,10074,10196]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHGuardTypeMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var LHDeviceActionModel = function () {
    function LHDeviceActionModel() {
      (0, _classCallCheck2.default)(this, LHDeviceActionModel);
    }

    (0, _createClass2.default)(LHDeviceActionModel, null, [{
      key: "getGatewayAlarmActionListWithAlarmType",
      value: function getGatewayAlarmActionListWithAlarmType(alarmType) {
        if (alarmType === _LHGuardTypeMode.default.getNormalGuardType()) {
          return [{
            keyName: 'name',
            model: _miot.Device.model,
            name: _miot.Device.name,
            payload: {
              command: _miot.Device.model + '.alarm',
              did: _miot.Device.deviceID,
              extra: '[1,18,2,85,[0,2],0,0]',
              value: 10000
            }
          }];
        } else {
          return [{
            keyName: 'name',
            model: _miot.Device.model,
            name: _miot.Device.name,
            type: 0,
            tr_id: 201,
            sa_id: 3832,
            payload: {
              command: _miot.Device.model + '.set_properties',
              did: _miot.Device.deviceID,
              value: [{
                piid: 22,
                value: this.getAlarmWriteValue(alarmType),
                siid: 3
              }]
            }
          }];
        }
      }
    }, {
      key: "getAlarmWriteValue",
      value: function getAlarmWriteValue(alarmType) {
        if (_miot.Device.model === _LHDeviceModel.default.DeviceModelMijiaMultiModeHub()) {
          return alarmType === _LHGuardTypeMode.default.getBaseGuardType() ? 2 : 1;
        } else if (_LHDeviceModel.default.isOtherMultiModeHub(_miot.Device.model)) {
          return Number(alarmType) + 1;
        }

        return 1;
      }
    }, {
      key: "getDoorbellAction",
      value: function getDoorbellAction() {
        return [{
          keyName: 'name',
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.door_bell',
            did: _miot.Device.deviceID,
            extra: '[1,19,2,85,[44,10000],0,0]',
            value: '10000'
          }
        }];
      }
    }, {
      key: "getCloseClockAction",
      value: function getCloseClockAction() {
        return [{
          keyName: 'name',
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.play_alarm_clock',
            did: _miot.Device.deviceID,
            extra: '[1,19,5,111,[44,0],0,0]',
            value: 'off'
          }
        }];
      }
    }, {
      key: "getPlayMusiceAction",
      value: function getPlayMusiceAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_3,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.play_music_new',
            did: _miot.Device.deviceID,
            extra: '[1,19,5,85,[56,8,0,60],0,0]',
            value: ['8', 60],
            key: 'value'
          }
        };
      }
    }, {
      key: "getToggleLightAction",
      value: function getToggleLightAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_4,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.toggle_light',
            did: _miot.Device.deviceID,
            extra: '[1,19,7,111,[40,2],0,0]',
            value: 'toggle',
            key: 'value'
          }
        };
      }
    }, {
      key: "getOpenSmartLightAction",
      value: function getOpenSmartLightAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_5,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.toggle_smart_light',
            did: _miot.Device.deviceID,
            extra: '[1,19,7,111,[48,3],0,0]',
            value: 'on',
            key: 'value'
          }
        };
      }
    }, {
      key: "getCloseLightAction",
      value: function getCloseLightAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_6,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.toggle_light',
            did: _miot.Device.deviceID,
            extra: '[1,19,7,111,[48,0],0,0]',
            value: 'off',
            key: 'value'
          }
        };
      }
    }, {
      key: "getOpenLightAction",
      value: function getOpenLightAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_7,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.toggle_light',
            did: _miot.Device.deviceID,
            extra: '[1,19,7,111,[48,1],0,0]',
            value: 'on',
            key: 'value'
          }
        };
      }
    }, {
      key: "getToggleAlarmAction",
      value: function getToggleAlarmAction() {
        return {
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_8,
          model: _miot.Device.model,
          name: _miot.Device.name,
          payload: {
            command: _miot.Device.model + '.set_arming',
            did: _miot.Device.deviceID,
            extra: '[1,19,6,111,[40,3],0,0]',
            value: 'toggle',
            key: 'value'
          }
        };
      }
    }, {
      key: "getLinkageAlarmSensorAction",
      value: function getLinkageAlarmSensorAction(device) {
        return {
          model: device.model,
          type: 0,
          did: device.deviceID,
          name: _miot.Device.name,
          extra: '[1,19,9,85,[40,10000],0,0]',
          payload: {
            value: 'toggle',
            did: device.deviceID,
            command: device.model + ".linkage_alarm",
            total_length: 0,
            extra: '[1,19,9,85,[40,10000],0,0]'
          }
        };
      }
    }, {
      key: "getPlugToggleAction",
      value: function getPlugToggleAction(device) {
        return {
          keyName: 'name',
          model: device.model,
          name: device.name,
          payload: {
            command: device.model + '.toggle_plug',
            did: device.deviceID,
            extra: '[1,6,1,0,[48,2],0,0]',
            value: ['channel_0', 'toggle'],
            key: 'value'
          }
        };
      }
    }, {
      key: "getLinkageDisAlarmAction",
      value: function getLinkageDisAlarmAction(device) {
        var action = this.getLinkageAction(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm_dis);

        if (_LHDeviceModel.default.isProfileGateway(device.model)) {
          action.payload.command = device.model + '.dis_alarm';
          action.payload.extra = '[1,19,9,111,[40,0],0,0]';
        } else {
          action.payload.command = device.model + '.set_properties';
          action.payload.value = [{
            siid: 3,
            piid: 22,
            value: 0
          }];
        }

        return action;
      }
    }, {
      key: "getLinkageDisAllAlarmAction",
      value: function getLinkageDisAllAlarmAction(device) {
        var action = this.getLinkageAction(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm_dis);

        if (_LHDeviceModel.default.isProfileGateway(device.model)) {
          action.payload.command = device.model + '.dis_alarm';
          action.payload.extra = '[1,19,9,111,[40,0],0,0]';
          action.payload.value = 1;
        } else {
          action.payload.command = device.model + '.set_properties';
          action.payload.value = [{
            siid: 3,
            piid: 22,
            value: 0
          }];
        }

        return action;
      }
    }, {
      key: "getLinkageAction",
      value: function getLinkageAction(device, keyName) {
        return {
          keyName: keyName,
          model: device.model,
          name: device.name,
          payload: {
            did: device.deviceID ? device.deviceID : device.did
          }
        };
      }
    }, {
      key: "getNightLightActionList",
      value: function getNightLightActionList(gwDevice) {
        var delayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;
        return [{
          id: 1,
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_7,
          model: gwDevice.model,
          name: gwDevice.name,
          payload: {
            command: gwDevice.model + '.set_properties',
            delay_time: 0,
            did: gwDevice.deviceID,
            total_length: 0,
            type: 0,
            value: [{
              siid: 2,
              piid: 1,
              value: true
            }]
          },
          sa_id: 6074,
          tr_id: 201,
          type: 0
        }, {
          id: 2,
          keyName: _LHCommonLocalizableString.default.sensor_set_ifttt_triggle_name_6,
          model: gwDevice.model,
          name: gwDevice.name,
          payload: {
            command: gwDevice.model + '.set_properties',
            delay_time: delayTime,
            did: gwDevice.deviceID,
            total_length: 0,
            type: 0,
            value: [{
              siid: 2,
              piid: 1,
              value: false
            }]
          },
          sa_id: 6075,
          tr_id: 201,
          type: 0
        }];
      }
    }]);
    return LHDeviceActionModel;
  }();

  exports.default = LHDeviceActionModel;

  LHDeviceActionModel.getLinkageAlarmAction = function (device) {
    var action = LHDeviceActionModel.getLinkageAction(device, _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm);

    if (_LHDeviceModel.default.isProfileGateway(device.model)) {
      action.payload.command = device.model + '.linkage_alarm';
      action.payload.extra = '[1,19,9,85,[40,10000],0,0]';
      action.payload.value = 10000;
    } else {
      action.payload.command = device.model + '.set_properties';
      action.payload.value = [{
        siid: 3,
        piid: 22,
        value: 1
      }];
    }

    return action;
  };

  LHDeviceActionModel.getCurtainPosition = function (device, keyName, value) {
    return {
      id: 1,
      keyName: keyName,
      model: device.model,
      name: device.name,
      payload: {
        command: device.model + '.set_properties',
        delay_time: 0,
        did: device.deviceID,
        total_length: 0,
        type: 0,
        value: [{
          siid: 2,
          piid: 2,
          value: value
        }]
      },
      sa_id: 11021,
      tr_id: 201,
      type: 0
    };
  };
},10220,[14305,14320,14323,10074,10034,10202,10196]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHLocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHLocalizedStrings.default;
  exports.default = _default;
},10223,[14305,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHFunctionDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHFunctionDialogUtils.default;
  exports.default = _default;
},10226,[14305,10229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _LHToastUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHStringUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHUiColorUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var LHFunctionDialogUtils = function () {
    function LHFunctionDialogUtils() {
      (0, _classCallCheck2.default)(this, LHFunctionDialogUtils);
    }

    (0, _createClass2.default)(LHFunctionDialogUtils, null, [{
      key: "RenameDeviceInputDialogShow",
      value: function RenameDeviceInputDialogShow() {
        var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var tips = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var newName = option.defaultValue || '';

        _LHDialogUtils.default.ShowInputDialog({
          inputs: [{
            type: 'simple',
            defaultValue: option.defaultValue || '',
            placeholder: option.placeholder || '',
            onChangeText: function onChangeText(name) {
              newName = name;
            },
            textInputProps: {
              autoFocus: true,
              selectionColor: option.selectionColor || '#32BAC0'
            }
          }],
          dialogStyle: {
            titleStyle: [{
              color: _LHUiColorUtils.default.colorBlack
            }, option.titleStyle]
          },
          visible: true,
          title: option.title || _LHCommonLocalizableString.default.common_button_changename,
          confirm: _LHCommonLocalizableString.default.common_ok,
          confirmStyle: option.confirmStyle,
          cancel: _LHCommonLocalizableString.default.common_cancel,
          onConfirm: function onConfirm() {
            _LHDialogUtils.default.HideInputDialog();

            var tipsTxt = tips || {
              empty: _LHCommonLocalizableString.default.sub_device_list_name_cant_empty,
              emoji: _LHCommonLocalizableString.default.sub_device_list_name_cant_support_emoji,
              specialChar: _LHCommonLocalizableString.default.sub_device_list_name_cant_support_special_char,
              maxLength: _LHCommonLocalizableString.default.sub_device_list_name_cant_more_forty,
              same: _LHCommonLocalizableString.default.sub_device_list_name_cant_same
            };

            if (newName === '' || newName === undefined || newName === null) {
              _LHToastUtils.default.showShortToast(tipsTxt.empty);
            } else if (_LHStringUtils.default.isContainsEmoji(newName)) {
              _LHToastUtils.default.showShortToast(tipsTxt.emoji);
            } else if (_LHStringUtils.default.isContainsNotSupportChar(newName)) {
              _LHToastUtils.default.showShortToast(tipsTxt.specialChar);
            } else if (_LHStringUtils.default.judgeStringLength(newName) > 40) {
              _LHToastUtils.default.showShortToast(tipsTxt.maxLength);
            } else if (newName === option.defaultValue) {
              _LHToastUtils.default.showShortToast(tipsTxt.same);
            } else {
              var onSuccess = option.onSuccess;

              if (typeof onSuccess === 'function') {
                onSuccess(newName);
              }
            }
          }
        });
      }
    }]);
    return LHFunctionDialogUtils;
  }();

  exports.default = LHFunctionDialogUtils;
},10229,[14305,14320,14323,10160,10127,10034,10175,10148]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSettingItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSettingItem.default;
  exports.default = _default;
},10232,[14305,10235]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _resources = _$$_REQUIRE(_dependencyMap[5]);

  var _LHMiServer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHPolicyLicenseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHDialogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHAuthorizationUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHAppiumUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHToastUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHDeviceModel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHDeviceAuthorityUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var navigaitonRef = null;
  var plugInPressCount = 0;

  function _getSettingItem(type, extendParams) {
    var allItems = {
      deviceName: {
        index: 1,
        title: _resources.strings.name,
        testID: 'deviceNameItem',
        useNewType: true,
        value: '',
        onPress: function onPress() {
          _miot.Host.ui.openChangeDeviceName();
        }
      },
      switchSetting: {
        index: 6,
        title: _resources.strings.memberSet,
        testID: 'switchSettingItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openPowerMultikeyPage(_miot.Device.deviceID, _miot.Device.mac);
        }
      },
      shareDevice: {
        index: 9,
        title: _resources.strings.share,
        testID: 'shareDeviceItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openShareDevicePage();
        }
      },
      roomManagement: {
        index: 3,
        title: _resources.strings.location,
        testID: 'roomManagementItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openRoomManagementPage();
        }
      },
      deviceTimeZone: {
        title: _resources.strings.timezone,
        testID: 'deviceTimeZoneItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openDeviceTimeZoneSettingPage({
            sync_device: false
          });
        }
      },
      iftttAuto: {
        index: 18,
        title: _resources.strings.ifttt,
        testID: 'iftttAutoItem',
        useNewType: true,
        onPress: function onPress() {
          _LHMiServer.default.openIftttAutoPage();
        }
      },
      btGateway: {
        index: 12,
        title: _LHCommonLocalizableString.default.common_setting_btGateway,
        testID: 'btGatewayItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openBtGatewayPage();
        }
      },
      btGatewayConnected: {
        index: 12,
        title: _resources.strings.btGateway,
        testID: 'btGatewayItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openBtGatewayPage();
        }
      },
      firmwareUpgrate: {
        index: 21,
        title: _resources.strings.firmwareUpgrade,
        testID: 'firmwareUpgrateItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openDeviceUpgradePage();
        }
      },
      pairWithHomeKitiOS: {
        index: 24,
        title: _LHCommonLocalizableString.default.common_setting_homekit_device_add,
        useNewType: true,
        testID: 'HomeKitiItem'
      },
      helpPage: {
        index: 30,
        title: _resources.strings.helpAndFeedback || _resources.strings.help,
        testID: 'helpPageItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openHelpPage();
        }
      },
      addToDesktop: {
        title: _resources.strings.addToDesktop,
        testID: 'addToDesktopItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openAddToDesktopPage();
        }
      },
      privacyLicense: {
        index: 33,
        title: _resources.strings.legalInfo,
        testID: 'privacyLicenseItem',
        useNewType: true,
        onPress: function onPress() {}
      },
      deleteDevice: {
        title: _resources.strings.deleteDevice,
        testID: 'deleteDeviceItem',
        useNewType: true,
        onPress: function onPress() {
          if (_miot.Device.parentDevice) {
            _LHDialogUtils.default.MessageDialogShow({
              title: _LHCommonLocalizableString.default.common_setting_device_delete_confirm,
              message: _LHCommonLocalizableString.default.common_setting_device_delete_tip,
              confirm: _LHCommonLocalizableString.default.common_ok,
              onConfirm: function onConfirm() {
                _LHMiServer.default.DeleteDevices([{
                  did: _miot.Device.deviceID,
                  pid: _miot.Device.type
                }], function () {
                  _miot.Package.exit();
                }, function () {
                  _LHToastUtils.default.showShortToast(_LHCommonLocalizableString.default.common_operation_fail);
                });
              },
              cancel: _LHCommonLocalizableString.default.common_cancel,
              onCancel: function onCancel() {}
            });
          } else {
            _miot.Host.ui.openDeleteDevice();
          }
        }
      },
      securitySetting: {
        title: _resources.strings.security,
        testID: 'securitySettingItem',
        onPress: function onPress() {
          _miot.Host.ui.openSecuritySetting();
        }
      },
      feedbackInput: {
        title: _resources.strings.feedback,
        testID: 'feedbackInputItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openFeedbackInput();
        }
      },
      plugIn: {
        title: _LHCommonLocalizableString.default.common_setting_feature_plug_in,
        testID: 'pluginVersionItem',
        hideArrow: true,
        minimumLongPressDuration: 5000,
        useNewType: true,
        onLongPress: function onLongPress() {
          if (_LHAppiumUtils.default.isWhiteList && _LHAppiumUtils.default.isWhiteList() && navigaitonRef || _LHDeviceModel.default.JudgeAqaraHub()) {
            navigaitonRef.navigate('LHDebugPage');
          }
        }
      },
      voiceAuth: {
        index: 15,
        title: _resources.strings.voiceAuth,
        testID: 'voiceAuthItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openVoiceCtrlDeviceAuthPage();
        }
      },
      battery: {
        title: _LHCommonLocalizableString.default.lumi_sensor_setting_battery
      },
      networkInfo: {
        title: _resources.strings.networkInfo,
        testID: 'networkInfoItem',
        useNewType: true,
        onPress: function onPress() {
          _miot.Host.ui.openDeviceNetworkInfoPage();
        }
      },
      morePagePlugIn: {
        title: _resources.strings.pluginVersion || _LHCommonLocalizableString.default.common_setting_feature_plug_in,
        value: String(_miot.Package.version),
        testID: 'morePagePlugInItem',
        useNewType: true,
        hideArrow: true,
        minimumLongPressDuration: 5000,
        onPress: function onPress() {
          plugInPressCount += 1;
        },
        onLongPress: function onLongPress() {
          if (_LHDeviceModel.default.DeviceAcpartnerMCN02() === _miot.Device.model && !_LHDeviceAuthorityUtils.default.isShared() && navigaitonRef) {
            navigaitonRef.navigate('LHDebugPage');
            return;
          }

          if (_LHDeviceModel.default.isMijiaMultiModeHub() && navigaitonRef) {
            if (plugInPressCount > 10 && _LHAppiumUtils.default.isWhiteList && _LHAppiumUtils.default.isWhiteList()) {
              navigaitonRef.navigate('LHDebugPage');
            } else {
              navigaitonRef.navigate('LHLabSettingPage');
            }
          } else if (_LHAppiumUtils.default.isWhiteList && _LHAppiumUtils.default.isWhiteList() && navigaitonRef || _LHDeviceModel.default.JudgeAqaraHub()) {
            navigaitonRef.navigate('LHDebugPage');
          }
        }
      }
    };

    if (type === 'plugIn') {
      return null;
    }

    return allItems[type] && (0, _extends2.default)({}, allItems[type], extendParams) || null;
  }

  var LHSettingItem = function () {
    function LHSettingItem() {
      (0, _classCallCheck2.default)(this, LHSettingItem);
    }

    (0, _createClass2.default)(LHSettingItem, null, [{
      key: "getSettingItem",
      value: function getSettingItem(type, extendParams) {
        return _getSettingItem(type, extendParams);
      }
    }, {
      key: "updateNavigation",
      value: function updateNavigation(navi) {
        navigaitonRef = navi;
      }
    }]);
    return LHSettingItem;
  }();

  exports.default = LHSettingItem;

  LHSettingItem.plugInItem = function () {
    return null;
  };

  LHSettingItem.morePagePlugInItem = function (version) {
    plugInPressCount = 0;
    return LHSettingItem.getSettingItem('morePagePlugIn', {
      value: version
    });
  };

  LHSettingItem.batteryItem = function (navigation, isBatteryLow, batteryIcon, content) {
    return _getSettingItem('battery', {
      title: _LHCommonLocalizableString.default.common_lumi_sensor_setting_battery,
      value: isBatteryLow ? _LHCommonLocalizableString.default.common_voice_low : _LHCommonLocalizableString.default.common_lumi_sensor_setting_battery_normal,
      hideArrow: !isBatteryLow,
      testID: 'batteryLowItem',
      showSeparator: false,
      useNewType: true,
      onPress: function onPress() {
        if (!isBatteryLow) {
          return;
        }

        navigation.navigate('LHBatteryPushPage', {
          batteryIcon: batteryIcon,
          content: content
        });
      }
    });
  };

  LHSettingItem.subDeviceAvoidDelItem = {
    title: _LHCommonLocalizableString.default.mi_commonHub_setting_protect_subdevice_delete,
    testID: 'subDeviceAvoidDelItem',
    onPress: function onPress() {
      if (navigaitonRef) {
        navigaitonRef.navigate('LHDeviceAvoidDelPage');
      }
    }
  };

  LHSettingItem.deviceNameItem = function (deviceName) {
    return _getSettingItem('deviceName', {
      rightDescription: deviceName
    });
  };

  LHSettingItem.GetPrivacyLicenseItem = function (policyResource) {
    return _getSettingItem('privacyLicense', {
      onPress: function onPress() {
        _LHAuthorizationUtils.default.checkRegion({}, false, function () {
          var policyLicenseUrl = _LHPolicyLicenseUtils.default.GexPolicyLicenseUrl(policyResource, _LHAuthorizationUtils.default.PolicyCode.languageCode, _LHAuthorizationUtils.default.PolicyCode.serverCode, _LHAuthorizationUtils.default.PolicyCode.countryCode);

          _miot.Host.ui.previewLegalInformationAuthorization({
            agreementURL: policyLicenseUrl.licenseUrl,
            privacyURL: policyLicenseUrl.policyUrl,
            hideUserExperiencePlan: true
          });
        });
      }
    });
  };

  LHSettingItem.GetMoreSettingItem = function (navigation, pageConfig) {
    return {
      index: 27,
      title: _resources.strings.more,
      testID: 'moreSettingItem',
      onPress: function onPress() {
        navigation.navigate('LHMoreSettingPage', pageConfig);
      }
    };
  };

  LHSettingItem.GetBleGatewayMeshItem = function (navigation, switchColor) {
    var onPress = function onPress() {
      navigation.navigate('LHBleGatewayMeshPage', {
        switchColor: switchColor
      });
    };

    return {
      index: 13,
      weight: 9,
      title: _LHCommonLocalizableString.default.common_setting_btGateway,
      testID: 'btGatewayItem',
      press: onPress,
      onPress: onPress
    };
  };

  LHSettingItem.LinkageAlarmItem = function () {
    return {
      title: _LHCommonLocalizableString.default.mi_commonHub_linkage_alarm,
      testID: 'LinkageAlarmItem',
      onPress: function onPress() {
        if (navigaitonRef) {
          navigaitonRef.navigate('LHLinkageAlarmPage');
        }
      }
    };
  };

  LHSettingItem.roomManagementItem = _getSettingItem('roomManagement');
  LHSettingItem.shareDeviceItem = _getSettingItem('shareDevice');
  LHSettingItem.deviceTimeZoneItem = _getSettingItem('deviceTimeZone');
  LHSettingItem.iftttAutoItem = _getSettingItem('iftttAuto');
  LHSettingItem.btGatewayItem = _getSettingItem('btGateway');
  LHSettingItem.btGatewayConnectedItem = _getSettingItem('btGatewayConnected');
  LHSettingItem.btGatewayConnectedItem = _getSettingItem('btGatewayConnected');
  LHSettingItem.firmwareUpgrateItem = _getSettingItem('firmwareUpgrate');
  LHSettingItem.helpPageItem = _getSettingItem('helpPage');
  LHSettingItem.addToDesktopItem = _getSettingItem('addToDesktop');
  LHSettingItem.deleteDeviceItem = _getSettingItem('deleteDevice');
  LHSettingItem.securitySettingItem = _getSettingItem('securitySetting');
  LHSettingItem.feedbackInputItem = _getSettingItem('feedbackInput');
  LHSettingItem.voiceAuthItem = _getSettingItem('voiceAuth');
  LHSettingItem.switchSettingItem = _getSettingItem('switchSetting');
},10235,[14305,14320,14323,14344,10074,10077,10013,10028,10160,10007,10166,10127,10034,10196,10097]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHTimeSpanUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHTimeSpanUtils.default;
  exports.default = _default;
},10238,[14305,10241]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function EVERYDAY() {
    return [0, 1, 2, 3, 4, 5, 6];
  }

  function WORKDAY() {
    return [1, 2, 3, 4, 5];
  }

  function WEEKDAY() {
    return [0, 6];
  }

  function DEFAULT_TIME_SPAN() {
    return {
      from: {
        hour: 0,
        min: 0
      },
      to: {
        hour: 0,
        min: 0
      },
      wday: EVERYDAY()
    };
  }

  function getTimeSpan(fromTime, toTime) {
    var timeSpan;

    if (fromTime instanceof Array && fromTime.length === 2 && toTime instanceof Array && toTime.length === 2) {
      timeSpan = {
        from: {
          hour: Number(fromTime[0]),
          min: Number(fromTime[1])
        },
        to: {
          hour: Number(toTime[0]),
          min: Number(toTime[1])
        },
        wday: EVERYDAY()
      };
    } else {
      timeSpan = DEFAULT_TIME_SPAN();
    }

    return timeSpan;
  }

  function gettimerArrayStr(timeSpan) {
    var timerArray = ['00:00', '00:00', false];

    if (timeSpan !== null && timeSpan !== undefined) {
      var from = timeSpan.from,
          to = timeSpan.to;
      var fromHour = from.hour < 10 ? '0' + from.hour : from.hour;
      var fromMin = from.min < 10 ? '0' + from.min : from.min;
      var toHour = to.hour < 10 ? '0' + to.hour : to.hour;
      var toMin = to.min < 10 ? '0' + to.min : to.min;
      timerArray[0] = fromHour + ':' + fromMin;
      timerArray[1] = toHour + ':' + toMin;

      if (from.hour * 60 + from.min > to.hour * 60 + to.min) {
        timerArray[2] = true;
      }
    }

    return timerArray;
  }

  function getLocalDate(east8date) {
    var targetTimezone = -8;
    var dif = new Date().getTimezoneOffset();
    var localTime = east8date.getTime() + -28800000 - dif * 60 * 1000;
    return new Date(localTime);
  }

  function getEast8Date(date) {
    var targetTimezone = -8;
    var dif = new Date().getTimezoneOffset();
    var east8time = date.getTime() + dif * 60 * 1000 - -28800000;
    return new Date(east8time);
  }

  function convertWday(timespan, originDate, zoneDate) {
    var unitDay = 86400000;
    var dif = zoneDate.getTime() / unitDay - originDate.getTime() / unitDay;
    dif = parseInt(dif, 10);

    if (dif === 0) {
      return timespan.wday;
    } else if (dif > 0) {
      return timespan.wday.map(function (value) {
        return value === 6 ? 0 : value + 1;
      });
    } else {
      return timespan.wday.map(function (value) {
        return value === 0 ? 6 : value - 1;
      });
    }
  }

  function getLocalTimespan(timespan, onEnable) {
    var fromEnable = onEnable;

    if (typeof onEnable === 'string') {
      fromEnable = onEnable === '1';
    }

    var localTimespan = DEFAULT_TIME_SPAN();
    var fromDate = new Date();
    fromDate.setHours(timespan.from.hour);
    fromDate.setMinutes(timespan.from.min);
    var toDate = new Date();
    toDate.setHours(timespan.to.hour);
    toDate.setMinutes(timespan.to.min);
    var localFromDate = getLocalDate(fromDate);
    var localToDate = getLocalDate(toDate);
    localTimespan.wday = convertWday(timespan, fromEnable ? fromDate : toDate, fromEnable ? localFromDate : localToDate);
    localTimespan.from.hour = localFromDate.getHours();
    localTimespan.from.min = localFromDate.getMinutes();
    localTimespan.to.hour = localToDate.getHours();
    localTimespan.to.min = localToDate.getMinutes();
    return localTimespan;
  }

  function getEast8Timespan(timespan, onEnable) {
    var fromEnable = onEnable;

    if (typeof onEnable === 'string') {
      fromEnable = onEnable === '1';
    }

    var east8Timespan = DEFAULT_TIME_SPAN();
    var fromDate = new Date();
    fromDate.setHours(timespan.from.hour);
    fromDate.setMinutes(timespan.from.min);
    var toDate = new Date();
    toDate.setHours(timespan.to.hour);
    toDate.setMinutes(timespan.to.min);
    var east8FromDate = getEast8Date(fromDate);
    var east8ToDate = getEast8Date(toDate);
    east8Timespan.wday = convertWday(timespan, fromEnable ? fromDate : toDate, fromEnable ? east8FromDate : east8ToDate);
    east8Timespan.from.hour = east8FromDate.getHours();
    east8Timespan.from.min = east8FromDate.getMinutes();
    east8Timespan.to.hour = east8ToDate.getHours();
    east8Timespan.to.min = east8ToDate.getMinutes();
    return east8Timespan;
  }

  function getSceneTimerSpan(fromTime, toTime, onEnable, offEnable) {
    var transformEnable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
    var fromEnable = onEnable;

    if (typeof onEnable === 'string') {
      fromEnable = onEnable === '1';
    }

    var toEnable = offEnable;

    if (typeof offEnable === 'string') {
      toEnable = offEnable === '1';
    }

    var result = {
      timeSpan: DEFAULT_TIME_SPAN(),
      fromDate: new Date(),
      toDate: new Date()
    };
    var timeSpan = result.timeSpan;
    var fromDate = result.fromDate,
        toDate = result.toDate;
    var regex1 = /\d{1,2}\s\d{1,2}\s\*\s\*\s[0-6]/;
    var regex2 = /^\d{1,2}\s\d{1,2}\s\d{1,2}\s\d{1,2}\s\*+$/;

    if (!regex1.test(fromTime) && !regex2.test(fromTime)) {
      return timeSpan;
    }

    if (!regex1.test(toTime) && !regex2.test(toTime)) {
      return timeSpan;
    }

    if (fromTime.includes('*')) {
      var fromArray = fromTime.split(' ');
      timeSpan.from.min = Number(fromArray[0]);
      timeSpan.from.hour = Number(fromArray[1]);

      if (fromTime.endsWith('*')) {
        fromDate.setMinutes(Number(fromArray[0]));
        fromDate.setHours(Number(fromArray[1]));
        fromDate.setDate(Number(fromArray[2]));
        fromDate.setMonth(Number(fromArray[3]) - 1);
      }
    }

    if (toTime.includes('*')) {
      var toArray = toTime.split(' ');
      timeSpan.to.min = Number(toArray[0]);
      timeSpan.to.hour = Number(toArray[1]);

      if (fromTime.endsWith('*')) {
        toDate.setMinutes(Number(toArray[0]));
        toDate.setHours(Number(toArray[1]));
        toDate.setDate(Number(toArray[2]));
        toDate.setMonth(Number(toArray[3]) - 1);
      }
    }

    if (fromEnable) {
      if (fromTime.endsWith('*')) {
        timeSpan.wday = [];
      } else {
        var _fromArray = fromTime.split(' ');

        timeSpan.wday = _fromArray[4].split(',').map(function (value) {
          return Number(value);
        });
      }
    } else if (toEnable) {
      if (toTime.endsWith('*')) {
        timeSpan.wday = [];
      } else {
        var _toArray = toTime.split(' ');

        timeSpan.wday = _toArray[4].split(',').map(function (value) {
          return Number(value);
        });
      }
    } else {
      timeSpan.wday = EVERYDAY();
    }

    if (transformEnable) {
      result.timeSpan = getLocalTimespan(timeSpan, fromEnable);
      result.fromDate = getLocalDate(fromDate);
      result.toDate = getLocalDate(toDate);
    } else {
      result.timeSpan = timeSpan;
      result.fromDate = fromDate;
      result.toDate = toDate;
    }

    return result;
  }

  function getTimeSlotToCloud(timespan, onEnable, offEnable) {
    var isSupportTheDayAfterTomorrow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var fromEnable = onEnable;

    if (typeof onEnable === 'string') {
      fromEnable = onEnable === '1';
    }

    var toEnable = offEnable;

    if (typeof offEnable === 'string') {
      toEnable = offEnable === '1';
    }

    var timeSlot = timespan;
    var fromMins = timeSlot.from.hour * 60 + timeSlot.from.min;
    var toMins = timeSlot.to.hour * 60 + timeSlot.to.min;
    var fromTime;
    var toTime;

    if (!timeSlot.wday || timeSlot.wday.length === 0) {
      var fromDate = new Date();
      var nowMins = fromDate.getHours() * 60 + fromDate.getMinutes();
      fromDate.setHours(timeSlot.from.hour);
      fromDate.setMinutes(timeSlot.from.min);
      var toDate = new Date();
      toDate.setHours(timeSlot.to.hour);
      toDate.setMinutes(timeSlot.to.min);

      if (fromEnable && toEnable) {
        var fromAddDate = false;

        if (fromMins <= nowMins) {
          fromDate = new Date(fromDate.getTime() + 86400000);
          fromAddDate = true;
        }

        if (fromAddDate || toMins <= fromMins || toMins <= nowMins) {
          toDate = new Date(toDate.getTime() + 86400000);
        }

        if (isSupportTheDayAfterTomorrow && fromAddDate && toMins <= fromMins) {
          toDate = new Date(toDate.getTime() + 86400000);
        }
      } else if (!fromEnable && toEnable) {
        if (toMins <= nowMins) {
          toDate = new Date(toDate.getTime() + 86400000);
        }
      } else if (fromEnable && !toEnable) {
        if (fromMins <= nowMins) {
          fromDate = new Date(fromDate.getTime() + 86400000);
        }
      }

      var east8FromDate = getEast8Date(fromDate);
      var east8ToDate = getEast8Date(toDate);
      fromTime = east8FromDate.getMinutes() + ' ' + east8FromDate.getHours() + ' ' + east8FromDate.getDate() + ' ' + (east8FromDate.getMonth() + 1) + ' *';
      toTime = east8ToDate.getMinutes() + ' ' + east8ToDate.getHours() + ' ' + east8ToDate.getDate() + ' ' + (east8ToDate.getMonth() + 1) + ' *';
      return {
        fromTime: fromTime,
        toTime: toTime
      };
    }

    var timeSlotEast8 = getEast8Timespan(timeSlot, fromEnable);
    fromTime = timeSlotEast8.from.min + ' ' + timeSlotEast8.from.hour + ' * * ' + timeSlotEast8.wday.join(',');
    toTime = timeSlotEast8.to.min + ' ' + timeSlotEast8.to.hour + ' * * ' + timeSlotEast8.wday.join(',');

    if (fromEnable && toEnable && fromMins > toMins) {
      var towday = timeSlotEast8.wday;
      towday.map(function (value) {
        return value === 6 ? 0 : value + 1;
      });
      towday.sort(function (a, b) {
        return a - b;
      });
      toTime = timeSlotEast8.to.min + ' ' + timeSlotEast8.to.hour + ' * * ' + towday.join(',');
    }

    return {
      fromTime: fromTime,
      toTime: toTime
    };
  }

  function dateStringToTimestamp(dateString, timeZone) {
    var date = new Date(dateString + ' ' + (timeZone || 'GMT+08:00'));
    var dateTime = parseInt(date.getTime() / 1000, 10);
    return dateTime;
  }

  function timeZoneString2Offset(timeZone) {
    var dateString = new Date().toLocaleDateString();
    var date = new Date(dateString + ' ' + (timeZone || 'GMT+08:00'));
    return new Date(new Date().toLocaleDateString()).getTime() - date.getTime();
  }

  function timeZoneString2BeijingOffset(timeZone) {
    var dateString = _LHDateUtils.default.DateFormat('yyyy/MM/dd', new Date().getTime());

    var date = new Date(dateString + ' ' + (timeZone || 'GMT+08:00'));
    var beijingDate = new Date(dateString + ' GMT+08:00');
    return beijingDate.getTime() - date.getTime();
  }

  var _default = {
    getTimeSpan: getTimeSpan,
    getSceneTimerSpan: getSceneTimerSpan,
    gettimerArrayStr: gettimerArrayStr,
    getTimeSlotToCloud: getTimeSlotToCloud,
    getLocalTimespan: getLocalTimespan,
    getEast8Timespan: getEast8Timespan,
    EVERYDAY: EVERYDAY,
    WEEKDAY: WEEKDAY,
    WORKDAY: WORKDAY,
    DEFAULT_TIME_SPAN: DEFAULT_TIME_SPAN,
    getLocalDate: getLocalDate,
    getEast8Date: getEast8Date,
    dateStringToTimestamp: dateStringToTimestamp,
    timeZoneString2Offset: timeZoneString2Offset,
    timeZoneString2BeijingOffset: timeZoneString2BeijingOffset
  };
  exports.default = _default;
},10241,[14305,10124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHBleUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHBleUtils.default;
  exports.default = _default;
},10244,[14305,10247]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _LHBleDataUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHBleBaseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHStringUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHCommonLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var LHBleUtils = function () {
    function LHBleUtils() {
      (0, _classCallCheck2.default)(this, LHBleUtils);
    }

    (0, _createClass2.default)(LHBleUtils, null, [{
      key: "Init",
      value: function Init(config) {
        if (_LHBleBaseUtils.default.BT) return;

        _LHBleBaseUtils.default.Init(config);

        this.InitListener();
      }
    }, {
      key: "ConnectDevice",
      value: function ConnectDevice(connectCallback, connectTimeout, connectType) {
        return _LHBleBaseUtils.default.ConnectDevice(connectCallback, connectTimeout, connectType);
      }
    }, {
      key: "InitListener",
      value: function InitListener() {
        _LHBleBaseUtils.default.AddBluetoothSeviceDiscoveredListener();

        _LHBleBaseUtils.default.AddBluetoothCharacteristicDiscoveredListener();

        _LHBleDataUtils.default.AddBluetoothCharacteristicValueChangedListener();
      }
    }, {
      key: "DisconnectDevice",
      value: function DisconnectDevice(time) {
        if (_LHBleBaseUtils.default.BT && _LHBleBaseUtils.default.BT.isConnected) _LHBleBaseUtils.default.BT.disconnect(time || 0);
      }
    }, {
      key: "SendMessage",
      value: function SendMessage(cmd, data, fragmentIndex, packageHeader) {
        _LHBleDataUtils.default.SendMessage(cmd, data, fragmentIndex, packageHeader);
      }
    }, {
      key: "StartTimer",
      value: function StartTimer() {
        var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;
        this.SendMessage('4002', '01' + this.ByteReverse(this.To16Hex(time, 4)));
      }
    }, {
      key: "StopTimer",
      value: function StopTimer() {
        this.SendMessage('4002', '00' + this.ByteReverse(this.To16Hex(60, 4)));
      }
    }, {
      key: "To16Hex",
      value: function To16Hex(number, length) {
        return _LHBleDataUtils.default.To16Hex(number, length);
      }
    }, {
      key: "ByteReverse",
      value: function ByteReverse(msg) {
        return _LHBleDataUtils.default.ByteReverse(msg);
      }
    }, {
      key: "IsBleEnabled",
      value: function IsBleEnabled(callback) {
        _miot.Bluetooth.checkBluetoothIsEnabled().then(function (res) {
          callback(res);
        }).catch(function () {});
      }
    }, {
      key: "EnableBluetoothForAndroid",
      value: function EnableBluetoothForAndroid(silence) {
        _miot.Bluetooth.enableBluetoothForAndroid(silence || false);
      }
    }, {
      key: "ShowBLESwitchGuide",
      value: function ShowBLESwitchGuide() {
        _miot.Host.ui.showBLESwitchGuide();
      }
    }, {
      key: "DismissBLESwitchGuide",
      value: function DismissBLESwitchGuide() {
        if (_miot.Host.isIOS) _miot.Host.ui.dismissBLESwitchGuide();
      }
    }, {
      key: "ShowOpenBleGuide",
      value: function ShowOpenBleGuide() {
        if (_miot.Host.isAndroid) {
          this.EnableBluetoothForAndroid();
        } else {
          this.ShowBLESwitchGuide();
        }
      }
    }, {
      key: "ExitPlugin",
      value: function ExitPlugin() {
        this.StartTimer(0);

        _LHBleBaseUtils.default.ExitPlugin();

        _LHBleDataUtils.default.RemoveBluetoothCharacteristicValueChangedListener();
      }
    }, {
      key: "AddBluetoothStatusChangedListener",
      value: function AddBluetoothStatusChangedListener(callback) {
        return _LHBleBaseUtils.default.AddBluetoothStatusChangedListener(callback);
      }
    }, {
      key: "AddConnectionStatusChangedListener",
      value: function AddConnectionStatusChangedListener(callback) {
        return _LHBleBaseUtils.default.AddConnectionStatusChangedListener(callback);
      }
    }, {
      key: "GetBleGateWayConnectStatus",
      value: function GetBleGateWayConnectStatus(callback) {
        _miot.Bluetooth.isBleGatewayConnected(_miot.Device.mac).then(function (res) {
          if (res === 0 || res === true) {
            callback(true);
          } else {
            callback(false);
          }
        }).catch(function () {
          callback(false);
        });
      }
    }, {
      key: "GetBtGateWaySubDeviceRSSI",
      value: function GetBtGateWaySubDeviceRSSI() {
        return _miot.Bluetooth.getBtGateWaySubDeviceRSSI(_miot.Device.mac);
      }
    }, {
      key: "GetRSSILevel",
      value: function GetRSSILevel(RSSI) {
        var defaultRSSI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '--';

        if (RSSI === defaultRSSI) {
          return defaultRSSI;
        } else if (RSSI < -100) {
          return 4;
        } else if (RSSI < -90) {
          return 3;
        } else if (RSSI < -70) {
          return 2;
        } else if (RSSI < -50) {
          return 1;
        } else if (RSSI <= 0) {
          return 0;
        }

        return defaultRSSI;
      }
    }, {
      key: "CheckConnect",
      value: function CheckConnect(callback) {
        var _this = this;

        this.GetBleGateWayConnectStatus(function (connected) {
          if (connected) {
            callback({
              code: 0,
              type: 'bleGateWay'
            });
          } else {
            _this.ConnectDevice(callback);
          }
        });
      }
    }, {
      key: "SetDeviceConnectStatus",
      value: function SetDeviceConnectStatus(status) {
        this.DeviceConnectStatus = status;
      }
    }, {
      key: "GetVersion",
      value: function GetVersion(callback) {
        _LHBleBaseUtils.default.BT.getVersion(true, false).then(function (version) {
          if (typeof callback === 'function') callback(version);
        });
      }
    }, {
      key: "ReportVersion",
      value: function ReportVersion(version) {
        var params = {
          did: _miot.Device.deviceID,
          fw_ver: version
        };
        return _miot.Service.smarthome.reportBLEDeviceInfo(params);
      }
    }, {
      key: "ReportVersionToServer",
      value: function ReportVersionToServer() {
        var _this2 = this;

        this.GetVersion(function (version) {
          if (version) _this2.ReportVersion(version);
        });
      }
    }, {
      key: "GetLatestVersion",
      value: function GetLatestVersion(callback) {
        _miot.Service.smarthome.getLatestVersionV2(_miot.Device.deviceID).then(function (response) {
          if (callback && typeof callback === 'function') {
            callback(response);
          }
        }).catch(function (err) {
          if (callback && typeof callback === 'function') {
            callback(null);
          }
        });
      }
    }, {
      key: "CheckIsLatestVersion",
      value: function CheckIsLatestVersion(callback) {
        var _this3 = this;

        this.GetVersion(function (curVersion) {
          _this3.ReportVersion(curVersion).then(function (res) {
            if (res && res.code === 0) {
              _this3.GetLatestVersion(function (response) {
                if (response) {
                  if (typeof callback === 'function') callback(_LHStringUtils.default.deviceVersionCompare(curVersion, response.version));
                }
              });
            }
          });
        });
      }
    }, {
      key: "GetSendCmds",
      value: function GetSendCmds() {
        return _LHBleDataUtils.default.SendCmds;
      }
    }, {
      key: "GetReceiveCmds",
      value: function GetReceiveCmds() {
        return _LHBleDataUtils.default.ReceiveCmds;
      }
    }, {
      key: "GetConnectFailDatas",
      value: function GetConnectFailDatas() {
        return _LHBleBaseUtils.default.ConnectFailDatas;
      }
    }, {
      key: "GetConfig",
      value: function GetConfig() {
        return _LHBleBaseUtils.default.Config;
      }
    }]);
    return LHBleUtils;
  }();

  exports.default = LHBleUtils;
  LHBleUtils.ConnectedStatusKey = 'connected';
  LHBleUtils.NotConnectedStatusKey = 'notConnected';
  LHBleUtils.ConnectingStatusKey = 'connecting';
  LHBleUtils.DeviceConnectStatus = 'connecting';
},10247,[14305,14320,14323,10074,10250,10253,10175,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _LHBleBaseUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var LHBleDataUtils = function () {
    function LHBleDataUtils() {
      (0, _classCallCheck2.default)(this, LHBleDataUtils);
    }

    (0, _createClass2.default)(LHBleDataUtils, null, [{
      key: "AddBluetoothCharacteristicValueChangedListener",
      value: function AddBluetoothCharacteristicValueChangedListener() {
        var _this = this;

        this.bluetoothCharacteristicValueChanged = _miot.BluetoothEvent.bluetoothCharacteristicValueChanged.addListener(function _callee(bluetooth, service, character, value) {
          return _regenerator.default.async(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!(character.UUID.toUpperCase() === _LHBleBaseUtils.default.Config.LUMI_READ_UUID_NOTIFY.toUpperCase())) {
                    _context.next = 3;
                    break;
                  }

                  _context.next = 3;
                  return _regenerator.default.awrap(_this.DecryptMessage(value, function (msg) {
                    _this.ReceiveCmds.push({
                      cmd: msg,
                      time: new Date().getTime()
                    });

                    _this.DealBluetoothData(msg);
                  }));

                case 3:
                case "end":
                  return _context.stop();
              }
            }
          });
        });
      }
    }, {
      key: "RemoveBluetoothCharacteristicValueChangedListener",
      value: function RemoveBluetoothCharacteristicValueChangedListener() {
        if (this.bluetoothCharacteristicValueChanged) {
          this.bluetoothCharacteristicValueChanged.remove();
          this.bluetoothCharacteristicValueChanged = null;
        }
      }
    }, {
      key: "EmitResult",
      value: function EmitResult(type, code, cmd) {
        var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
        var fragmentIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
        this.CmdReceive(type, cmd);

        _reactNative.DeviceEventEmitter.emit('BLE_DATA', {
          fragmentIndex: fragmentIndex,
          type: type,
          code: code,
          data: data,
          cmd: cmd
        });
      }
    }, {
      key: "DealBluetoothData",
      value: function DealBluetoothData(msg) {
        var upperMsg = (msg || '').toUpperCase();
        var packageType = upperMsg.substr(0, 2);
        var packageIndex = upperMsg.substr(2, 2);
        var type = packageType === 'DA' ? 'receive' : 'report';

        if (packageIndex === '00') {
          var cmd = this.ByteReverse(msg.substr(6, 4));
          var code = parseInt(upperMsg.substr(16, 2), 16);

          if (code === 0) {
            this.InitBleDataReceiveConfig(upperMsg, type);
          } else {
            this.EmitResult(type, code, cmd, '', 1);
          }
        } else if (packageIndex === 'FF') {
          var packageLength = parseInt(this.ByteReverse(upperMsg.substr(14, 4)), 16);

          if (packageLength === 0) {
            this.EmitResult(type, parseInt(msg.substr(18, 4), 16), this.ByteReverse(upperMsg.substr(6, 4)), '', parseInt(this.ByteReverse(upperMsg.substr(10, 4)), 16));
          } else {
            var packageContent = upperMsg.substr(4);
            this[type + 'Data'].push(packageContent);
            var fragmentContent = this[type + 'Data'].join('');

            if (fragmentContent.length === this[type + 'PackageLength'] * 2) {
              this.EmitResult(type, 0, this[type + 'Cmd'], fragmentContent, this[type + 'FragmentIndex']);
            } else {
              this.EmitResult(type, this[type + 'Code'], this[type + 'Cmd'], '', this[type + 'FragmentIndex']);
            }

            this[type + 'Data'] = [];
          }
        } else {
          var _packageContent = upperMsg.substr(4);

          this[type + 'Data'].push(_packageContent);
        }
      }
    }, {
      key: "InitBleDataReceiveConfig",
      value: function InitBleDataReceiveConfig(msg, type) {
        var packageLength = parseInt(this.ByteReverse(msg.substr(14, 4)), 16);
        var fragmentIndex = parseInt(this.ByteReverse(msg.substr(10, 4)), 16);
        var cmd = this.ByteReverse(msg.substr(6, 4));
        var crc16 = this.ByteReverse(msg.substr(18, 4));
        var code = parseInt(msg.substr(18, 4), 16);
        this[type + 'Data'] = [];
        this[type + 'PackageLength'] = packageLength;
        this[type + 'FragmentIndex'] = fragmentIndex;
        this[type + 'Crc16'] = crc16;
        this[type + 'Cmd'] = cmd;
        this[type + 'Code'] = code;
      }
    }, {
      key: "EncryptMessage",
      value: function EncryptMessage(decryptedMsg, callback) {
        return _regenerator.default.async(function EncryptMessage$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!_LHBleBaseUtils.default.BT) {
                  _context2.next = 3;
                  break;
                }

                _context2.next = 3;
                return _regenerator.default.awrap(_LHBleBaseUtils.default.BT.securityLock.encryptMessage(decryptedMsg).then(function (decrypted) {
                  callback(decrypted);
                  return decrypted;
                }).catch(function (err) {}));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        });
      }
    }, {
      key: "DecryptMessage",
      value: function DecryptMessage(decryptedMsg, callback) {
        return _regenerator.default.async(function DecryptMessage$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!_LHBleBaseUtils.default.BT) {
                  _context3.next = 3;
                  break;
                }

                _context3.next = 3;
                return _regenerator.default.awrap(_LHBleBaseUtils.default.BT.securityLock.decryptMessage(decryptedMsg).then(function (decrypted) {
                  callback(decrypted);
                  return decrypted;
                }).catch(function (err) {}));

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        });
      }
    }, {
      key: "SendMessageWithEncrypt",
      value: function SendMessageWithEncrypt(value) {
        var _this2 = this;

        return _regenerator.default.async(function SendMessageWithEncrypt$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(_LHBleBaseUtils.default.BT && _LHBleBaseUtils.default.BT.isConnected)) {
                  _context4.next = 3;
                  break;
                }

                _context4.next = 3;
                return _regenerator.default.awrap(this.EncryptMessage(value, function (msg) {
                  _this2.SendCmds.push({
                    cmd: value,
                    time: new Date().getTime()
                  });

                  _this2.WriteWithoutResponse(msg);
                }, function (err) {}));

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "SendMessage",
      value: function SendMessage(cmd) {
        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var fragmentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'FFFF';
        var packageHeader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '5A';
        var cmds = [];
        var encryptFlag = '00';
        var packageIndex = 'FF';
        var fragmentLength = '0000';
        var crc = '0000';
        var dataLength = data.length;

        if (dataLength > 0) {
          packageIndex = '00';
          fragmentLength = this.ByteReverse(this.To16Hex(dataLength / 2, 4));
          crc = _LHCommonMethod.default.CRC16String(data);
        }

        var str = packageHeader + packageIndex + encryptFlag + this.ByteReverse(cmd) + fragmentIndex + fragmentLength + crc;
        cmds.push(str.toUpperCase());

        if (dataLength > 0) {
          var packageContentLength = 36;
          var lastPackageIndex = Math.ceil(dataLength / packageContentLength);

          for (var i = 0; i < dataLength; i += packageContentLength) {
            var msg = data.substr(i, packageContentLength);
            var curPackageIndex = 1 + i / packageContentLength;

            if (lastPackageIndex === curPackageIndex) {
              packageIndex = 'FF';
            } else {
              packageIndex = curPackageIndex.toString(16);
            }

            var strMsg = packageHeader + packageIndex + msg;
            cmds.push(strMsg.toUpperCase());
          }
        }

        this.CmdsQueue.push({
          cmd: cmd,
          cmds: cmds
        });
        this.CheckCmdsQueue();
      }
    }, {
      key: "CheckCmdsQueue",
      value: function CheckCmdsQueue() {
        var cmdData, cmds, i, len;
        return _regenerator.default.async(function CheckCmdsQueue$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(this.CmdsQueue.length > 0)) {
                  _context5.next = 13;
                  break;
                }

                if (this.CurrentCmd) {
                  _context5.next = 13;
                  break;
                }

                cmdData = this.CmdsQueue.shift();
                this.CurrentCmd = cmdData.cmd;
                cmds = cmdData.cmds;
                i = 0, len = cmds.length;

              case 6:
                if (!(i < len)) {
                  _context5.next = 12;
                  break;
                }

                _context5.next = 9;
                return _regenerator.default.awrap(this.SendMessageWithEncrypt(cmds[i]));

              case 9:
                i += 1;
                _context5.next = 6;
                break;

              case 12:
                this.setCmdTimeout();

              case 13:
              case "end":
                return _context5.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "CmdReceive",
      value: function CmdReceive(type, cmd) {
        if (type === 'receive' && cmd.toUpperCase() === this.CurrentCmd.toUpperCase()) {
          this.CurrentCmd = null;
          this.clearCmdTimeout();
          this.CheckCmdsQueue();
        }
      }
    }, {
      key: "setCmdTimeout",
      value: function setCmdTimeout(time) {
        var _this3 = this;

        if (this.cmdTimeoutId) {
          this.clearCmdTimeout();
        }

        this.cmdTimeoutId = setTimeout(function () {
          _this3.CurrentCmd = null;

          _this3.CheckCmdsQueue();
        }, time || 2000);
      }
    }, {
      key: "clearCmdTimeout",
      value: function clearCmdTimeout() {
        if (this.cmdTimeoutId) {
          clearTimeout(this.cmdTimeoutId);
          this.cmdTimeoutId = null;
        }
      }
    }, {
      key: "To16Hex",
      value: function To16Hex(number, length) {
        var hex = number.toString(16);

        for (var i = hex.length; i < length; i += 1) {
          hex = '0' + hex;
        }

        return hex;
      }
    }, {
      key: "ByteReverse",
      value: function ByteReverse(msg) {
        var result = [];

        for (var i = 0, len = msg.length; i < len; i += 2) {
          result.push(msg.substr(i, 2));
        }

        result.reverse();
        return result.join('');
      }
    }, {
      key: "WriteWithoutResponse",
      value: function WriteWithoutResponse(value, isOta) {
        var characteristic = _LHBleBaseUtils.default.Characteristic[isOta ? _LHBleBaseUtils.default.Config.OTA_WRITE_UUID_NOTIFY : _LHBleBaseUtils.default.Config.LUMI_WRITE_UUID_NOTIFY];

        if (characteristic) {
          characteristic.writeWithoutResponse(value);
        }
      }
    }, {
      key: "Sleep",
      value: function Sleep(time) {
        var startTime = new Date().getTime();

        while (new Date().getTime() - startTime < time) {}
      }
    }]);
    return LHBleDataUtils;
  }();

  exports.default = LHBleDataUtils;
  LHBleDataUtils.ReceiveCmds = [];
  LHBleDataUtils.SendCmds = [];
  LHBleDataUtils.receiveCode = -1;
  LHBleDataUtils.receiveCmd = '';
  LHBleDataUtils.receiveData = [];
  LHBleDataUtils.receivePackageLength = 0;
  LHBleDataUtils.receiveFragmentIndex = 0;
  LHBleDataUtils.receiveCrc16 = '';
  LHBleDataUtils.reportCode = -1;
  LHBleDataUtils.reportCmd = '';
  LHBleDataUtils.reportData = [];
  LHBleDataUtils.reportPackageLength = 0;
  LHBleDataUtils.reportFragmentIndex = 0;
  LHBleDataUtils.reportCrc16 = '';
  LHBleDataUtils.CurrentCmd = null;
  LHBleDataUtils.CmdsQueue = [];
},10250,[14305,14674,14320,14323,10074,10033,10253,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var _LHCommonMethod = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var LHBleBaseUtils = function () {
    function LHBleBaseUtils() {
      (0, _classCallCheck2.default)(this, LHBleBaseUtils);
    }

    (0, _createClass2.default)(LHBleBaseUtils, null, [{
      key: "Init",
      value: function Init(config) {
        this.BT = _miot.Device.getBluetoothLE();
        (0, _extends2.default)(this.Config, config || {});
        this.InitListener();
      }
    }, {
      key: "ConnectDevice",
      value: function ConnectDevice(connectCallback, connectTimeout, connectType) {
        if (!this.Config.LUMI_UUID_SERVICE) {
          return false;
        }

        if (typeof connectCallback === 'function') {
          this.connectCallback.push(connectCallback);
        }

        this.connectTimeout = connectTimeout || 30000;
        this.connectType = connectType || 4;
        if (this.lastConnectIsFinsh) this.Connect();
        return true;
      }
    }, {
      key: "ConnectDeviceCallback",
      value: function ConnectDeviceCallback(result) {
        this.clearConnectingTimeoutId();

        if (this.connectCallback) {
          for (var i = 0, len = this.connectCallback.length; i < len; i += 1) {
            this.connectCallback[i](result || {});
          }

          this.connectCallback = [];
        }

        this.lastConnectIsFinsh = true;
      }
    }, {
      key: "SetTimeout",
      value: function SetTimeout(key, timeoutFn, time) {
        var _this = this;

        this.ClearTimeout(key);
        this.TimeoutIdMManager[key] = setTimeout(function () {
          delete _this.TimeoutIdMManager[key];
          if (typeof timeoutFn === 'function') timeoutFn();
        }, time || 0);
      }
    }, {
      key: "ClearTimeout",
      value: function ClearTimeout(key) {
        if (this.TimeoutIdMManager[key]) {
          clearTimeout(this.TimeoutIdMManager[key]);
          delete this.TimeoutIdMManager[key];
        }
      }
    }, {
      key: "ClearAllTimer",
      value: function ClearAllTimer() {
        var keys = Object.keys(this.TimeoutIdMManager);

        for (var i = 0, len = keys.length; i < len; i += 1) {
          this.ClearTimeout(keys[i]);
        }
      }
    }, {
      key: "InitListener",
      value: function InitListener() {
        this.AddBluetoothSeviceDiscoveredListener();
        this.AddBluetoothCharacteristicDiscoveredListener();
      }
    }, {
      key: "RemoveListener",
      value: function RemoveListener() {
        var keys = Object.keys(this.ListenerIdMManager);

        for (var i = 0, len = keys.length; i < len; i += 1) {
          if (this.ListenerIdMManager[keys[i]] && typeof this.ListenerIdMManager[keys[i]].remove === 'function') {
            this.ListenerIdMManager[keys[i]].remove();
            delete this.ListenerIdMManager[keys[i]];
          }
        }
      }
    }, {
      key: "AddBluetoothSeviceDiscoveredListener",
      value: function AddBluetoothSeviceDiscoveredListener() {
        var _this2 = this;

        this.ListenerIdMManager.bluetoothSeviceDiscovered = _miot.BluetoothEvent.bluetoothSeviceDiscovered.addListener(function (blut, services) {
          if (services.length <= 0) {
            return;
          }

          if (_this2.BT.isConnected) {
            services.forEach(function (s) {
              if (s.UUID.toUpperCase().indexOf(_this2.Config.LUMI_UUID_SERVICE.toUpperCase()) > -1) {
                s.startDiscoverCharacteristics();
              }
            });
          }
        });
      }
    }, {
      key: "AddBluetoothCharacteristicDiscoveredListener",
      value: function AddBluetoothCharacteristicDiscoveredListener() {
        var _this3 = this;

        this.ListenerIdMManager.bluetoothCharacteristicDiscovered = _miot.BluetoothEvent.bluetoothCharacteristicDiscovered.addListener(function (bluetooth, service, characters) {
          if (_this3.BT.isConnected) {
            var flag = false;
            characters.forEach(function (c) {
              var UUID = c.UUID.toUpperCase();

              if (UUID === _this3.Config.LUMI_READ_UUID_NOTIFY.toUpperCase() || UUID === _this3.Config.OTA_READ_UUID_NOTIFY.toUpperCase()) {
                c.setNotify(true);
                flag = true;
              } else if (UUID === _this3.Config.LUMI_WRITE_UUID_NOTIFY.toUpperCase() || UUID === _this3.Config.OTA_WRITE_UUID_NOTIFY.toUpperCase()) {
                _this3.Characteristic[UUID] = c;
                flag = true;
              }
            });

            if (flag && _miot.Host.isIOS) {
              _this3.ConnectDeviceCallback({
                code: 0,
                msg: '连接成功'
              });
            }
          }
        });
      }
    }, {
      key: "SetConnectFailDatas",
      value: function SetConnectFailDatas(data) {
        this.ConnectFailDatas.push({
          time: new Date().getTime(),
          data: JSON.stringify(data)
        });
      }
    }, {
      key: "clearConnectingTimeoutId",
      value: function clearConnectingTimeoutId() {
        if (this.connectingTimeoutId) {
          clearTimeout(this.connectingTimeoutId);
          this.connectingTimeoutId = null;
        }
      }
    }, {
      key: "Connect",
      value: function Connect() {
        var _this4 = this;

        this.lastConnectIsFinsh = false;

        if (this.BT.isConnected) {
          this.DisconnectDevice();
          var data = {
            code: -1,
            msg: 'last status isConnected'
          };
          this.SetConnectFailDatas(data);
          this.ConnectDeviceCallback(data);
        } else if (this.BT.isConnecting) {
          this.clearConnectingTimeoutId();
          this.connectingTimeoutId = setTimeout(function () {
            _this4.connectingTimeoutId = null;
            var data = {
              code: 999999,
              msg: 'connect timeout'
            };

            _this4.SetConnectFailDatas(data);

            _this4.ConnectDeviceCallback(data);
          }, 30000);
        } else {
          this.lastConnectIsFinsh = false;
          var startTime = new Date().getTime();
          this.StartConnectTimeout(startTime);
          this.BT.connect(this.connectType, {
            timeout: this.connectTimeout
          }).then(function (data) {
            _this4.ClearTimeout(_this4.ConnectTimeoutKey);

            if (_miot.Host.isAndroid) {
              if (data.code === 0) {
                _this4.ConnectDeviceCallback({
                  code: 0,
                  msg: '连接成功'
                });
              } else {
                _this4.SetConnectFailDatas(data);

                _this4.ConnectDeviceCallback(data);
              }
            } else {
              _this4.BT.startDiscoverServices();
            }
          }).catch(function (data) {
            _this4.ClearTimeout(_this4.ConnectTimeoutKey);

            _this4.SetConnectFailDatas(data);

            _this4.ConnectDeviceCallback({
              code: 9999,
              msg: 'connect timeout'
            });
          });
        }
      }
    }, {
      key: "StartConnectTimeout",
      value: function StartConnectTimeout(startTime) {
        var _this5 = this;

        var key = this.ConnectTimeoutKey;
        this.SetTimeout(key, function () {
          delete _this5.TimeoutIdMManager[key];

          if (new Date().getTime() - startTime < _this5.connectTimeout + 5000) {
            _this5.StartConnectTimeout(startTime);
          } else {
            var data = {
              code: 99999,
              msg: 'connect timeout'
            };

            _this5.SetConnectFailDatas(data);

            _this5.ConnectDeviceCallback(data);
          }
        }, 1000);
      }
    }, {
      key: "DisconnectDevice",
      value: function DisconnectDevice(time) {
        if (this.BT && this.BT.isConnected) this.BT.disconnect(time || 0);
      }
    }, {
      key: "ExitPlugin",
      value: function ExitPlugin() {
        this.ClearAllTimer();
        this.DisconnectDevice();
        this.RemoveListener();
      }
    }, {
      key: "AddBluetoothStatusChangedListener",
      value: function AddBluetoothStatusChangedListener(callback) {
        var key = 'StatusChangedListener_' + new Date().getTime() + _LHCommonMethod.default.RandomNum(1, 1000);

        this.ListenerIdMManager[key] = _miot.BluetoothEvent.bluetoothStatusChanged.addListener(function (status) {
          if (typeof callback === 'function') callback(status);
        });
        return this.GetReturnObject(key);
      }
    }, {
      key: "AddConnectionStatusChangedListener",
      value: function AddConnectionStatusChangedListener(callback) {
        var key = 'bluetoothConnectionStatusChangedListener_' + new Date().getTime() + _LHCommonMethod.default.RandomNum(1, 1000);

        this.ListenerIdMManager[key] = _miot.BluetoothEvent.bluetoothConnectionStatusChanged.addListener(function (ble, isConnected) {
          if (typeof callback === 'function') callback(isConnected);
        });
        return this.GetReturnObject(key);
      }
    }, {
      key: "GetReturnObject",
      value: function GetReturnObject(key) {
        var _this6 = this;

        return {
          remove: function remove() {
            if (_this6.ListenerIdMManager[key] && typeof _this6.ListenerIdMManager[key].remove === 'function') _this6.ListenerIdMManager[key].remove();
            delete _this6.ListenerIdMManager[key];
          }
        };
      }
    }]);
    return LHBleBaseUtils;
  }();

  exports.default = LHBleBaseUtils;
  LHBleBaseUtils.Config = {
    LUMI_UUID_SERVICE: '',
    LUMI_READ_UUID_NOTIFY: '',
    LUMI_WRITE_UUID_NOTIFY: '',
    OTA_WRITE_UUID_NOTIFY: '',
    OTA_READ_UUID_NOTIFY: ''
  };
  LHBleBaseUtils.BT = null;
  LHBleBaseUtils.TimeoutIdMManager = {};
  LHBleBaseUtils.ListenerIdMManager = {};
  LHBleBaseUtils.Characteristic = {};
  LHBleBaseUtils.ScanDeviceTimeoutKey = 'scanDevice';
  LHBleBaseUtils.connectCallback = [];
  LHBleBaseUtils.lastConnectIsFinsh = true;
  LHBleBaseUtils.ConnectFailDatas = [];
  LHBleBaseUtils.connectingTimeoutId = null;
  LHBleBaseUtils.ConnectTimeoutKey = 'connectTimeoutKey';
},10253,[14305,14344,14320,14323,10074,10019]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDebugConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDebugConfig.default;
  exports.default = _default;
},10256,[14305,10259]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var LHDebugConfig = function () {
    function LHDebugConfig() {
      (0, _classCallCheck2.default)(this, LHDebugConfig);
    }

    (0, _createClass2.default)(LHDebugConfig, null, [{
      key: "OffDebug",
      value: function OffDebug(isOff) {
        var off = isOff || true;

        if (off) {
          global.console.info = function () {};

          global.console.log = function () {};

          global.console.warn = function () {};

          global.console.debug = function () {};

          global.console.error = function () {};

          global.console.assert = function () {};
        }
      }
    }, {
      key: "consoleScene",
      value: function consoleScene(scene) {
        var authorizedDeviceIDs = scene.authorizedDeviceIDs,
            createTime = scene.createTime,
            deviceID = scene.deviceID,
            identify = scene.identify,
            isArtificial = scene.isArtificial,
            isAutomatic = scene.isAutomatic,
            isNew = scene.isNew,
            isTimer = scene.isTimer,
            name = scene.name,
            sceneID = scene.sceneID,
            setting = scene.setting,
            status = scene.status,
            type = scene.type;
        var json = {
          authorizedDeviceIDs: authorizedDeviceIDs,
          createTime: createTime,
          deviceID: deviceID,
          identify: identify,
          isArtificial: isArtificial,
          isAutomatic: isAutomatic,
          isNew: isNew,
          isTimer: isTimer,
          name: name,
          sceneID: sceneID,
          setting: setting,
          status: status,
          type: type
        };
      }
    }, {
      key: "consoleSceneArray",
      value: function consoleSceneArray(sceneArray) {
        var _this = this;

        sceneArray.forEach(function (scene) {
          _this.consoleScene(scene);
        });
      }
    }]);
    return LHDebugConfig;
  }();

  exports.default = LHDebugConfig;
},10259,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[1]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[2]);

  var _Stores = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _LHMainPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHLabSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHLogPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHGuardSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHGuardTypePage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var store = (0, _Stores.default)();
  var APP = (0, _LHCommonUI.LHInitPage)({
    LHMainPage: _LHMainPage.default,
    LHSettingPage: _LHSettingPage.default,
    LHLogPage: _LHLogPage.default,
    LHGuardSettingPage: _LHGuardSettingPage.default,
    LHGuardTypePage: _LHGuardTypePage.default,
    LHSubDevicesListPage: _LHCommonUI.LHSubDevicesListPage,
    LHMoreSettingPage: _LHCommonUI.LHMoreSettingPage,
    LHAlarmTriggleDevicePage: _LHCommonUI.LHAlarmTriggleDevicePage,
    LHBleGatewayMeshPage: _LHCommonUI.LHBleGatewayMeshPage,
    LHLabSettingPage: _LHLabSettingPage.default,
    FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
    FirmwareUpgradeAuto: _CommonSetting.FirmwareUpgradeAuto,
    FirmwareUpgradeRecord: _CommonSetting.FirmwareUpgradeRecord
  }, 'LHMainPage', store);
  var _default = APP;
  exports.default = _default;
},10262,[14305,10265,10353,11117,11303,11690,11693,11696,11699,11702]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "LHInitPage", {
    enumerable: true,
    get: function get() {
      return _LHInitPage.default;
    }
  });
  Object.defineProperty(exports, "LHTitleBarCustom", {
    enumerable: true,
    get: function get() {
      return _LHTitleBarCustom.default;
    }
  });
  Object.defineProperty(exports, "LHImageButton", {
    enumerable: true,
    get: function get() {
      return _LHImageButton.default;
    }
  });
  Object.defineProperty(exports, "LHSeparator", {
    enumerable: true,
    get: function get() {
      return _LHSeparator.default;
    }
  });
  Object.defineProperty(exports, "LHMessageDialog", {
    enumerable: true,
    get: function get() {
      return _LHMessageDialog.default;
    }
  });
  Object.defineProperty(exports, "LHText", {
    enumerable: true,
    get: function get() {
      return _LHText.default;
    }
  });
  Object.defineProperty(exports, "LHSubDevicesListPage", {
    enumerable: true,
    get: function get() {
      return _LHSubDevicesListPage.default;
    }
  });
  Object.defineProperty(exports, "LHStandardListSwipeout", {
    enumerable: true,
    get: function get() {
      return _LHStandardListSwipeout.default;
    }
  });
  Object.defineProperty(exports, "LHStandardCell", {
    enumerable: true,
    get: function get() {
      return _LHStandardCell.default;
    }
  });
  Object.defineProperty(exports, "LHPlaceHolderImage", {
    enumerable: true,
    get: function get() {
      return _LHPlaceHolderImage.default;
    }
  });
  Object.defineProperty(exports, "LHSwitch", {
    enumerable: true,
    get: function get() {
      return _LHSwitch.default;
    }
  });
  Object.defineProperty(exports, "LHSwipeoutButton", {
    enumerable: true,
    get: function get() {
      return _LHSwipeoutButton.default;
    }
  });
  Object.defineProperty(exports, "LHCommonIcon", {
    enumerable: true,
    get: function get() {
      return _LHCommonIcon.default;
    }
  });
  Object.defineProperty(exports, "Swipeout", {
    enumerable: true,
    get: function get() {
      return _Swipeout.default;
    }
  });
  Object.defineProperty(exports, "LHCommonStyles", {
    enumerable: true,
    get: function get() {
      return _LHCommonStyles.default;
    }
  });
  Object.defineProperty(exports, "LHBottomButtonGroup", {
    enumerable: true,
    get: function get() {
      return _LHBottomButtonGroup.default;
    }
  });
  Object.defineProperty(exports, "LHMoreSettingPage", {
    enumerable: true,
    get: function get() {
      return _LHMoreSettingPage.default;
    }
  });
  Object.defineProperty(exports, "LHStandardList", {
    enumerable: true,
    get: function get() {
      return _LHStandardList.default;
    }
  });
  Object.defineProperty(exports, "LHBleGatewayMeshPage", {
    enumerable: true,
    get: function get() {
      return _LHBleGatewayMeshPage.default;
    }
  });
  Object.defineProperty(exports, "LHRequestDataContainer", {
    enumerable: true,
    get: function get() {
      return _LHRequestDataContainer.default;
    }
  });
  Object.defineProperty(exports, "LHStandardLog", {
    enumerable: true,
    get: function get() {
      return _LHStandardLog.default;
    }
  });
  Object.defineProperty(exports, "LHStandardLogUI", {
    enumerable: true,
    get: function get() {
      return _LHStandardLogUI.default;
    }
  });
  Object.defineProperty(exports, "LHStandardEmpty", {
    enumerable: true,
    get: function get() {
      return _LHStandardEmpty.default;
    }
  });
  Object.defineProperty(exports, "LHAlarmTriggleDevicePage", {
    enumerable: true,
    get: function get() {
      return _LHAlarmTriggleDevicePage.default;
    }
  });
  Object.defineProperty(exports, "LHCardBase", {
    enumerable: true,
    get: function get() {
      return _LHCardBase.default;
    }
  });
  Object.defineProperty(exports, "LHSelectCard", {
    enumerable: true,
    get: function get() {
      return _LHSelectCard.default;
    }
  });
  Object.defineProperty(exports, "LHStringModalPicker", {
    enumerable: true,
    get: function get() {
      return _LHStringModalPicker.default;
    }
  });
  Object.defineProperty(exports, "AlertTimeItem", {
    enumerable: true,
    get: function get() {
      return _AlertTimeItem.default;
    }
  });
  Object.defineProperty(exports, "LHCommonSettingPage", {
    enumerable: true,
    get: function get() {
      return _LHCommonSettingPage.default;
    }
  });

  var _LHInitPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LHMessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _LHSubDevicesListPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _LHStandardListSwipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHStandardCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHPlaceHolderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHSwipeoutButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Swipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHCommonStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHBottomButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHMoreSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _LHBleGatewayMeshPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _LHRequestDataContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LHStandardLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _LHStandardLogUI = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _LHStandardEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _LHAlarmTriggleDevicePage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _LHCardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _LHSelectCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _LHStringModalPicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _AlertTimeItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _LHCommonSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));
},10265,[14305,10268,10883,10889,10847,10991,10871,11015,10925,10349,10853,10859,10919,10895,10931,11027,10955,11033,10343,11039,11045,10973,10979,10946,11051,11078,11093,11099,11105,11111]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _index.default;
  exports.default = _default;
},10268,[14305,10271]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = LHInitPage;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _reactRedux = _$$_REQUIRE(_dependencyMap[11]);

  var _ui = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[15]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[16]);

  var _LHDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHMessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _NewCustomSingleChooseDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _NewCustomMessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  if (_miot.DarkMode) {
    _miot.DarkMode.preparePluginOwnDarkMode();
  }

  var debugPages = _LHCommonFunction.LHAppiumUtils.isWhiteList ? (0, _objectSpread2.default)({
    LHDebugPage: _LHDebugPage.default,
    MoreSetting: _CommonSetting.MoreSetting
  }, _LHDebugPage.default.SubDebugPages) : {};

  function LHInitPage(pageConfig, initialRouteName, store) {
    var initialRouteParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var subStores = arguments.length > 4 ? arguments[4] : undefined;
    var RootStack = (0, _reactNavigation.createStackNavigator)((0, _extends2.default)({}, pageConfig, debugPages), {
      headerMode: 'screen',
      transitionConfig: function transitionConfig() {
        return {
          transitionSpec: _reactNavigation.StackViewTransitionConfigs.SlideFromRightIOS.transitionSpec,
          screenInterpolator: _reactNavigation.StackViewTransitionConfigs.SlideFromRightIOS.screenInterpolator
        };
      },
      initialRouteName: initialRouteName,
      initialRouteParams: initialRouteParams,
      navigationOptions: function navigationOptions() {
        return {
          header: null
        };
      }
    });

    var App = function (_React$Component) {
      (0, _inherits2.default)(App, _React$Component);

      function App(props, context) {
        var _this;

        (0, _classCallCheck2.default)(this, App);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).call(this, props, context));
        var isDark = _miot.DarkMode && _miot.DarkMode.getColorScheme() === 'dark';
        _this.state = {
          MessageDialogObject: {},
          LoadingDialogObject: {},
          InputDialogObject: {},
          NewInputDialogObject: {},
          SingleChoseDialogObject: {},
          CustomSingleChooseObj: {},
          ConfirmDialogObject: {},
          isDark: isDark
        };

        _this.bindListener();

        return _this;
      }

      (0, _createClass2.default)(App, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.MessageDialogListener.remove();
          this.LoadingDialogListener.remove();
          this.InputDialogListener.remove();
          this.SingleChoseDialogListener.remove();
          this.customSingleChoseDialogListener.remove();
          this.NewInputDialogListener.remove();
          this.confirmDialogListener.remove();
        }
      }, {
        key: "bindListener",
        value: function bindListener() {
          var _this2 = this;

          this.MessageDialogListener = _reactNative.DeviceEventEmitter.addListener('LHMessageDialog', function (MessageDialogConfig) {
            _this2.setState({
              MessageDialogObject: MessageDialogConfig
            });
          });
          this.LoadingDialogListener = _reactNative.DeviceEventEmitter.addListener('LHLoadingDialog', function (LoadingDialogConfig) {
            _this2.setState({
              LoadingDialogObject: LoadingDialogConfig
            });
          });
          this.InputDialogListener = _reactNative.DeviceEventEmitter.addListener('LHInputDialog', function (InputDialogConfig) {
            _this2.setState({
              InputDialogObject: InputDialogConfig
            });
          });
          this.SingleChoseDialogListener = _reactNative.DeviceEventEmitter.addListener('SingleChoseDialog', function (SingleChoseDialogConfig) {
            _this2.setState({
              SingleChoseDialogObject: SingleChoseDialogConfig
            });
          });
          this.NewInputDialogListener = _reactNative.DeviceEventEmitter.addListener('LHNewInputDialog', function (NewInputDialogConfig) {
            _this2.setState({
              NewInputDialogObject: NewInputDialogConfig
            });
          });
          this.customSingleChoseDialogListener = _reactNative.DeviceEventEmitter.addListener('CustomSingleChose', function (SingleChoseDialogConfig) {
            _this2.setState({
              CustomSingleChooseObj: SingleChoseDialogConfig
            });
          });
          this.confirmDialogListener = _reactNative.DeviceEventEmitter.addListener('LHConfirmDialog', function (ConfirmDialogConfig) {
            _this2.setState({
              ConfirmDialogObject: ConfirmDialogConfig
            });
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;

          var _this$state = this.state,
              MessageDialogObject = _this$state.MessageDialogObject,
              LoadingDialogObject = _this$state.LoadingDialogObject,
              InputDialogObject = _this$state.InputDialogObject,
              SingleChoseDialogObject = _this$state.SingleChoseDialogObject,
              NewInputDialogObject = _this$state.NewInputDialogObject,
              CustomSingleChooseObj = _this$state.CustomSingleChooseObj,
              ConfirmDialogObject = _this$state.ConfirmDialogObject,
              isDark = _this$state.isDark;

          var loadingDialog = _react.default.createElement(_LoadingDialog.default, {
            isDark: isDark,
            key: "NewLoadingDialog",
            message: LoadingDialogObject.title || LoadingDialogObject.message,
            visible: LoadingDialogObject.visible,
            timeout: LoadingDialogObject.timeout || 30000,
            onDismiss: function onDismiss() {
              _this3.setState({
                LoadingDialogObject: (0, _extends2.default)({}, LoadingDialogObject, {
                  visible: false
                })
              });

              if (typeof LoadingDialogObject.onDismiss === 'function') LoadingDialogObject.onDismiss();
            }
          });

          var messageDialog = _react.default.createElement(_LHMessageDialog.default, {
            isDark: isDark,
            key: "LHMessageDialog",
            visible: MessageDialogObject.visible,
            title: MessageDialogObject.title,
            titleStyle: MessageDialogObject.titleStyle,
            buttons: MessageDialogObject.buttons,
            message: MessageDialogObject.message,
            messageStyle: MessageDialogObject.messageStyle,
            closeAfterBtnClick: MessageDialogObject.closeAfterBtnClick,
            canDismiss: MessageDialogObject.canDismiss,
            onDismiss: function onDismiss() {
              _this3.setState({
                MessageDialogObject: (0, _extends2.default)({}, MessageDialogObject, {
                  visible: false
                })
              });
            }
          });

          var inputDialog = _react.default.createElement(_ui.InputDialog, {
            key: "InputDialog",
            title: InputDialogObject.title,
            message: InputDialogObject.message,
            defaultText: InputDialogObject.defaultText,
            placeholder: InputDialogObject.placeholder,
            singleLine: InputDialogObject.singleLine,
            visible: InputDialogObject.visible,
            confirm: InputDialogObject.confirm,
            onConfirm: InputDialogObject.onConfirm,
            cancel: InputDialogObject.cancel,
            onCancel: InputDialogObject.onCancel,
            cancelable: InputDialogObject.cancelable || false,
            timeout: InputDialogObject.timeout || 0,
            onDismiss: function onDismiss() {
              _this3.setState({
                InputDialogObject: (0, _extends2.default)({}, InputDialogObject, {
                  visible: false
                })
              });
            }
          });

          var newInputDialog = _react.default.createElement(_Dialog.InputDialog, {
            key: "NewInputDialog",
            title: NewInputDialogObject.title,
            type: NewInputDialogObject.type,
            defaultText: NewInputDialogObject.defaultText,
            color: NewInputDialogObject.color,
            underlineData: NewInputDialogObject.underlineData,
            visible: NewInputDialogObject.visible,
            inputs: NewInputDialogObject.inputs,
            checkboxData: NewInputDialogObject.checkboxData,
            buttons: NewInputDialogObject.buttons,
            dialogStyle: NewInputDialogObject.dialogStyle,
            onDismiss: function onDismiss() {
              _this3.setState({
                NewInputDialogObject: (0, _extends2.default)({}, NewInputDialogObject, {
                  visible: false
                })
              });
            }
          });

          var singleChoseDialog = _react.default.createElement(_ui.SingleChoseDialog, {
            key: "SingleChoseDialog",
            title: SingleChoseDialogObject.title,
            visible: SingleChoseDialogObject.visible,
            dataSource: SingleChoseDialogObject.dataSource,
            cancel: SingleChoseDialogObject.cancel,
            onCancel: SingleChoseDialogObject.onCancel,
            confirm: SingleChoseDialogObject.confirm,
            onConfirm: SingleChoseDialogObject.onConfirm,
            cancelable: SingleChoseDialogObject.cancelable || false,
            onDismiss: function onDismiss() {
              _this3.setState({
                SingleChoseDialogObject: (0, _extends2.default)({}, SingleChoseDialogObject, {
                  visible: false
                })
              });
            }
          });

          var customSingleChooseDialog = _react.default.createElement(_NewCustomSingleChooseDialog.default, {
            key: "CustomSingleChooseDialog",
            title: CustomSingleChooseObj.title,
            visible: CustomSingleChooseObj.visible,
            dataSource: CustomSingleChooseObj.dataSource,
            showType: CustomSingleChooseObj.showType,
            checkedItem: CustomSingleChooseObj.checkedItem || '',
            cancel: CustomSingleChooseObj.cancel,
            onCancel: CustomSingleChooseObj.onCancel,
            confirm: CustomSingleChooseObj.confirm,
            onConfirm: CustomSingleChooseObj.onConfirm,
            onCheck: CustomSingleChooseObj.onCheck,
            cancelable: CustomSingleChooseObj.cancelable || false,
            onDismiss: function onDismiss() {
              _this3.setState({
                CustomSingleChooseObj: (0, _extends2.default)({}, CustomSingleChooseObj, {
                  visible: false
                })
              });
            }
          });

          var confirmDialog = _react.default.createElement(_NewCustomMessageDialog.default, {
            key: "confirmDialog",
            btns: ConfirmDialogObject.btns,
            title: ConfirmDialogObject.title,
            message: ConfirmDialogObject.message,
            visible: ConfirmDialogObject.visible,
            cancelable: ConfirmDialogObject.cancelable,
            timeout: ConfirmDialogObject.timeout,
            canRequestClose: ConfirmDialogObject.canRequestClose,
            onDismiss: function onDismiss() {
              if (typeof ConfirmDialogObject.onDismiss === 'function') {
                ConfirmDialogObject.onDismiss();
              }

              _this3.setState({
                ConfirmDialogObject: (0, _extends2.default)({}, ConfirmDialogObject, {
                  visible: false
                })
              });
            }
          });

          var content = [_react.default.createElement(_reactRedux.Provider, {
            key: "Provider",
            store: store
          }, _react.default.createElement(RootStack, {
            key: "RootStack",
            screenProps: {
              store: store,
              isDark: isDark
            }
          })), loadingDialog, messageDialog, inputDialog, newInputDialog, singleChoseDialog, customSingleChooseDialog, confirmDialog];

          if (Array.isArray(subStores)) {
            for (var index = 0; index < subStores.length; index += 1) {
              var element = subStores[index];
              var context = element.context,
                  subStore = element.store;
              content = _react.default.createElement(_reactRedux.Provider, {
                store: subStore,
                context: context
              }, content);
            }
          }

          return content;
        }
      }]);
      return App;
    }(_react.default.Component);

    return App;
  }
},10271,[14305,14320,14323,14371,14377,14386,14344,14314,10297,10033,10918,10274,10230,10074,10755,10353,10004,10337,10991,10997,11000,11003]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;

  var _Provider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  exports.Provider = _Provider.default;

  var _connectAdvanced = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  exports.connectAdvanced = _connectAdvanced.default;

  var _Context = _$$_REQUIRE(_dependencyMap[3]);

  exports.ReactReduxContext = _Context.ReactReduxContext;

  var _connect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  exports.connect = _connect.default;
},10274,[14305,10277,10286,10283,10295]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  exports.__esModule = true;
  exports.default = undefined;

  var _inheritsLoose2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _Context = _$$_REQUIRE(_dependencyMap[5]);

  var Provider = function (_Component) {
    (0, _inheritsLoose2.default)(Provider, _Component);

    function Provider(props) {
      var _this;

      _this = _Component.call(this, props) || this;
      var store = props.store;
      _this.state = {
        storeState: store.getState(),
        store: store
      };
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.componentDidMount = function componentDidMount() {
      this._isMounted = true;
      this.subscribe();
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this.unsubscribe) this.unsubscribe();
      this._isMounted = false;
    };

    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      if (this.props.store !== prevProps.store) {
        if (this.unsubscribe) this.unsubscribe();
        this.subscribe();
      }
    };

    _proto.subscribe = function subscribe() {
      var _this2 = this;

      var store = this.props.store;
      this.unsubscribe = store.subscribe(function () {
        var newStoreState = store.getState();

        if (!_this2._isMounted) {
          return;
        }

        _this2.setState(function (providerState) {
          if (providerState.storeState === newStoreState) {
            return null;
          }

          return {
            storeState: newStoreState
          };
        });
      });
      var postMountStoreState = store.getState();

      if (postMountStoreState !== this.state.storeState) {
        this.setState({
          storeState: postMountStoreState
        });
      }
    };

    _proto.render = function render() {
      var Context = this.props.context || _Context.ReactReduxContext;
      return _react.default.createElement(Context.Provider, {
        value: this.state
      }, this.props.children);
    };

    return Provider;
  }(_react.Component);

  Provider.propTypes = {
    store: _propTypes.default.shape({
      subscribe: _propTypes.default.func.isRequired,
      dispatch: _propTypes.default.func.isRequired,
      getState: _propTypes.default.func.isRequired
    }),
    context: _propTypes.default.object,
    children: _propTypes.default.any
  };
  var _default = Provider;
  exports.default = _default;
},10277,[14308,14305,10280,10297,10318,10283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  module.exports = _inheritsLoose;
},10280,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.default = exports.ReactReduxContext = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ReactReduxContext = _react.default.createContext(null);

  exports.ReactReduxContext = ReactReduxContext;
  var _default = ReactReduxContext;
  exports.default = _default;
},10283,[14305,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  exports.__esModule = true;
  exports.default = connectAdvanced;

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _inheritsLoose2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactIs = _$$_REQUIRE(_dependencyMap[9]);

  var _Context = _$$_REQUIRE(_dependencyMap[10]);

  function connectAdvanced(selectorFactory, _ref) {
    if (_ref === undefined) {
      _ref = {};
    }

    var _ref2 = _ref,
        _ref2$getDisplayName = _ref2.getDisplayName,
        getDisplayName = _ref2$getDisplayName === undefined ? function (name) {
      return "ConnectAdvanced(" + name + ")";
    } : _ref2$getDisplayName,
        _ref2$methodName = _ref2.methodName,
        methodName = _ref2$methodName === undefined ? 'connectAdvanced' : _ref2$methodName,
        _ref2$renderCountProp = _ref2.renderCountProp,
        renderCountProp = _ref2$renderCountProp === undefined ? undefined : _ref2$renderCountProp,
        _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
        shouldHandleStateChanges = _ref2$shouldHandleSta === undefined ? true : _ref2$shouldHandleSta,
        _ref2$storeKey = _ref2.storeKey,
        storeKey = _ref2$storeKey === undefined ? 'store' : _ref2$storeKey,
        _ref2$withRef = _ref2.withRef,
        withRef = _ref2$withRef === undefined ? false : _ref2$withRef,
        _ref2$forwardRef = _ref2.forwardRef,
        forwardRef = _ref2$forwardRef === undefined ? false : _ref2$forwardRef,
        _ref2$context = _ref2.context,
        context = _ref2$context === undefined ? _Context.ReactReduxContext : _ref2$context,
        connectOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);
    (0, _invariant.default)(renderCountProp === undefined, "renderCountProp is removed. render counting is built into the latest React dev tools profiling extension");
    (0, _invariant.default)(!withRef, 'withRef is removed. To access the wrapped instance, use a ref on the connected component');
    var customStoreWarningMessage = "To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";
    (0, _invariant.default)(storeKey === 'store', "storeKey has been removed and does not do anything. To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect");
    var Context = context;
    return function wrapWithConnect(WrappedComponent) {
      var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
      var displayName = getDisplayName(wrappedComponentName);
      var selectorFactoryOptions = (0, _extends2.default)({}, connectOptions, {
        getDisplayName: getDisplayName,
        methodName: methodName,
        renderCountProp: renderCountProp,
        shouldHandleStateChanges: shouldHandleStateChanges,
        storeKey: storeKey,
        displayName: displayName,
        wrappedComponentName: wrappedComponentName,
        WrappedComponent: WrappedComponent
      });
      var pure = connectOptions.pure;
      var OuterBaseComponent = _react.Component;

      if (pure) {
        OuterBaseComponent = _react.PureComponent;
      }

      function makeDerivedPropsSelector() {
        var lastProps;
        var lastState;
        var lastDerivedProps;
        var lastStore;
        var lastSelectorFactoryOptions;
        var sourceSelector;
        return function selectDerivedProps(state, props, store, selectorFactoryOptions) {
          if (pure && lastProps === props && lastState === state) {
            return lastDerivedProps;
          }

          if (store !== lastStore || lastSelectorFactoryOptions !== selectorFactoryOptions) {
            lastStore = store;
            lastSelectorFactoryOptions = selectorFactoryOptions;
            sourceSelector = selectorFactory(store.dispatch, selectorFactoryOptions);
          }

          lastProps = props;
          lastState = state;
          var nextProps = sourceSelector(state, props);
          lastDerivedProps = nextProps;
          return lastDerivedProps;
        };
      }

      function makeChildElementSelector() {
        var lastChildProps, lastForwardRef, lastChildElement, lastComponent;
        return function selectChildElement(WrappedComponent, childProps, forwardRef) {
          if (childProps !== lastChildProps || forwardRef !== lastForwardRef || lastComponent !== WrappedComponent) {
            lastChildProps = childProps;
            lastForwardRef = forwardRef;
            lastComponent = WrappedComponent;
            lastChildElement = _react.default.createElement(WrappedComponent, (0, _extends2.default)({}, childProps, {
              ref: forwardRef
            }));
          }

          return lastChildElement;
        };
      }

      var Connect = function (_OuterBaseComponent) {
        (0, _inheritsLoose2.default)(Connect, _OuterBaseComponent);

        function Connect(props) {
          var _this;

          _this = _OuterBaseComponent.call(this, props) || this;
          (0, _invariant.default)(forwardRef ? !props.wrapperProps[storeKey] : !props[storeKey], "Passing redux store in props has been removed and does not do anything. To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect");
          _this.selectDerivedProps = makeDerivedPropsSelector();
          _this.selectChildElement = makeChildElementSelector();
          _this.indirectRenderWrappedComponent = _this.indirectRenderWrappedComponent.bind((0, _assertThisInitialized2.default)(_this));
          return _this;
        }

        var _proto = Connect.prototype;

        _proto.indirectRenderWrappedComponent = function indirectRenderWrappedComponent(value) {
          return this.renderWrappedComponent(value);
        };

        _proto.renderWrappedComponent = function renderWrappedComponent(value) {
          (0, _invariant.default)(value, "Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
          var storeState = value.storeState,
              store = value.store;
          var wrapperProps = this.props;
          var forwardedRef;

          if (forwardRef) {
            wrapperProps = this.props.wrapperProps;
            forwardedRef = this.props.forwardedRef;
          }

          var derivedProps = this.selectDerivedProps(storeState, wrapperProps, store, selectorFactoryOptions);
          return this.selectChildElement(WrappedComponent, derivedProps, forwardedRef);
        };

        _proto.render = function render() {
          var ContextToUse = this.props.context && this.props.context.Consumer && (0, _reactIs.isContextConsumer)(_react.default.createElement(this.props.context.Consumer, null)) ? this.props.context : Context;
          return _react.default.createElement(ContextToUse.Consumer, null, this.indirectRenderWrappedComponent);
        };

        return Connect;
      }(OuterBaseComponent);

      Connect.WrappedComponent = WrappedComponent;
      Connect.displayName = displayName;

      if (forwardRef) {
        var forwarded = _react.default.forwardRef(function forwardConnectRef(props, ref) {
          return _react.default.createElement(Connect, {
            wrapperProps: props,
            forwardedRef: ref
          });
        });

        forwarded.displayName = displayName;
        forwarded.WrappedComponent = WrappedComponent;
        return (0, _hoistNonReactStatics.default)(forwarded, WrappedComponent);
      }

      return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);
    };
  }
},10286,[14308,14305,14374,10280,14344,14410,10993,13495,10297,10289,10283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},10289,[10292]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  var b = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      c = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      d = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      e = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      f = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      g = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      h = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      k = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      l = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.async_mode") : 60111,
      m = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      n = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      p = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      q = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      r = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      t = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116,
      v = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.block") : 60121,
      w = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental") : 60117,
      x = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder") : 60118,
      y = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.scope") : 60119;

  function z(a) {
    if ("object" === typeof a && null !== a) {
      var u = a.$$typeof;

      switch (u) {
        case c:
          switch (a = a.type, a) {
            case l:
            case m:
            case e:
            case g:
            case f:
            case p:
              return a;

            default:
              switch (a = a && a.$$typeof, a) {
                case k:
                case n:
                case t:
                case r:
                case h:
                  return a;

                default:
                  return u;
              }

          }

        case d:
          return u;
      }
    }
  }

  function A(a) {
    return z(a) === m;
  }

  exports.AsyncMode = l;
  exports.ConcurrentMode = m;
  exports.ContextConsumer = k;
  exports.ContextProvider = h;
  exports.Element = c;
  exports.ForwardRef = n;
  exports.Fragment = e;
  exports.Lazy = t;
  exports.Memo = r;
  exports.Portal = d;
  exports.Profiler = g;
  exports.StrictMode = f;
  exports.Suspense = p;

  exports.isAsyncMode = function (a) {
    return A(a) || z(a) === l;
  };

  exports.isConcurrentMode = A;

  exports.isContextConsumer = function (a) {
    return z(a) === k;
  };

  exports.isContextProvider = function (a) {
    return z(a) === h;
  };

  exports.isElement = function (a) {
    return "object" === typeof a && null !== a && a.$$typeof === c;
  };

  exports.isForwardRef = function (a) {
    return z(a) === n;
  };

  exports.isFragment = function (a) {
    return z(a) === e;
  };

  exports.isLazy = function (a) {
    return z(a) === t;
  };

  exports.isMemo = function (a) {
    return z(a) === r;
  };

  exports.isPortal = function (a) {
    return z(a) === d;
  };

  exports.isProfiler = function (a) {
    return z(a) === g;
  };

  exports.isStrictMode = function (a) {
    return z(a) === f;
  };

  exports.isSuspense = function (a) {
    return z(a) === p;
  };

  exports.isValidElementType = function (a) {
    return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
  };

  exports.typeOf = z;
},10292,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.createConnect = createConnect;
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _connectAdvanced = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _mapDispatchToProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _mapStateToProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _mergeProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _selectorFactory = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  function match(arg, factories, name) {
    for (var i = factories.length - 1; i >= 0; i--) {
      var result = factories[i](arg);
      if (result) return result;
    }

    return function (dispatch, options) {
      throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
    };
  }

  function strictEqual(a, b) {
    return a === b;
  }

  function createConnect(_temp) {
    var _ref = _temp === undefined ? {} : _temp,
        _ref$connectHOC = _ref.connectHOC,
        connectHOC = _ref$connectHOC === undefined ? _connectAdvanced.default : _ref$connectHOC,
        _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
        mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps.default : _ref$mapStateToPropsF,
        _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
        mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps.default : _ref$mapDispatchToPro,
        _ref$mergePropsFactor = _ref.mergePropsFactories,
        mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps.default : _ref$mergePropsFactor,
        _ref$selectorFactory = _ref.selectorFactory,
        selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory.default : _ref$selectorFactory;

    return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
      if (_ref2 === undefined) {
        _ref2 = {};
      }

      var _ref3 = _ref2,
          _ref3$pure = _ref3.pure,
          pure = _ref3$pure === undefined ? true : _ref3$pure,
          _ref3$areStatesEqual = _ref3.areStatesEqual,
          areStatesEqual = _ref3$areStatesEqual === undefined ? strictEqual : _ref3$areStatesEqual,
          _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
          areOwnPropsEqual = _ref3$areOwnPropsEqua === undefined ? _shallowEqual.default : _ref3$areOwnPropsEqua,
          _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
          areStatePropsEqual = _ref3$areStatePropsEq === undefined ? _shallowEqual.default : _ref3$areStatePropsEq,
          _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
          areMergedPropsEqual = _ref3$areMergedPropsE === undefined ? _shallowEqual.default : _ref3$areMergedPropsE,
          extraOptions = (0, _objectWithoutPropertiesLoose2.default)(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);
      var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
      var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
      var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
      return connectHOC(selectorFactory, (0, _extends2.default)({
        methodName: 'connect',
        getDisplayName: function getDisplayName(name) {
          return "Connect(" + name + ")";
        },
        shouldHandleStateChanges: Boolean(mapStateToProps),
        initMapStateToProps: initMapStateToProps,
        initMapDispatchToProps: initMapDispatchToProps,
        initMergeProps: initMergeProps,
        pure: pure,
        areStatesEqual: areStatesEqual,
        areOwnPropsEqual: areOwnPropsEqual,
        areStatePropsEqual: areStatePropsEqual,
        areMergedPropsEqual: areMergedPropsEqual
      }, extraOptions));
    };
  }

  var _default = createConnect();

  exports.default = _default;
},10295,[14305,14344,14410,10286,10298,10301,10325,10328,10331]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = shallowEqual;
  var hasOwn = Object.prototype.hasOwnProperty;

  function is(x, y) {
    if (x === y) {
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }
},10298,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
  exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
  exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
  exports.default = undefined;

  var _redux = _$$_REQUIRE(_dependencyMap[0]);

  var _wrapMapToProps = _$$_REQUIRE(_dependencyMap[1]);

  function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
    return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
  }

  function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
    return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
      return {
        dispatch: dispatch
      };
    }) : undefined;
  }

  function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
    return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
      return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
    }) : undefined;
  }

  var _default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
  exports.default = _default;
},10301,[10304,10313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }

      var test1 = new String('abc');
      test1[5] = 'de';

      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }

      var test2 = {};

      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }

      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });

      if (order2.join('') !== '0123456789') {
        return false;
      }

      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });

      if (Object.keys(_extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      return false;
    }
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);

        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };
},10303,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  function _interopDefault(ex) {
    return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
  }

  var $$observable = _interopDefault(_$$_REQUIRE(_dependencyMap[0]));

  var randomString = function randomString() {
    return Math.random().toString(36).substring(7).split('').join('.');
  };

  var ActionTypes = {
    INIT: "@@redux/INIT" + randomString(),
    REPLACE: "@@redux/REPLACE" + randomString(),
    PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
      return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
    }
  };

  function isPlainObject(obj) {
    if (typeof obj !== 'object' || obj === null) return false;
    var proto = obj;

    while (Object.getPrototypeOf(proto) !== null) {
      proto = Object.getPrototypeOf(proto);
    }

    return Object.getPrototypeOf(obj) === proto;
  }

  function createStore(reducer, preloadedState, enhancer) {
    var _ref2;

    if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
      throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");
    }

    if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
      enhancer = preloadedState;
      preloadedState = undefined;
    }

    if (typeof enhancer !== 'undefined') {
      if (typeof enhancer !== 'function') {
        throw new Error('Expected the enhancer to be a function.');
      }

      return enhancer(createStore)(reducer, preloadedState);
    }

    if (typeof reducer !== 'function') {
      throw new Error('Expected the reducer to be a function.');
    }

    var currentReducer = reducer;
    var currentState = preloadedState;
    var currentListeners = [];
    var nextListeners = currentListeners;
    var isDispatching = false;

    function ensureCanMutateNextListeners() {
      if (nextListeners === currentListeners) {
        nextListeners = currentListeners.slice();
      }
    }

    function getState() {
      if (isDispatching) {
        throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
      }

      return currentState;
    }

    function subscribe(listener) {
      if (typeof listener !== 'function') {
        throw new Error('Expected the listener to be a function.');
      }

      if (isDispatching) {
        throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");
      }

      var isSubscribed = true;
      ensureCanMutateNextListeners();
      nextListeners.push(listener);
      return function unsubscribe() {
        if (!isSubscribed) {
          return;
        }

        if (isDispatching) {
          throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");
        }

        isSubscribed = false;
        ensureCanMutateNextListeners();
        var index = nextListeners.indexOf(listener);
        nextListeners.splice(index, 1);
        currentListeners = null;
      };
    }

    function dispatch(action) {
      if (!isPlainObject(action)) {
        throw new Error("Actions must be plain objects. Use custom middleware for async actions.");
      }

      if (typeof action.type === 'undefined') {
        throw new Error("Actions may not have an undefined \"type\" property. Have you misspelled a constant?");
      }

      if (isDispatching) {
        throw new Error('Reducers may not dispatch actions.');
      }

      try {
        isDispatching = true;
        currentState = currentReducer(currentState, action);
      } finally {
        isDispatching = false;
      }

      var listeners = currentListeners = nextListeners;

      for (var i = 0; i < listeners.length; i++) {
        var listener = listeners[i];
        listener();
      }

      return action;
    }

    function replaceReducer(nextReducer) {
      if (typeof nextReducer !== 'function') {
        throw new Error('Expected the nextReducer to be a function.');
      }

      currentReducer = nextReducer;
      dispatch({
        type: ActionTypes.REPLACE
      });
    }

    function observable() {
      var _ref;

      var outerSubscribe = subscribe;
      return _ref = {
        subscribe: function subscribe(observer) {
          if (typeof observer !== 'object' || observer === null) {
            throw new TypeError('Expected the observer to be an object.');
          }

          function observeState() {
            if (observer.next) {
              observer.next(getState());
            }
          }

          observeState();
          var unsubscribe = outerSubscribe(observeState);
          return {
            unsubscribe: unsubscribe
          };
        }
      }, _ref[$$observable] = function () {
        return this;
      }, _ref;
    }

    dispatch({
      type: ActionTypes.INIT
    });
    return _ref2 = {
      dispatch: dispatch,
      subscribe: subscribe,
      getState: getState,
      replaceReducer: replaceReducer
    }, _ref2[$$observable] = observable, _ref2;
  }

  function getUndefinedStateErrorMessage(key, action) {
    var actionType = action && action.type;
    var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
    return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
  }

  function assertReducerShape(reducers) {
    Object.keys(reducers).forEach(function (key) {
      var reducer = reducers[key];
      var initialState = reducer(undefined, {
        type: ActionTypes.INIT
      });

      if (typeof initialState === 'undefined') {
        throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
      }

      if (typeof reducer(undefined, {
        type: ActionTypes.PROBE_UNKNOWN_ACTION()
      }) === 'undefined') {
        throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
      }
    });
  }

  function combineReducers(reducers) {
    var reducerKeys = Object.keys(reducers);
    var finalReducers = {};

    for (var i = 0; i < reducerKeys.length; i++) {
      var key = reducerKeys[i];

      if (typeof reducers[key] === 'function') {
        finalReducers[key] = reducers[key];
      }
    }

    var finalReducerKeys = Object.keys(finalReducers);
    var unexpectedKeyCache;
    var shapeAssertionError;

    try {
      assertReducerShape(finalReducers);
    } catch (e) {
      shapeAssertionError = e;
    }

    return function combination(state, action) {
      if (state === undefined) {
        state = {};
      }

      if (shapeAssertionError) {
        throw shapeAssertionError;
      }

      var hasChanged = false;
      var nextState = {};

      for (var _i = 0; _i < finalReducerKeys.length; _i++) {
        var _key = finalReducerKeys[_i];
        var reducer = finalReducers[_key];
        var previousStateForKey = state[_key];
        var nextStateForKey = reducer(previousStateForKey, action);

        if (typeof nextStateForKey === 'undefined') {
          var errorMessage = getUndefinedStateErrorMessage(_key, action);
          throw new Error(errorMessage);
        }

        nextState[_key] = nextStateForKey;
        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
      }

      hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
      return hasChanged ? nextState : state;
    };
  }

  function bindActionCreator(actionCreator, dispatch) {
    return function () {
      return dispatch(actionCreator.apply(this, arguments));
    };
  }

  function bindActionCreators(actionCreators, dispatch) {
    if (typeof actionCreators === 'function') {
      return bindActionCreator(actionCreators, dispatch);
    }

    if (typeof actionCreators !== 'object' || actionCreators === null) {
      throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
    }

    var boundActionCreators = {};

    for (var key in actionCreators) {
      var actionCreator = actionCreators[key];

      if (typeof actionCreator === 'function') {
        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
      }
    }

    return boundActionCreators;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      keys.push.apply(keys, Object.getOwnPropertySymbols(object));
    }

    if (enumerableOnly) keys = keys.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(source, true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function compose() {
    for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    if (funcs.length === 0) {
      return function (arg) {
        return arg;
      };
    }

    if (funcs.length === 1) {
      return funcs[0];
    }

    return funcs.reduce(function (a, b) {
      return function () {
        return a(b.apply(undefined, arguments));
      };
    });
  }

  function applyMiddleware() {
    for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
      middlewares[_key] = arguments[_key];
    }

    return function (createStore) {
      return function () {
        var store = createStore.apply(undefined, arguments);

        var _dispatch = function dispatch() {
          throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
        };

        var middlewareAPI = {
          getState: store.getState,
          dispatch: function dispatch() {
            return _dispatch.apply(undefined, arguments);
          }
        };
        var chain = middlewares.map(function (middleware) {
          return middleware(middlewareAPI);
        });
        _dispatch = compose.apply(undefined, chain)(store.dispatch);
        return _objectSpread2({}, store, {
          dispatch: _dispatch
        });
      };
    };
  }

  exports.__DO_NOT_USE__ActionTypes = ActionTypes;
  exports.applyMiddleware = applyMiddleware;
  exports.bindActionCreators = bindActionCreators;
  exports.combineReducers = combineReducers;
  exports.compose = compose;
  exports.createStore = createStore;
},10304,[10307]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyObject = {};
  module.exports = emptyObject;
},10306,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _ponyfill = _$$_REQUIRE(_dependencyMap[0]);

  var _ponyfill2 = _interopRequireDefault(_ponyfill);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var root;

  if (typeof self !== 'undefined') {
    root = self;
  } else if (typeof window !== 'undefined') {
    root = window;
  } else if (typeof global !== 'undefined') {
    root = global;
  } else if (typeof module !== 'undefined') {
    root = module;
  } else {
    root = Function('return this')();
  }

  var result = (0, _ponyfill2['default'])(root);
  exports['default'] = result;
},10307,[10310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = symbolObservablePonyfill;

  function symbolObservablePonyfill(root) {
    var result;
    var _Symbol = root.Symbol;

    if (typeof _Symbol === 'function') {
      if (_Symbol.observable) {
        result = _Symbol.observable;
      } else {
        result = _Symbol('observable');
        _Symbol.observable = result;
      }
    } else {
      result = '@@observable';
    }

    return result;
  }

  ;
},10310,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
  exports.getDependsOnOwnProps = getDependsOnOwnProps;
  exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

  var _verifyPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function wrapMapToPropsConstant(getConstant) {
    return function initConstantSelector(dispatch, options) {
      var constant = getConstant(dispatch, options);

      function constantSelector() {
        return constant;
      }

      constantSelector.dependsOnOwnProps = false;
      return constantSelector;
    };
  }

  function getDependsOnOwnProps(mapToProps) {
    return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
  }

  function wrapMapToPropsFunc(mapToProps, methodName) {
    return function initProxySelector(dispatch, _ref) {
      var displayName = _ref.displayName;

      var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
        return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
      };

      proxy.dependsOnOwnProps = true;

      proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
        proxy.mapToProps = mapToProps;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
        var props = proxy(stateOrDispatch, ownProps);

        if (typeof props === 'function') {
          proxy.mapToProps = props;
          proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
          props = proxy(stateOrDispatch, ownProps);
        }

        return props;
      };

      return proxy;
    };
  }
},10313,[14305,10316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.default = verifyPlainObject;

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _warning = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function verifyPlainObject(value, displayName, methodName) {
    if (!(0, _isPlainObject.default)(value)) {
      (0, _warning.default)(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
    }
  }
},10316,[14305,10319,10322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  {
    module.exports = _$$_REQUIRE(_dependencyMap[0])();
  }
},10318,[10321]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = isPlainObject;

  function isPlainObject(obj) {
    if (typeof obj !== 'object' || obj === null) return false;
    var proto = Object.getPrototypeOf(obj);
    if (proto === null) return true;
    var baseProto = proto;

    while (Object.getPrototypeOf(baseProto) !== null) {
      baseProto = Object.getPrototypeOf(baseProto);
    }

    return proto === baseProto;
  }
},10319,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = _$$_REQUIRE(_dependencyMap[0]);

  function emptyFunction() {}

  function emptyFunctionWithReset() {}

  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }

      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = 'Invariant Violation';
      throw err;
    }

    ;
    shim.isRequired = shim;

    function getShim() {
      return shim;
    }

    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
},10321,[10324]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = warning;

  function warning(message) {
    if (typeof console !== 'undefined' && true) {}

    try {
      throw new Error(message);
    } catch (e) {}
  }
},10322,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
},10324,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
  exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
  exports.default = undefined;

  var _wrapMapToProps = _$$_REQUIRE(_dependencyMap[0]);

  function whenMapStateToPropsIsFunction(mapStateToProps) {
    return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
  }

  function whenMapStateToPropsIsMissing(mapStateToProps) {
    return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
      return {};
    }) : undefined;
  }

  var _default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
  exports.default = _default;
},10325,[10313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.defaultMergeProps = defaultMergeProps;
  exports.wrapMergePropsFunc = wrapMergePropsFunc;
  exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
  exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function defaultMergeProps(stateProps, dispatchProps, ownProps) {
    return (0, _extends2.default)({}, ownProps, stateProps, dispatchProps);
  }

  function wrapMergePropsFunc(mergeProps) {
    return function initMergePropsProxy(dispatch, _ref) {
      var displayName = _ref.displayName,
          pure = _ref.pure,
          areMergedPropsEqual = _ref.areMergedPropsEqual;
      var hasRunOnce = false;
      var mergedProps;
      return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
        var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

        if (hasRunOnce) {
          if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
        } else {
          hasRunOnce = true;
          mergedProps = nextMergedProps;
        }

        return mergedProps;
      };
    };
  }

  function whenMergePropsIsFunction(mergeProps) {
    return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
  }

  function whenMergePropsIsOmitted(mergeProps) {
    return !mergeProps ? function () {
      return defaultMergeProps;
    } : undefined;
  }

  var _default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
  exports.default = _default;
},10328,[14305,14344,10316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
  exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
  exports.default = finalPropsSelectorFactory;

  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifySubselectors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
    return function impureFinalPropsSelector(state, ownProps) {
      return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
    };
  }

  function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
    var areStatesEqual = _ref.areStatesEqual,
        areOwnPropsEqual = _ref.areOwnPropsEqual,
        areStatePropsEqual = _ref.areStatePropsEqual;
    var hasRunAtLeastOnce = false;
    var state;
    var ownProps;
    var stateProps;
    var dispatchProps;
    var mergedProps;

    function handleFirstCall(firstState, firstOwnProps) {
      state = firstState;
      ownProps = firstOwnProps;
      stateProps = mapStateToProps(state, ownProps);
      dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      hasRunAtLeastOnce = true;
      return mergedProps;
    }

    function handleNewPropsAndNewState() {
      stateProps = mapStateToProps(state, ownProps);
      if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }

    function handleNewProps() {
      if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
      if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }

    function handleNewState() {
      var nextStateProps = mapStateToProps(state, ownProps);
      var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
      stateProps = nextStateProps;
      if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }

    function handleSubsequentCalls(nextState, nextOwnProps) {
      var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
      var stateChanged = !areStatesEqual(nextState, state);
      state = nextState;
      ownProps = nextOwnProps;
      if (propsChanged && stateChanged) return handleNewPropsAndNewState();
      if (propsChanged) return handleNewProps();
      if (stateChanged) return handleNewState();
      return mergedProps;
    }

    return function pureFinalPropsSelector(nextState, nextOwnProps) {
      return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
    };
  }

  function finalPropsSelectorFactory(dispatch, _ref2) {
    var initMapStateToProps = _ref2.initMapStateToProps,
        initMapDispatchToProps = _ref2.initMapDispatchToProps,
        initMergeProps = _ref2.initMergeProps,
        options = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);
    var mapStateToProps = initMapStateToProps(dispatch, options);
    var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
    var mergeProps = initMergeProps(dispatch, options);
    var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
    return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
  }
},10331,[14305,14410,10334]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  exports.__esModule = true;
  exports.default = verifySubselectors;

  var _warning = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function verify(selector, methodName, displayName) {
    if (!selector) {
      throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
    } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
      if (!selector.hasOwnProperty('dependsOnOwnProps')) {
        (0, _warning.default)("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
      }
    }
  }

  function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
    verify(mapStateToProps, 'mapStateToProps', displayName);
    verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
    verify(mergeProps, 'mergeProps', displayName);
  }
},10334,[14305,10322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHDebugPage.default;
  exports.default = _default;
},10337,[14305,10340]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHSpecDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHWifiDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHCacheDebugPage = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15]));

  var _LHBleDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHBleCmdHistoryPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHLogDebugPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var isChild = !!_miot.Device.parentDevice;
  var additionalDebugItems = [];

  var LHDebugPage = function (_React$Component) {
    (0, _inherits2.default)(LHDebugPage, _React$Component);
    (0, _createClass2.default)(LHDebugPage, null, [{
      key: "extraDebugItems",
      get: function get() {
        return additionalDebugItems;
      },
      set: function set(items) {
        additionalDebugItems = items;
      }
    }]);

    function LHDebugPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHDebugPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHDebugPage).call(this, props));

      _this.getPageData = function () {
        var navigation = _this.props.navigation;
        var dataItem = [{
          title: '设备名称',
          rightDescription: _miot.Device.name,
          hideRightArrow: true
        }, {
          title: '设备Model',
          rightDescription: _miot.Device.model,
          hideRightArrow: true
        }, {
          title: '设备ID',
          rightDescription: _miot.Device.deviceID,
          hideRightArrow: true
        }, {
          title: '设备IP',
          rightDescription: _miot.Device.IP,
          hideRightArrow: true
        }, {
          title: '设备MAC',
          rightDescription: _miot.Device.mac,
          hideRightArrow: true
        }, {
          title: '设备WiFi名称',
          rightDescription: _miot.Device.SSID,
          hideRightArrow: true
        }];
        dataItem = isChild ? dataItem.concat([{
          title: '父设备Model',
          rightDescription: _miot.Device.parentDevice.model,
          hideRightArrow: true
        }, {
          title: '父设备ID',
          rightDescription: _miot.Device.parentDevice.deviceID,
          hideRightArrow: true
        }]) : dataItem;
        dataItem.push({
          title: '通知清除UserConfig数据',
          press: function press() {
            _reactNative.DeviceEventEmitter.emit(LHDebugPage.removeUserConfigDataEmitterKey);
          }
        });
        dataItem.push({
          title: '缓存调试页面',
          press: function press() {
            navigation.navigate('LHCacheDebugPage');
          }
        });

        if (_LHCommonFunction.LHDeviceModel.JudgeAqaraHub()) {
          dataItem = dataItem.concat([{
            title: 'Wi-Fi更换页面',
            press: function press() {
              navigation.navigate('LHWifiDebugPage');
            }
          }]);
        }

        dataItem = dataItem.concat([{
          title: 'Spec调试页面',
          press: function press() {
            navigation.navigate('LHSpecDebugPage');
          }
        }]);

        if (+_miot.Device.type === 6) {
          dataItem = dataItem.concat([{
            title: 'Ble调试页面',
            press: function press() {
              navigation.navigate('LHBleDebugPage');
            }
          }]);
        }

        if (+_miot.Device.type === 6) {
          dataItem = dataItem.concat([{
            title: 'Ble收发数据历史',
            press: function press() {
              navigation.navigate('LHBleCmdHistoryPage');
            }
          }]);
        }

        dataItem.push({
          title: '日志调试页面',
          press: function press() {
            navigation.navigate('LHLogDebugPage');
          }
        });

        if (_miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelGatewayV3() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceAcpartnerV3()) {
          dataItem.push({
            title: _LHCommonFunction.LHCommonLocalizableString.common_setting_laboratory,
            testID: 'gatwayLaboratory',
            press: function press() {
              navigation.navigate('LHLaboratoryPage');
            }
          });
        }

        if (_LHCommonFunction.LHDeviceModel.DeviceAcpartnerMCN02() === _miot.Device.model && !_LHCommonFunction.LHAppiumUtils.isWhiteList()) {
          dataItem = [];
        }

        if (Array.isArray(LHDebugPage.extraDebugItems)) {
          dataItem = dataItem.concat(LHDebugPage.extraDebugItems);
        } else if (typeof LHDebugPage.extraDebugItems === 'function') {
          dataItem = dataItem.concat(LHDebugPage.extraDebugItems(navigation));
        }

        var items = [{
          title: '',
          data: dataItem
        }];
        return items;
      };

      _this.state = {
        url: ''
      };
      return _this;
    }

    (0, _createClass2.default)(LHDebugPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "upgrade",
      value: function upgrade() {
        var url = this.state.url;

        if (url === '') {
          _LHCommonFunction.LHToastUtils.showShortToast('请输入固件url');

          return;
        }

        _LHCommonFunction.LHMiServer.SendRPCPayload('miIO.subdev_ota', {
          did: _miot.Device.deviceID,
          subdev_url: url,
          siged_file: true
        }).then(function (res) {
          if (res && res.result && res.result[0] && res.result[0] === 'ok') {
            _LHCommonFunction.LHToastUtils.showShortToast('升级指令发送成功');
          } else {
            _LHCommonFunction.LHToastUtils.showShortToast('升级指令发送失败');
          }
        }).catch(function () {
          _LHCommonFunction.LHToastUtils.showShortToast('升级指令发送失败');
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var pageData = this.getPageData();
        var url = this.state.url;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1,
            paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight + _LHCommonFunction.LHUiUtils.GetPx(10),
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
          }
        }, _react.default.createElement(_LHStandardList.default, {
          data: pageData
        }), isChild ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(10),
            paddingVertical: _LHCommonFunction.LHUiUtils.GetPx(10),
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
            fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
          }
        }, "\u56FA\u4EF6\u5730\u5740:"), _react.default.createElement(_reactNative.TextInput, {
          style: {
            borderWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
            borderColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
            height: _LHCommonFunction.LHUiUtils.GetPx(40),
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
            color: 'rgba(0,0,0, 0.7)',
            paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(8),
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
            flex: 1,
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(8)
          },
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          defaultValue: url,
          onChangeText: function onChangeText(text) {
            _this2.setState({
              url: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            width: _LHCommonFunction.LHUiUtils.GetPx(80),
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
            height: _LHCommonFunction.LHUiUtils.GetPx(40),
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
            flexDirection: 'row',
            alignItems: 'center'
          },
          onPress: function onPress() {
            _this2.upgrade();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            width: '100%',
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
            fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
            color: '#fff',
            textAlign: 'center'
          }
        }, "\u5347\u7EA7"))) : null);
      }
    }]);
    return LHDebugPage;
  }(_react.default.Component);

  LHDebugPage.SubDebugPages = {
    LHSpecDebugPage: _LHSpecDebugPage.default,
    LHWifiDebugPage: _LHWifiDebugPage.default,
    LHCacheDebugPage: _LHCacheDebugPage.default,
    LHCacheDetailPage: _LHCacheDebugPage.LHCacheDetailPage,
    LHBleDebugPage: _LHBleDebugPage.default,
    LHBleCmdHistoryPage: _LHBleCmdHistoryPage.default,
    LHLogDebugPage: _LHLogDebugPage.default
  };
  LHDebugPage.removeUserConfigDataEmitterKey = 'removeUserConfigDataEmitterKey';

  LHDebugPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        showSeparator: true,
        title: "\u8BBE\u5907\u8C03\u8BD5\u9875\u9762",
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHDebugPage);

  exports.default = _default;
},10340,[14308,14305,14320,14371,14377,14323,14386,10297,10033,10074,10004,10343,10883,10907,10910,10913,10964,10967,10970]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardList.default;
  exports.default = _default;
},10343,[14305,10346]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHStandardCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var styles = _reactNative.StyleSheet.create({
    sectionHeader: {
      paddingTop: (0, _LHCommonFunction.dp)(9),
      paddingBottom: (0, _LHCommonFunction.dp)(9)
    },
    listTitle: {
      fontSize: (0, _LHCommonFunction.dp)(12),
      lineHeight: (0, _LHCommonFunction.dp)(16),
      paddingLeft: (0, _LHCommonFunction.dp)(27),
      letterSpacing: 0
    },
    btnContainer: {
      alignSelf: 'stretch',
      flexDirection: 'row',
      flex: 1,
      backgroundColor: '#fff',
      height: (0, _LHCommonFunction.dp)(42),
      alignItems: 'center'
    },
    btnText: {
      fontSize: (0, _LHCommonFunction.dp)(13),
      flex: 1,
      color: '#f43f31',
      textAlign: 'center',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    }
  });

  var LHStandardList = function (_React$Component) {
    (0, _inherits2.default)(LHStandardList, _React$Component);

    function LHStandardList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardList).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHStandardList, [{
      key: "scrollToLocation",
      value: function scrollToLocation(sectionIndex, itemIndex, viewOffset) {
        if (this.sectionList) {
          this.sectionList.scrollToLocation({
            sectionIndex: sectionIndex,
            itemIndex: itemIndex,
            viewOffset: viewOffset
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            data = _this$props.data,
            noBounces = _this$props.noBounces,
            stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,
            style = _this$props.style,
            contentContainerStyle = _this$props.contentContainerStyle,
            ListFooterComponent = _this$props.ListFooterComponent,
            refreshControl = _this$props.refreshControl,
            _ListEmptyComponent = _this$props.ListEmptyComponent,
            showsVerticalScrollIndicator = _this$props.showsVerticalScrollIndicator,
            keyboardShouldPersistTaps = _this$props.keyboardShouldPersistTaps,
            getItemLayout = _this$props.getItemLayout,
            sectionHeaderStyle = _this$props.sectionHeaderStyle,
            onScroll = _this$props.onScroll,
            initialNumToRender = _this$props.initialNumToRender,
            _keyExtractor = _this$props.keyExtractor,
            onMomentumScrollBegin = _this$props.onMomentumScrollBegin,
            _onEndReached = _this$props.onEndReached,
            isDark = _this$props.isDark,
            ListHeaderComponent = _this$props.ListHeaderComponent;
        return _react.default.createElement(_reactNative.SectionList, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('SectionList'),
          testID: "SectionList",
          onScroll: onScroll,
          onMomentumScrollBegin: onMomentumScrollBegin,
          getItemLayout: getItemLayout,
          ref: function ref(view) {
            _this2.sectionList = view;
          },
          keyboardShouldPersistTaps: keyboardShouldPersistTaps,
          initialNumToRender: initialNumToRender || 20,
          style: style,
          contentContainerStyle: contentContainerStyle,
          bounces: !noBounces,
          sections: data,
          ListHeaderComponent: ListHeaderComponent,
          ListFooterComponent: ListFooterComponent,
          refreshControl: typeof refreshControl === 'undefined' ? null : refreshControl,
          stickySectionHeadersEnabled: typeof stickySectionHeadersEnabled === 'undefined' ? true : stickySectionHeadersEnabled,
          ListEmptyComponent: function ListEmptyComponent() {
            if (_ListEmptyComponent) {
              return _ListEmptyComponent;
            } else {
              return _react.default.createElement(_reactNative.View, null);
            }
          },
          showsVerticalScrollIndicator: showsVerticalScrollIndicator,
          onEndReached: function onEndReached() {
            if (typeof _onEndReached === 'function') {
              _onEndReached();
            }
          },
          onEndReachedThreshold: 0.2,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                section = _ref.section;

            if (section.title === 'type:bottomButton') {
              return _react.default.createElement(_LHButton.default, {
                testID: item.testID,
                btnText: item.title,
                style: {
                  backgroundColor: isDark ? '#333' : '#F5F5F5',
                  marginHorizontal: (0, _LHCommonFunction.dp)(24)
                },
                btnTextStyle: {
                  color: isDark ? '#D92719' : '#F43F31'
                },
                textDisabledStyle: {
                  color: '#999999'
                },
                pressBackgroundColor: isDark ? '#333' : '#F5F5F5',
                onPress: function onPress() {
                  if (!_this2.buttonHasPress && typeof item.press === 'function') {
                    _this2.buttonHasPress = true;
                    item.press();
                    setTimeout(function () {
                      _this2.buttonHasPress = false;
                    }, 300);
                  }
                }
              });
            } else {
              return _react.default.createElement(_LHStandardCell.default, {
                testID: item.testID,
                marginLeft: item.marginLeft,
                marginBottom: item.marginBottom,
                marginTop: item.marginTop,
                showOfflineIcon: item.showOfflineIcon,
                separatorMarginLeft: item.separatorMarginLeft,
                iconSource: item.iconSource,
                showPlaceHolderImage: item.showPlaceHolderImage,
                isIconSourceNeedCache: item.isIconSourceNeedCache,
                leftIconStyle: item.leftIconStyle,
                hasRightArrow: !item.hideRightArrow,
                rightArrowStyle: item.rightArrowStyle,
                hasBadge: item.hasBadge,
                showBadge: item.showBadge,
                badge: item.badge,
                descriptionNumberOfLines: item.descriptionNumberOfLines,
                active: item.active,
                leftArrowSource: item.leftRrrowSource,
                textContainer: item.textContainer,
                description: item.description,
                descriptionStyle: item.descriptionStyle,
                rightDescriptionStyle: item.rightDescriptionStyle,
                rightDescriptionColor: item.rightDescriptionColor,
                rightDescription: item.rightDescription,
                rightIconSource: item.rightIconSource,
                rightIconStype: item.rightIconStype,
                hasDot: item.hasDot,
                hasSwitch: item.hasSwitch,
                useControlledSwitch: item.useControlledSwitch,
                switchValue: item.switchValue,
                switchDisabled: item.switchDisabled,
                switchColor: item.switchColor,
                onSwitchChange: item.onSwitchChange,
                hasSlider: item.hasSlider,
                sliderValue: item.sliderValue,
                onSliderChange: item.onSliderChange,
                hasCheckBox: item.hasCheckBox,
                checkBoxActive: item.checkBoxActive,
                checkBoxActiveIcon: item.checkBoxActiveIcon,
                checkBoxNotActiveIcon: item.checkBoxNotActiveIcon,
                rowContainerStyle: item.rowContainerStyle,
                titleStyle: item.titleStyle,
                title: item.title,
                activeTitleStyle: item.activeTitleStyle,
                activeIconStyle: item.activeIconStyle,
                titleNumberOfLines: item.titleNumberOfLines,
                topSeparatorLine: false,
                bottomSeparatorLine: false,
                useTouchableHighlight: !item.noTouchableHighlight,
                minimumLongPressDuration: item.minimumLongPressDuration,
                press: item.press,
                longPress: item.longPress,
                showSliderView: item.showSliderView,
                showNewSliderView: item.showNewSliderView,
                bottomSliderSeparator: item.bottomSliderSeparator,
                showWithPercent: item.showWithPercent,
                valueStyle: item.valueStyle,
                sliderStyle: item.sliderStyle,
                sliderProps: item.sliderProps,
                onSlidingComplete: item.onSlidingComplete,
                style: [{}, item.style],
                cellContainerStyle: item.cellContainerStyle,
                disabled: item.disabled,
                containerNeedAnimate: item.containerNeedAnimate,
                rightElement: item.rightElement,
                rightElementStyle: item.rightElementStyle,
                isDark: isDark
              }, item.children);
            }
          },
          renderSectionHeader: function renderSectionHeader(_ref2) {
            var section = _ref2.section;

            if (section.title === 'type:bottomButton') {
              return _react.default.createElement(_reactNative.View, {
                style: {
                  backgroundColor: isDark ? '#000' : '#fff',
                  height: (0, _LHCommonFunction.dp)(24)
                }
              });
            } else if (section.title) {
              return _react.default.createElement(_reactNative.View, {
                style: [{
                  backgroundColor: isDark ? '#000' : '#fff'
                }, sectionHeaderStyle]
              }, _react.default.createElement(_reactNative.View, {
                style: {
                  height: (0, _LHCommonFunction.dp)(8),
                  justifyContent: 'center'
                }
              }), _react.default.createElement(_reactNative.View, {
                style: [styles.sectionHeader]
              }, _react.default.createElement(_LHText.default, {
                style: [styles.listTitle, {
                  color: isDark ? 'rgba(255,255,255,0.6)' : '#8C93B0'
                }]
              }, section.title)));
            } else if (typeof section.sectionHeader === 'function') {
              return section.sectionHeader();
            } else {
              if (data.indexOf(section) === 0) {
                return _react.default.createElement(_reactNative.View, {
                  style: {
                    height: (0, _LHCommonFunction.dp)(8)
                  }
                });
              }

              return null;
            }
          },
          renderSectionFooter: function renderSectionFooter(_ref3) {
            var section = _ref3.section;

            if (!(data.indexOf(section) === data.length - 1 || data.indexOf(section) === data.length - 2 && data[data.length - 1] && data[data.length - 1].title === 'type:bottomButton')) {
              return _react.default.createElement(_reactNative.View, {
                style: [{
                  backgroundColor: isDark ? '#000' : '#fff'
                }]
              }, _react.default.createElement(_reactNative.View, {
                style: _reactNative.StyleSheet.flatten([{
                  justifyContent: 'center'
                }, section.title ? {
                  marginTop: (0, _LHCommonFunction.dp)(8),
                  height: (0, _LHCommonFunction.dp)(24)
                } : {
                  height: (0, _LHCommonFunction.dp)(40)
                }])
              }, data.indexOf(section) !== data.length - 1 ? _react.default.createElement(_LHSeparator.default, {
                isDark: isDark,
                style: {
                  marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(27)
                }
              }) : null));
            } else {
              return null;
            }
          },
          keyExtractor: function keyExtractor(item, index) {
            if (typeof _keyExtractor === 'function') {
              return _keyExtractor(item, index);
            } else {
              return index;
            }
          }
        });
      }
    }]);
    return LHStandardList;
  }(_react.default.Component);

  LHStandardList.defaultProps = {
    showsVerticalScrollIndicator: false,
    keyboardShouldPersistTaps: 'never',
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHStandardList);

  exports.default = _default;
},10346,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10349,10871,10847,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardCell.default;
  exports.default = _default;
},10349,[14305,10352]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[11]);

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHWebImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHPlaceHolderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHSliderNewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var styles = _reactNative.StyleSheet.create({
    dot: {
      width: _LHCommonFunction.LHUiUtils.GetPx(10),
      height: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignSelf: 'center',
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(-4),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12)
    },
    whiteBg: {
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
    },
    allContainer: {
      alignSelf: 'stretch',
      flex: 1
    },
    textContainer: {
      alignSelf: 'stretch',
      flexDirection: 'column',
      minWidth: '45%'
    },
    rowContainer: {
      alignSelf: 'stretch',
      flexDirection: 'row',
      width: '100%'
    },
    cellContainer: {
      alignSelf: 'stretch',
      flexDirection: 'row',
      width: '100%'
    },
    icon: {
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(12),
      alignSelf: 'center',
      width: _LHCommonFunction.LHUiUtils.GetPx(36)
    },
    iconSource: {
      width: '100%',
      height: '100%'
    },
    offlineIcon: {
      position: 'absolute',
      width: _LHCommonFunction.LHUiUtils.GetPx(15),
      height: _LHCommonFunction.LHUiUtils.GetPx(15),
      right: 0,
      bottom: 0
    },
    rightIcon: {
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(12),
      alignSelf: 'center'
    },
    activeIcon: {
      width: _LHCommonFunction.LHUiUtils.GetPx(6),
      height: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignSelf: 'center',
      tintColor: _LHCommonFunction.LHUiUtils.MiJiaBlue
    },
    title: {
      fontWeight: 'bold',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      alignItems: 'stretch',
      alignSelf: 'stretch',
      textAlign: 'left',
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(27),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      letterSpacing: 0
    },
    active: {
      color: _LHCommonFunction.LHUiUtils.MiJiaBlue
    },
    description: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18),
      alignItems: 'stretch',
      alignSelf: 'stretch',
      textAlign: 'left',
      color: '#7F7F7F',
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(16),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      letterSpacing: 0
    },
    descTextStyle: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18),
      alignItems: 'stretch',
      alignSelf: 'stretch',
      textAlign: 'left',
      color: '#999999',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    descContainerStyle: {
      flexDirection: 'row',
      alignItems: 'center',
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(16)
    },
    rightDescription: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18),
      alignSelf: 'center',
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(-4),
      textAlign: 'right',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      flex: 1,
      minWidth: '12%',
      letterSpacing: 0
    },
    noRightArrow: {
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(27)
    },
    switch: {
      alignSelf: 'center',
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(20)
    },
    subArrow: {
      width: _LHCommonFunction.LHUiUtils.GetPx(24),
      height: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(27),
      alignSelf: 'center'
    },
    badgeText: {
      width: _LHCommonFunction.LHUiUtils.GetPx(16),
      height: _LHCommonFunction.LHUiUtils.GetPx(16),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(8),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(12),
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlueColor,
      alignSelf: 'center',
      justifyContent: 'center',
      color: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      textAlign: 'center',
      overflow: 'hidden',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12)
    },
    checkBox: {
      width: _LHCommonFunction.LHUiUtils.GetPx(22),
      height: _LHCommonFunction.LHUiUtils.GetPx(22),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(9),
      alignSelf: 'center',
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(27),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12)
    },
    checkBoxActive: {
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaBlue
    },
    checkBoxInner: {
      transform: [{
        rotate: '-225deg'
      }],
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      borderRightWidth: 2,
      borderTopWidth: 2,
      width: _LHCommonFunction.LHUiUtils.GetPx(10),
      height: _LHCommonFunction.LHUiUtils.GetPx(6),
      alignSelf: 'center',
      marginTop: 2,
      opacity: 0
    },
    checkBoxInnerShow: {
      opacity: 1
    },
    sliderTitleText: {
      fontWeight: 'bold',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      color: _LHCommonFunction.LHUiUtils.MiJiaTitleColor,
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    sliderValueText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16)
    },
    sliderThumbStyle: {
      width: _LHCommonFunction.LHUiUtils.GetPx(24),
      height: _LHCommonFunction.LHUiUtils.GetPx(24),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(12),
      borderWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderColor: 'rgba(0,0,0,0.15)'
    }
  });

  var LHStandardCell = function (_React$Component) {
    (0, _inherits2.default)(LHStandardCell, _React$Component);

    function LHStandardCell(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardCell);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardCell).call(this, props));

      _this.renderDescription = function () {
        var _this$props = _this.props,
            iconSource = _this$props.iconSource,
            active = _this$props.active,
            description = _this$props.description,
            descriptionNumberOfLines = _this$props.descriptionNumberOfLines,
            descriptionStyle = _this$props.descriptionStyle,
            isDark = _this$props.isDark;
        var marginLeft = _this.state.marginLeft;
        if (!description) return null;
        var leftSty = {
          marginLeft: iconSource || active ? 0 : marginLeft,
          marginBottom: _LHCommonFunction.LHUiUtils.GetPx(16)
        };

        if (typeof description === 'function') {
          return description([styles.descContainerStyle, leftSty], styles.descTextStyle);
        }

        return descriptionNumberOfLines ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: descriptionNumberOfLines,
          style: [styles.description, leftSty, descriptionStyle]
        }, description) : _react.default.createElement(_reactNative.Text, {
          style: [styles.description, {
            color: isDark ? 'rgba(255, 255, 255, 0.4)' : '#7F7F7F'
          }, leftSty, descriptionStyle]
        }, description);
      };

      _this.renderRightDescription = function () {
        var _this$props2 = _this.props,
            rightDescription = _this$props2.rightDescription,
            hasRightArrow = _this$props2.hasRightArrow,
            rightDescriptionStyle = _this$props2.rightDescriptionStyle,
            testID = _this$props2.testID,
            isDark = _this$props2.isDark;

        if (typeof rightDescription === 'function') {
          return rightDescription();
        }

        return rightDescription ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID + '_RightDescriptionLabel'),
          testID: testID + '_RightDescriptionLabel',
          style: [styles.rightDescription, hasRightArrow ? '' : styles.noRightArrow, {
            color: isDark ? 'rgba(255, 255, 255, 0.4)' : '#7F7F7F'
          }, rightDescriptionStyle]
        }, rightDescription) : _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        });
      };

      var _this$props3 = _this.props,
          _marginLeft = _this$props3.marginLeft,
          data = _this$props3.data,
          marginTop = _this$props3.marginTop,
          marginBottom = _this$props3.marginBottom,
          separatorMarginLeft = _this$props3.separatorMarginLeft,
          switchDisabled = _this$props3.switchDisabled,
          useControlledSwitch = _this$props3.useControlledSwitch,
          hasSwitch = _this$props3.hasSwitch;

      if (hasSwitch && switchDisabled && !useControlledSwitch) {}

      _this.state = {
        marginLeft: typeof _marginLeft !== 'undefined' ? _marginLeft : _LHCommonFunction.LHUiUtils.GetPx(27),
        data: data || {},
        marginTop: typeof marginTop !== 'undefined' ? marginTop : _LHCommonFunction.LHUiUtils.GetPx(17),
        marginBottom: typeof marginBottom !== 'undefined' ? marginBottom : typeof marginTop !== 'undefined' ? marginTop : _LHCommonFunction.LHUiUtils.GetPx(17),
        separatorMarginLeft: _this.getSeparatorMarginLeft(separatorMarginLeft)
      };
      return _this;
    }

    (0, _createClass2.default)(LHStandardCell, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(data) {
        var separatorMarginLeft = this.state.separatorMarginLeft;

        if (data.separatorMarginLeft !== separatorMarginLeft) {
          this.setState({
            separatorMarginLeft: this.getSeparatorMarginLeft(data.separatorMarginLeft)
          });
        }
      }
    }, {
      key: "getSeparatorMarginLeft",
      value: function getSeparatorMarginLeft(separatorMarginLeft) {
        var marginLeft = this.props.marginLeft;
        return typeof separatorMarginLeft !== 'undefined' ? separatorMarginLeft : typeof marginLeft !== 'undefined' ? marginLeft : _LHCommonFunction.LHUiUtils.GetPx(27);
      }
    }, {
      key: "viewOnTouched",
      value: function viewOnTouched() {
        var press = this.props.press;
        var data = this.state.data;

        if (press) {
          press(data);
        }
      }
    }, {
      key: "viewOnLongPressed",
      value: function viewOnLongPressed() {
        var longPress = this.props.longPress;
        var data = this.state.data;

        if (longPress) {
          longPress(data);
        }
      }
    }, {
      key: "switchIsOn",
      value: function switchIsOn(isOn) {
        var onSwitchChange = this.props.onSwitchChange;

        if (onSwitchChange) {
          onSwitchChange(isOn);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props4 = this.props,
            iconSource = _this$props4.iconSource,
            isIconSourceNeedCache = _this$props4.isIconSourceNeedCache,
            leftIconStyle = _this$props4.leftIconStyle,
            showPlaceHolderImage = _this$props4.showPlaceHolderImage,
            iconSourceStyle = _this$props4.iconSourceStyle,
            hasRightArrow = _this$props4.hasRightArrow,
            rightArrowStyle = _this$props4.rightArrowStyle,
            hasBadge = _this$props4.hasBadge,
            showBadge = _this$props4.showBadge,
            badge = _this$props4.badge,
            active = _this$props4.active,
            leftArrowSource = _this$props4.leftArrowSource,
            activeTitleStyle = _this$props4.activeTitleStyle,
            activeIconStyle = _this$props4.activeIconStyle,
            description = _this$props4.description,
            rightDescription = _this$props4.rightDescription,
            rightIconSource = _this$props4.rightIconSource,
            rightIconStype = _this$props4.rightIconStype,
            hasSwitch = _this$props4.hasSwitch,
            hasDot = _this$props4.hasDot,
            useControlledSwitch = _this$props4.useControlledSwitch,
            switchValue = _this$props4.switchValue,
            switchColor = _this$props4.switchColor,
            switchDisabled = _this$props4.switchDisabled,
            switchTintColor = _this$props4.switchTintColor,
            hasCheckBox = _this$props4.hasCheckBox,
            checkBoxActive = _this$props4.checkBoxActive,
            rowContainerStyle = _this$props4.rowContainerStyle,
            titleStyle = _this$props4.titleStyle,
            title = _this$props4.title,
            titleNumberOfLines = _this$props4.titleNumberOfLines,
            style = _this$props4.style,
            topSeparatorStyle = _this$props4.topSeparatorStyle,
            topSeparatorLine = _this$props4.topSeparatorLine,
            bottomSeparatorStyle = _this$props4.bottomSeparatorStyle,
            bottomSeparatorLine = _this$props4.bottomSeparatorLine,
            useTouchableHighlight = _this$props4.useTouchableHighlight,
            minimumLongPressDuration = _this$props4.minimumLongPressDuration,
            textContainer = _this$props4.textContainer,
            showOfflineIcon = _this$props4.showOfflineIcon,
            showDeletedIcon = _this$props4.showDeletedIcon,
            showSliderView = _this$props4.showSliderView,
            showWithPercent = _this$props4.showWithPercent,
            valueStyle = _this$props4.valueStyle,
            sliderStyle = _this$props4.sliderStyle,
            sliderProps = _this$props4.sliderProps,
            onSlidingComplete = _this$props4.onSlidingComplete,
            children = _this$props4.children,
            cellContainerStyle = _this$props4.cellContainerStyle,
            disabled = _this$props4.disabled,
            testID = _this$props4.testID,
            containerNeedAnimate = _this$props4.containerNeedAnimate,
            checkBoxNotActiveIcon = _this$props4.checkBoxNotActiveIcon,
            checkBoxActiveIcon = _this$props4.checkBoxActiveIcon,
            rightElement = _this$props4.rightElement,
            rightElementStyle = _this$props4.rightElementStyle,
            iconSourceResizeMode = _this$props4.iconSourceResizeMode,
            isDark = _this$props4.isDark,
            showNewSliderView = _this$props4.showNewSliderView,
            bottomSliderSeparator = _this$props4.bottomSliderSeparator;
        var _this$state = this.state,
            marginLeft = _this$state.marginLeft,
            marginBottom = _this$state.marginBottom,
            marginTop = _this$state.marginTop,
            separatorMarginLeft = _this$state.separatorMarginLeft;
        var offlineIcon = showDeletedIcon === true ? null : showOfflineIcon ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: styles.offlineIcon,
          source: _LHCommonIcon.default.cellIcon.offLine
        }) : null;
        var deletedIcon = showDeletedIcon ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: styles.offlineIcon,
          source: _LHCommonIcon.default.cellIcon.deleted
        }) : null;
        var iconImage = null;

        if (isIconSourceNeedCache) {
          iconImage = _react.default.createElement(_LHWebImage.default, {
            source: iconSource,
            style: styles.iconSource
          });
        } else if (iconSource) {
          iconImage = _react.default.createElement(_reactNative.Image, {
            resizeMode: iconSourceResizeMode || 'contain',
            key: iconSource.uri,
            style: [styles.iconSource, iconSourceStyle],
            source: iconSource
          });
        }

        var icon = iconImage ? showPlaceHolderImage ? _react.default.createElement(_LHPlaceHolderImage.default, {
          style: [styles.icon, {
            marginLeft: marginLeft
          }, leftIconStyle],
          iconSource: iconSource,
          iconSourceStyle: iconSourceStyle
        }, offlineIcon, deletedIcon) : _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            marginLeft: marginLeft
          }, leftIconStyle]
        }, iconImage, offlineIcon, deletedIcon) : null;
        var rightArrow = hasRightArrow ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: [styles.subArrow, rightArrowStyle],
          source: _Images.default.common.right_arrow
        }) : null;
        var badgeElement = hasBadge ? _react.default.createElement(_reactNative.Text, {
          style: [styles.badgeText, {
            opacity: showBadge ? 1 : 0
          }]
        }, badge) : null;
        var descriptionElement = this.renderDescription();
        var rightArrowImg = isDark ? _LHCommonIcon.default.cellIcon.rightArrowDark : _LHCommonIcon.default.cellIcon.rightArrow;
        var activeIcon = active ? _react.default.createElement(_reactNative.View, {
          style: {
            width: _LHCommonFunction.LHUiUtils.GetPx(27),
            alignSelf: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: [styles.activeIcon, activeIconStyle],
          source: leftArrowSource || rightArrowImg
        })) : null;
        var rightDescriptionElement = this.renderRightDescription();
        var rightDotElement = hasDot ? _react.default.createElement(_reactNative.View, {
          style: [styles.dot, {
            backgroundColor: isDark ? '#D92719' : '#F43f31'
          }, hasRightArrow ? '' : styles.noRightArrow]
        }) : null;
        var rightIcon = rightIconSource ? _react.default.createElement(_reactNative.Image, {
          fadeDuration: 0,
          style: [styles.rightIcon, hasRightArrow ? '' : styles.noRightArrow, rightIconStype],
          source: rightIconSource
        }) : null;
        var rightSwitch = hasSwitch ? _react.default.createElement(_reactNative.View, {
          style: {
            alignSelf: 'center',
            marginRight: _LHCommonFunction.LHUiUtils.GetPx(27),
            marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12)
          }
        }, useControlledSwitch ? _react.default.createElement(_LHSwitch.default, {
          isDark: isDark,
          disabled: switchDisabled || false,
          tintColor: switchTintColor,
          onTintColor: switchColor || _LHCommonFunction.LHUiUtils.MiJiaBlue,
          onValueChange: function onValueChange(state) {
            _this2.switchIsOn(state);
          },
          value: switchValue,
          ref: function ref(switchBtn) {
            _this2.switchBtn = switchBtn;
          },
          testID: testID + 'Switch'
        }) : _react.default.createElement(_Switch.default, {
          disabled: switchDisabled || false,
          tintColor: switchTintColor || '#f0f0f0',
          onTintColor: switchColor || _LHCommonFunction.LHUiUtils.MiJiaBlue,
          onValueChange: function onValueChange(state) {
            _this2.switchIsOn(state);
          },
          value: switchValue,
          ref: function ref(switchBtn) {
            _this2.switchBtn = switchBtn;
          }
        })) : null;
        var checkActive = isDark ? _LHCommonIcon.default.cellIcon.checkActiveDark : _LHCommonIcon.default.cellIcon.checkActive;
        var checkNotActive = isDark ? _LHCommonIcon.default.cellIcon.checkNotActiveDark : _LHCommonIcon.default.cellIcon.checkNotActive;
        var rightCheckbBox = hasCheckBox ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: styles.checkBox,
          source: checkBoxActive ? checkBoxActiveIcon || checkActive : checkBoxNotActiveIcon || checkNotActive
        }) : null;
        var rightView = rightElement ? _react.default.createElement(_reactNative.View, {
          style: [{
            alignSelf: 'center',
            marginRight: _LHCommonFunction.LHUiUtils.GetPx(27)
          }, rightElementStyle]
        }, rightElement) : null;
        var titleS = [styles.title, {
          marginBottom: description ? 1 : iconSource ? _LHCommonFunction.LHUiUtils.GetPx(20) : marginBottom
        }, {
          marginTop: description ? _LHCommonFunction.LHUiUtils.GetPx(16) : iconSource ? _LHCommonFunction.LHUiUtils.GetPx(20) : marginTop
        }, active ? typeof activeTitleStyle === 'undefined' ? styles.active : activeTitleStyle : '', {
          marginLeft: iconSource || active ? 0 : marginLeft
        }, {
          color: isDark ? 'rgba(255, 255, 255, 0.9)' : '#000000'
        }, titleStyle];
        var titleEle = title ? titleNumberOfLines ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          style: titleS
        }, title) : _react.default.createElement(_reactNative.Text, {
          style: titleS
        }, title) : null;

        var textEle = _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            maxWidth: (width - _LHCommonFunction.LHUiUtils.GetPx(27) - (icon ? (leftIconStyle && _reactNative.StyleSheet.flatten(leftIconStyle).width || _LHCommonFunction.LHUiUtils.GetPx(36)) + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - (activeIcon ? _LHCommonFunction.LHUiUtils.GetPx(6) : 0) - (rightDescription ? width * 0.12 + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - (rightSwitch ? _LHCommonFunction.LHUiUtils.GetPx(44) + _LHCommonFunction.LHUiUtils.GetPx(20) : 0) - (rightCheckbBox ? _LHCommonFunction.LHUiUtils.GetPx(20) + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - (rightArrow ? _LHCommonFunction.LHUiUtils.GetPx(24) : 0) - (rightDotElement ? _LHCommonFunction.LHUiUtils.GetPx(10) + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - (rightIcon ? (rightIconStype && _reactNative.StyleSheet.flatten(rightIconStype).width || _LHCommonFunction.LHUiUtils.GetPx(20)) + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - (rightElement ? (rightElementStyle && _reactNative.StyleSheet.flatten(rightElementStyle).width || _LHCommonFunction.LHUiUtils.GetPx(60)) + _LHCommonFunction.LHUiUtils.GetPx(12) : 0) - _LHCommonFunction.LHUiUtils.GetPx(27) - _LHCommonFunction.LHUiUtils.GetPx(3)) / width * 100 + '%'
          }, textContainer]
        }, titleEle, descriptionElement);

        var content = containerNeedAnimate ? _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.rowContainer, {
            opacity: disabled ? 0.3 : 1
          }, rowContainerStyle]
        }, activeIcon, icon, textEle, rightDescriptionElement, rightDotElement, rightIcon, badgeElement, rightView, rightSwitch, rightCheckbBox, rightArrow) : _react.default.createElement(_reactNative.View, {
          style: [styles.rowContainer, {
            opacity: disabled ? 0.3 : 1
          }, rowContainerStyle]
        }, activeIcon, icon, textEle, rightDescriptionElement, rightDotElement, rightIcon, badgeElement, rightView, rightSwitch, rightCheckbBox, rightArrow);

        if (useTouchableHighlight && !disabled) {
          content = _react.default.createElement(_reactNative.TouchableHighlight, {
            style: [styles.cellContainer, cellContainerStyle],
            onPress: function onPress() {
              _this2.viewOnTouched();
            },
            onLongPress: function onLongPress() {
              _this2.viewOnLongPressed();
            },
            delayLongPress: minimumLongPressDuration || 500,
            underlayColor: _LHCommonFunction.LHUiUtils.MiJiaCellSelBgColor,
            activeOpacity: 1,
            accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
            testID: testID
          }, content);
        } else {
          content = _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
            style: [styles.cellContainer, cellContainerStyle],
            onPress: function onPress() {
              _this2.viewOnTouched();
            },
            onLongPress: function onLongPress() {
              _this2.viewOnLongPressed();
            },
            delayLongPress: minimumLongPressDuration || 500,
            accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
            testID: testID
          }, content);
        }

        if (showNewSliderView) {
          content = _react.default.createElement(_LHSliderNewCard.default, {
            isDark: isDark,
            progressTitle: title,
            sliderStyle: sliderStyle,
            changeProgressValue: onSlidingComplete,
            sliderProps: sliderProps,
            bottomSliderSeparator: bottomSliderSeparator
          });
        } else if (showSliderView) {
          content = _react.default.createElement(_ListItem.ListItemWithSlider, {
            title: title,
            containerStyle: (0, _extends2.default)({}, {
              paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(27),
              height: _LHCommonFunction.LHUiUtils.GetPx(105)
            }, rowContainerStyle),
            sliderStyle: _reactNative.StyleSheet.flatten([{
              thumbStyle: styles.sliderThumbStyle
            }, sliderStyle]),
            titleStyle: _reactNative.StyleSheet.flatten([styles.sliderTitleText, titleStyle, {
              marginRight: _LHCommonFunction.LHUiUtils.GetPx(2)
            }]),
            valueStyle: _reactNative.StyleSheet.flatten([styles.sliderValueText, valueStyle, {
              marginLeft: _LHCommonFunction.LHUiUtils.GetPx(2)
            }]),
            showSeparator: false,
            showWithPercent: typeof showWithPercent === 'undefined' ? false : showWithPercent,
            sliderProps: sliderProps,
            onSlidingComplete: onSlidingComplete
          });
        }

        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: '100%'
          }, {
            backgroundColor: isDark ? '#000000' : '#ffffff'
          }, style],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID + 'Wrap'),
          testID: testID + 'Wrap'
        }, topSeparatorLine ? _react.default.createElement(_LHSeparator.default, {
          style: [{
            opacity: topSeparatorLine ? disabled ? 0.3 : 1 : 0,
            alignSelf: 'flex-start'
          }, {
            marginLeft: separatorMarginLeft
          }, topSeparatorStyle]
        }) : null, children || content, bottomSeparatorLine ? _react.default.createElement(_LHSeparator.default, {
          style: [{
            opacity: bottomSeparatorLine ? disabled ? 0.3 : 1 : 0,
            alignSelf: 'flex-start'
          }, {
            marginLeft: separatorMarginLeft
          }, bottomSeparatorStyle]
        }) : null);
      }
    }]);
    return LHStandardCell;
  }(_react.default.Component);

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHStandardCell);

  exports.default = _default;
},10352,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10004,10347,10338,10308,10355,10844,10847,10853,10859,10865]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var LHCommonIcon = function LHCommonIcon() {
    (0, _classCallCheck2.default)(this, LHCommonIcon);
  };

  LHCommonIcon.card = {
    alarm: _$$_REQUIRE(_dependencyMap[2]),
    ifttt: _$$_REQUIRE(_dependencyMap[3]),
    fold: _$$_REQUIRE(_dependencyMap[4]),
    unfold: _$$_REQUIRE(_dependencyMap[5]),
    set: _$$_REQUIRE(_dependencyMap[6]),
    cardUpgrade: _$$_REQUIRE(_dependencyMap[7])
  };
  LHCommonIcon.navigation = {
    add: {
      disable: _$$_REQUIRE(_dependencyMap[8]),
      normal: _$$_REQUIRE(_dependencyMap[9]),
      press: _$$_REQUIRE(_dependencyMap[10])
    },
    back: {
      disable: _$$_REQUIRE(_dependencyMap[11]),
      normal: _$$_REQUIRE(_dependencyMap[12]),
      dark: _$$_REQUIRE(_dependencyMap[13]),
      press: _$$_REQUIRE(_dependencyMap[14])
    },
    cancel: {
      disable: _$$_REQUIRE(_dependencyMap[15]),
      normal: _$$_REQUIRE(_dependencyMap[16]),
      press: _$$_REQUIRE(_dependencyMap[17])
    },
    confirm: {
      disable: _$$_REQUIRE(_dependencyMap[18]),
      normal: _$$_REQUIRE(_dependencyMap[19]),
      press: _$$_REQUIRE(_dependencyMap[20])
    },
    info: {
      disable: _$$_REQUIRE(_dependencyMap[21]),
      normal: _$$_REQUIRE(_dependencyMap[22]),
      press: _$$_REQUIRE(_dependencyMap[23])
    },
    like: {
      disable: _$$_REQUIRE(_dependencyMap[24]),
      normal: _$$_REQUIRE(_dependencyMap[25]),
      press: _$$_REQUIRE(_dependencyMap[26])
    },
    more: {
      disable: _$$_REQUIRE(_dependencyMap[27]),
      normal: _$$_REQUIRE(_dependencyMap[28]),
      press: _$$_REQUIRE(_dependencyMap[29])
    },
    my: {
      disable: _$$_REQUIRE(_dependencyMap[30]),
      normal: _$$_REQUIRE(_dependencyMap[31]),
      press: _$$_REQUIRE(_dependencyMap[32])
    },
    next: {
      disable: _$$_REQUIRE(_dependencyMap[33]),
      normal: _$$_REQUIRE(_dependencyMap[34]),
      press: _$$_REQUIRE(_dependencyMap[35])
    },
    scan: {
      disable: _$$_REQUIRE(_dependencyMap[36]),
      normal: _$$_REQUIRE(_dependencyMap[37]),
      press: _$$_REQUIRE(_dependencyMap[38])
    },
    search: {
      disable: _$$_REQUIRE(_dependencyMap[39]),
      normal: _$$_REQUIRE(_dependencyMap[40]),
      press: _$$_REQUIRE(_dependencyMap[41])
    },
    select: {
      disable: _$$_REQUIRE(_dependencyMap[42]),
      normal: _$$_REQUIRE(_dependencyMap[43]),
      press: _$$_REQUIRE(_dependencyMap[44])
    },
    selectReverse: {
      disable: _$$_REQUIRE(_dependencyMap[45]),
      normal: _$$_REQUIRE(_dependencyMap[46]),
      press: _$$_REQUIRE(_dependencyMap[47])
    },
    setting: {
      disable: _$$_REQUIRE(_dependencyMap[48]),
      normal: _$$_REQUIRE(_dependencyMap[49]),
      press: _$$_REQUIRE(_dependencyMap[50])
    },
    share: {
      disable: _$$_REQUIRE(_dependencyMap[51]),
      normal: _$$_REQUIRE(_dependencyMap[52]),
      press: _$$_REQUIRE(_dependencyMap[53])
    },
    calender: {
      normal: _$$_REQUIRE(_dependencyMap[54]),
      dark: _$$_REQUIRE(_dependencyMap[55])
    }
  };
  LHCommonIcon.common = {
    emptyImage: {
      normal: _$$_REQUIRE(_dependencyMap[56])
    },
    rename: {
      normal: _$$_REQUIRE(_dependencyMap[57]),
      white: _$$_REQUIRE(_dependencyMap[58])
    },
    delete: {
      normal: _$$_REQUIRE(_dependencyMap[59]),
      white: _$$_REQUIRE(_dependencyMap[60])
    },
    choose: {
      choosedNormal: _$$_REQUIRE(_dependencyMap[61]),
      choosedNormalDark: _$$_REQUIRE(_dependencyMap[62]),
      choosed: _$$_REQUIRE(_dependencyMap[63]),
      choosedDark: _$$_REQUIRE(_dependencyMap[64])
    },
    swipeoutBtnMore: _$$_REQUIRE(_dependencyMap[65]),
    add: {
      addIcon: _$$_REQUIRE(_dependencyMap[66]),
      normal: _$$_REQUIRE(_dependencyMap[67]),
      mgl03: _$$_REQUIRE(_dependencyMap[68]),
      acpartner: _$$_REQUIRE(_dependencyMap[69]),
      profileHub: _$$_REQUIRE(_dependencyMap[70]),
      profileHubDark: _$$_REQUIRE(_dependencyMap[71])
    },
    navigation_close: _$$_REQUIRE(_dependencyMap[72]),
    navigation_confirm: _$$_REQUIRE(_dependencyMap[73]),
    loadFailImage: _$$_REQUIRE(_dependencyMap[74]),
    lumiPreventDelete: _$$_REQUIRE(_dependencyMap[75]),
    lumiPreventDeleteDark: _$$_REQUIRE(_dependencyMap[76]),
    navWhiteRuleNormal: _$$_REQUIRE(_dependencyMap[77]),
    navWhiteRuleNormalDark: _$$_REQUIRE(_dependencyMap[78]),
    selectIcon: {
      acpartner: _$$_REQUIRE(_dependencyMap[79]),
      gateway: _$$_REQUIRE(_dependencyMap[80])
    },
    checkIcon: {
      gateway: _$$_REQUIRE(_dependencyMap[81]),
      acpartner: _$$_REQUIRE(_dependencyMap[82])
    },
    logBlank: _$$_REQUIRE(_dependencyMap[83])
  };
  LHCommonIcon.bottomViewIcon = {
    bottom_bar_collect: _$$_REQUIRE(_dependencyMap[84]),
    bottom_bar_move: _$$_REQUIRE(_dependencyMap[85]),
    bottom_bar_top: _$$_REQUIRE(_dependencyMap[86]),
    bottom_bar_edit: _$$_REQUIRE(_dependencyMap[87]),
    bottom_bar_edit_dark: _$$_REQUIRE(_dependencyMap[88]),
    bottom_bar_edit_disabled: _$$_REQUIRE(_dependencyMap[89]),
    bottom_bar_add: _$$_REQUIRE(_dependencyMap[90]),
    bottom_bar_add_dark: _$$_REQUIRE(_dependencyMap[91])
  };
  LHCommonIcon.cellIcon = {
    checkActive: _$$_REQUIRE(_dependencyMap[92]),
    checkActiveDark: _$$_REQUIRE(_dependencyMap[93]),
    checkNotActive: _$$_REQUIRE(_dependencyMap[94]),
    checkNotActiveDark: _$$_REQUIRE(_dependencyMap[95]),
    offLine: _$$_REQUIRE(_dependencyMap[96]),
    rightArrow: _$$_REQUIRE(_dependencyMap[97]),
    rightArrowDark: _$$_REQUIRE(_dependencyMap[98]),
    rightArrowBlue: _$$_REQUIRE(_dependencyMap[99]),
    deleted: _$$_REQUIRE(_dependencyMap[100])
  };
  LHCommonIcon.deviceIcon = {
    default: _$$_REQUIRE(_dependencyMap[101]),
    lumiGatewaymgl03: _$$_REQUIRE(_dependencyMap[102]),
    lumiAqaraLinuxHub: _$$_REQUIRE(_dependencyMap[103]),
    lumiMijiaLinuxHub: _$$_REQUIRE(_dependencyMap[104])
  };
  LHCommonIcon.iftttIcon = {
    iftttCardSuccessIcon: _$$_REQUIRE(_dependencyMap[105]),
    iftttCardFailIcon: _$$_REQUIRE(_dependencyMap[106]),
    iftttSuccessIcon: _$$_REQUIRE(_dependencyMap[107]),
    iftttFailIcon: _$$_REQUIRE(_dependencyMap[108]),
    iftttInfo: _$$_REQUIRE(_dependencyMap[109]),
    mi_ifttt_launch: _$$_REQUIRE(_dependencyMap[110]),
    mi_ifttt_launch_dark: _$$_REQUIRE(_dependencyMap[111]),
    mi_ifttt_action: _$$_REQUIRE(_dependencyMap[112]),
    mi_ifttt_action_dark: _$$_REQUIRE(_dependencyMap[113])
  };
  LHCommonIcon.triggleDevice = {
    emptyImg: _$$_REQUIRE(_dependencyMap[114]),
    emptyImgDark: _$$_REQUIRE(_dependencyMap[115])
  };
  LHCommonIcon.logCalender = {
    logCalender: _$$_REQUIRE(_dependencyMap[116]),
    logCalenderDark: _$$_REQUIRE(_dependencyMap[117])
  };
  LHCommonIcon.fm = {
    radioCollectSelected: _$$_REQUIRE(_dependencyMap[118]),
    radioCollectUnSelected: _$$_REQUIRE(_dependencyMap[119]),
    radioCollect: _$$_REQUIRE(_dependencyMap[120]),
    radioCollectDark: _$$_REQUIRE(_dependencyMap[121]),
    radioCollectAcDark: _$$_REQUIRE(_dependencyMap[122]),
    radioNext: _$$_REQUIRE(_dependencyMap[123]),
    radioNextDark: _$$_REQUIRE(_dependencyMap[124]),
    radioNextAcDark: _$$_REQUIRE(_dependencyMap[125]),
    radioPre: _$$_REQUIRE(_dependencyMap[126]),
    radioPreDark: _$$_REQUIRE(_dependencyMap[127]),
    radioPreAcDark: _$$_REQUIRE(_dependencyMap[128]),
    radioPlay: _$$_REQUIRE(_dependencyMap[129]),
    radioPlayDark: _$$_REQUIRE(_dependencyMap[130]),
    radioPlayAcDark: _$$_REQUIRE(_dependencyMap[131]),
    radioStop: _$$_REQUIRE(_dependencyMap[132]),
    radioStopDark: _$$_REQUIRE(_dependencyMap[133]),
    radioStopAcDark: _$$_REQUIRE(_dependencyMap[134]),
    radioVoice: _$$_REQUIRE(_dependencyMap[135]),
    radioVolumeDown: _$$_REQUIRE(_dependencyMap[136]),
    radioVolumeUp: _$$_REQUIRE(_dependencyMap[137]),
    radioMore: _$$_REQUIRE(_dependencyMap[138]),
    radioFold: _$$_REQUIRE(_dependencyMap[139]),
    radioBlankIcon: _$$_REQUIRE(_dependencyMap[140])
  };
  LHCommonIcon.record = {
    play: _$$_REQUIRE(_dependencyMap[141]),
    stop: _$$_REQUIRE(_dependencyMap[142]),
    done: _$$_REQUIRE(_dependencyMap[143]),
    remove: _$$_REQUIRE(_dependencyMap[144]),
    rhythm1: _$$_REQUIRE(_dependencyMap[145]),
    rhythm2: _$$_REQUIRE(_dependencyMap[146]),
    rhythm3: _$$_REQUIRE(_dependencyMap[147]),
    selectIcon: _$$_REQUIRE(_dependencyMap[80]),
    placeholderTiming: _$$_REQUIRE(_dependencyMap[148]),
    pause: _$$_REQUIRE(_dependencyMap[149]),
    addBtn: _$$_REQUIRE(_dependencyMap[150])
  };
  LHCommonIcon.protocol = {
    refresh: _$$_REQUIRE(_dependencyMap[151])
  };
  LHCommonIcon.cellWifiIcon = {
    level_0: _$$_REQUIRE(_dependencyMap[152]),
    dark_level_0: _$$_REQUIRE(_dependencyMap[153]),
    level_1: _$$_REQUIRE(_dependencyMap[154]),
    dark_level_1: _$$_REQUIRE(_dependencyMap[155]),
    level_2: _$$_REQUIRE(_dependencyMap[156]),
    dark_level_2: _$$_REQUIRE(_dependencyMap[157]),
    level_3: _$$_REQUIRE(_dependencyMap[158]),
    dark_level_3: _$$_REQUIRE(_dependencyMap[159]),
    level_4: _$$_REQUIRE(_dependencyMap[160]),
    dark_level_4: _$$_REQUIRE(_dependencyMap[161]),
    'level_--': _$$_REQUIRE(_dependencyMap[162]),
    'dark_level_--': _$$_REQUIRE(_dependencyMap[163])
  };
  var _default = LHCommonIcon;
  exports.default = _default;
},10355,[14305,14320,10358,10361,10364,10367,10370,10373,10376,10379,10382,10385,10388,10391,10394,10397,10400,10403,10406,10409,10412,10415,10418,10421,10424,10427,10430,10433,10436,10439,10442,10445,10448,10451,10454,10457,10460,10463,10466,10469,10472,10475,10478,10481,10484,10487,10490,10493,10496,10499,10502,10505,10508,10511,10514,10517,10520,10523,10526,10529,10532,10535,10538,10541,10544,10547,10550,10553,10556,10559,10562,10565,10568,10571,10574,10577,10580,10583,10586,10589,10592,10595,10598,10601,10604,10607,10610,10613,10616,10619,10622,10625,10628,10631,10634,10637,10640,10643,10646,10649,10652,10655,10658,10661,10664,10667,10670,10673,10676,10679,10682,10685,10688,10691,10694,10697,10700,10703,10706,10709,10712,10715,10718,10721,10724,10727,10730,10733,10736,10739,10742,10745,10748,10751,10754,10757,10760,10763,10766,10769,10772,10775,10778,10781,10784,10787,10790,10793,10796,10799,10802,10805,10808,10811,10814,10817,10820,10823,10826,10829,10832,10835,10838,10841]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 102,
    "height": 90,
    "scales": [1],
    "hash": "50efd7fdd644a64f7804711b75554c1e",
    "name": "card_alarm",
    "type": "png"
  });
},10358,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "610760181887b30ebae20932f6544190",
    "name": "card_ifttt",
    "type": "png"
  });
},10361,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "b8d4ca781593554bed1aaa3e33250931",
    "name": "lumi_ic_fold",
    "type": "png"
  });
},10364,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "91337ecde6f23669c325223124e300b2",
    "name": "lumi_ic_unfold",
    "type": "png"
  });
},10367,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b7109c6c545f6692f9081715b0c1b055",
    "name": "lumi_ic_set",
    "type": "png"
  });
},10370,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/card",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "764290a2cd485a898dacb205db57a588",
    "name": "card_upgrade",
    "type": "png"
  });
},10373,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9f08092e22849b0b48d5e7dafe9296f3",
    "name": "add_dis",
    "type": "png"
  });
},10376,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "f181dc99569d27f731afa9f9600c4a63",
    "name": "add_nor",
    "type": "png"
  });
},10379,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b178ee6650b9111e4d780438718856cf",
    "name": "add_pes",
    "type": "png"
  });
},10382,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "f9e41309e0df814e279ab339029286f5",
    "name": "back_dis",
    "type": "png"
  });
},10385,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "6fdfb6cf7038adf1a4eb7094d4f5841b",
    "name": "back_nor",
    "type": "png"
  });
},10388,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "191a43eac23fbeebe97840d57bd6a52f",
    "name": "back_white",
    "type": "png"
  });
},10391,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ebf425369ce192fc23933b221fb1c326",
    "name": "back_pes",
    "type": "png"
  });
},10394,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5b73a3d065c1fab6e230b02ab83d44ef",
    "name": "cancel_dis",
    "type": "png"
  });
},10397,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b8d50bd5e6632fd41dffda9f42e79318",
    "name": "cancel_nor",
    "type": "png"
  });
},10400,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a3b0bc78f6d4cd458c2eb8342e3ac972",
    "name": "cancel_pes",
    "type": "png"
  });
},10403,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "129d1f533c98ecfda6e8d924b8a16d0b",
    "name": "confirm_dis",
    "type": "png"
  });
},10406,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a3a7b8fd0df829e51c2f5249d3e015b5",
    "name": "confirm_nor",
    "type": "png"
  });
},10409,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "15b01c19173e8b5985e99989fc97d8d4",
    "name": "confirm_pes",
    "type": "png"
  });
},10412,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "48a3cc655c0c8499b574cffc0339f343",
    "name": "info_dis",
    "type": "png"
  });
},10415,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "7e63a53ead8799e159bd8e7efbc261ae",
    "name": "info_nor",
    "type": "png"
  });
},10418,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bdbf7bcaaf4a7d854847700d577fc394",
    "name": "info_pes",
    "type": "png"
  });
},10421,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "91983b2aa4cc8997f2f078ac923b47b3",
    "name": "like_dis",
    "type": "png"
  });
},10424,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "02d01920c2bb28e05a5e9c17a59b8363",
    "name": "like_nor",
    "type": "png"
  });
},10427,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "e086e95bfa83d27a1cd88c0e52e632d4",
    "name": "like_pes",
    "type": "png"
  });
},10430,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "89c75b1f9c3068734ec43553be748670",
    "name": "more_dis",
    "type": "png"
  });
},10433,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "f6224c3e94746228b122d22d2f5c83ea",
    "name": "more_nor",
    "type": "png"
  });
},10436,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "f6a20d7d3417f95a5674018313b4e6b8",
    "name": "more_pes",
    "type": "png"
  });
},10439,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b55192688b413eb960c6b13b4d0ad3bf",
    "name": "my_dis",
    "type": "png"
  });
},10442,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a2b4e239008d779db161e292358dbbd1",
    "name": "my_nor",
    "type": "png"
  });
},10445,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "549e375b098cd55efc96e23c4d21f470",
    "name": "my_pes",
    "type": "png"
  });
},10448,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8bf387c3f55ef5848ff23baf619e21da",
    "name": "next_dis",
    "type": "png"
  });
},10451,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "864a6a7b9ad2494a220aad0a0786f2a3",
    "name": "next_nor",
    "type": "png"
  });
},10454,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var factory = _$$_REQUIRE(_dependencyMap[1]);

  if (typeof React === 'undefined') {
    throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
  }

  var ReactNoopUpdateQueue = new React.Component().updater;
  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
},10456,[10297,10459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a24c5e248a8938079abcc4f1a0a81645",
    "name": "next_pes",
    "type": "png"
  });
},10457,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _assign = _$$_REQUIRE(_dependencyMap[0]);

  var emptyObject = _$$_REQUIRE(_dependencyMap[1]);

  var _invariant = _$$_REQUIRE(_dependencyMap[2]);

  var MIXINS_KEY = 'mixins';

  function identity(fn) {
    return fn;
  }

  var ReactPropTypeLocationNames;
  {
    ReactPropTypeLocationNames = {};
  }

  function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
    var injectedMixins = [];
    var ReactClassInterface = {
      mixins: 'DEFINE_MANY',
      statics: 'DEFINE_MANY',
      propTypes: 'DEFINE_MANY',
      contextTypes: 'DEFINE_MANY',
      childContextTypes: 'DEFINE_MANY',
      getDefaultProps: 'DEFINE_MANY_MERGED',
      getInitialState: 'DEFINE_MANY_MERGED',
      getChildContext: 'DEFINE_MANY_MERGED',
      render: 'DEFINE_ONCE',
      componentWillMount: 'DEFINE_MANY',
      componentDidMount: 'DEFINE_MANY',
      componentWillReceiveProps: 'DEFINE_MANY',
      shouldComponentUpdate: 'DEFINE_ONCE',
      componentWillUpdate: 'DEFINE_MANY',
      componentDidUpdate: 'DEFINE_MANY',
      componentWillUnmount: 'DEFINE_MANY',
      UNSAFE_componentWillMount: 'DEFINE_MANY',
      UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',
      UNSAFE_componentWillUpdate: 'DEFINE_MANY',
      updateComponent: 'OVERRIDE_BASE'
    };
    var ReactClassStaticInterface = {
      getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function displayName(Constructor, _displayName) {
        Constructor.displayName = _displayName;
      },
      mixins: function mixins(Constructor, _mixins) {
        if (_mixins) {
          for (var i = 0; i < _mixins.length; i++) {
            mixSpecIntoComponent(Constructor, _mixins[i]);
          }
        }
      },
      childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
      },
      contextTypes: function contextTypes(Constructor, _contextTypes) {
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
      },
      getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
        } else {
          Constructor.getDefaultProps = _getDefaultProps;
        }
      },
      propTypes: function propTypes(Constructor, _propTypes) {
        Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
      },
      statics: function statics(Constructor, _statics) {
        mixStaticSpecIntoComponent(Constructor, _statics);
      },
      autobind: function autobind() {}
    };

    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {}
      }
    }

    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

      if (ReactClassMixin.hasOwnProperty(name)) {
        _invariant(specPolicy === 'OVERRIDE_BASE', "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", name);
      }

      if (isAlreadyDefined) {
        _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);
      }
    }

    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }

      _invariant(typeof spec !== 'function', "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");

      _invariant(!isValidElement(spec), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");

      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;

      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }

      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }

        if (name === MIXINS_KEY) {
          continue;
        }

        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);

        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];

              _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", specPolicy, name);

              if (specPolicy === 'DEFINE_MANY_MERGED') {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === 'DEFINE_MANY') {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
            }
          }
        }
      }
    }

    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }

      for (var name in statics) {
        var property = statics[name];

        if (!statics.hasOwnProperty(name)) {
          continue;
        }

        var isReserved = name in RESERVED_SPEC_KEYS;

        _invariant(!isReserved, "ReactClass: You are attempting to define a reserved property, `%s`, that shouldn't be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.", name);

        var isAlreadyDefined = name in Constructor;

        if (isAlreadyDefined) {
          var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

          _invariant(specPolicy === 'DEFINE_MANY_MERGED', "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name);

          Constructor[name] = createMergedResultFunction(Constructor[name], property);
          return;
        }

        Constructor[name] = property;
      }
    }

    function mergeIntoWithNoDuplicateKeys(one, two) {
      _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          _invariant(one[key] === undefined, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", key);

          one[key] = two[key];
        }
      }

      return one;
    }

    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);

        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }

        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }

    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }

    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      return boundMethod;
    }

    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;

      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }

    var IsMountedPreMixin = {
      componentDidMount: function componentDidMount() {
        this.__isMounted = true;
      }
    };
    var IsMountedPostMixin = {
      componentWillUnmount: function componentWillUnmount() {
        this.__isMounted = false;
      }
    };
    var ReactClassMixin = {
      replaceState: function replaceState(newState, callback) {
        this.updater.enqueueReplaceState(this, newState, callback);
      },
      isMounted: function isMounted() {
        return !!this.__isMounted;
      }
    };

    var ReactClassComponent = function ReactClassComponent() {};

    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

    function createClass(spec) {
      var Constructor = identity(function (props, context, updater) {
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
        this.state = null;
        var initialState = this.getInitialState ? this.getInitialState() : null;

        _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, IsMountedPreMixin);
      mixSpecIntoComponent(Constructor, spec);
      mixSpecIntoComponent(Constructor, IsMountedPostMixin);

      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    }

    return createClass;
  }

  module.exports = factory;
},10459,[10303,10306,10036]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8b990b5d732c3c86487fddc81da0c7a4",
    "name": "scan_dis",
    "type": "png"
  });
},10460,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "224d07736186c49a32dd02920171fd33",
    "name": "scan_nor",
    "type": "png"
  });
},10463,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "167a8ca389f4927d5b4f3cd5af96a023",
    "name": "scan_pes",
    "type": "png"
  });
},10466,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "72d4877b91e0cad61f64c7186bfea4d8",
    "name": "search_dis",
    "type": "png"
  });
},10469,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5fb27e3d53019bc977bef10c4d8b4113",
    "name": "search_nor",
    "type": "png"
  });
},10472,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "4aac68b55ffc57f043b436e4b6c52ac5",
    "name": "search_pes",
    "type": "png"
  });
},10475,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "afd5ffd9fe5d507c0fc8d24951cdd898",
    "name": "select_dis",
    "type": "png"
  });
},10478,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "fa8158b92ec714b7350e90bfe37f6d2c",
    "name": "select_nor",
    "type": "png"
  });
},10481,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "aa61eb67f1da648f57be2f5ff1a90ca5",
    "name": "select_pes",
    "type": "png"
  });
},10484,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "8e3a62b1f55f377cfe1be36908c9321c",
    "name": "select_reverse_dis",
    "type": "png"
  });
},10487,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9ce4617814d809649b6e298885107ec7",
    "name": "select_reverse_nor",
    "type": "png"
  });
},10490,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "f191d9b98f03c7a3c04e3b50f42378af",
    "name": "select_reverse_pes",
    "type": "png"
  });
},10493,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a6fada523e2f5cb2e9f5abfed1bc3b91",
    "name": "setting_dis",
    "type": "png"
  });
},10496,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "b7109c6c545f6692f9081715b0c1b055",
    "name": "setting_nor",
    "type": "png"
  });
},10499,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0ed12edb462f64598571437d60aff50a",
    "name": "setting_pes",
    "type": "png"
  });
},10502,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_dis",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d001a697ceed0a57ff847002614c5f12",
    "name": "share_dis",
    "type": "png"
  });
},10505,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_nor",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "1165b701dbd96ad6f81355e43d08a785",
    "name": "share_nor",
    "type": "png"
  });
},10508,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/navigation_pes",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "588f31abb81c385b9d83add9350a270c",
    "name": "share_pes",
    "type": "png"
  });
},10511,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var GLOBAL = typeof window === 'undefined' ? global : window;

  var setter = function setter(_setter, _clearer, array) {
    return function (callback, delta) {
      var id = _setter(function () {
        _clearer.call(this, id);

        callback.apply(this, arguments);
      }.bind(this), delta);

      if (!this[array]) {
        this[array] = [id];
      } else {
        this[array].push(id);
      }

      return id;
    };
  };

  var clearer = function clearer(_clearer, array) {
    return function (id) {
      if (this[array]) {
        var index = this[array].indexOf(id);

        if (index !== -1) {
          this[array].splice(index, 1);
        }
      }

      _clearer(id);
    };
  };

  var _timeouts = 'TimerMixin_timeouts';

  var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);

  var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

  var _intervals = 'TimerMixin_intervals';

  var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);

  var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

  var _immediates = 'TimerMixin_immediates';

  var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);

  var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

  var _rafs = 'TimerMixin_rafs';

  var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);

  var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

  var TimerMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this[_timeouts] && this[_timeouts].forEach(function (id) {
        GLOBAL.clearTimeout(id);
      });
      this[_timeouts] = null;
      this[_intervals] && this[_intervals].forEach(function (id) {
        GLOBAL.clearInterval(id);
      });
      this[_intervals] = null;
      this[_immediates] && this[_immediates].forEach(function (id) {
        GLOBAL.clearImmediate(id);
      });
      this[_immediates] = null;
      this[_rafs] && this[_rafs].forEach(function (id) {
        GLOBAL.cancelAnimationFrame(id);
      });
      this[_rafs] = null;
    },
    setTimeout: _setTimeout,
    clearTimeout: _clearTimeout,
    setInterval: _setInterval,
    clearInterval: _clearInterval,
    setImmediate: _setImmediate,
    clearImmediate: _clearImmediate,
    requestAnimationFrame: _requestAnimationFrame,
    cancelAnimationFrame: _cancelAnimationFrame
  };
  module.exports = TimerMixin;
},10513,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/calender",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "67bc30ea6c8d6818850cc1f8bf104600",
    "name": "nav_white_calender_normal",
    "type": "png"
  });
},10514,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/calender",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ecb59ecd9b1449db2cb71d6ee9cc82e2",
    "name": "nav_white_calender_norma_dark",
    "type": "png"
  });
},10517,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 648,
    "height": 546,
    "scales": [1],
    "hash": "59ec58baef0e22456d3036a5b833877d",
    "name": "mj_list_empty",
    "type": "png"
  });
},10520,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "c51e4ffb50d4f5f1511a691bd5504dd2",
    "name": "rename_nor",
    "type": "png"
  });
},10523,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "ed980bb83eefbe1740761031ab9dd3d4",
    "name": "rename_nor_white",
    "type": "png"
  });
},10526,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "6a65282662c651f3037f653b573891e9",
    "name": "delete_nor",
    "type": "png"
  });
},10529,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "00f3cbcca2bc4a549a705464e772d54d",
    "name": "delete_nor_white",
    "type": "png"
  });
},10532,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "4e7feb37ce22e4d8d2c67b7ed608d82a",
    "name": "lumi_choose_normal",
    "type": "png"
  });
},10535,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "6401ad1255975bdbb4df3283e9a9f550",
    "name": "lumi_choose_normal_dark",
    "type": "png"
  });
},10538,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "af495c9763990f3531c5a24700ce025a",
    "name": "lumi_choosed",
    "type": "png"
  });
},10541,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "7f645dc8f3831c9c5201a0a003a2c253",
    "name": "lumi_choosed_dark",
    "type": "png"
  });
},10544,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "3e8bdff6fd3b6edc7f0603756890fb6c",
    "name": "swipeout_btn_more",
    "type": "png"
  });
},10547,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "f891518b0ea909468dccfb6dd5ca2989",
    "name": "sub_devices_list_add_icon",
    "type": "png"
  });
},10550,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 198,
    "height": 198,
    "scales": [1],
    "hash": "47d61148afeb325ebf9eed752bc836cd",
    "name": "add_button_nor",
    "type": "png"
  });
},10553,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 198,
    "height": 198,
    "scales": [1],
    "hash": "3cd088ed56ddf943dd3b90bef598a881",
    "name": "add_button_mgl03_nor",
    "type": "png"
  });
},10556,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 198,
    "height": 198,
    "scales": [1],
    "hash": "88f98267e5a137ae922e7578d225b511",
    "name": "add_button_ac_service",
    "type": "png"
  });
},10559,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 270,
    "height": 270,
    "scales": [1],
    "hash": "f2e9adc74c4d8373fc9826d895e27bb3",
    "name": "add_blue",
    "type": "png"
  });
},10562,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 270,
    "height": 270,
    "scales": [1],
    "hash": "697e0027c649deb1b9fa25d34dad65b2",
    "name": "add_dark",
    "type": "png"
  });
},10565,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ff79b74a7b284b15dc7aeb051e6e3c13",
    "name": "lumi_navigation_close",
    "type": "png"
  });
},10568,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0f13c7ef095b1d54a30a8f2f6d517735",
    "name": "lumi_navigation_confirm",
    "type": "png"
  });
},10571,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "372948f0ea16947674da3df52c8be05e",
    "name": "load_fail",
    "type": "png"
  });
},10574,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 1083,
    "height": 600,
    "scales": [1],
    "hash": "91c5ee1c5576a739066c84a8c0024868",
    "name": "lumi_prevent_delete",
    "type": "png"
  });
},10577,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 1083,
    "height": 600,
    "scales": [1],
    "hash": "36d5b8a8776e6c31c3da531c6a12a867",
    "name": "lumi_prevent_delete_dark",
    "type": "png"
  });
},10580,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "7e63a53ead8799e159bd8e7efbc261ae",
    "name": "nav_white_rule_normal",
    "type": "png"
  });
},10583,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "2bd741a51c350f94e5beb6f3c3c6a11c",
    "name": "nav_dark_rule_normal",
    "type": "png"
  });
},10586,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 6,
    "height": 10,
    "scales": [2],
    "hash": "46f8bbc8bdd9352b3998a93ac25a3a27",
    "name": "select_icon_ac",
    "type": "png"
  });
},10589,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 6,
    "height": 10,
    "scales": [2],
    "hash": "6977dd2b9416c2003c9c0ca5f48c25d1",
    "name": "select_icon",
    "type": "png"
  });
},10592,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "4a5fa99c78ec9378db7c96c443dd5ba5",
    "name": "check1",
    "type": "png"
  });
},10595,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 57,
    "height": 57,
    "scales": [1],
    "hash": "2b6675461cbf297615b0ee7beded877f",
    "name": "ac_checkmark",
    "type": "png"
  });
},10598,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "b32040edd73d33048f9a37e94f29c79a",
    "name": "log_blank",
    "type": "png"
  });
},10601,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "f93299ea5cf0bf2eed290c8e997372cb",
    "name": "bottom_bar_collect",
    "type": "png"
  });
},10604,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "a39a6a79bba009e2d03f70b815fec98d",
    "name": "bottom_bar_move",
    "type": "png"
  });
},10607,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "98ab2384e431b749de9087a2de931a80",
    "name": "bottom_bar_top",
    "type": "png"
  });
},10610,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "ed6057f1a098ed5a0f3c4dc1db4f2c8e",
    "name": "edit_rename",
    "type": "png"
  });
},10613,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "f03f8e1384af019074fdc67dfa930e0b",
    "name": "edit_rename_dark",
    "type": "png"
  });
},10616,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "29710802b7b161fd093e38566fa69b84",
    "name": "edit_rename_gray",
    "type": "png"
  });
},10619,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "8f9dea8b4d70c20ade9a8494e35ef038",
    "name": "lumi_bottom_add",
    "type": "png"
  });
},10622,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 75,
    "height": 75,
    "scales": [1],
    "hash": "bebde5bf296c9a2a831bf33af4da10bf",
    "name": "lumi_bottom_add_white",
    "type": "png"
  });
},10625,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "a6ad4d16b3ad329f9de414585f53e19c",
    "name": "selected",
    "type": "png"
  });
},10628,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 66,
    "height": 69,
    "scales": [1],
    "hash": "0a5d9ad35261e3fa5f3c06e643298324",
    "name": "selected_icon_dark",
    "type": "png"
  });
},10631,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "d227a99e37864193ff359406534a4e55",
    "name": "check2",
    "type": "png"
  });
},10634,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/checkBox",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "6ec7c92da8fce5b07523465f5980fd1f",
    "name": "multi_unselected_dark",
    "type": "png"
  });
},10637,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 51,
    "height": 51,
    "scales": [1],
    "hash": "51b0e88e272812a9a65792b952466f3d",
    "name": "device_offline",
    "type": "png"
  });
},10640,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 18,
    "height": 30,
    "scales": [1],
    "hash": "bafcee8b1c0c1cad2ea2efae4656d5ef",
    "name": "select_icon",
    "type": "png"
  });
},10643,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 18,
    "height": 30,
    "scales": [1],
    "hash": "04fbfa72c2b3cd62ca2125d8730b7ef3",
    "name": "picker_arrow_dark",
    "type": "png"
  });
},10646,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 18,
    "height": 30,
    "scales": [1],
    "hash": "6bc049f8d2fd79e8c3a7adf872724acf",
    "name": "select_icon_blue",
    "type": "png"
  });
},10649,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/other",
    "width": 51,
    "height": 51,
    "scales": [1],
    "hash": "18a680fe7fca66e0506df789405ee8bc",
    "name": "device_deleted",
    "type": "png"
  });
},10652,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/deviceIcon",
    "width": 171,
    "height": 168,
    "scales": [1],
    "hash": "44941a15c5f495a226052a843725fb38",
    "name": "device_icon_default",
    "type": "png"
  });
},10655,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/deviceIcon",
    "width": 300,
    "height": 300,
    "scales": [1],
    "hash": "17390c4785178a403ea577d1f8a1613a",
    "name": "lumi.gateway.mgl03",
    "type": "png"
  });
},10658,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 300,
    "height": 300,
    "scales": [1],
    "hash": "9adcc152184ad74557c8661d8172a0f2",
    "name": "lumi_gateway_device_alumi.gateway.aqhm02",
    "type": "png"
  });
},10661,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 300,
    "height": 300,
    "scales": [1],
    "hash": "2abd08b16be93e0e8c0c966ac04a2abe",
    "name": "lumi_gateway_device_other",
    "type": "png"
  });
},10664,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "d5259257f18bddbc73e4b3dfa721e81e",
    "name": "lumi_card_ic_success",
    "type": "png"
  });
},10667,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "4f7d8589d84842f05ef9029df3242e5c",
    "name": "lumi_card_ic_fail",
    "type": "png"
  });
},10670,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "d141afd1449b60dfc6d86d2830740371",
    "name": "lumi_success_icon_dark",
    "type": "png"
  });
},10673,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "cc5054ceebca7ee1ba70f569aa0b786b",
    "name": "lumi_fail_icon",
    "type": "png"
  });
},10676,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 42,
    "height": 42,
    "scales": [1],
    "hash": "ed2a3b4aa308384be3167f06088f69e0",
    "name": "lumi_card_state",
    "type": "png"
  });
},10679,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "c4ef9d767df5b8065d9f865bd5909eb9",
    "name": "auto_if",
    "type": "png"
  });
},10682,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "1f1ab6ef9156590c3e87e651f2db32c2",
    "name": "auto_if_dark",
    "type": "png"
  });
},10685,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "5f9f0440df2c657243187f2a09ffd73e",
    "name": "auto_then",
    "type": "png"
  });
},10688,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/ifttt",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "974ccc7f6a7a52b55eedc88597ff509d",
    "name": "auto_then_dark",
    "type": "png"
  });
},10691,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/triggleDevice",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "372948f0ea16947674da3df52c8be05e",
    "name": "lumi_gateway_empty_image",
    "type": "png"
  });
},10694,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/triggleDevice",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "d90271bbfe4d547496eaa7a75cce549e",
    "name": "placeholders_dark",
    "type": "png"
  });
},10697,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "a749e84c8c5400a2520ef05c0602ad38",
    "name": "tab_ic_calender_norma",
    "type": "png"
  });
},10700,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "37403ecaa7c2d17048a60d73c984214b",
    "name": "tab_ic_calender_norma_dark",
    "type": "png"
  });
},10703,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "826c9126e5837524f9f1f0ef2ac6775a",
    "name": "radio_collect_selected",
    "type": "png"
  });
},10706,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "928e013497fb369b04dd0e17c4f53e7b",
    "name": "radio_collect_unselected",
    "type": "png"
  });
},10709,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5eb0055dfa34c23f0a21a24a56e7a18d",
    "name": "radio_collect",
    "type": "png"
  });
},10712,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9561702dac8887eea81a9d742ff29426",
    "name": "lumi_ic_save_dark",
    "type": "png"
  });
},10715,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "69ffc641286a57bf65210b71e677ceb5",
    "name": "ac_ic_save_dark",
    "type": "png"
  });
},10718,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "6495121eb3396e5ca0be628151bed199",
    "name": "radio_next",
    "type": "png"
  });
},10721,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "616e1b82f4f965654138884e3706e37a",
    "name": "lumi_ic_next_dark",
    "type": "png"
  });
},10724,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "0d12f68be82d02c9b0a5c02acc4dee1b",
    "name": "ac_ic_next_dark",
    "type": "png"
  });
},10727,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "c357cd17e4cdb5fe47e332281304d465",
    "name": "radio_pre",
    "type": "png"
  });
},10730,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "973279f42972e8d1df0231a5724cdfff",
    "name": "lumi_ic_previous_dark",
    "type": "png"
  });
},10733,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "6054bbc8ded3fca92e337afe6e93f232",
    "name": "ac_ic_previous_dark",
    "type": "png"
  });
},10736,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "70f28f1ea942c37945750fe33072b10f",
    "name": "radio_play",
    "type": "png"
  });
},10739,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "cfe4f643050b558bce776bf01afadba1",
    "name": "lumi_ic_play_dark",
    "type": "png"
  });
},10742,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "f8e12ba3b9d38178f3133a5ce5b6a8e6",
    "name": "ac_ic_play_dark",
    "type": "png"
  });
},10745,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "1c6f6ca4196ee6e7ee5cffca04d7c9a1",
    "name": "radio_stop",
    "type": "png"
  });
},10748,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "4b589329686262dd83f6b1b8f56a2dca",
    "name": "radio_stop_dark",
    "type": "png"
  });
},10751,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "5b2b103e4a79f1e44aeb509c3ce28352",
    "name": "ac_ic_stop_dark",
    "type": "png"
  });
},10754,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 80,
    "height": 80,
    "scales": [1],
    "hash": "5631ac7e8d8aa5914ea46fa3ccac6fe8",
    "name": "radio_voice",
    "type": "png"
  });
},10757,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 57,
    "height": 48,
    "scales": [1],
    "hash": "7ac38cd8eecc72e1ce62f3123885f8d0",
    "name": "radio_volume_down",
    "type": "png"
  });
},10760,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 57,
    "height": 48,
    "scales": [1],
    "hash": "8a7beaf902423ddb40dc444341944fde",
    "name": "radio_volume_up",
    "type": "png"
  });
},10763,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 48,
    "height": 48,
    "scales": [1],
    "hash": "e1200f8d051e8056a9241f2db56516f1",
    "name": "radio_more",
    "type": "png"
  });
},10766,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "b8d4ca781593554bed1aaa3e33250931",
    "name": "radio_fold",
    "type": "png"
  });
},10769,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/fm",
    "width": 546,
    "height": 546,
    "scales": [1],
    "hash": "3af45d646ca116d05508284bfaca5754",
    "name": "radio_blank_icon",
    "type": "png"
  });
},10772,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "e34991ea9ce1e692cea272267cd243ea",
    "name": "lumi_audio_recorder_play",
    "type": "png"
  });
},10775,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "fc395bfacfd20ccec7a9950bb553b806",
    "name": "lumi_audio_recorder_stop",
    "type": "png"
  });
},10778,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "997b552ca077dcb04c298fed0b8cfc6d",
    "name": "lumi_audio_recorder_done",
    "type": "png"
  });
},10781,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "42396e6c8b1e15ad76a7bd3fb2bfa988",
    "name": "lumi_audio_recorder_remove",
    "type": "png"
  });
},10784,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 1053,
    "height": 168,
    "scales": [1],
    "hash": "cbc8a815332b226c9e8adcf6520a136e",
    "name": "lumi_ring_tone_rhythm1",
    "type": "png"
  });
},10787,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 1053,
    "height": 168,
    "scales": [1],
    "hash": "2ce744ab49305214cb8b87a303063bd9",
    "name": "lumi_ring_tone_rhythm2",
    "type": "png"
  });
},10790,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 1053,
    "height": 168,
    "scales": [1],
    "hash": "6060c9c18e0d7ba652f18f6747bd1659",
    "name": "lumi_ring_tone_rhythm3",
    "type": "png"
  });
},10793,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "6517d2ee0815ffb54783b5ebd71ae76a",
    "name": "placeholder_timing",
    "type": "png"
  });
},10796,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "f69e6c5db198b7b479ce549c9f43c7a5",
    "name": "lumi_audio_recorder_pause",
    "type": "png"
  });
},10799,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/record",
    "width": 198,
    "height": 198,
    "scales": [1],
    "hash": "082e558c002853df53db2da3e0777b37",
    "name": "add_blue",
    "type": "png"
  });
},10802,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/protocol",
    "width": 48,
    "height": 48,
    "scales": [1],
    "hash": "c9bcbc923aa36364235d8dee37881573",
    "name": "lumi_gateway_protocol_refresh",
    "type": "png"
  });
},10805,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "5046229f62fb0719e51843ebbed52501",
    "name": "cell_wifi1",
    "type": "png"
  });
},10808,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "4febfb770112b0b650a669cc8b8512be",
    "name": "cell_wifi1_dark",
    "type": "png"
  });
},10811,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "3137dfe73ed7a9c1cf92fea64a89d15d",
    "name": "cell_wifi2",
    "type": "png"
  });
},10814,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "12d9a51ae365aa8b4aba08c6c1aac4bd",
    "name": "cell_wifi2_dark",
    "type": "png"
  });
},10817,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "fbe1fdf03a658875b0c01da83c728fd7",
    "name": "cell_wifi3",
    "type": "png"
  });
},10820,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "1c6ee2d7253e8f5e27c2085aaf40348f",
    "name": "cell_wifi3_dark",
    "type": "png"
  });
},10823,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "b46f62cba3e2012c77516693428c6d86",
    "name": "cell_wifi4",
    "type": "png"
  });
},10826,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "53d8baede14be6f9d22ebc1eb2269d63",
    "name": "cell_wifi4_dark",
    "type": "png"
  });
},10829,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "ee80fc4bde6ce6abc2983ecbc81bc595",
    "name": "cell_wifi5",
    "type": "png"
  });
},10832,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "3222f90d622d385a3b8dd6146c0b93ef",
    "name": "cell_wifi5_dark",
    "type": "png"
  });
},10835,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "9b35d21676ef93ea581bc68e85ff67f2",
    "name": "cell_wifi6",
    "type": "png"
  });
},10838,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/cellWifi",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "558acce5a969d9d67eba681f1c98ee49",
    "name": "cell_wifi6_dark",
    "type": "png"
  });
},10841,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var LHWebImage = function (_React$Component) {
    (0, _inherits2.default)(LHWebImage, _React$Component);

    function LHWebImage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHWebImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHWebImage).call(this, props));
      _this.state = {
        source: ''
      };
      return _this;
    }

    (0, _createClass2.default)(LHWebImage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.downloadWebImage();
      }
    }, {
      key: "downloadWebImage",
      value: function downloadWebImage() {
        var _this2 = this;

        var source = this.props.source;
        var fileName = 'lumi_teyhhhyyst.png';

        _miot.Host.file.isFileExists(fileName).then(function (res) {
          if (res === true) {
            _this2.setState({
              source: fileName
            });
          } else {
            _miot.Host.file.downloadFile(source.uri, fileName).then(function (res1) {
              _this2.setState({
                source: res1.path
              });
            }).catch(function () {});
          }
        }).catch(function (err) {});
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.state.source;
        var style = this.props.style;
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: '100%'
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: {
            local: source
          },
          style: {
            width: '100%',
            height: '100%'
          }
        }));
      }
    }]);
    return LHWebImage;
  }(_react.default.Component);

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHWebImage);

  exports.default = _default;
},10844,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSeparator.default;
  exports.default = _default;
},10847,[14305,10850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var styles = _reactNative.StyleSheet.create({
    separatorContainer: {
      height: _LHCommonFunction.LHUiUtils.GetPx(0.5),
      overflow: 'hidden',
      backgroundColor: 'transparent',
      flexDirection: 'row'
    },
    separatorStyle: {
      height: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      alignSelf: 'center',
      flex: 1
    }
  });

  var LHSeparator = function (_React$PureComponent) {
    (0, _inherits2.default)(LHSeparator, _React$PureComponent);

    function LHSeparator() {
      (0, _classCallCheck2.default)(this, LHSeparator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSeparator).apply(this, arguments));
    }

    (0, _createClass2.default)(LHSeparator, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            separatorContainerStyle = _this$props.separatorContainerStyle,
            isDark = _this$props.isDark;
        var bgColor = {
          backgroundColor: isDark ? 'rgba(255, 255, 255, 0.15)' : _LHCommonFunction.LHUiUtils.MiJiaLineColor
        };
        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: [styles.separatorContainer, separatorContainerStyle]
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorStyle, bgColor, style]
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: {
              flexDirection: 'row'
            }
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorStyle, bgColor, style]
          }))
        });
      }
    }]);
    return LHSeparator;
  }(_react.default.PureComponent);

  exports.default = LHSeparator;
  LHSeparator.defaultProps = {
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };
},10850,[14305,14320,14323,14371,14377,14386,10297,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHPlaceHolderImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHPlaceHolderImage.default;
  exports.default = _default;
},10853,[14305,10856]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var LHPlaceHolderImage = function (_React$Component) {
    (0, _inherits2.default)(LHPlaceHolderImage, _React$Component);

    function LHPlaceHolderImage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHPlaceHolderImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHPlaceHolderImage).call(this, props));
      _this.state = {
        showPlaceHolder: true
      };
      return _this;
    }

    (0, _createClass2.default)(LHPlaceHolderImage, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(data) {
        if (!data.iconSource || !data.iconSource.uri) {
          this.setState({
            showPlaceHolder: true
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            style = _this$props.style,
            iconSource = _this$props.iconSource,
            iconSourceStyle = _this$props.iconSourceStyle,
            children = _this$props.children;
        var showPlaceHolder = this.state.showPlaceHolder;
        var iconSourceImage = iconSource.uri ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          key: iconSource.uri,
          style: [{
            width: '100%',
            height: '100%'
          }, iconSourceStyle, {
            opacity: !showPlaceHolder ? 1 : 0
          }],
          source: iconSource,
          onLoad: function onLoad() {
            _this2.setState({
              showPlaceHolder: false
            });
          },
          onError: function onError() {
            _this2.setState({
              showPlaceHolder: true
            });
          }
        }) : null;
        return _react.default.createElement(_reactNative.View, {
          style: style
        }, _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: {
            position: 'absolute',
            width: '100%',
            height: '100%',
            opacity: showPlaceHolder ? 1 : 0
          },
          source: _LHCommonIcon.default.deviceIcon.default
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: '100%'
          }
        }, iconSourceImage, children));
      }
    }]);
    return LHPlaceHolderImage;
  }(_react.default.Component);

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHPlaceHolderImage);

  exports.default = _default;
},10856,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10355]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSwitch.default;
  exports.default = _default;
},10859,[14305,10862]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var BORDER_WIDTH = _LHCommonFunction.LHUiUtils.MiJiaBorderWidth;

  var BORDER_COLOR = _LHCommonFunction.LHUiColorUtils.getColor('rgba(0,0,0,0.1)', 'rgba(255,255,255,0.15)');

  var BACK_WIDTH = _LHCommonFunction.LHUiUtils.GetPx(44);

  var BACK_HEIGHT = _LHCommonFunction.LHUiUtils.GetPx(24);

  var minMargin = _LHCommonFunction.LHUiUtils.GetPx(6);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center',
      borderWidth: BORDER_WIDTH,
      borderColor: BORDER_COLOR
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var LHSwitch = function (_React$Component) {
    (0, _inherits2.default)(LHSwitch, _React$Component);

    function LHSwitch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSwitch).call(this, props));
      _this.state = {};
      var _this$props = _this.props,
          style = _this$props.style,
          value = _this$props.value,
          circleSize = _this$props.circleSize,
          circleMargin = _this$props.circleMargin;
      var width = style.width,
          height = style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = circleMargin || minMargin;
      _this.offsetXMax = backWidth - backHeight;
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      _this.offsetX = new _reactNative.Animated.Value(value ? _this.offsetXMax : 0);
      return _this;
    }

    (0, _createClass2.default)(LHSwitch, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var value = this.props.value;

        if (newProps.value !== value) {
          this.animated(newProps.value);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            value = _this$props2.value,
            onTintColor = _this$props2.onTintColor,
            disabled = _this$props2.disabled,
            testID = _this$props2.testID,
            isDark = _this$props2.isDark;
        var _this$backStyle = this.backStyle,
            width = _this$backStyle.width,
            height = _this$backStyle.height;
        var backgroundColor = value ? onTintColor : isDark ? 'rgba(129,129,129,0.18)' : '#F0F0F0';
        var opacity = disabled ? 0.5 : 1;
        return _react.default.createElement(_reactNative.View, {
          key: 'LHSwitch_' + disabled,
          style: [styles.container]
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.back, this.backStyle, {
            width: width,
            height: height,
            borderRadius: height / 2,
            backgroundColor: backgroundColor,
            opacity: opacity
          }],
          disabled: disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2.onValueChange();
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
          testID: testID
        }), _react.default.createElement(_reactNative.Animated.View, {
          pointerEvents: "none",
          style: [styles.circle, this.circleStyle, {
            transform: [{
              translateX: this.offsetX
            }],
            opacity: isDark ? opacity : 1
          }]
        }));
      }
    }, {
      key: "animated",
      value: function animated(value) {
        var toValue = value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "onValueChange",
      value: function onValueChange() {
        var _this$props3 = this.props,
            value = _this$props3.value,
            onValueChange = _this$props3.onValueChange;

        if (onValueChange) {
          onValueChange(!value);
        }
      }
    }]);
    return LHSwitch;
  }(_react.default.Component);

  exports.default = LHSwitch;
  LHSwitch.propTypes = {
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired,
    isDark: _propTypes.default.bool
  };
  LHSwitch.defaultProps = {
    value: false,
    style: {},
    onTintColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
    disabled: false,
    isDark: _LHCommonFunction.LHUiColorUtils.isDark,
    circleSize: _LHCommonFunction.LHUiUtils.GetPx(12)
  };
},10862,[14305,14320,14323,14371,14377,14386,10318,10297,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSliderNewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSliderNewCard.default;
  exports.default = _default;
},10865,[14305,10868]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var initWidth = _LHCommonFunction.LHUiUtils.GetPx(16);

  var progressWidth = width - _LHCommonFunction.LHUiUtils.GetPx(48);

  var titleHeight = _LHCommonFunction.LHUiUtils.GetPx(53, 360, 320);

  var styles = _reactNative.StyleSheet.create({
    lightCard: {
      height: _LHCommonFunction.LHUiUtils.GetPx(95),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(10),
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    cardSubTitle: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18),
      color: '#7F7F7F',
      textAlignVertical: 'bottom',
      paddingVertical: 0
    },
    progressGreyBg: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(17.8),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(20),
      height: _LHCommonFunction.LHUiUtils.GetPx(24),
      backgroundColor: '#EBF2F7',
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(13),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(20),
      justifyContent: 'center'
    },
    progressImgPickerBg: {
      backgroundColor: '#00BEFF',
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(8),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(4),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(4),
      height: _LHCommonFunction.LHUiUtils.GetPx(16),
      justifyContent: 'center',
      alignItems: 'center'
    },
    progressImgPicker: {
      position: 'absolute',
      right: _LHCommonFunction.LHUiUtils.GetPx(4),
      width: _LHCommonFunction.LHUiUtils.GetPx(8),
      height: _LHCommonFunction.LHUiUtils.GetPx(8),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(4),
      backgroundColor: '#fff'
    }
  });

  var sendTimer = null;
  var startTimeStamp = 0;
  var endTimeStamp = 0;

  var LHSliderNewCard = function (_React$Component) {
    (0, _inherits2.default)(LHSliderNewCard, _React$Component);

    function LHSliderNewCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSliderNewCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSliderNewCard).call(this, props));

      _this.setProgressValue = function (value) {
        var _this$state = _this.state,
            progressValue = _this$state.progressValue,
            minValue = _this$state.minValue,
            maxValue = _this$state.maxValue;
        var showValue = value < minValue ? Number(minValue) : value > Number(maxValue) ? Number(maxValue) : value;
        progressValue.setValue(showValue);

        _this.setState({
          progressValue: progressValue
        });
      };

      _this.setScroll = function (bool) {
        var enabledScroll = _this.props.enabledScroll;

        if (typeof enabledScroll === 'function') {
          enabledScroll(bool);
        }
      };

      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: props.isDark ? '#00ABE6' : '#00BEFF',
        maximumTrackTintColor: props.isDark ? 'rgba(255, 255, 255, 0.2)' : '#EDEEEF',
        thumbTintColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
      }, props.sliderStyle);
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, props.sliderProps);
      _this.state = {
        progressValue: new _reactNative.Animated.Value(_this.sliderProps.minimumValue || 0),
        minValue: _this.sliderProps.minimumValue,
        maxValue: _this.sliderProps.maximumValue,
        value: _this.sliderProps.value || _this.sliderProps.minimumValue
      };
      return _this;
    }

    (0, _createClass2.default)(LHSliderNewCard, [{
      key: "getProgressValue",
      value: function getProgressValue() {
        var progressValue = this.state.progressValue;
        return progressValue._value;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        var startValue = 0;
        this.brightnessPanResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return true;
          },
          onPanResponderGrant: function onPanResponderGrant() {
            endTimeStamp = new Date().getTime();

            if (endTimeStamp - startTimeStamp < 500) {
              clearTimeout(sendTimer);
            }

            startValue = _this2.getProgressValue();

            _this2.setScroll(false);
          },
          onPanResponderMove: function onPanResponderMove(evt, gestureState) {
            var _this2$state = _this2.state,
                progressValue = _this2$state.progressValue,
                minValue = _this2$state.minValue,
                maxValue = _this2$state.maxValue;
            var dx = gestureState.dx;
            var progress = startValue + dx / (progressWidth - _LHCommonFunction.LHUiUtils.GetPx(8)) * 100;
            progressValue.setValue(Math.ceil(progress > Number(maxValue) ? Number(maxValue) : progress < Number(minValue) ? Number(minValue) : progress));

            _this2.setState({
              progressValue: progressValue
            });
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderEnd: function onPanResponderEnd() {
            _this2.setScroll(true);

            var changeProgressValue = _this2.props.changeProgressValue;
            startTimeStamp = new Date().getTime();

            var endValue = _this2.getProgressValue();

            sendTimer = setTimeout(function () {
              var moveX = endValue;
              changeProgressValue(moveX, function (res, cacheValue) {
                if (res) {
                  _this2.setProgressValue(cacheValue);
                }
              });
              clearTimeout(sendTimer);
            }, 500);
          },
          onPanResponderTerminate: function onPanResponderTerminate() {},
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var value = this.state.value;
        this.setProgressValue(value);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var value = nextProps.sliderProps.value;
        var progressValue = this.state.progressValue;

        if (value !== this.state.value && progressValue) {
          progressValue.setValue(value || 0);
          this.setState({
            progressValue: progressValue
          });
        }
      }
    }, {
      key: "animateStart",
      value: function animateStart(value) {
        var progressValue = this.state.progressValue;

        _reactNative.Animated.timing(progressValue, {
          toValue: value,
          duration: 0,
          easing: _reactNative.Easing.linear
        }).start(function () {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            progressValue = _this$state2.progressValue,
            minValue = _this$state2.minValue,
            maxValue = _this$state2.maxValue;
        var _value = progressValue._value;
        var _this$props = this.props,
            progressTitle = _this$props.progressTitle,
            subTitleUnit = _this$props.subTitleUnit,
            titleStyle = _this$props.titleStyle,
            subTitleStyle = _this$props.subTitleStyle,
            subTitleUnitStyle = _this$props.subTitleUnitStyle,
            testID = _this$props.testID,
            isDark = _this$props.isDark,
            sliderStyle = _this$props.sliderStyle,
            bottomSliderSeparator = _this$props.bottomSliderSeparator;
        var minProgress = initWidth / progressWidth * 100 + '%';
        var maxProgress = (progressWidth - _LHCommonFunction.LHUiUtils.GetPx(8)) / progressWidth * 100 + '%';
        var greyBgColor = isDark ? 'rgba(255, 255, 255, 0.2)' : '#EDEEEF';
        var blueBgColor = isDark ? '#00ABE6' : '#00BEFF';

        var progress = _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.progressGreyBg, {
            backgroundColor: sliderStyle.maximumTrackTintColor || greyBgColor
          }]
        }, this.brightnessPanResponder.panHandlers, {
          pointerEvents: "box-only",
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
          testID: testID
        }), _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.progressImgPickerBg, {
            width: progressValue.interpolate({
              inputRange: [Number(minValue), Number(maxValue)],
              outputRange: [minProgress, maxProgress]
            }),
            backgroundColor: sliderStyle.minimumTrackTintColor || blueBgColor
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.progressImgPicker, {
            backgroundColor: sliderStyle.thumbTintColor || _LHCommonFunction.LHUiUtils.MiJiaWhite
          }]
        })));

        var titleElement = progressTitle ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            height: titleHeight,
            flexDirection: 'row',
            paddingLeft: _LHCommonFunction.LHUiUtils.GetPx(27),
            alignItems: 'center'
          }
        }, _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [{
            color: isDark ? 'rgba(255, 255, 255, 0.9)' : _LHCommonFunction.LHUiUtils.MiJiaTitleColor,
            fontWeight: 'bold',
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
            letterSpacing: 0,
            maxWidth: '70%'
          }, titleStyle]
        }, progressTitle), _react.default.createElement(_reactNative.View, {
          style: [{
            width: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
            height: _LHCommonFunction.LHUiUtils.GetPx(14),
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(5),
            backgroundColor: isDark ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0,0,0,0.3)'
          }]
        }), _react.default.createElement(_LHText.default, {
          style: [styles.cardSubTitle, {
            color: isDark ? 'rgba(255, 255, 255, 0.5)' : '#7F7F7F'
          }, subTitleStyle || {}],
          includeFontPadding: false,
          testID: testID + '_value',
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID + '_value')
        }, Math.ceil(_value)), _react.default.createElement(_LHText.default, {
          style: [styles.cardSubTitle, {
            color: isDark ? 'rgba(255, 255, 255, 0.5)' : '#7F7F7F'
          }, subTitleUnitStyle || {}],
          includeFontPadding: false
        }, subTitleUnit || '')) : null;
        var bottomSeparator = bottomSliderSeparator ? _react.default.createElement(_reactNative.View, {
          style: {
            height: _LHCommonFunction.LHUiUtils.GetPx(40),
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_LHSeparator.default, {
          style: {
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(24)
          }
        })) : null;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.lightCard, {
            height: bottomSliderSeparator ? _LHCommonFunction.LHUiUtils.GetPx(135) : _LHCommonFunction.LHUiUtils.GetPx(95)
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row'
          }
        }, titleElement), progress, bottomSeparator);
      }
    }]);
    return LHSliderNewCard;
  }(_react.default.Component);

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSliderNewCard);

  exports.default = _default;
},10868,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10004,10871,10847]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHText.default;
  exports.default = _default;
},10871,[14305,10874]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var LHText = function (_React$Component) {
    (0, _inherits2.default)(LHText, _React$Component);

    function LHText(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHText);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHText).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHText, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            style = _this$props.style;
        var props = (0, _objectSpread2.default)({}, this.props);
        delete props.style;

        if (props.testID) {
          props.accessibilityLabel = _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(props.testID);
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, props, {
          style: [{
            fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
          }, _reactNative.StyleSheet.flatten(style)]
        }), children);
      }
    }]);
    return LHText;
  }(_react.default.Component);

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHText);

  exports.default = _default;
},10874,[14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHButton.default;
  exports.default = _default;
},10877,[14305,10880]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var defaultPressBackgroundColor = {
    0: 'rgba(0,0,0,0.05)',
    1: '#25A9AF'
  };
  var defaultBtnDisabledStyle = {
    0: null,
    1: {
      opacity: 0.3
    }
  };
  var defaultTextDisabledStyle = {
    0: {
      color: '#cccccc'
    },
    1: null
  };
  var defaultStyle = {
    0: {
      height: _LHCommonFunction.LHUiUtils.GetPx(46),
      backgroundColor: '#ffffff',
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(23),
      justifyContent: 'center'
    },
    1: {
      height: _LHCommonFunction.LHUiUtils.GetPx(46),
      backgroundColor: '#32BAC0',
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(23),
      justifyContent: 'center'
    }
  };

  var LHButton = function (_React$Component) {
    (0, _inherits2.default)(LHButton, _React$Component);

    function LHButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHButton).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            btnTextStyle = _this$props.btnTextStyle,
            btnText = _this$props.btnText,
            disabled = _this$props.disabled,
            pressBackgroundColor = _this$props.pressBackgroundColor,
            buttonType = _this$props.buttonType,
            btnDisabledStyle = _this$props.btnDisabledStyle,
            textDisabledStyle = _this$props.textDisabledStyle,
            _onPress = _this$props.onPress,
            testID = _this$props.testID;
        var btnPressBackgroundColor = pressBackgroundColor || defaultPressBackgroundColor[buttonType];
        return _react.default.createElement(_reactNative.TouchableHighlight, {
          activeOpacity: 1,
          underlayColor: btnPressBackgroundColor,
          disabled: disabled,
          onPress: function onPress() {
            if (typeof _onPress === 'function') _onPress();
          },
          style: [defaultStyle[buttonType], style, disabled ? btnDisabledStyle || defaultBtnDisabledStyle[buttonType] : null],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
          testID: testID
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHText.default, {
          style: [{
            width: '100%',
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.3),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(21),
            letterSpacing: 0,
            color: buttonType === 0 ? '#4C4C4C' : '#ffffff',
            textAlign: 'center',
            paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(5),
            fontWeight: 'bold'
          }, btnTextStyle, disabled ? textDisabledStyle || defaultTextDisabledStyle[buttonType] : null]
        }, btnText || '')));
      }
    }]);
    return LHButton;
  }(_react.default.Component);

  LHButton.defaultProps = {
    disabled: false,
    buttonType: 0
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHButton);

  exports.default = _default;
},10880,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10871]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHTitleBarCustom.default;
  exports.default = _default;
},10883,[14305,10886]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[12]);

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var titleHeight = _LHCommonFunction.LHUiUtils.TitleBarHeight;

  var styles = _reactNative.StyleSheet.create({
    titleBarContainer: {
      width: '100%',
      flexDirection: 'row',
      alignItems: 'flex-end'
    },
    textContainer: {
      height: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center',
      paddingHorizontal: (0, _LHCommonFunction.dp)(15)
    },
    titleText: {
      fontSize: (0, _LHCommonFunction.dp)(18),
      lineHeight: (0, _LHCommonFunction.dp)(22),
      fontWeight: 'bold',
      textAlign: 'center'
    },
    subtitleText: {
      fontSize: (0, _LHCommonFunction.dp)(14),
      lineHeight: (0, _LHCommonFunction.dp)(16),
      textAlign: 'center'
    },
    leftRightText: {
      flexDirection: 'column',
      backgroundColor: '#0000',
      alignItems: 'center',
      justifyContent: 'center',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    leftRightTextFontStyle: {
      color: '#00000088',
      fontSize: (0, _LHCommonFunction.dp)(14),
      textAlignVertical: 'center',
      textAlign: 'center'
    }
  });

  var LHTitleBarCustom = function (_Component) {
    (0, _inherits2.default)(LHTitleBarCustom, _Component);

    function LHTitleBarCustom(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHTitleBarCustom);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHTitleBarCustom).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHTitleBarCustom, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        if (_reactNative.Platform.OS === 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "getDeafultBackBtn",
      value: function getDeafultBackBtn(position, btns, btn, index) {
        var _this$props = this.props,
            backBtnIcon = _this$props.backBtnIcon,
            isDark = _this$props.isDark;
        var resources = this.initIconResources();
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          key: 'btn_back_' + index,
          testID: "navBackBtn",
          style: [this.initIconResources().imgStyle, {
            height: resources.imgHeight
          }, {
            marginRight: 0
          }, btn.style],
          source: backBtnIcon === 'white' || btn.btnIconType === 'white' || isDark ? resources.backBtnIconWhite : resources.backBtnIconBlack,
          highlightedSource: backBtnIcon === 'white' || btn.btnIconType === 'white' || isDark ? resources.backBtnIconWhitePress : resources.backBtnIconBlackPress
        });
      }
    }, {
      key: "getDeafultMoreBtn",
      value: function getDeafultMoreBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navMoreBtn",
          key: 'btn_more_' + index,
          style: [this.initIconResources().imgStyle, {
            height: resources.imgHeight,
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? resources.moreIconWhite : resources.moreIconBlack,
          highlightedSource: btn.btnIconType === 'white' || isDark ? resources.moreIconWhitePress : resources.moreIconBlackPress
        });
      }
    }, {
      key: "getDeafultShareBtn",
      value: function getDeafultShareBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navShareBtn",
          key: 'btn_share_' + index,
          style: [this.initIconResources().imgStyle, {
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap,
            height: resources.imgHeight
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? resources.shareIconWhite : resources.shareIconBlack,
          highlightedSource: btn.btnIconType === 'white' || isDark ? resources.shareIconWhitePress : resources.shareIconBlackPress
        });
      }
    }, {
      key: "getDeafultCloseBtn",
      value: function getDeafultCloseBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navBackBtn",
          key: 'btn_close_' + index,
          style: [this.initIconResources().imgStyle, {
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap,
            height: resources.imgHeight
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? resources.closeIconWhite : resources.closeIconBlack,
          highlightedSource: btn.btnIconType === 'white' || isDark ? resources.closeIconWhitePress : resources.closeIconBlackPress
        });
      }
    }, {
      key: "getDeafultCompleteBtn",
      value: function getDeafultCompleteBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navCompleteBtn",
          key: 'btn_complete_' + index,
          style: [this.initIconResources().imgStyle, {
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap,
            height: resources.imgHeight
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? btn.disable ? resources.completeIconWhiteDisable : resources.completeIconWhite : btn.disable ? resources.completeIconBlackDisable : resources.completeIconBlack,
          highlightedSource: btn.btnIconType === 'white' || isDark ? btn.disable ? resources.completeIconWhiteDisable : resources.completeIconWhitePress : btn.disable ? resources.completeIconBlackDisable : resources.completeIconBlackPress
        });
      }
    }, {
      key: "getDefaultEditBtn",
      value: function getDefaultEditBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navEditBtn",
          key: 'btn_edit_' + index,
          style: [this.initIconResources().imgStyle, {
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap,
            height: resources.imgHeight
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? btn.disable ? resources.editIconWhiteDisable : resources.editIconWhite : btn.disable ? resources.editIconBlackDisable : resources.editIconBlack,
          highlightedSource: btn.btnIconType === 'white' || isDark ? btn.disable ? resources.editIconWhiteDisable : resources.editIconWhitePress : btn.disable ? resources.editIconBlackDisable : resources.editIconBlackPress
        });
      }
    }, {
      key: "getDeafultCalenderBtn",
      value: function getDeafultCalenderBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var isDark = this.props.isDark;
        return _react.default.createElement(_LHImageButton.default, {
          disabled: btn.disable,
          onPress: btn.press,
          testID: "navCompleteBtn",
          key: 'btn_complete_' + index,
          style: [this.initIconResources().imgStyle, {
            marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
            marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap,
            height: resources.imgHeight
          }, btn.style],
          source: btn.btnIconType === 'white' || isDark ? _LHCommonIcon.default.navigation.calender.dark : _LHCommonIcon.default.navigation.calender.normal
        });
      }
    }, {
      key: "balanceLeftRightButtons",
      value: function balanceLeftRightButtons(leftButtons, rightBtns) {
        var gap = leftButtons.length - rightBtns.length;

        for (var i = 0; i < Math.abs(gap); i += 1) {
          var btn = {
            text: '',
            press: function press() {},
            source: this.initIconResources().backBtnIconBlack,
            style: {
              opacity: 0
            }
          };
          gap > 0 ? rightBtns.push(btn) : leftButtons.push(btn);
        }
      }
    }, {
      key: "initIconResources",
      value: function initIconResources() {
        var imgHeight = (0, _LHCommonFunction.dp)(40);
        var dotWidth = (0, _LHCommonFunction.dp)(40);
        var btnGap = 0;
        var leftRightBtnMargin = (0, _LHCommonFunction.dp)(9);
        var result = {
          backBtnIconWhite: _Images.default.navigation.dark.back.normal,
          backBtnIconWhitePress: _Images.default.navigation.dark.back.press,
          backBtnIconBlack: _Images.default.navigation.light.back.normal,
          backBtnIconBlackPress: _Images.default.navigation.light.back.press,
          dotIcon: _Images.default.navigation.dot,
          moreIconWhite: _Images.default.navigation.dark.more.normal,
          moreIconWhitePress: _Images.default.navigation.dark.more.press,
          moreIconBlack: _Images.default.navigation.light.more.normal,
          moreIconBlackPress: _Images.default.navigation.light.more.press,
          shareIconWhite: _Images.default.navigation.dark.share.normal,
          shareIconWhitePress: _Images.default.navigation.dark.share.press,
          shareIconBlack: _Images.default.navigation.light.share.normal,
          shareIconBlackPress: _Images.default.navigation.light.share.press,
          closeIconWhite: _Images.default.navigation.dark.close.normal,
          closeIconWhitePress: _Images.default.navigation.dark.close.press,
          closeIconBlack: _Images.default.navigation.light.close.normal,
          closeIconBlackPress: _Images.default.navigation.light.close.press,
          completeIconWhite: _Images.default.navigation.dark.complete.normal,
          completeIconWhiteDisable: _Images.default.navigation.dark.complete.disable,
          completeIconWhitePress: _Images.default.navigation.dark.complete.press,
          completeIconBlack: _Images.default.navigation.light.complete.normal,
          completeIconBlackPress: _Images.default.navigation.light.complete.press,
          completeIconBlackDisable: _Images.default.navigation.light.complete.disable,
          editIconWhite: _$$_REQUIRE(_dependencyMap[18]),
          editIconWhiteDisable: _$$_REQUIRE(_dependencyMap[19]),
          editIconWhitePress: _$$_REQUIRE(_dependencyMap[20]),
          editIconBlack: _$$_REQUIRE(_dependencyMap[18]),
          editIconBlackPress: _$$_REQUIRE(_dependencyMap[20]),
          editIconBlackDisable: _$$_REQUIRE(_dependencyMap[19])
        };
        (0, _extends2.default)(result, {
          imgHeight: imgHeight,
          btnGap: btnGap,
          leftRightBtnMargin: leftRightBtnMargin,
          imgStyle: {
            width: imgHeight,
            height: imgHeight,
            resizeMode: 'contain',
            marginLeft: leftRightBtnMargin,
            marginTop: (titleHeight - imgHeight) / 2,
            marginBottom: (titleHeight - imgHeight) / 2,
            marginRight: leftRightBtnMargin
          },
          dotStyle: {
            position: 'absolute',
            width: dotWidth,
            height: dotWidth,
            resizeMode: 'contain',
            right: leftRightBtnMargin,
            top: _LHCommonFunction.LHDeviceUtils.statusBarHeight + (titleHeight - imgHeight) / 2
          }
        });
        return result;
      }
    }, {
      key: "renderBtn",
      value: function renderBtn(position, btns, btn, index) {
        var resources = this.initIconResources();
        var type = btn.type;

        if (type === 'deafultBackBtn' || type === 'defaultBackBtn') {
          return this.getDeafultBackBtn(position, btns, btn, index);
        } else if (type === 'deafultShareBtn' || type === 'defaultShareBtn') {
          return this.getDeafultShareBtn(position, btns, btn, index);
        } else if (type === 'deafultMoreBtn' || type === 'defaultMoreBtn') {
          return this.getDeafultMoreBtn(position, btns, btn, index);
        } else if (type === 'deafultCloseBtn' || type === 'defaultCloseBtn') {
          return this.getDeafultCloseBtn(position, btns, btn, index);
        } else if (type === 'deafultCompleteBtn' || type === 'defaultCompleteBtn') {
          return this.getDeafultCompleteBtn(position, btns, btn, index);
        } else if (type === 'defaultEditBtn') {
          return this.getDefaultEditBtn(position, btns, btn, index);
        } else if (type === 'calender') {
          return this.getDeafultCalenderBtn(position, btns, btn, index);
        } else {
          return btn.source ? _react.default.createElement(_LHImageButton.default, {
            disabled: btn.disable,
            testID: btn.testID,
            onPress: btn.press,
            key: position + index,
            style: [this.initIconResources().imgStyle, {
              height: resources.imgHeight,
              marginRight: position === 'right' ? index !== btns.length - 1 ? 0 : resources.leftRightBtnMargin : resources.btnGap,
              marginLeft: position === 'left' ? index === 0 ? resources.leftRightBtnMargin : 0 : resources.btnGap
            }, btn.style],
            source: btn.source,
            highlightedSource: btn.highlightedSource
          }) : _react.default.createElement(_reactNativeUiKitten.RkButton, {
            onPress: btn.press,
            key: position + index,
            contentStyle: [styles.leftRightTextFontStyle, btn.style],
            style: [styles.leftRightText, {
              height: titleHeight,
              width: resources.imgHeight + resources.btnGap * 2
            }, btn.textContainerStyle]
          }, btn.text);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var resources = this.initIconResources();
        var _this$props2 = this.props,
            onPressLeft = _this$props2.onPressLeft,
            statusBarStyle = _this$props2.statusBarStyle;

        var leftButtons = _LHCommonFunction.CommonMethod.DeepClone(this.props.leftButtons || [], []);

        var rightBtns = _LHCommonFunction.CommonMethod.DeepClone(this.props.rightButtons || [], []);

        var rightButtons = [];

        if (onPressLeft && leftButtons.length === 0) {
          leftButtons.push({
            type: 'deafultBackBtn',
            press: onPressLeft
          });
        }

        this.balanceLeftRightButtons(leftButtons, rightBtns);

        for (var i = rightBtns.length - 1; i > -1; i -= 1) {
          rightButtons.push(rightBtns[i]);
        }

        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            style = _this$props3.style,
            titleStyle = _this$props3.titleStyle,
            onPressTitle = _this$props3.onPressTitle,
            onLongPressTitle = _this$props3.onLongPressTitle,
            delayLongPress = _this$props3.delayLongPress,
            title = _this$props3.title,
            subTitle = _this$props3.subTitle,
            subTitleStyle = _this$props3.subTitleStyle,
            showDot = _this$props3.showDot,
            showSeparator = _this$props3.showSeparator,
            isDark = _this$props3.isDark,
            isTitleAnimation = _this$props3.isTitleAnimation;
        var subTitleEle = subTitle ? _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [styles.subtitleText, {
            color: isDark ? 'rgba(255, 255, 255, 0.5)' : '#7F7F7F'
          }, subTitleStyle],
          onPress: onPressTitle
        }, subTitle) : null;
        return _react.default.createElement(_reactNative.View, {
          style: containerStyle
        }, _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [styles.titleBarContainer, {
            backgroundColor: isDark ? '#000000' : _LHCommonFunction.LHUiUtils.MiJiaWhite,
            height: (_reactNative.StatusBar.currentHeight || 0) + titleHeight
          }, style]
        }, _react.default.createElement(_reactNative.StatusBar, {
          backgroundColor: "transparent",
          barStyle: statusBarStyle === 'light' || isDark ? 'light-content' : 'dark-content'
        }), leftButtons.map(function (item, i) {
          return _this2.renderBtn('left', leftButtons, item, i);
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer]
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "transparent",
          onPress: onPressTitle,
          onLongPress: onLongPressTitle,
          delayLongPress: delayLongPress || 5000
        }, _react.default.createElement(_reactNative.View, null, isTitleAnimation ? _react.default.createElement(_reactNative.Animated.Text, {
          numberOfLines: 1,
          style: [styles.titleText, {
            color: isDark ? 'rgba(255, 255, 255, 0.9)' : '#000000'
          }, titleStyle],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('navTitle'),
          testID: "navTitle"
        }, title) : _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [styles.titleText, {
            color: isDark ? 'rgba(255, 255, 255, 0.9)' : '#000000'
          }, titleStyle],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('navTitle'),
          testID: "navTitle"
        }, title), subTitleEle))), rightButtons.map(function (item, i) {
          return _this2.renderBtn('right', rightButtons, item, i);
        }), showDot && _react.default.createElement(_reactNative.Image, {
          pointerEvents: "none",
          style: resources.dotStyle,
          source: resources.dotIcon
        })), showSeparator ? _react.default.createElement(_LHSeparator.default, {
          style: {
            alignSelf: 'flex-end'
          }
        }) : null);
      }
    }]);
    return LHTitleBarCustom;
  }(_react.Component);

  LHTitleBarCustom.defaultProps = {
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHTitleBarCustom);

  exports.default = _default;
},10886,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10918,11251,10004,10308,10889,10847,10871,10895,10898,10901,10904]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHImageButton.default;
  exports.default = _default;
},10889,[14305,10892]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var LHImageButton = function (_React$Component) {
    (0, _inherits2.default)(LHImageButton, _React$Component);

    function LHImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHImageButton).call(this, props));
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHImageButton, [{
      key: "buttonPressIn",
      value: function buttonPressIn() {
        var buttonPressIn = this.props.buttonPressIn;

        if (typeof buttonPressIn === 'function') {
          buttonPressIn();
        }

        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "buttonPressOut",
      value: function buttonPressOut() {
        var buttonPressOut = this.props.buttonPressOut;

        if (typeof buttonPressOut === 'function') {
          buttonPressOut();
        }

        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "isButtonPressed",
      value: function isButtonPressed() {
        var buttonPressed = this.state.buttonPressed;
        return buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var source = this.props.source;
        var _this$props = this.props,
            highlightedSource = _this$props.highlightedSource,
            style = _this$props.style,
            _onPress = _this$props.onPress,
            testID = _this$props.testID,
            disabled = _this$props.disabled,
            containStyle = _this$props.containStyle;

        if (this.isButtonPressed() && highlightedSource) {
          source = highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          disabled: disabled,
          onPress: function onPress() {
            if (typeof _onPress === 'function') _onPress();
          },
          onPressIn: function onPressIn() {
            _this2.buttonPressIn();
          },
          onPressOut: function onPressOut() {
            _this2.buttonPressOut();
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
          testID: testID || ''
        }, _react.default.createElement(_reactNative.View, {
          style: containStyle
        }, _react.default.createElement(_reactNative.Image, {
          fadeDuration: 0,
          style: style,
          source: source
        })));
      }
    }]);
    return LHImageButton;
  }(_react.default.Component);

  LHImageButton.initialState = {
    buttonPressed: false
  };
  LHImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null,
    disabled: false
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHImageButton);

  exports.default = _default;
},10892,[14305,14320,14323,14371,14377,14386,10297,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCommonIcon.default;
  exports.default = _default;
},10895,[14305,10355]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/edit_icon",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "dc4140dcfa147cea19abc0cd6645881b",
    "name": "lumi_gateway_a_mode_edit",
    "type": "png"
  });
},10898,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/edit_icon",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "73fece056660f59756cf619af75fd92f",
    "name": "lumi_gateway_a_mode_edit_disable",
    "type": "png"
  });
},10901,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/navigation/edit_icon",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9c17932b38bc03bdb1b7537dc3c88d8a",
    "name": "lumi_gateway_a_mode_edit_press",
    "type": "png"
  });
},10904,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var styles = _reactNative.StyleSheet.create({
    btn: {
      flex: 1.5,
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      flexDirection: 'row',
      alignItems: 'center'
    },
    input: {
      borderWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      color: 'rgba(0,0,0, 0.7)',
      textAlign: 'center',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      flex: 1,
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(8)
    },
    text: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    btnText: {
      width: '100%',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#fff',
      textAlign: 'center'
    },
    row: {
      flexDirection: 'row',
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(23),
      paddingVertical: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignItems: 'center'
    },
    params: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(17),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#333'
    },
    checkBox: {
      width: 18,
      height: 18
    },
    checkBoxWrap: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkBoxText: {
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    }
  });

  var subscribeMessagesErrorCount = 0;

  var LHSpecDebugPage = function (_React$Component) {
    (0, _inherits2.default)(LHSpecDebugPage, _React$Component);

    function LHSpecDebugPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSpecDebugPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSpecDebugPage).call(this, props, context));

      _this.reportPropValue = function (did, siid, piid, value) {
        _miot.Service.spec.reportPropChanged({
          props: [{
            did: did,
            siid: siid,
            piid: piid,
            value: value
          }]
        });
      };

      _this.hasListenerKey = [];
      _this.state = {
        did: _miot.Device.deviceID,
        readSiid: '',
        readPiid: '',
        readParams: '',
        readResult: '',
        writeSiid: '',
        writePiid: '',
        writeValue: '',
        writeParams: '',
        writeResult: '',
        writeTime: '',
        reportSiid: '',
        reportPiid: '',
        reportValue: '',
        listenerType: 'event',
        currentListener: '',
        listenerResult: [],
        dataSource: 2
      };
      return _this;
    }

    (0, _createClass2.default)(LHSpecDebugPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.deviceStatusListener = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, map, res) {
          var _this2$state = _this2.state,
              currentListener = _this2$state.currentListener,
              listenerResult = _this2$state.listenerResult;

          var index = _LHCommonFunction.CommonMethod.Find(res, 'key', currentListener);

          if (index > -1) {
            var data = _LHCommonFunction.CommonMethod.DeepClone(listenerResult, []);

            data.unshift({
              time: _LHCommonFunction.LHDateUtils.DateFormat('hh:mm:ss', +new Date()),
              data: JSON.stringify(res[index])
            });

            _this2.setState({
              listenerResult: data
            });
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.deviceStatusListener) this.deviceStatusListener.remove();
        if (this.subscribeMessagesListener) this.subscribeMessagesListener.remove();
      }
    }, {
      key: "GetSpecValue",
      value: function GetSpecValue(did, siid, piid) {
        var _this3 = this;

        var params = [{
          did: did,
          siid: siid,
          piid: piid
        }];
        this.setState({
          readParams: JSON.stringify(params),
          readResult: '读取中...'
        });
        var dataSource = this.state.dataSource;

        _miot.Service.spec.getPropertiesValue(params, dataSource).then(function (res) {
          _this3.setState({
            readResult: JSON.stringify(res)
          });
        }).catch(function (res) {
          _this3.setState({
            readResult: '读取失败：' + JSON.stringify(res)
          });
        });
      }
    }, {
      key: "SetSpecValue",
      value: function SetSpecValue(did, siid, piid, value) {
        var _this4 = this;

        var params = [{
          did: did,
          siid: siid,
          piid: piid,
          value: value
        }];
        this.setState({
          writeParams: JSON.stringify(params),
          writeResult: '写入中...',
          writeTime: parseInt(new Date().getTime() / 1000, 10)
        });

        _LHCommonFunction.LHMiServer.SetPropertiesValue(params, function (res) {
          _this4.setState({
            writeResult: JSON.stringify(res)
          });
        }, function (res) {
          _this4.setState({
            writeResult: '写入失败：' + JSON.stringify(res)
          });
        });
      }
    }, {
      key: "subscribeMessages",
      value: function subscribeMessages(params) {
        var _this5 = this;

        this.setState({
          currentListener: params,
          listenerResult: []
        });

        if (this.hasListenerKey.indexOf(params) > -1) {
          return;
        }

        this.hasListenerKey.push(params);

        _miot.Device.getDeviceWifi().subscribeMessages(params).then(function (subcription) {
          subscribeMessagesErrorCount = 0;
          _this5.subscribeMessagesListener = subcription;
        }).catch(function () {
          for (var i = 0, len = _this5.hasListenerKey.length; i < len; i += 1) {
            if (params === _this5.hasListenerKey[i]) {
              _this5.hasListenerKey.splice(i, 1);

              break;
            }
          }

          subscribeMessagesErrorCount += 1;

          if (subscribeMessagesErrorCount < 3) {
            _this5.subscribeMessages(params);
          }
        });
      }
    }, {
      key: "AddListenerEvent",
      value: function AddListenerEvent(did, listenerSiid, listenerPiid) {
        var listenerType = this.state.listenerType;
        this.subscribeMessages(listenerType + '.' + listenerSiid + '.' + listenerPiid);
      }
    }, {
      key: "renderListenerResultItem",
      value: function renderListenerResultItem(item, index) {
        return _react.default.createElement(_reactNative.View, {
          key: 'key_' + index,
          style: [styles.row]
        }, _react.default.createElement(_reactNative.Text, null, item.time + '：' + item.data));
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var _this$state = this.state,
            did = _this$state.did,
            readParams = _this$state.readParams,
            readResult = _this$state.readResult,
            writeParams = _this$state.writeParams,
            writeResult = _this$state.writeResult,
            writeTime = _this$state.writeTime,
            listenerType = _this$state.listenerType,
            currentListener = _this$state.currentListener,
            listenerResult = _this$state.listenerResult,
            dataSource = _this$state.dataSource;
        var currentListenerEl = currentListener !== '' ? _react.default.createElement(_reactNative.View, {
          style: [styles.row, {
            paddingTop: 0
          }]
        }, _react.default.createElement(_reactNative.Text, null, '当前监听：' + currentListener)) : null;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "did:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 20,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          defaultValue: did,
          onChangeText: function onChangeText(text) {
            _this6.setState({
              did: text
            });
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this6.setState({
              dataSource: 2
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: dataSource === 2 ? _$$_REQUIRE(_dependencyMap[11]) : _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u8BBE\u5907\u7AEF\u8BFB\u53D6\u903B\u8F91")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this6.setState({
              dataSource: 1
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: dataSource === 1 ? _$$_REQUIRE(_dependencyMap[11]) : _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u4E91\u7AEF\u8BFB\u53D6\u903B\u8F91"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "siid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              readSiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "piid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              readPiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var _this6$state = _this6.state,
                readSiid = _this6$state.readSiid,
                readPiid = _this6$state.readPiid;
            if (did === '' || readSiid === '' || readPiid === '') return false;
            return _this6.GetSpecValue(did, readSiid, readPiid);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u8BFB\u53D6"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u8BFB\u53D6\u53C2\u6570:", readParams)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u8BFB\u53D6\u7ED3\u679C:", readResult)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "siid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              writeSiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "piid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              writePiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "val:"), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            var value = text;

            if (text === 'false') {
              value = false;
            } else if (text === 'true') {
              value = true;
            } else if (text > -1) {
              value = Number(text);
            }

            _this6.setState({
              writeValue: value
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var _this6$state2 = _this6.state,
                writeSiid = _this6$state2.writeSiid,
                writePiid = _this6$state2.writePiid,
                writeValue = _this6$state2.writeValue;
            if (did === '' || writeSiid === '' || writePiid === '') return false;
            return _this6.SetSpecValue(did, writeSiid, writePiid, writeValue);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u5199"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u5199\u5165\u53C2\u6570:", writeParams)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u5199\u5165\u7ED3\u679C:", writeResult)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u5199\u5165\u65F6\u95F4:", writeTime)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "siid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              reportSiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "piid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              reportPiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "val:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            var value = text;

            if (text === 'false') {
              value = false;
            } else if (text === 'true') {
              value = true;
            } else if (text > -1) {
              value = Number(text);
            }

            _this6.setState({
              reportValue: value
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var _this6$state3 = _this6.state,
                reportSiid = _this6$state3.reportSiid,
                reportPiid = _this6$state3.reportPiid,
                reportValue = _this6$state3.reportValue;
            if (did === '' || reportSiid === '' || reportPiid === '') return false;
            return _this6.reportPropValue(did, reportSiid, reportPiid, reportValue);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u4E0A\u62A5"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this6.setState({
              listenerType: 'event'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: listenerType === 'event' ? _$$_REQUIRE(_dependencyMap[11]) : _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u4E8B\u4EF6")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this6.setState({
              listenerType: 'prop'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: listenerType === 'event' ? _$$_REQUIRE(_dependencyMap[12]) : _$$_REQUIRE(_dependencyMap[11])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u5C5E\u6027"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "siid:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              listenerSiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, listenerType === 'event' ? 'eiid:' : 'piid:'), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this6.setState({
              listenerPiid: Number(text)
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var _this6$state4 = _this6.state,
                listenerSiid = _this6$state4.listenerSiid,
                listenerPiid = _this6$state4.listenerPiid;
            if (did === '' || listenerSiid === '' || listenerPiid === '') return false;
            return _this6.AddListenerEvent(did, listenerSiid, listenerPiid);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u8BA2\u9605"))), currentListenerEl, listenerResult.map(function (item, index) {
          return _this6.renderListenerResultItem(item, index);
        }));
      }
    }]);
    return LHSpecDebugPage;
  }(_react.default.Component);

  LHSpecDebugPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: "Spec\u8C03\u8BD5\u9875\u9762",
        style: [{
          backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
          borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
          borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
        }],
        onPressLeft: function onPressLeft() {
          if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSpecDebugPage);

  exports.default = _default;
},10907,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10883,10595,10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var styles = _reactNative.StyleSheet.create({
    btn: {
      width: '90%',
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(16),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(16),
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      flexDirection: 'row',
      alignItems: 'center'
    },
    input: {
      borderBottomWidth: _LHCommonFunction.LHUiUtils.GetPx(1),
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(15),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      color: 'rgba(0,0,0, 0.7)'
    },
    text: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    btnText: {
      width: '100%',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var LHWifiDebugPage = function (_React$Component) {
    (0, _inherits2.default)(LHWifiDebugPage, _React$Component);

    function LHWifiDebugPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHWifiDebugPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHWifiDebugPage).call(this, props, context));

      _this.changeWifiInfo = function () {
        var _this$state = _this.state,
            readSsid = _this$state.readSsid,
            readPswd = _this$state.readPswd,
            writeSsid = _this$state.writeSsid,
            writePswd = _this$state.writePswd;

        if (!writePswd || writePswd && !readSsid && !writeSsid) {
          _LHCommonFunction.LHToastUtils.showShortToast('ssid或者密码不能为空');

          return;
        }

        if (writePswd === readPswd && !writeSsid || writeSsid === readSsid && readPswd === writePswd) {
          _LHCommonFunction.LHToastUtils.showShortToast('您没有修改任何信息');

          return;
        }

        var ssid = writeSsid || readSsid;
        var propsArray = {
          ssid: ssid,
          pswd: writePswd
        };

        _LHCommonFunction.LHMiServer.SendRPCRequest('set_ip_info', propsArray, {}, function (res) {
          _LHCommonFunction.LHToastUtils.showShortToast('设置成功');

          var navigation = _this.props.navigation;
          navigation.navigate('LHSettingPage');
        }, function (err) {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
        });
      };

      _this.hasListenerKey = [];
      _this.state = {
        readSsid: '',
        readPswd: '',
        writeSsid: '',
        writePswd: '',
        requestError: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHWifiDebugPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var propsArray = [];

        _LHCommonFunction.LHMiServer.SendRPCRequest('get_ip_info', propsArray, {}, function (res) {
          var wifiInfo = res.result[0];

          _this2.setState({
            readSsid: wifiInfo.ssid,
            readPswd: wifiInfo.pswd
          });
        }, function (err) {
          _this2.setState({
            requestError: true
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state2 = this.state,
            readSsid = _this$state2.readSsid,
            requestError = _this$state2.requestError;
        var showSsid = requestError ? '你目前没有设置Wi-Fi' : 'Wi-Fi名称';
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: _LHCommonFunction.LHUiUtils.GetPx(16),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }, _react.default.createElement(_LHText.default, {
          style: {
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
            fontWeight: 'bold',
            color: '#000000cc'
          }
        }, "\u9009\u62E9\u8BBE\u5907\u5DE5\u4F5CWi-Fi"), _react.default.createElement(_LHText.default, {
          style: {}
        }, "\u6B64\u8BBE\u5907\u53EA\u652F\u6301\u4F7F\u75282.4GHz Wi-Fi\u8FDE\u63A5\u4F7F\u7528"), _react.default.createElement(_LHText.default, {
          style: {
            color: '#999'
          }
        }, "Wi-Fi\u540D\u79F0\u4EC5\u652F\u6301\u82F1\u6587\u5B57\u7B26\u53CA\u6570\u5B57"), requestError ? _react.default.createElement(_LHText.default, {
          style: {
            color: _LHCommonFunction.LHUiUtils.MiJiaRed
          }
        }, "\u65E0\u6CD5\u83B7\u53D6\u5F53\u524DWiFi,\u8BF7\u91CD\u542F\u624B\u673A\u91CD\u8BD5") : null), _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: _LHCommonFunction.LHUiUtils.GetPx(16),
            marginRight: _LHCommonFunction.LHUiUtils.GetPx(16),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(30)
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          defaultValue: readSsid,
          placeholder: showSsid,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this3.setState({
              writeSsid: text
            });
          }
        }), _react.default.createElement(_reactNative.TextInput, {
          style: styles.input,
          placeholder: "\u8BF7\u8F93\u5165Wi-Fi\u5BC6\u7801",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this3.setState({
              writePswd: text
            });
          }
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(20)
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.btn],
          onPress: function onPress() {
            _this3.changeWifiInfo();
          }
        }, _react.default.createElement(_LHText.default, {
          style: [styles.btnText]
        }, "\u786E  \u5B9A"))));
      }
    }]);
    return LHWifiDebugPage;
  }(_react.default.Component);

  LHWifiDebugPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: "Wi-Fi\u66F4\u6362\u9875\u9762",
        style: [{
          backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
          borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
          borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
        }],
        onPressLeft: function onPressLeft() {
          if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHWifiDebugPage);

  exports.default = _default;
},10910,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10883,10871]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LHCacheDetailPage = LHCacheDetailPage;
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHRenameDeletePageView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  function LHCacheDetailPage(props) {
    var navigation = props.navigation;
    return _react.default.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }, _react.default.createElement(_LHTitleBarCustom.default, {
      showSeparator: true,
      title: "\u8BBE\u5907\u8C03\u8BD5\u9875\u9762",
      onPressLeft: function onPressLeft() {
        navigation.goBack();
      }
    }), _react.default.createElement(_reactNative.ScrollView, {
      contentContainerStyle: {
        paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight
      }
    }, _react.default.createElement(_reactNative.Text, null, JSON.stringify(navigation.state.params.detail))));
  }

  var LHCacheDebugPage = function (_Component) {
    (0, _inherits2.default)(LHCacheDebugPage, _Component);

    function LHCacheDebugPage() {
      (0, _classCallCheck2.default)(this, LHCacheDebugPage);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHCacheDebugPage).apply(this, arguments));
    }

    (0, _createClass2.default)(LHCacheDebugPage, [{
      key: "onDelete",
      value: function onDelete(list) {
        for (var i = 0; i < list.length; i += 1) {
          var key = list[i].key;

          _LHCommonFunction.LHMiServer.SetHostStorage(key, null);
        }

        _LHCommonFunction.LHToastUtils.showShortToast('设置为null成功');
      }
    }, {
      key: "onCellPress",
      value: function onCellPress(item) {
        var navigation = this.props.navigation;
        var key = item.key;

        _LHCommonFunction.LHMiServer.GetHostStorage(key, null).then(function (detail) {
          navigation.navigate('LHCacheDetailPage', {
            detail: detail
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this = this;

        var navigation = this.props.navigation;

        var dataSources = _LHCommonFunction.CommonMethod.CacheKeys.map(function (item) {
          return {
            title: item.description || item.key,
            key: item.key
          };
        });

        return _react.default.createElement(_LHRenameDeletePageView.default, {
          devicesList: dataSources,
          emptyText: "\u7A7A\u7A7A\u5982\u4E5F",
          emptyIconStyle: {
            resizeMode: 'contain'
          },
          pageTitle: "\u7F13\u5B58\u8C03\u8BD5\u9875\u9762",
          showSeparator: true,
          isShowAddButton: false,
          onCellPress: this.onCellPress.bind(this),
          onDelete: function onDelete(list) {
            return _this.onDelete(list);
          },
          onPressBack: function onPressBack() {
            if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
              navigation.dangerouslyGetParent().goBack();
            } else {
              navigation.goBack();
            }
          }
        });
      }
    }]);
    return LHCacheDebugPage;
  }(_react.Component);

  exports.default = LHCacheDebugPage;
},10913,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10004,10883,10916]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHSwipeoutButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHStandardListSwipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHStandardEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHBottomButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHRenameDeletePageViewStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var LHRenameDeletePageView = function (_React$Component) {
    (0, _inherits2.default)(LHRenameDeletePageView, _React$Component);
    (0, _createClass2.default)(LHRenameDeletePageView, [{
      key: "renameDevice",
      value: function renameDevice(device, _onSuccess, onFail) {
        var _this2 = this;

        var confirmStyle = this.props.confirmStyle;
        var option = {
          defaultValue: device.title || '',
          confirmStyle: confirmStyle,
          onSuccess: function onSuccess(newName) {
            var onRenameWithData = _this2.props.onRenameWithData;
            if (typeof onRenameWithData !== 'function') return;
            var promise = onRenameWithData(newName, device);

            if (promise && promise.then) {
              promise.then(function () {
                if (typeof _onSuccess === 'function') _onSuccess(newName);
              }, function (err) {
                _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);

                if (typeof onFail === 'function') onFail(err);
              });
            } else if (typeof _onSuccess === 'function') {
              _onSuccess(newName);
            }
          }
        };
        var tips = {
          empty: _LHCommonFunction.LHCommonLocalizableString.mi_common_name_can_not_empty,
          emoji: _LHCommonFunction.LHCommonLocalizableString.sub_device_list_name_cant_support_emoji,
          specialChar: _LHCommonFunction.LHCommonLocalizableString.sub_device_list_name_cant_support_special_char,
          maxLength: _LHCommonFunction.LHCommonLocalizableString.sub_device_list_name_cant_more_forty,
          same: _LHCommonFunction.LHCommonLocalizableString.mi_common_name_can_not_be_same
        };

        _LHCommonFunction.LHFunctionDialogUtils.RenameDeviceInputDialogShow(option, tips);
      }
    }]);

    function LHRenameDeletePageView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHRenameDeletePageView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHRenameDeletePageView).call(this, props, context));
      _this.state = {
        devicesList: [],
        isEditStatus: false,
        renameBtnWidth: 0,
        deleteBtnWidth: 0
      };
      return _this;
    }

    (0, _createClass2.default)(LHRenameDeletePageView, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "clearSetLoadingFalseTimeoutId",
      value: function clearSetLoadingFalseTimeoutId() {
        if (this.setLoadingFalseTimeoutId) {
          clearTimeout(this.setLoadingFalseTimeoutId);
          this.setLoadingFalseTimeoutId = null;
        }
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this3 = this;

        var _this$state = this.state,
            devicesList = _this$state.devicesList,
            isEditStatus = _this$state.isEditStatus,
            renameBtnWidth = _this$state.renameBtnWidth,
            deleteBtnWidth = _this$state.deleteBtnWidth;
        var _this$props = this.props,
            onDelete = _this$props.onDelete,
            checkBoxActiveIcon = _this$props.checkBoxActiveIcon;
        var data = [];

        if (devicesList.length !== 0) {
          var _loop = function _loop(i, len) {
            var device = devicesList[i];
            var title = device.title,
                subTitle = device.subTitle,
                selected = device.selected,
                icon = device.icon,
                iconURL = device.iconURL,
                hideRightArrow = device.hideRightArrow;
            data.push({
              testID: 'subDevice',
              title: title,
              checkBoxActive: selected,
              checkBoxActiveIcon: checkBoxActiveIcon,
              description: subTitle,
              iconSource: icon || (iconURL ? {
                uri: iconURL
              } : null),
              showPlaceHolderImage: icon ? false : !!iconURL,
              leftIconStyle: {
                width: _LHCommonFunction.LHUiUtils.GetPx(42),
                height: _LHCommonFunction.LHUiUtils.GetPx(42)
              },
              marginLeft: _LHCommonFunction.LHUiUtils.GetPx(19),
              swipeoutClose: true,
              hideRightArrow: hideRightArrow || isEditStatus,
              hasCheckBox: isEditStatus,
              titleNumberOfLines: 1,
              hideTopSeparatorLine: i === 0,
              rowContainerStyle: {
                height: _LHCommonFunction.LHUiUtils.GetPx(60)
              },
              textContainer: {
                alignSelf: 'center'
              },
              swipeoutBtns: isEditStatus === true ? null : [{
                testID: 'swipeoutRenameButton',
                component: _react.default.createElement(_LHSwipeoutButton.default, {
                  type: "rename",
                  text: _LHCommonFunction.LHCommonLocalizableString.common_button_changename
                }),
                width: renameBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10) < _LHCommonFunction.LHUiUtils.GetPx(66) ? _LHCommonFunction.LHUiUtils.GetPx(66) : renameBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10),
                press: function press() {
                  _this3.renameDevice(device);
                }
              }, {
                testID: 'swipeoutDeleteButton',
                component: _react.default.createElement(_LHSwipeoutButton.default, {
                  text: _LHCommonFunction.LHCommonLocalizableString.common_button_delete
                }),
                width: deleteBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10) < _LHCommonFunction.LHUiUtils.GetPx(66) ? _LHCommonFunction.LHUiUtils.GetPx(66) : deleteBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10),
                press: function press() {
                  if (typeof onDelete !== 'function') return;
                  onDelete([device]);
                }
              }],
              press: function press() {
                if (isEditStatus === false) {
                  var onCellPress = _this3.props.onCellPress;
                  if (typeof onCellPress !== 'function') return;
                  onCellPress(device);
                } else {
                  var newDevicesList = _this3.state.devicesList;
                  newDevicesList[i].selected = !newDevicesList[i].selected;

                  _this3.forceUpdate();

                  var selectedCount = 0;

                  for (var j = 0, devicesLen = devicesList.length; j < devicesLen; j += 1) {
                    if (devicesList[j].selected === true) {
                      selectedCount += 1;
                    }
                  }

                  _this3.setState({
                    selectedCount: selectedCount
                  });
                }
              },
              minimumLongPressDuration: 500,
              longPress: function longPress() {
                if (isEditStatus === false) {
                  var newDevicesList = _this3.state.devicesList;
                  newDevicesList[i].selected = true;

                  _this3.changePageEditStatus(true, 1);
                }
              }
            });
          };

          for (var i = 0, len = devicesList.length; i < len; i += 1) {
            _loop(i, len);
          }
        }

        return data.length ? [{
          data: data
        }] : [];
      }
    }, {
      key: "changePageEditStatus",
      value: function changePageEditStatus(editStatus) {
        var selectedCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var devicesList = this.state.devicesList;
        var isChange = false;

        if (editStatus === false) {
          for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
            if (devicesList[i].selected === true) {
              isChange = true;
              devicesList[i].selected = false;
            }
          }
        }

        if (isChange) {
          this.forceUpdate();
        }

        this.setState({
          isEditStatus: editStatus,
          selectedCount: selectedCount
        });
      }
    }, {
      key: "didClickBottomDeleteButton",
      value: function didClickBottomDeleteButton() {
        var _this4 = this;

        var devicesList = this.state.devicesList;
        var onDelete = this.props.onDelete;
        var deleteList = [];

        for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
          if (devicesList[i].selected === true) {
            deleteList.push(devicesList[i]);
          }
        }

        if (deleteList.length > 0) {
          if (typeof onDelete !== 'function') return;
          var promise = onDelete(deleteList);

          if (promise && promise.then) {
            promise.then(function () {
              return _this4.changePageEditStatus(false);
            });
          } else {
            this.changePageEditStatus(false);
          }
        }
      }
    }, {
      key: "didClickButtomRenameButton",
      value: function didClickButtomRenameButton() {
        var _this5 = this;

        var devicesList = this.state.devicesList;
        var renameDevice = null;

        for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
          if (devicesList[i].selected === true) {
            renameDevice = devicesList[i];
            break;
          }
        }

        this.renameDevice(renameDevice, function () {
          _this5.changePageEditStatus(false);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var pageData = this.getPageData();
        var _this$state2 = this.state,
            isEditStatus = _this$state2.isEditStatus,
            selectedCount = _this$state2.selectedCount;
        var _this$props2 = this.props,
            showSeparator = _this$props2.showSeparator,
            pageTitle = _this$props2.pageTitle,
            onAddButton = _this$props2.onAddButton,
            isShowAddButton = _this$props2.isShowAddButton,
            onPressBack = _this$props2.onPressBack,
            isLoading = _this$props2.isLoading,
            onRefresh = _this$props2.onRefresh,
            emptyText = _this$props2.emptyText,
            emptyIcon = _this$props2.emptyIcon,
            emptyIconStyle = _this$props2.emptyIconStyle;
        var BottomViewComponent = null;
        var BottomAddSubDeviceComponent = null;

        if (isEditStatus === true) {
          BottomViewComponent = _react.default.createElement(_LHBottomButtonGroup.default, {
            buttons: [{
              text: _LHCommonFunction.LHCommonLocalizableString.common_button_delete,
              type: 'delete',
              testID: 'bottomDeleteBtn',
              disabled: selectedCount === 0,
              onPress: function onPress() {
                _this6.didClickBottomDeleteButton();
              }
            }, {
              text: _LHCommonFunction.LHCommonLocalizableString.common_button_changename,
              type: 'rename',
              testID: 'bottomRenameBtn',
              disabled: selectedCount !== 1,
              onPress: function onPress() {
                _this6.didClickButtomRenameButton();
              }
            }]
          });
        } else {
          var iconSource = _LHCommonIcon.default.common.add.normal;
          BottomAddSubDeviceComponent = isShowAddButton ? _react.default.createElement(_reactNative.TouchableOpacity, {
            style: _LHRenameDeletePageViewStyle.default.addSubDeviceViewStyle,
            onPress: typeof onAddButton === 'function' ? onAddButton : undefined,
            accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('addIcon'),
            testID: "addIcon"
          }, _react.default.createElement(_reactNative.Image, {
            style: _LHRenameDeletePageViewStyle.default.addSubDeviceButtonStyle,
            source: iconSource
          })) : null;
        }

        var listViewPaddingBottom = 0;

        if (pageData.length > 0) {
          if (isEditStatus === true) {
            listViewPaddingBottom = 10;
          } else {
            listViewPaddingBottom = _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight + _LHCommonFunction.LHUiUtils.GetPx(86);
          }
        }

        var titleBarProps = {
          showSeparator: showSeparator
        };

        if (isEditStatus) {
          titleBarProps = (0, _objectSpread2.default)({}, titleBarProps, {
            title: _LHCommonFunction.LHCommonLocalizableString.sub_device_list_selected.replace('{XX}', selectedCount),
            leftButtons: [{
              type: 'deafultCloseBtn',
              press: function press() {
                _this6.changePageEditStatus(false);
              }
            }],
            rightButtons: [{
              type: 'deafultCompleteBtn',
              press: function press() {
                _this6.changePageEditStatus(false);
              }
            }]
          });
        } else {
          titleBarProps = (0, _objectSpread2.default)({}, titleBarProps, {
            title: pageTitle || _LHCommonFunction.LHCommonLocalizableString.sub_device_list_title,
            onPressLeft: onPressBack,
            rightButtons: [{
              type: 'defaultEditBtn',
              press: function press() {
                _this6.changePageEditStatus(true);
              }
            }]
          });
        }

        return _react.default.createElement(_reactNative.View, {
          style: _LHRenameDeletePageViewStyle.default.listViewStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHRenameDeletePageView'),
          testID: "LHRenameDeletePageView"
        }, _react.default.createElement(_LHTitleBarCustom.default, titleBarProps), _react.default.createElement(_LHStandardListSwipeout.default, {
          isDark: _LHCommonFunction.LHUiColorUtils.isDark,
          data: pageData,
          contentContainerStyle: {
            paddingBottom: listViewPaddingBottom
          },
          stickySectionHeadersEnabled: false,
          ListEmptyComponent: _react.default.createElement(_LHStandardEmpty.default, {
            emptyIconStyle: [{
              width: _LHCommonFunction.LHUiUtils.GetPx(138),
              height: _LHCommonFunction.LHUiUtils.GetPx(138),
              marginTop: _LHCommonFunction.LHUiUtils.GetPx(146)
            }, emptyIconStyle],
            emptyPageStyle: {
              backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
            },
            emptyTextStyle: {
              marginTop: _LHCommonFunction.LHUiUtils.GetPx(0)
            },
            emptyIcon: emptyIcon || _LHCommonIcon.default.record.placeholderTiming,
            text: emptyText || _LHCommonFunction.LHCommonLocalizableString.common_log_no_logs
          }),
          ListFooterComponent: _react.default.createElement(_reactNative.View, {
            style: _LHRenameDeletePageViewStyle.default.footer
          }),
          refreshControl: isEditStatus ? null : _react.default.createElement(_reactNative.RefreshControl, {
            refreshing: isLoading === true && isEditStatus === false,
            onRefresh: onRefresh
          })
        }), BottomViewComponent, BottomAddSubDeviceComponent, _react.default.createElement(_LHText.default, {
          style: [{
            position: 'absolute',
            left: 0,
            top: 0,
            opacity: 0,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12)
          }],
          onLayout: function onLayout(e) {
            _this6.setState({
              renameBtnWidth: e.nativeEvent.layout.width
            });
          }
        }, _LHCommonFunction.LHCommonLocalizableString.common_button_changename), _react.default.createElement(_LHText.default, {
          style: [{
            position: 'absolute',
            left: 0,
            top: 0,
            opacity: 0,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12)
          }],
          onLayout: function onLayout(e) {
            _this6.setState({
              deleteBtnWidth: e.nativeEvent.layout.width
            });
          }
        }, _LHCommonFunction.LHCommonLocalizableString.common_button_delete));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props) {
        return {
          devicesList: props.devicesList
        };
      }
    }]);
    return LHRenameDeletePageView;
  }(_react.default.Component);

  LHRenameDeletePageView.propTypes = {
    showSeparator: _propTypes.default.bool,
    pageTitle: _propTypes.default.string,
    isShowAddButton: _propTypes.default.bool,
    isLoading: _propTypes.default.bool,
    emptyText: _propTypes.default.string,
    onDelete: _propTypes.default.func,
    onRenameWithData: _propTypes.default.func,
    onFetchDataSources: _propTypes.default.func,
    onCellPress: _propTypes.default.func,
    onAddButton: _propTypes.default.func,
    onPressBack: _propTypes.default.func,
    onRefresh: _propTypes.default.func
  };
  LHRenameDeletePageView.defaultProps = {
    showSeparator: true,
    pageTitle: '',
    isShowAddButton: true,
    isLoading: false,
    emptyText: '',
    onDelete: function onDelete() {},
    onRenameWithData: function onRenameWithData() {},
    onFetchDataSources: function onFetchDataSources() {},
    onCellPress: function onCellPress() {},
    onAddButton: function onAddButton() {},
    onPressBack: function onPressBack() {},
    onRefresh: function onRefresh() {}
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHRenameDeletePageView);

  exports.default = _default;
},10916,[14305,14314,14320,14371,14377,14323,14386,10297,10033,10318,10004,10919,10883,10925,10895,10946,10871,10955,10961]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSwipeoutButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSwipeoutButton.default;
  exports.default = _default;
},10919,[14305,10922]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var LHSwipeoutButton = function (_React$Component) {
    (0, _inherits2.default)(LHSwipeoutButton, _React$Component);

    function LHSwipeoutButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSwipeoutButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSwipeoutButton).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHSwipeoutButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            text = _this$props.text,
            type = _this$props.type,
            hideIcon = _this$props.hideIcon,
            icon = _this$props.icon,
            isDark = _this$props.isDark;
        var iconEle = hideIcon ? null : _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: {
            width: _LHCommonFunction.LHUiUtils.GetPx(24),
            height: _LHCommonFunction.LHUiUtils.GetPx(24)
          },
          source: icon || (type === 'more' ? _LHCommonIcon.default.common.swipeBtnMore : type === 'rename' ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_edit_dark : _LHCommonIcon.default.common.delete.white)
        });
        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: '100%',
            height: '100%',
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: type === 'more' ? isDark ? '#7D8E9E' : '#A1ADB8' : type === 'rename' ? isDark ? '#E3A434' : '#FCBD4E' : isDark ? '#DB281A' : '#F43F31'
          }, style]
        }, iconEle, _react.default.createElement(_LHText.default, {
          style: {
            color: '#fff',
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16)
          }
        }, text));
      }
    }]);
    return LHSwipeoutButton;
  }(_react.default.Component);

  LHSwipeoutButton.defaultProps = {
    type: 'delete',
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSwipeoutButton);

  exports.default = _default;
},10922,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10871,10895]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardListSwipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardListSwipeout.default;
  exports.default = _default;
},10925,[14305,10928]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHStandardCell = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Swipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var styles = _reactNative.StyleSheet.create({
    sectionHeader: {
      paddingTop: _LHCommonFunction.LHUiUtils.GetPx(20),
      paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(8),
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    listTitle: {
      color: _LHCommonFunction.LHUiUtils.MiJiaListHeaderColor,
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      fontWeight: 'bold',
      paddingLeft: _LHCommonFunction.LHUiUtils.GetPx(23)
    },
    btnContainer: {
      alignSelf: 'stretch',
      flexDirection: 'row',
      flex: 1,
      backgroundColor: '#fff',
      height: _LHCommonFunction.LHUiUtils.GetPx(50),
      alignItems: 'center'
    },
    btnText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      flex: 1,
      color: _LHCommonFunction.LHUiUtils.MiJiaRed,
      textAlign: 'center',
      fontWeight: 'bold'
    }
  });

  var LHStandardListSwipeout = function (_React$Component) {
    (0, _inherits2.default)(LHStandardListSwipeout, _React$Component);
    (0, _createClass2.default)(LHStandardListSwipeout, null, [{
      key: "dealData",
      value: function dealData(data) {
        var result = data;

        for (var i = 0; i < result.length; i += 1) {
          result[i].index = i;
        }

        return result;
      }
    }]);

    function LHStandardListSwipeout(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardListSwipeout);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardListSwipeout).call(this, props));
      _this.prevScrollTop = 0;
      _this.swipeoutScroll = false;
      var data = _this.props.data;
      _this.state = {
        data: data,
        scrollEnabled: true
      };
      return _this;
    }

    (0, _createClass2.default)(LHStandardListSwipeout, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(data) {
        this.setState({
          data: data.data || []
        });
      }
    }, {
      key: "closeSwipeout",
      value: function closeSwipeout(closeAll, sectionIndex, index) {
        var data = this.state.data;
        var copyData = data;

        for (var i = 0, len = copyData.length; i < len; i += 1) {
          for (var j = 0, len1 = copyData[i].data.length; j < len1; j += 1) {
            copyData[i].data[j].swipeoutClose = true;
          }
        }

        if (!closeAll) copyData[sectionIndex].data[index].swipeoutClose = false;
        this.forceUpdate();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            noBounces = _this$props.noBounces,
            stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,
            style = _this$props.style,
            _ListEmptyComponent = _this$props.ListEmptyComponent,
            contentContainerStyle = _this$props.contentContainerStyle,
            _ListHeaderComponent = _this$props.ListHeaderComponent,
            _ListFooterComponent = _this$props.ListFooterComponent,
            refreshControl = _this$props.refreshControl,
            showsVerticalScrollIndicator = _this$props.showsVerticalScrollIndicator,
            isDark = _this$props.isDark,
            sectionHeaderStyle = _this$props.sectionHeaderStyle;
        var _this$state = this.state,
            data = _this$state.data,
            scrollEnabled = _this$state.scrollEnabled;
        return _react.default.createElement(_reactNative.SectionList, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('SectionList'),
          testID: "SectionList",
          initialNumToRender: 20,
          scrollEnabled: scrollEnabled,
          contentContainerStyle: contentContainerStyle,
          style: style,
          bounces: !noBounces,
          sections: LHStandardListSwipeout.dealData(data),
          stickySectionHeadersEnabled: typeof stickySectionHeadersEnabled === 'undefined' ? true : stickySectionHeadersEnabled,
          showsVerticalScrollIndicator: showsVerticalScrollIndicator,
          ListEmptyComponent: function ListEmptyComponent() {
            if (_ListEmptyComponent) {
              return _ListEmptyComponent;
            } else {
              return _react.default.createElement(_reactNative.View, null);
            }
          },
          ListHeaderComponent: function ListHeaderComponent() {
            if (_ListHeaderComponent) {
              return _ListHeaderComponent;
            } else {
              return _react.default.createElement(_reactNative.View, null);
            }
          },
          ListFooterComponent: function ListFooterComponent() {
            if (_ListFooterComponent) {
              return _ListFooterComponent;
            } else {
              return _react.default.createElement(_reactNative.View, null);
            }
          },
          refreshControl: typeof refreshControl === 'undefined' ? null : refreshControl,
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index,
                section = _ref.section;

            if (section.title === 'type:bottomButton') {
              return _react.default.createElement(_reactNative.TouchableHighlight, {
                onPress: item.press
              }, _react.default.createElement(_reactNative.View, {
                style: styles.btnContainer
              }, _react.default.createElement(_reactNative.Text, {
                style: styles.btnText
              }, item.title)));
            } else {
              var StandardCell = _react.default.createElement(_LHStandardCell.default, {
                testID: item.testID,
                marginLeft: item.marginLeft,
                marginBottom: item.marginBottom,
                marginTop: item.marginTop,
                separatorMarginLeft: item.separatorMarginLeft,
                iconSource: item.iconSource,
                iconSourceStyle: item.iconSourceStyle,
                showPlaceHolderImage: item.showPlaceHolderImage,
                isIconSourceNeedCache: item.isIconSourceNeedCache,
                leftIconStyle: item.leftIconStyle,
                hasRightArrow: !item.hideRightArrow,
                rightArrowStyle: item.rightArrowStyle,
                hasBadge: item.hasBadge,
                showBadge: item.showBadge,
                badge: item.badge,
                descriptionNumberOfLines: item.descriptionNumberOfLines,
                active: item.active,
                activeIconStyle: item.activeIconStyle,
                leftArrowSource: item.leftRrrowSource,
                description: item.description,
                descriptionStyle: item.descriptionStyle,
                rightDescriptionStyle: item.rightDescriptionStyle,
                rightDescriptionColor: item.rightDescriptionColor,
                rightDescription: item.rightDescription,
                rightIconSource: item.rightIconSource,
                rightIconStype: item.rightIconStype,
                hasSwitch: item.hasSwitch,
                switchColor: item.switchColor,
                switchValue: item.switchValue,
                useControlledSwitch: item.useControlledSwitch,
                switchDisabled: item.switchDisabled,
                onSwitchChange: item.onSwitchChange,
                hasSlider: item.hasSlider,
                sliderValue: item.sliderValue,
                onSliderChange: item.onSliderChange,
                hasCheckBox: item.hasCheckBox,
                checkBoxActive: item.checkBoxActive,
                checkBoxNotActiveIcon: item.checkBoxNotActiveIcon,
                checkBoxActiveIcon: item.checkBoxActiveIcon,
                rowContainerStyle: item.rowContainerStyle,
                titleStyle: item.titleStyle,
                title: item.title,
                titleNumberOfLines: item.titleNumberOfLines,
                style: item.style,
                topSeparatorLine: false,
                bottomSeparatorLine: false,
                useTouchableHighlight: !item.noTouchableHighlight,
                minimumLongPressDuration: item.minimumLongPressDuration,
                press: item.press,
                longPress: item.longPress,
                textContainer: item.textContainer,
                showOfflineIcon: item.showOfflineIcon,
                showDeletedIcon: item.showDeletedIcon,
                cellContainerStyle: item.cellContainerStyle,
                disabled: item.disabled,
                containerNeedAnimate: item.containerNeedAnimate,
                hasDot: item.hasDot,
                isDark: isDark,
                rightElement: item.rightElement
              });

              if (item.swipeoutBtns) {
                var swipeoutBtns = item.swipeoutBtns;

                var _loop = function _loop(i, len) {
                  var rowData = swipeoutBtns[i];
                  delete rowData.onPress;

                  if (rowData.press) {
                    rowData.onPress = function () {
                      rowData.press(item, section.index, index);
                    };
                  }
                };

                for (var i = 0, len = swipeoutBtns.length; i < len; i += 1) {
                  _loop(i, len);
                }

                return _react.default.createElement(_Swipeout.default, {
                  scroll: function scroll(e) {
                    _this2.setState({
                      scrollEnabled: e
                    });
                  },
                  backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
                  sensitivity: 5,
                  right: swipeoutBtns || [],
                  close: item.swipeoutClose,
                  buttonWidth: item.swipeoutButtonWidth,
                  onOpen: function onOpen(sectionID, rowID, direction) {
                    if (direction) {
                      _this2.closeSwipeout(false, section.index, index);
                    } else {
                      data[section.index].data[index].swipeoutClose = false;

                      _this2.forceUpdate();
                    }
                  }
                }, StandardCell);
              } else {
                return StandardCell;
              }
            }
          },
          renderSectionHeader: function renderSectionHeader(_ref2) {
            var section = _ref2.section;

            if (section.title === 'type:bottomButton') {
              return _react.default.createElement(_reactNative.View, {
                style: {
                  backgroundColor: isDark ? '#000' : '#fff',
                  height: (0, _LHCommonFunction.dp)(24)
                }
              });
            } else if (section.title) {
              return _react.default.createElement(_reactNative.View, {
                style: [{
                  backgroundColor: isDark ? '#000' : '#fff'
                }, sectionHeaderStyle]
              }, _react.default.createElement(_reactNative.View, {
                style: {
                  height: (0, _LHCommonFunction.dp)(8),
                  justifyContent: 'center'
                }
              }), _react.default.createElement(_reactNative.View, {
                style: [styles.sectionHeader]
              }, _react.default.createElement(_LHText.default, {
                style: [styles.listTitle, {
                  color: isDark ? 'rgba(255,255,255,0.9)' : '#8C93B0'
                }]
              }, section.title)));
            } else if (typeof section.sectionHeader === 'function') {
              return section.sectionHeader();
            } else {
              return null;
            }
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          onScroll: function onScroll(e) {
            if (Math.abs(e.nativeEvent.contentOffset.y - _this2.prevScrollTop) > 20) {
              _this2.prevScrollTop = e.nativeEvent.contentOffset.y;

              _this2.closeSwipeout(true);
            }
          },
          scrollEventThrottle: 500
        });
      }
    }]);
    return LHStandardListSwipeout;
  }(_react.default.Component);

  LHStandardListSwipeout.defaultProps = {
    showsVerticalScrollIndicator: false,
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHStandardListSwipeout);

  exports.default = _default;
},10928,[14305,14320,14371,14377,14323,14386,10297,10033,10004,10349,10931,10871]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _swipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _swipeout.default;
  exports.default = _default;
},10931,[14305,10934]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactTweenState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _createReactClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var SwipeoutBtn = (0, _createReactClass.default)({
    displayName: "SwipeoutBtn",
    propTypes: {
      backgroundColor: _propTypes.default.string,
      color: _propTypes.default.string,
      component: _propTypes.default.node,
      onPress: _propTypes.default.func,
      text: _propTypes.default.node,
      type: _propTypes.default.string,
      underlayColor: _propTypes.default.string
    },
    getDefaultProps: function getDefaultProps() {
      return {
        backgroundColor: null,
        color: null,
        component: null,
        underlayColor: null,
        height: 0,
        onPress: null,
        disabled: false,
        text: 'Click me',
        type: '',
        width: 0
      };
    },
    render: function render() {
      var btn = this.props;
      var styleSwipeoutBtn = [_styles.default.swipeoutBtn];
      if (btn.type === 'delete') styleSwipeoutBtn.push(_styles.default.colorDelete);else if (btn.type === 'primary') styleSwipeoutBtn.push(_styles.default.colorPrimary);else if (btn.type === 'secondary') styleSwipeoutBtn.push(_styles.default.colorSecondary);
      if (btn.backgroundColor) styleSwipeoutBtn.push([{
        backgroundColor: btn.backgroundColor
      }]);
      styleSwipeoutBtn.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnComponent = [];
      styleSwipeoutBtnComponent.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnText = [_styles.default.swipeoutBtnText];
      if (btn.color) styleSwipeoutBtnText.push({
        color: btn.color
      });
      return _react.default.createElement(_NativeButton.default, {
        testID: this.props.testID,
        onPress: this.props.onPress,
        underlayColor: this.props.underlayColor,
        disabled: this.props.disabled,
        style: [styleSwipeoutBtn],
        textStyle: styleSwipeoutBtnText
      }, btn.component ? _react.default.createElement(_reactNative.View, {
        style: styleSwipeoutBtnComponent
      }, btn.component) : btn.text);
    }
  });
  var Swipeout = (0, _createReactClass.default)({
    displayName: "Swipeout",
    mixins: [_reactTweenState.default.Mixin],
    propTypes: {
      autoClose: _propTypes.default.bool,
      backgroundColor: _propTypes.default.string,
      close: _propTypes.default.bool,
      left: _propTypes.default.array,
      onOpen: _propTypes.default.func,
      onClose: _propTypes.default.func,
      right: _propTypes.default.array,
      scroll: _propTypes.default.func,
      style: (_reactNative.ViewPropTypes || _reactNative.View.propTypes).style,
      sensitivity: _propTypes.default.number,
      buttonWidth: _propTypes.default.number,
      disabled: _propTypes.default.bool
    },
    getDefaultProps: function getDefaultProps() {
      return {
        disabled: false,
        rowID: -1,
        sectionID: -1,
        sensitivity: 50
      };
    },
    getInitialState: function getInitialState() {
      return {
        autoClose: this.props.autoClose || false,
        btnWidth: 0,
        btnsLeftWidth: 0,
        btnsRightWidth: 0,
        contentHeight: 0,
        contentPos: 0,
        contentWidth: 0,
        openedRight: false,
        swiping: false,
        tweenDuration: 160,
        timeStart: null
      };
    },
    UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {
      var _this = this;

      this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(event, gestureState) {
          return _this.state.openedLeft || _this.state.openedRight;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(event, gestureState) {
          return Math.abs(gestureState.dx) > _this.props.sensitivity && Math.abs(gestureState.dy) <= _this.props.sensitivity;
        },
        onPanResponderGrant: this._handlePanResponderGrant,
        onPanResponderMove: this._handlePanResponderMove,
        onPanResponderRelease: this._handlePanResponderEnd,
        onPanResponderTerminate: this._handlePanResponderEnd,
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
    },
    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (nextProps.close) this._close();
      if (nextProps.openRight) this._openRight();
      if (nextProps.openLeft) this._openLeft();
    },
    _handlePanResponderGrant: function _handlePanResponderGrant(e, gestureState) {
      var _this2 = this;

      if (this.props.disabled) return;

      if (!this.state.openedLeft && !this.state.openedRight) {
        this._callOnOpen();
      } else {
        this._callOnClose();
      }

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var buttonWidth = _this2.props.buttonWidth || width / 5;

        _this2.setState({
          btnWidth: buttonWidth,
          btnsLeftWidth: _this2.props.left ? buttonWidth * _this2.props.left.length : 0,
          btnsRightWidth: _this2.props.right ? _this2._getButtonsWidth(_this2.props.right, buttonWidth) : 0,
          swiping: true,
          timeStart: new Date().getTime()
        });
      });
    },
    _getButtonsWidth: function _getButtonsWidth(btns, buttonWidth) {
      var width = 0;

      for (var i = 0, len = btns.length; i < len; i++) {
        width += btns[i].width || buttonWidth;
      }

      return width;
    },
    _handlePanResponderMove: function _handlePanResponderMove(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var posY = gestureState.dy;
      var leftWidth = this.state.btnsLeftWidth;
      var rightWidth = this.state.btnsRightWidth;
      if (this.state.openedRight) var posX = gestureState.dx - rightWidth;else if (this.state.openedLeft) var posX = gestureState.dx + leftWidth;
      var moveX = Math.abs(posX) > Math.abs(posY);

      if (this.props.scroll) {
        if (moveX) this.props.scroll(false);else this.props.scroll(true);
      }

      if (this.state.swiping) {
        if (posX < 0 && this.props.right) {
          this.setState({
            contentPos: Math.min(posX, 0)
          });
        } else if (posX > 0 && this.props.left) {
          this.setState({
            contentPos: Math.max(posX, 0)
          });
        }

        ;
      }
    },
    _handlePanResponderEnd: function _handlePanResponderEnd(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var contentPos = this.state.contentPos;
      var contentWidth = this.state.contentWidth;
      var btnsLeftWidth = this.state.btnsLeftWidth;
      var btnsRightWidth = this.state.btnsRightWidth;
      var openX = contentWidth * 0.33;
      var openLeft = posX > openX || posX > btnsLeftWidth / 2;
      var openRight = posX < -openX || posX < -btnsRightWidth / 2;
      if (this.state.openedRight) var openRight = posX - openX < -openX;
      if (this.state.openedLeft) var openLeft = posX + openX > openX;
      var timeDiff = new Date().getTime() - this.state.timeStart < 200;

      if (timeDiff) {
        var openRight = posX < -openX / 10 && !this.state.openedLeft;
        var openLeft = posX > openX / 10 && !this.state.openedRight;
      }

      if (this.state.swiping) {
        if (openRight && contentPos < 0 && posX < 0) {
          this._open(-btnsRightWidth, 'right');
        } else if (openLeft && contentPos > 0 && posX > 0) {
          this._open(btnsLeftWidth, 'left');
        } else {
          this._close();
        }
      }

      if (this.props.scroll) this.props.scroll(true);
    },
    _tweenContent: function _tweenContent(state, endValue) {
      this.tweenState(state, {
        easing: _reactTweenState.default.easingTypes.easeInOutQuad,
        duration: endValue === 0 ? this.state.tweenDuration * 1.5 : this.state.tweenDuration,
        endValue: endValue
      });
    },
    _rubberBandEasing: function _rubberBandEasing(value, limit) {
      if (value < 0 && value < limit) return limit - Math.pow(limit - value, 0.85);else if (value > 0 && value > limit) return limit + Math.pow(value - limit, 0.85);
      return value;
    },
    _autoClose: function _autoClose(btn) {
      if (this.state.autoClose) this._close();
      var onPress = btn.onPress;
      if (onPress) onPress();
    },
    _open: function _open(contentPos, direction) {
      var left = direction === 'left';
      var _this$props = this.props,
          sectionID = _this$props.sectionID,
          rowID = _this$props.rowID,
          onOpen = _this$props.onOpen;
      onOpen && onOpen(sectionID, rowID, direction);

      this._tweenContent('contentPos', contentPos);

      this.setState({
        contentPos: contentPos,
        openedLeft: left,
        openedRight: !left,
        swiping: false
      });
    },
    _close: function _close() {
      var _this$props2 = this.props,
          sectionID = _this$props2.sectionID,
          rowID = _this$props2.rowID,
          onClose = _this$props2.onClose;

      if (onClose && (this.state.openedLeft || this.state.openedRight)) {
        var direction = this.state.openedRight ? 'right' : 'left';
        onClose(sectionID, rowID, direction);
      }

      this._tweenContent('contentPos', 0);

      this._callOnClose();

      this.setState({
        openedRight: false,
        openedLeft: false,
        swiping: false
      });
    },
    _callOnClose: function _callOnClose() {
      if (this.props.onClose) this.props.onClose(this.props.sectionID, this.props.rowID);
    },
    _callOnOpen: function _callOnOpen() {
      if (this.props.onOpen) this.props.onOpen(this.props.sectionID, this.props.rowID);
    },
    _openRight: function _openRight() {
      var _this3 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this3.props.buttonWidth || width / 5;

        _this3.setState({
          btnWidth: btnWidth,
          btnsRightWidth: _this3.props.right ? btnWidth * _this3.props.right.length : 0
        }, function () {
          _this3._tweenContent('contentPos', -_this3.state.btnsRightWidth);

          _this3._callOnOpen();

          _this3.setState({
            contentPos: -_this3.state.btnsRightWidth,
            openedLeft: false,
            openedRight: true,
            swiping: false
          });
        });
      });
    },
    _openLeft: function _openLeft() {
      var _this4 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this4.props.buttonWidth || width / 5;

        _this4.setState({
          btnWidth: btnWidth,
          btnsLeftWidth: _this4.props.left ? btnWidth * _this4.props.left.length : 0
        }, function () {
          _this4._tweenContent('contentPos', _this4.state.btnsLeftWidth);

          _this4._callOnOpen();

          _this4.setState({
            contentPos: _this4.state.btnsLeftWidth,
            openedLeft: true,
            openedRight: false,
            swiping: false
          });
        });
      });
    },
    render: function render() {
      var contentWidth = this.state.contentWidth;
      var posX = this.getTweeningValue('contentPos');
      var styleSwipeout = [_styles.default.swipeout, this.props.style];

      if (this.props.backgroundColor) {
        styleSwipeout.push([{
          backgroundColor: this.props.backgroundColor
        }]);
      }

      var limit = -this.state.btnsRightWidth;
      if (posX > 0) var limit = this.state.btnsLeftWidth;
      var styleLeftPos = {
        left: {
          left: 0,
          overflow: 'hidden',
          width: Math.min(limit * (posX / limit), limit)
        }
      };
      var styleRightPos = {
        right: {
          left: Math.abs(contentWidth + Math.max(limit, posX)),
          right: 0
        }
      };
      var styleContentPos = {
        content: {
          transform: [{
            translateX: this._rubberBandEasing(posX, limit)
          }, {
            translateY: 0
          }]
        }
      };
      var styleContent = [_styles.default.swipeoutContent];
      styleContent.push(styleContentPos.content);
      var styleRight = [_styles.default.swipeoutBtns];
      styleRight.push(styleRightPos.right);
      var styleLeft = [_styles.default.swipeoutBtns];
      styleLeft.push(styleLeftPos.left);
      var isRightVisible = posX < 0;
      var isLeftVisible = posX > 0;
      return _react.default.createElement(_reactNative.View, {
        style: styleSwipeout
      }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
        ref: "swipeoutContent",
        style: styleContent,
        onLayout: this._onLayout
      }, this._panResponder.panHandlers), this.props.children), this._renderButtons(this.props.right, isRightVisible, styleRight), this._renderButtons(this.props.left, isLeftVisible, styleLeft));
    },
    _onLayout: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this.setState({
        contentWidth: width,
        contentHeight: height
      });
    },
    _renderButtons: function _renderButtons(buttons, isVisible, style) {
      if (buttons && isVisible) {
        return _react.default.createElement(_reactNative.View, {
          style: style
        }, buttons.map(this._renderButton));
      } else {
        return _react.default.createElement(_reactNative.View, null);
      }
    },
    _renderButton: function _renderButton(btn, i) {
      var _this5 = this;

      return _react.default.createElement(SwipeoutBtn, {
        backgroundColor: btn.backgroundColor,
        color: btn.color,
        component: btn.component,
        disabled: btn.disabled,
        height: this.state.contentHeight,
        key: i,
        onPress: function onPress() {
          return _this5._autoClose(btn);
        },
        text: btn.text,
        type: btn.type,
        underlayColor: btn.underlayColor,
        width: btn.width || this.state.btnWidth,
        testID: btn.testID || ''
      });
    }
  });
  Swipeout.NativeButton = _NativeButton.default;
  Swipeout.SwipeoutButton = SwipeoutBtn;
  var _default = Swipeout;
  exports.default = _default;
},10934,[14308,14305,14344,10937,10940,10943,10297,10318,10456,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  !function (e, n) {
    "object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof exports ? exports.tweenState = n() : e.tweenState = n();
  }(this, function () {
    return function (e) {
      function n(r) {
        if (t[r]) return t[r].exports;
        var a = t[r] = {
          exports: {},
          id: r,
          loaded: false
        };
        return e[r].call(a.exports, a, a.exports, n), a.loaded = true, a.exports;
      }

      var t = {};
      return n.m = e, n.c = t, n.p = "", n(0);
    }({
      0: function _(e, n, t) {
        e.exports = t(90);
      },
      1: function _(e, n) {
        function t() {
          c = false, o.length ? s = o.concat(s) : f = -1, s.length && r();
        }

        function r() {
          if (!c) {
            var e = setTimeout(t);
            c = true;

            for (var n = s.length; n;) {
              for (o = s, s = []; ++f < n;) {
                o && o[f].run();
              }

              f = -1, n = s.length;
            }

            o = null, c = false, clearTimeout(e);
          }
        }

        function a(e, n) {
          this.fun = e, this.array = n;
        }

        function u() {}

        var o,
            i = e.exports = {},
            s = [],
            c = false,
            f = -1;
        i.nextTick = function (e) {
          var n = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) {
            n[t - 1] = arguments[t];
          }
          s.push(new a(e, n)), 1 !== s.length || c || setTimeout(r, 0);
        }, a.prototype.run = function () {
          this.fun.apply(null, this.array);
        }, i.title = "browser", i.browser = true, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = u, i.addListener = u, i.once = u, i.off = u, i.removeListener = u, i.removeAllListeners = u, i.emit = u, i.binding = function (e) {
          throw new Error("process.binding is not supported");
        }, i.cwd = function () {
          return "/";
        }, i.chdir = function (e) {
          throw new Error("process.chdir is not supported");
        }, i.umask = function () {
          return 0;
        };
      },
      90: function _(e, n, t) {
        "use strict";

        function r(e) {
          return e && e.__esModule ? e : {
            "default": e
          };
        }

        Object.defineProperty(n, "__esModule", {
          value: true
        });
        var a = t(165),
            u = r(a),
            o = t(91),
            i = r(o),
            s = "ADDITIVE",
            c = a.easeInOutQuad,
            f = 300,
            l = 0,
            h = {
          ADDITIVE: "ADDITIVE",
          DESTRUCTIVE: "DESTRUCTIVE"
        },
            v = {
          _rafID: null,
          getInitialState: function getInitialState() {
            return {
              tweenQueue: []
            };
          },
          componentWillUnmount: function componentWillUnmount() {
            i["default"].cancel(this._rafID), this._rafID = -1;
          },
          tweenState: function tweenState(e, n) {
            var t = this,
                r = n.easing,
                a = n.duration,
                u = n.delay,
                o = n.beginValue,
                v = n.endValue,
                d = n.onEnd,
                p = n.stackBehavior;
            this.setState(function (n) {
              var I = n,
                  w = undefined,
                  g = undefined;
              if ("string" == typeof e) w = e, g = e;else {
                for (var M = 0; M < e.length - 1; M++) {
                  I = I[e[M]];
                }

                w = e[e.length - 1], g = e.join("|");
              }
              var m = {
                easing: r || c,
                duration: null == a ? f : a,
                delay: null == u ? l : u,
                beginValue: null == o ? I[w] : o,
                endValue: v,
                onEnd: d,
                stackBehavior: p || s
              },
                  x = n.tweenQueue;
              return m.stackBehavior === h.DESTRUCTIVE && (x = n.tweenQueue.filter(function (e) {
                return e.pathHash !== g;
              })), x.push({
                pathHash: g,
                config: m,
                initTime: Date.now() + m.delay
              }), I[w] = m.endValue, 1 === x.length && (t._rafID = (0, i["default"])(t._rafCb)), {
                tweenQueue: x
              };
            });
          },
          getTweeningValue: function getTweeningValue(e) {
            var n = this.state,
                t = undefined,
                r = undefined;
            if ("string" == typeof e) t = n[e], r = e;else {
              t = n;

              for (var a = 0; a < e.length; a++) {
                t = t[e[a]];
              }

              r = e.join("|");
            }

            for (var u = Date.now(), a = 0; a < n.tweenQueue.length; a++) {
              var o = n.tweenQueue[a],
                  i = o.pathHash,
                  s = o.initTime,
                  c = o.config;

              if (i === r) {
                var f = u - s > c.duration ? c.duration : Math.max(0, u - s),
                    l = 0 === c.duration ? c.endValue : c.easing(f, c.beginValue, c.endValue, c.duration),
                    h = l - c.endValue;
                t += h;
              }
            }

            return t;
          },
          _rafCb: function _rafCb() {
            var e = this.state;

            if (0 !== e.tweenQueue.length) {
              for (var n = Date.now(), t = [], r = 0; r < e.tweenQueue.length; r++) {
                var a = e.tweenQueue[r],
                    u = a.initTime,
                    o = a.config;
                n - u < o.duration ? t.push(a) : o.onEnd && o.onEnd();
              }

              -1 !== this._rafID && (this.setState({
                tweenQueue: t
              }), this._rafID = (0, i["default"])(this._rafCb));
            }
          }
        };
        n["default"] = {
          Mixin: v,
          easingTypes: u["default"],
          stackBehavior: h
        }, e.exports = n["default"];
      },
      91: function _(e, n, t) {
        for (var r = t(92), a = "undefined" == typeof window ? {} : window, u = ["moz", "webkit"], o = "AnimationFrame", i = a["requestAnimationFrame"], s = a["cancelAnimationFrame"] || a["cancelRequestAnimationFrame"], c = 0; c < u.length && !i; c++) {
          i = a[u[c] + "Request" + o], s = a[u[c] + "Cancel" + o] || a[u[c] + "CancelRequest" + o];
        }

        if (!i || !s) {
          var f = 0,
              l = 0,
              h = [],
              v = 16.666666666666668;
          i = function i(e) {
            if (0 === h.length) {
              var n = r(),
                  t = Math.max(0, v - (n - f));
              f = t + n, setTimeout(function () {
                var e = h.slice(0);
                h.length = 0;

                for (var n = 0; n < e.length; n++) {
                  if (!e[n].cancelled) try {
                    e[n].callback(f);
                  } catch (t) {
                    setTimeout(function () {
                      throw t;
                    }, 0);
                  }
                }
              }, Math.round(t));
            }

            return h.push({
              handle: ++l,
              callback: e,
              cancelled: false
            }), l;
          }, s = function s(e) {
            for (var n = 0; n < h.length; n++) {
              h[n].handle === e && (h[n].cancelled = true);
            }
          };
        }

        e.exports = function (e) {
          return i.call(a, e);
        }, e.exports.cancel = function () {
          s.apply(a, arguments);
        };
      },
      92: function _(e, n, t) {
        (function (n) {
          (function () {
            var t, r, a;
            "undefined" != typeof performance && null !== performance && performance.now ? e.exports = function () {
              return performance.now();
            } : "undefined" != typeof n && null !== n && n.hrtime ? (e.exports = function () {
              return (t() - a) / 1e6;
            }, r = n.hrtime, t = function t() {
              var e;
              return e = r(), 1e9 * e[0] + e[1];
            }, a = t()) : Date.now ? (e.exports = function () {
              return Date.now() - a;
            }, a = Date.now()) : (e.exports = function () {
              return new Date().getTime() - a;
            }, a = new Date().getTime());
          }).call(this);
        }).call(n, t(1));
      },
      165: function _(e, n) {
        "use strict";

        var t = {
          linear: function linear(e, n, t, r) {
            var a = t - n;
            return a * e / r + n;
          },
          easeInQuad: function easeInQuad(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e + n;
          },
          easeOutQuad: function easeOutQuad(e, n, t, r) {
            var a = t - n;
            return -a * (e /= r) * (e - 2) + n;
          },
          easeInOutQuad: function easeInOutQuad(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e + n : -a / 2 * (--e * (e - 2) - 1) + n;
          },
          easeInCubic: function easeInCubic(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e + n;
          },
          easeOutCubic: function easeOutCubic(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e + 1) + n;
          },
          easeInOutCubic: function easeInOutCubic(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e + n : a / 2 * ((e -= 2) * e * e + 2) + n;
          },
          easeInQuart: function easeInQuart(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e + n;
          },
          easeOutQuart: function easeOutQuart(e, n, t, r) {
            var a = t - n;
            return -a * ((e = e / r - 1) * e * e * e - 1) + n;
          },
          easeInOutQuart: function easeInOutQuart(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e + n : -a / 2 * ((e -= 2) * e * e * e - 2) + n;
          },
          easeInQuint: function easeInQuint(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e * e + n;
          },
          easeOutQuint: function easeOutQuint(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e * e * e + 1) + n;
          },
          easeInOutQuint: function easeInOutQuint(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e * e + n : a / 2 * ((e -= 2) * e * e * e * e + 2) + n;
          },
          easeInSine: function easeInSine(e, n, t, r) {
            var a = t - n;
            return -a * Math.cos(e / r * (Math.PI / 2)) + a + n;
          },
          easeOutSine: function easeOutSine(e, n, t, r) {
            var a = t - n;
            return a * Math.sin(e / r * (Math.PI / 2)) + n;
          },
          easeInOutSine: function easeInOutSine(e, n, t, r) {
            var a = t - n;
            return -a / 2 * (Math.cos(Math.PI * e / r) - 1) + n;
          },
          easeInExpo: function easeInExpo(e, n, t, r) {
            var a = t - n;
            return 0 == e ? n : a * Math.pow(2, 10 * (e / r - 1)) + n;
          },
          easeOutExpo: function easeOutExpo(e, n, t, r) {
            var a = t - n;
            return e == r ? n + a : a * (-Math.pow(2, -10 * e / r) + 1) + n;
          },
          easeInOutExpo: function easeInOutExpo(e, n, t, r) {
            var a = t - n;
            return 0 === e ? n : e === r ? n + a : (e /= r / 2) < 1 ? a / 2 * Math.pow(2, 10 * (e - 1)) + n : a / 2 * (-Math.pow(2, -10 * --e) + 2) + n;
          },
          easeInCirc: function easeInCirc(e, n, t, r) {
            var a = t - n;
            return -a * (Math.sqrt(1 - (e /= r) * e) - 1) + n;
          },
          easeOutCirc: function easeOutCirc(e, n, t, r) {
            var a = t - n;
            return a * Math.sqrt(1 - (e = e / r - 1) * e) + n;
          },
          easeInOutCirc: function easeInOutCirc(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? -a / 2 * (Math.sqrt(1 - e * e) - 1) + n : a / 2 * (Math.sqrt(1 - (e -= 2) * e) + 1) + n;
          },
          easeInElastic: function easeInElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), -(a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n);
          },
          easeOutElastic: function easeOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), a * Math.pow(2, -10 * e) * Math.sin((e * r - o) * (2 * Math.PI) / u) + i + n);
          },
          easeInOutElastic: function easeInOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 2 === (e /= r / 2) ? n + i : (u || (u = r * 0.44999999999999996), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), 1 > e ? -0.5 * (a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n : a * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u) * .5 + i + n);
          },
          easeInBack: function easeInBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * (e /= r) * e * ((a + 1) * e - a) + n;
          },
          easeOutBack: function easeOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * ((e = e / r - 1) * e * ((a + 1) * e + a) + 1) + n;
          },
          easeInOutBack: function easeInOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), (e /= r / 2) < 1 ? u / 2 * (e * e * (((a *= 1.525) + 1) * e - a)) + n : u / 2 * ((e -= 2) * e * (((a *= 1.525) + 1) * e + a) + 2) + n;
          },
          easeInBounce: function easeInBounce(e, n, r, a) {
            var u,
                o = r - n;
            return u = t.easeOutBounce(a - e, 0, o, a), o - u + n;
          },
          easeOutBounce: function easeOutBounce(e, n, t, r) {
            var a = t - n;
            return (e /= r) < 0.36363636363636365 ? a * (7.5625 * e * e) + n : 0.7272727272727273 > e ? a * (7.5625 * (e -= 0.5454545454545454) * e + .75) + n : 0.9090909090909091 > e ? a * (7.5625 * (e -= 0.8181818181818182) * e + .9375) + n : a * (7.5625 * (e -= 0.9545454545454546) * e + .984375) + n;
          },
          easeInOutBounce: function easeInOutBounce(e, n, r, a) {
            var u,
                o = r - n;
            return a / 2 > e ? (u = t.easeInBounce(2 * e, 0, o, a), .5 * u + n) : (u = t.easeOutBounce(2 * e - a, 0, o, a), .5 * u + .5 * o + n);
          }
        };
        e.exports = t;
      }
    });
  });
},10937,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createReactClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var styles = _reactNative.StyleSheet.create({
    button: {
      flexDirection: 'row',
      alignSelf: 'stretch',
      justifyContent: 'center'
    },
    textButton: {
      fontSize: 14,
      alignSelf: 'center'
    },
    opacity: {
      opacity: 0.8
    }
  });

  var NativeButton = (0, _createReactClass.default)({
    displayName: "NativeButton",
    propTypes: (0, _objectSpread2.default)({}, _reactNative.TouchableWithoutFeedback.propTypes, {
      textStyle: _propTypes.default.any,
      disabledStyle: _propTypes.default.any,
      children: _propTypes.default.node.isRequired,
      underlayColor: _propTypes.default.string,
      background: _propTypes.default.any
    }),
    statics: {
      isAndroid: _reactNative.Platform.OS === 'android'
    },
    getDefaultProps: function getDefaultProps() {
      return {
        textStyle: null,
        disabledStyle: null,
        underlayColor: null
      };
    },
    _renderText: function _renderText() {
      if (typeof this.props.children !== 'string') {
        return this.props.children;
      }

      return _react.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        ellipsizeMode: _reactNative.Platform.OS === 'ios' ? 'clip' : 'tail',
        style: [styles.textButton, this.props.textStyle]
      }, this.props.children);
    },
    render: function render() {
      var disabledStyle = this.props.disabled ? this.props.disabledStyle || styles.opacity : {};
      var buttonProps = {
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        accessible: this.props.accessible,
        delayLongPress: this.props.delayLongPress,
        delayPressIn: this.props.delayPressIn,
        delayPressOut: this.props.delayPressOut,
        disabled: this.props.disabled,
        hitSlop: this.props.hitSlop,
        onLayout: this.props.onLayout,
        onPress: this.props.onPress,
        onPressIn: this.props.onPressIn,
        onPressOut: this.props.onPressOut,
        onLongPress: this.props.onLongPress,
        pressRetentionOffset: this.props.pressRetentionOffset,
        accessibilityLabel: _reactNative.Platform.OS === 'android' ? this.props.testID : null,
        testID: this.props.testID
      };

      if (NativeButton.isAndroid) {
        buttonProps = (0, _extends2.default)(buttonProps, {
          background: this.props.background || _reactNative.TouchableNativeFeedback.SelectableBackground()
        });
        return _react.default.createElement(_reactNative.TouchableNativeFeedback, buttonProps, _react.default.createElement(_reactNative.View, {
          style: [styles.button, this.props.style, disabledStyle]
        }, this._renderText()));
      }

      return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({}, buttonProps, {
        style: [styles.button, this.props.style, disabledStyle],
        underlayColor: this.props.underlayColor
      }), this._renderText());
    }
  });
  var _default = NativeButton;
  exports.default = _default;
},10940,[14305,14344,14314,10297,10318,10456,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var styles = _reactNative.StyleSheet.create({
    swipeout: {
      backgroundColor: '#dbddde',
      overflow: 'hidden'
    },
    swipeoutBtnTouchable: {
      flex: 1
    },
    swipeoutBtn: {
      alignItems: 'center',
      backgroundColor: '#b6bec0',
      justifyContent: 'center',
      overflow: 'hidden'
    },
    swipeoutBtnText: {
      color: '#fff',
      textAlign: 'center'
    },
    swipeoutBtns: {
      bottom: 0,
      flex: 1,
      flexDirection: 'row',
      position: 'absolute',
      right: 0,
      top: 0
    },
    swipeoutContent: {},
    colorDelete: {
      backgroundColor: '#fb3d38'
    },
    colorPrimary: {
      backgroundColor: '#006fff'
    },
    colorSecondary: {
      backgroundColor: '#fd9427'
    }
  });

  var _default = styles;
  exports.default = _default;
},10943,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardEmpty.default;
  exports.default = _default;
},10946,[14305,10949]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height;

  var styles = _reactNative.StyleSheet.create({
    emptyWrap: {
      alignItems: 'center'
    },
    emptyPageWrap: {
      height: height - _LHCommonFunction.LHUiUtils.TitleBarHeight - _LHCommonFunction.LHDeviceUtils.statusBarHeight
    },
    emptyImg: {
      width: _LHCommonFunction.LHUiUtils.GetPx(128),
      height: _LHCommonFunction.LHUiUtils.GetPx(101),
      alignSelf: 'center'
    },
    emptyText: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(19),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(40),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(40),
      textAlign: 'center',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    }
  });

  var LHStandardEmpty = function (_React$PureComponent) {
    (0, _inherits2.default)(LHStandardEmpty, _React$PureComponent);

    function LHStandardEmpty(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardEmpty);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardEmpty).call(this, props));
      _this.componentExit = false;
      _this.state = {
        screenHeight: height
      };
      return _this;
    }

    (0, _createClass2.default)(LHStandardEmpty, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (_reactNative.Platform.OS === 'android') this.getAndroidHeight();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.componentExit = true;
      }
    }, {
      key: "getAndroidHeight",
      value: function getAndroidHeight() {
        var _this2 = this;

        _LHCommonFunction.LHDeviceUtils.GetPhoneScreenHeight(function (value) {
          if (!_this2.componentExit) _this2.setState({
            screenHeight: value
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            emptyPageStyle = _this$props.emptyPageStyle,
            text = _this$props.text,
            emptyIcon = _this$props.emptyIcon,
            emptyIconStyle = _this$props.emptyIconStyle,
            style = _this$props.style,
            emptyTextStyle = _this$props.emptyTextStyle,
            onClicked = _this$props.onClicked,
            contentHeight = _this$props.contentHeight,
            isDark = _this$props.isDark;
        var screenHeight = this.state.screenHeight;
        var marginTop = contentHeight ? (contentHeight - _LHCommonFunction.LHUiUtils.GetPx(140)) * 0.3 : _LHCommonFunction.LHUiUtils.GetPx(139);
        return _react.default.createElement(_reactNative.View, {
          style: [styles.emptyPageWrap, {
            height: screenHeight - _LHCommonFunction.LHUiUtils.TitleBarHeight - _LHCommonFunction.LHDeviceUtils.statusBarHeight,
            backgroundColor: isDark ? '#000' : '#fff'
          }, contentHeight ? {
            height: contentHeight
          } : null, emptyPageStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.emptyWrap, style]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: onClicked
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
          style: [styles.emptyImg, {
            marginTop: marginTop
          }, emptyIconStyle],
          source: emptyIcon || _$$_REQUIRE(_dependencyMap[9])
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.emptyText, {
            color: isDark ? '#666' : '#999'
          }, emptyTextStyle]
        }, text)))));
      }
    }]);
    return LHStandardEmpty;
  }(_react.default.PureComponent);

  exports.default = LHStandardEmpty;
},10949,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10952]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 381,
    "height": 303,
    "scales": [1],
    "hash": "710e550f31234e2763915ba2acfb2750",
    "name": "list_blank",
    "type": "png"
  });
},10952,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHBottomButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHBottomButtonGroup.default;
  exports.default = _default;
},10955,[14305,10958]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var LHBottomButtonGroup = function (_React$Component) {
    (0, _inherits2.default)(LHBottomButtonGroup, _React$Component);

    function LHBottomButtonGroup(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHBottomButtonGroup);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHBottomButtonGroup).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHBottomButtonGroup, [{
      key: "renderButtons",
      value: function renderButtons(item, index) {
        var isDark = _LHCommonFunction.LHUiColorUtils.isDark;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          key: 'LHBottomButtonGroup_' + index,
          disabled: item.disabled || false,
          style: {
            height: '100%',
            minWidth: _LHCommonFunction.LHUiUtils.GetPx(49),
            justifyContent: 'center',
            flexDirection: 'column',
            alignItems: 'center',
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(7)
          },
          onPress: function onPress() {
            if (typeof item.onPress === 'function') item.onPress();
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(item.testID),
          testID: item.testID
        }, _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: {
            width: _LHCommonFunction.LHUiUtils.GetPx(25),
            height: _LHCommonFunction.LHUiUtils.GetPx(25),
            opacity: item.disabled ? 0.3 : 1
          },
          source: item.icon || (item.type === 'rename' ? isDark ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_edit_dark : _LHCommonIcon.default.bottomViewIcon.bottom_bar_edit : item.type === 'collect' ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_collect : item.type === 'move' ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_move : item.type === 'top' ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_top : item.type === 'edit' ? isDark ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_edit_dark : _LHCommonIcon.default.bottomViewIcon.bottom_bar_edit : item.type === 'add' ? isDark ? _LHCommonIcon.default.bottomViewIcon.bottom_bar_add_dark : _LHCommonIcon.default.bottomViewIcon.bottom_bar_add : isDark ? _LHCommonIcon.default.common.delete.white : _LHCommonIcon.default.common.delete.normal)
        }), _react.default.createElement(_LHText.default, {
          style: {
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(10),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(13),
            color: _LHCommonFunction.LHUiColorUtils.colorGrayHeavier,
            textAlign: 'center',
            marginBottom: _LHCommonFunction.LHUiUtils.GetPx(4),
            opacity: item.disabled ? 0.3 : 1
          }
        }, item.text));
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            style = _this$props.style,
            buttons = _this$props.buttons;
        return _react.default.createElement(_reactNative.View, {
          style: [{
            height: _LHCommonFunction.LHUiUtils.GetPx(70) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
            paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
            width: '100%',
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
            justifyContent: 'center',
            flexDirection: 'row'
          }, style]
        }, buttons.map(function (item, index) {
          return _this2.renderButtons(item, index);
        }), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            zIndex: 1
          }
        }, _react.default.createElement(_LHSeparator.default, {
          isDark: _LHCommonFunction.LHUiColorUtils.isDark,
          style: {
            alignSelf: 'flex-start'
          }
        })));
      }
    }]);
    return LHBottomButtonGroup;
  }(_react.default.Component);

  LHBottomButtonGroup.defaultProps = {};

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHBottomButtonGroup);

  exports.default = _default;
},10958,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10847,10871,10895]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[1]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height;

  var LHSubDeviceListStyle = _reactNative.StyleSheet.create({
    headerViewStyle: {
      width: '100%',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
    },
    headerImageStyle: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(30),
      width: _LHCommonFunction.LHUiUtils.GetPx(100),
      height: _LHCommonFunction.LHUiUtils.GetPx(100),
      alignSelf: 'center'
    },
    bottomViewTopLineStyle: {
      width: '100%',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
      position: 'absolute',
      height: 0.5
    },
    headerTitleTextStyle: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(14),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(33),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      alignSelf: 'center',
      color: '#000000',
      textAlign: 'center'
    },
    headerBottomViewStyle: {
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray,
      height: _LHCommonFunction.LHUiUtils.GetPx(8)
    },
    navigateButton: {
      height: _LHCommonFunction.LHUiUtils.GetPx(30),
      width: _LHCommonFunction.LHUiUtils.GetPx(30)
    },
    bottomViewStyle: {
      height: _LHCommonFunction.LHUiUtils.GetPx(67) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      width: '100%',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      justifyContent: 'center',
      flexDirection: 'row'
    },
    bottomButtonStyle: {
      height: _LHCommonFunction.LHUiUtils.GetPx(67),
      minWidth: _LHCommonFunction.LHUiUtils.GetPx(63),
      justifyContent: 'center',
      flexDirection: 'column',
      alignItems: 'center',
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(14)
    },
    bottomButtonImageStyleDisable: {
      width: _LHCommonFunction.LHUiUtils.GetPx(25),
      height: _LHCommonFunction.LHUiUtils.GetPx(25),
      opacity: 0.4
    },
    bottomButtonImageStyleNormal: {
      width: _LHCommonFunction.LHUiUtils.GetPx(25),
      height: _LHCommonFunction.LHUiUtils.GetPx(25),
      opacity: 1
    },
    bottomButtonTextStyle: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignSelf: 'center',
      opacity: 1
    },
    bottomButtonTextDisableStyle: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignSelf: 'center',
      opacity: 0.38
    },
    addSubDeviceButtonStyle: {
      width: _LHCommonFunction.LHUiUtils.GetPx(66),
      height: _LHCommonFunction.LHUiUtils.GetPx(66)
    },
    addSubDeviceViewStyle: {
      position: 'absolute',
      right: _LHCommonFunction.LHUiUtils.GetPx(20),
      bottom: _LHCommonFunction.LHUiUtils.GetPx(20),
      width: _LHCommonFunction.LHUiUtils.GetPx(66),
      height: _LHCommonFunction.LHUiUtils.GetPx(66)
    },
    listViewStyle: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: '100%',
      height: '100%',
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    bottomBtn: {
      width: _LHCommonFunction.LHUiUtils.GetPx(66),
      height: _LHCommonFunction.LHUiUtils.GetPx(66),
      position: 'absolute',
      bottom: _LHCommonFunction.LHUiUtils.GetPx(12) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      right: _LHCommonFunction.LHUiUtils.GetPx(12)
    },
    renameComponent: {
      backgroundColor: '#FCBD4E',
      width: '100%',
      height: '100%',
      justifyContent: 'center',
      alignItems: 'center'
    },
    deleteComponent: {
      backgroundColor: '#F43F31',
      width: '100%',
      height: '100%',
      justifyContent: 'center',
      alignItems: 'center'
    },
    swipeoutImage: {
      width: _LHCommonFunction.LHUiUtils.GetPx(25),
      height: _LHCommonFunction.LHUiUtils.GetPx(25)
    },
    swipeoutText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      color: '#ffffff'
    },
    emptyPageWrap: {
      height: height - _LHCommonFunction.LHUiUtils.TitleBarHeight - _LHCommonFunction.LHDeviceUtils.statusBarHeight,
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
    }
  });

  exports.default = LHSubDeviceListStyle;
},10961,[10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var styles = _reactNative.StyleSheet.create({
    btn: {
      flex: 1,
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      flexDirection: 'row',
      alignItems: 'center'
    },
    input: {
      borderWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      color: 'rgba(0,0,0, 0.7)',
      textAlign: 'center',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      flex: 1,
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(8)
    },
    text: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    btnText: {
      width: '100%',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#fff',
      textAlign: 'center'
    },
    row: {
      flexDirection: 'row',
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(23),
      paddingVertical: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignItems: 'center'
    },
    params: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(17),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#333'
    },
    checkBox: {
      width: 18,
      height: 18
    },
    checkBoxWrap: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkBoxText: {
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    }
  });

  var subscribeMessagesErrorCount = 0;

  var LHBleDebugPage = function (_React$Component) {
    (0, _inherits2.default)(LHBleDebugPage, _React$Component);

    function LHBleDebugPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHBleDebugPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHBleDebugPage).call(this, props, context));
      _this.hasListenerKey = [];
      _this.state = {
        did: _miot.Device.deviceID,
        readKey: '',
        readType: 'event',
        readParams: '',
        readResult: '',
        writeCmd: '',
        writeData: '',
        bleResult: [],
        listenerType: 'event',
        currentListener: '',
        listenerResult: [],
        bleGateWayConnectStatus: false,
        bleConnectStatus: 'notConnected'
      };
      return _this;
    }

    (0, _createClass2.default)(LHBleDebugPage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        _LHCommonFunction.LHBleUtils.Init({
          LUMI_UUID_SERVICE: '00000100-0065-6C62-2E74-6F696D2E696D',
          LUMI_READ_UUID_NOTIFY: '00000102-0065-6C62-2E74-6F696D2E696D',
          LUMI_WRITE_UUID_NOTIFY: '00000101-0065-6C62-2E74-6F696D2E696D',
          OTA_WRITE_UUID_NOTIFY: '',
          OTA_READ_UUID_NOTIFY: ''
        });

        this.getBleGateWayConnectStatus();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.deviceStatusListener = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, map, res) {
          var _this2$state = _this2.state,
              currentListener = _this2$state.currentListener,
              listenerResult = _this2$state.listenerResult;

          var index = _LHCommonFunction.CommonMethod.Find(res, 'key', currentListener);

          if (index > -1) {
            var data = _LHCommonFunction.CommonMethod.DeepClone(listenerResult, []);

            data.unshift({
              time: _LHCommonFunction.LHDateUtils.DateFormat('hh:mm:ss', +new Date()),
              data: JSON.stringify(res[index])
            });

            _this2.setState({
              listenerResult: data
            });
          }
        });
        this.connectionStatusChangedListener = _LHCommonFunction.LHBleUtils.AddConnectionStatusChangedListener(function (status) {
          var bleConnectStatus = _this2.state.bleConnectStatus;

          if (bleConnectStatus === 'connected' && !status) {
            _this2.setBleConnectStatus('notConnected');
          }
        });
        this.bleDataListener = _reactNative.DeviceEventEmitter.addListener('BLE_DATA', function (res) {
          if (res) {
            var bleResult = _this2.state.bleResult;

            var data = _LHCommonFunction.CommonMethod.DeepClone(bleResult, []);

            data.unshift(res);

            _this2.setState({
              bleResult: data
            });
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _LHCommonFunction.LHBleUtils.DisconnectDevice();

        if (this.deviceStatusListener) this.deviceStatusListener.remove();
        if (this.subscribeMessagesListener) this.subscribeMessagesListener.remove();
        if (this.connectionStatusChangedListener) this.connectionStatusChangedListener.remove();
        if (this.bleDataListener) this.bleDataListener.remove();
      }
    }, {
      key: "getBleGateWayConnectStatus",
      value: function getBleGateWayConnectStatus() {
        var _this3 = this;

        _LHCommonFunction.LHBleUtils.GetBleGateWayConnectStatus(function (status) {
          _this3.setState({
            bleGateWayConnectStatus: status
          });
        });
      }
    }, {
      key: "setBleConnectStatus",
      value: function setBleConnectStatus(status) {
        this.setState({
          bleConnectStatus: status
        });
      }
    }, {
      key: "connect",
      value: function connect() {
        var _this4 = this;

        var bleConnectStatus = this.state.bleConnectStatus;

        if (bleConnectStatus === 'connected') {
          _LHCommonFunction.LHBleUtils.DisconnectDevice();
        } else {
          this.setBleConnectStatus('connecting');

          _LHCommonFunction.LHBleUtils.IsBleEnabled(function (isEnabled) {
            if (isEnabled) {
              _LHCommonFunction.LHBleUtils.ConnectDevice(function (res) {
                if (res.code === 0) {
                  _this4.setBleConnectStatus('connected');
                } else {
                  _this4.setBleConnectStatus('notConnected');
                }
              });
            } else {
              _LHCommonFunction.LHBleUtils.ShowOpenBleGuide();
            }
          });
        }
      }
    }, {
      key: "getDataFromServer",
      value: function getDataFromServer(did, type, key) {
        var _this5 = this;

        var params = {
          did: did,
          timestamp: Date.parse(new Date()) / 1000,
          limit: 1,
          key: key,
          type: type
        };
        this.setState({
          readParams: JSON.stringify(params),
          readResult: '读取中...'
        });

        _LHCommonFunction.LHMiServer.GetUserDeviceDataTab(params, function (res) {
          _this5.setState({
            readResult: JSON.stringify(res)
          });
        }, function (res) {
          _this5.setState({
            readResult: '读取失败：' + JSON.stringify(res)
          });
        });
      }
    }, {
      key: "subscribeMessages",
      value: function subscribeMessages(params) {
        var _this6 = this;

        this.setState({
          currentListener: params,
          listenerResult: []
        });

        if (this.hasListenerKey.indexOf(params) > -1) {
          return;
        }

        this.hasListenerKey.push(params);

        _miot.Device.getDeviceWifi().subscribeMessages(params).then(function (subcription) {
          subscribeMessagesErrorCount = 0;
          _this6.subscribeMessagesListener = subcription;
        }).catch(function () {
          for (var i = 0, len = _this6.hasListenerKey.length; i < len; i += 1) {
            if (params === _this6.hasListenerKey[i]) {
              _this6.hasListenerKey.splice(i, 1);

              break;
            }
          }

          subscribeMessagesErrorCount += 1;

          if (subscribeMessagesErrorCount < 3) {
            _this6.subscribeMessages(params);
          }
        });
      }
    }, {
      key: "AddListenerEvent",
      value: function AddListenerEvent(did, listenerkey) {
        var listenerType = this.state.listenerType;
        this.subscribeMessages(listenerType + '.' + listenerkey);
      }
    }, {
      key: "renderListenerResultItem",
      value: function renderListenerResultItem(item, index) {
        return _react.default.createElement(_reactNative.View, {
          key: 'key_' + index,
          style: [styles.row]
        }, _react.default.createElement(_reactNative.Text, null, item.time + '：' + item.data));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        var _this$state = this.state,
            did = _this$state.did,
            readParams = _this$state.readParams,
            readType = _this$state.readType,
            readResult = _this$state.readResult,
            bleResult = _this$state.bleResult,
            listenerType = _this$state.listenerType,
            currentListener = _this$state.currentListener,
            listenerResult = _this$state.listenerResult,
            bleGateWayConnectStatus = _this$state.bleGateWayConnectStatus,
            bleConnectStatus = _this$state.bleConnectStatus;
        var currentListenerEl = currentListener !== '' ? _react.default.createElement(_reactNative.View, {
          style: [styles.row, {
            paddingTop: 0
          }]
        }, _react.default.createElement(_reactNative.Text, null, '当前订阅：' + currentListener)) : null;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "did:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 20,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          defaultValue: did,
          onChangeText: function onChangeText(text) {
            _this7.setState({
              did: text
            });
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "\u624B\u673A\u8FDE\u63A5\u72B6\u6001:", _react.default.createElement(_reactNative.Text, {
          style: {
            color: _LHCommonFunction.LHUiUtils.MiJiaBlue
          }
        }, bleConnectStatus === 'connected' ? '已连接' : bleConnectStatus === 'connecting' ? '连接中' : '未连接')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            _this7.connect();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, bleConnectStatus === 'connected' ? '断开' : bleConnectStatus === 'connecting' ? '连接中' : '连接'))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "cmd:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 4,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this7.setState({
              writeCmd: text
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "data:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 200,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this7.setState({
              writeData: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var _this7$state = _this7.state,
                writeCmd = _this7$state.writeCmd,
                writeData = _this7$state.writeData;
            if (bleConnectStatus !== 'connected' && writeCmd === '') return false;
            return _LHCommonFunction.LHBleUtils.SendMessage(writeCmd, writeData);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u53D1\u9001"))), bleResult.length > 0 ? _react.default.createElement(_reactNative.View, {
          style: [styles.row, {
            paddingTop: 0
          }]
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            flex: 2
          }
        }, "\u63A5\u6536\u5230\u7684\u84DD\u7259\u6570\u636E"), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            _this7.setState({
              bleResult: []
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u6E05\u7A7A"))) : null, bleResult.map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            key: 'key_' + index,
            style: [styles.row]
          }, _react.default.createElement(_reactNative.Text, null, JSON.stringify(item)));
        }), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "\u84DD\u7259\u7F51\u5173\u8FDE\u63A5\u72B6\u6001:", _react.default.createElement(_reactNative.Text, {
          style: {
            color: _LHCommonFunction.LHUiUtils.MiJiaBlue
          }
        }, bleGateWayConnectStatus ? '已连接' : '未连接')), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            _this7.getBleGateWayConnectStatus();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u5237\u65B0"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this7.setState({
              readType: 'event'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: readType === 'event' ? _$$_REQUIRE(_dependencyMap[11]) : _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u4E8B\u4EF6")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this7.setState({
              readType: 'prop'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: readType === 'event' ? _$$_REQUIRE(_dependencyMap[12]) : _$$_REQUIRE(_dependencyMap[11])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u5C5E\u6027"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "key:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 10,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this7.setState({
              readKey: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var readKey = _this7.state.readKey;
            if (did === '' || readKey === '') return false;
            return _this7.getDataFromServer(did, readType, readKey);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u8BFB\u53D6"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u8BFB\u53D6\u53C2\u6570:", readParams)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.params
        }, "\u8BFB\u53D6\u7ED3\u679C:", readResult)), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this7.setState({
              listenerType: 'event'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: listenerType === 'event' ? _$$_REQUIRE(_dependencyMap[11]) : _$$_REQUIRE(_dependencyMap[12])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u4E8B\u4EF6")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this7.setState({
              listenerType: 'prop'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: listenerType === 'event' ? _$$_REQUIRE(_dependencyMap[12]) : _$$_REQUIRE(_dependencyMap[11])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u5C5E\u6027"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "key:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 10,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this7.setState({
              listenerkey: text
            });
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var listenerkey = _this7.state.listenerkey;
            if (did === '' || listenerkey === '') return false;
            return _this7.AddListenerEvent(did, listenerkey);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u8BA2\u9605"))), currentListenerEl, listenerResult.map(function (item, index) {
          return _this7.renderListenerResultItem(item, index);
        }));
      }
    }]);
    return LHBleDebugPage;
  }(_react.default.Component);

  LHBleDebugPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: "Ble\u8C03\u8BD5\u9875\u9762",
        style: [{
          backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
          borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
          borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
        }],
        onPressLeft: function onPressLeft() {
          if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHBleDebugPage);

  exports.default = _default;
},10964,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10883,10595,10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var styles = _reactNative.StyleSheet.create({
    title: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontWeight: 'bold'
    },
    row: {
      flexDirection: 'row',
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(23),
      paddingVertical: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignItems: 'center'
    },
    params: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(17),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#333'
    }
  });

  var LHBleCmdHistoryPage = function (_React$Component) {
    (0, _inherits2.default)(LHBleCmdHistoryPage, _React$Component);

    function LHBleCmdHistoryPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHBleCmdHistoryPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHBleCmdHistoryPage).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHBleCmdHistoryPage, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.row]
        }, _react.default.createElement(_LHText.default, {
          style: styles.title
        }, "\u8FDE\u63A5\u5931\u8D25\u6570\u636E")), _LHCommonFunction.LHBleUtils.GetConnectFailDatas().map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            key: 'key_' + index,
            style: [styles.row]
          }, _react.default.createElement(_LHText.default, null, _LHCommonFunction.LHDateUtils.DateFormat('hh:mm:ss', item.time) + '.' + item.time % 1000 + '  ' + JSON.stringify(item)));
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.row]
        }, _react.default.createElement(_LHText.default, {
          style: styles.title
        }, "\u53D1\u9001\u7684\u84DD\u7259\u6570\u636E")), _LHCommonFunction.LHBleUtils.GetSendCmds().map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            key: 'key_' + index,
            style: [styles.row]
          }, _react.default.createElement(_LHText.default, null, _LHCommonFunction.LHDateUtils.DateFormat('hh:mm:ss', item.time) + '.' + item.time % 1000 + '  ' + JSON.stringify(item)));
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.row]
        }, _react.default.createElement(_LHText.default, {
          style: styles.title
        }, "\u63A5\u6536\u7684\u84DD\u7259\u6570\u636E")), _LHCommonFunction.LHBleUtils.GetReceiveCmds().map(function (item, index) {
          return _react.default.createElement(_reactNative.View, {
            key: 'key_' + index,
            style: [styles.row]
          }, _react.default.createElement(_LHText.default, null, _LHCommonFunction.LHDateUtils.DateFormat('hh:mm:ss', item.time) + '.' + item.time % 1000 + '  ' + JSON.stringify(item)));
        }));
      }
    }]);
    return LHBleCmdHistoryPage;
  }(_react.default.Component);

  LHBleCmdHistoryPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: "Ble\u6536\u53D1\u6570\u636E\u5386\u53F2",
        style: [{
          backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
          borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
          borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
        }],
        onPressLeft: function onPressLeft() {
          if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHBleCmdHistoryPage);

  exports.default = _default;
},10967,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10883,10871]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHStandardLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var styles = _reactNative.StyleSheet.create({
    btn: {
      flex: 1,
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBlue,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      flexDirection: 'row',
      alignItems: 'center'
    },
    input: {
      borderWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor,
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(5),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16),
      color: 'rgba(0,0,0, 0.7)',
      textAlign: 'center',
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      flex: 1,
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(8)
    },
    text: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    btnText: {
      width: '100%',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#fff',
      textAlign: 'center'
    },
    row: {
      flexDirection: 'row',
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(23),
      paddingVertical: _LHCommonFunction.LHUiUtils.GetPx(10),
      alignItems: 'center'
    },
    params: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(17),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      color: '#333'
    },
    checkBox: {
      width: 18,
      height: 18
    },
    checkBoxWrap: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkBoxText: {
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(10),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    }
  });

  var LHLogDebugPage = function (_React$Component) {
    (0, _inherits2.default)(LHLogDebugPage, _React$Component);
    (0, _createClass2.default)(LHLogDebugPage, null, [{
      key: "getLogContent",
      value: function getLogContent(data) {
        var value = data.value && JSON.parse(data.value)[0];
        return {
          context: typeof value === 'object' ? JSON.stringify(value) : value,
          logType: 'normal'
        };
      }
    }]);

    function LHLogDebugPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHLogDebugPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHLogDebugPage).call(this, props, context));
      _this.state = {
        key: null,
        logKey: null,
        type: 'prop',
        showPicker: false,
        time: Math.floor(+new Date() / 1000)
      };
      return _this;
    }

    (0, _createClass2.default)(LHLogDebugPage, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            key = _this$state.key,
            logKey = _this$state.logKey,
            type = _this$state.type,
            showPicker = _this$state.showPicker,
            time = _this$state.time;
        return _react.default.createElement(_reactNative.View, {
          testID: "logPage",
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('logPage'),
          style: [{
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this2.setState({
              type: 'event'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: type === 'event' ? _$$_REQUIRE(_dependencyMap[13]) : _$$_REQUIRE(_dependencyMap[14])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u4E8B\u4EF6")), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.checkBoxWrap,
          onPress: function onPress() {
            _this2.setState({
              type: 'prop'
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.checkBox,
          source: type === 'event' ? _$$_REQUIRE(_dependencyMap[14]) : _$$_REQUIRE(_dependencyMap[13])
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.checkBoxText
        }, "\u5C5E\u6027"))), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "key:"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 10,
          style: styles.input,
          keyboardType: "numeric",
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            _this2.setState({
              key: text
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.text,
          onPress: function onPress() {
            _this2.setState({
              showPicker: true
            });
          }
        }, "\u7ED3\u675F\u65F6\u95F4:", _LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', time)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.btn,
          onPress: function onPress() {
            var newKey = _this2.state.key;
            if (newKey === '') return false;

            _this2.setState({
              logKey: newKey
            });

            return false;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnText
        }, "\u786E\u5B9A"))), logKey === null ? null : _react.default.createElement(_LHStandardLog.default, {
          timestamp: time,
          extraParam: {
            key: logKey,
            type: type
          },
          dataMap: function dataMap(data) {
            return LHLogDebugPage.getLogContent(data);
          }
        }), _react.default.createElement(_MHDatePicker.default, {
          visible: showPicker,
          type: "date",
          title: "\u8BF7\u9009\u62E9\u65E5\u671F",
          current: new Date(time * 1000),
          onSelect: function onSelect(res) {
            _this2.setState({
              time: Math.floor(res.date.getTime() / 1000)
            });
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              showPicker: false
            });
          }
        }));
      }
    }]);
    return LHLogDebugPage;
  }(_react.default.Component);

  LHLogDebugPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: "\u65E5\u5FD7\u8C03\u8BD5\u9875\u9762",
        style: {
          backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
          borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
          borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
        },
        onPressLeft: function onPressLeft() {
          if (navigation.dangerouslyGetParent().state && navigation.dangerouslyGetParent().state.index === 0) {
            _miot.Package.exit();
          } else {
            navigation.goBack();
          }
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHLogDebugPage);

  exports.default = _default;
},10970,[14305,14320,14371,14377,14323,14386,10297,10033,10074,10716,10004,10883,10973,10595,10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardLog.default;
  exports.default = _default;
},10973,[14305,10976]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHStandardLogUI = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var LHStandardLog = function (_React$Component) {
    (0, _inherits2.default)(LHStandardLog, _React$Component);

    function LHStandardLog(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardLog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardLog).call(this, props));

      _this.filterFloodLog = function (dataSource) {
        if (dataSource.length === 0) return [];

        var newDataSource = _LHCommonFunction.CommonMethod.DeepClone(dataSource).sort(function (a, b) {
          return a.time - b.time;
        });

        var filterDataSource = [];

        var _loop = function _loop(i) {
          var dataItem = newDataSource[i];
          var value = dataItem.value && JSON.parse(dataItem.value).length > 0 && JSON.parse(dataItem.value)[0];
          var filterDataLength = filterDataSource.length;

          if (filterDataLength === 0 && value !== '00') {
            filterDataSource.push(dataItem);
          }

          if (filterDataLength > 0) {
            var filterValue = filterDataSource[filterDataLength - 1].value && JSON.parse(filterDataSource[filterDataLength - 1].value).length > 0 && JSON.parse(filterDataSource[filterDataLength - 1].value)[0];

            if (value !== '00') {
              var isRepeat = filterDataSource.some(function (item) {
                return item.time == dataItem.time;
              });

              if (!isRepeat) {
                filterDataSource.push(dataItem);
              }
            }

            if (value === '00' && filterValue !== '00') {
              filterDataSource.push(dataItem);
            }
          }
        };

        for (var i = 0; i < newDataSource.length; i += 1) {
          _loop(i);
        }

        return filterDataSource.sort(function (a, b) {
          return b.time - a.time;
        });
        ;
      };

      _this.getCurrTimeStamp = function () {
        return Math.floor(+new Date() / 1000) + 60;
      };

      var _this$props = _this.props,
          serverType = _this$props.serverType,
          extraParam = _this$props.extraParam;

      if (serverType === 'ScenesHistory') {
        _this.cacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('Log_IFTTT');
      } else {
        _this.cacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('Log_Normal_' + (extraParam && extraParam.key || ''));
      }

      _this.pageSize = 20;
      _this.state = {
        logListData: [],
        isLoading: false,
        page: 1,
        pageOver: false,
        firstIn: true,
        loadFail: false,
        showDatePicker: false,
        datePickerSelected: ''
      };
      _this.isLogFirstAdd = false;
      _this.timestamp = _this.getOTimestamp();
      return _this;
    }

    (0, _createClass2.default)(LHStandardLog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var loadCache;
        return _regenerator.default.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                loadCache = this.props.loadCache;

                if (!loadCache) {
                  _context.next = 4;
                  break;
                }

                _context.next = 4;
                return _regenerator.default.awrap(this.getLocalData());

              case 4:
                if (_reactNative.Platform.OS === 'ios') {
                  setTimeout(function () {
                    _this2.getServerData(1);
                  }, 100);
                } else {
                  this.getServerData(1);
                }

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearTimeoutId();
      }
    }, {
      key: "getOTimestamp",
      value: function getOTimestamp(currTime) {
        var timestamp = this.props.timestamp;
        var datePickerSelected = this.state.datePickerSelected;
        return datePickerSelected && this.getTimestamp(datePickerSelected) || currTime || timestamp;
      }
    }, {
      key: "getTimestamp",
      value: function getTimestamp() {
        var datePickerSelected = this.state.datePickerSelected;
        var selectedDateSplit = datePickerSelected.split('-');
        var date = new Date(selectedDateSplit[0], selectedDateSplit[1] - 1, selectedDateSplit[2], 23, 59, 59);
        var time = date.getTime();
        return Math.ceil(time / 1000);
      }
    }, {
      key: "onRefresh",
      value: function onRefresh(timestamp) {
        this.timestamp = timestamp;
        this.setState({
          page: 1,
          loadFail: false
        });
        this.getServerData(1);
        var onRefresh = this.props.onRefresh;

        if (onRefresh) {
          onRefresh();
        }
      }
    }, {
      key: "onEndReached",
      value: function onEndReached() {
        var _this$state = this.state,
            page = _this$state.page,
            firstIn = _this$state.firstIn;
        if (firstIn) return;
        var _this$state2 = this.state,
            isLoading = _this$state2.isLoading,
            pageOver = _this$state2.pageOver;
        if (isLoading || pageOver) return;
        this.getServerData(page, true);
      }
    }, {
      key: "getLocalData",
      value: function getLocalData() {
        var _this$props2, extraParam, serverType, res;

        return _regenerator.default.async(function getLocalData$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this$props2 = this.props, extraParam = _this$props2.extraParam, serverType = _this$props2.serverType;
                if (extraParam && extraParam.limit) this.pageSize = extraParam.limit;

                if (!(serverType === 'ScenesHistory')) {
                  _context2.next = 8;
                  break;
                }

                _context2.next = 5;
                return _regenerator.default.awrap(_LHCommonFunction.LHMiServer.GetHostStorage(this.cacheKey));

              case 5:
                res = _context2.sent;
                _context2.next = 11;
                break;

              case 8:
                _context2.next = 10;
                return _regenerator.default.awrap(_LHCommonFunction.LHMiServer.GetHostStorage(this.cacheKey));

              case 10:
                res = _context2.sent;

              case 11:
                if (!res) {
                  _context2.next = 15;
                  break;
                }

                this.isLogFirstAdd = true;
                _context2.next = 15;
                return _regenerator.default.awrap(this.setState({
                  logListData: res
                }));

              case 15:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "setLocalData",
      value: function setLocalData(page, dataSource) {
        var loadCache = this.props.loadCache;

        if (loadCache && page === 1) {
          _LHCommonFunction.LHMiServer.SetHostStorage(this.cacheKey, dataSource);
        }
      }
    }, {
      key: "getServerData",
      value: function getServerData(page) {
        var _this3 = this;

        var isEndReach = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var lastData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
        this.setState({
          isLoading: true
        });
        var _this$props3 = this.props,
            extraParam = _this$props3.extraParam,
            serverType = _this$props3.serverType,
            filterRepeatLog = _this$props3.filterRepeatLog;
        var logListData = this.state.logListData;
        if (extraParam && extraParam.limit) this.pageSize = extraParam.limit;
        var time = new Date().getTime();

        if (serverType === 'ScenesHistory') {
          _LHCommonFunction.LHMiServer.LoadScenesHistoryForDevice(_miot.Device.deviceID, this.timestamp, this.pageSize, function (res) {
            var dataSource = res && res.history || [];

            if (!filterRepeatLog) {
              _this3.setLocalData(page, dataSource);
            }

            _this3.dealSucc(page, dataSource, time, isEndReach, lastData);
          }, function () {
            _this3.setState({
              isLoading: false,
              loadFail: true
            });

            if (logListData && logListData.length > 0) _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
          });
        } else {
          _LHCommonFunction.LHMiServer.GetUserDeviceDataTab((0, _extends2.default)({}, {
            did: _miot.Device.deviceID,
            timestamp: this.timestamp,
            limit: this.pageSize
          }, extraParam), function (res) {
            var dataSource = res && res.data || [];

            if (!filterRepeatLog) {
              _this3.setLocalData(page, dataSource);
            }

            _this3.dealSucc(page, dataSource, time, isEndReach, lastData);
          }, function () {
            _this3.setState({
              isLoading: false,
              loadFail: true
            });

            if (logListData && logListData.length > 0) _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
          });
        }
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var logListData = this.state.logListData;
        var result = this.dealData(logListData);
        return result;
      }
    }, {
      key: "dealSucc",
      value: function dealSucc(page, dataSource, time, isEndReach, lastData) {
        var _this4 = this;

        var filterRepeatLog = this.props.filterRepeatLog;
        var pageOverFlag = true;

        if (dataSource.length === this.pageSize) {
          pageOverFlag = false;
          this.timestamp = dataSource[this.pageSize - 1].time - 1;
        }

        var data = [];

        if (filterRepeatLog) {
          if (page === 1) {
            lastData = dataSource;
          } else {
            lastData = lastData.concat(dataSource);

            if (!this.isLogFirstAdd) {
              var logListData = this.state.logListData;
              lastData = logListData.concat(lastData);
            }
          }

          if (lastData.length > 0) {
            var newDataSource = _LHCommonFunction.CommonMethod.DeepClone(lastData).sort(function (a, b) {
              return a.time - b.time;
            });

            var shouldLoad = newDataSource[0].value && JSON.parse(newDataSource[0].value)[0] && JSON.parse(newDataSource[0].value)[0] == '00';

            if (isEndReach && !pageOverFlag && shouldLoad) {
              this.timestamp = newDataSource[0].time - 1;
              this.getServerData(page + 1, true, lastData);
              return;
            }
          }

          var filterLog = this.filterFloodLog(lastData);

          if (!pageOverFlag && filterLog.length < 20) {
            if (filterLog.length > 0) {
              this.timestamp = filterLog[filterLog.length - 1].time - 1;
            }

            this.getServerData(page + 1, true, lastData);
            return;
          }

          this.setLocalData(1, filterLog);
          this.setState({
            logListData: filterLog,
            pageOver: pageOverFlag
          });
          this.isLogFirstAdd = false;
        } else {
          if (page === 1) {
            data = dataSource;
          } else {
            var _logListData = this.state.logListData;
            data = _logListData.concat(dataSource);
          }

          this.setState({
            logListData: data,
            pageOver: pageOverFlag
          });
        }

        this.clearTimeoutId();
        var diffTime = new Date().getTime() - time;
        this.timeoutId = setTimeout(function () {
          _this4.timeoutId = null;

          _this4.setState({
            loadFail: false,
            firstIn: false,
            isLoading: false,
            page: page + 1
          });
        }, diffTime > 300 ? 0 : 300 - diffTime);
      }
    }, {
      key: "dealData",
      value: function dealData(data) {
        if (!data) return [];
        var dataMap = this.props.dataMap;
        var result = [];

        for (var i = 0, len = data.length; i < len; i += 1) {
          if (!dataMap(data[i])) continue;
          var dataItem = (0, _extends2.default)({}, data[i], dataMap(data[i]), {
            time: data[i].time
          });
          var index = LHStandardLog.getDataIndex(result, dataItem);

          if (index > -1) {
            result[index].data.push(dataItem);
          } else {
            result.push({
              title: dataItem.time,
              data: [dataItem]
            });
          }
        }

        return result;
      }
    }, {
      key: "clearTimeoutId",
      value: function clearTimeoutId() {
        if (this.timeoutId) {
          clearTimeout(this.timeoutId);
          this.timeoutId = null;
        }
      }
    }, {
      key: "showDatePicker",
      value: function showDatePicker(_showDatePicker) {
        this.setState({
          showDatePicker: _showDatePicker
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var _this$state3 = this.state,
            page = _this$state3.page,
            isLoading = _this$state3.isLoading,
            pageOver = _this$state3.pageOver,
            firstIn = _this$state3.firstIn,
            logListData = _this$state3.logListData,
            loadFail = _this$state3.loadFail,
            datePickerSelected = _this$state3.datePickerSelected,
            showDatePicker = _this$state3.showDatePicker;
        var _this$props4 = this.props,
            style = _this$props4.style,
            refreshTintColor = _this$props4.refreshTintColor,
            listFooterStyle = _this$props4.listFooterStyle,
            getItemStyle = _this$props4.getItemStyle,
            getSectionHeaderStyle = _this$props4.getSectionHeaderStyle,
            contentContainerStyle = _this$props4.contentContainerStyle,
            styleType = _this$props4.styleType,
            empty = _this$props4.empty,
            failure = _this$props4.failure,
            loadingText = _this$props4.loadingText,
            allDataHasLoadedText = _this$props4.allDataHasLoadedText,
            titleNumberOfLines = _this$props4.titleNumberOfLines,
            showsScrollIndicator = _this$props4.showsScrollIndicator,
            ListHeaderComponent = _this$props4.ListHeaderComponent,
            dataMap = _this$props4.dataMap,
            datePickerActiveColor = _this$props4.datePickerActiveColor,
            isDark = _this$props4.isDark,
            datePickerOnDismiss = _this$props4.datePickerOnDismiss;
        var isFirstPageLoadFail = loadFail && page === 1;
        var tipText = isFirstPageLoadFail ? failure && failure.text || _LHCommonFunction.LHCommonLocalizableString.common_tips_loading_failed_retry : empty && empty.text;
        var tipIcon = isFirstPageLoadFail ? failure && failure.icon || _$$_REQUIRE(_dependencyMap[14]) : empty && empty.icon || _$$_REQUIRE(_dependencyMap[15]);
        var tipStyle = isFirstPageLoadFail ? failure && failure.style : empty && empty.style;
        var datePickerOnDismissFn = typeof datePickerOnDismiss === 'function' ? datePickerOnDismiss : function () {};
        return _react.default.createElement(_LHStandardLogUI.default, {
          ref: function ref(_ref) {
            _this5.LogView = _ref;
          },
          contentContainerStyle: contentContainerStyle,
          listFooterStyle: listFooterStyle,
          getItemStyle: getItemStyle,
          getSectionHeaderStyle: getSectionHeaderStyle,
          refreshTintColor: refreshTintColor,
          page: page,
          scrollEnabled: !isFirstPageLoadFail || logListData && logListData.length > 0,
          loadFail: loadFail,
          pageSize: this.pageSize,
          isLoading: isLoading,
          pageOver: pageOver,
          firstIn: firstIn,
          logListData: logListData,
          style: style,
          styleType: styleType,
          emptyText: tipText,
          emptyIcon: tipIcon,
          emptyStyle: tipStyle,
          loadingText: loadingText,
          allDataHasLoadedText: allDataHasLoadedText,
          titleNumberOfLines: titleNumberOfLines,
          showsScrollIndicator: showsScrollIndicator,
          ListHeaderComponent: ListHeaderComponent,
          dataMap: dataMap,
          onEndReached: function onEndReached() {
            _this5.onEndReached();
          },
          onRefresh: function onRefresh() {
            _this5.onRefresh(_this5.getCurrTimeStamp());
          },
          onReloaded: function onReloaded() {
            _this5.onRefresh(_this5.getCurrTimeStamp());
          },
          showDatePicker: showDatePicker,
          datePickerActiveColor: datePickerActiveColor,
          datePickerButtons: [{
            text: _LHCommonFunction.LHCommonLocalizableString.common_cancel,
            testID: 'cancel',
            onPress: function onPress() {
              _this5.showDatePicker(false);

              datePickerOnDismissFn();
            }
          }],
          datePickerSelected: datePickerSelected,
          datePickerOnDismiss: function datePickerOnDismiss() {
            _this5.showDatePicker(false);

            datePickerOnDismissFn();
          },
          datePickerOnSelected: function datePickerOnSelected(res) {
            _this5.showDatePicker(false);

            _this5.setState({
              datePickerSelected: res
            });

            if (datePickerSelected !== res) {
              if (_this5.LogView) _this5.LogView.scrollTo({
                y: 0
              }, false);
              setTimeout(function () {
                _this5.isLogFirstAdd = true;

                _this5.onRefresh(_this5.getTimestamp(datePickerSelected));
              }, 50);
            }

            datePickerOnDismissFn();
          },
          isDark: isDark
        });
      }
    }]);
    return LHStandardLog;
  }(_react.default.Component);

  LHStandardLog.getDataIndex = function (dataList, data) {
    for (var i = 0, len = dataList.length; i < len; i += 1) {
      if (_LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', data.time) === _LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', dataList[i].title)) return i;
    }

    return -1;
  };

  LHStandardLog.filterFloodData = function (result) {
    if (!result || result.length === 0) {
      return [];
    }

    var newResult = _LHCommonFunction.CommonMethod.DeepClone(result);

    var filterResult = [];

    for (var i = 0; i < newResult.length; i += 1) {
      var resultItem = newResult[i];
      var newData = [];
      var data = resultItem.data.sort(function (a, b) {
        return a.time - b.time;
      });
      var shouleFilter = !data.every(function (item) {
        return item.value && JSON.parse(item.value).length > 0 && JSON.parse(item.value)[0] === '00';
      });

      if (shouleFilter) {
        var currIndex = 0;

        for (var j = 0; j < data.length; j += 1) {
          var dataItem = data[j];
          var value = JSON.parse(dataItem.value)[0];

          if (value === '01' && j >= currIndex) {
            currIndex = j;
            newData.push(dataItem);
          }

          var shouldAdd = false;

          if (newData.length > 0) {
            shouldAdd = newData[newData.length - 1].value && JSON.parse(newData[newData.length - 1].value).length > 0 && JSON.parse(newData[newData.length - 1].value)[0] === '01';
          }

          if (value === '00' && shouldAdd) {
            newData.push(dataItem);
          }
        }

        resultItem.data = newData.sort(function (a, b) {
          return b.time - a.time;
        });
        ;
        filterResult.push(resultItem);
      } else {}
    }

    return filterResult;
  };

  LHStandardLog.defaultProps = {
    loadCache: true,
    refreshTintColor: undefined,
    styleType: 0,
    titleNumberOfLines: 9999,
    contentContainerStyle: {},
    listFooterStyle: undefined,
    getSectionHeaderStyle: function getSectionHeaderStyle() {
      return undefined;
    },
    getItemStyle: function getItemStyle() {
      return undefined;
    },
    ListHeaderComponent: function ListHeaderComponent() {
      return null;
    },
    showsScrollIndicator: false,
    filterRepeatLog: false
  };
  LHStandardLog.propTypes = {
    loadCache: _propTypes.default.bool,
    styleType: _propTypes.default.number,
    refreshTintColor: _propTypes.default.string,
    titleNumberOfLines: _propTypes.default.number,
    ListHeaderComponent: _propTypes.default.func,
    contentContainerStyle: _reactNative.ViewPropTypes.style,
    listFooterStyle: _reactNative.ViewPropTypes.style,
    getItemStyle: _propTypes.default.func,
    getSectionHeaderStyle: _propTypes.default.func,
    showsScrollIndicator: _propTypes.default.bool
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHStandardLog);

  exports.default = _default;
},10976,[14305,14344,14674,14320,14323,14371,14377,14386,10297,10033,10074,10004,10318,10979,10574,10601]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStandardLogUI = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStandardLogUI.default;
  exports.default = _default;
},10979,[14305,10982]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHStandardEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHLogDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHStandardLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var styles = _reactNative.StyleSheet.create({
    sectionListStyle: {
      width: '100%',
      height: '100%'
    },
    sectionHeader: {
      paddingLeft: (0, _LHCommonFunction.dp)(24)
    },
    listTitle: {
      lineHeight: (0, _LHCommonFunction.dp)(14),
      fontSize: (0, _LHCommonFunction.dp)(12),
      marginTop: (0, _LHCommonFunction.dp)(9),
      marginBottom: (0, _LHCommonFunction.dp)(8),
      textAlignVertical: 'center',
      color: _LHCommonFunction.LHUiColorUtils.colorBlack
    },
    row: {
      flexDirection: 'row'
    },
    itemWrap: {
      paddingLeft: (0, _LHCommonFunction.dp)(23),
      paddingRight: (0, _LHCommonFunction.dp)(24)
    },
    cardItemWrap: {
      paddingLeft: (0, _LHCommonFunction.dp)(15),
      paddingRight: (0, _LHCommonFunction.dp)(15)
    },
    time: {
      width: (0, _LHCommonFunction.dp)(60),
      fontSize: (0, _LHCommonFunction.dp)(15.3),
      lineHeight: (0, _LHCommonFunction.dp)(19),
      marginTop: (0, _LHCommonFunction.dp)(17)
    },
    lineWrap: {
      alignItems: 'center'
    },
    contextValue: {
      paddingVertical: (0, _LHCommonFunction.dp)(17),
      flex: 1
    },
    context: {
      fontSize: (0, _LHCommonFunction.dp)(15.3),
      lineHeight: (0, _LHCommonFunction.dp)(19),
      marginLeft: (0, _LHCommonFunction.dp)(20),
      letterSpacing: 0
    },
    subContext: {
      marginTop: 1,
      marginLeft: (0, _LHCommonFunction.dp)(20),
      fontSize: (0, _LHCommonFunction.dp)(12.6),
      lineHeight: (0, _LHCommonFunction.dp)(16),
      letterSpacing: 0
    },
    circle: {
      width: (0, _LHCommonFunction.dp)(5),
      height: (0, _LHCommonFunction.dp)(5),
      borderRadius: (0, _LHCommonFunction.dp)(2.5),
      backgroundColor: '#d8d8d8'
    },
    line: {
      width: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      height: (0, _LHCommonFunction.dp)(24),
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorSeparator
    },
    lineBottom: {
      flex: 1,
      width: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorSeparator
    },
    noMoreWrap: {
      paddingBottom: (0, _LHCommonFunction.dp)(20),
      paddingTop: (0, _LHCommonFunction.dp)(18),
      alignItems: 'center'
    },
    noMoreText: {
      fontSize: (0, _LHCommonFunction.dp)(12),
      lineHeight: (0, _LHCommonFunction.dp)(16),
      letterSpacing: 0,
      textAlign: 'center'
    },
    loadingcontainer: {
      paddingVertical: (0, _LHCommonFunction.dp)(12),
      alignItems: 'center'
    },
    loadingWrap: {
      flexDirection: 'row'
    },
    loadingText: {
      color: _LHCommonFunction.LHUiColorUtils.colorGrayNormal,
      fontSize: (0, _LHCommonFunction.dp)(12),
      lineHeight: (0, _LHCommonFunction.dp)(16),
      letterSpacing: -0.11,
      marginLeft: (0, _LHCommonFunction.dp)(10)
    },
    footer: {
      height: (0, _LHCommonFunction.dp)(40)
    }
  });

  var showLoading = false;

  var LHStandardLogUI = function (_React$Component) {
    (0, _inherits2.default)(LHStandardLogUI, _React$Component);

    function LHStandardLogUI(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStandardLogUI);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStandardLogUI).call(this, props));
      _this.state = {
        listHeight: 0
      };
      return _this;
    }

    (0, _createClass2.default)(LHStandardLogUI, [{
      key: "getPageData",
      value: function getPageData() {
        var logListData = this.props.logListData;
        return this.dealData(logListData);
      }
    }, {
      key: "dealData",
      value: function dealData(data) {
        var dataMap = this.props.dataMap;
        var result = [];

        for (var i = 0, len = data.length; i < len; i += 1) {
          if (!dataMap(data[i])) continue;
          var dataItem = (0, _extends2.default)({}, data[i], dataMap(data[i]), {
            time: data[i].time
          });
          var index = LHStandardLogUI.getDataIndex(result, dataItem);

          if (index > -1) {
            result[index].data.push(dataItem);
          } else {
            result.push({
              title: dataItem.time,
              data: [dataItem]
            });
          }
        }

        return result;
      }
    }, {
      key: "scrollTo",
      value: function scrollTo(position) {
        var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (this.sectionListRef) {
          var scrollView = this.sectionListRef.getScrollResponder();
          if (scrollView && scrollView.scrollTo) scrollView.scrollTo(position, animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            style = _this$props.style,
            refreshTintColor = _this$props.refreshTintColor,
            contentContainerStyle = _this$props.contentContainerStyle,
            listFooterStyle = _this$props.listFooterStyle,
            getItemStyle = _this$props.getItemStyle,
            getSectionHeaderStyle = _this$props.getSectionHeaderStyle,
            styleType = _this$props.styleType,
            emptyText = _this$props.emptyText,
            emptyIcon = _this$props.emptyIcon,
            emptyStyle = _this$props.emptyStyle,
            loadingText = _this$props.loadingText,
            allDataHasLoadedText = _this$props.allDataHasLoadedText,
            titleNumberOfLines = _this$props.titleNumberOfLines,
            page = _this$props.page,
            pageSize = _this$props.pageSize,
            isLoading = _this$props.isLoading,
            pageOver = _this$props.pageOver,
            firstIn = _this$props.firstIn,
            logListData = _this$props.logListData,
            _onEndReached = _this$props.onEndReached,
            _onRefresh = _this$props.onRefresh,
            hasRefreshControl = _this$props.hasRefreshControl,
            showsScrollIndicator = _this$props.showsScrollIndicator,
            scrollEnabled = _this$props.scrollEnabled,
            onReloaded = _this$props.onReloaded,
            ListHeaderComponent = _this$props.ListHeaderComponent,
            loadFail = _this$props.loadFail,
            logContentComponent = _this$props.logContentComponent,
            showDatePicker = _this$props.showDatePicker,
            datePickerSelected = _this$props.datePickerSelected,
            datePickerOnSelected = _this$props.datePickerOnSelected,
            datePickerButtons = _this$props.datePickerButtons,
            datePickerOnDismiss = _this$props.datePickerOnDismiss,
            datePickerActiveColor = _this$props.datePickerActiveColor,
            isDark = _this$props.isDark;
        var listHeight = this.state.listHeight;
        var pageData = this.getPageData();
        var normalStyle = styleType === 0;
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(e) {
            var height = e.nativeEvent.layout.height;

            _this2.setState({
              listHeight: height
            });
          },
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.SectionList, {
          contentContainerStyle: [normalStyle ? {
            paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight
          } : null, contentContainerStyle],
          style: [styles.sectionListStyle, style],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('SectionList'),
          testID: "SectionList",
          scrollEnabled: scrollEnabled,
          resizeMode: "stretch",
          initialNumToRender: 20,
          showsVerticalScrollIndicator: showsScrollIndicator,
          sections: pageData,
          refreshControl: hasRefreshControl ? _react.default.createElement(_reactNative.RefreshControl, {
            tintColor: refreshTintColor || (isDark ? '#ccc' : '#333'),
            refreshing: page === 1 && isLoading,
            onRefresh: function onRefresh() {
              if (typeof _onRefresh === 'function') _onRefresh();
            }
          }) : null,
          onEndReached: function onEndReached() {
            if (typeof _onEndReached === 'function') {
              _onEndReached();
            }
          },
          onEndReachedThreshold: 0.2,
          stickySectionHeadersEnabled: false,
          ListEmptyComponent: function ListEmptyComponent() {
            if (firstIn && logListData.length === 0 && !loadFail) return null;
            return _react.default.createElement(_LHStandardEmpty.default, {
              isDark: isDark,
              contentHeight: listHeight,
              emptyPageStyle: emptyStyle,
              text: emptyText || _LHCommonFunction.LHCommonLocalizableString.common_log_no_logs,
              emptyIcon: emptyIcon,
              onClicked: loadFail && page === 1 ? function () {
                if (_this2.sectionListRef) {
                  var scrollView = _this2.sectionListRef.getScrollResponder();

                  setTimeout(function () {
                    if (scrollView && scrollView.scrollTo) scrollView.scrollTo({
                      y: 0
                    });
                  }, 300);
                }

                if (typeof onReloaded === 'function') {
                  onReloaded();
                }
              } : null
            });
          },
          renderItem: function renderItem(_ref) {
            var item = _ref.item,
                index = _ref.index,
                section = _ref.section;
            var circleColor;
            var textColor;

            if (item.logType === 'alert') {
              circleColor = isDark ? '#E68A00' : _LHCommonFunction.LHUiUtils.MiJiaOrangeColor;
              textColor = isDark ? '#E68A00' : _LHCommonFunction.LHUiUtils.MiJiaOrangeColor;
            } else if (item.logType === 'error') {
              circleColor = isDark ? '#DB4B4B' : '#F46666';
              textColor = isDark ? '#DB2C1F' : '#F43F31';
            } else {
              circleColor = isDark ? '#9A9A9A' : '#d8d8d8';
              textColor = isDark ? '#fff' : '#000';
            }

            var lineColor = isDark ? '#4A4A4A' : '#E5E5E5';
            var subContext = item.subContext ? _react.default.createElement(_LHText.default, {
              style: [styles.subContext, {
                color: isDark ? '#808080' : '#7F7F7F'
              }, item.subContextStyle],
              numberOfLines: 1
            }, item.subContext) : null;
            return _react.default.createElement(_reactNative.View, {
              style: getItemStyle(index, logListData.length)
            }, logContentComponent ? logContentComponent(item, index, section) : _react.default.createElement(_reactNative.View, {
              style: [styles.row, normalStyle ? styles.itemWrap : styles.cardItemWrap]
            }, _react.default.createElement(_LHText.default, {
              style: [styles.time, {
                color: isDark ? '#fff' : '#000',
                fontWeight: 'bold'
              }]
            }, _LHCommonFunction.LHDateUtils.DateFormat('hh:mm', item.time)), _react.default.createElement(_reactNative.View, {
              style: styles.lineWrap
            }, _react.default.createElement(_reactNative.View, {
              style: [styles.line, {
                backgroundColor: index === 0 ? 'transparent' : lineColor
              }]
            }), _react.default.createElement(_reactNative.View, {
              style: [styles.circle, {
                backgroundColor: circleColor
              }]
            }), _react.default.createElement(_reactNative.View, {
              style: [styles.lineBottom, {
                backgroundColor: index === section.data.length - 1 ? 'transparent' : lineColor
              }]
            })), _react.default.createElement(_reactNative.View, {
              style: [styles.contextValue]
            }, _react.default.createElement(_LHText.default, {
              style: [styles.context, {
                color: textColor,
                fontWeight: 'bold'
              }],
              numberOfLines: titleNumberOfLines
            }, item.context), subContext)));
          },
          renderSectionHeader: function renderSectionHeader(_ref2) {
            var section = _ref2.section;
            var secIndex = pageData.indexOf(section);
            var firstSection = secIndex === 0;

            if (normalStyle) {
              var gapElement = _react.default.createElement(_reactNative.View, {
                style: {
                  height: firstSection ? (0, _LHCommonFunction.dp)(8) : (0, _LHCommonFunction.dp)(40),
                  justifyContent: 'center'
                }
              }, firstSection ? null : _react.default.createElement(_LHSeparator.default, {
                isDark: isDark,
                style: {
                  marginHorizontal: (0, _LHCommonFunction.dp)(24)
                }
              }));

              return _react.default.createElement(_reactNative.View, {
                style: getSectionHeaderStyle(secIndex)
              }, gapElement, _react.default.createElement(_reactNative.View, {
                style: styles.sectionHeader
              }, _react.default.createElement(_LHText.default, {
                style: [styles.listTitle, {
                  color: isDark ? 'rgba(255,255,255,0.6)' : '#8C93B0',
                  fontWeight: 'bold'
                }]
              }, _LHCommonFunction.LHDateUtils.GetStandardTimeText(section.title) + ' ' + _LHCommonFunction.LHDateUtils.getWeekDate(section.title))));
            } else {
              return _react.default.createElement(_reactNative.View, {
                style: {
                  backgroundColor: _LHCommonFunction.LHUiColorUtils.colorMainLog
                }
              }, _react.default.createElement(_reactNative.View, {
                style: [styles.sectionHeader, !normalStyle ? {
                  paddingLeft: (0, _LHCommonFunction.dp)(14)
                } : null]
              }, firstSection ? null : _react.default.createElement(_LHSeparator.default, {
                style: {
                  backgroundColor: _LHCommonFunction.LHUiColorUtils.colorSeparator
                }
              }), _react.default.createElement(_LHText.default, {
                style: [styles.listTitle, !normalStyle ? {
                  marginTop: (0, _LHCommonFunction.dp)(16),
                  marginBottom: 0
                } : null]
              }, _LHCommonFunction.LHDateUtils.GetStandardTimeText(section.title))));
            }
          },
          ListHeaderComponent: ListHeaderComponent,
          ListFooterComponent: function ListFooterComponent() {
            if (!isLoading && pageOver && logListData.length > pageSize && !firstIn) {
              if (normalStyle) {
                return _react.default.createElement(_reactNative.View, {
                  style: [styles.noMoreWrap, listFooterStyle]
                }, _react.default.createElement(_LHText.default, {
                  style: [styles.noMoreText, {
                    color: isDark ? '#999' : _LHCommonFunction.LHUiUtils.MiJiaSubTitleColor
                  }]
                }, allDataHasLoadedText || _LHCommonFunction.LHCommonLocalizableString.common_log_all_data_has_been_loaded));
              } else {
                return _react.default.createElement(_reactNative.View, {
                  style: listFooterStyle
                }, _react.default.createElement(_LHSeparator.default, {
                  style: {
                    marginLeft: (0, _LHCommonFunction.dp)(14)
                  }
                }), _react.default.createElement(_reactNative.View, {
                  style: [styles.noMoreWrap]
                }, _react.default.createElement(_LHText.default, {
                  style: [styles.noMoreText, {
                    color: isDark ? '#999' : _LHCommonFunction.LHUiUtils.MiJiaSubTitleColor
                  }]
                }, allDataHasLoadedText || _LHCommonFunction.LHCommonLocalizableString.common_log_all_data_has_been_loaded)));
              }
            } else if (page !== 1 && isLoading && !loadFail) {
              return _react.default.createElement(_reactNative.View, {
                style: [styles.loadingcontainer, listFooterStyle]
              }, _react.default.createElement(_reactNative.View, {
                style: styles.loadingWrap
              }, _react.default.createElement(_reactNative.ActivityIndicator, {
                color: _LHCommonFunction.LHUiUtils.MiJiaSubTitleColor
              }), _react.default.createElement(_LHText.default, {
                style: styles.loadingText
              }, loadingText || _LHCommonFunction.LHCommonLocalizableString.common_log_loading)));
            } else if (!isLoading && pageData.length === 0) {
              return null;
            } else {
              return _react.default.createElement(_reactNative.View, {
                style: [styles.footer, listFooterStyle]
              });
            }
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ref: function ref(e) {
            _this2.sectionListRef = e;
          }
        }), _react.default.createElement(_LHLogDatePicker.default, {
          visible: showDatePicker,
          buttons: datePickerButtons,
          activeColor: datePickerActiveColor,
          onDismiss: function onDismiss() {
            if (typeof datePickerOnDismiss === 'function') datePickerOnDismiss();
          },
          selected: datePickerSelected,
          onSelected: function onSelected(res) {
            if (typeof datePickerOnSelected === 'function') datePickerOnSelected(res);
          },
          isDark: isDark
        }));
      }
    }]);
    return LHStandardLogUI;
  }(_react.default.Component);

  LHStandardLogUI.getDataIndex = function (dataList, data) {
    for (var i = 0, len = dataList.length; i < len; i += 1) {
      if (_LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', data.time) === _LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', dataList[i].title)) return i;
    }

    return -1;
  };

  LHStandardLogUI.defaultProps = {
    styleType: 0,
    refreshTintColor: undefined,
    listFooterStyle: undefined,
    titleNumberOfLines: 9999,
    hasRefreshControl: true,
    showsScrollIndicator: false,
    scrollEnabled: true,
    contentContainerStyle: {},
    getSectionHeaderStyle: function getSectionHeaderStyle() {
      return undefined;
    },
    getItemStyle: function getItemStyle() {
      return undefined;
    },
    ListHeaderComponent: function ListHeaderComponent() {
      return null;
    },
    onReloaded: function onReloaded() {},
    showDatePicker: false,
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };
  LHStandardLogUI.propTypes = {
    styleType: _propTypes.default.number,
    refreshTintColor: _propTypes.default.string,
    titleNumberOfLines: _propTypes.default.number,
    hasRefreshControl: _propTypes.default.bool,
    showsScrollIndicator: _propTypes.default.bool,
    scrollEnabled: _propTypes.default.bool,
    ListHeaderComponent: _propTypes.default.func,
    contentContainerStyle: _reactNative.ViewPropTypes.style,
    listFooterStyle: _reactNative.ViewPropTypes.style,
    getItemStyle: _propTypes.default.func,
    getSectionHeaderStyle: _propTypes.default.func,
    onReloaded: _propTypes.default.func,
    showDatePicker: _propTypes.default.bool,
    isDark: _propTypes.default.bool
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHStandardLogUI);

  exports.default = _default;
},10982,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10004,10318,10946,10847,10985,10871,10976]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHLogDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHLogDatePicker.default;
  exports.default = _default;
},10985,[14305,10988]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[11]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var styles = _reactNative.StyleSheet.create({
    style: {
      position: 'absolute',
      bottom: 0,
      marginHorizontal: 0,
      width: '100%',
      borderTopRightRadius: (0, _LHCommonFunction.dp)(20),
      borderTopLeftRadius: (0, _LHCommonFunction.dp)(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    title: {
      fontSize: (0, _LHCommonFunction.dp)(16.6),
      lineHeight: (0, _LHCommonFunction.dp)(23),
      letterSpacing: 0,
      textAlign: 'center',
      fontWeight: 'bold',
      marginTop: (0, _LHCommonFunction.dp)(25),
      marginBottom: (0, _LHCommonFunction.dp)(15),
      marginHorizontal: (0, _LHCommonFunction.dp)(10)
    },
    monthWrap: {
      marginTop: (0, _LHCommonFunction.dp)(20),
      marginBottom: (0, _LHCommonFunction.dp)(5),
      flexDirection: 'row',
      justifyContent: 'center'
    },
    month: {
      fontSize: (0, _LHCommonFunction.dp)(15),
      lineHeight: (0, _LHCommonFunction.dp)(21),
      letterSpacing: 0,
      fontWeight: 'bold'
    },
    row: {
      paddingHorizontal: (0, _LHCommonFunction.dp)(5),
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    flex: {
      flex: 1
    },
    weekText: {
      fontSize: (0, _LHCommonFunction.dp)(10),
      lineHeight: (0, _LHCommonFunction.dp)(13),
      letterSpacing: 0,
      textAlign: 'center',
      marginVertical: (0, _LHCommonFunction.dp)(15)
    },
    dayItem: {
      flex: 1,
      height: (0, _LHCommonFunction.dp)(50),
      alignItems: 'center',
      justifyContent: 'center'
    },
    daywrap: {
      width: (0, _LHCommonFunction.dp)(34),
      height: (0, _LHCommonFunction.dp)(34),
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: (0, _LHCommonFunction.dp)(17)
    },
    dayText: {
      fontSize: (0, _LHCommonFunction.dp)(15),
      lineHeight: (0, _LHCommonFunction.dp)(21),
      letterSpacing: 0,
      fontWeight: 'bold',
      textAlign: 'center'
    },
    buttonsWrap: {
      width: '100%',
      paddingHorizontal: (0, _LHCommonFunction.dp)(27),
      flexDirection: 'row',
      marginBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight + (0, _LHCommonFunction.dp)(24),
      marginTop: (0, _LHCommonFunction.dp)(16)
    },
    buttonStyle: {
      height: (0, _LHCommonFunction.dp)(46),
      borderRadius: (0, _LHCommonFunction.dp)(23),
      flex: 1
    },
    buttonTextstyle: {
      fontSize: (0, _LHCommonFunction.dp)(15),
      lineHeight: (0, _LHCommonFunction.dp)(21),
      letterSpacing: 0,
      textAlign: 'center',
      fontWeight: 'bold'
    }
  });

  var LHLogDatePicker = function (_Component) {
    (0, _inherits2.default)(LHLogDatePicker, _Component);

    function LHLogDatePicker(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHLogDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHLogDatePicker).call(this, props));

      _this.getMonthText = function () {
        var _this$state = _this.state,
            dateData = _this$state.dateData,
            swiperIndex = _this$state.swiperIndex;
        var todaySec = new Date().getTime();

        if (dateData && dateData.length > 0 && dateData[swiperIndex]) {
          var monSec = dateData[swiperIndex].days[1][0].getTime();

          var format = _LHCommonFunction.LHDateUtils.GetDateFormatter(true, false);

          if (_LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM', todaySec) !== _LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM', monSec)) {
            return _LHCommonFunction.LHDateUtils.DateFormat(format, monSec) + ' >';
          } else {
            return _LHCommonFunction.LHDateUtils.DateFormat(format, monSec);
          }
        } else {
          return '';
        }
      };

      _this.state = {
        dateData: _this.getAllMonthDays(),
        swiperIndex: 5
      };
      _this.renderedSwiper = false;
      return _this;
    }

    (0, _createClass2.default)(LHLogDatePicker, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible) this.renderedSwiper = false;

        if (newProps.visible && newProps.selected) {
          var swiperIndex = 5;
          var dateData = this.state.dateData;
          var selected = newProps.selected;
          var selectedArr = selected.split('-');
          selectedArr.pop();
          var selectMonth = selectedArr.join('-');

          for (var i = 0; i < dateData.length; i += 1) {
            var _dateData$i = dateData[i],
                year = _dateData$i.year,
                month = _dateData$i.month;

            if (selectMonth === '' + year + '-' + (month < 10 ? '0' + month : month)) {
              swiperIndex = i;
              break;
            }
          }

          this.setState({
            swiperIndex: swiperIndex
          });
        }
      }
    }, {
      key: "getAllMonthDays",
      value: function getAllMonthDays() {
        var date = new Date();
        var curYear = this.getYear(date);
        var curMonth = this.getMonth(date);
        var yearMonth = [];

        for (var i = 0; i < 6; i += 1) {
          var monthTemp = curMonth - i;
          var month = monthTemp <= 0 ? 12 + monthTemp : monthTemp;
          var year = monthTemp <= 0 ? curYear - 1 : curYear;
          yearMonth.push({
            year: year,
            month: month,
            days: this.getMonthDay(year, month - 1)
          });
        }

        return yearMonth.reverse();
      }
    }, {
      key: "getYearMonthHasDay",
      value: function getYearMonthHasDay(year) {
        var months = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        months[1] = this.isLaef(year) ? 29 : 28;
        return months;
      }
    }, {
      key: "isLaef",
      value: function isLaef(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      }
    }, {
      key: "getMonthDay",
      value: function getMonthDay(year, month) {
        var firstDayInWeek = new Date(year, month, 1).getDay();
        var result = [];

        for (var i = 0; i < firstDayInWeek; i += 1) {
          result.push('');
        }

        var lastDay = this.getYearMonthHasDay(year)[month];

        for (var j = 1; j <= lastDay; j += 1) {
          result.push(new Date(year, month, j));
        }

        var remainingDay = 7 - result.length % 7;

        if (remainingDay !== 7) {
          for (var _i = 0; _i < remainingDay; _i += 1) {
            result.push('');
          }
        }

        var days = [];

        for (var _i2 = 0, len = result.length; _i2 < len; _i2 += 7) {
          days.push(result.splice(0, 7));
        }

        return days;
      }
    }, {
      key: "getYear",
      value: function getYear(date) {
        return date.getFullYear();
      }
    }, {
      key: "getMonth",
      value: function getMonth(date) {
        return date.getMonth() + 1;
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        var onDismiss = this.props.onDismiss;
        if (typeof onDismiss === 'function') onDismiss();
        this.renderedSwiper = false;
      }
    }, {
      key: "setSwiperIndex",
      value: function setSwiperIndex(swiperIndex) {
        this.setState({
          swiperIndex: swiperIndex
        });
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props = this.props,
            buttons = _this$props.buttons,
            isDark = _this$props.isDark;
        if (!buttons || buttons.length === 0 || buttons.length > 2) return null;
        return _react.default.createElement(_reactNative.View, {
          style: styles.buttonsWrap
        }, buttons.map(function (button, index) {
          return _react.default.createElement(_LHButton.default, {
            key: 'button_' + index,
            testID: button.testID || '',
            btnText: button.text,
            style: [styles.buttonStyle, {
              backgroundColor: isDark ? '#333' : '#F5F5F5'
            }, index > 0 ? {
              marginLeft: (0, _LHCommonFunction.dp)(14)
            } : null, button.style],
            btnTextStyle: [styles.buttonTextstyle, {
              color: isDark ? '#b3b3b3' : '#4C4C4C'
            }, button.textStyle],
            pressBackgroundColor: isDark ? '#333' : '#F5F5F5',
            onPress: function onPress() {
              if (typeof button.onPress === 'function') button.onPress();
            }
          });
        }));
      }
    }, {
      key: "renderMonth",
      value: function renderMonth(month, monthIndex) {
        var _this2 = this;

        var _this$props2 = this.props,
            activeColor = _this$props2.activeColor,
            onSelected = _this$props2.onSelected,
            isDark = _this$props2.isDark;
        var defaultActiveColor = isDark ? '#25A9AF' : '#32BAC0';
        return _react.default.createElement(_reactNative.View, {
          key: 'month_' + monthIndex
        }, month.days.map(function (week, weekIndex) {
          return _react.default.createElement(_reactNative.View, {
            style: styles.row,
            key: 'week_' + weekIndex
          }, week.map(function (day, index) {
            if (day) {
              var isToday = _LHCommonFunction.LHDateUtils.isToday(day);

              var isAfter = _LHCommonFunction.LHDateUtils.isAfter(day);

              var selected = _this2.props.selected;

              var dateFormat = _LHCommonFunction.LHDateUtils.DateFormat('yyyy-MM-dd', day.getTime());

              var isSelected = selected === dateFormat;
              return _react.default.createElement(_reactNative.View, {
                key: day,
                style: styles.dayItem
              }, _react.default.createElement(_reactNative.TouchableOpacity, {
                style: [styles.daywrap, isSelected ? {
                  backgroundColor: activeColor || defaultActiveColor
                } : null],
                activeOpacity: 1,
                accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('day_' + day),
                testID: 'day_' + day,
                disabled: isAfter,
                onPress: function onPress() {
                  if (!isAfter && typeof onSelected === 'function') {
                    onSelected(dateFormat);
                  }
                }
              }, _react.default.createElement(_LHText.default, {
                style: [styles.dayText, {
                  color: isDark ? '#ccc' : '#333'
                }, isToday ? {
                  color: activeColor || defaultActiveColor
                } : null, isAfter ? {
                  color: isDark ? '#666' : '#999'
                } : null, isSelected ? {
                  color: '#fff'
                } : null]
              }, day.getDate())));
            } else {
              return _react.default.createElement(_reactNative.View, {
                key: '' + week + index,
                style: styles.dayItem
              });
            }
          }));
        }));
      }
    }, {
      key: "getWeekText",
      value: function getWeekText() {
        return [_LHCommonFunction.LHCommonLocalizableString.common_week_sun_short, _LHCommonFunction.LHCommonLocalizableString.common_week_mon_short, _LHCommonFunction.LHCommonLocalizableString.common_week_tue_short, _LHCommonFunction.LHCommonLocalizableString.common_week_wed_short, _LHCommonFunction.LHCommonLocalizableString.common_week_thu_short, _LHCommonFunction.LHCommonLocalizableString.common_week_fri_short, _LHCommonFunction.LHCommonLocalizableString.common_week_sat_short];
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props3 = this.props,
            visible = _this$props3.visible,
            isDark = _this$props3.isDark;
        var _this$state2 = this.state,
            dateData = _this$state2.dateData,
            swiperIndex = _this$state2.swiperIndex;
        return _react.default.createElement(_Dialog.AbstractDialog, {
          style: [styles.style, {
            backgroundColor: isDark ? '#1a1a1a' : '#fff'
          }],
          visible: visible,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss() {
            _this3.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHText.default, {
          style: [styles.title, {
            color: isDark ? '#fff' : '#000'
          }]
        }, _LHCommonFunction.LHCommonLocalizableString.common_date_picker), _react.default.createElement(_reactNative.View, {
          style: styles.monthWrap
        }, _react.default.createElement(_LHText.default, {
          style: [styles.month, {
            color: isDark ? '#ccc' : '#333'
          }],
          onPress: function onPress() {
            var lastIndex = dateData.length - 1;

            if (_this3.swiper && swiperIndex !== lastIndex) {
              _this3.swiper.scrollBy(lastIndex - swiperIndex);
            }
          }
        }, this.getMonthText())), _react.default.createElement(_reactNative.View, {
          style: styles.row
        }, this.getWeekText().map(function (item) {
          return _react.default.createElement(_reactNative.View, {
            style: styles.flex,
            key: item
          }, _react.default.createElement(_LHText.default, {
            numberOfLines: 1,
            style: [styles.weekText, {
              color: isDark ? '#666' : '#999'
            }]
          }, item));
        })), dateData.length > 0 ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeSwiper.default, {
          ref: function ref(_ref) {
            _this3.swiper = _ref;
          },
          index: swiperIndex,
          style: {
            height: (0, _LHCommonFunction.dp)(300)
          },
          showsPagination: false,
          autoplay: false,
          loop: false,
          onIndexChanged: function onIndexChanged(index) {
            _this3.setSwiperIndex(index);
          }
        }, dateData.map(function (month, index) {
          var dateKey = 'month_' + month + '_' + index;
          var currentIndex = _this3.state.swiperIndex;

          if (Math.abs(currentIndex - index) < 2 || _this3.renderedSwiper) {
            _this3.renderedSwiper = true;
            return _this3.renderMonth(month, index);
          } else {
            return _react.default.createElement(_reactNative.View, {
              key: dateKey
            });
          }
        }))) : null, this.renderButton()));
      }
    }]);
    return LHLogDatePicker;
  }(_react.Component);

  LHLogDatePicker.defaultProps = {
    visible: false,
    selected: ''
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHLogDatePicker);

  exports.default = _default;
},10988,[14308,14305,14320,14323,14371,14377,14386,10297,10033,13663,10755,10004,10871,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHMessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHMessageDialog.default;
  exports.default = _default;
},10991,[14305,10994]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var reactIs = _$$_REQUIRE(_dependencyMap[0]);

  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
  TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

  function getStatics(component) {
    if (reactIs.isMemo(component)) {
      return MEMO_STATICS;
    }

    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
  }

  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }
    }

    return targetComponent;
  }

  module.exports = hoistNonReactStatics;
},10993,[10289]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var styles = _reactNative.StyleSheet.create({
    dialogStyle: {
      position: 'absolute',
      bottom: 0,
      marginHorizontal: 0,
      width: '100%',
      borderTopRightRadius: (0, _LHCommonFunction.dp)(20),
      borderTopLeftRadius: (0, _LHCommonFunction.dp)(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      paddingBottom: (0, _LHCommonFunction.dp)(24) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      paddingTop: (0, _LHCommonFunction.dp)(20)
    },
    title: {
      fontSize: (0, _LHCommonFunction.dp)(16.6),
      lineHeight: (0, _LHCommonFunction.dp)(20),
      letterSpacing: 0,
      textAlign: 'center',
      fontWeight: 'bold',
      marginTop: (0, _LHCommonFunction.dp)(5),
      marginHorizontal: (0, _LHCommonFunction.dp)(10),
      marginBottom: (0, _LHCommonFunction.dp)(15)
    },
    message: {
      fontSize: (0, _LHCommonFunction.dp)(15.3),
      lineHeight: (0, _LHCommonFunction.dp)(19),
      letterSpacing: 0,
      textAlign: 'left'
    },
    buttonsWrap: {
      width: '100%',
      paddingHorizontal: (0, _LHCommonFunction.dp)(27),
      flexDirection: 'row',
      marginTop: (0, _LHCommonFunction.dp)(20)
    },
    buttonTextstyle: {
      color: '#4C4C4C',
      fontSize: (0, _LHCommonFunction.dp)(15),
      lineHeight: (0, _LHCommonFunction.dp)(21),
      letterSpacing: 0,
      textAlign: 'center',
      fontWeight: '900'
    }
  });

  var LHMessageDialog = function (_React$Component) {
    (0, _inherits2.default)(LHMessageDialog, _React$Component);

    function LHMessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHMessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHMessageDialog).call(this, props, context));
      _this.state = {
        visible: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHMessageDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var visible = this.state.visible;

        if (newProps.visible !== visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "closeDialog",
      value: function closeDialog() {
        this.setState({
          visible: false
        });
        var onDismiss = this.props.onDismiss;

        if (typeof onDismiss === 'function') {
          onDismiss();
        }
      }
    }, {
      key: "renderButton",
      value: function renderButton(buttons) {
        var isDark = this.props.isDark;
        if (!buttons || buttons.length === 0 || buttons.length > 2) return null;
        return _react.default.createElement(_reactNative.View, {
          style: styles.buttonsWrap
        }, buttons.map(function (button, index) {
          return _react.default.createElement(_LHButton.default, {
            key: 'button_' + index,
            testID: button.testID || '',
            btnText: button.text,
            style: [{
              flex: 1,
              backgroundColor: isDark ? '#333' : '#F5F5F5'
            }, index > 0 ? {
              marginLeft: (0, _LHCommonFunction.dp)(14)
            } : null],
            btnTextStyle: [{
              color: isDark ? '#fff' : '#4C4C4C'
            }, button.style],
            pressBackgroundColor: isDark ? '#333' : '#F5F5F5',
            onPress: function onPress() {
              if (typeof button.callback === 'function') button.callback();
            }
          });
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            closeAfterBtnClick = _this$props.closeAfterBtnClick,
            buttons = _this$props.buttons,
            title = _this$props.title,
            message = _this$props.message,
            titleStyle = _this$props.titleStyle,
            messageStyle = _this$props.messageStyle,
            isDark = _this$props.isDark,
            canDismiss = _this$props.canDismiss;
        var visible = this.state.visible;
        var btns = null;

        if (buttons && buttons.length > 0) {
          btns = _LHCommonFunction.CommonMethod.DeepClone(buttons, []);

          var _loop = function _loop(i, len) {
            if (closeAfterBtnClick) {
              btns[i].callback = function () {
                _this2.closeDialog();

                if (typeof buttons[i].callback === 'function') buttons[i].callback();
              };
            }

            btns[i].style = (0, _extends2.default)({}, _reactNative.StyleSheet.flatten(btns[i].style));
          };

          for (var i = 0, len = btns.length; i < len; i += 1) {
            _loop(i, len);
          }
        }

        return _react.default.createElement(_Dialog.AbstractDialog, {
          ref: function ref(Dialog) {
            _this2.Dialog = Dialog;
          },
          style: [styles.dialogStyle, {
            backgroundColor: isDark ? '#1a1a1a' : '#fff'
          }],
          visible: visible,
          showTitle: false,
          onDismiss: function onDismiss() {
            _this2.closeDialog();
          },
          showButton: false,
          canDismiss: canDismiss
        }, _react.default.createElement(_reactNative.View, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHMessageDialog'),
          testID: "LHMessageDialog"
        }, title ? _react.default.createElement(_LHText.default, {
          style: [styles.title, {
            color: isDark ? '#e6e6e6' : '#000'
          }, titleStyle]
        }, title) : null, message ? _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: (0, _LHCommonFunction.dp)(8),
            marginHorizontal: (0, _LHCommonFunction.dp)(40),
            marginBottom: (0, _LHCommonFunction.dp)(16),
            alignItems: 'center'
          }
        }, _react.default.createElement(_LHText.default, {
          style: [styles.message, {
            color: isDark ? '#999' : '#666'
          }, messageStyle]
        }, message)) : null, this.renderButton(btns)));
      }
    }]);
    return LHMessageDialog;
  }(_react.default.Component);

  LHMessageDialog.defaultProps = {
    closeAfterBtnClick: true,
    canDismiss: false
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHMessageDialog);

  exports.default = _default;
},10994,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10755,10004,10871,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var marginBottomDis = _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight || 0;

  var styles = _reactNative.StyleSheet.create({
    modal: {
      flexDirection: 'column',
      backgroundColor: 'rgba(0,0,0,0.4)',
      flex: 1,
      justifyContent: 'flex-end',
      alignItems: 'center'
    },
    wrapper: {
      alignItems: 'center',
      width: width,
      flexDirection: 'column',
      justifyContent: 'center',
      marginBottom: 0,
      backgroundColor: '#FFFFFF',
      borderTopRightRadius: _LHCommonFunction.LHUiUtils.GetPx(20),
      borderTopLeftRadius: _LHCommonFunction.LHUiUtils.GetPx(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(24) + marginBottomDis,
      paddingTop: _LHCommonFunction.LHUiUtils.GetPx(25)
    },
    cancelWrapper: {
      width: '100%',
      flex: 1
    },
    title: {
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(24),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16.6),
      color: '#000000',
      textAlign: 'center',
      fontWeight: 'bold'
    },
    message: (0, _objectSpread2.default)({
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(29),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(23),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(27),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      color: '#666666',
      textAlign: 'left',
      textAlignVertical: 'center'
    }, _reactNative.Platform.select({
      ios: {
        fontFamily: 'PingFangSC-Regular'
      },
      android: {
        fontFamily: 'MI-LANTING_GB-OUTSIDE-YS'
      }
    })),
    btnWrapper: {
      width: '100%',
      flexDirection: 'column',
      justifyContent: 'center'
    },
    btnBox: {
      width: '100%',
      height: _LHCommonFunction.LHUiUtils.GetPx(54),
      justifyContent: 'center',
      alignItems: 'center'
    },
    rowWrapper: {
      paddingLeft: _LHCommonFunction.LHUiUtils.GetPx(30),
      width: '100%',
      paddingTop: _LHCommonFunction.LHUiUtils.GetPx(17),
      paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(17),
      flexDirection: 'row',
      alignItems: 'center'
    },
    btnText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.3),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      color: '#000000',
      textAlign: 'left',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    img: {
      tintColor: '#03ace6',
      position: 'absolute',
      left: _LHCommonFunction.LHUiUtils.GetPx(18),
      marginTop: 'auto',
      marginBottom: 'auto',
      width: _LHCommonFunction.LHUiUtils.GetPx(8),
      height: _LHCommonFunction.LHUiUtils.GetPx(10)
    },
    btnStyle: {
      width: width - _LHCommonFunction.LHUiUtils.GetPx(54),
      height: _LHCommonFunction.LHUiUtils.GetPx(46),
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(27),
      backgroundColor: '#F5F5F5',
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(23)
    }
  });

  var CustomSingleChooseDialog = function (_React$PureComponent) {
    (0, _inherits2.default)(CustomSingleChooseDialog, _React$PureComponent);

    function CustomSingleChooseDialog(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CustomSingleChooseDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CustomSingleChooseDialog).call(this, props));
      _this.state = {
        showModal: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(CustomSingleChooseDialog, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var visible = this.props.visible;

        if (nextProps.visible !== visible) {
          this.setState({
            showModal: nextProps.visible
          });
        }
      }
    }, {
      key: "selectItem",
      value: function selectItem(_ref) {
        var item = _ref.item,
            position = _ref.position;
        var _this$props = this.props,
            onDismiss = _this$props.onDismiss,
            onCheck = _this$props.onCheck,
            onConfirm = _this$props.onConfirm;
        setTimeout(function () {
          if (onDismiss) {
            onDismiss();
          }

          if (onCheck) {
            onCheck(position);
          }

          if (onConfirm) {
            onConfirm({
              item: item,
              position: position
            });
          }
        }, 100);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            dataSource = _this$props2.dataSource,
            onDismiss = _this$props2.onDismiss,
            cancelable = _this$props2.cancelable,
            title = _this$props2.title,
            titleStyle = _this$props2.titleStyle,
            showType = _this$props2.showType,
            cancel = _this$props2.cancel,
            checkedItem = _this$props2.checkedItem;
        var showModal = this.state.showModal;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: "none",
          transparent: true,
          visible: showModal,
          onRequestClose: function onRequestClose() {
            if (onDismiss) {
              onDismiss();
            }
          },
          onShow: function onShow() {}
        }, _react.default.createElement(_reactNative.View, {
          style: styles.modal
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.cancelWrapper,
          onPress: function onPress() {
            if (cancelable) {
              onDismiss();
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, title && _react.default.createElement(_reactNative.Text, {
          style: [styles.title, titleStyle],
          numberOfLines: 1,
          ellipsizeMode: "tail"
        }, title), _react.default.createElement(_reactNative.View, {
          style: [styles.btnWrapper]
        }, function () {
          var btnContent = [];
          dataSource && dataSource.length > 0 && dataSource.forEach(function (item, position) {
            btnContent.push(_react.default.createElement(_reactNative.TouchableHighlight, {
              underlayColor: _LHCommonFunction.LHUiUtils.MiJiaCellSelBgColor,
              onPress: function onPress() {
                _this2.selectItem({
                  item: item,
                  position: position
                });
              },
              key: 'btnTouch' + position.toString(),
              style: styles.btnBox
            }, _react.default.createElement(_reactNative.View, {
              style: styles.rowWrapper
            }, showType === 2 && (checkedItem !== '' ? checkedItem === item : position === 0) && _react.default.createElement(_reactNative.Image, {
              style: styles.img,
              resizeMode: "contain",
              source: _$$_REQUIRE(_dependencyMap[11])
            }), _react.default.createElement(_reactNative.Text, {
              adjustsFontSizeToFit: false,
              numberOfLines: 2,
              ellipsizeMode: "tail",
              allowFontScaling: false,
              style: [styles.btnText]
            }, item))));
          });

          if (showType === 1) {
            btnContent.push(_react.default.createElement(_reactNative.TouchableHighlight, {
              underlayColor: _LHCommonFunction.LHUiUtils.MiJiaCellSelBgColor,
              onPress: function onPress() {
                onDismiss();
              },
              style: [styles.btnBox, {
                marginTop: _LHCommonFunction.LHUiUtils.GetPx(16)
              }, styles.btnStyle],
              key: "btnTouch10"
            }, _react.default.createElement(_reactNative.Text, {
              adjustsFontSizeToFit: false,
              allowFontScaling: false,
              style: {
                fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
                fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.3),
                color: '#4C4C4C',
                textAlign: 'center',
                fontWeight: 'bold'
              }
            }, cancel)));
          }

          return btnContent;
        }()))));
      }
    }]);
    return CustomSingleChooseDialog;
  }(_react.default.PureComponent);

  exports.default = CustomSingleChooseDialog;
  CustomSingleChooseDialog.propTypes = {
    visible: _propTypes.default.bool.isRequired,
    title: _propTypes.default.string,
    cancelable: _propTypes.default.bool,
    cancel: _propTypes.default.string,
    showType: _propTypes.default.number,
    titleStyle: _propTypes.default.object,
    dataSource: _propTypes.default.array,
    onDismiss: _propTypes.default.func,
    onConfirm: _propTypes.default.func,
    onCheck: _propTypes.default.func,
    checkedItem: _propTypes.default.any
  };
  CustomSingleChooseDialog.defaultProps = {
    visible: false,
    showType: 1,
    cancel: _LHCommonFunction.LHCommonLocalizableString.common_cancel,
    checkedItem: '',
    cancelable: false
  };
},10997,[14305,14320,14323,14371,14377,14386,14314,10297,10033,10318,10004,10643]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var marginBottomDis = _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight || 0;

  var styles = _reactNative.StyleSheet.create({
    modal: {
      flexDirection: 'column',
      backgroundColor: 'rgba(0,0,0,0.4)',
      flex: 1,
      justifyContent: 'flex-end',
      alignItems: 'center'
    },
    wrapper: {
      alignItems: 'center',
      width: width,
      flexDirection: 'column',
      justifyContent: 'center',
      marginBottom: 0,
      backgroundColor: '#FFFFFF',
      borderTopRightRadius: _LHCommonFunction.LHUiUtils.GetPx(20),
      borderTopLeftRadius: _LHCommonFunction.LHUiUtils.GetPx(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(24) + marginBottomDis,
      paddingTop: _LHCommonFunction.LHUiUtils.GetPx(28)
    },
    cancelWrapper: {
      width: '100%',
      flex: 1
    },
    title: {
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(16.6),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(23),
      color: '#000000',
      textAlign: 'center',
      fontWeight: 'bold'
    },
    message: {
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(40),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(28),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.3),
      color: '#666666',
      textAlign: 'left',
      textAlignVertical: 'center',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily
    },
    btnWrapper: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      width: width - _LHCommonFunction.LHUiUtils.GetPx(54),
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(27)
    },
    btnBox: {
      width: _LHCommonFunction.LHUiUtils.GetPx(146),
      height: _LHCommonFunction.LHUiUtils.GetPx(46),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(23),
      backgroundColor: '#F5F5F5',
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.3),
      color: '#4C4C4C',
      textAlign: 'center',
      fontFamily: _LHCommonFunction.LHUiUtils.DefaultFontFamily,
      fontWeight: 'bold'
    }
  });

  var CustomMessageDialog = function (_React$PureComponent) {
    (0, _inherits2.default)(CustomMessageDialog, _React$PureComponent);

    function CustomMessageDialog(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CustomMessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CustomMessageDialog).call(this, props));
      _this.state = {
        showModal: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(CustomMessageDialog, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var visible = this.props.visible;

        if (nextProps.visible !== visible) {
          this.setState({
            showModal: nextProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            btns = _this$props.btns,
            onDismiss = _this$props.onDismiss,
            cancelable = _this$props.cancelable,
            title = _this$props.title,
            titleStyle = _this$props.titleStyle,
            contentStyle = _this$props.contentStyle,
            message = _this$props.message,
            _this$props$canReques = _this$props.canRequestClose,
            canRequestClose = _this$props$canReques === undefined ? true : _this$props$canReques;
        var showModal = this.state.showModal;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: "none",
          transparent: true,
          visible: showModal,
          onRequestClose: function onRequestClose() {
            if (canRequestClose && onDismiss) {
              onDismiss();
            }
          },
          onShow: function onShow() {}
        }, _react.default.createElement(_reactNative.View, {
          style: styles.modal
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.cancelWrapper,
          onPress: function onPress() {
            if (cancelable) {
              onDismiss();
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: styles.wrapper
        }, title && _react.default.createElement(_reactNative.Text, {
          style: [styles.title, titleStyle],
          numberOfLines: 1,
          ellipsizeMode: "tail"
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, contentStyle]
        }, message), _react.default.createElement(_reactNative.View, {
          style: [styles.btnWrapper]
        }, function () {
          var btnContent = [];
          btns.forEach(function (btn, index) {
            btnContent.push(_react.default.createElement(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                if (onDismiss) {
                  onDismiss();
                }

                if (btn.callback) {
                  btn.callback();
                }
              },
              key: 'btnTouch' + index.toString(),
              style: [styles.btnBox, {
                marginLeft: index !== 0 ? _LHCommonFunction.LHUiUtils.GetPx(14) : 0
              }]
            }, _react.default.createElement(_reactNative.Text, {
              adjustsFontSizeToFit: false,
              numberOfLines: 1,
              ellipsizeMode: "tail",
              allowFontScaling: false,
              style: [styles.btnText, {
                color: index !== 0 ? '#0097FF' : '#4C4C4C'
              }, btn.textStyles]
            }, btn.text)));
          });
          return btnContent;
        }()))));
      }
    }]);
    return CustomMessageDialog;
  }(_react.default.PureComponent);

  exports.default = CustomMessageDialog;
  CustomMessageDialog.propTypes = {
    visible: _propTypes.default.bool.isRequired,
    title: _propTypes.default.string,
    message: _propTypes.default.string.isRequired,
    cancelable: _propTypes.default.bool,
    titleStyle: _propTypes.default.object,
    contentStyle: _propTypes.default.object,
    btns: _propTypes.default.array,
    onDismiss: _propTypes.default.func
  };
  CustomMessageDialog.defaultProps = {
    message: '米家门锁',
    visible: false,
    cancelable: true,
    btns: [{
      text: '知道了',
      callback: function callback() {},
      textStyles: {}
    }, {
      text: '确定',
      callback: function callback() {},
      textStyles: {
        color: '#4C4C4C'
      }
    }]
  };
},11000,[14305,14320,14323,14371,14377,14386,10297,10033,10318,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHAbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));
      _this.state = {
        visible: _this.props.visible,
        rotateAnim: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.visible) {
          this.startRotate();
        }
      }
    }, {
      key: "startRotate",
      value: function startRotate() {
        this.state.rotateAnim.stopAnimation();
        this.rotateAnimIns = _reactNative.Animated.timing(this.state.rotateAnim, {
          toValue: 1,
          duration: 1000,
          easing: _reactNative.Easing.linear,
          useNativeDriver: true
        });

        _reactNative.Animated.loop(this.rotateAnimIns, -1).start();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            timeout = _this$props.timeout,
            isDark = _this$props.isDark;

        if (timeout && typeof parseInt(timeout) === "number") {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else {
            if (!this.timer) {
              var timerid = setTimeout(function () {
                _this2.setState({
                  visible: false
                });

                _this2.props.onDismiss && _this2.props.onDismiss();
              }, parseInt(timeout));
              this.timer = timerid;
            }
          }
        }

        return _react.default.createElement(_LHAbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          canDismiss: false,
          showButton: false,
          style: [styles.dialogStyle, {
            backgroundColor: isDark ? '#1a1a1a' : '#fff'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.indicatorWrap
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: _LHCommonFunction.LHUiColorUtils.isDark ? _$$_REQUIRE(_dependencyMap[12]) : _$$_REQUIRE(_dependencyMap[13]),
          style: [{
            width: (0, _LHCommonFunction.dp)(20),
            height: (0, _LHCommonFunction.dp)(20)
          }, {
            transform: [{
              rotate: this.state.rotateAnim.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }]
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageWrap
        }, _react.default.createElement(_LHText.default, {
          style: [styles.message, {
            color: isDark ? '#b3b3b3' : '#4C4C4C'
          }]
        }, this.props.message || ''))));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.timer = null;
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  exports.default = LoadingDialog;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    onDismiss: _propTypes.default.func
  };

  var styles = _reactNative.StyleSheet.create({
    dialogStyle: {
      position: 'absolute',
      bottom: 0,
      marginHorizontal: 0,
      width: '100%',
      paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    container: {
      flexDirection: 'row',
      paddingHorizontal: (0, _LHCommonFunction.dp)(30),
      paddingVertical: (0, _LHCommonFunction.dp)(36),
      borderTopRightRadius: (0, _LHCommonFunction.dp)(20),
      borderTopLeftRadius: (0, _LHCommonFunction.dp)(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      alignItems: 'center'
    },
    indicatorWrap: {
      height: (0, _LHCommonFunction.dp)(20),
      width: (0, _LHCommonFunction.dp)(20)
    },
    indicator: {
      position: 'absolute',
      left: 0,
      height: (0, _LHCommonFunction.dp)(20),
      width: (0, _LHCommonFunction.dp)(20)
    },
    messageWrap: {
      marginLeft: (0, _LHCommonFunction.dp)(15),
      flex: 1
    },
    message: {
      fontSize: (0, _LHCommonFunction.dp)(15.3),
      lineHeight: (0, _LHCommonFunction.dp)(19)
    }
  });
},11003,[14305,14320,14323,14371,14377,14386,10318,10297,10033,11006,10004,10871,11009,11012]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _miot = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var LHAbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(LHAbstractDialog, _React$Component);

    function LHAbstractDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHAbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHAbstractDialog).call(this, props, context));
      _this.state = {
        visible: _this.props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(LHAbstractDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 6
        } : {};
        var language = _miot.Host.locale.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.titleContainer, height]
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: this.props.titleLines || titleLines,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 15,
            fontWeight: 'bold',
            color: '#000'
          }, marginBottom, fontFamily, this.props.titleStyle || {}]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: _resources.Styles.dialog.subtitle
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;
        if (!(buttons instanceof Array)) return null;
        if (buttons.length === 1) return this.renderOneButton(buttons);
        if (buttons.length === 2) return this.renderTwoButtons(buttons);else {
          return null;
        }
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.buttons
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          style: [_resources.Styles.dialog.button, {
            borderBottomLeftRadius: _resources.Styles.dialog.modal.borderRadius
          }],
          onPress: callback,
          underlayColor: underlayColor
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, button0.style]
        }, button0.text || _resources.strings.ok)));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.buttons
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          style: [_resources.Styles.dialog.button, {
            borderBottomLeftRadius: _resources.Styles.dialog.modal.borderRadius
          }],
          onPress: callback0,
          underlayColor: underlayColor
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, button0.style]
        }, button0.text || _resources.strings.cancel)), _react.default.createElement(_Separator.default, {
          type: "column",
          style: {
            height: _resources.Styles.dialog.buttons.height
          }
        }), _react.default.createElement(_reactNative.TouchableHighlight, {
          style: [_resources.Styles.dialog.button, {
            borderBottomRightRadius: _resources.Styles.dialog.modal.borderRadius
          }],
          onPress: callback1,
          underlayColor: underlayColor
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: _resources.Styles.common.MHGreen
          }, button1.style]
        }, button1.text || _resources.strings.ok)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.background
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, this.props.style]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }]);
    return LHAbstractDialog;
  }(_react.default.Component);

  exports.default = LHAbstractDialog;
  LHAbstractDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    showTitle: _propTypes.default.bool,
    showSubtitle: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    showButton: _propTypes.default.bool,
    onDismiss: _propTypes.default.func
  };
  LHAbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    canDismiss: true,
    buttons: [{
      text: _resources.strings.cancel
    }, {
      text: _resources.strings.ok,
      style: {
        color: _resources.Styles.common.MHGreen
      }
    }],
    showButton: true
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: _resources.Styles.dialog.modal.width,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    }
  });
},11006,[14305,14320,14323,14371,14377,14386,10074,10318,10297,10033,10332,10077]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/dialog",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "3074fa9188ff0eddc2ad4da232032e9d",
    "name": "lumi_icon_loading_dark",
    "type": "png"
  });
},11009,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources/dialog",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "4b9208b0cdfb717b3f71490b4ad867fc",
    "name": "lumi_icon_loading",
    "type": "png"
  });
},11012,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSubDevicesListPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSubDevicesListPage.default;
  exports.default = _default;
},11015,[14305,11018]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[11]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHSubDeviceListStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHStandardEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHSwipeoutButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _LHBottomButtonGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _LHStandardListSwipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LHAlarmConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  function LHSubDeviceModel(device) {
    var pid = device.type,
        did = device.deviceID,
        model = device.model,
        iconURL = device.iconURL,
        title = device.name,
        isOnline = device.isOnline;
    return {
      pid: pid,
      did: did,
      model: model,
      iconURL: iconURL,
      title: title,
      subTitle: isOnline ? '' : _LHCommonFunction.LHCommonLocalizableString.sub_device_list_device_offline,
      selected: false
    };
  }

  var cacheKey = 'LHSubDeviceListKey';
  var Instance;

  var isShared = _LHCommonFunction.LHDeviceAuthorityUtils.isShared();

  var LHSubDevicesListPage = function (_React$Component) {
    (0, _inherits2.default)(LHSubDevicesListPage, _React$Component);
    (0, _createClass2.default)(LHSubDevicesListPage, [{
      key: "renameDevice",
      value: function renameDevice(device, _onSuccess, onFail) {
        var navigation = this.props.navigation;
        var pageType = navigation.getParam('pageType');

        _LHCommonFunction.LHFunctionDialogUtils.RenameDeviceInputDialogShow({
          title: _LHCommonFunction.LHCommonLocalizableString.common_button_changename,
          defaultValue: device.title,
          confirmStyle: {
            color: pageType === 'hub' ? '#0289FF' : '#01ACFF'
          },
          onSuccess: function onSuccess(newName) {
            _LHCommonFunction.LHMiServer.ChangeDeviceName(newName, device.did, function () {
              if (typeof _onSuccess === 'function') _onSuccess(newName);
            }, function (err) {
              _LHCommonFunction.LHToastUtils.showOperateFailedToast();

              if (typeof onFail === 'function') onFail(err);
            });
          }
        });
      }
    }], [{
      key: "deleteDevices",
      value: function deleteDevices(devices, onSuccess, onFail) {
        var _this2 = this;

        if (devices.length === 0) return;
        var message = devices.length === 1 ? _LHCommonFunction.LHCommonLocalizableString.common_setting_device_delete_confirm : _LHCommonFunction.LHCommonLocalizableString.sub_device_list_delete_multi_device.replace('{XX}', devices.length);

        _LHCommonFunction.LHDialogUtils.MessageDialogShow({
          message: message,
          confirm: _LHCommonFunction.LHCommonLocalizableString.common_ok,
          cancel: _LHCommonFunction.LHCommonLocalizableString.common_cancel,
          confirmStyle: {
            color: _LHCommonFunction.LHUiUtils.MiJiaBlue
          },
          onConfirm: function onConfirm() {
            setTimeout(function () {
              var deleteDevicesData = [];

              for (var i = 0, len = devices.length; i < len; i += 1) {
                deleteDevicesData.push({
                  did: devices[i].did,
                  pid: devices[i].pid
                });
              }

              _LHCommonFunction.LHDialogUtils.LoadingDialogShow({
                title: _LHCommonFunction.LHCommonLocalizableString.common_tips_setting
              });

              var time = new Date().getTime;

              _LHCommonFunction.LHMiServer.DeleteDevices(deleteDevicesData, function () {
                _this2.hideDialog(time);

                _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_delete_succeed);

                if (typeof onSuccess === 'function') onSuccess();
              }, function () {
                _this2.hideDialog(time);

                _LHCommonFunction.LHToastUtils.showOperateFailedToast();

                if (typeof onFail === 'function') onFail();
              });
            }, 500);
          }
        });
      }
    }, {
      key: "hideDialog",
      value: function hideDialog(time) {
        var delay = new Date().getTime() - time;
        var delayTime = delay > 200 ? 0 : 200 - delay;

        _LHCommonFunction.LHDialogUtils.LoadingDialogHide(delayTime);
      }
    }, {
      key: "openZigbeeConnectDeviceList",
      value: function openZigbeeConnectDeviceList() {
        _miot.Host.ui.openZigbeeConnectDeviceList(_miot.Device.did);
      }
    }]);

    function LHSubDevicesListPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSubDevicesListPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSubDevicesListPage).call(this, props, context));
      var deviceIconSource = null;

      if (_miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelMijiaMultiModeHub()) {
        deviceIconSource = _LHCommonIcon.default.deviceIcon.lumiGatewaymgl03;
      } else if (_miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubAqHM01() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubAqHM02() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubAqHM03()) {
        deviceIconSource = _LHCommonIcon.default.deviceIcon.lumiAqaraLinuxHub;
      } else if (_miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubLmUK01() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubMiEU01() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubMiTW01() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelAqaraHubMiHK01() || _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelGatewayV3()) {
        deviceIconSource = _LHCommonIcon.default.deviceIcon.lumiMijiaLinuxHub;
      }

      _this.deviceIconSource = deviceIconSource;
      _this.state = {
        devicesList: [],
        selfIconUrl: '',
        isEditStatus: false,
        isLoading: false,
        renameBtnWidth: 0,
        deleteBtnWidth: 0
      };
      var navigation = _this.props.navigation;
      navigation.setParams({
        isEditStatus: false,
        selectedCount: 0
      });
      Instance = (0, _assertThisInitialized2.default)(_this);
      _this.haveGotPageData = false;
      return _this;
    }

    (0, _createClass2.default)(LHSubDevicesListPage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var navigation = this.props.navigation;
        if (!navigation.isFocused()) return;
        this.loadLogDataFromCache();
        var subDeviceList = navigation.getParam('subDeviceList');
        this.getSubDevices(subDeviceList === null);
        this.getSelfIconUrl();
        this.addViewWillAppearListener();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.removeViewWillAppearListener();
        this.clearSetLoadingFalseTimeoutId();
      }
    }, {
      key: "addViewWillAppearListener",
      value: function addViewWillAppearListener() {
        var _this3 = this;

        this.packageViewWillAppearListener = _miot.PackageEvent.packageViewWillAppear.addListener(function () {
          _this3.getSubDevices(false);
        });
      }
    }, {
      key: "removeViewWillAppearListener",
      value: function removeViewWillAppearListener() {
        if (this.packageViewWillAppearListener) {
          this.packageViewWillAppearListener.remove();
          this.packageViewWillAppearListener = null;
        }
      }
    }, {
      key: "getSelfIconUrl",
      value: function getSelfIconUrl() {
        var _this4 = this;

        if (this.deviceIconSource === null) {
          _LHCommonFunction.LHMiServer.LoadRealDeviceConfig(_miot.Device.model, function (config) {
            _this4.setState({
              selfIconUrl: config.deviceIconURL
            });
          }, function () {});
        }
      }
    }, {
      key: "getSubDevices",
      value: function getSubDevices() {
        var _this5 = this;

        var isNeedShowRefreshControl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        if (isNeedShowRefreshControl) {
          this.setState({
            isLoading: true
          });
        }

        var fetchSubDevices = function fetchSubDevices() {
          _LHCommonFunction.LHMiServer.GetSubDevices(function (devices) {
            _this5.refreshDeviceList(devices);
          }, function () {
            _this5.setLoadingFalse();
          });
        };

        fetchSubDevices();

        _miot.Host.ui.refreshDeviceList().then(function () {
          fetchSubDevices();
        }).catch(function () {
          fetchSubDevices();
        });
      }
    }, {
      key: "refreshDeviceList",
      value: function refreshDeviceList(devices) {
        this.haveGotPageData = true;
        var newDevices = [];

        if (devices.length !== 0) {
          for (var i = 0, len = devices.length; i < len; i += 1) {
            newDevices.push(LHSubDeviceModel(devices[i]));
          }
        }

        var navigation = this.props.navigation;
        navigation.setParams({
          selectedCount: 0
        });
        this.setState({
          devicesList: newDevices
        });
        this.setDevivceListCache(newDevices);
        this.setLoadingFalse();
      }
    }, {
      key: "setLoadingFalse",
      value: function setLoadingFalse() {
        this.setState({
          isLoading: false
        });
      }
    }, {
      key: "clearSetLoadingFalseTimeoutId",
      value: function clearSetLoadingFalseTimeoutId() {
        if (this.setLoadingFalseTimeoutId) {
          clearTimeout(this.setLoadingFalseTimeoutId);
          this.setLoadingFalseTimeoutId = null;
        }
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this6 = this;

        var _this$state = this.state,
            devicesList = _this$state.devicesList,
            selfIconUrl = _this$state.selfIconUrl,
            isEditStatus = _this$state.isEditStatus,
            renameBtnWidth = _this$state.renameBtnWidth,
            deleteBtnWidth = _this$state.deleteBtnWidth;
        var isDark = this.getIsDark();
        var source = this.deviceIconSource === null ? selfIconUrl === '' ? _LHCommonIcon.default.deviceIcon.default : {
          uri: selfIconUrl
        } : this.deviceIconSource;

        var headerImage = _react.default.createElement(_reactNative.Image, {
          style: _LHSubDeviceListStyle.default.headerImageStyle,
          source: source
        });

        var headerBottomLine = devicesList.length !== 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            marginVertical: _LHCommonFunction.LHUiUtils.GetPx(19),
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(24)
          }
        }, _react.default.createElement(_LHSeparator.default, {
          isDark: isDark,
          style: [{
            alignSelf: 'flex-end'
          }]
        })) : null;
        var subDeviceEmptyTips = _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelMijiaMultiModeHub() ? _LHCommonFunction.LHCommonLocalizableString.zigbee_sub_device_list_empty_tips : _LHCommonFunction.LHCommonLocalizableString.sub_device_list_empty_tips;

        var headerView = _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: [_LHSubDeviceListStyle.default.headerViewStyle, {
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
          }]
        }, headerImage, _react.default.createElement(_LHText.default, {
          style: _LHSubDeviceListStyle.default.headerTitleTextStyle
        }, devicesList.length === 0 ? subDeviceEmptyTips : _LHCommonFunction.LHCommonLocalizableString.zigbee_sub_device_list_header_tips)), headerBottomLine);

        var data = [];

        if (devicesList.length !== 0) {
          var _loop = function _loop(i, len) {
            var device = devicesList[i];
            data.push({
              testID: 'subDevice',
              title: device.title,
              description: device.subTitle,
              showPlaceHolderImage: true,
              iconSource: {
                uri: device.iconURL
              },
              leftIconStyle: {
                width: _LHCommonFunction.LHUiUtils.GetPx(49.3),
                height: _LHCommonFunction.LHUiUtils.GetPx(49.3)
              },
              marginLeft: _LHCommonFunction.LHUiUtils.GetPx(17.4),
              swipeoutClose: true,
              hideRightArrow: isEditStatus,
              hasCheckBox: isEditStatus,
              checkBoxActive: device.selected,
              checkBoxActiveIcon: _LHAlarmConfig.default.checkIcon,
              hideTopSeparatorLine: i === 0,
              swipeoutBtns: isEditStatus === true || isShared ? null : [{
                testID: 'swipeoutRenameButton',
                component: _react.default.createElement(_LHSwipeoutButton.default, {
                  type: "rename",
                  text: _LHCommonFunction.LHCommonLocalizableString.common_button_changename
                }),
                width: renameBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10) < _LHCommonFunction.LHUiUtils.GetPx(66) ? _LHCommonFunction.LHUiUtils.GetPx(66) : renameBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10),
                press: function press() {
                  _this6.renameDevice(device, function (newName) {
                    var newDevicesList = _this6.state.devicesList;
                    newDevicesList[i].title = newName;

                    _this6.setDevivceListCache(newDevicesList);

                    _this6.forceUpdate();
                  }, function () {});
                }
              }, {
                testID: 'swipeoutDeleteButton',
                component: _react.default.createElement(_LHSwipeoutButton.default, {
                  text: _LHCommonFunction.LHCommonLocalizableString.common_button_delete
                }),
                width: deleteBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10) < _LHCommonFunction.LHUiUtils.GetPx(66) ? _LHCommonFunction.LHUiUtils.GetPx(66) : deleteBtnWidth + _LHCommonFunction.LHUiUtils.GetPx(10),
                press: function press() {
                  LHSubDevicesListPage.deleteDevices([device], function () {
                    var newDevicesList = _this6.state.devicesList;
                    newDevicesList.splice(i, 1);

                    _this6.setDevivceListCache(newDevicesList);

                    _this6.forceUpdate();

                    _this6.changePageEditStatus(false);
                  });
                }
              }],
              press: function press() {
                if (isEditStatus === false) {
                  _miot.Host.ui.openPluginPage(device.did, 'subDevicePage', {
                    isBackToMainPage: false
                  });
                } else {
                  var newDevicesList = _this6.state.devicesList;
                  newDevicesList[i].selected = !newDevicesList[i].selected;

                  _this6.forceUpdate();

                  var selectedCount = 0;

                  for (var j = 0, devicesLen = devicesList.length; j < devicesLen; j += 1) {
                    if (devicesList[j].selected === true) {
                      selectedCount += 1;
                    }
                  }

                  var navigation = _this6.props.navigation;
                  navigation.setParams({
                    selectedCount: selectedCount
                  });
                }
              },
              minimumLongPressDuration: 500,
              longPress: function longPress() {
                if (isShared) return;

                if (isEditStatus === false) {
                  var newDevicesList = _this6.state.devicesList;
                  newDevicesList[i].selected = true;

                  _this6.changePageEditStatus(true, 1);
                }
              }
            });
          };

          for (var i = 0, len = devicesList.length; i < len; i += 1) {
            _loop(i, len);
          }
        }

        return [{
          sectionHeader: function sectionHeader() {
            return headerView;
          },
          data: data
        }];
      }
    }, {
      key: "changePageEditStatus",
      value: function changePageEditStatus(editStatus) {
        var selectedCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var devicesList = this.state.devicesList;
        var isChange = false;

        if (editStatus === false) {
          for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
            if (devicesList[i].selected === true) {
              isChange = true;
              devicesList[i].selected = false;
            }
          }
        }

        if (isChange) {
          this.forceUpdate();
        }

        this.setState({
          isEditStatus: editStatus
        });
        var navigation = this.props.navigation;
        navigation.setParams({
          isEditStatus: editStatus,
          selectedCount: selectedCount
        });
      }
    }, {
      key: "didClickBottomDeleteButton",
      value: function didClickBottomDeleteButton() {
        var _this7 = this;

        var devicesList = this.state.devicesList;
        var deleteList = [];

        for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
          if (devicesList[i].selected === true) {
            deleteList.push(devicesList[i]);
          }
        }

        if (deleteList.length > 0) {
          LHSubDevicesListPage.deleteDevices(deleteList, function () {
            var newDevice = [];

            for (var _i = 0, _devicesLen = devicesList.length; _i < _devicesLen; _i += 1) {
              if (devicesList[_i].selected === false) {
                newDevice.push(devicesList[_i]);
              }
            }

            _this7.setDevivceListCache(newDevice);

            _this7.setState({
              devicesList: newDevice
            });

            _this7.changePageEditStatus(false);
          });
        }
      }
    }, {
      key: "didClickButtomRenameButton",
      value: function didClickButtomRenameButton() {
        var _this8 = this;

        var devicesList = this.state.devicesList;
        var renameDevice = null;

        for (var i = 0, devicesLen = devicesList.length; i < devicesLen; i += 1) {
          if (devicesList[i].selected === true) {
            renameDevice = devicesList[i];
            break;
          }
        }

        this.renameDevice(renameDevice, function (newName) {
          renameDevice.title = newName;

          _this8.forceUpdate();

          _this8.changePageEditStatus(false);
        });
      }
    }, {
      key: "loadLogDataFromCache",
      value: function loadLogDataFromCache() {
        var _this9 = this;

        var navigation = this.props.navigation;
        var subDeviceList = navigation.getParam('subDeviceList');

        if (subDeviceList) {
          if (subDeviceList.length > 0) {
            this.setState({
              devicesList: subDeviceList
            });
          }
        } else {
          _LHCommonFunction.LHMiServer.GetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey(cacheKey)).then(function (res) {
            if (!res || _this9.haveGotPageData === true) return;

            _this9.setState({
              devicesList: res
            });
          });
        }
      }
    }, {
      key: "setDevivceListCache",
      value: function setDevivceListCache(data) {
        _LHCommonFunction.LHMiServer.SetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey(cacheKey), data);
      }
    }, {
      key: "getIsDark",
      value: function getIsDark() {
        var screenProps = this.props.screenProps;
        var isDark = screenProps.isDark;
        return isDark;
      }
    }, {
      key: "render",
      value: function render() {
        var _this10 = this;

        var pageData = this.getPageData();
        var isDark = this.getIsDark();
        var _this$state2 = this.state,
            isEditStatus = _this$state2.isEditStatus,
            isLoading = _this$state2.isLoading;
        var navigation = this.props.navigation;
        var selectedCount = navigation.getParam('selectedCount');
        var pageType = navigation.getParam('pageType');
        var BottomViewComponent = null;
        var BottomAddSubDeviceComponent = null;

        if (isEditStatus === true) {
          BottomViewComponent = _react.default.createElement(_LHBottomButtonGroup.default, {
            buttons: [{
              text: _LHCommonFunction.LHCommonLocalizableString.common_button_delete,
              type: 'delete',
              testID: 'bottomDeleteBtn',
              disabled: selectedCount === 0,
              onPress: function onPress() {
                _this10.didClickBottomDeleteButton();
              }
            }, {
              text: _LHCommonFunction.LHCommonLocalizableString.common_button_changename,
              type: 'rename',
              testID: 'bottomRenameBtn',
              disabled: selectedCount !== 1,
              onPress: function onPress() {
                _this10.didClickButtomRenameButton();
              }
            }]
          });
        } else {
          var backgroundColor = _LHCommonFunction.LHUiColorUtils.getColor('#35ACFF', '#359DE6');

          if (pageType === 'hub') {
            backgroundColor = _LHCommonFunction.LHUiColorUtils.getColor('#0289FF', '#007AE6');
          } else if (pageType === 'acpartner') {
            backgroundColor = _LHCommonFunction.LHUiColorUtils.getColor('#60A7FE', '#458DE6');
          } else if (pageType === 'profileHub') {
            backgroundColor = _LHCommonFunction.LHUiColorUtils.getColor('#36BEFF', '#30ABE6');
          }

          BottomAddSubDeviceComponent = isShared ? null : _react.default.createElement(_reactNative.TouchableOpacity, {
            activeOpacity: 1,
            style: [_LHSubDeviceListStyle.default.addSubDeviceViewStyle, {
              backgroundColor: backgroundColor
            }],
            onPress: function onPress() {
              LHSubDevicesListPage.openZigbeeConnectDeviceList();
            },
            accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('addIcon'),
            testID: "addIcon"
          }, _react.default.createElement(_reactNative.Image, {
            style: _LHSubDeviceListStyle.default.addSubDeviceButtonStyle,
            source: _LHCommonIcon.default.common.add.addIcon
          }));
        }

        var listViewPaddingBottom = 0;

        if (pageData.length > 0) {
          if (isEditStatus === true) {
            listViewPaddingBottom = 10;
          } else {
            listViewPaddingBottom = _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight + _LHCommonFunction.LHUiUtils.GetPx(86);
          }
        }

        return _react.default.createElement(_reactNative.View, {
          style: [_LHSubDeviceListStyle.default.listViewStyle, {
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
          }],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHSubDevicesListPage'),
          testID: "LHSubDevicesListPage"
        }, _react.default.createElement(_LHStandardListSwipeout.default, {
          isDark: isDark,
          data: pageData,
          contentContainerStyle: {
            paddingBottom: listViewPaddingBottom
          },
          stickySectionHeadersEnabled: false,
          ListEmptyComponent: _react.default.createElement(_reactNative.View, {
            pointerEvents: "none"
          }, _react.default.createElement(_LHStandardEmpty.default, {
            pointerEvents: "none",
            text: _miot.Device.model === _LHCommonFunction.LHDeviceModel.DeviceModelMijiaMultiModeHub() ? _LHCommonFunction.LHCommonLocalizableString.zigbee_sub_device_list_empty_tips : _LHCommonFunction.LHCommonLocalizableString.sub_device_list_empty_tips
          })),
          ListFooterComponent: _react.default.createElement(_reactNative.View, {
            style: _LHSubDeviceListStyle.default.footer
          }),
          refreshControl: isEditStatus ? null : _react.default.createElement(_reactNative.RefreshControl, {
            refreshing: isLoading === true && isEditStatus === false,
            onRefresh: function onRefresh() {
              _this10.getSubDevices(true);
            }
          })
        }), BottomViewComponent, BottomAddSubDeviceComponent, _react.default.createElement(_LHText.default, {
          style: [{
            position: 'absolute',
            left: 0,
            top: 0,
            opacity: 0,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12)
          }],
          onLayout: function onLayout(e) {
            _this10.setState({
              renameBtnWidth: e.nativeEvent.layout.width
            });
          }
        }, _LHCommonFunction.LHCommonLocalizableString.common_button_changename), _react.default.createElement(_LHText.default, {
          style: [{
            position: 'absolute',
            left: 0,
            top: 0,
            opacity: 0,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12)
          }],
          onLayout: function onLayout(e) {
            _this10.setState({
              deleteBtnWidth: e.nativeEvent.layout.width
            });
          }
        }, _LHCommonFunction.LHCommonLocalizableString.common_button_delete));
      }
    }]);
    return LHSubDevicesListPage;
  }(_react.default.Component);

  LHSubDevicesListPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    var isEditStatus = navigation.getParam('isEditStatus');
    var pageTitle = navigation.getParam('pageTitle');
    var props = {
      isDark: _LHCommonFunction.LHUiColorUtils.isDark
    };

    if (isEditStatus) {
      props = (0, _objectSpread2.default)({}, props, {
        title: _LHCommonFunction.LHCommonLocalizableString.sub_device_list_selected.replace('{XX}', navigation.getParam('selectedCount')),
        leftButtons: [{
          type: 'deafultCloseBtn',
          press: function press() {
            Instance.changePageEditStatus(false);
          }
        }],
        rightButtons: [{
          type: 'deafultCompleteBtn',
          press: function press() {
            Instance.changePageEditStatus(false);
          }
        }]
      });
    } else {
      props = (0, _objectSpread2.default)({}, props, {
        title: _LHCommonFunction.LHCommonLocalizableString.common_hub_zigbee_subdevice,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      });
    }

    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, props))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSubDevicesListPage);

  exports.default = _default;
},11018,[14305,14314,14320,14371,14377,14374,14323,14386,10297,10033,10074,10004,10871,11021,10847,10895,10946,10919,10883,10955,10925,11024]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[1]);

  var LHSubDeviceListStyle = _reactNative.StyleSheet.create({
    headerViewStyle: {
      width: '100%',
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    headerImageStyle: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(36),
      width: _LHCommonFunction.LHUiUtils.GetPx(100),
      height: _LHCommonFunction.LHUiUtils.GetPx(100),
      alignSelf: 'center'
    },
    headerTitleTextStyle: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(14),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(30),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      alignSelf: 'center',
      color: _LHCommonFunction.LHUiColorUtils.colorBlack,
      textAlign: 'center'
    },
    navigateButton: {
      height: _LHCommonFunction.LHUiUtils.GetPx(30),
      width: _LHCommonFunction.LHUiUtils.GetPx(30)
    },
    addSubDeviceButtonStyle: {
      width: _LHCommonFunction.LHUiUtils.GetPx(20),
      height: _LHCommonFunction.LHUiUtils.GetPx(20)
    },
    addSubDeviceViewStyle: {
      position: 'absolute',
      alignItems: 'center',
      justifyContent: 'center',
      right: _LHCommonFunction.LHUiUtils.GetPx(20),
      bottom: _LHCommonFunction.LHUiUtils.GetPx(20) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      width: _LHCommonFunction.LHUiUtils.GetPx(50),
      height: _LHCommonFunction.LHUiUtils.GetPx(50),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(25)
    },
    listViewStyle: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: '100%',
      height: '100%',
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    }
  });

  exports.default = LHSubDeviceListStyle;
},11021,[10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var LHAlarmConfig = function () {
    function LHAlarmConfig() {
      (0, _classCallCheck2.default)(this, LHAlarmConfig);
    }

    (0, _createClass2.default)(LHAlarmConfig, null, [{
      key: "supportAlarmLight",
      value: function supportAlarmLight() {
        return !_LHCommonFunction.LHDeviceModel.isAcPartner();
      }
    }]);
    return LHAlarmConfig;
  }();

  exports.default = LHAlarmConfig;
  LHAlarmConfig.armRecordListCache = _LHCommonFunction.CommonMethod.CreatCacheKey('armRecordListCache');
  LHAlarmConfig.armRingIndexCache = _LHCommonFunction.CommonMethod.CreatCacheKey('armRingIndexCache');
  LHAlarmConfig.armVolumeCache = _LHCommonFunction.CommonMethod.CreatCacheKey('armVolumeCache');
  LHAlarmConfig.armTimeCache = _LHCommonFunction.CommonMethod.CreatCacheKey('armTimeCache');
  LHAlarmConfig.armLightCache = _LHCommonFunction.CommonMethod.CreatCacheKey('armLightCache');
  LHAlarmConfig.HubMainColor = _LHCommonFunction.LHUiUtils.isDark ? '#00ABE6' : '#00BEFF';
  LHAlarmConfig.ACMainColor = '#5FA7FE';
  LHAlarmConfig.MainColor = _LHCommonFunction.LHDeviceModel.isAcPartner() ? LHAlarmConfig.ACMainColor : LHAlarmConfig.HubMainColor;
  LHAlarmConfig.selectIcon = _LHCommonFunction.LHDeviceModel.isAcPartner() ? _LHCommonIcon.default.common.selectIcon.acpartner : _LHCommonIcon.default.common.selectIcon.gateway;
  LHAlarmConfig.checkIcon = _LHCommonFunction.LHDeviceModel.isAcPartner() ? _LHCommonIcon.default.common.checkIcon.acpartner : _LHCommonIcon.default.common.checkIcon.gateway;

  LHAlarmConfig.getArmWaitTime = function () {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('get_arm_wait_time', []).then(function (res) {
      return res.result[0];
    });
  };

  LHAlarmConfig.setArmWaitTime = function (second) {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('set_arm_wait_time', [second]);
  };

  LHAlarmConfig.getAlarmTimeLen = function () {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('get_device_prop', ['lumi.0', 'alarm_time_len']).then(function (res) {
      return res.result[0];
    });
  };

  LHAlarmConfig.setAlarmTimeLen = function (time) {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('set_device_prop', {
      sid: 'lumi.0',
      alarm_time_len: Number(time)
    });
  };

  LHAlarmConfig.getLightTimeLen = function () {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('get_device_prop', ['lumi.0', 'en_alarm_light']).then(function (res) {
      return res.result[0];
    });
  };

  LHAlarmConfig.setLightTimeLen = function (time) {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('set_device_prop', {
      sid: 'lumi.0',
      en_alarm_light: Number(time)
    });
  };

  LHAlarmConfig.getAlarmVolume = function () {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('get_alarming_volume', []).then(function (res) {
      return res.result[0];
    });
  };

  LHAlarmConfig.setAlarmVolume = function (time) {
    return _LHCommonFunction.LHMiServer.SendRPCPayload('set_alarming_volume', [time]);
  };
},11024,[14305,14320,14323,10004,10895]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonBaseStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCommonBaseStyle.default;
  exports.default = _default;
},11027,[14305,11030]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[3]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height;

  var LHCommonStyles = _reactNative.StyleSheet.create({
    navigatorWithBorderBotoom: {
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
      borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderBottomColor: _LHCommonFunction.LHUiColorUtils.colorSeparator
    },
    navigatorWithoutBorderBotoom: {
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    pageGrayStyle: {
      flex: 1,
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorBackground
    },
    pageWhiteStyle: {
      flex: 1,
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    bottomBtn: {
      width: _LHCommonFunction.LHUiUtils.GetPx(66),
      height: _LHCommonFunction.LHUiUtils.GetPx(66),
      position: 'absolute',
      bottom: _LHCommonFunction.LHUiUtils.GetPx(12) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      right: _LHCommonFunction.LHUiUtils.GetPx(12)
    },
    emptyImg: {
      width: _LHCommonFunction.LHUiUtils.GetPx(138),
      height: _LHCommonFunction.LHUiUtils.GetPx(138),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(83 * (height - 44 - _LHCommonFunction.LHDeviceUtils.statusBarHeight - _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight - _LHCommonFunction.LHUiUtils.GetPx(240)) / 333),
      alignSelf: 'center'
    },
    emptyView: {
      height: height - _LHCommonFunction.LHUiUtils.TitleBarHeight - _LHCommonFunction.LHDeviceUtils.statusBarHeight,
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
    },
    emptyPageWrap: {
      height: height - _LHCommonFunction.LHUiUtils.TitleBarHeight - _LHCommonFunction.LHDeviceUtils.statusBarHeight,
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite
    },
    sliderThumbStyle: (0, _objectSpread2.default)({
      width: _LHCommonFunction.LHUiUtils.GetPx(24),
      height: _LHCommonFunction.LHUiUtils.GetPx(24),
      borderWidth: 0.5,
      borderColor: 'rgba(0,0,0,0.15)'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000000',
        shadowOffset: {
          x: 0,
          y: 3
        },
        shadowOpacity: 0.1
      },
      android: {
        elevation: 1
      }
    })),
    deleteComponent: {
      backgroundColor: '#F43F31',
      width: '100%',
      height: '100%',
      justifyContent: 'center',
      alignItems: 'center'
    },
    swipeoutImage: {
      width: _LHCommonFunction.LHUiUtils.GetPx(25),
      height: _LHCommonFunction.LHUiUtils.GetPx(25)
    },
    swipeoutText: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      color: '#ffffff'
    }
  });

  exports.default = LHCommonStyles;
},11030,[14305,14314,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHMoreSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHMoreSettingPage.default;
  exports.default = _default;
},11033,[14305,11036]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var isShared = _LHCommonFunction.LHDeviceAuthorityUtils.isShared();

  var LHMoreSettingPage = function (_React$Component) {
    (0, _inherits2.default)(LHMoreSettingPage, _React$Component);

    function LHMoreSettingPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHMoreSettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHMoreSettingPage).call(this, props, context));
      _this.state = {
        timeZone: _miot.Device.timeZone || ''
      };
      return _this;
    }

    (0, _createClass2.default)(LHMoreSettingPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var navigation = this.props.navigation;
        var showDeviceTimeZone = navigation.getParam('showDeviceTimeZone');

        if (showDeviceTimeZone) {
          this.deviceTimeZoneChangedListener = _miot.DeviceEvent.deviceTimeZoneChanged.addListener(function (device) {
            _this2.setState({
              timeZone: device.timeZone
            });
          });

          _miot.Device.getDeviceTimeZone().then(function (result) {
            _this2.setState({
              timeZone: result && result.timeZone || ''
            });
          }).catch(function (error) {});
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.deviceTimeZoneChangedListener) this.deviceTimeZoneChangedListener.remove();
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var navigation = this.props.navigation;
        var showDeviceTimeZone = navigation.getParam('showDeviceTimeZone');
        var syncDeviceTimeZoneToDevice = navigation.getParam('syncDeviceTimeZoneToDevice') || false;
        var showBtGateway = navigation.getParam('showBtGateway');
        var isMeshBtGateway = navigation.getParam('isMeshBtGateway');
        var bleMeshPageSwitchColor = navigation.getParam('bleMeshPageSwitchColor');
        var hideLegalInformation = navigation.getParam('hideLegalInformation');
        var PolicyLicenseUrl = navigation.getParam('PolicyLicenseUrl');
        var showMorePagePlugInItem = navigation.getParam('showMorePagePlugInItem');
        var pluginVersion = navigation.getParam('pluginVersion');
        var timeZone = this.state.timeZone;
        var items = [{
          title: '',
          data: [showMorePagePlugInItem ? _LHCommonFunction.LHSettingItem.morePagePlugInItem(pluginVersion || String(_miot.Package.version)) : null, isShared || !['0', '8'].includes(_miot.Device.type) ? null : _LHCommonFunction.LHSettingItem.getSettingItem('networkInfo'), isShared ? null : _LHCommonFunction.LHSettingItem.getSettingItem('securitySetting'), isShared ? null : showBtGateway ? isMeshBtGateway ? _LHCommonFunction.LHSettingItem.GetBleGatewayMeshItem(navigation, bleMeshPageSwitchColor) : _LHCommonFunction.LHSettingItem.btGatewayConnectedItem : null, showDeviceTimeZone ? _LHCommonFunction.LHSettingItem.getSettingItem('deviceTimeZone', {
            rightDescription: timeZone,
            rightDescriptionStyle: timeZone ? {
              flex: 1
            } : null,
            textContainer: timeZone ? {
              flex: 0
            } : null,
            press: function press() {
              _miot.Host.ui.openDeviceTimeZoneSettingPage({
                sync_device: syncDeviceTimeZoneToDevice
              });
            }
          }) : null, isShared || hideLegalInformation ? null : _LHCommonFunction.LHSettingItem.GetPrivacyLicenseItem(PolicyLicenseUrl), _LHCommonFunction.LHSettingItem.addToDesktopItem]
        }];

        for (var i = 0; i < items[0].data.length; i += 1) {
          if (!items[0].data[i]) {
            items[0].data.splice(i, 1);
            i -= 1;
          }
        }

        return items;
      }
    }, {
      key: "getIsDark",
      value: function getIsDark() {
        var screenProps = this.props.screenProps;
        var isDark = screenProps.isDark;
        return isDark;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var pageData = this.getPageData();
        var isDark = this.getIsDark();
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: isDark ? '#000' : '#fff'
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('moreSettingPage'),
          testID: "moreSettingPage"
        }, _react.default.createElement(_LHTitleBarCustom.default, {
          title: _LHCommonFunction.LHCommonLocalizableString.common_setting_more_setting,
          onPressLeft: function onPressLeft() {
            var navigation = _this3.props.navigation;
            navigation.goBack();
          },
          isDark: isDark
        }), _react.default.createElement(_LHStandardList.default, {
          isDark: isDark,
          data: pageData
        }));
      }
    }]);
    return LHMoreSettingPage;
  }(_react.default.Component);

  LHMoreSettingPage.navigationOptions = function () {
    return {
      header: null
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHMoreSettingPage);

  exports.default = _default;
},11036,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10883,10343]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHBleGatewayMeshPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHBleGatewayMeshPage.default;
  exports.default = _default;
},11039,[14305,11042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHRequestDataContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var LHBleGatewayMeshPage = function (_React$Component) {
    (0, _inherits2.default)(LHBleGatewayMeshPage, _React$Component);

    function LHBleGatewayMeshPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHBleGatewayMeshPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHBleGatewayMeshPage).call(this, props, context));
      _this.state = {
        meshStatus: true,
        request: {}
      };
      return _this;
    }

    (0, _createClass2.default)(LHBleGatewayMeshPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.getMeshStatus();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.pageExit = true;
      }
    }, {
      key: "getMeshStatus",
      value: function getMeshStatus() {
        var _this2 = this;

        var requestTime = new Date().getTime();

        _LHCommonFunction.LHMiServer.SendRPCPayload('miIO.ble_gateway_state', []).then(function (res) {
          if (_this2.pageExit) return;

          _this2.saveRequestData('success', 'miIO.ble_gateway_state', requestTime, [], res);

          if (res.code === 0) {
            var state = true;

            if (res.result && res.result.state === 0) {
              state = false;
            }

            _this2.setState({
              meshStatus: state
            });
          } else {
            _this2.getStatusFail();
          }
        }).catch(function (err) {
          if (_this2.pageExit) return;

          _this2.saveRequestData('fail', 'miIO.ble_gateway_state', requestTime, [], err || {});

          _this2.getStatusFail();
        });
      }
    }, {
      key: "getStatusFail",
      value: function getStatusFail() {
        _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_setting_btGateway_status_read_fail);
      }
    }, {
      key: "setMeshStatus",
      value: function setMeshStatus(newMeshStatus, oldMeshStatus) {
        var _this3 = this;

        var requestTime = new Date().getTime();
        var params = {
          rssi: -127,
          state: newMeshStatus ? 1 : 0
        };

        _LHCommonFunction.LHMiServer.SendRPCPayload('miIO.ble_gateway_enable', params).then(function (res) {
          if (_this3.pageExit) return;

          _this3.saveRequestData('success', 'miIO.ble_gateway_enable', requestTime, params, res);

          if (res.code !== 0) {
            _this3.setStatusFail(oldMeshStatus);
          }
        }).catch(function (err) {
          if (_this3.pageExit) return;

          _this3.saveRequestData('fail', 'miIO.ble_gateway_enable', requestTime, params, err || {});

          _this3.setStatusFail(oldMeshStatus);
        });
      }
    }, {
      key: "setStatusFail",
      value: function setStatusFail(oldMeshStatus) {
        _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_setting_failed);

        this.setState({
          meshStatus: oldMeshStatus
        });
      }
    }, {
      key: "saveRequestData",
      value: function saveRequestData(type, key, requestTime, params, response) {
        if (_LHCommonFunction.LHAppiumUtils.isWhiteList && _LHCommonFunction.LHAppiumUtils.isWhiteList()) {
          var request = this.state.request;

          var data = _LHCommonFunction.LHAppiumUtils.handleTestRequestData(request, type, key, requestTime, params, response);

          this.setState({
            request: data
          });
        }
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this4 = this;

        var meshStatus = this.state.meshStatus;
        var navigation = this.props.navigation;
        var switchColor = navigation.getParam('switchColor');
        var items = [{
          title: '',
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.common_setting_btGateway,
            testID: 'bleGatewayItem',
            hasSwitch: true,
            switchValue: meshStatus,
            switchColor: switchColor,
            useControlledSwitch: true,
            onSwitchChange: function onSwitchChange() {
              var meshStatus1 = _this4.state.meshStatus;

              _this4.setState({
                meshStatus: !meshStatus1
              });

              _this4.setMeshStatus(!meshStatus1, meshStatus1);
            },
            hideRightArrow: true,
            noTouchableHighlight: true,
            hideTopSeparatorLine: true
          }, {
            title: _LHCommonFunction.LHCommonLocalizableString.common_setting_btGateway_connected,
            testID: 'bleGatewayConnectedItem',
            disabled: !meshStatus,
            press: function press() {
              var meshStatus1 = _this4.state.meshStatus;
              if (meshStatus1) _miot.Host.ui.openBtGatewayPage();
            }
          }]
        }];
        return items;
      }
    }, {
      key: "render",
      value: function render() {
        var pageData = this.getPageData();
        var request = this.state.request;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHBleGatewayMeshPage'),
          testID: "LHBleGatewayMeshPage"
        }, _react.default.createElement(_LHRequestDataContainer.default, {
          testID: "LHBleGatewayMeshPageQuquest",
          data: request
        }), _react.default.createElement(_LHStandardList.default, {
          data: pageData
        }));
      }
    }]);
    return LHBleGatewayMeshPage;
  }(_react.default.Component);

  LHBleGatewayMeshPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        title: _LHCommonFunction.LHCommonLocalizableString.common_setting_btGateway,
        isDark: _LHCommonFunction.LHUiColorUtils.isDark,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHBleGatewayMeshPage);

  exports.default = _default;
},11042,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10343,10883,11045]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHRequestDataContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHRequestDataContainer.default;
  exports.default = _default;
},11045,[14305,11048]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var LHRequestDataContainer = function (_React$Component) {
    (0, _inherits2.default)(LHRequestDataContainer, _React$Component);

    function LHRequestDataContainer(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHRequestDataContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHRequestDataContainer).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHRequestDataContainer, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            data = _this$props.data,
            testID = _this$props.testID,
            isFullScreen = _this$props.isFullScreen;

        if (_LHCommonFunction.LHAppiumUtils.isWhiteList && _LHCommonFunction.LHAppiumUtils.isWhiteList()) {
          return _react.default.createElement(_reactNative.Text, {
            style: {
              height: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
              opacity: 0.01,
              width: 1,
              position: 'absolute',
              top: isFullScreen ? _LHCommonFunction.LHUiUtils.TitleBarHeight : 0,
              left: 0,
              zIndex: 999
            },
            accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(testID),
            testID: testID
          }, JSON.stringify(data));
        } else {
          return null;
        }
      }
    }]);
    return LHRequestDataContainer;
  }(_react.default.Component);

  LHRequestDataContainer.defaultProps = {
    testID: 'LHRequestDataContainer',
    isFullScreen: true
  };
  var _default = LHRequestDataContainer;
  exports.default = _default;
},11048,[14305,14320,14323,14371,14377,14386,10297,10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHAlarmTriggleDevicePage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHAlarmTriggleDevicePage.default;
  exports.default = _default;
},11051,[14305,11054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeScrollableTabView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _LHAlarmTriggleDeviceTabBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHTitleBarCustom = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHStandardList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHCommonStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _LHCommonIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _LHRequestDataContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var cacheKey = 'LHAlarmTriggleDevicePageKey_data';

  var styles = _reactNative.StyleSheet.create({
    titleStyle: {
      color: _LHCommonFunction.LHUiColorUtils.getColor('#000', 'rgba(255,255,255,0.9)'),
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(14),
      width: '100%',
      textAlign: 'left',
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(14),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16)
    },
    firstSectionTextStyle: {
      color: '#b2b2b2',
      textAlign: 'left',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(9),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16)
    },
    subTitleStyle: {
      color: _LHCommonFunction.LHUiColorUtils.getColor('#7f7f7f', 'rgba(255,255,255,0.5)'),
      textAlign: 'left',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(24),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(2.5),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(13),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16)
    },
    emptyViewImageStyle: {
      width: _LHCommonFunction.LHUiUtils.GetPx(138),
      height: _LHCommonFunction.LHUiUtils.GetPx(138),
      alignSelf: 'center'
    },
    emptyViewDescribeTextStyle: {
      color: '#999999',
      textAlign: 'center',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12.6),
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(40),
      alignSelf: 'center',
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18)
    },
    emptyViewGoToBugTextStyle: {
      alignSelf: 'center',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12.6),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(6),
      textDecorationLine: 'underline'
    }
  });

  var LHAlarmTriggleDevicePage = function (_React$Component) {
    (0, _inherits2.default)(LHAlarmTriggleDevicePage, _React$Component);

    function LHAlarmTriggleDevicePage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHAlarmTriggleDevicePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHAlarmTriggleDevicePage).call(this, props, context));
      var navigation = _this.props.navigation;
      var alarmType = navigation.getParam('pageType');
      _this.haveGotPageData = false;
      _this.state = {
        devicesList: [],
        isLoading: false,
        isOverSea: false,
        pageType: alarmType,
        request: {}
      };
      _this.isControling = false;
      return _this;
    }

    (0, _createClass2.default)(LHAlarmTriggleDevicePage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.loadLogDataFromCache();
        this.getAlarmTriggleDeviceData();
        this.getIsOverSea();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearSetLoadingFalseTimeoutId();
      }
    }, {
      key: "getIsOverSea",
      value: function getIsOverSea() {
        var _this2 = this;

        _LHCommonFunction.LHMiServer.isOverSea(function (isOverSea) {
          _this2.setState({
            isOverSea: isOverSea
          });
        });
      }
    }, {
      key: "getAlarmTriggleDeviceData",
      value: function getAlarmTriggleDeviceData() {
        var _this3 = this;

        var isNeedShowPullLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        if (isNeedShowPullLoading) {
          this.setState({
            isLoading: true
          });
        }

        var requestTime = new Date().getTime();

        _LHCommonFunction.LHIFTTTManager.fetchAlarmTriggleDeviceList(_miot.Device.deviceID, function (array) {
          _this3.saveRequestData('success', 'fetchAlarmTriggleDeviceList', requestTime, _miot.Device.deviceID, JSON.stringify(array));

          _this3.haveGotPageData = true;

          _this3.setDevivceListCache(array);

          _this3.setState({
            devicesList: array
          });

          _this3.setLoadingFalse();

          _this3.isControling = false;
        }, function (err) {
          _this3.saveRequestData('failed', 'fetchAlarmTriggleDeviceList', requestTime, _miot.Device.deviceID, JSON.stringify(err));

          _this3.setLoadingFalse();

          if (isNeedShowPullLoading) {
            _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
          }
        });
      }
    }, {
      key: "loadLogDataFromCache",
      value: function loadLogDataFromCache() {
        var _this4 = this;

        _LHCommonFunction.LHMiServer.GetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey(cacheKey)).then(function (res) {
          if (!res || _this4.haveGotPageData === true) return;

          _this4.setState({
            devicesList: res
          });
        });
      }
    }, {
      key: "setDevivceListCache",
      value: function setDevivceListCache(data) {
        _LHCommonFunction.LHMiServer.SetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey(cacheKey), data);
      }
    }, {
      key: "triggleDeviceChange",
      value: function triggleDeviceChange(type) {
        var navigation = this.props.navigation;
        var callBack = navigation.getParam('callBack');
        var pageType = this.state.pageType;
        if (typeof callBack === 'function') callBack(type, pageType);
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this5 = this;

        var ThemeColor = this.props.ThemeColor;
        var devicesList = this.state.devicesList;

        if (devicesList.length !== 4) {
          return [[], [], [], []];
        } else {
          var _ret = function () {
            var data = [];
            var canControlUIData = [];
            var cantControlUIData = [];

            var _loop = function _loop(index) {
              var singleList = devicesList[index];
              var pageType = index;

              if (singleList.length !== 2) {
                return "continue";
              }

              canControlUIData = [];
              cantControlUIData = [];
              var canControlOriginData = singleList[0];
              var cantControlOriginData = singleList[1];

              var _loop2 = function _loop2(i, len) {
                var device = canControlOriginData[i];
                canControlUIData.push({
                  testID: 'canControlDevice_' + device.did,
                  title: device.title,
                  description: device.subTitle,
                  showPlaceHolderImage: true,
                  iconSource: {
                    uri: device.iconURL
                  },
                  leftIconStyle: {
                    width: _LHCommonFunction.LHUiUtils.GetPx(42),
                    height: _LHCommonFunction.LHUiUtils.GetPx(42)
                  },
                  showOfflineIcon: !device.isOnline,
                  topSeparatorStyle: {
                    marginLeft: _LHCommonFunction.LHUiUtils.GetPx(24)
                  },
                  hideRightArrow: true,
                  hideTopSeparatorLine: false,
                  hasSwitch: true,
                  switchColor: ThemeColor,
                  switchValue: device.isAdded,
                  useControlledSwitch: true,
                  onSwitchChange: function onSwitchChange() {
                    if (_this5.isControling === true) {
                      return;
                    }

                    if (!_miot.Device.isOnline) {
                      _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.sub_device_list_device_offline);

                      return;
                    }

                    var newDevicesList = _this5.state.devicesList;
                    var tempSingleList = newDevicesList[index];
                    var newDevice = tempSingleList[0][i];

                    if (newDevice.isAdded === true) {
                      _this5.isControling = true;
                      newDevice.isAdded = false;

                      _this5.forceUpdate();

                      _LHCommonFunction.LHDialogUtils.LoadingDialogShow({
                        title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggleDevices_deleting
                      });

                      _LHCommonFunction.LHIFTTTManager.getMultiModeHubReadyToDeleteSceneIDList(pageType, newDevice.did, function (sceneIDList) {
                        if (sceneIDList.length === 0) {
                          _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                          _this5.isControling = false;
                          return;
                        }

                        _LHCommonFunction.LHIFTTTManager.deleteScenes(sceneIDList, function (res) {
                          _this5.getAlarmTriggleDeviceData(false);

                          _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                          _this5.isControling = false;

                          _this5.triggleDeviceChange('delete');

                          _LHCommonFunction.LHIFTTTManager.sendAlarmDeviceToGW(newDevicesList);
                        }, function (err) {
                          newDevice.isAdded = true;

                          _this5.forceUpdate();

                          _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                          _this5.isControling = false;

                          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
                        });
                      }, function (getSceneIdListErr) {
                        newDevice.isAdded = true;

                        _this5.forceUpdate();

                        _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                        _this5.isControling = false;

                        _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
                      });
                    } else {
                      _this5.isControling = true;
                      newDevice.isAdded = true;

                      _this5.forceUpdate();

                      _LHCommonFunction.LHDialogUtils.LoadingDialogShow({
                        title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggleSubDevices_setting
                      });

                      _LHCommonFunction.LHIFTTTManager.saveSceneRecord(_miot.Device.deviceID, newDevice, pageType, function () {
                        _this5.isControling = false;

                        _this5.getAlarmTriggleDeviceData(false);

                        _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                        _this5.triggleDeviceChange('add');

                        _LHCommonFunction.LHIFTTTManager.sendAlarmDeviceToGW(newDevicesList);

                        _LHCommonFunction.LHIFTTTManager.changeToBaseGuard();
                      }, function (err) {
                        newDevice.isAdded = false;

                        _this5.forceUpdate();

                        _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

                        if (err && err.message && err.message.indexOf('13') !== -1) {
                          _this5.getAlarmTriggleDeviceData(false);
                        }

                        _this5.isControling = false;

                        _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
                      });
                    }
                  }
                });
              };

              for (var i = 0, len = canControlOriginData.length; i < len; i += 1) {
                _loop2(i, len);
              }

              for (var i = 0, len = cantControlOriginData.length; i < len; i += 1) {
                var device = cantControlOriginData[i];
                cantControlUIData.push({
                  testID: 'cantControlDevice',
                  title: device.title,
                  description: device.subTitle,
                  hideRightArrow: true,
                  hideTopSeparatorLine: false,
                  topSeparatorStyle: {
                    marginLeft: _LHCommonFunction.LHUiUtils.GetPx(24)
                  },
                  hasSwitch: false,
                  showPlaceHolderImage: true,
                  iconSource: {
                    uri: device.iconURL
                  },
                  disabled: true,
                  showOfflineIcon: !device.isOnline,
                  leftIconStyle: {
                    width: _LHCommonFunction.LHUiUtils.GetPx(42),
                    height: _LHCommonFunction.LHUiUtils.GetPx(42)
                  },
                  bottomSeparatorStyle: i === cantControlOriginData.length - 1 ? {
                    opacity: 1,
                    marginLeft: 0
                  } : null
                });
              }

              if (canControlUIData.length > 0 && cantControlUIData.length > 0 || canControlUIData.length === 0 && cantControlUIData.length > 0) {
                data.push([{
                  sectionHeader: function sectionHeader() {
                    return _this5.getCanControlSectionHeaderView(pageType, true, canControlUIData.length === 0);
                  },
                  data: canControlUIData
                }, {
                  sectionHeader: function sectionHeader() {
                    return _this5.getCanControlSectionHeaderView(pageType, false);
                  },
                  data: cantControlUIData
                }]);
              } else {
                var resultData = [{
                  sectionHeader: function sectionHeader() {
                    return _this5.getCanControlSectionHeaderView(pageType, true);
                  },
                  data: canControlUIData
                }];

                if (cantControlUIData.length > 0) {
                  resultData.push({
                    data: cantControlUIData
                  });
                }

                data.push(resultData);
              }
            };

            for (var index = 0; index < devicesList.length; index += 1) {
              var _ret2 = _loop(index);

              if (_ret2 === "continue") continue;
            }

            if (data.length === 4) {
              return {
                v: data
              };
            } else {
              return {
                v: [[], [], [], []]
              };
            }
          }();

          if (typeof _ret === "object") return _ret.v;
        }
      }
    }, {
      key: "getCanControlSectionHeaderView",
      value: function getCanControlSectionHeaderView(pageType, isFirstSection) {
        var canControlIsEmpty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var bottomLine = isFirstSection && !canControlIsEmpty ? _react.default.createElement(_reactNative.View, {
          style: {
            marginVertical: _LHCommonFunction.LHUiUtils.GetPx(19)
          }
        }, _react.default.createElement(_LHSeparator.default, {
          style: {
            alignSelf: 'flex-end',
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(24)
          }
        })) : null;
        var topTitle = isFirstSection ? null : _react.default.createElement(_LHText.default, {
          style: styles.titleStyle
        }, this.getSectionHeaderTitle(pageType, isFirstSection));
        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
          }
        }, topTitle, _react.default.createElement(_LHText.default, {
          style: isFirstSection ? styles.firstSectionTextStyle : styles.subTitleStyle
        }, this.getSectionHeaderSubTitle(pageType, isFirstSection)), bottomLine);
      }
    }, {
      key: "getSectionHeaderTitle",
      value: function getSectionHeaderTitle(pageType, isFirstSection) {
        var title = '';

        if (isFirstSection) {
          title = _LHCommonFunction.LHGuardTypeMode.getGuardModelWithGuardType(pageType).guardName;
        } else {
          title = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header_title_1;
        }

        return title;
      }
    }, {
      key: "getSectionHeaderSubTitle",
      value: function getSectionHeaderSubTitle(pageType, isFirstSection) {
        var subTitle = '';

        if (pageType === _LHCommonFunction.LHGuardTypeMode.getBaseGuardType()) {
          if (isFirstSection) {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header1_subtitle_basic;
          } else {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header2_subtitle_basic;
          }
        } else if (pageType === _LHCommonFunction.LHGuardTypeMode.getHomeGuardType()) {
          if (isFirstSection) {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header1_subtitle_home;
          } else {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header2_subtitle_home;
          }
        } else if (pageType === _LHCommonFunction.LHGuardTypeMode.getAwayGuardType()) {
          if (isFirstSection) {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header1_subtitle_away;
          } else {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header2_subtitle_away;
          }
        } else if (pageType === _LHCommonFunction.LHGuardTypeMode.getSleepGuardType()) {
          if (isFirstSection) {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header1_subtitle_sleep;
          } else {
            subTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_header2_subtitle_sleep;
          }
        }

        return subTitle;
      }
    }, {
      key: "setLoadingFalse",
      value: function setLoadingFalse() {
        var _this6 = this;

        this.clearSetLoadingFalseTimeoutId();
        this.setLoadingFalseTimeoutId = setTimeout(function () {
          _this6.setState({
            isLoading: false
          });
        }, 500);
      }
    }, {
      key: "clearSetLoadingFalseTimeoutId",
      value: function clearSetLoadingFalseTimeoutId() {
        if (this.setLoadingFalseTimeoutId) {
          clearTimeout(this.setLoadingFalseTimeoutId);
          this.setLoadingFalseTimeoutId = null;
        }
      }
    }, {
      key: "gotoBuy",
      value: function gotoBuy() {
        _LHCommonFunction.LHMiServer.OpenYouPinShop('人体门窗开关传感器');
      }
    }, {
      key: "getPageView",
      value: function getPageView(data, isLoading, index) {
        var _this7 = this;

        if (data === undefined || data.length === 1 && data[0].data.length === 0) {
          var ThemeColor = this.props.ThemeColor;
          var isOverSea = this.state.isOverSea;
          return _react.default.createElement(_reactNative.View, {
            key: 'pageView_' + index,
            style: {
              backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
            },
            tabLabel: _LHCommonFunction.LHGuardTypeMode.getGuardModelWithGuardType(index).guardShortName
          }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHText.default, {
            style: styles.firstSectionTextStyle
          }, this.getSectionHeaderSubTitle(index, true)), _react.default.createElement(_reactNative.View, {
            style: {
              marginVertical: _LHCommonFunction.LHUiUtils.GetPx(19)
            }
          }, _react.default.createElement(_LHSeparator.default, {
            style: {
              alignSelf: 'flex-start',
              marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(24)
            }
          }))), _react.default.createElement(_reactNative.View, {
            style: {
              width: '100%'
            }
          }, _react.default.createElement(_reactNative.Image, {
            style: styles.emptyViewImageStyle,
            source: _LHCommonFunction.LHUiColorUtils.isDark ? _LHCommonIcon.default.triggleDevice.emptyImgDark : _LHCommonIcon.default.triggleDevice.emptyImg
          }), _react.default.createElement(_LHText.default, {
            style: styles.emptyViewDescribeTextStyle,
            numberOfLines: 10
          }, _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_empty_tip), isOverSea ? null : _react.default.createElement(_reactNative.TouchableOpacity, {
            style: {
              width: '100%'
            },
            onPress: function onPress() {
              _this7.gotoBuy();
            }
          }, _react.default.createElement(_LHText.default, {
            style: [styles.emptyViewGoToBugTextStyle, {
              color: ThemeColor
            }]
          }, _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_triggle_device_go_to_bug))));
        } else {
          return _react.default.createElement(_LHStandardList.default, {
            key: 'pageView_' + index,
            data: data,
            contentContainerStyle: {
              paddingBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight + _LHCommonFunction.LHUiUtils.GetPx(30)
            },
            stickySectionHeadersEnabled: false,
            refreshControl: _react.default.createElement(_reactNative.RefreshControl, {
              refreshing: isLoading === true,
              onRefresh: function onRefresh() {
                _this7.getAlarmTriggleDeviceData();
              }
            }),
            tabLabel: _LHCommonFunction.LHGuardTypeMode.getGuardModelWithGuardType(index).guardShortName
          });
        }
      }
    }, {
      key: "renderPageView",
      value: function renderPageView(pageData, isLoading) {
        var _this8 = this;

        var totalPageView = new Array(4);

        for (var i = 0; i < totalPageView.length; i += 1) {
          totalPageView[i] = 1;
        }

        return totalPageView.map(function (item, i) {
          var pageType = _this8.state.pageType;
          return _this8.getPageView(pageData[i], isLoading && pageType === i, i);
        });
      }
    }, {
      key: "getInitalPage",
      value: function getInitalPage() {
        var navigation = this.props.navigation;
        var pageType = navigation.getParam('pageType');
        return pageType;
      }
    }, {
      key: "saveRequestData",
      value: function saveRequestData(type, key, requestTime, params, response) {
        if (_LHCommonFunction.LHAppiumUtils.isWhiteList && _LHCommonFunction.LHAppiumUtils.isWhiteList()) {
          var request = this.state.request;

          var data = _LHCommonFunction.LHAppiumUtils.handleTestRequestData(request, type, key, requestTime, params, response);

          this.setState({
            request: data
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this9 = this;

        var pageData = this.getPageData();
        var _this$state = this.state,
            isLoading = _this$state.isLoading,
            request = _this$state.request;
        var ThemeColor = this.props.ThemeColor;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
            overflow: 'hidden'
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHAlarmTriggleDevicePage'),
          testID: "LHAlarmTriggleDevicePage"
        }, _react.default.createElement(_LHRequestDataContainer.default, {
          testID: "LHAlarmTriggleDevicePageQuquest",
          data: request
        }), _react.default.createElement(_reactNativeScrollableTabView.default, {
          initialPage: this.getInitalPage(),
          style: {
            height: _LHCommonFunction.LHUiUtils.GetPx(45)
          },
          locked: true,
          onChangeTab: function onChangeTab(obj) {
            _this9.setState({
              pageType: obj.i
            });
          },
          tabBarBackgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite,
          renderTabBar: function renderTabBar() {
            return _react.default.createElement(_LHAlarmTriggleDeviceTabBar.default, {
              activeColor: ThemeColor,
              inactiveColor: "#999999"
            });
          }
        }, this.renderPageView(pageData, isLoading)));
      }
    }]);
    return LHAlarmTriggleDevicePage;
  }(_react.default.Component);

  LHAlarmTriggleDevicePage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHTitleBarCustom.default, {
        isDark: _LHCommonFunction.LHUiColorUtils.isDark,
        title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_trigger_devices,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  LHAlarmTriggleDevicePage.defaultProps = {
    ThemeColor: _LHCommonFunction.LHUiColorUtils.getColor('#0289FF', '#007AE6')
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHAlarmTriggleDevicePage);

  exports.default = _default;
},11054,[14305,14320,14323,14371,14377,14386,10297,10033,11057,10004,10074,11075,10883,10343,10871,11027,10847,10895,11045]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  var _extends = _$$_REQUIRE(_dependencyMap[1]);

  var React = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[3]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var createReactClass = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _ReactNative2 = ReactNative,
      Dimensions = _ReactNative2.Dimensions,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      ScrollView = _ReactNative2.ScrollView,
      Platform = _ReactNative2.Platform,
      StyleSheet = _ReactNative2.StyleSheet,
      ViewPagerAndroid = _ReactNative2.ViewPagerAndroid,
      InteractionManager = _ReactNative2.InteractionManager;

  var TimerMixin = _$$_REQUIRE(_dependencyMap[6]);

  var SceneComponent = _$$_REQUIRE(_dependencyMap[7]);

  var DefaultTabBar = _$$_REQUIRE(_dependencyMap[8]);

  var ScrollableTabBar = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedViewPagerAndroid = Animated.createAnimatedComponent(ViewPagerAndroid);
  var ScrollableTabView = createReactClass({
    displayName: "ScrollableTabView",
    mixins: [TimerMixin],
    statics: {
      DefaultTabBar: DefaultTabBar,
      ScrollableTabBar: ScrollableTabBar
    },
    scrollOnMountCalled: false,
    propTypes: {
      tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),
      initialPage: PropTypes.number,
      page: PropTypes.number,
      onChangeTab: PropTypes.func,
      onScroll: PropTypes.func,
      renderTabBar: PropTypes.any,
      style: ViewPropTypes.style,
      contentProps: PropTypes.object,
      scrollWithoutAnimation: PropTypes.bool,
      locked: PropTypes.bool,
      prerenderingSiblingsNumber: PropTypes.number
    },
    getDefaultProps: function getDefaultProps() {
      return {
        tabBarPosition: 'top',
        initialPage: 0,
        page: -1,
        onChangeTab: function onChangeTab() {},
        onScroll: function onScroll() {},
        contentProps: {},
        scrollWithoutAnimation: false,
        locked: false,
        prerenderingSiblingsNumber: 0
      };
    },
    getInitialState: function getInitialState() {
      var _this = this;

      var containerWidth = Dimensions.get('window').width;
      var scrollValue;
      var scrollXIOS;
      var positionAndroid;
      var offsetAndroid;
      {
        positionAndroid = new Animated.Value(this.props.initialPage);
        offsetAndroid = new Animated.Value(0);
        scrollValue = Animated.add(positionAndroid, offsetAndroid);

        var _callListeners = this._polyfillAnimatedValue(scrollValue);

        var positionAndroidValue = this.props.initialPage;
        var offsetAndroidValue = 0;
        positionAndroid.addListener(function (_ref2) {
          var value = _ref2.value;
          positionAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
        offsetAndroid.addListener(function (_ref3) {
          var value = _ref3.value;
          offsetAndroidValue = value;

          _callListeners(positionAndroidValue + offsetAndroidValue);
        });
      }
      return {
        currentPage: this.props.initialPage,
        scrollValue: scrollValue,
        scrollXIOS: scrollXIOS,
        positionAndroid: positionAndroid,
        offsetAndroid: offsetAndroid,
        containerWidth: containerWidth,
        sceneKeys: this.newSceneKeys({
          currentPage: this.props.initialPage
        })
      };
    },
    componentWillReceiveProps: function componentWillReceiveProps(props) {
      if (props.children !== this.props.children) {
        this.updateSceneKeys({
          page: this.state.currentPage,
          children: props.children
        });
      }

      if (props.page >= 0 && props.page !== this.state.currentPage) {
        this.goToPage(props.page);
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      {
        this.state.positionAndroid.removeAllListeners();
        this.state.offsetAndroid.removeAllListeners();
      }
    },
    goToPage: function goToPage(pageNumber) {
      {
        if (this.scrollView) {
          if (this.props.scrollWithoutAnimation) {
            this.scrollView.getNode().setPageWithoutAnimation(pageNumber);
          } else {
            this.scrollView.getNode().setPage(pageNumber);
          }
        }
      }
      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: pageNumber,
        callback: this._onChangeTab.bind(this, currentPage, pageNumber)
      });
    },
    renderTabBar: function renderTabBar(props) {
      if (this.props.renderTabBar === false) {
        return null;
      } else if (this.props.renderTabBar) {
        return React.cloneElement(this.props.renderTabBar(props), props);
      } else {
        return React.createElement(DefaultTabBar, props);
      }
    },
    updateSceneKeys: function updateSceneKeys(_ref4) {
      var page = _ref4.page,
          _ref4$children = _ref4.children,
          children = _ref4$children === undefined ? this.props.children : _ref4$children,
          _ref4$callback = _ref4.callback,
          callback = _ref4$callback === undefined ? function () {} : _ref4$callback;
      var newKeys = this.newSceneKeys({
        previousKeys: this.state.sceneKeys,
        currentPage: page,
        children: children
      });
      this.setState({
        currentPage: page,
        sceneKeys: newKeys
      }, callback);
    },
    newSceneKeys: function newSceneKeys(_ref5) {
      var _this2 = this;

      var _ref5$previousKeys = _ref5.previousKeys,
          previousKeys = _ref5$previousKeys === undefined ? [] : _ref5$previousKeys,
          _ref5$currentPage = _ref5.currentPage,
          currentPage = _ref5$currentPage === undefined ? 0 : _ref5$currentPage,
          _ref5$children = _ref5.children,
          children = _ref5$children === undefined ? this.props.children : _ref5$children;
      var newKeys = [];

      this._children(children).forEach(function (child, idx) {
        var key = _this2._makeSceneKey(child, idx);

        if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {
          newKeys.push(key);
        }
      });

      return newKeys;
    },
    _polyfillAnimatedValue: function _polyfillAnimatedValue(animatedValue) {
      var listeners = new Set();

      var addListener = function addListener(listener) {
        listeners.add(listener);
      };

      var removeListener = function removeListener(listener) {
        listeners.delete(listener);
      };

      var removeAllListeners = function removeAllListeners() {
        listeners.clear();
      };

      animatedValue.addListener = addListener;
      animatedValue.removeListener = removeListener;
      animatedValue.removeAllListeners = removeAllListeners;
      return function (value) {
        return listeners.forEach(function (listener) {
          return listener({
            value: value
          });
        });
      };
    },
    _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {
      var numOfSibling = this.props.prerenderingSiblingsNumber;
      return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;
    },
    _keyExists: function _keyExists(sceneKeys, key) {
      return sceneKeys.find(function (sceneKey) {
        return key === sceneKey;
      });
    },
    _makeSceneKey: function _makeSceneKey(child, idx) {
      return child.props.tabLabel + '_' + idx;
    },
    renderScrollableContent: function renderScrollableContent() {
      var _this3 = this;

      {
        var _scenes = this._composeScenes();

        return React.createElement(AnimatedViewPagerAndroid, _extends({
          key: this._children().length,
          style: styles.scrollableContentAndroid,
          initialPage: this.props.initialPage,
          onPageSelected: this._updateSelectedPage,
          keyboardDismissMode: "on-drag",
          scrollEnabled: !this.props.locked,
          onPageScroll: Animated.event([{
            nativeEvent: {
              position: this.state.positionAndroid,
              offset: this.state.offsetAndroid
            }
          }], {
            useNativeDriver: true,
            listener: this._onScroll
          }),
          ref: function ref(scrollView) {
            _this3.scrollView = scrollView;
          }
        }, this.props.contentProps), _scenes);
      }
    },
    _composeScenes: function _composeScenes() {
      var _this4 = this;

      return this._children().map(function (child, idx) {
        var key = _this4._makeSceneKey(child, idx);

        return React.createElement(SceneComponent, {
          key: child.key,
          shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),
          style: {
            width: _this4.state.containerWidth
          }
        }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {
          tabLabel: child.props.tabLabel
        }));
      });
    },
    _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {
      var offsetX = e.nativeEvent.contentOffset.x;
      var page = Math.round(offsetX / this.state.containerWidth);

      if (this.state.currentPage !== page) {
        this._updateSelectedPage(page);
      }
    },
    _updateSelectedPage: function _updateSelectedPage(nextPage) {
      var localNextPage = nextPage;

      if (typeof localNextPage === 'object') {
        localNextPage = nextPage.nativeEvent.position;
      }

      var currentPage = this.state.currentPage;
      this.updateSceneKeys({
        page: localNextPage,
        callback: this._onChangeTab.bind(this, currentPage, localNextPage)
      });
    },
    _onChangeTab: function _onChangeTab(prevPage, currentPage) {
      this.props.onChangeTab({
        i: currentPage,
        ref: this._children()[currentPage],
        from: prevPage
      });
    },
    _onScroll: function _onScroll(e) {
      {
        var _e$nativeEvent = e.nativeEvent,
            position = _e$nativeEvent.position,
            offset = _e$nativeEvent.offset;
        this.props.onScroll(position + offset);
      }
    },
    _handleLayout: function _handleLayout(e) {
      var _this5 = this;

      var width = e.nativeEvent.layout.width;

      if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {
        return;
      }

      {
        this.setState({
          containerWidth: width
        });
      }
      this.requestAnimationFrame(function () {
        _this5.goToPage(_this5.state.currentPage);
      });
    },
    _children: function _children() {
      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;
      return React.Children.map(children, function (child) {
        return child;
      });
    },
    render: function render() {
      var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';
      var tabBarProps = {
        goToPage: this.goToPage,
        tabs: this._children().map(function (child) {
          return child.props.tabLabel;
        }),
        activeTab: this.state.currentPage,
        scrollValue: this.state.scrollValue,
        containerWidth: this.state.containerWidth
      };

      if (this.props.tabBarBackgroundColor) {
        tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;
      }

      if (this.props.tabBarActiveTextColor) {
        tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;
      }

      if (this.props.tabBarInactiveTextColor) {
        tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;
      }

      if (this.props.tabBarTextStyle) {
        tabBarProps.textStyle = this.props.tabBarTextStyle;
      }

      if (this.props.tabBarUnderlineStyle) {
        tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;
      }

      if (overlayTabs) {
        tabBarProps.style = _defineProperty({
          position: 'absolute',
          left: 0,
          right: 0
        }, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0);
      }

      return React.createElement(View, {
        style: [styles.container, this.props.style],
        onLayout: this._handleLayout
      }, this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps));
    }
  });
  module.exports = ScrollableTabView;
  var styles = StyleSheet.create({
    container: {
      flex: 1
    },
    scrollableContentAndroid: {
      flex: 1
    }
  });
},11057,[14317,14344,10297,10033,10456,10318,10513,11060,11066,11072]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var Component = React.Component;
  var View = ReactNative.View,
      StyleSheet = ReactNative.StyleSheet;

  var StaticContainer = _$$_REQUIRE(_dependencyMap[3]);

  var SceneComponent = function SceneComponent(Props) {
    var shouldUpdated = Props.shouldUpdated,
        props = _objectWithoutProperties(Props, ["shouldUpdated"]);

    return React.createElement(View, props, React.createElement(StaticContainer, {
      shouldUpdate: shouldUpdated
    }, props.children));
  };

  module.exports = SceneComponent;
},11060,[14407,10297,10033,11063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var StaticContainer = function (_React$Component) {
    "use strict";

    _inherits(StaticContainer, _React$Component);

    function StaticContainer() {
      _classCallCheck(this, StaticContainer);

      return _possibleConstructorReturn(this, _getPrototypeOf(StaticContainer).apply(this, arguments));
    }

    _createClass(StaticContainer, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return !!nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;

        if (child === null || child === false) {
          return null;
        }

        return React.Children.only(child);
      }
    }]);

    return StaticContainer;
  }(React.Component);

  module.exports = StaticContainer;
},11063,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      StyleSheet = _ReactNative2.StyleSheet,
      Text = _ReactNative2.Text,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var DefaultTabBar = createReactClass({
    displayName: "DefaultTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      textStyle: Text.propTypes.style,
      tabStyle: ViewPropTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style
    },
    getDefaultProps: function getDefaultProps() {
      return {
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null
      };
    },
    renderTabOption: function renderTabOption(name, page) {},
    renderTab: function renderTab(name, page, isTabActive, onPressHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        style: {
          flex: 1
        },
        key: name,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        }
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    render: function render() {
      var _this = this;

      var containerWidth = this.props.containerWidth;
      var numberOfTabs = this.props.tabs.length;
      var tabUnderlineStyle = {
        position: 'absolute',
        width: containerWidth / numberOfTabs,
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var translateX = this.props.scrollValue.interpolate({
        inputRange: [0, 1],
        outputRange: [0, containerWidth / numberOfTabs]
      });
      return React.createElement(View, {
        style: [styles.tabs, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style]
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage);
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, {
          transform: [{
            translateX: translateX
          }]
        }, this.props.underlineStyle]
      }));
    }
  });
  var styles = StyleSheet.create({
    tab: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 10
    },
    tabs: {
      height: 50,
      flexDirection: 'row',
      justifyContent: 'space-around',
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    }
  });
  module.exports = DefaultTabBar;
},11066,[10297,10033,10318,10456,11069]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[2]);

  var TouchableNativeFeedback = ReactNative.TouchableNativeFeedback,
      View = ReactNative.View;

  var Button = function Button(props) {
    return React.createElement(TouchableNativeFeedback, _extends({
      delayPressIn: 0,
      background: TouchableNativeFeedback.SelectableBackground()
    }, props), props.children);
  };

  module.exports = Button;
},11069,[14344,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var React = _$$_REQUIRE(_dependencyMap[0]);

  var _ReactNative = ReactNative = _$$_REQUIRE(_dependencyMap[1]),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _ReactNative2 = ReactNative,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated,
      StyleSheet = _ReactNative2.StyleSheet,
      ScrollView = _ReactNative2.ScrollView,
      Text = _ReactNative2.Text,
      Platform = _ReactNative2.Platform,
      Dimensions = _ReactNative2.Dimensions;

  var Button = _$$_REQUIRE(_dependencyMap[4]);

  var WINDOW_WIDTH = Dimensions.get('window').width;
  var ScrollableTabBar = createReactClass({
    displayName: "ScrollableTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      scrollOffset: PropTypes.number,
      style: ViewPropTypes.style,
      tabStyle: ViewPropTypes.style,
      tabsContainerStyle: ViewPropTypes.style,
      textStyle: Text.propTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style,
      onScroll: PropTypes.func
    },
    getDefaultProps: function getDefaultProps() {
      return {
        scrollOffset: 52,
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null,
        style: {},
        tabStyle: {},
        tabsContainerStyle: {},
        underlineStyle: {}
      };
    },
    getInitialState: function getInitialState() {
      this._tabsMeasurements = [];
      return {
        _leftTabUnderline: new Animated.Value(0),
        _widthTabUnderline: new Animated.Value(0),
        _containerWidth: null
      };
    },
    componentDidMount: function componentDidMount() {
      this.props.scrollValue.addListener(this.updateView);
    },
    updateView: function updateView(offset) {
      var position = Math.floor(offset.value);
      var pageOffset = offset.value % 1;
      var tabCount = this.props.tabs.length;
      var lastTabPosition = tabCount - 1;

      if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {
        return;
      }

      if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {
        this.updateTabPanel(position, pageOffset);
        this.updateTabUnderline(position, pageOffset, tabCount);
      }
    },
    necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {
      return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;
    },
    updateTabPanel: function updateTabPanel(position, pageOffset) {
      var containerWidth = this._containerMeasurements.width;
      var tabWidth = this._tabsMeasurements[position].width;
      var nextTabMeasurements = this._tabsMeasurements[position + 1];
      var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;
      var tabOffset = this._tabsMeasurements[position].left;
      var absolutePageOffset = pageOffset * tabWidth;
      var newScrollX = tabOffset + absolutePageOffset;
      newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;
      newScrollX = newScrollX >= 0 ? newScrollX : 0;
      {
        this._scrollView.scrollTo({
          x: newScrollX,
          y: 0,
          animated: false
        });
      }
    },
    updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {
      var lineLeft = this._tabsMeasurements[position].left;
      var lineRight = this._tabsMeasurements[position].right;

      if (position < tabCount - 1) {
        var nextTabLeft = this._tabsMeasurements[position + 1].left;
        var nextTabRight = this._tabsMeasurements[position + 1].right;
        var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;
        var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;

        this.state._leftTabUnderline.setValue(newLineLeft);

        this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);
      } else {
        this.state._leftTabUnderline.setValue(lineLeft);

        this.state._widthTabUnderline.setValue(lineRight - lineLeft);
      }
    },
    renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {
      var _this$props = this.props,
          activeTextColor = _this$props.activeTextColor,
          inactiveTextColor = _this$props.inactiveTextColor,
          textStyle = _this$props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(Button, {
        key: name + "_" + page,
        accessible: true,
        accessibilityLabel: name,
        accessibilityTraits: "button",
        onPress: function onPress() {
          return onPressHandler(page);
        },
        onLayout: onLayoutHandler
      }, React.createElement(View, {
        style: [styles.tab, this.props.tabStyle]
      }, React.createElement(Text, {
        style: [{
          color: textColor,
          fontWeight: fontWeight
        }, textStyle]
      }, name)));
    },
    measureTab: function measureTab(page, event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          x = _event$nativeEvent$la.x,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this._tabsMeasurements[page] = {
        left: x,
        right: x + width,
        width: width,
        height: height
      };
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    },
    render: function render() {
      var _this = this;

      var tabUnderlineStyle = {
        position: 'absolute',
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var dynamicTabUnderline = {
        left: this.state._leftTabUnderline,
        width: this.state._widthTabUnderline
      };
      return React.createElement(View, {
        style: [styles.container, {
          backgroundColor: this.props.backgroundColor
        }, this.props.style],
        onLayout: this.onContainerLayout
      }, React.createElement(ScrollView, {
        ref: function ref(scrollView) {
          _this._scrollView = scrollView;
        },
        horizontal: true,
        showsHorizontalScrollIndicator: false,
        showsVerticalScrollIndicator: false,
        directionalLockEnabled: true,
        bounces: false,
        scrollsToTop: false
      }, React.createElement(View, {
        style: [styles.tabs, {
          width: this.state._containerWidth
        }, this.props.tabsContainerStyle],
        ref: 'tabContainer',
        onLayout: this.onTabContainerLayout
      }, this.props.tabs.map(function (name, page) {
        var isTabActive = _this.props.activeTab === page;
        var renderTab = _this.props.renderTab || _this.renderTab;
        return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page));
      }), React.createElement(Animated.View, {
        style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle]
      }))));
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (JSON.stringify(this.props.tabs) !== JSON.stringify(nextProps.tabs) && this.state._containerWidth) {
        this.setState({
          _containerWidth: null
        });
      }
    },
    onTabContainerLayout: function onTabContainerLayout(e) {
      this._tabContainerMeasurements = e.nativeEvent.layout;
      var width = this._tabContainerMeasurements.width;

      if (width < WINDOW_WIDTH) {
        width = WINDOW_WIDTH;
      }

      this.setState({
        _containerWidth: width
      });
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    },
    onContainerLayout: function onContainerLayout(e) {
      this._containerMeasurements = e.nativeEvent.layout;
      this.updateView({
        value: this.props.scrollValue.__getValue()
      });
    }
  });
  module.exports = ScrollableTabBar;
  var styles = StyleSheet.create({
    tab: {
      height: 49,
      alignItems: 'center',
      justifyContent: 'center',
      paddingLeft: 20,
      paddingRight: 20
    },
    container: {
      height: 50,
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    },
    tabs: {
      flexDirection: 'row',
      justifyContent: 'space-around'
    }
  });
},11072,[10297,10033,10318,10456,11069]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var styles = _reactNative.StyleSheet.create({
    tab: {
      height: _LHCommonFunction.LHUiUtils.GetPx(45),
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingHorizontal: _LHCommonFunction.LHUiUtils.GetPx(4)
    },
    tabBg: {
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    tabs: {
      flexDirection: 'row',
      height: _LHCommonFunction.LHUiUtils.GetPx(45),
      borderWidth: 0,
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(8)
    }
  });

  var LHAlarmTriggleDeviceTabBar = function (_Component) {
    (0, _inherits2.default)(LHAlarmTriggleDeviceTabBar, _Component);

    function LHAlarmTriggleDeviceTabBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHAlarmTriggleDeviceTabBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHAlarmTriggleDeviceTabBar).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHAlarmTriggleDeviceTabBar, [{
      key: "renderTab",
      value: function renderTab(name, page, isTabActive, onPressHandler) {
        var _this$props = this.props,
            activeColor = _this$props.activeColor,
            inactiveColor = _this$props.inactiveColor;
        var textColor = isTabActive ? activeColor : inactiveColor;
        if (name === null) return null;
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          key: page,
          activeOpacity: 1,
          onPress: function onPress() {
            onPressHandler(page);
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('tabItem_' + page),
          testID: 'tabItem_' + page
        }, _react.default.createElement(_reactNative.View, {
          style: styles.tab
        }, _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [{
            color: textColor,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(14.6),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(21)
          }]
        }, name)));
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            tabs = _this$props2.tabs,
            goToPage = _this$props2.goToPage,
            activeTab = _this$props2.activeTab;
        return _react.default.createElement(_reactNative.View, {
          style: styles.tabBg
        }, _react.default.createElement(_reactNative.View, {
          style: styles.tabs
        }, tabs.map(function (name, page) {
          var isTabActive = activeTab === page;
          return _this2.renderTab(name, page, isTabActive, goToPage);
        })));
      }
    }]);
    return LHAlarmTriggleDeviceTabBar;
  }(_react.Component);

  exports.default = LHAlarmTriggleDeviceTabBar;
},11075,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10004,10074,10871]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCardBase.default;
  exports.default = _default;
},11078,[14305,11081]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[11]);

  var _LHSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var styles = _reactNative.StyleSheet.create({
    defaultCardStyle: {
      height: _LHCommonFunction.LHUiUtils.GetPx(80),
      marginTop: 0,
      width: width - _LHCommonFunction.LHUiUtils.GetPx(12) * 2,
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(12),
      backgroundColor: 'transparent'
    },
    innerViewWrap: {
      height: '100%'
    },
    borderLine: {
      backgroundColor: _LHCommonFunction.LHUiColorUtils.getColor('#e5e5e5', 'rgba(255,255,255,0.1)'),
      height: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth + 0.01,
      position: 'absolute',
      left: _LHCommonFunction.LHUiUtils.GetPx(20),
      right: _LHCommonFunction.LHUiUtils.GetPx(20),
      top: 0
    },
    itemWrap: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    icon: {
      width: _LHCommonFunction.LHUiUtils.GetPx(40),
      height: _LHCommonFunction.LHUiUtils.GetPx(40),
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(20),
      marginRight: _LHCommonFunction.LHUiUtils.GetPx(13)
    },
    title: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(15.5),
      fontWeight: 'bold',
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(20),
      letterSpacing: -0.14
    },
    subTitle: {
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16),
      letterSpacing: -0.11,
      color: _LHCommonFunction.LHUiColorUtils.colorGrayLight
    },
    textWrap: {
      flex: 1
    },
    rightIcon: {
      width: _LHCommonFunction.LHUiUtils.GetPx(24),
      height: _LHCommonFunction.LHUiUtils.GetPx(24)
    },
    rightIconWrap: {
      paddingRight: _LHCommonFunction.LHUiUtils.GetPx(18),
      height: '100%',
      justifyContent: 'center'
    }
  });

  var LHCardBase = function (_React$Component) {
    (0, _inherits2.default)(LHCardBase, _React$Component);

    function LHCardBase(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHCardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHCardBase).call(this, props));
      _this.state = {
        cardHeight: 0
      };
      return _this;
    }

    (0, _createClass2.default)(LHCardBase, [{
      key: "renderItem",
      value: function renderItem(item, index, len) {
        var _this2 = this;

        var borderLineStyle = this.props.borderLineStyle;
        var borderTop = index !== 0 ? _react.default.createElement(_reactNative.View, {
          style: [styles.borderLine, borderLineStyle]
        }) : null;
        var subTitle = typeof item.subTitle !== 'undefined' ? _react.default.createElement(_LHText.default, {
          numberOfLines: item.subTitleNumberOfLines || 1,
          style: [styles.subTitle, item.subTitleStyle],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel((item.testID || '') + '_subTitle'),
          testID: (item.testID || '') + '_subTitle'
        }, item.subTitle) : null;
        var rightIcon = item.hideRightIcon || item.hasSwitch ? null : _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: [styles.rightIcon, item.rightIconStyle],
          source: item.rightIconSource || (item.rightIconType === 'close' ? _LHCommonFunction.LHUiColorUtils.isDark ? _$$_REQUIRE(_dependencyMap[14]) : _$$_REQUIRE(_dependencyMap[15]) : _$$_REQUIRE(_dependencyMap[16]))
        });
        var rightIconWrap = item.rightIconPress ? _react.default.createElement(_reactNative.TouchableHighlight, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel((item.testID || '') + 'RightIcon'),
          testID: (item.testID || '') + 'RightIcon',
          style: [styles.rightIconWrap, item.rightIconWrapStyle, {
            opacity: item.disabled ? 0.3 : 1
          }],
          underlayColor: "transparent",
          activeOpacity: 1,
          onPress: function onPress() {
            item.rightIconPress();
          }
        }, rightIcon) : item.hasSwitch ? null : _react.default.createElement(_reactNative.View, {
          style: [styles.rightIconWrap, item.rightIconWrapStyle, {
            opacity: item.disabled ? 0.3 : 1
          }]
        }, rightIcon);
        var rightSwitch = item.hasSwitch ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            height: '100%',
            justifyContent: 'center',
            paddingRight: _LHCommonFunction.LHUiUtils.GetPx(20),
            marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12),
            alignItems: 'flex-end'
          },
          activeOpacity: 1,
          onPress: function onPress() {}
        }, _react.default.createElement(_LHSwitch.default, {
          testID: (item.testID || '') + 'CardSwitch',
          style: {
            width: _LHCommonFunction.LHUiUtils.GetPx(44),
            height: _LHCommonFunction.LHUiUtils.GetPx(24)
          },
          disabled: item.switchDisabled || item.disabled || false,
          tintColor: item.switchTintColor,
          onTintColor: item.switchColor || _LHCommonFunction.LHUiUtils.MiJiaBlue,
          onValueChange: function onValueChange(state) {
            if (typeof item.onValueChange === 'function') item.onValueChange(state);
          },
          value: item.switchValue,
          ref: function ref(switchBtn) {
            _this2.switchBtn = switchBtn;
          }
        })) : null;
        var icon = item.iconSource ? !item.hasNest ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, item.iconResizeMode || {
          resizeMode: 'contain'
        }, {
          fadeDuration: 0,
          style: [styles.icon, item.iconStyle, {
            opacity: item.disabled ? 0.3 : 1
          }],
          source: item.iconSource
        })) : _react.default.createElement(_reactNative.View, {
          style: [styles.icon, {
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(20),
            alignItems: 'center',
            justifyContent: 'center',
            opacity: item.disabled ? 0.3 : 1
          }, item.nestWrapperStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, item.iconResizeMode || {
          resizeMode: 'contain'
        }, {
          fadeDuration: 0,
          style: [{
            width: _LHCommonFunction.LHUiUtils.GetPx(24),
            height: _LHCommonFunction.LHUiUtils.GetPx(24)
          }, item.iconStyle],
          source: item.iconSource
        }))) : null;

        var textWrap = _react.default.createElement(_reactNative.View, {
          style: [styles.textWrap, item.iconSource ? null : {
            marginLeft: _LHCommonFunction.LHUiUtils.GetPx(20)
          }, item.textWrapStyle, {
            opacity: item.disabled ? 0.3 : 1
          }],
          onLayout: function onLayout(e) {
            var _this2$props = _this2.props,
                autoHeight = _this2$props.autoHeight,
                paddingVertical = _this2$props.paddingVertical;

            if (autoHeight) {
              _this2.setState({
                cardHeight: e.nativeEvent.layout.height + (paddingVertical || 0) * 2
              });
            }
          }
        }, _react.default.createElement(_LHText.default, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel((item.testID || '') + '_title'),
          testID: (item.testID || '') + '_title',
          numberOfLines: item.titleNumberOfLines || 1,
          style: [styles.title, {
            color: _LHCommonFunction.LHUiColorUtils.colorBlack
          }, item.titleStyle]
        }, item.title || ''), subTitle);

        var _this$props = this.props,
            cardStyle = _this$props.cardStyle,
            activeOpacity = _this$props.activeOpacity;
        var cardBackgroundColor = item.disabled ? _LHCommonFunction.LHUiColorUtils.colorCardDefaultBackgroundDisable : _LHCommonFunction.LHUiColorUtils.colorCardDefaultBackgroundNormal;
        cardBackgroundColor = cardStyle && cardStyle.backgroundColor || cardBackgroundColor;
        var content = item.onPress ? _react.default.createElement(_reactNative.TouchableHighlight, {
          disabled: item.disabled || false,
          key: 'item_' + index,
          style: [styles.itemWrap, {
            height: 1 / len * 100 + '%',
            backgroundColor: cardBackgroundColor
          }, item.wrapStyle],
          underlayColor: cardBackgroundColor,
          activeOpacity: activeOpacity || 1,
          onPress: function onPress() {
            item.onPress();
          },
          onLongPress: function onLongPress() {
            if (typeof item.onLongPress === 'function') item.onLongPress();
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(item.testID || ''),
          testID: item.testID || ''
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.itemWrap, {
            height: '100%',
            flex: 1
          }, item.wrapContentStyle]
        }, borderTop, icon, textWrap, rightSwitch, rightIconWrap)) : _react.default.createElement(_reactNative.View, {
          key: 'item_' + index,
          style: [styles.itemWrap, {
            height: 1 / len * 100 + '%',
            backgroundColor: cardBackgroundColor
          }, item.wrapStyle]
        }, borderTop, icon, textWrap, rightSwitch, rightIconWrap);
        return content;
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        var _this3 = this;

        var _this$props2 = this.props,
            data = _this$props2.data,
            innerViewContainerStyle = _this$props2.innerViewContainerStyle;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.innerViewWrap, {
            overflow: 'hidden',
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(12)
          }, innerViewContainerStyle]
        }, data.map(function (item, index) {
          return _this3.renderItem(item, index, data.length);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            visible = _this$props3.visible,
            cardStyle = _this$props3.cardStyle,
            showShadow = _this$props3.showShadow,
            autoHeight = _this$props3.autoHeight;
        var cardHeight = this.state.cardHeight;

        var style = _LHCommonFunction.CommonMethod.DeepClone(cardStyle || {}, {});

        if (style.backgroundColor) delete style.backgroundColor;
        return _react.default.createElement(_Card.default, {
          key: cardHeight,
          innerView: this.renderInnerView(),
          visible: visible,
          cardStyle: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.flatten(styles.defaultCardStyle), style || {}, autoHeight ? {
            height: cardHeight
          } : {}),
          showShadow: showShadow
        });
      }
    }]);
    return LHCardBase;
  }(_react.default.Component);

  LHCardBase.initialState = {};
  LHCardBase.defaultProps = {
    visible: true,
    data: [],
    showShadow: true
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHCardBase);

  exports.default = _default;
},11081,[14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,10377,10004,10859,10871,11084,11087,11090]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "9a3bb5c327f04e5db9301c6085316076",
    "name": "card_close_dark",
    "type": "png"
  });
},11084,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "4778514381f3cab26a34b331cae11d17",
    "name": "default_card_close",
    "type": "png"
  });
},11087,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Modules/Mijia-CommonUI-Modules/Resources",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "26511023623e35f5ec0b789864d45dad",
    "name": "homepage_card_enter",
    "type": "png"
  });
},11090,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHSelectCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHSelectCard.default;
  exports.default = _default;
},11093,[14305,11096]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var styles = _reactNative.StyleSheet.create({
    defaultCardStyle: {
      height: _LHCommonFunction.LHUiUtils.GetPx(80, 360, 320),
      marginTop: 0,
      width: width - _LHCommonFunction.LHUiUtils.GetPx(12, 360, 320) * 2,
      marginLeft: _LHCommonFunction.LHUiUtils.GetPx(12, 360, 320),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(12, 360, 320),
      backgroundColor: 'transparent'
    },
    innerViewWrap: {
      height: '100%'
    }
  });

  var titleHeight = _LHCommonFunction.LHUiUtils.GetPx(53, 360, 320);

  var LHSelectCard = function (_React$Component) {
    (0, _inherits2.default)(LHSelectCard, _React$Component);

    function LHSelectCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSelectCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSelectCard).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHSelectCard, [{
      key: "getDate",
      value: function getDate(data) {
        var maxNum = this.props.maxNum;
        if (data.length < maxNum + 1) return [data];
        var groupData = {};
        var index = -1;
        var len = Math.ceil(data.length / maxNum) * maxNum;

        for (var i = 0; i < len; i += 1) {
          if (i % maxNum === 0) {
            index += 1;
            groupData[index] = [];
          }

          groupData[index].push(data[i] || null);
        }

        var result = [];

        for (var _i = 0; _i <= index; _i += 1) {
          result[_i] = groupData[_i];
        }

        return result;
      }
    }, {
      key: "getCardHeight",
      value: function getCardHeight() {
        var _this$props = this.props,
            title = _this$props.title,
            data = _this$props.data,
            maxNum = _this$props.maxNum;
        var dataTotalLength = data.length;
        var contentHeight = dataTotalLength > 3 ? (_LHCommonFunction.LHUiUtils.GetPx(77, 360, 320) + _LHCommonFunction.LHUiUtils.GetPx(25, 360, 320)) * Math.ceil(dataTotalLength / maxNum) : _LHCommonFunction.LHUiUtils.GetPx(84, 360, 320) + (dataTotalLength === 2 ? _LHCommonFunction.LHUiUtils.GetPx(27, 360, 320) : _LHCommonFunction.LHUiUtils.GetPx(25, 360, 320));
        return contentHeight + (title ? titleHeight + _LHCommonFunction.LHUiUtils.GetPx(8, 360, 320) : _LHCommonFunction.LHUiUtils.GetPx(30, 360, 320));
      }
    }, {
      key: "renderItem",
      value: function renderItem(item, rowIndex, index, dataTotalLength) {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            selectIndex = _this$props2.selectIndex,
            activeColor = _this$props2.activeColor,
            activeOpacity = _this$props2.activeOpacity,
            maxNum = _this$props2.maxNum;
        var itemWidth = dataTotalLength < maxNum ? _LHCommonFunction.LHUiUtils.GetPx(86, 360, 320) : maxNum > 4 ? _LHCommonFunction.LHUiUtils.GetPx(56, 360, 320) : _LHCommonFunction.LHUiUtils.GetPx(74, 360, 320);
        var iconWidth = dataTotalLength < maxNum ? _LHCommonFunction.LHUiUtils.GetPx(56, 360, 320) : _LHCommonFunction.LHUiUtils.GetPx(50, 360, 320);

        if (!item) {
          return _react.default.createElement(_reactNative.View, {
            key: 'cardItem_' + index,
            style: {
              width: itemWidth
            }
          });
        }

        var icon = item.activeIcon || item.icon ? !item.hasNest ? _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          style: [{
            width: iconWidth,
            height: iconWidth
          }, item.iconStyle],
          source: selectIndex === rowIndex * maxNum + index ? item.activeIcon || item.icon : item.icon
        }) : _react.default.createElement(_reactNative.View, {
          style: [{
            width: maxNum > 4 ? (0, _LHCommonFunction.dp)(44) : (0, _LHCommonFunction.dp)(48),
            height: maxNum > 4 ? (0, _LHCommonFunction.dp)(44) : (0, _LHCommonFunction.dp)(48)
          }, {
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(24),
            alignItems: 'center',
            justifyContent: 'center'
          }, item.nestWrapperStyle]
        }, _react.default.createElement(_reactNative.Image, {
          resizeMode: "contain",
          fadeDuration: 0,
          style: [{
            width: maxNum > 4 ? (0, _LHCommonFunction.dp)(22) : (0, _LHCommonFunction.dp)(24),
            height: maxNum > 4 ? (0, _LHCommonFunction.dp)(22) : (0, _LHCommonFunction.dp)(24)
          }, item.iconStyle],
          source: selectIndex === rowIndex * maxNum + index ? item.activeIcon || item.icon : item.icon
        })) : null;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: typeof activeOpacity !== 'undefined' ? activeOpacity : 1,
          key: 'cardItem_' + index,
          style: {
            width: itemWidth,
            alignItems: 'center',
            marginBottom: _LHCommonFunction.LHUiUtils.GetPx(25, 360, 320)
          },
          disabled: disabled,
          onPress: function onPress() {
            if (typeof item.onPress === 'function') {
              item.onPress(rowIndex * maxNum + index);
            }
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel(item.testID),
          testID: item.testID
        }, _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center'
          }
        }, icon, _react.default.createElement(_LHText.default, {
          numberOfLines: item.numberOfLines || 1,
          style: [{
            color: selectIndex === rowIndex * maxNum + index ? activeColor : _LHCommonFunction.LHUiColorUtils.colorGrayLight,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(13),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(18),
            letterSpacing: 0,
            textAlign: 'center',
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(8, 360, 320)
          }, item.textStyle]
        }, item.text)));
      }
    }, {
      key: "renderRow",
      value: function renderRow(data, index, dataTotalLength) {
        var _this2 = this;

        var _this$props3 = this.props,
            title = _this$props3.title,
            maxNum = _this$props3.maxNum,
            innerRowWrapStyle = _this$props3.innerRowWrapStyle;
        return _react.default.createElement(_reactNative.View, {
          key: 'rowItem_' + index,
          style: [{
            marginTop: index === 0 ? title ? _LHCommonFunction.LHUiUtils.GetPx(dataTotalLength < maxNum ? 10 : 8, 360, 320) : _LHCommonFunction.LHUiUtils.GetPx(28, 360, 320) : 0,
            flexDirection: 'row',
            flexWrap: 'wrap',
            justifyContent: index === 0 && dataTotalLength === 1 ? 'center' : 'space-between',
            paddingHorizontal: dataTotalLength === 2 ? "20.414201183431953%" : dataTotalLength === 3 ? "8.875739644970414%" : "2.366863905325444%"
          }, innerRowWrapStyle]
        }, data.map(function (item, itemIndex) {
          return _this2.renderItem(item, index, itemIndex, dataTotalLength);
        }));
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        var _this3 = this;

        var _this$props4 = this.props,
            data = _this$props4.data,
            title = _this$props4.title,
            subTitle = _this$props4.subTitle,
            selectIndex = _this$props4.selectIndex,
            disabled = _this$props4.disabled,
            titleStyle = _this$props4.titleStyle,
            subTitleStyle = _this$props4.subTitleStyle,
            hasSwitch = _this$props4.hasSwitch,
            switchDisabled = _this$props4.switchDisabled,
            switchTintColor = _this$props4.switchTintColor,
            switchColor = _this$props4.switchColor,
            switchValue = _this$props4.switchValue,
            innerViewWrapStyle = _this$props4.innerViewWrapStyle,
            onSwitchValueChange = _this$props4.onSwitchValueChange,
            titleLineStyle = _this$props4.titleLineStyle;
        var dataTotalLength = data.length;
        var pageData = this.getDate(data);
        var selectText = typeof subTitle !== 'undefined' ? subTitle : typeof selectIndex !== 'undefined' && data[selectIndex] && data[selectIndex].text;
        var titleElement = title ? _react.default.createElement(_reactNative.View, {
          style: {
            height: titleHeight,
            flexDirection: 'row',
            paddingLeft: _LHCommonFunction.LHUiUtils.GetPx(19),
            paddingRight: _LHCommonFunction.LHUiUtils.GetPx(hasSwitch ? 18 : 19),
            alignItems: 'center'
          }
        }, _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [{
            color: _LHCommonFunction.LHUiColorUtils.colorGrayHeavier,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(14),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
            letterSpacing: 0,
            maxWidth: '70%'
          }, titleStyle]
        }, title), selectText ? _react.default.createElement(_reactNative.View, {
          style: [{
            width: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
            height: _LHCommonFunction.LHUiUtils.GetPx(14),
            marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(6),
            backgroundColor: _LHCommonFunction.LHUiColorUtils.getColorBlackWithOpaticy(0.3)
          }, titleLineStyle]
        }) : null, _react.default.createElement(_LHText.default, {
          numberOfLines: 1,
          style: [{
            flex: 1,
            color: _LHCommonFunction.LHUiColorUtils.colorGrayNormal,
            fontSize: _LHCommonFunction.LHUiUtils.GetPx(12),
            lineHeight: _LHCommonFunction.LHUiUtils.GetPx(16),
            letterSpacing: 0,
            opacity: selectText ? 1 : 0
          }, subTitleStyle]
        }, selectText), hasSwitch ? _react.default.createElement(_reactNative.View, {
          style: {
            paddingBottom: _LHCommonFunction.LHUiUtils.GetPx(2)
          }
        }, _react.default.createElement(_LHSwitch.default, {
          disabled: switchDisabled || disabled || false,
          tintColor: switchTintColor,
          onTintColor: switchColor || _LHCommonFunction.LHUiUtils.MiJiaBlue,
          onValueChange: function onValueChange(state) {
            if (typeof onSwitchValueChange === 'function') onSwitchValueChange(state);
          },
          value: switchValue
        })) : null) : null;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.innerViewWrap, {
            overflow: 'hidden',
            borderRadius: _LHCommonFunction.LHUiUtils.GetPx(12, 360, 320),
            opacity: disabled ? 0.3 : 1,
            backgroundColor: _LHCommonFunction.LHUiColorUtils.colorCardDefaultBackgroundNormal
          }, innerViewWrapStyle]
        }, titleElement, pageData.map(function (item, index) {
          return _this3.renderRow(item, index, dataTotalLength);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props5 = this.props,
            visible = _this$props5.visible,
            cardStyle = _this$props5.cardStyle,
            data = _this$props5.data,
            cardHeight = _this$props5.cardHeight;

        if (data.length < 1) {
          return _react.default.createElement(_reactNative.View, null);
        }

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          visible: visible,
          cardStyle: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.flatten(styles.defaultCardStyle), cardStyle || {}, {
            height: cardHeight || this.getCardHeight()
          }),
          showShadow: true
        });
      }
    }]);
    return LHSelectCard;
  }(_react.default.Component);

  LHSelectCard.defaultProps = {
    visible: true,
    data: [],
    disabled: false,
    activeColor: '#5FA7FE',
    maxNum: 4
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSelectCard);

  exports.default = _default;
},11096,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10377,10004,10871,10859]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHStringModalPicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHStringModalPicker.default;
  exports.default = _default;
},11099,[14305,11102]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _ui = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var _LHText = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height;

  var styles = _reactNative.StyleSheet.create({
    backgroundMask: {
      position: 'absolute',
      backgroundColor: 'rgba(0,0,0,0.4)',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
    modal: {
      flex: 1
    },
    modalMask: {
      flex: 1
    },
    modalContent: {
      overflow: 'hidden',
      width: '100%',
      borderTopRightRadius: (0, _LHCommonFunction.dp)(20),
      borderTopLeftRadius: (0, _LHCommonFunction.dp)(20),
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      paddingBottom: (0, _LHCommonFunction.dp)(24) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      paddingTop: (0, _LHCommonFunction.dp)(10)
    },
    row: {
      flexDirection: 'row'
    },
    title: {
      fontSize: (0, _LHCommonFunction.dp)(16.6),
      lineHeight: (0, _LHCommonFunction.dp)(20),
      textAlign: 'center',
      fontWeight: 'bold',
      marginHorizontal: (0, _LHCommonFunction.dp)(10),
      marginVertical: (0, _LHCommonFunction.dp)(15)
    },
    buttonsWrap: {
      width: '100%',
      paddingHorizontal: (0, _LHCommonFunction.dp)(27),
      flexDirection: 'row'
    }
  });

  var LHStringModalPicker = function (_React$Component) {
    (0, _inherits2.default)(LHStringModalPicker, _React$Component);
    (0, _createClass2.default)(LHStringModalPicker, null, [{
      key: "defaultValueIsInDataSource",
      value: function defaultValueIsInDataSource(dataSource, defaultValue) {
        if (typeof defaultValue === 'undefined') return -1;

        for (var i = 0, len = dataSource.length; i < len; i += 1) {
          if (defaultValue === dataSource[i]) return i;
        }

        return -1;
      }
    }]);

    function LHStringModalPicker(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHStringModalPicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHStringModalPicker).call(this, props, context));
      var _this$props = _this.props,
          show = _this$props.show,
          defaultValue = _this$props.defaultValue,
          autoCloseWhenSelected = _this$props.autoCloseWhenSelected,
          animated = _this$props.animated,
          maskClickClose = _this$props.maskClickClose,
          onRequestClose = _this$props.onRequestClose,
          onSelected = _this$props.onSelected,
          onClose = _this$props.onClose,
          dataSource = _this$props.dataSource;
      var value = defaultValue;

      if (LHStringModalPicker.defaultValueIsInDataSource(dataSource, defaultValue) === -1) {
        value = dataSource[0];
      }

      _this.state = {
        value: {
          newValue: value
        },
        show: show,
        autoCloseWhenSelected: autoCloseWhenSelected,
        animated: animated,
        maskClickClose: maskClickClose,
        onRequestClose: onRequestClose,
        onSelected: onSelected,
        onClose: onClose,
        slideValue: new _reactNative.Animated.Value(0),
        hideValue: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(LHStringModalPicker, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(data) {
        var show = this.state.show;

        if (typeof data.show !== 'undefined') {
          if (show && !data.show) {
            this.close();
          } else {
            var value = data.defaultValue;

            if (LHStringModalPicker.defaultValueIsInDataSource(data.dataSource, data.defaultValue) === -1) {
              value = data.dataSource[0];
            }

            this.setState({
              show: data.show,
              value: {
                newValue: value
              }
            });
          }
        }

        if (!show && data.show) this.showModalAnimate();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "onSelected",
      value: function onSelected() {
        var _this$state = this.state,
            autoCloseWhenSelected = _this$state.autoCloseWhenSelected,
            onSelected = _this$state.onSelected,
            value = _this$state.value;
        if (autoCloseWhenSelected) this.close();
        onSelected(value);
      }
    }, {
      key: "calcel",
      value: function calcel() {
        var onRequestClose = this.state.onRequestClose;
        onRequestClose(this);
      }
    }, {
      key: "closeWithoutAnimate",
      value: function closeWithoutAnimate() {
        var onClose = this.state.onClose;
        this.setState({
          show: false
        });
        onClose();
      }
    }, {
      key: "close",
      value: function close() {
        var animated = this.state.animated;

        if (animated) {
          this.hideModalAnimate();
        } else {
          this.closeWithoutAnimate();
          this.isHiding = false;
        }
      }
    }, {
      key: "maskClick",
      value: function maskClick() {
        var maskClickClose = this.state.maskClickClose;
        if (this.isHiding) return;
        this.isHiding = true;
        if (maskClickClose) this.close();
      }
    }, {
      key: "hideModalAnimate",
      value: function hideModalAnimate() {
        var _this2 = this;

        var _this$state2 = this.state,
            slideValue = _this$state2.slideValue,
            hideValue = _this$state2.hideValue;
        slideValue.setValue(1);
        hideValue.setValue(0);

        _reactNative.Animated.parallel([_reactNative.Animated.timing(slideValue, {
          toValue: 0,
          duration: 500,
          easing: _reactNative.Easing.bezier(0.445, 0.05, 0.55, 0.95)
        }).start(), _reactNative.Animated.timing(hideValue, {
          toValue: 0,
          duration: 320,
          easing: _reactNative.Easing.bezier(0.42, 0, 0.58, 1)
        }).start(function (e) {
          if (e.finished) {
            _this2.closeWithoutAnimate();

            _this2.isHiding = false;
          }
        })]);
      }
    }, {
      key: "showModalAnimate",
      value: function showModalAnimate() {
        var slideValue = this.state.slideValue;
        slideValue.setValue(0);

        _reactNative.Animated.timing(slideValue, {
          toValue: 1,
          duration: 500,
          easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99)
        }).start();
      }
    }, {
      key: "renderButton",
      value: function renderButton(buttons) {
        var isDark = this.props.isDark;
        if (!buttons || buttons.length === 0 || buttons.length > 2) return null;
        return _react.default.createElement(_reactNative.View, {
          style: styles.buttonsWrap
        }, buttons.map(function (button, index) {
          return _react.default.createElement(_LHButton.default, {
            key: 'button_' + index,
            testID: button.testID || '',
            btnText: button.text,
            style: [{
              flex: 1,
              backgroundColor: isDark ? 'rgba(255,255,255,0.2)' : '#F5F5F5'
            }, index > 0 ? {
              marginLeft: (0, _LHCommonFunction.dp)(14)
            } : null, button.btnStyle],
            btnTextStyle: [{
              color: isDark ? '#fff' : '#4C4C4C'
            }, index > 0 ? {
              color: isDark ? '#32bac0' : '#25a9af'
            } : null, button.style],
            pressBackgroundColor: isDark ? 'rgba(255,255,255,0.2)' : '#F5F5F5',
            onPress: function onPress() {
              if (typeof button.callback === 'function') button.callback();
            }
          });
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state3 = this.state,
            show = _this$state3.show,
            slideValue = _this$state3.slideValue;
        var _this$props2 = this.props,
            title = _this$props2.title,
            unit = _this$props2.unit,
            dataSource = _this$props2.dataSource,
            defaultValue = _this$props2.defaultValue,
            onChange = _this$props2.onChange,
            okTextStyle = _this$props2.okTextStyle,
            okBtnStyle = _this$props2.okBtnStyle,
            cancelStyle = _this$props2.cancelStyle,
            cancelBtnStyle = _this$props2.cancelBtnStyle,
            innerStyle = _this$props2.innerStyle,
            titleNumberOfLines = _this$props2.titleNumberOfLines,
            isDark = _this$props2.isDark;
        var pickerInnerStyle = {
          lineColor: '#26000000',
          textColor: isDark ? '#999999' : '#666666',
          selectTextColor: isDark ? '#ffffff' : '#000000',
          fontSize: (0, _LHCommonFunction.dp)(17),
          selectFontSize: (0, _LHCommonFunction.dp)(19),
          rowHeight: (0, _LHCommonFunction.dp)(44.8),
          selectBgColor: '#ffffff00',
          unitFontSize: (0, _LHCommonFunction.dp)(10),
          unitTextColor: isDark ? '#ffffff' : '#000000'
        };
        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: show,
          onRequestClose: function onRequestClose() {
            _this3.close();
          },
          onShow: function onShow() {}
        }, _react.default.createElement(_reactNative.View, {
          style: styles.backgroundMask,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHStringModalPicker'),
          testID: "LHStringModalPicker"
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.modal, {
            transform: [{
              translateY: slideValue.interpolate({
                inputRange: [0, 1],
                outputRange: [height, 0]
              })
            }]
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            _this3.maskClick();
          },
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('mask'),
          testID: "mask"
        }, _react.default.createElement(_reactNative.View, {
          style: styles.modalMask
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modalContent, {
            backgroundColor: isDark ? '#222224' : _LHCommonFunction.LHUiUtils.MiJiaWhite
          }]
        }, _react.default.createElement(_LHText.default, {
          numberOfLines: titleNumberOfLines || 1,
          style: [styles.title, {
            color: isDark ? '#fff' : '#000'
          }]
        }, title), _react.default.createElement(_reactNative.View, {
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('stringSpinnerWrap'),
          testID: "stringSpinnerWrap"
        }, _react.default.createElement(_ui.StringSpinner, {
          style: {
            width: '100%',
            height: (0, _LHCommonFunction.dp)(224)
          },
          visible: show,
          dataSource: dataSource,
          defaultValue: defaultValue,
          unit: unit,
          pickerInnerStyle: (0, _objectSpread2.default)({}, pickerInnerStyle, _reactNative.StyleSheet.flatten(innerStyle || {})),
          onValueChanged: function onValueChanged(data) {
            _this3.setState({
              value: data
            });

            if (typeof onChange === 'function') onChange(data);
          }
        })), this.renderButton([{
          text: _LHCommonFunction.LHCommonLocalizableString.common_cancel,
          style: cancelStyle,
          btnStyle: cancelBtnStyle,
          testID: 'cancel',
          callback: function callback() {
            _this3.calcel();
          }
        }, {
          text: _LHCommonFunction.LHCommonLocalizableString.common_ok,
          style: okTextStyle,
          btnStyle: okBtnStyle,
          testID: 'ok',
          callback: function callback() {
            _this3.onSelected();
          }
        }])))));
      }
    }]);
    return LHStringModalPicker;
  }(_react.default.Component);

  LHStringModalPicker.defaultProps = {
    show: false,
    defaultValue: '',
    animated: true,
    maskClickClose: true,
    autoCloseWhenSelected: true,
    onRequestClose: function onRequestClose(modal) {
      modal.close();
    },
    onSelected: function onSelected() {},
    onClose: function onClose() {},
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };
  var _default = LHStringModalPicker;
  exports.default = _default;
},11102,[14305,14314,14320,14371,14377,14323,14386,10297,10033,10230,10004,10871,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _AlertTimeItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _AlertTimeItem.default;
  exports.default = _default;
},11105,[14305,11108]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[0]);

  var alertTimeItem = {
    alwaysRinging: {
      str: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_alwaysRinging,
      value: 100000000
    },
    tenMinutes: {
      str: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_minutes.replace('{value}', 10),
      value: 600
    },
    oneMinute: {
      str: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_minutes.replace('{value}', 1),
      value: 60
    },
    thirtySeconds: {
      str: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', 30),
      value: 30
    },
    mute: {
      str: _LHCommonFunction.LHCommonLocalizableString.common_voice_mute,
      value: 0
    },
    custom: {
      str: _LHCommonFunction.LHCommonLocalizableString.common_date_selfdefine,
      value: 0
    },
    getAlarmDurationStr: function getAlarmDurationStr(activeIndex) {
      if (activeIndex === undefined) {
        return alertTimeItem.alwaysRinging.str;
      }

      if (activeIndex >= alertTimeItem.alwaysRinging.value) {
        return alertTimeItem.alwaysRinging.str;
      } else if (activeIndex === alertTimeItem.tenMinutes.value) {
        return alertTimeItem.tenMinutes.str;
      } else if (activeIndex === alertTimeItem.oneMinute.value) {
        return alertTimeItem.oneMinute.str;
      } else if (activeIndex === alertTimeItem.thirtySeconds.value) {
        return alertTimeItem.thirtySeconds.str;
      } else if (activeIndex === alertTimeItem.mute.value) {
        return alertTimeItem.mute.str;
      } else {
        return _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', activeIndex);
      }
    },
    isCustom: function isCustom(activeIndex) {
      return activeIndex < alertTimeItem.alwaysRinging.value && activeIndex !== alertTimeItem.tenMinutes.value && activeIndex !== alertTimeItem.oneMinute.value && activeIndex !== alertTimeItem.thirtySeconds.value && activeIndex !== alertTimeItem.mute.value;
    }
  };
  var _default = alertTimeItem;
  exports.default = _default;
},11108,[10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LHCommonSettingPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _LHCommonSettingPage.default;
  exports.default = _default;
},11111,[14305,11114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[10]);

  var first_options = _CommonSetting.SETTING_KEYS.first_options,
      second_options = _CommonSetting.SETTING_KEYS.second_options;

  var isShared = _LHCommonFunction.LHDeviceAuthorityUtils.isShared();

  var LHCommonSettingPage = function (_React$Component) {
    (0, _inherits2.default)(LHCommonSettingPage, _React$Component);

    function LHCommonSettingPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHCommonSettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHCommonSettingPage).call(this, props));
      _this.state = {
        isHomeKitDevice: false,
        pairedHomeKit: false,
        policyLicense: _LHCommonFunction.LHPolicyLicenseUtils.GexPolicyLicenseUrl(props.PolicyLicenseUrl, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.languageCode, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.serverCode, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.countryCode)
      };
      return _this;
    }

    (0, _createClass2.default)(LHCommonSettingPage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.getPolicyLicense();
        var showIsHomeKitDevice = this.props.showIsHomeKitDevice;

        if (showIsHomeKitDevice && _reactNative.Platform.OS !== 'android') {
          var majorVersionIOS = parseInt(_reactNative.Platform.Version, 10);

          if (majorVersionIOS >= 10) {
            _miot.Device.checkIsHomeKitDevice().then(function (res1) {
              if (res1) {
                _this2.setState({
                  isHomeKitDevice: true
                });

                _miot.Device.checkHomeKitConnected().then(function (res2) {
                  _this2.setState({
                    pairedHomeKit: !!res2
                  });
                });
              }
            });
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.deviceNameChangedListener) this.deviceNameChangedListener.remove();
        if (this.checkHardwareUpdateCallback) this.checkHardwareUpdateCallback.remove();
        if (this.willFocusSubscription) this.willFocusSubscription.remove();
      }
    }, {
      key: "getPolicyLicense",
      value: function getPolicyLicense() {
        var _this3 = this;

        if (_LHCommonFunction.LHAuthorizationUtils.PolicyCode.hasRequest) {
          this.setPolicyLicense();
        } else {
          _LHCommonFunction.LHAuthorizationUtils.checkRegion({}, false, function () {
            _this3.setPolicyLicense();
          });
        }
      }
    }, {
      key: "setPolicyLicense",
      value: function setPolicyLicense() {
        var PolicyLicenseUrl = this.props.PolicyLicenseUrl;

        if (typeof PolicyLicenseUrl === 'undefined') {}

        this.setState({
          policyLicense: _LHCommonFunction.LHPolicyLicenseUtils.GexPolicyLicenseUrl(PolicyLicenseUrl, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.languageCode, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.serverCode, _LHCommonFunction.LHAuthorizationUtils.PolicyCode.countryCode)
        });
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this4 = this;

        var _this$state = this.state,
            isHomeKitDevice = _this$state.isHomeKitDevice,
            pairedHomeKit = _this$state.pairedHomeKit,
            policyLicense = _this$state.policyLicense;
        var _this$props = this.props,
            navigation = _this$props.navigation,
            showShare = _this$props.showShare,
            showBtGateway = _this$props.showBtGateway,
            isMeshBtGateway = _this$props.isMeshBtGateway,
            showVoiceAuth = _this$props.showVoiceAuth,
            showSwitchSetting = _this$props.showSwitchSetting,
            showIftt = _this$props.showIftt,
            showDeviceTimeZone = _this$props.showDeviceTimeZone,
            syncDeviceTimeZoneToDevice = _this$props.syncDeviceTimeZoneToDevice,
            showFirmwareUpgrate = _this$props.showFirmwareUpgrate,
            bleFirmwareUpgrateAuthType = _this$props.bleFirmwareUpgrateAuthType,
            showBleFirmwareUpgrate = _this$props.showBleFirmwareUpgrate,
            hideGatewayShare = _this$props.hideGatewayShare,
            bleMeshPageSwitchColor = _this$props.bleMeshPageSwitchColor,
            firstCustomItem = _this$props.firstCustomItem,
            deleteDeviceTitleMessage = _this$props.deleteDeviceTitleMessage,
            showBleMeshGroupUpgrade = _this$props.showBleMeshGroupUpgrade;

        _LHCommonFunction.LHSettingItem.updateNavigation(navigation);

        var firstOptions = [showSwitchSetting ? first_options.MEMBER_SET : null, !hideGatewayShare && _miot.Device.model.indexOf('gateway') > -1 ? first_options.SHARE : null, showVoiceAuth ? first_options.VOICE_AUTH : null, showIftt ? first_options.IFTTT : null, showFirmwareUpgrate || showBleFirmwareUpgrate ? first_options.FIRMWARE_UPGRADE : null, showShare ? first_options.SHARE : null];

        _LHCommonFunction.CommonMethod.RemoveArrayEmptyItem(firstOptions);

        var firstCustomOptions = [isShared ? null : isHomeKitDevice ? _LHCommonFunction.LHSettingItem.getSettingItem('pairWithHomeKitiOS', {
          weight: 22,
          value: pairedHomeKit ? _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_bound : _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_noBind,
          subtitle: _miot.Device.model.indexOf('lumi.lock') > -1 && pairedHomeKit ? _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_desc : null,
          hideArrow: pairedHomeKit,
          onPress: function onPress() {
            var newPairedHomeKit = _this4.state.pairedHomeKit;
            if (newPairedHomeKit) return;

            _miot.Device.bindToHomeKit().then(function () {
              _miot.Device.checkHomeKitConnected().then(function (res2) {
                _this4.setState({
                  pairedHomeKit: !!res2
                });
              });
            }).catch(function (error) {});
          }
        }) : null, isShared ? null : showBleMeshGroupUpgrade ? _LHCommonFunction.LHSettingItem.GetBleMeshGroupUpgradeItem() : null].concat(firstCustomItem || []);

        _LHCommonFunction.CommonMethod.RemoveArrayEmptyItem(firstCustomOptions);

        var secondOptions = [showDeviceTimeZone ? second_options.TIMEZONE : null, showBtGateway && !isMeshBtGateway ? second_options.BTGATEWAY : null];

        _LHCommonFunction.CommonMethod.RemoveArrayEmptyItem(secondOptions);

        var secondCustomOptions = [isShared ? null : showBtGateway && isMeshBtGateway ? _LHCommonFunction.LHSettingItem.GetBleGatewayMeshItem(navigation, bleMeshPageSwitchColor) : null];

        _LHCommonFunction.CommonMethod.RemoveArrayEmptyItem(secondCustomOptions);

        var conmonSettings = {
          firstOptions: firstOptions,
          firstCustomOptions: firstCustomOptions,
          secondOptions: secondOptions,
          secondCustomOptions: secondCustomOptions,
          extraOptions: {
            licenseUrl: policyLicense.licenseUrl,
            policyUrl: policyLicense.policyUrl,
            bleOtaAuthType: bleFirmwareUpgrateAuthType,
            syncDevice: syncDeviceTimeZoneToDevice,
            deleteDeviceMessage: deleteDeviceTitleMessage
          }
        };
        return conmonSettings;
      }
    }, {
      key: "renderItem",
      value: function renderItem() {
        var settings = this.getPageData();
        var _this$props2 = this.props,
            navigation = _this$props2.navigation,
            customOptions = _this$props2.customOptions;
        return _react.default.createElement(_CommonSetting.CommonSettingPage, {
          key: "CommonSettingPage",
          navigation: navigation,
          customSetting: {
            options: customOptions || []
          },
          commonSetting: {
            firstOptions: settings.firstOptions,
            firstCustomOptions: settings.firstCustomOptions,
            secondOptions: settings.secondOptions,
            secondCustomOptions: settings.secondCustomOptions,
            extraOptions: settings.extraOptions,
            commonSettingStyle: {
              itemStyle: {
                useNewType: true,
                valueStyle: {
                  width: '100%'
                }
              },
              moreSettingPageStyle: {
                itemStyle: {
                  useNewType: true,
                  valueStyle: {
                    width: '100%'
                  }
                }
              }
            }
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false,
          style: {
            flex: 1
          },
          contentContainerStyle: {
            paddingBottom: (0, _LHCommonFunction.dp)(40)
          }
        }, this.renderItem());
      }
    }]);
    return LHCommonSettingPage;
  }(_react.default.Component);

  LHCommonSettingPage.defaultProps = {
    showFirmwareUpgrate: true,
    showBleFirmwareUpgrate: false,
    showBleMeshGroupUpgrade: false,
    needFirmwareUpgrateDot: true,
    showIftt: true,
    hideLegalInformation: false,
    showDeviceTimeZone: true,
    syncDeviceTimeZoneToDevice: false,
    isMeshBtGateway: true,
    isDark: _LHCommonFunction.LHUiColorUtils.isDark
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHCommonSettingPage);

  exports.default = _default;
},11114,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10353,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getStore;

  var _redux = _$$_REQUIRE(_dependencyMap[1]);

  var _reduxPromise = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Reducers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function getStore() {
    return (0, _redux.createStore)((0, _Reducers.default)(), undefined, (0, _redux.applyMiddleware)(_reduxPromise.default));
  }
},11117,[14305,10304,11120,11129]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = promiseMiddleware;

  var _isPromise = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _fluxStandardAction = _$$_REQUIRE(_dependencyMap[1]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function promiseMiddleware(_ref) {
    var dispatch = _ref.dispatch;
    return function (next) {
      return function (action) {
        if (!(0, _fluxStandardAction.isFSA)(action)) {
          return (0, _isPromise.default)(action) ? action.then(dispatch) : next(action);
        }

        return (0, _isPromise.default)(action.payload) ? action.payload.then(function (result) {
          return dispatch(_objectSpread({}, action, {
            payload: result
          }));
        }).catch(function (error) {
          dispatch(_objectSpread({}, action, {
            payload: error,
            error: true
          }));
          return Promise.reject(error);
        }) : next(action);
      };
    };
  }
},11120,[11123,11126]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = isPromise;
  module.exports.default = isPromise;

  function isPromise(obj) {
    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
  }
},11123,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isFSA = isFSA;
  exports.isError = isError;

  var _lodash = _$$_REQUIRE(_dependencyMap[0]);

  function isFSA(action) {
    return (0, _lodash.isPlainObject)(action) && (0, _lodash.isString)(action.type) && Object.keys(action).every(isValidKey);
  }

  function isError(action) {
    return isFSA(action) && action.error === true;
  }

  function isValidKey(key) {
    return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;
  }
},11126,[11503]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getReducers;

  var _redux = _$$_REQUIRE(_dependencyMap[1]);

  var _GuardMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Scenes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function getReducers() {
    return (0, _redux.combineReducers)({
      GuardModeReducers: _GuardMode.default,
      ScenesReducers: _Scenes.default
    });
  }
},11129,[14305,10304,11132,11300]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reduxActions = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[4]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _ActionTypes = _$$_REQUIRE(_dependencyMap[6]);

  var _GuardModeConstant = _$$_REQUIRE(_dependencyMap[7]);

  var _handleActions;

  function saveArmingInfoCache(data) {
    var dataCopy = _LHCommonFunction.CommonMethod.DeepClone(data, {});

    delete dataCopy.countDownInfo;
    delete dataCopy.targetMode;

    _LHCommonFunction.LHMiServer.SetHostStorage(_PluginConfig.default.ArmingInfoCacheKey, JSON.stringify(dataCopy));
  }

  var _default = (0, _reduxActions.handleActions)((_handleActions = {}, (0, _defineProperty2.default)(_handleActions, _ActionTypes.ARMING_MODE, {
    next: function next(state, action) {
      var res = action.payload;
      var armingMode = -1;

      if (res && res[0] && +res[0].code === 0) {
        armingMode = res[0].value;
      }

      var data = (0, _extends2.default)({}, state, {
        targetMode: armingMode
      });
      saveArmingInfoCache(data);
      return data;
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.ARMING_MODE_REPORT, {
    next: function next(state, action) {
      var res = action.payload;
      var armingMode = res && res[0] && res[0].value && res[0].value[0] || 0;
      var data = (0, _extends2.default)({}, state, {
        armingMode: armingMode
      });
      saveArmingInfoCache(data);
      return data;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.ARMING_INFO, {
    next: function next(state, action) {
      var res = action.payload || [];
      var armingMode = -1;
      var targetMode = -1;

      var armingModeItem = _LHCommonFunction.CommonMethod.FindSpec(res, _GuardModeConstant.GuardModeSpec.armingMode.siid, _GuardModeConstant.GuardModeSpec.armingMode.piid);

      if (armingModeItem && armingModeItem.code === 0) {
        armingMode = armingModeItem.value;
      }

      var targetModeItem = _LHCommonFunction.CommonMethod.FindSpec(res, _GuardModeConstant.GuardModeSpec.targetMode.siid, _GuardModeConstant.GuardModeSpec.targetMode.piid);

      if (targetModeItem && targetModeItem.code === 0) {
        targetMode = targetModeItem.value;
      }

      var delayTime = _LHCommonFunction.CommonMethod.DeepClone(state.delayTime, {});

      for (var i = 1, len = _GuardModeConstant.GuardModeConstant.modeKeys.length; i < len; i += 1) {
        var delayItem = _LHCommonFunction.CommonMethod.FindSpec(res, _GuardModeConstant.GuardModeConstant[_GuardModeConstant.GuardModeConstant.modeKeys[i]].delayTime.siid, _GuardModeConstant.GuardModeConstant[_GuardModeConstant.GuardModeConstant.modeKeys[i]].delayTime.piid);

        if (delayItem && delayItem.code === 0) {
          delayTime[_GuardModeConstant.GuardModeConstant.modeKeys[i]] = delayItem.value;
        }
      }

      var countDownInfo = _LHCommonFunction.CommonMethod.DeepClone(state.countDownInfo, {});

      if (state.dataType === 'server') {
        if (state.targetMode !== targetMode) {
          if (countDownInfo.isCounting && countDownInfo.mode !== targetMode) {
            countDownInfo.isCounting = false;
            countDownInfo.time = -1;
            countDownInfo.mode = targetMode;
          }
        }
      }

      var data = (0, _extends2.default)({}, state, {
        armingMode: armingMode,
        targetMode: targetMode,
        delayTime: delayTime,
        dataType: 'server',
        countDownInfo: countDownInfo
      });
      saveArmingInfoCache(data);
      return data;
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.COUNT_DOWN, {
    next: function next(state, action) {
      var res = action.payload;

      var countDownInfo = _LHCommonFunction.CommonMethod.DeepClone(state.countDownInfo, {});

      return (0, _extends2.default)({}, state, {
        countDownInfo: (0, _extends2.default)(countDownInfo, res)
      });
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.DELAY_TIME, {
    next: function next(state, action) {
      var params = action.payload;

      var delayTime = _LHCommonFunction.CommonMethod.DeepClone(state.delayTime, {});

      delayTime[params.type] = params.value;
      var data = (0, _extends2.default)({}, state, {
        delayTime: delayTime
      });
      saveArmingInfoCache(data);
      return data;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.ARMING_INFO_FROM_CACHE, {
    next: function next(state, action) {
      var res = action.payload || {};

      if (res.hasCache && state.dataType !== 'server') {
        return (0, _extends2.default)({}, state, action.payload.data, {
          dataType: 'cache'
        });
      } else {
        return (0, _extends2.default)({}, state);
      }
    }
  }), _handleActions), {
    armingMode: -1,
    targetMode: -1,
    delayTime: {
      basic: 0,
      home: 0,
      away: 0,
      sleep: 0
    },
    countDownInfo: {
      time: -1,
      isCounting: false,
      mode: 0
    },
    dataType: 'default'
  });

  exports.default = _default;
},11132,[14305,14317,14344,11135,10004,11240,11243,11246]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _combineActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  exports.combineActions = _combineActions.default;

  var _createAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  exports.createAction = _createAction.default;

  var _createActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  exports.createActions = _createActions.default;

  var _createCurriedAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  exports.createCurriedAction = _createCurriedAction.default;

  var _handleAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  exports.handleAction = _handleAction.default;

  var _handleActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  exports.handleActions = _handleActions.default;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
},11135,[11138,11159,11168,11216,11222,11228]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = combineActions;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _isFunction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _isSymbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _isEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _isString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _constants = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function isValidActionType(type) {
    return (0, _isString.default)(type) || (0, _isFunction.default)(type) || (0, _isSymbol.default)(type);
  }

  function isValidActionTypes(types) {
    if ((0, _isEmpty.default)(types)) {
      return false;
    }

    return types.every(isValidActionType);
  }

  function combineActions() {
    for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {
      actionsTypes[_key] = arguments[_key];
    }

    (0, _invariant.default)(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');
    var combinedActionType = actionsTypes.map(_toString.default).join(_constants.ACTION_TYPE_DELIMITER);
    return {
      toString: function toString() {
        return combinedActionType;
      }
    };
  }
},11138,[13495,11141,11144,11147,11150,11153,11156]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return typeof value === 'function';
  };

  exports.default = _default;
},11141,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return typeof value === 'symbol' || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Symbol]';
  };

  exports.default = _default;
},11144,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value.length === 0;
  };

  exports.default = _default;
},11147,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value.toString();
  };

  exports.default = _default;
},11150,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return typeof value === 'string';
  };

  exports.default = _default;
},11153,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.ACTION_TYPE_DELIMITER = exports.DEFAULT_NAMESPACE = undefined;
  var DEFAULT_NAMESPACE = '/';
  exports.DEFAULT_NAMESPACE = DEFAULT_NAMESPACE;
  var ACTION_TYPE_DELIMITER = '||';
  exports.ACTION_TYPE_DELIMITER = ACTION_TYPE_DELIMITER;
},11156,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = createAction;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _isFunction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _identity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _isNull = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function createAction(type, payloadCreator, metaCreator) {
    if (payloadCreator === undefined) {
      payloadCreator = _identity.default;
    }

    (0, _invariant.default)((0, _isFunction.default)(payloadCreator) || (0, _isNull.default)(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');
    var finalPayloadCreator = (0, _isNull.default)(payloadCreator) || payloadCreator === _identity.default ? _identity.default : function (head) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return head instanceof Error ? head : payloadCreator.apply(undefined, [head].concat(args));
    };
    var hasMeta = (0, _isFunction.default)(metaCreator);
    var typeString = type.toString();

    var actionCreator = function actionCreator() {
      var payload = finalPayloadCreator.apply(undefined, arguments);
      var action = {
        type: type
      };

      if (payload instanceof Error) {
        action.error = true;
      }

      if (payload !== undefined) {
        action.payload = payload;
      }

      if (hasMeta) {
        action.meta = metaCreator.apply(undefined, arguments);
      }

      return action;
    };

    actionCreator.toString = function () {
      return typeString;
    };

    return actionCreator;
  }
},11159,[13495,11141,11162,11165]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value;
  };

  exports.default = _default;
},11162,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value === null;
  };

  exports.default = _default;
},11165,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = createActions;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _isFunction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _identity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _isArray = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _isString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _isNil = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getLastElement = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _camelCase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _arrayToObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _flattenActionMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _unflattenActionCreators = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _createAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _constants = _$$_REQUIRE(_dependencyMap[13]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function createActions(actionMap) {
    for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      identityActions[_key - 1] = arguments[_key];
    }

    var options = (0, _isPlainObject.default)((0, _getLastElement.default)(identityActions)) ? identityActions.pop() : {};
    (0, _invariant.default)(identityActions.every(_isString.default) && ((0, _isString.default)(actionMap) || (0, _isPlainObject.default)(actionMap)), 'Expected optional object followed by string action types');

    if ((0, _isString.default)(actionMap)) {
      return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);
    }

    return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));
  }

  function actionCreatorsFromActionMap(actionMap, options) {
    var flatActionMap = (0, _flattenActionMap.default)(actionMap, options);
    var flatActionCreators = actionMapToActionCreators(flatActionMap);
    return (0, _unflattenActionCreators.default)(flatActionCreators, options);
  }

  function actionMapToActionCreators(actionMap, _temp) {
    var _ref = _temp === undefined ? {} : _temp,
        prefix = _ref.prefix,
        _ref$namespace = _ref.namespace,
        namespace = _ref$namespace === undefined ? _constants.DEFAULT_NAMESPACE : _ref$namespace;

    function isValidActionMapValue(actionMapValue) {
      if ((0, _isFunction.default)(actionMapValue) || (0, _isNil.default)(actionMapValue)) {
        return true;
      }

      if ((0, _isArray.default)(actionMapValue)) {
        var _actionMapValue$ = actionMapValue[0],
            payload = _actionMapValue$ === undefined ? _identity.default : _actionMapValue$,
            meta = actionMapValue[1];
        return (0, _isFunction.default)(payload) && (0, _isFunction.default)(meta);
      }

      return false;
    }

    return (0, _arrayToObject.default)(Object.keys(actionMap), function (partialActionCreators, type) {
      var _objectSpread2;

      var actionMapValue = actionMap[type];
      (0, _invariant.default)(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + ("functions for " + type));
      var prefixedType = prefix ? "" + prefix + namespace + type : type;
      var actionCreator = (0, _isArray.default)(actionMapValue) ? _createAction.default.apply(undefined, [prefixedType].concat(actionMapValue)) : (0, _createAction.default)(prefixedType, actionMapValue);
      return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));
    });
  }

  function actionCreatorsFromIdentityActions(identityActions, options) {
    var actionMap = (0, _arrayToObject.default)(identityActions, function (partialActionMap, type) {
      var _objectSpread3;

      return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = _identity.default, _objectSpread3));
    });
    var actionCreators = actionMapToActionCreators(actionMap, options);
    return (0, _arrayToObject.default)(Object.keys(actionCreators), function (partialActionCreators, type) {
      var _objectSpread4;

      return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[(0, _camelCase.default)(type)] = actionCreators[type], _objectSpread4));
    });
  }
},11168,[13495,11171,11141,11162,11174,11153,11177,11180,11183,11195,11198,11213,11159,11156]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    if (typeof value !== 'object' || value === null) return false;
    var proto = value;

    while (Object.getPrototypeOf(proto) !== null) {
      proto = Object.getPrototypeOf(proto);
    }

    return Object.getPrototypeOf(value) === proto;
  };

  exports.default = _default;
},11171,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return Array.isArray(value);
  };

  exports.default = _default;
},11174,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value === null || value === undefined;
  };

  exports.default = _default;
},11177,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(array) {
    return array[array.length - 1];
  };

  exports.default = _default;
},11180,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _toCamelCase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var namespacer = '/';

  var _default = function _default(type) {
    return type.indexOf(namespacer) === -1 ? (0, _toCamelCase.default)(type) : type.split(namespacer).map(_toCamelCase.default).join(namespacer);
  };

  exports.default = _default;
},11183,[11186]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var space = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = toCamelCase;

  function toCamelCase(string) {
    return space(string).replace(/\s(\w)/g, function (matches, letter) {
      return letter.toUpperCase();
    });
  }
},11186,[11189]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var clean = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = toSpaceCase;

  function toSpaceCase(string) {
    return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
      return match ? ' ' + match : '';
    }).trim();
  }
},11189,[11192]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = toNoCase;
  var hasSpace = /\s/;
  var hasSeparator = /(_|-|\.|:)/;
  var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/;

  function toNoCase(string) {
    if (hasSpace.test(string)) return string.toLowerCase();
    if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase();
    if (hasCamel.test(string)) return uncamelize(string).toLowerCase();
    return string.toLowerCase();
  }

  var separatorSplitter = /[\W_]+(.|$)/g;

  function unseparate(string) {
    return string.replace(separatorSplitter, function (m, next) {
      return next ? ' ' + next : '';
    });
  }

  var camelSplitter = /(.)([A-Z]+)/g;

  function uncamelize(string) {
    return string.replace(camelSplitter, function (m, previous, uppers) {
      return previous + ' ' + uppers.toLowerCase().split('').join(' ');
    });
  }
},11192,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(array, callback) {
    return array.reduce(function (partialObject, element) {
      return callback(partialObject, element);
    }, {});
  };

  exports.default = _default;
},11195,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _flattenWhenNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _default = (0, _flattenWhenNode.default)(_isPlainObject.default);

  exports.default = _default;
},11198,[11171,11201]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _constants = _$$_REQUIRE(_dependencyMap[0]);

  var _ownKeys = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _get = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _default = function _default(predicate) {
    return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {
      var _ref = _temp === undefined ? {} : _temp,
          _ref$namespace = _ref.namespace,
          namespace = _ref$namespace === undefined ? _constants.DEFAULT_NAMESPACE : _ref$namespace,
          prefix = _ref.prefix;

      if (partialFlatMap === undefined) {
        partialFlatMap = {};
      }

      if (partialFlatActionType === undefined) {
        partialFlatActionType = '';
      }

      function connectNamespace(type) {
        var _ref2;

        if (!partialFlatActionType) return type;
        var types = type.toString().split(_constants.ACTION_TYPE_DELIMITER);
        var partials = partialFlatActionType.split(_constants.ACTION_TYPE_DELIMITER);
        return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {
          return types.map(function (t) {
            return "" + p + namespace + t;
          });
        })).join(_constants.ACTION_TYPE_DELIMITER);
      }

      function connectPrefix(type) {
        if (partialFlatActionType || !prefix || prefix && new RegExp("^" + prefix + namespace).test(type)) {
          return type;
        }

        return "" + prefix + namespace + type;
      }

      (0, _ownKeys.default)(map).forEach(function (type) {
        var nextNamespace = connectPrefix(connectNamespace(type));
        var mapValue = (0, _get.default)(type, map);

        if (predicate(mapValue)) {
          flatten(mapValue, {
            namespace: namespace,
            prefix: prefix
          }, partialFlatMap, nextNamespace);
        } else {
          partialFlatMap[nextNamespace] = mapValue;
        }
      });
      return partialFlatMap;
    };
  };

  exports.default = _default;
},11201,[11156,11204,11210]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = ownKeys;

  var _isMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function ownKeys(object) {
    if ((0, _isMap.default)(object)) {
      return Array.from(object.keys());
    }

    if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
      return Reflect.ownKeys(object);
    }

    var keys = Object.getOwnPropertyNames(object);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      keys = keys.concat(Object.getOwnPropertySymbols(object));
    }

    return keys;
  }
},11204,[11207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return typeof Map !== 'undefined' && value instanceof Map;
  };

  exports.default = _default;
},11207,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = get;

  var _isMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function get(key, x) {
    return (0, _isMap.default)(x) ? x.get(key) : x[key];
  }
},11210,[11207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = unflattenActionCreators;

  var _constants = _$$_REQUIRE(_dependencyMap[0]);

  var _isEmpty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _camelCase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function unflattenActionCreators(flatActionCreators, _temp) {
    var _ref = _temp === undefined ? {} : _temp,
        _ref$namespace = _ref.namespace,
        namespace = _ref$namespace === undefined ? _constants.DEFAULT_NAMESPACE : _ref$namespace,
        prefix = _ref.prefix;

    function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {
      var nextNamespace = (0, _camelCase.default)(partialFlatActionTypePath.shift());

      if ((0, _isEmpty.default)(partialFlatActionTypePath)) {
        partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];
      } else {
        if (!partialNestedActionCreators[nextNamespace]) {
          partialNestedActionCreators[nextNamespace] = {};
        }

        unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);
      }
    }

    var nestedActionCreators = {};
    Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {
      var unprefixedType = prefix ? type.replace("" + prefix + namespace, '') : type;
      return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));
    });
    return nestedActionCreators;
  }
},11213,[11156,11147,11183]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _justCurryIt = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _createAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _default = function _default(type, payloadCreator) {
    return (0, _justCurryIt.default)((0, _createAction.default)(type, payloadCreator), payloadCreator.length);
  };

  exports.default = _default;
},11216,[11219,11159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = curry;

  function curry(fn, arity) {
    return function curried() {
      if (arity == null) {
        arity = fn.length;
      }

      var args = [].slice.call(arguments);

      if (args.length >= arity) {
        return fn.apply(this, args);
      } else {
        return function () {
          return curried.apply(this, args.concat([].slice.call(arguments)));
        };
      }
    };
  }
},11219,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = handleAction;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _isFunction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _identity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _isNil = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _isUndefined = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _toString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _constants = _$$_REQUIRE(_dependencyMap[7]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function handleAction(type, reducer, defaultState) {
    if (reducer === undefined) {
      reducer = _identity.default;
    }

    var types = (0, _toString.default)(type).split(_constants.ACTION_TYPE_DELIMITER);
    (0, _invariant.default)(!(0, _isUndefined.default)(defaultState), "defaultState for reducer handling " + types.join(', ') + " should be defined");
    (0, _invariant.default)((0, _isFunction.default)(reducer) || (0, _isPlainObject.default)(reducer), 'Expected reducer to be a function or object with next and throw reducers');

    var _ref = (0, _isFunction.default)(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {
      return (0, _isNil.default)(aReducer) ? _identity.default : aReducer;
    }),
        nextReducer = _ref[0],
        throwReducer = _ref[1];

    return function (state, action) {
      if (state === undefined) {
        state = defaultState;
      }

      var actionType = action.type;

      if (!actionType || types.indexOf((0, _toString.default)(actionType)) === -1) {
        return state;
      }

      return (action.error === true ? throwReducer : nextReducer)(state, action);
    };
  }
},11222,[13495,11141,11171,11162,11177,11225,11150,11156]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _default = function _default(value) {
    return value === undefined;
  };

  exports.default = _default;
},11225,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = handleActions;

  var _reduceReducers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _isMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ownKeys = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _flattenReducerMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _handleAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _get = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function handleActions(handlers, defaultState, options) {
    if (options === undefined) {
      options = {};
    }

    (0, _invariant.default)((0, _isPlainObject.default)(handlers) || (0, _isMap.default)(handlers), 'Expected handlers to be a plain object.');
    var flattenedReducerMap = (0, _flattenReducerMap.default)(handlers, options);
    var reducers = (0, _ownKeys.default)(flattenedReducerMap).map(function (type) {
      return (0, _handleAction.default)(type, (0, _get.default)(type, flattenedReducerMap), defaultState);
    });

    var reducer = _reduceReducers.default.apply(undefined, reducers.concat([defaultState]));

    return function (state, action) {
      if (state === undefined) {
        state = defaultState;
      }

      return reducer(state, action);
    };
  }
},11228,[11231,13495,11171,11207,11204,11234,11222,11210]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports.default = function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var initialState = typeof args[args.length - 1] !== 'function' && args.pop();
    var reducers = args;

    if (typeof initialState === 'undefined') {
      throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');
    }

    return function (prevState, value) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      var prevStateIsUndefined = typeof prevState === 'undefined';
      var valueIsUndefined = typeof value === 'undefined';

      if (prevStateIsUndefined && valueIsUndefined && initialState) {
        return initialState;
      }

      return reducers.reduce(function (newState, reducer) {
        return reducer.apply(undefined, [newState, value].concat(args));
      }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);
    };
  };

  module.exports = exports['default'];
},11231,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _isPlainObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  var _isMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _hasGeneratorInterface = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _flattenWhenNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _default = (0, _flattenWhenNode.default)(function (node) {
    return ((0, _isPlainObject.default)(node) || (0, _isMap.default)(node)) && !(0, _hasGeneratorInterface.default)(node);
  });

  exports.default = _default;
},11234,[11171,11207,11237,11201]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;
  exports.default = hasGeneratorInterface;

  var _ownKeys = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0]));

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function hasGeneratorInterface(handler) {
    var keys = (0, _ownKeys.default)(handler);
    var hasOnlyInterfaceNames = keys.every(function (ownKey) {
      return ownKey === 'next' || ownKey === 'throw';
    });
    return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;
  }
},11237,[11204]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[2]);

  var PluginConfig = function PluginConfig() {
    (0, _classCallCheck2.default)(this, PluginConfig);
  };

  exports.default = PluginConfig;
  PluginConfig.PluginVersion = '1.6.27';
  PluginConfig.SceneListCacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('SceneListCacheKey');
  PluginConfig.ArmingInfoCacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('ArmingInfoCacheKey');
  PluginConfig.AlarmTriggleDeviceChange = 'AlarmTriggleDeviceChange';
  PluginConfig.ThemeColor = _LHCommonFunction.LHUiColorUtils.getColor('#0289FF', '#007AE6');
  PluginConfig.SubDeviceListCacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('LHSubDeviceListKey');
  PluginConfig.BtDeviceListCacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('LHBtDeviceListKey');
},11240,[14305,14320,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BT_DEVICE_LIST_FROM_CACHE = exports.BT_DEVICE_LIST = exports.SUB_DEVICE_LIST_FROM_CACHE = exports.SUB_DEVICE_LIST = exports.DELAY_TIME = exports.COUNT_DOWN = exports.ARMING_INFO_FROM_CACHE = exports.ARMING_INFO = exports.SCENES_LIST_FROM_CACHE = exports.SCENES_LIST = exports.ARMING_MODE_REPORT = exports.TARGET_MODE = exports.ARMING_MODE = exports.SELF_CHECK_NOTIFY = undefined;
  var SELF_CHECK_NOTIFY = 'SELF_CHECK_NOTIFY';
  exports.SELF_CHECK_NOTIFY = SELF_CHECK_NOTIFY;
  var ARMING_MODE = 'ARMING_MODE';
  exports.ARMING_MODE = ARMING_MODE;
  var TARGET_MODE = 'TARGET_MODE';
  exports.TARGET_MODE = TARGET_MODE;
  var ARMING_MODE_REPORT = 'ARMING_MODE_REPORT';
  exports.ARMING_MODE_REPORT = ARMING_MODE_REPORT;
  var SCENES_LIST = 'SCENES_LIST';
  exports.SCENES_LIST = SCENES_LIST;
  var SCENES_LIST_FROM_CACHE = 'SCENES_LIST_FROM_CACHE';
  exports.SCENES_LIST_FROM_CACHE = SCENES_LIST_FROM_CACHE;
  var ARMING_INFO = 'ARMING_INFO';
  exports.ARMING_INFO = ARMING_INFO;
  var ARMING_INFO_FROM_CACHE = 'ARMING_INFO_FROM_CACHE';
  exports.ARMING_INFO_FROM_CACHE = ARMING_INFO_FROM_CACHE;
  var COUNT_DOWN = 'COUNT_DOWN';
  exports.COUNT_DOWN = COUNT_DOWN;
  var DELAY_TIME = 'DELAY_TIME';
  exports.DELAY_TIME = DELAY_TIME;
  var SUB_DEVICE_LIST = 'SUB_DEVICE_LIST';
  exports.SUB_DEVICE_LIST = SUB_DEVICE_LIST;
  var SUB_DEVICE_LIST_FROM_CACHE = 'SUB_DEVICE_LIST_FROM_CACHE';
  exports.SUB_DEVICE_LIST_FROM_CACHE = SUB_DEVICE_LIST_FROM_CACHE;
  var BT_DEVICE_LIST = 'BT_DEVICE_LIST';
  exports.BT_DEVICE_LIST = BT_DEVICE_LIST;
  var BT_DEVICE_LIST_FROM_CACHE = 'BT_DEVICE_LIST_FROM_CACHE';
  exports.BT_DEVICE_LIST_FROM_CACHE = BT_DEVICE_LIST_FROM_CACHE;
},11243,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GuardModeSpec = exports.GuardModeConstant = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _LHLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var basic = {
    pageType: 'basic',
    tipsText: _LHLocalizableString.default.mi_comboHub_guardSetting_basicGuard_tips,
    delayTime: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 9
    },
    alarmDuration: {
      siid: 3,
      piid: 10
    },
    alarmVolume: {
      siid: 3,
      piid: 11
    }
  };
  var home = {
    pageType: 'home',
    tipsText: _LHLocalizableString.default.mi_comboHub_guardSetting_homeGuard_tips,
    delayTime: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 12
    },
    alarmDuration: {
      siid: 3,
      piid: 13
    },
    alarmVolume: {
      siid: 3,
      piid: 14
    }
  };
  var away = {
    pageType: 'away',
    tipsText: _LHLocalizableString.default.mi_comboHub_guardSetting_awayGuard_tips,
    delayTime: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 15
    },
    alarmDuration: {
      siid: 3,
      piid: 16
    },
    alarmVolume: {
      siid: 3,
      piid: 17
    }
  };
  var sleep = {
    pageType: 'sleep',
    tipsText: _LHLocalizableString.default.mi_comboHub_guardSetting_sleepGuard_tips,
    delayTime: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 18
    },
    alarmDuration: {
      siid: 3,
      piid: 19
    },
    alarmVolume: {
      siid: 3,
      piid: 20
    }
  };
  var type = {
    delay: 1,
    duration: 2,
    volume: 3
  };
  var GuardModeSpec = {
    armingMode: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 1
    },
    targetMode: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 21
    },
    alert: {
      did: _miot.Device.deviceID,
      siid: 3,
      piid: 22
    }
  };
  exports.GuardModeSpec = GuardModeSpec;
  var modeKeys = ['basic', 'home', 'away', 'sleep'];
  var GuardModeConstant = {
    basic: basic,
    home: home,
    away: away,
    sleep: sleep,
    type: type,
    modeKeys: modeKeys
  };
  exports.GuardModeConstant = GuardModeConstant;
},11246,[14305,10074,11249]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LHLocalizableStringData = exports.default = undefined;

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[1]);

  var _de = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _en = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _es = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _fr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _id = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _it = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ja = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ko = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _pl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _pt = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ru = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _th = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _zhHans = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _zhHantHK = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _zhHant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var LHLocalizableStringData = {
    de: _de.default,
    en: _en.default,
    es: _es.default,
    fr: _fr.default,
    id: _id.default,
    it: _it.default,
    ja: _ja.default,
    ko: _ko.default,
    pl: _pl.default,
    pt: _pt.default,
    ru: _ru.default,
    th: _th.default,
    tr: _tr.default,
    zh: _zhHans.default,
    zh_hk: _zhHantHK.default,
    zh_tw: _zhHant.default
  };
  exports.LHLocalizableStringData = LHLocalizableStringData;
  var LHLocalizableString = new _LHCommonFunction.LHLocalizedStrings(LHLocalizableStringData);
  exports.default = LHLocalizableString;
},11249,[14305,10004,11252,11255,11258,11261,11264,11267,11270,11273,11276,11279,11282,11285,11288,11291,11294,11297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var de = {
    "languageName": "de德语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Kann nicht aktiviert werden",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Bitten Sie den Besitzer der Steuerzentrale, ein Alarmauslösegerät einzustellen.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Schutz deaktiviert",
    "mi_comboHub_mainPage_guardMode_toSet": "Jetzt einstellen",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Aktiviert 24/7, um Ihr Zuhause zu schützen",
    "mi_comboHub_guardSetting_basicGuard_tips": "Der Basisschutz ist 24/7 aktiviert, der Alarm des Hubs wird ausgelöst und Benachrichtigungen an Ihr Telefon gesendet, sobald eins der Auslösegeräte des Basisschutzes ausgelöst wird.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Wenn der Zu-Hause-Schutz aktiviert ist, wird der Alarm des Hubs ausgelöst und Benachrichtigungen an Ihr Telefon gesendet, sobald eins der Auslösegeräte des Zu-Hause-Schutzes ausgelöst wird.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Wenn der Außer-Hause-Schutz aktiviert ist, wird der Alarm des Hubs ausgelöst und Benachrichtigungen an Ihr Telefon gesendet, sobald eins der Auslösegeräte des Außer-Hause-Schutzes ausgelöst wird.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Wenn der Schlafschutz aktiviert ist, wird der Alarm des Hubs ausgelöst und Benachrichtigungen an Ihr Telefon gesendet, sobald eins der Auslösegeräte des Schlafschutzes ausgelöst wird.",
    "mi_comboHub_triggleSubDevices_add": "Hinzufügen",
    "mi_comboHub_setting_indicatorLight": "Anzeiger",
    "mi_comboHub_setting_promptSound": "Benachrichtigungslautstärke",
    "mi_comboHub_setting_subDevicesList": "Untergerät-Liste",
    "mi_comboHub_homePage_Alert": "Hub-Alarm",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "{deviceName} als Auslösegerät löschen?",
    "mi_comboHub_triggleSubDevices_setting": "Beim Konfigurieren...",
    "mi_comboHub_triggleDevices_deleting": "Beim Löschen…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Keine Alarmauslösegeräte",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Der „{deviceName}“ kann nicht als Alarmauslösegerät des Basisschutzes für den „{gatewayName}“ entfernt werden.",
    "mi_comboHub_mainPage_subDevices": "Untergerät",
    "mi_comboHub_log_alert_log": "Alarmprotokoll",
    "mi_comboHub_triggle_device_empty_tip": "Es gibt keine Geräte, die mit dieser Steuerzentrale gekoppelt sind, die zum Auslösen des Alarms verwendet werden können, wie z.B. Bewegungssensor, Fenster- und Türsensor oder drahtloser Schalter.",
    "mi_comboHub_mainPage_in_basic": "Basisschutz aktiv…",
    "mi_comboHub_mainPage_in_basic_and_home": "Basis- und Zu-Hause-Schutz aktiv…",
    "mi_comboHub_mainPage_in_basic_and_away": "Basis- und Außer-Hause-Schutz aktiv…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Basis- und Schlafschutz aktiv…",
    "mi_comboHub_mainPage_in_home": "Zu-Hause-Schutz aktiv…",
    "mi_comboHub_mainPage_in_away": "Außer-Hause-Schutz aktiv…",
    "mi_comboHub_mainPage_in_aleep": "Schlafschutz aktiv…",
    "mi_comboHub_triggle_device_header_title_1": "Geräte, die nicht aktiviert werden können",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Aktivieren des Schlafschutzes",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Aktivieren des Zu-Hause-Schutzes",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Aktivieren des Außer-Hause-Schutzes",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Aktiviert in {time} Sekunden",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = de;
},11252,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var en = {
    "languageName": "en英语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Unable to enable",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Ask the owner of the control hub to set an alert trigger device.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Guard disabled",
    "mi_comboHub_mainPage_guardMode_toSet": "Set now",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Enabled 24/7 to guard your home",
    "mi_comboHub_guardSetting_basicGuard_tips": "The basic guard is enabled 24/7, the hub's alert will be set off and notifications will be sent to your phone as soon as any of the basic guard's trigger devices is triggered.",
    "mi_comboHub_guardSetting_homeGuard_tips": "When the at-home guard is enabled, the hub's alert will be set off and notifications will be sent to your phone as soon as any of the at-home guard's trigger devices is triggered.",
    "mi_comboHub_guardSetting_awayGuard_tips": "When the away-from-home guard is enabled, the hub's alert will be set off and notifications will be sent to your phone as soon as any of the away-from-home guard's trigger devices is triggered.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "When the sleep guard is enabled, the hub's alert will be set off and notifications will be sent to your phone as soon as any of the sleep guard's trigger devices is triggered.",
    "mi_comboHub_triggleSubDevices_add": "Add",
    "mi_comboHub_setting_indicatorLight": "Indicator",
    "mi_comboHub_setting_promptSound": "Notification volume",
    "mi_comboHub_setting_subDevicesList": "Child device list",
    "mi_comboHub_homePage_Alert": "Hub alert",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Delete {deviceName} as a trigger device?",
    "mi_comboHub_triggleSubDevices_setting": "Configuring…",
    "mi_comboHub_triggleDevices_deleting": "Deleting…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "No alert trigger devices",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Unable to remove the \"{deviceName}\" as the basic guard's alert trigger device for the \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Child device",
    "mi_comboHub_log_alert_log": "Alert log",
    "mi_comboHub_triggle_device_empty_tip": "There are no devices paired with this control hub that can be used to trigger the alert, such as a motion sensor, window and door sensor, or wireless switch.",
    "mi_comboHub_mainPage_in_basic": "Basic guard active...",
    "mi_comboHub_mainPage_in_basic_and_home": "Basic & at-home guard active…",
    "mi_comboHub_mainPage_in_basic_and_away": "Basic & away-from-home guard active…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Basic & sleep guard active…",
    "mi_comboHub_mainPage_in_home": "At-home guard active...",
    "mi_comboHub_mainPage_in_away": "Away-from-home guard active...",
    "mi_comboHub_mainPage_in_aleep": "Sleep guard active...",
    "mi_comboHub_triggle_device_header_title_1": "Devices that cannot be enabled",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Enabling sleep guard",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Enabling at-home guard",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Enabling away-from-home guard",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Enabled in  {time} s ",
    "mi_comboHub_debugPage_debugMode": "Debug mode",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee Signal Boost"
  };
  exports.default = en;
},11255,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var es = {
    "languageName": "es西班牙语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "No se puede activar",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Solicite al propietario del centro de control que establezca un dispositivo de activación de alarmas.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Guardia desactivada",
    "mi_comboHub_mainPage_guardMode_toSet": "Configurar ahora",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Activada las 24 horas, los 7 días de la semana para proteger su hogar",
    "mi_comboHub_guardSetting_basicGuard_tips": "La guardia básica está activada las 24 horas, los 7 días de la semana. La alerta del controlador se activará y se enviarán notificaciones a su teléfono, tan pronto como se dispare cualquiera de los dispositivos de activación de la guardia básica.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Cuando la guardia en el hogar este activada y la alerta del controlador se activara, se enviarán notificaciones a su teléfono tan pronto como se dispare cualquiera de los dispositivos de activación de la guardia en el hogar.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Cuando la guardia del hogar en su ausencia este activada y la alerta del controlador se activara, se enviarán notificaciones a su teléfono tan pronto como se dispare cualquiera de los dispositivos de activación de la uardia del hogar en su ausencia.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Cuando la uardia del sueño este activada y la alerta del controlador se activara, se enviarán notificaciones a su teléfono tan pronto como se dispare cualquiera de los dispositivos de activación de la guardia del sueño.",
    "mi_comboHub_triggleSubDevices_add": "Añadir",
    "mi_comboHub_setting_indicatorLight": "Indicador",
    "mi_comboHub_setting_promptSound": "Volumen de notificación",
    "mi_comboHub_setting_subDevicesList": "Lista de dispositivos secundarios",
    "mi_comboHub_homePage_Alert": "Alerta de controlador",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "¿Eliminar {deviceName} como dispositivo de detonación?",
    "mi_comboHub_triggleSubDevices_setting": "Configurando…",
    "mi_comboHub_triggleDevices_deleting": "Eliminando…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Sin dispositivos de detonación de alertas",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "No es posible eliminar el \"{deviceName}\" como dispositivo de detonación de alerta de la guardia básica para el \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Dispositivo secundario",
    "mi_comboHub_log_alert_log": " Registro de alarma",
    "mi_comboHub_triggle_device_empty_tip": "No hay dispositivos vinculados con este centro de control que se puedan usar para activar la alarma, como un sensor de movimiento, de ventana y de puerta, o un interruptor inalámbrico.",
    "mi_comboHub_mainPage_in_basic": "Guardia básica activa...",
    "mi_comboHub_mainPage_in_basic_and_home": "Guardia básica y en el hogar activa...",
    "mi_comboHub_mainPage_in_basic_and_away": "Guardia básica y del hogar en su ausencia activa...",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Guardia básica y de sueño activa...",
    "mi_comboHub_mainPage_in_home": "Guardia en el hogar activa...",
    "mi_comboHub_mainPage_in_away": "Guardia del hogar en su ausencia activa...",
    "mi_comboHub_mainPage_in_aleep": "Guardia del sueño activa...",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivos que no pueden ser activados",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Activando la guardia del sueño",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Activando la guardia en el hogar",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Activando la guardia del hogar en su ausencia",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Habilitado en {time} s",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = es;
},11258,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var fr = {
    "languageName": "fr法语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Impossible d’activer",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Demandez au propriétaire du centre de commande de régler un dispositif de déclenchement d’alerte.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Surveillance désactivée",
    "mi_comboHub_mainPage_guardMode_toSet": "Configurer maintenant",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Activé 24/7 pour protéger votre maison",
    "mi_comboHub_guardSetting_basicGuard_tips": "La surveillance de base est activée 24/7, l'alerte de l'assistant sera déclenchée et des notifications seront envoyées à votre téléphone dès que l'un des dispositifs de déclenchement de la surveillance de base sera activé.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Lorsque la surveillance domicile est activée, l'alerte de l'assistant sera désactivée et des notifications seront envoyées à votre téléphone dès que l'un des dispositifs de déclenchement de la surveillance à domicile sera déclenché.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Lorsque la surveillance domicile distante est activée, l'alerte de l'assistant sera désactivée et des notifications seront envoyées à votre téléphone dès que l'un des dispositifs de déclenchement de la surveillance domicile distante sera déclenché.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Lorsque le protège-sommeil est activé, l'alerte de l'assistant est désactivée et des notifications sont envoyées à votre téléphone aussitôt que l'un des dispositifs de déclenchement du protège-sommeil est activé.",
    "mi_comboHub_triggleSubDevices_add": "Ajouter",
    "mi_comboHub_setting_indicatorLight": "Voyant",
    "mi_comboHub_setting_promptSound": "Volume de notification",
    "mi_comboHub_setting_subDevicesList": "Liste dispositif enfant",
    "mi_comboHub_homePage_Alert": "Alerte de l'assistant",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Supprimer {deviceName} comme dispositif de déclenchement?",
    "mi_comboHub_triggleSubDevices_setting": "Configuration en cours…",
    "mi_comboHub_triggleDevices_deleting": "Suppression en cours…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Aucun appareil de déclenchement d'alerte",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Impossible de retirer le « {deviceName} » comme appareil de déclenchement d'alerte de veille d’attente pour le « {gatewayName} ».",
    "mi_comboHub_mainPage_subDevices": "Dispositif pour enfant",
    "mi_comboHub_log_alert_log": "Journal d’alertes",
    "mi_comboHub_triggle_device_empty_tip": "Il n’y a pas de dispositifs appariés avec ce centre de commande qui puissent être utilisés pour déclencher une alerte, telle qu’un détecteur de mouvement, un détecteur de fenêtre et de porte ou un commutateur sans fil.",
    "mi_comboHub_mainPage_in_basic": "Surveillance de base active…",
    "mi_comboHub_mainPage_in_basic_and_home": "Surveillance de base et domicile actives…",
    "mi_comboHub_mainPage_in_basic_and_away": "Surveillance de base et surveillance domicile distante actives...",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Surveillance de base et le protège-sommeil actives…",
    "mi_comboHub_mainPage_in_home": "Surveillance domicile active…",
    "mi_comboHub_mainPage_in_away": "Surveillance domicile distante active...",
    "mi_comboHub_mainPage_in_aleep": "Protège-sommeil active...",
    "mi_comboHub_triggle_device_header_title_1": "Les appareils ne pouvant être activés",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Activation du protège-sommeil",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Activation de la surveillance domicile",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Activation de la surveillance domicile distante",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Activé à {time} s",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = fr;
},11261,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var id = {
    "languageName": "印尼语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Tidak dapat mengaktifkan",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Minta pemilik hub kontrol untuk mengatur perangkat pemicu peringatan.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Penjaga dinonaktifkan",
    "mi_comboHub_mainPage_guardMode_toSet": "Atur sekarang",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Diaktifkan 24/7 untuk menjaga rumah Anda",
    "mi_comboHub_guardSetting_basicGuard_tips": "Penjaga dasar diaktifkan 24/7, peringatan hub akan dimatikan dan notifikasi akan dikirim ke ponsel Anda segera setelah perangkat pemicu penjaga dasar terpicu.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Penjaga di rumah diaktifkan, peringatan hub akan dimatikan dan notifikasi akan dikirim ke ponsel Anda segera setelah perangkat pemicu penjaga di rumah terpicu.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Penjaga jauh-dari-rumah diaktifkan, peringatan hub akan dimatikan dan notifikasi akan dikirim ke ponsel Anda segera setelah perangkat pemicu penjaga jauh-dari-rumah terpicu.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Penjaga tidur diaktifkan, peringatan hub akan dimatikan dan notifikasi akan dikirim ke ponsel Anda segera setelah perangkat pemicu penjaga tidur terpicu.",
    "mi_comboHub_triggleSubDevices_add": "Tambahkan",
    "mi_comboHub_setting_indicatorLight": "Indikator",
    "mi_comboHub_setting_promptSound": "Volume notifikasi",
    "mi_comboHub_setting_subDevicesList": "Daftar perangkat turunan",
    "mi_comboHub_homePage_Alert": "Peringatan Hub",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Hapus {deviceName} sebagai perangkat pemicu?",
    "mi_comboHub_triggleSubDevices_setting": "Mengonfigurasi…",
    "mi_comboHub_triggleDevices_deleting": "Menghapus...",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Tidak ada perangkat pemicu peringatan",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Tidak dapat menghapus \"{deviceName}\" sebagai perangkat pemicu peringatan penjaga dasar untuk \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Perangkat turunan",
    "mi_comboHub_log_alert_log": "Catatan peringatan",
    "mi_comboHub_triggle_device_empty_tip": "Tidak ada perangkat terpasang dengan hub kontrol ini yang dapat digunakan untuk memicu peringatan, seperti sensor gerak, sensor jendela dan pintu, atau tombol nirkabel.",
    "mi_comboHub_mainPage_in_basic": "Penjaga dasar aktif…",
    "mi_comboHub_mainPage_in_basic_and_home": "Penjaga dasar & penjaga di rumah aktif…",
    "mi_comboHub_mainPage_in_basic_and_away": "Penjaga dasar & penjaga jauh-dari-rumah aktif…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Penjaga dasar & penjaga tidur aktif…",
    "mi_comboHub_mainPage_in_home": "Penjaga di rumah aktif…",
    "mi_comboHub_mainPage_in_away": "Penjaga jauh-dari-rumah aktif…",
    "mi_comboHub_mainPage_in_aleep": "Penjaga tidur aktif…",
    "mi_comboHub_triggle_device_header_title_1": "Perangkat yang tidak dapat diaktifkan",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Mengaktifkan penjaga tidur",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Mengaktifkan penjaga di rumah",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Mengaktifkan penjaga jauh-dari-rumah",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Diaktifkan dalam {time} d",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = id;
},11264,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var it = {
    "languageName": "it意大利语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Impossibile abilitare",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Chiedere al proprietario dell'hub di controllo di impostare un dispositivo di attivazione di avviso.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Protezione disabilitata",
    "mi_comboHub_mainPage_guardMode_toSet": "Imposta ora",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Abilitata 24/7 per proteggere la tua casa",
    "mi_comboHub_guardSetting_basicGuard_tips": "La protezione di base è abilitata 24 ore su 24, 7 giorni su 7, l'avviso del mozzo verrà disattivato e le notifiche verranno inviate al telefono non appena viene attivato uno dei dispositivi di attivazione della protezione di base.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Quando la protezione domestica è abilitata, l'avviso del mozzo verrà disattivato e le notifiche verranno inviate al telefono non appena viene attivato uno dei dispositivi di attivazione della protezione domestica.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Quando la protezione fuori casa è abilitata, l'avviso del mozzo verrà attivato e le notifiche verranno inviate al telefono non appena viene attivato uno dei dispositivi di attivazione della protezione fuori casa.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Quando la protezione del sonno è abilitata, l'avviso del mozzo verrà disattivato e le notifiche verranno inviate al telefono non appena viene attivato uno dei dispositivi di attivazione della protezione del sonno.",
    "mi_comboHub_triggleSubDevices_add": "Aggiungi",
    "mi_comboHub_setting_indicatorLight": "Spia",
    "mi_comboHub_setting_promptSound": "Volume delle notifiche",
    "mi_comboHub_setting_subDevicesList": "Lista dispositivo di protezione per bambini",
    "mi_comboHub_homePage_Alert": "Avviso mozzo",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Eliminare {deviceName} come dispositivo di attivazione?",
    "mi_comboHub_triggleSubDevices_setting": "Configurazione...",
    "mi_comboHub_triggleDevices_deleting": "Eliminazione in corso...",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Nessun dispositivo di innesco di allarme",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Impossibile rimuovere \"{deviceName}\" come dispositivo di innesco di allerta della protezione di base per \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Dispositivo di protezione bambini",
    "mi_comboHub_log_alert_log": "Registro allarmi",
    "mi_comboHub_triggle_device_empty_tip": "Non esistono dispositivi associati a questo hub di controllo che possono essere utilizzati per attivare l'avviso, come un sensore di movimento, un sensore di porte e finestre o un interruttore wireless.",
    "mi_comboHub_mainPage_in_basic": "Protezione di base attiva...",
    "mi_comboHub_mainPage_in_basic_and_home": "Protezione di base e domestica attiva...",
    "mi_comboHub_mainPage_in_basic_and_away": "Protezione di base e fuori casa attiva...",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Protezione di base e del sonno attiva...",
    "mi_comboHub_mainPage_in_home": "Protezione domestica attiva...",
    "mi_comboHub_mainPage_in_away": "Protezione fuori casa attiva...",
    "mi_comboHub_mainPage_in_aleep": "Protezione del sonno attiva...",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivi che non possono essere abilitati",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Abilitazione della protezione del sonno",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Abilitazione della protezione domestica",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Abilitazione della protezione fuori casa",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Abilitato in {time} s",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = it;
},11267,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ja = {
    "languageName": "日语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "オンできません",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "ゲートウェイの共有者にアラームトリガを設置するとお伝えください",
    "mi_comboHub_mainPage_guardMode_hasClose": "デーモンモードがオフです。",
    "mi_comboHub_mainPage_guardMode_toSet": "設定",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "24時間ホームをお守りします。",
    "mi_comboHub_guardSetting_basicGuard_tips": "基本デーモンモードは24時間オープンしています。ハブはアラームとプッシュ通知を、デバイスの基本デーモンモードが起動されているときに送ります。",
    "mi_comboHub_guardSetting_homeGuard_tips": "ローカルデーモンモード中,ハブはアラームとプッシュ通知を、デバイスのローカルデーモンモードが起動されているときに送ります。",
    "mi_comboHub_guardSetting_awayGuard_tips": "リモートデーモンモード中,ハブはアラームとプッシュ通知を、デバイスのリモートデーモンモードが起動されているときに送ります。",
    "mi_comboHub_guardSetting_sleepGuard_tips": "スリープデーモンモード中,ハブはアラームとプッシュ通知を、デバイスのスリープデーモンモードが起動されているときに送ります。",
    "mi_comboHub_triggleSubDevices_add": "追加",
    "mi_comboHub_setting_indicatorLight": "指示ランプ",
    "mi_comboHub_setting_promptSound": "音量表示",
    "mi_comboHub_setting_subDevicesList": "サブデバイスリスト",
    "mi_comboHub_homePage_Alert": "ハブアラーム",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "{deviceName}をアラーム起動デバイスとして削除しますか?",
    "mi_comboHub_triggleSubDevices_setting": "情報を設定しています",
    "mi_comboHub_triggleDevices_deleting": "削除中",
    "mi_comboHub_triggleDevices_noTriggleDevice": "ゲートウェイ警報装置をトリガしていません",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "「{deviceName}」を「{gatewayName}」の基礎守護トリガーデバイスとして削除してはいけません",
    "mi_comboHub_mainPage_subDevices": "サブデバイス",
    "mi_comboHub_log_alert_log": "アラームログ",
    "mi_comboHub_triggle_device_empty_tip": "当該ゲートウェイではアラームトリガとするデバイスがありません。例えばモーションセンサー、ドアと窓センサー及びワイヤレススイッチなど",
    "mi_comboHub_mainPage_in_basic": "基本デーモンモード中",
    "mi_comboHub_mainPage_in_basic_and_home": "基本+ローカルデーモンモード中",
    "mi_comboHub_mainPage_in_basic_and_away": "基本+リモートデーモンモード中",
    "mi_comboHub_mainPage_in_basic_and_sleep": "基本+スリープデーモンモード中",
    "mi_comboHub_mainPage_in_home": "ローカルデーモンモード中",
    "mi_comboHub_mainPage_in_away": "リモートデーモンモード中",
    "mi_comboHub_mainPage_in_aleep": "スリープデーモンモード中",
    "mi_comboHub_triggle_device_header_title_1": "起動できない設備",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "スリープデーモンモードが起動になっています",
    "mi_comboHub_mainPage_guardMode_homeOpening": "ローカルデーモンモードが起動です",
    "mi_comboHub_mainPage_guardMode_awayOpening": "リモートデーモンモードが起動です",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "{time}秒の後にオープンします",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = ja;
},11270,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ko = {
    "languageName": "ko韩语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "실행할 수 없습니다",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "이 게이트웨이 공유자에게 트리거 경보 장치를 구성하도록 제시하십시오",
    "mi_comboHub_mainPage_guardMode_hasClose": "가드가 꺼져있습니다",
    "mi_comboHub_mainPage_guardMode_toSet": "설정으로 이동",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "24시간 집을 지켜드립니다",
    "mi_comboHub_guardSetting_basicGuard_tips": "기본 가드가 24 시간 동안 켜지면 기본 가드의 장치가 트리거되는 동안 게이트웨이가 알람을 보내고 스마트폰으로 메시지를 발송합니다.",
    "mi_comboHub_guardSetting_homeGuard_tips": "홈 가드가 활성화되면 홈 가드의 장치가 트리거되는 동안 게이트웨이가 알람을 보내고 스마트폰으로 메시지를 발송합니다.",
    "mi_comboHub_guardSetting_awayGuard_tips": "외출 가드가 활성화되면 외출 가드의 장치가 트리거되는 동안 게이트웨이가 알람을 보내고 스마트폰으로 메시지를 발송합니다.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "수면 가드 장치가 활성화되면 수면 가드의 장치가 트리거되는 동안 게이트웨이가 알람을 보내고 스마트폰으로 메시지를 발송합니다.",
    "mi_comboHub_triggleSubDevices_add": "추가",
    "mi_comboHub_setting_indicatorLight": "표시등",
    "mi_comboHub_setting_promptSound": "안내음 볼륨",
    "mi_comboHub_setting_subDevicesList": "하위 장치 목록",
    "mi_comboHub_homePage_Alert": "게이트웨이 경보",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "{deviceName}을 트리거 경보 장치로 삭제 하시겠습니까?",
    "mi_comboHub_triggleSubDevices_setting": "설정중",
    "mi_comboHub_triggleDevices_deleting": "삭제중",
    "mi_comboHub_triggleDevices_noTriggleDevice": "트리거 게이트웨이 경보 장치 없음",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "{gatewayName}의 기본 가드 트리거 장치로 \"{deviceName}\"을 제거할 수 없습니다",
    "mi_comboHub_mainPage_subDevices": "하위 장치",
    "mi_comboHub_log_alert_log": "알림 로그",
    "mi_comboHub_triggle_device_empty_tip": "이 게이트웨이에는 인체감지 센서, 방범 센서 및 무선 스위치와 같은 경보 트리거 소스로 사용할 수있는 장치가 없습니다",
    "mi_comboHub_mainPage_in_basic": "기본 가드 실행중",
    "mi_comboHub_mainPage_in_basic_and_home": "기본 +홈 가드 실행",
    "mi_comboHub_mainPage_in_basic_and_away": "기본 가드+외출 가드 실행중",
    "mi_comboHub_mainPage_in_basic_and_sleep": "기본 가드+수면 가드 실행중",
    "mi_comboHub_mainPage_in_home": "홈 가드 실행중",
    "mi_comboHub_mainPage_in_away": "외출 가드 실행중",
    "mi_comboHub_mainPage_in_aleep": "수면 가드 실행중",
    "mi_comboHub_triggle_device_header_title_1": "실행 불가한 장치",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "수면 가드 실행중입니다",
    "mi_comboHub_mainPage_guardMode_homeOpening": "홈 가드 실행중입니다",
    "mi_comboHub_mainPage_guardMode_awayOpening": "외출 가드 실행중입니다",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "{time}s후 실행됩니다",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = ko;
},11273,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var pl = {
    "languageName": "pl波兰语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Nie można uruchomić",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Poproś właściciela centrum kontroli o ustawienie urządzenia wyzwalającego alarm.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Ochrona wyłączona",
    "mi_comboHub_mainPage_guardMode_toSet": "Ustaw teraz",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Włączone 24/7, aby pilnować domu",
    "mi_comboHub_guardSetting_basicGuard_tips": "Podstawowa ochrona jest włączona 24/7, alarm urządzenia zostanie uruchomiony, a powiadomienia zostaną wysłane na telefon, gdy tylko zadziała którekolwiek z podstawowych urządzeń wyzwalających ochronę.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Kiedy ochrona domowa jest włączona, alarm urządzenia zostanie uruchomiony, a powiadomienia zostaną wysłane do telefonu, gdy tylko zadziała którekolwiek z urządzeń wyzwalających ochronę domową.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Kiedy ochrona poza domem jest włączona, alarm urządzenia zostanie uruchomiony, a powiadomienia zostaną wysłane do telefonu, gdy tylko zadziała którekolwiek z urządzeń wyzwalających ochronę poza domem.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Kiedy ochrona snu jest włączona, alarm urządzenia zostanie uruchomiony, a powiadomienia zostaną wysłane do telefonu, gdy tylko zadziała którekolwiek z urządzeń wyzwalających ochronę snu.",
    "mi_comboHub_triggleSubDevices_add": "Dodaj",
    "mi_comboHub_setting_indicatorLight": "Wskaźnik",
    "mi_comboHub_setting_promptSound": "Głośność notyfikacji",
    "mi_comboHub_setting_subDevicesList": "Połączono z urządzeniem dziecięcym",
    "mi_comboHub_homePage_Alert": "Alarm urządzenia",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Usunąć {deviceName} jako urządzenie sterujące alarmem?",
    "mi_comboHub_triggleSubDevices_setting": "Trwa konfigurowanie…",
    "mi_comboHub_triggleDevices_deleting": "Usuwanie...",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Brak urządzeń wyzwalających alarm",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Nie można usunąć \"{deviceName}\" jako podstawowego urządzenia wyzwalającego alarm osłony dla \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Urządzenie dziecięce",
    "mi_comboHub_log_alert_log": "Dziennik alarmów",
    "mi_comboHub_triggle_device_empty_tip": "Brak urządzeń sparowanych z tym centrum kontroli, które można by wykorzystać do wyzwolenia alarmu, np. czujnik ruchu, czujnik okien i drzwi czy bezprzewodowy wyłącznik.",
    "mi_comboHub_mainPage_in_basic": "Podstawowa ochrona aktywna…",
    "mi_comboHub_mainPage_in_basic_and_home": "Podstawowa i domowa ochrona aktywne…",
    "mi_comboHub_mainPage_in_basic_and_away": "Podstawowa ochrona i ochrona poza domem aktywne…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Podstawowa ochrona i ochrona snu aktywne…",
    "mi_comboHub_mainPage_in_home": "Ochrona domowa aktywna…",
    "mi_comboHub_mainPage_in_away": "Ochrona poza domem aktywna…",
    "mi_comboHub_mainPage_in_aleep": "Ochrona snu aktywna…",
    "mi_comboHub_triggle_device_header_title_1": "Urządzenia, których nie można włączyć",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Włączanie ochrony snu",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Włączanie ochrony domowej",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Włączanie ochrony poza domem",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Włączy się za {time} s",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = pl;
},11276,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var pt = {
    "languageName": "巴西葡萄牙语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Impossível habilitar",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Peça ao proprietário do hub de controle para definir um alerta de acionamento de dispositivo.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Guarda desativada",
    "mi_comboHub_mainPage_guardMode_toSet": "Definir agora",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Recurso habilitado 24 horas por dia, todos os dias, para proteger sua casa",
    "mi_comboHub_guardSetting_basicGuard_tips": "A guarda básica é habilitada 24 horas por dia, todos os dias. O alerta do hub será desligado, e as notificações serão enviadas para seu telefone assim que um dos dispositivos acionadores do recurso de guarda básica for acionado.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Quando a guarda em casa for habilitada, o alerta do hub será desligado, e as notificações serão enviadas para seu telefone assim que um dos dispositivos acionadores do recurso de guarda em casa for acionado.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Quando a guarda longe de casa for ativada, o alerta do hub será desligado, e as notificações serão enviadas para seu telefone assim que um dos dispositivos acionadores do recurso de guarda longe de casa for acionado.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Quando a guarda em repouso for habilitada, o alerta do hub será desligado, e as notificações serão enviadas para seu telefone assim que um dos dispositivos acionadores do recurso de guarda em repouso for acionado.",
    "mi_comboHub_triggleSubDevices_add": "Adicionar",
    "mi_comboHub_setting_indicatorLight": "Indicador",
    "mi_comboHub_setting_promptSound": "Volume de notificação",
    "mi_comboHub_setting_subDevicesList": "Lista de dispositivos infantis",
    "mi_comboHub_homePage_Alert": "Alerta de hub",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Excluir {deviceName} como dispositivo de gatilho?",
    "mi_comboHub_triggleSubDevices_setting": "Configurando…",
    "mi_comboHub_triggleDevices_deleting": "Excluindo...",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Nenhum dispositivo de alerta de gatilho",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Impossível remover \"{deviceName}\" como dispositivo de alerta de gatilho da guarda básica de \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Dispositivo infantil",
    "mi_comboHub_log_alert_log": "Registro de alertas",
    "mi_comboHub_triggle_device_empty_tip": "Não há dispositivos emparelhados com este hub de controle que possam ser utilizados para acionar o alerta, como um sensor de movimento, sensores de janela e porta, ou switch wireless.",
    "mi_comboHub_mainPage_in_basic": "Guarda básica ativa...",
    "mi_comboHub_mainPage_in_basic_and_home": "Guarda básica e guarda em casa ativas...",
    "mi_comboHub_mainPage_in_basic_and_away": "Guarda básica e guarda longe de casa ativas...",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Guarda básica e guarda em repouso ativas...",
    "mi_comboHub_mainPage_in_home": "Guarda em casa ativa...",
    "mi_comboHub_mainPage_in_away": "Guarda longe de casa ativa...",
    "mi_comboHub_mainPage_in_aleep": "Guarda em repouso ativa...",
    "mi_comboHub_triggle_device_header_title_1": "Dispositivos que não podem ser ativados",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Habilitando guarda em repouso",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Habilitando guarda em casa",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Habilitando guarda longe de casa",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Habilitado em {time} s ",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = pt;
},11279,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ru = {
    "languageName": "ru俄语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Невозможно активировать",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Попросите владельца контроллера для умного дома установить устройство срабатывания.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Oхраны система выключена",
    "mi_comboHub_mainPage_guardMode_toSet": "Задать",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "Включен круглосуточно для охраны дома",
    "mi_comboHub_guardSetting_basicGuard_tips": "Основной режим охранной системы включен 24 часа в сутки, будет срабатывать сигнал оповещения контроллера для умного дома и на телефон будет послано уведомление сразу после срабатывания любого из спусковых устройств используемых в основном режиме.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Если включен режим охранной системы «дома», то будет срабатывать сигнал оповещения контроллера для умного дома и на телефон будет послано уведомление сразу после срабатывания любого из спусковых устройств используемых в режиме «дома».",
    "mi_comboHub_guardSetting_awayGuard_tips": "Если включен режим охранной системы «вне дома», то будет срабатывать сигнал оповещения контроллера для умного дома и на телефон будет послано уведомление сразу после срабатывания любого из спусковых устройств используемых в режиме «вне дома».",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Если включен режим охранной системы «сон», то будет срабатывать сигнал оповещения контроллера для умного дома и на телефон будет послано уведомление сразу после срабатывания любого из спусковых устройств используемых в режиме «сон».",
    "mi_comboHub_triggleSubDevices_add": "Добавить",
    "mi_comboHub_setting_indicatorLight": "Индикатор",
    "mi_comboHub_setting_promptSound": "Громкость уведомлений",
    "mi_comboHub_setting_subDevicesList": "Дочернее устройство подключено",
    "mi_comboHub_homePage_Alert": "Оповещение контроллера",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Удалить {deviceName} из списка спусковых устройств?",
    "mi_comboHub_triggleSubDevices_setting": "Настройка параметров…",
    "mi_comboHub_triggleDevices_deleting": "Удаление…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Нет устройств, способных активировать тревогу",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "Невозможно удалить \"{deviceName}\" в качестве устройства срабатывания тревоги для \"{gatewayName}\".",
    "mi_comboHub_mainPage_subDevices": "Дочернее устройство",
    "mi_comboHub_log_alert_log": " Журнал звуковых сигналов",
    "mi_comboHub_triggle_device_empty_tip": "С этим контроллером для умного дома не сопряжено ни одно устройство, способное активировать тревогу (например, датчик движения, датчик открывания окон и дверей или беспроводной переключатель).",
    "mi_comboHub_mainPage_in_basic": "Основной режим охранной системы активен…",
    "mi_comboHub_mainPage_in_basic_and_home": "Основной режим охранной системы «дома» активен…",
    "mi_comboHub_mainPage_in_basic_and_away": "Основной режим охранной системы «вне дома» активен…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Основной режим и режим «сон» охранной системы активен…",
    "mi_comboHub_mainPage_in_home": "Режим охранной системы «дома» активен…",
    "mi_comboHub_mainPage_in_away": "Режим охранной системы «вне дома» активен…",
    "mi_comboHub_mainPage_in_aleep": "Режим охранной системы «сон» активен…",
    "mi_comboHub_triggle_device_header_title_1": "Устройства не могут быть включены",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Включение режима охранной системы «сон»",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Включение режима охранной системы «дома»",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Включение режима охранной системы «вне дома»",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "Включится через {time} с",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = ru;
},11282,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var th = {
    "languageName": "th泰语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "ไม่สามารถเปิดใช้งานได้",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "สอบถามเจ้าของฮับควบคุมเพื่อตั้งค่าอุปกรณ์สั่งงานการแจ้งเตือน",
    "mi_comboHub_mainPage_guardMode_hasClose": "ปิดใช้งานการปกป้องแล้ว",
    "mi_comboHub_mainPage_guardMode_toSet": "ตั้งค่าเดี๋ยวนี้",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "เปิดใช้งาน 24/7 แล้วเพื่อปกป้องบ้านของคุณ",
    "mi_comboHub_guardSetting_basicGuard_tips": "การปกป้องขั้นพื้นฐานจะได้รับการเปิดใช้งาน 24/7 การแจ้งเตือนของฮับจะเริ่มทำงานในขณะที่การแจ้งเตือนจะได้รับการส่งไปยังโทรศัพท์ของคุณทันทีที่อุปกรณ์สั่งงานของการปกป้องขั้นพื้นฐานอุปกรณ์ใดก็ตามเริ่มทำงาน",
    "mi_comboHub_guardSetting_homeGuard_tips": "เมื่อการปกป้องเมื่ออยู่บ้านได้รับการเปิดใช้งาน การแจ้งเตือนของฮับจะเริ่มทำงานในขณะที่การแจ้งเตือนจะได้รับการส่งไปยังโทรศัพท์ของคุณทันทีที่อุปกรณ์สั่งงานของการปกป้องเมื่ออยู่บ้านอุปกรณ์ใดก็ตามเริ่มทำงาน",
    "mi_comboHub_guardSetting_awayGuard_tips": "เมื่อการปกป้องเมื่อไม่อยู่บ้านได้รับการเปิดใช้งาน การแจ้งเตือนของฮับจะเริ่มทำงานในขณะที่การแจ้งเตือนจะได้รับการส่งไปยังโทรศัพท์ของคุณทันทีที่อุปกรณ์สั่งงานของการปกป้องเมื่อไม่อยู่บ้านอุปกรณ์ใดก็ตามเริ่มทำงาน",
    "mi_comboHub_guardSetting_sleepGuard_tips": "เมื่อการปกป้องในยามหลับได้รับการเปิดใช้งาน การแจ้งเตือนของฮับจะเริ่มทำงานในขณะที่การแจ้งเตือนจะได้รับการส่งไปยังโทรศัพท์ของคุณทันทีที่อุปกรณ์สั่งงานของการปกป้องในยามหลับอุปกรณ์ใดก็ตามเริ่มทำงาน",
    "mi_comboHub_triggleSubDevices_add": "เพิ่ม",
    "mi_comboHub_setting_indicatorLight": "ตัวบ่งชี้",
    "mi_comboHub_setting_promptSound": "ระดับเสียงของการแจ้งเตือน",
    "mi_comboHub_setting_subDevicesList": "รายชื่ออุปกรณ์สำหรับเด็ก",
    "mi_comboHub_homePage_Alert": "การแจ้งเตือนของฮับ",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "ลบ {deviceName} ในฐานะที่เป็นอุปกรณ์สั่งงานหรือไม่?",
    "mi_comboHub_triggleSubDevices_setting": "กำลังปรับแต่ง…",
    "mi_comboHub_triggleDevices_deleting": "กำลังลบ...",
    "mi_comboHub_triggleDevices_noTriggleDevice": "ไม่มีอุปกรณ์สั่งงานการแจ้งเตือน",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "ไม่สามารถลบ \"{deviceName}\" ในฐานะอุปกรณ์สั่งงานการแจ้งเตือนสำหรับ \"{gatewayName}\" ออกได้",
    "mi_comboHub_mainPage_subDevices": "อุปกรณ์สำหรับเด็ก",
    "mi_comboHub_log_alert_log": "รายการบันทึกการแจ้งเตือน",
    "mi_comboHub_triggle_device_empty_tip": "ไม่มีอุปกรณ์ซึ่งได้รับการจับคู่กับฮับควบคุมนี้ที่สามารถใช้ได้ในการสั่งงานการแจ้งเตือน เช่น เซ็นเซอร์ตรวจจับความเคลื่อนไหว เซ็นเซอร์หน้าต่างและประตูหรือสวิตช์ไร้สาย",
    "mi_comboHub_mainPage_in_basic": "การปกป้องขั้นพื้นฐานทำงานอยู่…",
    "mi_comboHub_mainPage_in_basic_and_home": "การปกป้องขั้นพื้นฐานและการปกป้องเมื่ออยู่บ้านทำงานอยู่…",
    "mi_comboHub_mainPage_in_basic_and_away": "การปกป้องขั้นพื้นฐานและการปกป้องเมื่อไม่อยู่บ้านทำงานอยู่…",
    "mi_comboHub_mainPage_in_basic_and_sleep": "การปกป้องขั้นพื้นฐานและการปกป้องในยามหลับทำงานอยู่…",
    "mi_comboHub_mainPage_in_home": "การปกป้องเมื่ออยู่บ้านทำงานอยู่…",
    "mi_comboHub_mainPage_in_away": "การปกป้องเมื่อไม่อยู่บ้านทำงานอยู่…",
    "mi_comboHub_mainPage_in_aleep": "การปกป้องในยามหลับทำงานอยู่…",
    "mi_comboHub_triggle_device_header_title_1": "อุปกรณ์ที่ไม่สามารถเปิดใช้งานได้",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "กำลังเปิดใช้งานการปกป้องในยามหลับ",
    "mi_comboHub_mainPage_guardMode_homeOpening": "กำลังเปิดใช้งานการปกป้องเมื่ออยู่บ้าน",
    "mi_comboHub_mainPage_guardMode_awayOpening": "กำลังเปิดใช้งานการปกป้องเมื่อไม่อยู่บ้าน",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "ถูกเปิดใช้งานใน {time} วินาที",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = th;
},11285,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var tr = {
    "languageName": "土耳其语",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "Etkinleştirilemedi",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "Merkezi kontrol ünitesi sahibinden tetikleyici bir cihaz eklemesini isteyin.",
    "mi_comboHub_mainPage_guardMode_hasClose": "Koruyucu devre dışı bırakıldı",
    "mi_comboHub_mainPage_guardMode_toSet": "Şimdi ayarla",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "7/24 evinizi korumak için etkinleştirildi",
    "mi_comboHub_guardSetting_basicGuard_tips": "Standart koruyucu 7/24 etkindir, standart koruyucunun tetikleyici cihazlarından herhangi biri tetiklendiğinde hub alarmı çalışır ve telefonunuza bildirimler gönderilir.",
    "mi_comboHub_guardSetting_homeGuard_tips": "Evdeyken koruyucu etkinleştirildiğinde, evdeyken koruyucunun tetikleyici cihazlarından herhangi biri tetiklendiğinde hub alarmı çalışır ve telefonunuza bildirimler gönderilir.",
    "mi_comboHub_guardSetting_awayGuard_tips": "Evde değilken koruyucu etkinleştirildiğinde, evde değilken koruyucunun tetikleyici cihazlarından herhangi biri tetiklendiğinde hub alarmı çalışır ve telefonunuza bildirimler gönderilir.",
    "mi_comboHub_guardSetting_sleepGuard_tips": "Uykuda koruyucu etkinleştirildiğinde, uykuda koruyucunun tetikleyici cihazlarından herhangi biri tetiklendiğinde hub alarmı çalışır ve telefonunuza bildirimler gönderilir.",
    "mi_comboHub_triggleSubDevices_add": "Ekle",
    "mi_comboHub_setting_indicatorLight": "Gösterge",
    "mi_comboHub_setting_promptSound": "Bildirim ses düzeyi",
    "mi_comboHub_setting_subDevicesList": "Çocuk cihazı listesi",
    "mi_comboHub_homePage_Alert": "Hub uyarısı",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "Tetikleyici cihaz olarak {deviceName} silinsin mi?",
    "mi_comboHub_triggleSubDevices_setting": "Yapılandırılıyor…",
    "mi_comboHub_triggleDevices_deleting": "Siliniyor…",
    "mi_comboHub_triggleDevices_noTriggleDevice": "Alarm tetikleyici cihaz bulunamadı",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "{deviceName}, \"{gatewayName}\" için temel korumalığın alarm tetikleyicisi olarak kaldırılamadı.",
    "mi_comboHub_mainPage_subDevices": "Çocuk cihazı",
    "mi_comboHub_log_alert_log": "Uyarı kayıtları",
    "mi_comboHub_triggle_device_empty_tip": "ไม่มีอุปกรณ์ซึ่งได้รับการจับคู่กับฮับควบคุมนี้ที่สามารถใช้ได้ในการสั่งงานการแจ้งเตือน เช่น เซ็นเซอร์ตรวจจับความเคลื่อนไหว เซ็นเซอร์หน้าต่างและประตูหรือสวิตช์ไร้สาย",
    "mi_comboHub_mainPage_in_basic": "Standart koruyucu aktif...",
    "mi_comboHub_mainPage_in_basic_and_home": "Standart & evdeyken koruyucu aktif...",
    "mi_comboHub_mainPage_in_basic_and_away": "Standart & evde değilken koruyucu aktif...",
    "mi_comboHub_mainPage_in_basic_and_sleep": "Standart & uykuda koruyucu aktif...",
    "mi_comboHub_mainPage_in_home": "Evdeyken koruyucu aktif...",
    "mi_comboHub_mainPage_in_away": "Evde değilken koruyucu aktif...",
    "mi_comboHub_mainPage_in_aleep": "Uykuda koruyucu aktif...",
    "mi_comboHub_triggle_device_header_title_1": "Etkinleştirilemeyen cihazlar",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "Uykuda koruyucu etkinleştiriliyor",
    "mi_comboHub_mainPage_guardMode_homeOpening": "Evdeyken koruyucu etkinleştiriliyor",
    "mi_comboHub_mainPage_guardMode_awayOpening": "Evde değilken koruyucu etkinleştiriliyor",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": "{time} s içinde etkinleştirildi",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = tr;
},11288,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHans = {
    "languageName": "中文",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "无法开启",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "请转告该网关的分享者去配置触发报警设备",
    "mi_comboHub_mainPage_guardMode_hasClose": "守护已关闭",
    "mi_comboHub_mainPage_guardMode_toSet": "去设置",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "24小时全天开启守护你的家",
    "mi_comboHub_guardSetting_basicGuard_tips": "基础守护24小时全天开启，只要基础守护中的设备被触发，网关会报警并推送消息到手机。",
    "mi_comboHub_guardSetting_homeGuard_tips": "在家守护启用时，只要在家守护中的设备被触发，网关会报警并推送消息到手机。",
    "mi_comboHub_guardSetting_awayGuard_tips": "离家守护启用时，只要离家守护中的设备被触发，网关会报警并推送消息到手机。",
    "mi_comboHub_guardSetting_sleepGuard_tips": "睡眠守护启用时，只要睡眠守护中的设备被触发，网关会报警并推送消息到手机。",
    "mi_comboHub_triggleSubDevices_add": "添加",
    "mi_comboHub_setting_indicatorLight": "指示灯",
    "mi_comboHub_setting_promptSound": "提示音量",
    "mi_comboHub_setting_subDevicesList": "子设备列表",
    "mi_comboHub_homePage_Alert": "网关报警",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "删除{deviceName}作为触发报警设备？",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleDevices_noTriggleDevice": "暂无触发网关报警设备",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "不可移除“{deviceName}”作为“{gatewayName}”的基础守护触发设备",
    "mi_comboHub_mainPage_subDevices": "子设备",
    "mi_comboHub_log_alert_log": "报警日志",
    "mi_comboHub_triggle_device_empty_tip": "该网关下暂无可作为报警触发源的设备，如人体传感器、门窗传感器以及无线开关等",
    "mi_comboHub_mainPage_in_basic": "基础守护中",
    "mi_comboHub_mainPage_in_basic_and_home": "基础+在家守护中",
    "mi_comboHub_mainPage_in_basic_and_away": "基础+离家守护中",
    "mi_comboHub_mainPage_in_basic_and_sleep": "基础+睡眠守护中",
    "mi_comboHub_mainPage_in_home": "在家守护中",
    "mi_comboHub_mainPage_in_away": "离家守护中",
    "mi_comboHub_mainPage_in_aleep": "睡眠守护中",
    "mi_comboHub_triggle_device_header_title_1": "不可启用的设备",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "正在启用睡眠守护",
    "mi_comboHub_mainPage_guardMode_homeOpening": "正在启用在家守护",
    "mi_comboHub_mainPage_guardMode_awayOpening": "正在启用离家守护",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": " {time}s 后开启",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = zhHans;
},11291,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHantHK = {
    "languageName": "繁体-港",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "無法開啟",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "請轉告該閘道的分享者去設定觸發報警裝置",
    "mi_comboHub_mainPage_guardMode_hasClose": "守護已關閉",
    "mi_comboHub_mainPage_guardMode_toSet": "前往設定",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "24 小時全天開啟守護你的家",
    "mi_comboHub_guardSetting_basicGuard_tips": "基礎守護 24 小時全天開啟，只要基礎守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_homeGuard_tips": "在家守護啟用時，只要在家守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_awayGuard_tips": "離家守護啟用時，只要離家守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_sleepGuard_tips": "睡眠守護啟用時，只要睡眠守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_triggleSubDevices_add": "新增",
    "mi_comboHub_setting_indicatorLight": "指示燈",
    "mi_comboHub_setting_promptSound": "提示音量",
    "mi_comboHub_setting_subDevicesList": "子裝置清單",
    "mi_comboHub_homePage_Alert": "網關報警",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "刪除{deviceName}作為觸發報警裝置?",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleDevices_noTriggleDevice": "暂无触发网关报警设备",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "不可移除“{deviceName}”作为“{gatewayName}”的基础守护触发设备",
    "mi_comboHub_mainPage_subDevices": "子裝置",
    "mi_comboHub_log_alert_log": "報警日誌",
    "mi_comboHub_triggle_device_empty_tip": "該閘道下暫無可作為報警觸發源的裝置，如人體感測器、門窗感測器以及無線開關等",
    "mi_comboHub_mainPage_in_basic": "基礎守護中",
    "mi_comboHub_mainPage_in_basic_and_home": "基礎+在家守護中",
    "mi_comboHub_mainPage_in_basic_and_away": "基礎+離家守護中",
    "mi_comboHub_mainPage_in_basic_and_sleep": "基礎+睡眠守護中",
    "mi_comboHub_mainPage_in_home": "在家守護中",
    "mi_comboHub_mainPage_in_away": "離家守護中",
    "mi_comboHub_mainPage_in_aleep": "睡眠守護中",
    "mi_comboHub_triggle_device_header_title_1": "不可啟用的設備",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "正在啟用睡眠守護",
    "mi_comboHub_mainPage_guardMode_homeOpening": "正在啟用在家守護",
    "mi_comboHub_mainPage_guardMode_awayOpening": "正在啟用離家守護",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": " {time}s 後開啟",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = zhHantHK;
},11294,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var zhHant = {
    "languageName": "繁体-台",
    "mi_comboHub_guardModePage_guardMode_canNotOpen": "無法開啟",
    "mi_comboHub_guardModePage_guardMode_shareCanNotConfig": "請轉告該閘道的分享者去設定觸發報警裝置",
    "mi_comboHub_mainPage_guardMode_hasClose": "守護已關閉",
    "mi_comboHub_mainPage_guardMode_toSet": "前往設定",
    "mi_comboHub_guardModePage_guardMode_protect24HoursADay": "24 小時全天開啟守護您的家",
    "mi_comboHub_guardSetting_basicGuard_tips": "基礎守護 24 小時全天開啟，只要基礎守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_homeGuard_tips": "在家守護啟用時，只要在家守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_awayGuard_tips": "離家守護啟用時，只要離家守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_guardSetting_sleepGuard_tips": "睡眠守護啟用時，只要睡眠守護中的裝置被觸發，網關會報警並推送訊息到手機。",
    "mi_comboHub_triggleSubDevices_add": "新增",
    "mi_comboHub_setting_indicatorLight": "指示燈",
    "mi_comboHub_setting_promptSound": "提示音量",
    "mi_comboHub_setting_subDevicesList": "子裝置清單",
    "mi_comboHub_homePage_Alert": "網關報警",
    "mi_comboHub_triggleDevices_deleteComfirmTips": "刪除{deviceName}作為觸發報警裝置?",
    "mi_comboHub_triggleSubDevices_setting": "正在设置",
    "mi_comboHub_triggleDevices_deleting": "删除中",
    "mi_comboHub_triggleDevices_noTriggleDevice": "暂无触发网关报警设备",
    "mi_comboHub_triggleDevices_canNotDeleteTips": "不可移除“{deviceName}”作为“{gatewayName}”的基础守护触发设备",
    "mi_comboHub_mainPage_subDevices": "子裝置",
    "mi_comboHub_log_alert_log": "報警日誌",
    "mi_comboHub_triggle_device_empty_tip": "該閘道下暫無可作為報警觸發源的裝置，如人體感測器、門窗感測器以及無線開關等",
    "mi_comboHub_mainPage_in_basic": "基礎守護中",
    "mi_comboHub_mainPage_in_basic_and_home": "基礎+在家守護中",
    "mi_comboHub_mainPage_in_basic_and_away": "基礎+離家守護中",
    "mi_comboHub_mainPage_in_basic_and_sleep": "基礎+睡眠守護中",
    "mi_comboHub_mainPage_in_home": "在家守護中",
    "mi_comboHub_mainPage_in_away": "離家守護中",
    "mi_comboHub_mainPage_in_aleep": "睡眠守護中",
    "mi_comboHub_triggle_device_header_title_1": "不可啟用的裝置",
    "mi_comboHub_mainPage_guardMode_sleepOpening": "正在啟用睡眠守護",
    "mi_comboHub_mainPage_guardMode_homeOpening": "正在啟用在家守護",
    "mi_comboHub_mainPage_guardMode_awayOpening": "正在啟用離家守護",
    "mi_comboHub_mainPage_guardMode_enabled_in_time": " {time}s 後開啟",
    "mi_comboHub_debugPage_debugMode": "调试模式",
    "mi_comboHub_debugPage_zigbeeDebugMode": "Zigbee调试模式"
  };
  exports.default = zhHant;
},11297,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reduxActions = _$$_REQUIRE(_dependencyMap[3]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[4]);

  var _ActionTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _handleActions;

  function getDeviceDids(subDeviceList) {
    var ids = [];

    for (var i = 0, len = subDeviceList.length; i < len; i += 1) {
      ids.push(subDeviceList[i].did || subDeviceList[i].deviceID);
    }

    return ids;
  }

  function test(scenesList, subDeviceList, subDeviceListDataType) {
    var configInfo = {};

    if (subDeviceListDataType === 'default') {
      for (var i = 0; i < 4; i += 1) {
        if (_LHCommonFunction.CommonMethod.Find(scenesList, 'identify', _LHCommonFunction.LHGuardTypeMode.getGuardModelWithGuardType(i).identify) > -1) {
          configInfo[i] = true;
        }
      }
    } else {
      var ids = getDeviceDids(subDeviceList);

      for (var _i = 0, len = scenesList.length; _i < len; _i += 1) {
        if (scenesList[_i].setting && scenesList[_i].setting.trigger && ids.indexOf(scenesList[_i].setting.trigger[0].did) > -1) {
          configInfo[_LHCommonFunction.LHGuardTypeMode.getGuardTypeWithSceneIdentify(scenesList[_i].identify)] = true;
        }
      }
    }

    return configInfo;
  }

  function getConfigInfo(scenesList, subDeviceList, btDeviceList, subDeviceListDataType, btDeviceListDataType) {
    var configInfo = {};

    for (var i = 0; i < 4; i += 1) {
      configInfo[i] = false;
    }

    var result = (0, _extends2.default)(configInfo, test(scenesList, subDeviceList, subDeviceListDataType), test(scenesList, btDeviceList, btDeviceListDataType));
    return result;
  }

  var _default = (0, _reduxActions.handleActions)((_handleActions = {}, (0, _defineProperty2.default)(_handleActions, _ActionTypes.SCENES_LIST, {
    next: function next(state, action) {
      var res = action.payload || [];
      var configInfo = getConfigInfo(res, state.subDeviceList, state.btDeviceList, state.subDeviceListDataType, state.btDeviceListDataType);
      return (0, _extends2.default)({}, state, {
        scenesList: action.payload,
        configInfo: configInfo,
        dataType: 'server'
      });
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.SCENES_LIST_FROM_CACHE, {
    next: function next(state, action) {
      var res = action.payload || {};

      if (res.hasCache && state.dataType !== 'server') {
        var configInfo = getConfigInfo(res.data, state.subDeviceList, state.btDeviceList, state.subDeviceListDataType, state.btDeviceListDataType);
        return (0, _extends2.default)({}, state, {
          scenesList: action.payload.data,
          configInfo: configInfo,
          dataType: 'cache'
        });
      } else {
        return (0, _extends2.default)({}, state);
      }
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.SUB_DEVICE_LIST, {
    next: function next(state, action) {
      var res = action.payload || [];
      var configInfo = getConfigInfo(state.scenesList, res, state.btDeviceList, 'server', state.btDeviceListDataType);
      return (0, _extends2.default)({}, state, {
        subDeviceList: action.payload,
        configInfo: configInfo,
        subDeviceListDataType: 'server'
      });
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.SUB_DEVICE_LIST_FROM_CACHE, {
    next: function next(state, action) {
      var res = action.payload || {};

      if (res.hasCache && state.subDeviceListDataType !== 'server') {
        var configInfo = getConfigInfo(state.scenesList, res.data, state.btDeviceList, 'cache', state.btDeviceListDataType);
        return (0, _extends2.default)({}, state, {
          subDeviceList: action.payload.data,
          configInfo: configInfo,
          subDeviceListDataType: 'cache'
        });
      } else {
        return (0, _extends2.default)({}, state);
      }
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.BT_DEVICE_LIST, {
    next: function next(state, action) {
      var res = action.payload || [];
      var configInfo = getConfigInfo(state.scenesList, state.subDeviceList, res, state.subDeviceListDataType, 'server');
      return (0, _extends2.default)({}, state, {
        btDeviceList: action.payload,
        configInfo: configInfo,
        btDeviceListDataType: 'server'
      });
    },
    throw: function _throw(state) {
      return state;
    }
  }), (0, _defineProperty2.default)(_handleActions, _ActionTypes.BT_DEVICE_LIST_FROM_CACHE, {
    next: function next(state, action) {
      var res = action.payload || {};

      if (res.hasCache && state.btDeviceListDataType !== 'server') {
        var configInfo = getConfigInfo(state.scenesList, state.subDeviceList, res.data, state.subDeviceListDataType, 'cache');
        return (0, _extends2.default)({}, state, {
          btDeviceList: action.payload.data,
          configInfo: configInfo,
          btDeviceListDataType: 'cache'
        });
      } else {
        return (0, _extends2.default)({}, state);
      }
    },
    throw: function _throw(state) {
      return state;
    }
  }), _handleActions), {
    scenesList: [],
    configInfo: {
      0: false,
      1: false,
      2: false,
      3: false
    },
    dataType: 'default',
    subDeviceList: [],
    subDeviceListDataType: 'default',
    btDeviceList: [],
    btDeviceListDataType: 'default'
  });

  exports.default = _default;
},11300,[14305,14317,14344,11135,10004,11243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _reactRedux = _$$_REQUIRE(_dependencyMap[10]);

  var _redux = _$$_REQUIRE(_dependencyMap[11]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[12]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[13]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Resources = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LHMainPageStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _GuardMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Scenes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _LHLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _GuardModeConstant = _$$_REQUIRE(_dependencyMap[22]);

  var subscribeMessagesErrorCount = 0;
  var subDeviceCacheKey = 'LHSubDeviceListKey';

  var isShared = _LHCommonFunction.LHDeviceAuthorityUtils.isShared();

  var isOnline = _miot.Device.isOnline;

  var LHMainPage = function (_React$Component) {
    (0, _inherits2.default)(LHMainPage, _React$Component);
    (0, _createClass2.default)(LHMainPage, null, [{
      key: "compareCountDownInfo",
      value: function compareCountDownInfo(newInfo, oldInfo) {
        var keys = Object.keys(newInfo);

        for (var i = 0, len = keys.length; i < len; i += 1) {
          if (newInfo[keys[i]] !== oldInfo[keys[i]]) return true;
        }

        return false;
      }
    }, {
      key: "isAllNotConfig",
      value: function isAllNotConfig(configInfo) {
        var keys = Object.keys(configInfo || {});

        for (var i = 0, len = keys.length; i < len; i += 1) {
          if (configInfo[keys[i]]) return false;
        }

        return true;
      }
    }, {
      key: "randomNum",
      value: function randomNum(min, max) {
        var range = max - min;
        var rand = Math.random();
        var num = min + rand * range;
        return num;
      }
    }, {
      key: "getDotPosition",
      value: function getDotPosition(center, radius, degree) {
        if (degree >= 0 && degree <= 90) {
          return {
            left: center + radius * Math.sin(degree / 180 * Math.PI),
            top: center - radius * Math.cos(degree / 180 * Math.PI)
          };
        } else if (degree > 90 && degree <= 180) {
          return {
            left: center + radius * Math.sin(degree / 180 * Math.PI),
            top: center - radius * Math.cos(degree / 180 * Math.PI)
          };
        } else if (degree > 180 && degree <= 270) {
          return {
            left: center + radius * Math.sin(degree / 180 * Math.PI),
            top: center - radius * Math.cos(degree / 180 * Math.PI)
          };
        } else {
          return {
            left: center + radius * Math.sin(degree / 180 * Math.PI),
            top: center - radius * Math.cos(degree / 180 * Math.PI)
          };
        }
      }
    }]);

    function LHMainPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LHMainPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHMainPage).call(this, props));
      _this.count = 0;
      _this.dotAnimatePool = [];
      _this.hasGetServerLatestLogFlag = false;
      _this.isLoadingFlag = true;
      _this.subDeviceList = null;
      _this.state = {
        deviceName: _miot.Device.name,
        rotateAnimate: new _reactNative.Animated.Value(0),
        logText: _LHCommonFunction.LHCommonLocalizableString.common_log_loading,
        dotList: [],
        showAlertCard: false,
        showAutoUpgradeCard: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHMainPage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.initCache();
        if (!isOnline) return;
        this.initBackLoad();
        this.checkAuthorization();
        this.setupPageSubscription();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnimate();
        this.addDeviceNameChangedListener();
        this.addSubscribeListener();
        this.storeSubscribe();
        this.checkFirmwareUpgradeAuto();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.authorizationCancelListener) this.authorizationCancelListener.remove();
        if (this.deviceNameChangedListener) this.deviceNameChangedListener.remove();
        if (this.willFocusSubscription) this.willFocusSubscription.remove();
        if (this.didFocusSubscription) this.didFocusSubscription.remove();
      }
    }, {
      key: "checkFirmwareUpgradeAuto",
      value: function checkFirmwareUpgradeAuto() {
        var _this2 = this;

        _LHCommonFunction.LHFirmwareUpgradeAutoUtils.checkFirmwareUpgradeAutoShouldShow(function (isShow) {
          _this2.setState({
            showAutoUpgradeCard: isShow
          });
        });
      }
    }, {
      key: "getConfigFlag",
      value: function getConfigFlag(value) {
        var ScenesReducers = this.props.ScenesReducers;
        var configInfo = ScenesReducers.configInfo;
        return configInfo[value];
      }
    }, {
      key: "setupPageSubscription",
      value: function setupPageSubscription() {
        var _this3 = this;

        var navigation = this.props.navigation;
        this.didFocusSubscription = navigation.addListener('didFocus', function () {
          _this3.loadSubDeviceListFromCache();
        });
      }
    }, {
      key: "loadSubDeviceListFromCache",
      value: function loadSubDeviceListFromCache() {
        var _this4 = this;

        _LHCommonFunction.LHMiServer.GetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey(subDeviceCacheKey)).then(function (res) {
          _this4.subDeviceList = res;
        });
      }
    }, {
      key: "getArmingModeText",
      value: function getArmingModeText() {
        var _this$props = this.props,
            ScenesReducers = _this$props.ScenesReducers,
            GuardModeReducers = _this$props.GuardModeReducers;
        var armingMode = GuardModeReducers.armingMode,
            targetMode = GuardModeReducers.targetMode,
            countDownInfo = GuardModeReducers.countDownInfo;
        var configInfo = ScenesReducers.configInfo;
        var countDownUnknowTimeTexts = {
          0: '',
          1: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_homeOpening,
          2: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_awayOpening,
          3: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_sleepOpening
        };
        var countDownTexts = {
          0: '',
          1: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_enabled_in_time,
          2: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_enabled_in_time,
          3: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_enabled_in_time
        };

        if (targetMode > -1 && armingMode !== targetMode) {
          if (LHMainPage.isAllNotConfig(configInfo)) {
            return '';
          } else if (!configInfo[0] && armingMode < 1 && targetMode < 1) {
            return '';
          }

          if (targetMode > 0 && countDownInfo.isCounting && countDownInfo.time > -1 && targetMode === countDownInfo.mode) {
            return countDownTexts[targetMode].replace('{time}', countDownInfo.time);
          } else {
            return countDownUnknowTimeTexts[targetMode];
          }
        } else {
          if (LHMainPage.isAllNotConfig(configInfo)) {
            return '';
          } else if (!configInfo[0] && armingMode < 1) {
            return '';
          }

          if (armingMode > 0 && countDownInfo.isCounting && armingMode === countDownInfo.mode) {
            if (countDownInfo.time > -1) {
              return countDownTexts[armingMode].replace('{time}', countDownInfo.time);
            } else {
              return countDownUnknowTimeTexts[armingMode];
            }
          }

          var allArmingMode = {
            '-1': '',
            0: '',
            1: _LHCommonFunction.LHCommonLocalizableString.guard_type_home,
            2: _LHCommonFunction.LHCommonLocalizableString.guard_type_away,
            3: _LHCommonFunction.LHCommonLocalizableString.guard_type_sleep
          };
          return allArmingMode[armingMode] || '';
        }
      }
    }, {
      key: "getGuardMode",
      value: function getGuardMode() {
        var _this$props2 = this.props,
            ScenesReducers = _this$props2.ScenesReducers,
            GuardModeReducers = _this$props2.GuardModeReducers;
        var armingMode = GuardModeReducers.armingMode;
        var configInfo = ScenesReducers.configInfo;
        var key = '';

        if (configInfo[0]) {
          key = '0_';
        }

        key += armingMode;
        var allGuardMode = {
          '0_0': _LHLocalizableString.default.mi_comboHub_mainPage_in_basic,
          '0_1': _LHLocalizableString.default.mi_comboHub_mainPage_in_basic_and_home,
          '0_2': _LHLocalizableString.default.mi_comboHub_mainPage_in_basic_and_away,
          '0_3': _LHLocalizableString.default.mi_comboHub_mainPage_in_basic_and_sleep,
          1: _LHLocalizableString.default.mi_comboHub_mainPage_in_home,
          2: _LHLocalizableString.default.mi_comboHub_mainPage_in_away,
          3: _LHLocalizableString.default.mi_comboHub_mainPage_in_aleep
        };
        return allGuardMode[key];
      }
    }, {
      key: "getPageStatus",
      value: function getPageStatus() {
        var _this$props3 = this.props,
            ScenesReducers = _this$props3.ScenesReducers,
            GuardModeReducers = _this$props3.GuardModeReducers;
        var armingMode = GuardModeReducers.armingMode;
        var configInfo = ScenesReducers.configInfo;

        if (LHMainPage.isAllNotConfig(configInfo)) {
          return 'guardOff';
        } else if (!configInfo[0] && armingMode < 1) {
          return 'guardOff';
        }

        return 'normal';
      }
    }, {
      key: "getDotAnimate",
      value: function getDotAnimate() {
        var _this5 = this;

        var animated;

        if (this.dotAnimatePool.length > 0) {
          animated = this.dotAnimatePool.pop();
          animated.setValue(0);
        } else {
          animated = new _reactNative.Animated.Value(0);
        }

        _reactNative.Animated.timing(animated, {
          toValue: 1.3,
          duration: 1300,
          easing: _reactNative.Easing.linear,
          useNativeDriver: true
        }).start(function () {
          var dotList = _this5.state.dotList;

          for (var i = 0, len = dotList.length; i < len; i += 1) {
            if (dotList[i].dotAnimate === animated) {
              dotList.splice(i, 1);
              i -= 1;
              len -= 1;
            }
          }

          _this5.dotAnimatePool.push(animated);

          _this5.forceUpdate();
        });

        return animated;
      }
    }, {
      key: "setLatestLogCache",
      value: function setLatestLogCache(data) {
        _LHCommonFunction.LHMiServer.SetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey('latestLog'), data);
      }
    }, {
      key: "initDotList",
      value: function initDotList(value) {
        var dotList = this.state.dotList;
        var endDegree = 160 + 360 * value;
        var startDegree = endDegree - 10;

        var wrapWidth = _LHCommonFunction.LHUiUtils.GetPx(282);

        var center = wrapWidth / 2;
        var minRadius = _LHCommonFunction.LHUiUtils.GetPx(70) / 2 + 10;
        var maxRadius = wrapWidth / 2 - 5;

        var dotNumber = _LHCommonFunction.CommonMethod.RandomNum(1, 3);

        var dotAnimate = this.getDotAnimate();

        for (var i = 0; i < dotNumber; i += 1) {
          var radius = LHMainPage.randomNum(minRadius, maxRadius);
          var degree = LHMainPage.randomNum(startDegree, endDegree);
          var position = LHMainPage.getDotPosition(center, radius, degree);
          dotList.push({
            degree: degree,
            index: '' + +new Date() + Math.random(),
            width: LHMainPage.randomNum(0, 3),
            left: position.left,
            top: position.top,
            dotAnimate: dotAnimate
          });
        }

        this.forceUpdate();
      }
    }, {
      key: "storeSubscribe",
      value: function storeSubscribe() {
        var _this6 = this;

        var store = this.props.store;
        store.subscribe(function () {
          var newState = store.getState();
          var _this6$props = _this6.props,
              GuardModeReducers = _this6$props.GuardModeReducers,
              countDown = _this6$props.countDown,
              GuardModeReport = _this6$props.GuardModeReport;
          var countDownInfo = GuardModeReducers.countDownInfo,
              targetMode = GuardModeReducers.targetMode;
          var newCountDownInfo = newState.GuardModeReducers.countDownInfo;

          if (newCountDownInfo.time === 0 && countDownInfo.time === 1) {
            if (_this6.countDownId) {
              clearTimeout(_this6.countDownId);
              _this6.countDownId = null;
            }

            countDown({
              isCounting: false,
              time: -1
            });
            GuardModeReport([{
              code: 0,
              value: [targetMode]
            }]);
          }

          if (LHMainPage.compareCountDownInfo(newCountDownInfo, countDownInfo)) {
            if (newCountDownInfo.isCounting) {
              if (newCountDownInfo.time >= 0) {
                if (_this6.countDownId) {
                  clearTimeout(_this6.countDownId);
                  _this6.countDownId = null;
                }

                _this6.countDownId = setTimeout(function () {
                  _this6.countDownId = null;
                  countDown({
                    time: newCountDownInfo.time - 1
                  });
                }, 1000);
              }
            }
          }
        });
      }
    }, {
      key: "checkAuthorization",
      value: function checkAuthorization() {
        var _this7 = this;

        this.authorizationCancelListener = _LHCommonFunction.LHAuthorizationUtils.Authorization({
          licenseTitle: _LHCommonFunction.LHCommonLocalizableString.common_setting_user_agreement,
          policyTitle: _LHCommonFunction.LHCommonLocalizableString.common_setting_privacy_policy,
          policyResource: _Resources.default.PolicyLicense,
          authorizationSucc: function authorizationSucc() {
            _this7.init(true);
          }
        });
      }
    }, {
      key: "init",
      value: function init(needErrorToast) {
        var _this8 = this;

        this.isLoadingFlag = true;
        this.loadLogData();
        this.loadLogDataFromCache();
        var _this$props4 = this.props,
            getArmingInfo = _this$props4.getArmingInfo,
            loadScenes = _this$props4.loadScenes,
            loadSubDevice = _this$props4.loadSubDevice,
            loadBtDevice = _this$props4.loadBtDevice;
        Promise.all([getArmingInfo(), loadScenes(), loadSubDevice(), loadBtDevice()]).then(function (res) {
          var data = res && res[0] && res[0].payload || [];
          _this8.isLoadingFlag = false;

          var alertItem = _LHCommonFunction.CommonMethod.FindSpec(data, _GuardModeConstant.GuardModeSpec.alert.siid, _GuardModeConstant.GuardModeSpec.alert.piid);

          if (alertItem && alertItem.code === 0 && alertItem.value > 0) {
            _this8.setState({
              showAlertCard: true
            });
          }

          if (needErrorToast) {
            var armingModeItem = _LHCommonFunction.CommonMethod.FindSpec(data, _GuardModeConstant.GuardModeSpec.armingMode.siid, _GuardModeConstant.GuardModeSpec.armingMode.piid);

            var targetModeItem = _LHCommonFunction.CommonMethod.FindSpec(data, _GuardModeConstant.GuardModeSpec.targetMode.siid, _GuardModeConstant.GuardModeSpec.targetMode.piid);

            if (targetModeItem.code !== 0 || armingModeItem.code !== 0) {
              _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
            }
          }
        }).catch(function () {
          _this8.isLoadingFlag = false;
          if (needErrorToast) _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
        });
      }
    }, {
      key: "initBackLoad",
      value: function initBackLoad() {
        var _this9 = this;

        var navigation = this.props.navigation;
        this.willFocusSubscription = navigation.addListener('willFocus', function () {
          if (!_this9.isLoadingFlag) _this9.init();
        });
      }
    }, {
      key: "initCache",
      value: function initCache() {
        var _this$props5 = this.props,
            getArmingInfoFromCache = _this$props5.getArmingInfoFromCache,
            loadScenesFromCache = _this$props5.loadScenesFromCache,
            loadSubDeviceFromCache = _this$props5.loadSubDeviceFromCache,
            loadBtDeviceFromCache = _this$props5.loadBtDeviceFromCache;
        Promise.all([getArmingInfoFromCache(), loadScenesFromCache(), loadSubDeviceFromCache(), loadBtDeviceFromCache()]).then(function () {}).catch(function () {});
      }
    }, {
      key: "addDeviceNameChangedListener",
      value: function addDeviceNameChangedListener() {
        var _this10 = this;

        this.deviceNameChangedListener = _miot.DeviceEvent.deviceNameChanged.addListener(function (event) {
          _this10.setState({
            deviceName: event.name
          });
        });
      }
    }, {
      key: "addSubscribeListener",
      value: function addSubscribeListener() {
        var _this11 = this;

        this.receivedMessagesListener = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, map, messages) {
          var armingModeIndex = _LHCommonFunction.CommonMethod.Find(messages, 'key', 'prop.3.1');

          if (armingModeIndex > -1) {
            var _this11$props = _this11.props,
                countDown = _this11$props.countDown,
                GuardModeReport = _this11$props.GuardModeReport;
            countDown({
              isCounting: false
            });
            GuardModeReport(messages);
          }

          var targetModeIndex = _LHCommonFunction.CommonMethod.Find(messages, 'key', 'prop.3.21');

          var _this11$props2 = _this11.props,
              GuardModeReducers = _this11$props2.GuardModeReducers,
              setTargetMode = _this11$props2.setTargetMode;
          var targetMode = GuardModeReducers.targetMode,
              countDownInfo = GuardModeReducers.countDownInfo;

          if (targetModeIndex > -1 && targetMode !== messages[0].value[0]) {
            var _countDown = _this11.props.countDown;

            if (countDownInfo.isCounting && countDownInfo.mode !== messages[0].value[0]) {
              _countDown({
                isCounting: false,
                time: -1,
                mode: messages[0].value[0]
              });
            }

            setTargetMode([{
              code: 0,
              value: messages[0].value[0]
            }]);
          }

          var alertIndex = _LHCommonFunction.CommonMethod.Find(messages, 'key', 'prop.3.22');

          if (alertIndex > -1) {
            var alertValue = messages[0].value[0];

            if (alertValue > 0) {
              _this11.setState({
                showAlertCard: true
              });

              setTimeout(function () {
                _this11.loadLogData();
              }, 100);
            } else {
              _this11.setState({
                showAlertCard: false
              });
            }
          }
        });
        this.subscribeMessages();
      }
    }, {
      key: "subscribeMessages",
      value: function subscribeMessages() {
        var _this12 = this;

        _miot.Device.getDeviceWifi().subscribeMessages('prop.3.1', 'prop.3.21', 'prop.3.22').then(function (subcription) {
          _this12.subscribeMessagesLisener = subcription;
        }).catch(function () {
          subscribeMessagesErrorCount += 1;

          if (subscribeMessagesErrorCount < 3) {
            _this12.subscribeMessages();
          }
        });
      }
    }, {
      key: "startAnimate",
      value: function startAnimate() {
        var _this13 = this;

        this.rotateAnimateStart();
        var rotateAnimate = this.state.rotateAnimate;
        rotateAnimate.addListener(function (animated) {
          var navigation = _this13.props.navigation;
          if (!navigation.isFocused() || _this13.getPageStatus() !== 'normal') return;
          _this13.count += 1;
          if (_this13.count > 36) _this13.count = 0;
          if (_this13.count % (_reactNative.Platform.OS === 'android' ? 8 : 18) === 0) _this13.initDotList(animated.value);
        });
      }
    }, {
      key: "rotateAnimateStart",
      value: function rotateAnimateStart() {
        var _this14 = this;

        var rotateAnimate = this.state.rotateAnimate;
        rotateAnimate.setValue(0);

        _reactNative.Animated.timing(rotateAnimate, {
          toValue: 1,
          duration: 7000,
          easing: _reactNative.Easing.linear
        }).start(function () {
          _this14.rotateAnimateStart();
        });
      }
    }, {
      key: "loadLogData",
      value: function loadLogData() {
        var _this15 = this;

        if (this.isLoadingLogData || isShared) return;
        this.isLoadingLogData = true;

        _LHCommonFunction.LHMiServer.LoadScenesHistoryForDevice(_miot.Device.deviceID, Math.ceil(+new Date() / 1000), 1, function (res) {
          _this15.isLoadingLogData = false;
          var dataSource = res && res.history || [];
          _this15.hasGetServerLatestLogFlag = true;

          if (dataSource.length > 0) {
            _this15.setLatestLogCache(dataSource);

            _this15.setState({
              logText: _LHCommonFunction.LHDateUtils.GetHomeLogTime(dataSource[0].time, true) + ' ' + _LogUtils.default.GetLogContent(dataSource[0]).content
            });
          } else {
            _this15.loadLogFail(true);
          }
        }, function () {
          _this15.isLoadingLogData = false;

          _this15.loadLogFail();
        });
      }
    }, {
      key: "loadLogFail",
      value: function loadLogFail(logEmpty) {
        var logText = this.state.logText;

        if (logEmpty || logText === _LHCommonFunction.LHCommonLocalizableString.common_log_loading) {
          this.setState({
            logText: _LHCommonFunction.LHCommonLocalizableString.common_log_no_logs
          });
        }
      }
    }, {
      key: "loadLogDataFromCache",
      value: function loadLogDataFromCache() {
        var _this16 = this;

        if (isShared) return;

        _LHCommonFunction.LHMiServer.GetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey('latestLog')).then(function (res) {
          if (_this16.hasGetServerLatestLogFlag || !res) return;

          _this16.setState({
            logText: _LHCommonFunction.LHDateUtils.GetHomeLogTime(res[0].time, true) + ' ' + res[0].name
          });
        });
      }
    }, {
      key: "offAlert",
      value: function offAlert() {
        var _this17 = this;

        if (this.isOffAlert) return;
        this.isOffAlert = true;

        _LHCommonFunction.LHMiServer.SetPropertiesValue([(0, _objectSpread2.default)({}, _GuardModeConstant.GuardModeSpec.alert, {
          value: 0
        })], function (res) {
          _this17.isOffAlert = false;

          if (res && res.length > 0 && +res[0].code === 0) {
            _this17.setState({
              showAlertCard: false
            });
          } else {
            _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
          }
        }, function () {
          _this17.isOffAlert = false;

          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
        });
      }
    }, {
      key: "getSelectCardData",
      value: function getSelectCardData() {
        var _this18 = this;

        return [{
          text: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_guard_home,
          testID: 'atHomeItem',
          icon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.atHomeOffDark : _Resources.default.MainPage.atHomeOff,
          activeIcon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.atHomeOnDark : _Resources.default.MainPage.atHomeOn,
          onPress: function onPress() {
            _this18.showGoToTriggerDeviceDialog(1);
          }
        }, {
          text: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_guard_away,
          testID: 'awayFromHomeItem',
          icon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.awayFromHomeOffDark : _Resources.default.MainPage.awayFromHomeOff,
          activeIcon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.awayFromHomeOnDark : _Resources.default.MainPage.awayFromHomeOn,
          onPress: function onPress() {
            _this18.showGoToTriggerDeviceDialog(2);
          }
        }, {
          text: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_guard_sleep,
          testID: 'sleepItem',
          icon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.sleepOffDark : _Resources.default.MainPage.sleepOff,
          activeIcon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.sleepOnDark : _Resources.default.MainPage.sleepOn,
          onPress: function onPress() {
            _this18.showGoToTriggerDeviceDialog(3);
          }
        }];
      }
    }, {
      key: "showGoToTriggerDeviceDialog",
      value: function showGoToTriggerDeviceDialog(type) {
        var _this19 = this;

        var GuardModeReducers = this.props.GuardModeReducers;
        var armingMode = GuardModeReducers.armingMode,
            targetMode = GuardModeReducers.targetMode;

        if (type === armingMode || type === targetMode) {
          this.changeMode(0);
          return;
        }

        if (this.getConfigFlag(type)) {
          var countDownInfo = GuardModeReducers.countDownInfo;

          if (type === GuardModeReducers.armingMode || countDownInfo.isCounting && type === countDownInfo.mode) {
            return;
          }

          this.changeMode(type);
        } else {
          var msg = {
            0: '',
            1: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardModePage_guardMode_homeNotConfiguredTips,
            2: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardModePage_guardMode_awayNotConfiguredTips,
            3: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardModePage_guardMode_sleepNotConfiguredTips
          };

          _LHCommonFunction.LHDialogUtils.MessageDialogShow({
            title: _LHLocalizableString.default.mi_comboHub_guardModePage_guardMode_canNotOpen,
            message: msg[type],
            confirm: _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_toSet,
            confirmStyle: {
              color: _PluginConfig.default.ThemeColor
            },
            onConfirm: function onConfirm() {
              if (isShared) {
                _LHCommonFunction.LHToastUtils.showShortToast(_LHLocalizableString.default.mi_comboHub_guardModePage_guardMode_shareCanNotConfig + '\n');

                return;
              }

              var navigation = _this19.props.navigation;
              navigation.navigate('LHAlarmTriggleDevicePage', {
                pageType: type,
                callBack: function callBack(editType, curChangeType) {
                  if (editType === 'add') {
                    _this19.loadScenes(function () {
                      var newGuardModeReducers = _this19.props.GuardModeReducers;
                      var newTargetMode = newGuardModeReducers.targetMode;

                      if (curChangeType === type && type !== newTargetMode) {
                        _this19.changeMode(type, true);
                      }
                    });
                  } else {
                    _this19.triggleDeiviceDelete();
                  }
                }
              });
            },
            cancel: _LHCommonFunction.LHCommonLocalizableString.common_cancel,
            onCancel: function onCancel() {}
          });
        }
      }
    }, {
      key: "triggleDeiviceDelete",
      value: function triggleDeiviceDelete() {
        var _this20 = this;

        var GuardModeReducers = this.props.GuardModeReducers;
        this.loadScenes(function () {
          var targetMode = GuardModeReducers.targetMode;

          if (!_this20.getConfigFlag(targetMode) && targetMode > 0) {
            _this20.changeMode(0, true);
          }
        });
      }
    }, {
      key: "changeMode",
      value: function changeMode(value, hideLoading) {
        var _this$props6 = this.props,
            setGuardMode = _this$props6.setGuardMode,
            countDown = _this$props6.countDown,
            GuardModeReducers = _this$props6.GuardModeReducers,
            GuardModeReport = _this$props6.GuardModeReport;

        if (!hideLoading) {}

        setGuardMode(value).then(function (action) {
          var res = action.payload;

          if (res && res[0] && res[0].code === 0) {
            var time = GuardModeReducers.delayTime[_GuardModeConstant.GuardModeConstant.modeKeys[value]];

            if (time > 0) {
              countDown({
                time: time,
                mode: value,
                isCounting: true
              });
            } else {
              GuardModeReport([{
                code: 0,
                value: [value]
              }]);
              countDown({
                time: -2,
                mode: value,
                isCounting: false
              });
            }
          } else {
            _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
          }
        }).catch(function () {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);
        });
      }
    }, {
      key: "loadScenes",
      value: function loadScenes(callback) {
        var loadScenes = this.props.loadScenes;
        loadScenes().then(function (res) {
          if (typeof callback === 'function') callback(res);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this21 = this;

        var _this$state = this.state,
            rotateAnimate = _this$state.rotateAnimate,
            deviceName = _this$state.deviceName,
            dotList = _this$state.dotList,
            logText = _this$state.logText,
            showAlertCard = _this$state.showAlertCard,
            showAutoUpgradeCard = _this$state.showAutoUpgradeCard;
        var GuardModeReducers = this.props.GuardModeReducers;
        var armingMode = GuardModeReducers.armingMode;
        var content;
        var status = this.getPageStatus();

        if (status === 'guardOff') {
          content = _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.topContentWrap
          }, _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.guardImgWrap
          }, _react.default.createElement(_reactNative.Image, {
            style: _LHMainPageStyle.default.guardImgBg,
            source: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.homepageRoundOffDark : _Resources.default.MainPage.homepageRoundOff
          })), _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.textWrap
          }, _react.default.createElement(_LHCommonUI.LHText, {
            key: "off_1",
            style: _LHMainPageStyle.default.statusText
          }, _LHLocalizableString.default.mi_comboHub_mainPage_guardMode_hasClose)));
        } else if (status === 'normal') {
          content = _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.topContentWrap
          }, _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.guardImgWrap
          }, _react.default.createElement(_reactNative.Image, {
            style: _LHMainPageStyle.default.guardImgBg,
            source: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.homepageRoundBottomBgDark : _Resources.default.MainPage.homepageRoundBottomBg
          }), _react.default.createElement(_reactNative.Animated.Image, {
            resizeMode: "contain",
            style: [_LHMainPageStyle.default.guardImgAnimate, {
              transform: [{
                rotateZ: rotateAnimate.interpolate({
                  inputRange: [0, 1],
                  outputRange: ['0deg', '360deg']
                })
              }]
            }],
            source: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.homepageRoundBottomDark : _Resources.default.MainPage.homepageRoundBottom
          }), _react.default.createElement(_reactNative.Image, {
            resizeMode: "contain",
            style: [_LHMainPageStyle.default.guardInnerImg],
            source: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.homepageRoundCenterDark : _Resources.default.MainPage.homepageRoundCenter
          }), dotList.map(function (item) {
            return _react.default.createElement(_reactNative.Animated.View, {
              key: 'dot_' + item.index,
              style: {
                width: item.width,
                height: item.width,
                borderRadius: item.width / 2,
                position: 'absolute',
                backgroundColor: '#bef3ff',
                zIndex: 1,
                left: item.left,
                top: item.top,
                overflow: 'hidden',
                opacity: item.dotAnimate.interpolate({
                  inputRange: [0, 0.3, 1.1, 1.3],
                  outputRange: [0, 1, 1, 0]
                }),
                transform: [{
                  scale: item.dotAnimate.interpolate({
                    inputRange: [0, 0.9, 1.1],
                    outputRange: [1, 1, 0]
                  })
                }]
              }
            });
          })), _react.default.createElement(_reactNative.View, {
            style: _LHMainPageStyle.default.textWrap
          }, _react.default.createElement(_LHCommonUI.LHText, {
            style: [_LHMainPageStyle.default.statusText, {
              color: _PluginConfig.default.ThemeColor
            }]
          }, this.getGuardMode())));
        }

        var pageColor = _LHCommonFunction.LHUiColorUtils.getColor('#f2f2f2', '#000000');

        return _react.default.createElement(_reactNative.View, {
          style: [_LHCommonStyle.default.pageGrayStyle, {
            backgroundColor: pageColor
          }],
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('mainPage'),
          testID: "mainPage"
        }, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
          isDark: _LHCommonFunction.LHUiColorUtils.isDark,
          title: deviceName || _miot.Device.name,
          style: [_LHCommonStyle.default.navigatorWithoutBorderBotoom, {
            backgroundColor: pageColor
          }],
          onPressLeft: function onPressLeft() {
            _this21.componentWillUnmount();

            _miot.Package.exit();
          },
          rightButtons: [{
            type: 'deafultMoreBtn',
            press: function press() {
              var navigation = _this21.props.navigation;
              navigation.navigate('LHSettingPage');
            }
          }]
        }), _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false,
          ref: function ref(_ref) {
            _this21.scrollView = _ref;
          },
          style: {
            flex: 1
          },
          contentContainerStyle: {
            flexGrow: 1,
            justifyContent: 'space-between'
          },
          stickyHeaderIndices: [0]
        }, _react.default.createElement(_reactNative.View, null, content), _react.default.createElement(_reactNative.View, {
          style: _LHMainPageStyle.default.bottomWrap
        }, showAutoUpgradeCard ? _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: _LHCommonFunction.LHFirmwareUpgradeAutoUtils.getCardConfig(_LHCommonUI.LHCommonIcon.card.cardUpgrade, function () {
            var navigation = _this21.props.navigation;
            navigation.navigate('FirmwareUpgradeAuto');

            _this21.setState({
              showAutoUpgradeCard: false
            });
          }),
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(60),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }) : null, showAlertCard ? _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: [{
            title: _LHLocalizableString.default.mi_comboHub_homePage_Alert,
            iconSource: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.abnormalIconDark : _Resources.default.MainPage.abnormalIcon,
            rightIconSource: _Resources.default.MainPage.defaultCardClose,
            rightIconSourceStyle: {
              width: _LHCommonFunction.LHUiUtils.GetPx(24),
              height: _LHCommonFunction.LHUiUtils.GetPx(24)
            },
            rightIconPress: function rightIconPress() {
              _this21.offAlert();
            }
          }],
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(60),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }) : null, _react.default.createElement(_LHCommonUI.LHSelectCard, {
          title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_guard,
          subTitle: this.getArmingModeText() || _LHCommonFunction.LHCommonLocalizableString.common_state_closed,
          selectIndex: armingMode <= 0 ? -1 : armingMode - 1,
          activeColor: _PluginConfig.default.ThemeColor,
          data: this.getSelectCardData(),
          cardStyle: {
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }), isShared ? null : _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_mainPage_trigger_devices,
            testID: 'triggerDevicesEntrance',
            iconSource: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.alarmDviceDark : _Resources.default.MainPage.alarmDvice,
            onPress: function onPress() {
              var navigation = _this21.props.navigation;
              navigation.navigate('LHAlarmTriggleDevicePage', {
                pageType: 0,
                callBack: function callBack(editType) {
                  if (editType === 'delete') {
                    _this21.triggleDeiviceDelete();
                  }
                }
              });
            }
          }],
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(80),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }), isShared ? null : _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.common_log_title,
            testID: 'logEntrance',
            subTitle: logText,
            iconSource: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.homepageLogDark : _Resources.default.MainPage.homepageLog,
            onPress: function onPress() {
              var navigation = _this21.props.navigation;
              navigation.navigate('LHLogPage');
            }
          }],
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(80),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }), isShared ? null : _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.common_hub_zigbee_subdevice,
            testID: 'subDevicesEntrance',
            iconSource: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.subDeviceDark : _Resources.default.MainPage.subDevice,
            onPress: function onPress() {
              var navigation = _this21.props.navigation;
              navigation.navigate('LHSubDevicesListPage', {
                subDeviceList: _this21.subDeviceList,
                pageType: 'hub'
              });
            }
          }],
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(80),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }), isShared ? null : _react.default.createElement(_LHCommonUI.LHCardBase, {
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.common_hub_bluetooth_subdevice,
            testID: 'subDevicesEntrance',
            iconSource: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.MainPage.subDeviceDark : _Resources.default.MainPage.subDevice,
            onPress: function onPress() {
              _miot.Host.ui.openBtGatewayPage();
            }
          }],
          cardStyle: {
            height: _LHCommonFunction.LHUiUtils.GetPx(80),
            marginTop: _LHCommonFunction.LHUiUtils.GetPx(10),
            marginBottom: _LHCommonFunction.LHUiUtils.GetPx(10)
          }
        }))));
      }
    }]);
    return LHMainPage;
  }(_react.default.Component);

  LHMainPage.navigationOptions = function () {
    return {
      header: null
    };
  };

  var _default = (0, _reactRedux.connect)(function (state, props) {
    return {
      store: props.screenProps.store,
      GuardModeReducers: state.GuardModeReducers,
      ScenesReducers: state.ScenesReducers
    };
  }, function (dispatch) {
    return (0, _objectSpread2.default)({}, (0, _redux.bindActionCreators)(_GuardMode.default, dispatch), (0, _redux.bindActionCreators)(_Scenes.default, dispatch));
  })((0, _LHCommonFunction.LHPureRenderDecorator)(LHMainPage));

  exports.default = _default;
},11303,[14305,14314,14320,14371,14377,14323,14386,10297,10033,10074,10274,10304,10004,10265,11240,11306,11675,11678,11681,11684,11249,11687,11246]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _policyLicenseUrl = _$$_REQUIRE(_dependencyMap[2]);

  var Resources = function Resources() {
    (0, _classCallCheck2.default)(this, Resources);
  };

  exports.default = Resources;
  Resources.MainPage = {
    homepageRoundOff: _$$_REQUIRE(_dependencyMap[3]),
    homepageRoundOffDark: _$$_REQUIRE(_dependencyMap[4]),
    homepageRoundBottomBg: _$$_REQUIRE(_dependencyMap[5]),
    homepageRoundBottomBgDark: _$$_REQUIRE(_dependencyMap[6]),
    homepageRoundBottom: _$$_REQUIRE(_dependencyMap[7]),
    homepageRoundBottomDark: _$$_REQUIRE(_dependencyMap[8]),
    homepageRoundCenter: _$$_REQUIRE(_dependencyMap[9]),
    homepageRoundCenterDark: _$$_REQUIRE(_dependencyMap[10]),
    homepageMode: _$$_REQUIRE(_dependencyMap[11]),
    homepageLog: _$$_REQUIRE(_dependencyMap[12]),
    homepageLogDark: _$$_REQUIRE(_dependencyMap[13]),
    abnormalIcon: _$$_REQUIRE(_dependencyMap[14]),
    abnormalIconDark: _$$_REQUIRE(_dependencyMap[15]),
    defaultCardClose: _$$_REQUIRE(_dependencyMap[16]),
    alarmDvice: _$$_REQUIRE(_dependencyMap[17]),
    alarmDviceDark: _$$_REQUIRE(_dependencyMap[18]),
    atHomeOff: _$$_REQUIRE(_dependencyMap[19]),
    atHomeOffDark: _$$_REQUIRE(_dependencyMap[20]),
    atHomeOn: _$$_REQUIRE(_dependencyMap[21]),
    atHomeOnDark: _$$_REQUIRE(_dependencyMap[22]),
    awayFromHomeOff: _$$_REQUIRE(_dependencyMap[23]),
    awayFromHomeOffDark: _$$_REQUIRE(_dependencyMap[24]),
    awayFromHomeOn: _$$_REQUIRE(_dependencyMap[25]),
    awayFromHomeOnDark: _$$_REQUIRE(_dependencyMap[26]),
    sleepOff: _$$_REQUIRE(_dependencyMap[27]),
    sleepOffDark: _$$_REQUIRE(_dependencyMap[28]),
    sleepOn: _$$_REQUIRE(_dependencyMap[29]),
    sleepOnDark: _$$_REQUIRE(_dependencyMap[30]),
    subDevice: _$$_REQUIRE(_dependencyMap[31]),
    subDeviceDark: _$$_REQUIRE(_dependencyMap[32])
  };
  Resources.GuideMode = {
    emptyImg: _$$_REQUIRE(_dependencyMap[33]),
    seletcedImg: _$$_REQUIRE(_dependencyMap[34]),
    unSeletcedImg: _$$_REQUIRE(_dependencyMap[35]),
    seletcedIcon: _$$_REQUIRE(_dependencyMap[36]),
    seletcedIconDark: _$$_REQUIRE(_dependencyMap[37]),
    modeEdit: _$$_REQUIRE(_dependencyMap[38]),
    modeEditPress: _$$_REQUIRE(_dependencyMap[39]),
    basisProtect: _$$_REQUIRE(_dependencyMap[40]),
    basisProtectOff: _$$_REQUIRE(_dependencyMap[41])
  };
  Resources.PolicyLicense = _policyLicenseUrl.PolicyLicenseUrl;
},11306,[14305,14320,11309,11558,11561,11564,11567,11570,11573,11576,11579,11582,11585,11588,11591,11594,11597,11600,11603,11606,11609,11612,11615,11618,11621,11624,11627,11630,11633,11636,11639,11642,11645,11648,11651,11654,11657,11660,11663,11666,11669,11672]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PolicyLicenseUrl = undefined;
  var PolicyLicenseUrl = {
    "licenseUrl_gateway_mgl03_ar": _$$_REQUIRE(_dependencyMap[0]),
    "licenseUrl_gateway_mgl03_be": _$$_REQUIRE(_dependencyMap[1]),
    "licenseUrl_gateway_mgl03_belg": _$$_REQUIRE(_dependencyMap[2]),
    "licenseUrl_gateway_mgl03_bg": _$$_REQUIRE(_dependencyMap[3]),
    "licenseUrl_gateway_mgl03_ch": _$$_REQUIRE(_dependencyMap[4]),
    "licenseUrl_gateway_mgl03_cz": _$$_REQUIRE(_dependencyMap[5]),
    "licenseUrl_gateway_mgl03_da": _$$_REQUIRE(_dependencyMap[6]),
    "licenseUrl_gateway_mgl03_de": _$$_REQUIRE(_dependencyMap[7]),
    "licenseUrl_gateway_mgl03_el": _$$_REQUIRE(_dependencyMap[8]),
    "licenseUrl_gateway_mgl03_en": _$$_REQUIRE(_dependencyMap[9]),
    "licenseUrl_gateway_mgl03_es": _$$_REQUIRE(_dependencyMap[10]),
    "licenseUrl_gateway_mgl03_es_la": _$$_REQUIRE(_dependencyMap[11]),
    "licenseUrl_gateway_mgl03_fi": _$$_REQUIRE(_dependencyMap[12]),
    "licenseUrl_gateway_mgl03_fr": _$$_REQUIRE(_dependencyMap[13]),
    "licenseUrl_gateway_mgl03_gdpr_en": _$$_REQUIRE(_dependencyMap[14]),
    "licenseUrl_gateway_mgl03_he": _$$_REQUIRE(_dependencyMap[15]),
    "licenseUrl_gateway_mgl03_hk": _$$_REQUIRE(_dependencyMap[16]),
    "licenseUrl_gateway_mgl03_hu": _$$_REQUIRE(_dependencyMap[17]),
    "licenseUrl_gateway_mgl03_id": _$$_REQUIRE(_dependencyMap[18]),
    "licenseUrl_gateway_mgl03_it": _$$_REQUIRE(_dependencyMap[19]),
    "licenseUrl_gateway_mgl03_ja": _$$_REQUIRE(_dependencyMap[20]),
    "licenseUrl_gateway_mgl03_ko": _$$_REQUIRE(_dependencyMap[21]),
    "licenseUrl_gateway_mgl03_ko_en": _$$_REQUIRE(_dependencyMap[22]),
    "licenseUrl_gateway_mgl03_lu": _$$_REQUIRE(_dependencyMap[23]),
    "licenseUrl_gateway_mgl03_ms": _$$_REQUIRE(_dependencyMap[24]),
    "licenseUrl_gateway_mgl03_my": _$$_REQUIRE(_dependencyMap[25]),
    "licenseUrl_gateway_mgl03_nl": _$$_REQUIRE(_dependencyMap[26]),
    "licenseUrl_gateway_mgl03_no": _$$_REQUIRE(_dependencyMap[27]),
    "licenseUrl_gateway_mgl03_pl": _$$_REQUIRE(_dependencyMap[28]),
    "licenseUrl_gateway_mgl03_pt": _$$_REQUIRE(_dependencyMap[29]),
    "licenseUrl_gateway_mgl03_pt_br": _$$_REQUIRE(_dependencyMap[30]),
    "licenseUrl_gateway_mgl03_ro": _$$_REQUIRE(_dependencyMap[31]),
    "licenseUrl_gateway_mgl03_ru": _$$_REQUIRE(_dependencyMap[32]),
    "licenseUrl_gateway_mgl03_sv": _$$_REQUIRE(_dependencyMap[33]),
    "licenseUrl_gateway_mgl03_th": _$$_REQUIRE(_dependencyMap[34]),
    "licenseUrl_gateway_mgl03_tr": _$$_REQUIRE(_dependencyMap[35]),
    "licenseUrl_gateway_mgl03_tw": _$$_REQUIRE(_dependencyMap[36]),
    "licenseUrl_gateway_mgl03_uk": _$$_REQUIRE(_dependencyMap[37]),
    "licenseUrl_gateway_mgl03_vi": _$$_REQUIRE(_dependencyMap[38]),
    "licenseUrl_gateway_mgl03_zh": _$$_REQUIRE(_dependencyMap[39]),
    "licenseUrl_gateway_mgl03_zh_en": _$$_REQUIRE(_dependencyMap[40]),
    "policyUrl_gateway_mgl03_ar": _$$_REQUIRE(_dependencyMap[41]),
    "policyUrl_gateway_mgl03_be": _$$_REQUIRE(_dependencyMap[42]),
    "policyUrl_gateway_mgl03_belg": _$$_REQUIRE(_dependencyMap[43]),
    "policyUrl_gateway_mgl03_bg": _$$_REQUIRE(_dependencyMap[44]),
    "policyUrl_gateway_mgl03_ch": _$$_REQUIRE(_dependencyMap[45]),
    "policyUrl_gateway_mgl03_cz": _$$_REQUIRE(_dependencyMap[46]),
    "policyUrl_gateway_mgl03_da": _$$_REQUIRE(_dependencyMap[47]),
    "policyUrl_gateway_mgl03_de": _$$_REQUIRE(_dependencyMap[48]),
    "policyUrl_gateway_mgl03_el": _$$_REQUIRE(_dependencyMap[49]),
    "policyUrl_gateway_mgl03_en": _$$_REQUIRE(_dependencyMap[50]),
    "policyUrl_gateway_mgl03_es": _$$_REQUIRE(_dependencyMap[51]),
    "policyUrl_gateway_mgl03_es_la": _$$_REQUIRE(_dependencyMap[52]),
    "policyUrl_gateway_mgl03_fi": _$$_REQUIRE(_dependencyMap[53]),
    "policyUrl_gateway_mgl03_fr": _$$_REQUIRE(_dependencyMap[54]),
    "policyUrl_gateway_mgl03_gdpr_en": _$$_REQUIRE(_dependencyMap[55]),
    "policyUrl_gateway_mgl03_he": _$$_REQUIRE(_dependencyMap[56]),
    "policyUrl_gateway_mgl03_hk": _$$_REQUIRE(_dependencyMap[57]),
    "policyUrl_gateway_mgl03_hu": _$$_REQUIRE(_dependencyMap[58]),
    "policyUrl_gateway_mgl03_id": _$$_REQUIRE(_dependencyMap[59]),
    "policyUrl_gateway_mgl03_it": _$$_REQUIRE(_dependencyMap[60]),
    "policyUrl_gateway_mgl03_ja": _$$_REQUIRE(_dependencyMap[61]),
    "policyUrl_gateway_mgl03_ko": _$$_REQUIRE(_dependencyMap[62]),
    "policyUrl_gateway_mgl03_ko_en": _$$_REQUIRE(_dependencyMap[63]),
    "policyUrl_gateway_mgl03_lu": _$$_REQUIRE(_dependencyMap[64]),
    "policyUrl_gateway_mgl03_ms": _$$_REQUIRE(_dependencyMap[65]),
    "policyUrl_gateway_mgl03_my": _$$_REQUIRE(_dependencyMap[66]),
    "policyUrl_gateway_mgl03_nl": _$$_REQUIRE(_dependencyMap[67]),
    "policyUrl_gateway_mgl03_no": _$$_REQUIRE(_dependencyMap[68]),
    "policyUrl_gateway_mgl03_pl": _$$_REQUIRE(_dependencyMap[69]),
    "policyUrl_gateway_mgl03_pt": _$$_REQUIRE(_dependencyMap[70]),
    "policyUrl_gateway_mgl03_pt_br": _$$_REQUIRE(_dependencyMap[71]),
    "policyUrl_gateway_mgl03_ro": _$$_REQUIRE(_dependencyMap[72]),
    "policyUrl_gateway_mgl03_ru": _$$_REQUIRE(_dependencyMap[73]),
    "policyUrl_gateway_mgl03_sv": _$$_REQUIRE(_dependencyMap[74]),
    "policyUrl_gateway_mgl03_th": _$$_REQUIRE(_dependencyMap[75]),
    "policyUrl_gateway_mgl03_tr": _$$_REQUIRE(_dependencyMap[76]),
    "policyUrl_gateway_mgl03_tw": _$$_REQUIRE(_dependencyMap[77]),
    "policyUrl_gateway_mgl03_uk": _$$_REQUIRE(_dependencyMap[78]),
    "policyUrl_gateway_mgl03_vi": _$$_REQUIRE(_dependencyMap[79]),
    "policyUrl_gateway_mgl03_zh": _$$_REQUIRE(_dependencyMap[80]),
    "policyUrl_gateway_mgl03_zh_en": _$$_REQUIRE(_dependencyMap[81])
  };
  exports.PolicyLicenseUrl = PolicyLicenseUrl;
},11309,[11312,11315,11318,11321,11324,11327,11330,11333,11336,11339,11342,11345,11348,11351,11354,11357,11360,11363,11366,11369,11372,11375,11378,11381,11384,11387,11390,11393,11396,11399,11402,11405,11408,11411,11414,11417,11420,11423,11426,11429,11432,11435,11438,11441,11444,11447,11450,11453,11456,11459,11462,11465,11468,11471,11474,11477,11480,11483,11486,11489,11492,11495,11498,11501,11504,11507,11510,11513,11516,11519,11522,11525,11528,11531,11534,11537,11540,11543,11546,11549,11552,11555]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "440205eb4f19b4b3f6c8b3490248be41",
    "name": "agreement_gateway_mgl03_ar",
    "type": "html"
  });
},11312,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "737165d280f07592d5359cb1d8781bde",
    "name": "agreement_gateway_mgl03_be",
    "type": "html"
  });
},11315,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "25e6150fac91e0f30a8e4f85a72a3686",
    "name": "agreement_gateway_mgl03_belg",
    "type": "html"
  });
},11318,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "ffabb0b5991d0fdf17ffe571d1e62a95",
    "name": "agreement_gateway_mgl03_bg",
    "type": "html"
  });
},11321,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "b7053c691704472502de25261cbab685",
    "name": "agreement_gateway_mgl03_ch",
    "type": "html"
  });
},11324,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "09f718866ba7fe3814b983aff35e8647",
    "name": "agreement_gateway_mgl03_cz",
    "type": "html"
  });
},11327,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6d254fa7f05ea56d75440a9a0c84db29",
    "name": "agreement_gateway_mgl03_da",
    "type": "html"
  });
},11330,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "d5cdb9870528e2bf26b3d10dbe78726d",
    "name": "agreement_gateway_mgl03_de",
    "type": "html"
  });
},11333,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "03670f4dc82c38e1d85e71fb7ad7cc30",
    "name": "agreement_gateway_mgl03_el",
    "type": "html"
  });
},11336,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "36ff9c94f2aac8e81be3a82ed251fe26",
    "name": "agreement_gateway_mgl03_en",
    "type": "html"
  });
},11339,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "fb5a5b2c617de5afccad0ff37a100210",
    "name": "agreement_gateway_mgl03_es",
    "type": "html"
  });
},11342,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "97f2f0cda6f632a01e2a9ccba3bdca76",
    "name": "agreement_gateway_mgl03_es_la",
    "type": "html"
  });
},11345,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "5bb23ae6607e84489980058a7d546c09",
    "name": "agreement_gateway_mgl03_fi",
    "type": "html"
  });
},11348,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "7414802b2ec83a5eb9ae927d6414801f",
    "name": "agreement_gateway_mgl03_fr",
    "type": "html"
  });
},11351,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "170de1088ec18542a5f79402985957cf",
    "name": "agreement_gateway_mgl03_gdpr_en",
    "type": "html"
  });
},11354,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "bf0cc3aa1b5e3121b9b8d7134ce318af",
    "name": "agreement_gateway_mgl03_he",
    "type": "html"
  });
},11357,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6977b05a83a6990656dff359276313fb",
    "name": "agreement_gateway_mgl03_hk",
    "type": "html"
  });
},11360,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "c359b60d853394852907b7f7db808296",
    "name": "agreement_gateway_mgl03_hu",
    "type": "html"
  });
},11363,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6351794c9f8a733a9cb0ee38b60855e3",
    "name": "agreement_gateway_mgl03_id",
    "type": "html"
  });
},11366,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "668b1dac8db3c19210c7b11bd367bb90",
    "name": "agreement_gateway_mgl03_it",
    "type": "html"
  });
},11369,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "19e043745741103c81cd0bb81c6e4b63",
    "name": "agreement_gateway_mgl03_ja",
    "type": "html"
  });
},11372,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "b59fdce7396b33c6990726103cfe6b27",
    "name": "agreement_gateway_mgl03_ko",
    "type": "html"
  });
},11375,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "3247e314f987644a468735bf16e61b2e",
    "name": "agreement_gateway_mgl03_ko_en",
    "type": "html"
  });
},11378,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "7b0a83ee77d6a44d52215973b9f0da3f",
    "name": "agreement_gateway_mgl03_lu",
    "type": "html"
  });
},11381,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "015ea5b128a56327b043d91f9651dcbd",
    "name": "agreement_gateway_mgl03_ms",
    "type": "html"
  });
},11384,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "a36fdb8d5eeec51dea739c946eaa1787",
    "name": "agreement_gateway_mgl03_my",
    "type": "html"
  });
},11387,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6262c13323bc284e22ea3f97a29033c8",
    "name": "agreement_gateway_mgl03_nl",
    "type": "html"
  });
},11390,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "d9ee65d5890a76da284a2679a71c6f0b",
    "name": "agreement_gateway_mgl03_no",
    "type": "html"
  });
},11393,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "0b537c930a25fd47611bc07cef1875ca",
    "name": "agreement_gateway_mgl03_pl",
    "type": "html"
  });
},11396,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "18a955fb462d1eb88efdaa01a3a57e0f",
    "name": "agreement_gateway_mgl03_pt",
    "type": "html"
  });
},11399,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6d428b8b5172d81c6a69694a8c88f053",
    "name": "agreement_gateway_mgl03_pt_br",
    "type": "html"
  });
},11402,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "79d266172d7ca101b795fd30d2a952fd",
    "name": "agreement_gateway_mgl03_ro",
    "type": "html"
  });
},11405,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "64d6265f57361480a97c40b9dbb6378f",
    "name": "agreement_gateway_mgl03_ru",
    "type": "html"
  });
},11408,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "1b1058e6f8f74479c2209df64ccf61f2",
    "name": "agreement_gateway_mgl03_sv",
    "type": "html"
  });
},11411,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "0211191d15e4f0aff494e2c597b0c892",
    "name": "agreement_gateway_mgl03_th",
    "type": "html"
  });
},11414,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "7976e6a426e9af1a45bb8026953afed4",
    "name": "agreement_gateway_mgl03_tr",
    "type": "html"
  });
},11417,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "83a2ee3bccc06c9c80207adb74bbd48a",
    "name": "agreement_gateway_mgl03_tw",
    "type": "html"
  });
},11420,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "aa2c153250970df9c4c7ab0acd547143",
    "name": "agreement_gateway_mgl03_uk",
    "type": "html"
  });
},11423,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "4b8f3b57338d4b0957acad7d8788bdda",
    "name": "agreement_gateway_mgl03_vi",
    "type": "html"
  });
},11426,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "883dcf71cc56ccd2e285be5f5bef48b6",
    "name": "agreement_gateway_mgl03_zh",
    "type": "html"
  });
},11429,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "71babccb056471405c5329d5efdcea71",
    "name": "agreement_gateway_mgl03_zh_en",
    "type": "html"
  });
},11432,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "52d343f4a07178652018ca3151c829ea",
    "name": "policy_gateway_mgl03_ar",
    "type": "html"
  });
},11435,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6aefd0b2051d241e465cc285b492eb86",
    "name": "policy_gateway_mgl03_be",
    "type": "html"
  });
},11438,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "38cb2e48348629da550e6d8118927f29",
    "name": "policy_gateway_mgl03_belg",
    "type": "html"
  });
},11441,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "f885fe8e8e08bbb89feb96d515846d97",
    "name": "policy_gateway_mgl03_bg",
    "type": "html"
  });
},11444,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "949ce144b8fe257c84b74baae071f10e",
    "name": "policy_gateway_mgl03_ch",
    "type": "html"
  });
},11447,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "bfc360406f1c2acb01ce48f3616ae683",
    "name": "policy_gateway_mgl03_cz",
    "type": "html"
  });
},11450,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "de27886c39db517bd3078efd6b138073",
    "name": "policy_gateway_mgl03_da",
    "type": "html"
  });
},11453,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "51cd66eef3ac38f88db0943736cf7a5d",
    "name": "policy_gateway_mgl03_de",
    "type": "html"
  });
},11456,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "793d14f113f8ac0c89a64fdfd771b66c",
    "name": "policy_gateway_mgl03_el",
    "type": "html"
  });
},11459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "1c83686e6a2593dd1d3005e9d024e6c0",
    "name": "policy_gateway_mgl03_en",
    "type": "html"
  });
},11462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "afd14ac99a49176feb05de0b0ea888de",
    "name": "policy_gateway_mgl03_es",
    "type": "html"
  });
},11465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "53e7d42795468a7f75acd698bc5ec71d",
    "name": "policy_gateway_mgl03_es_la",
    "type": "html"
  });
},11468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "8f740d57f68c1761c0efc6ff42dcdb30",
    "name": "policy_gateway_mgl03_fi",
    "type": "html"
  });
},11471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "cf91bc5e8a0c781f1b85694350ff7980",
    "name": "policy_gateway_mgl03_fr",
    "type": "html"
  });
},11474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "1543197f5166c1b3b0dcad59cc395360",
    "name": "policy_gateway_mgl03_gdpr_en",
    "type": "html"
  });
},11477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "751ab0a098568e6918ff83fc67ca981b",
    "name": "policy_gateway_mgl03_he",
    "type": "html"
  });
},11480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "bb1a41c589c7264488beb68ba74e22f5",
    "name": "policy_gateway_mgl03_hk",
    "type": "html"
  });
},11483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "7d0ea7fc1657a06a991dc83c3963cbe9",
    "name": "policy_gateway_mgl03_hu",
    "type": "html"
  });
},11486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "705c318c5daa412d4c204a5471cc5fd7",
    "name": "policy_gateway_mgl03_id",
    "type": "html"
  });
},11489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "9d0bcec24515ef5685d3f02d239594af",
    "name": "policy_gateway_mgl03_it",
    "type": "html"
  });
},11492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "5f422a88eac133b25d58edbcd7f0391e",
    "name": "policy_gateway_mgl03_ja",
    "type": "html"
  });
},11495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "27b289f0407e91819cd52279c4e1ba83",
    "name": "policy_gateway_mgl03_ko",
    "type": "html"
  });
},11498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "3c5096097575f395a35926c71bbb0024",
    "name": "policy_gateway_mgl03_ko_en",
    "type": "html"
  });
},11501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
  ;
  (function () {
    var undefined;
    var VERSION = '4.17.20';
    var LARGE_ARRAY_SIZE = 200;
    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
        FUNC_ERROR_TEXT = 'Expected a function';
    var HASH_UNDEFINED = '__lodash_hash_undefined__';
    var MAX_MEMOIZE_SIZE = 500;
    var PLACEHOLDER = '__lodash_placeholder__';
    var CLONE_DEEP_FLAG = 1,
        CLONE_FLAT_FLAG = 2,
        CLONE_SYMBOLS_FLAG = 4;
    var COMPARE_PARTIAL_FLAG = 1,
        COMPARE_UNORDERED_FLAG = 2;
    var WRAP_BIND_FLAG = 1,
        WRAP_BIND_KEY_FLAG = 2,
        WRAP_CURRY_BOUND_FLAG = 4,
        WRAP_CURRY_FLAG = 8,
        WRAP_CURRY_RIGHT_FLAG = 16,
        WRAP_PARTIAL_FLAG = 32,
        WRAP_PARTIAL_RIGHT_FLAG = 64,
        WRAP_ARY_FLAG = 128,
        WRAP_REARG_FLAG = 256,
        WRAP_FLIP_FLAG = 512;
    var DEFAULT_TRUNC_LENGTH = 30,
        DEFAULT_TRUNC_OMISSION = '...';
    var HOT_COUNT = 800,
        HOT_SPAN = 16;
    var LAZY_FILTER_FLAG = 1,
        LAZY_MAP_FLAG = 2,
        LAZY_WHILE_FLAG = 3;
    var INFINITY = 1 / 0,
        MAX_SAFE_INTEGER = 9007199254740991,
        MAX_INTEGER = 1.7976931348623157e+308,
        NAN = 0 / 0;
    var MAX_ARRAY_LENGTH = 4294967295,
        MAX_ARRAY_INDEX = 4294967294,
        HALF_MAX_ARRAY_LENGTH = 2147483647;
    var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
    var argsTag = '[object Arguments]',
        arrayTag = '[object Array]',
        asyncTag = '[object AsyncFunction]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        domExcTag = '[object DOMException]',
        errorTag = '[object Error]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        nullTag = '[object Null]',
        objectTag = '[object Object]',
        promiseTag = '[object Promise]',
        proxyTag = '[object Proxy]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        symbolTag = '[object Symbol]',
        undefinedTag = '[object Undefined]',
        weakMapTag = '[object WeakMap]',
        weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';
    var reEmptyStringLeading = /\b__p \+= '';/g,
        reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
        reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
        reUnescapedHtml = /[&<>"']/g,
        reHasEscapedHtml = RegExp(reEscapedHtml.source),
        reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    var reEscape = /<%-([\s\S]+?)%>/g,
        reEvaluate = /<%([\s\S]+?)%>/g,
        reInterpolate = /<%=([\s\S]+?)%>/g;
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        reIsPlainProp = /^\w*$/,
        rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
        reHasRegExpChar = RegExp(reRegExpChar.source);
    var reTrim = /^\s+|\s+$/g,
        reTrimStart = /^\s+/,
        reTrimEnd = /\s+$/;
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
        reSplitDetails = /,? & /;
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reEscapeChar = /\\(\\)?/g;
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var reFlags = /\w*$/;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var reNoMatch = /($^)/;
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    var rsAstralRange = "\\ud800-\\udfff",
        rsComboMarksRange = "\\u0300-\\u036f",
        reComboHalfMarksRange = "\\ufe20-\\ufe2f",
        rsComboSymbolsRange = "\\u20d0-\\u20ff",
        rsComboRange = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
        rsDingbatRange = "\\u2700-\\u27bf",
        rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
        rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
        rsPunctuationRange = "\\u2000-\\u206f",
        rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
        rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        rsVarRange = "\\ufe0e\\ufe0f",
        rsBreakRange = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsApos = "['\u2019]",
        rsAstral = "[\\ud800-\\udfff]",
        rsBreak = "[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]",
        rsCombo = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
        rsDigits = '\\d+',
        rsDingbat = "[\\u2700-\\u27bf]",
        rsLower = "[a-z\\xdf-\\xf6\\xf8-\\xff]",
        rsMisc = "[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",
        rsFitz = "\\ud83c[\\udffb-\\udfff]",
        rsModifier = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])",
        rsNonAstral = "[^\\ud800-\\udfff]",
        rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
        rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
        rsUpper = "[A-Z\\xc0-\\xd6\\xd8-\\xde]",
        rsZWJ = "\\u200d";
    var rsMiscLower = "(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])",
        rsMiscUpper = "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])",
        rsOptContrLower = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
        rsOptContrUpper = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
        reOptMod = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
        rsOptVar = "[\\ufe0e\\ufe0f]?",
        rsOptJoin = "(?:\\u200d(?:" + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
        rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
        rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
        rsSeq = "[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?" + rsOptJoin,
        rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
        rsSymbol = '(?:' + ["[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?", rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
    var reApos = RegExp(rsApos, 'g');
    var reComboMark = RegExp(rsCombo, 'g');
    var reUnicode = RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|" + rsSymbol + rsSeq, 'g');
    var reUnicodeWord = RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=" + [rsBreak, rsUpper, '$'].join('|') + ')', "(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=" + [rsBreak, "[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])", '$'].join('|') + ')', "[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?", "[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?", rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
    var reHasUnicode = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
    var templateCounter = -1;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    var deburredLetters = {
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      "\u0100": 'A',
      "\u0102": 'A',
      "\u0104": 'A',
      "\u0101": 'a',
      "\u0103": 'a',
      "\u0105": 'a',
      "\u0106": 'C',
      "\u0108": 'C',
      "\u010A": 'C',
      "\u010C": 'C',
      "\u0107": 'c',
      "\u0109": 'c',
      "\u010B": 'c',
      "\u010D": 'c',
      "\u010E": 'D',
      "\u0110": 'D',
      "\u010F": 'd',
      "\u0111": 'd',
      "\u0112": 'E',
      "\u0114": 'E',
      "\u0116": 'E',
      "\u0118": 'E',
      "\u011A": 'E',
      "\u0113": 'e',
      "\u0115": 'e',
      "\u0117": 'e',
      "\u0119": 'e',
      "\u011B": 'e',
      "\u011C": 'G',
      "\u011E": 'G',
      "\u0120": 'G',
      "\u0122": 'G',
      "\u011D": 'g',
      "\u011F": 'g',
      "\u0121": 'g',
      "\u0123": 'g',
      "\u0124": 'H',
      "\u0126": 'H',
      "\u0125": 'h',
      "\u0127": 'h',
      "\u0128": 'I',
      "\u012A": 'I',
      "\u012C": 'I',
      "\u012E": 'I',
      "\u0130": 'I',
      "\u0129": 'i',
      "\u012B": 'i',
      "\u012D": 'i',
      "\u012F": 'i',
      "\u0131": 'i',
      "\u0134": 'J',
      "\u0135": 'j',
      "\u0136": 'K',
      "\u0137": 'k',
      "\u0138": 'k',
      "\u0139": 'L',
      "\u013B": 'L',
      "\u013D": 'L',
      "\u013F": 'L',
      "\u0141": 'L',
      "\u013A": 'l',
      "\u013C": 'l',
      "\u013E": 'l',
      "\u0140": 'l',
      "\u0142": 'l',
      "\u0143": 'N',
      "\u0145": 'N',
      "\u0147": 'N',
      "\u014A": 'N',
      "\u0144": 'n',
      "\u0146": 'n',
      "\u0148": 'n',
      "\u014B": 'n',
      "\u014C": 'O',
      "\u014E": 'O',
      "\u0150": 'O',
      "\u014D": 'o',
      "\u014F": 'o',
      "\u0151": 'o',
      "\u0154": 'R',
      "\u0156": 'R',
      "\u0158": 'R',
      "\u0155": 'r',
      "\u0157": 'r',
      "\u0159": 'r',
      "\u015A": 'S',
      "\u015C": 'S',
      "\u015E": 'S',
      "\u0160": 'S',
      "\u015B": 's',
      "\u015D": 's',
      "\u015F": 's',
      "\u0161": 's',
      "\u0162": 'T',
      "\u0164": 'T',
      "\u0166": 'T',
      "\u0163": 't',
      "\u0165": 't',
      "\u0167": 't',
      "\u0168": 'U',
      "\u016A": 'U',
      "\u016C": 'U',
      "\u016E": 'U',
      "\u0170": 'U',
      "\u0172": 'U',
      "\u0169": 'u',
      "\u016B": 'u',
      "\u016D": 'u',
      "\u016F": 'u',
      "\u0171": 'u',
      "\u0173": 'u',
      "\u0174": 'W',
      "\u0175": 'w',
      "\u0176": 'Y',
      "\u0177": 'y',
      "\u0178": 'Y',
      "\u0179": 'Z',
      "\u017B": 'Z',
      "\u017D": 'Z',
      "\u017A": 'z',
      "\u017C": 'z',
      "\u017E": 'z',
      "\u0132": 'IJ',
      "\u0133": 'ij',
      "\u0152": 'Oe',
      "\u0153": 'oe',
      "\u0149": "'n",
      "\u017F": 's'
    };
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };
    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      "\u2028": 'u2028',
      "\u2029": 'u2029'
    };
    var freeParseFloat = parseFloat,
        freeParseInt = parseInt;
    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function('return this')();
    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;

    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require('util').types;

        if (types) {
          return types;
        }

        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
        nodeIsDate = nodeUtil && nodeUtil.isDate,
        nodeIsMap = nodeUtil && nodeUtil.isMap,
        nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
        nodeIsSet = nodeUtil && nodeUtil.isSet,
        nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);

        case 1:
          return func.call(thisArg, args[0]);

        case 2:
          return func.call(thisArg, args[0], args[1]);

        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }

      return func.apply(thisArg, args);
    }

    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }

      return accumulator;
    }

    function arrayEach(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;

      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEvery(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }

      return true;
    }

    function arrayFilter(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }

      return result;
    }

    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }

      return false;
    }

    function arrayMap(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }

      return result;
    }

    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }

      return array;
    }

    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
          length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[++index];
      }

      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }

      return accumulator;
    }

    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[--length];
      }

      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }

      return accumulator;
    }

    function arraySome(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }

      return false;
    }

    var asciiSize = baseProperty('length');

    function asciiToArray(string) {
      return string.split('');
    }

    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
          index = fromIndex + (fromRight ? 1 : -1);

      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }

      return -1;
    }

    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }

      return -1;
    }

    function baseIsNaN(value) {
      return value !== value;
    }

    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }

    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined : object[key];
      };
    }

    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined : object[key];
      };
    }

    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);

      while (length--) {
        array[length] = array[length].value;
      }

      return array;
    }

    function baseSum(array, iteratee) {
      var result,
          index = -1,
          length = array.length;

      while (++index < length) {
        var current = iteratee(array[index]);

        if (current !== undefined) {
          result = result === undefined ? current : result + current;
        }
      }

      return result;
    }

    function baseTimes(n, iteratee) {
      var index = -1,
          result = Array(n);

      while (++index < n) {
        result[index] = iteratee(index);
      }

      return result;
    }

    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }

    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }

    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }

    function cacheHas(cache, key) {
      return cache.has(key);
    }

    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
          length = strSymbols.length;

      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;

      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function countHolders(array, placeholder) {
      var length = array.length,
          result = 0;

      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }

      return result;
    }

    var deburrLetter = basePropertyOf(deburredLetters);
    var escapeHtmlChar = basePropertyOf(htmlEscapes);

    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }

    function getValue(object, key) {
      return object == null ? undefined : object[key];
    }

    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }

    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    function iteratorToArray(iterator) {
      var data,
          result = [];

      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }

      return result;
    }

    function mapToArray(map) {
      var index = -1,
          result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }

    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }

    function replaceHolders(array, placeholder) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }

      return result;
    }

    function setToArray(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }

    function setToPairs(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }

    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }

      return -1;
    }

    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;

      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }

      return index;
    }

    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }

    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }

    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;

      while (reUnicode.test(string)) {
        ++result;
      }

      return result;
    }

    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }

    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    var runInContext = function runInContext(context) {
      context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
      var Array = context.Array,
          Date = context.Date,
          Error = context.Error,
          Function = context.Function,
          Math = context.Math,
          Object = context.Object,
          RegExp = context.RegExp,
          String = context.String,
          TypeError = context.TypeError;
      var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;
      var coreJsData = context['__core-js_shared__'];
      var funcToString = funcProto.toString;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var idCounter = 0;

      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
      }();

      var nativeObjectToString = objectProto.toString;
      var objectCtorString = funcToString.call(Object);
      var oldDash = root._;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      var Buffer = moduleExports ? context.Buffer : undefined,
          Symbol = context.Symbol,
          Uint8Array = context.Uint8Array,
          allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
          getPrototype = overArg(Object.getPrototypeOf, Object),
          objectCreate = Object.create,
          propertyIsEnumerable = objectProto.propertyIsEnumerable,
          splice = arrayProto.splice,
          spreadableSymbol = Symbol ? typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable" : undefined,
          symIterator = Symbol ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : undefined,
          symToStringTag = Symbol ? typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag" : undefined;

      var defineProperty = function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      }();

      var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
          ctxNow = Date && Date.now !== root.Date.now && Date.now,
          ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
      var nativeCeil = Math.ceil,
          nativeFloor = Math.floor,
          nativeGetSymbols = Object.getOwnPropertySymbols,
          nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
          nativeIsFinite = context.isFinite,
          nativeJoin = arrayProto.join,
          nativeKeys = overArg(Object.keys, Object),
          nativeMax = Math.max,
          nativeMin = Math.min,
          nativeNow = Date.now,
          nativeParseInt = context.parseInt,
          nativeRandom = Math.random,
          nativeReverse = arrayProto.reverse;
      var DataView = getNative(context, 'DataView'),
          Map = getNative(context, 'Map'),
          Promise = getNative(context, 'Promise'),
          Set = getNative(context, 'Set'),
          WeakMap = getNative(context, 'WeakMap'),
          nativeCreate = getNative(Object, 'create');
      var metaMap = WeakMap && new WeakMap();
      var realNames = {};
      var dataViewCtorString = toSource(DataView),
          mapCtorString = toSource(Map),
          promiseCtorString = toSource(Promise),
          setCtorString = toSource(Set),
          weakMapCtorString = toSource(WeakMap);
      var symbolProto = Symbol ? typeof Symbol === "function" ? Symbol.prototype : "@@prototype" : undefined,
          symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
          symbolToString = symbolProto ? symbolProto.toString : undefined;

      function lodash(value) {
        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }

          if (hasOwnProperty.call(value, '__wrapped__')) {
            return wrapperClone(value);
          }
        }

        return new LodashWrapper(value);
      }

      var baseCreate = function () {
        function object() {}

        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }

          if (objectCreate) {
            return objectCreate(proto);
          }

          object.prototype = proto;
          var result = new object();
          object.prototype = undefined;
          return result;
        };
      }();

      function baseLodash() {}

      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined;
      }

      lodash.templateSettings = {
        'escape': reEscape,
        'evaluate': reEvaluate,
        'interpolate': reInterpolate,
        'variable': '',
        'imports': {
          '_': lodash
        }
      };
      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;

      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }

      function lazyClone() {
        var result = new LazyWrapper(this.__wrapped__);
        result.__actions__ = copyArray(this.__actions__);
        result.__dir__ = this.__dir__;
        result.__filtered__ = this.__filtered__;
        result.__iteratees__ = copyArray(this.__iteratees__);
        result.__takeCount__ = this.__takeCount__;
        result.__views__ = copyArray(this.__views__);
        return result;
      }

      function lazyReverse() {
        if (this.__filtered__) {
          var result = new LazyWrapper(this);
          result.__dir__ = -1;
          result.__filtered__ = true;
        } else {
          result = this.clone();
          result.__dir__ *= -1;
        }

        return result;
      }

      function lazyValue() {
        var array = this.__wrapped__.value(),
            dir = this.__dir__,
            isArr = isArray(array),
            isRight = dir < 0,
            arrLength = isArr ? array.length : 0,
            view = getView(0, arrLength, this.__views__),
            start = view.start,
            end = view.end,
            length = end - start,
            index = isRight ? end : start - 1,
            iteratees = this.__iteratees__,
            iterLength = iteratees.length,
            resIndex = 0,
            takeCount = nativeMin(length, this.__takeCount__);

        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }

        var result = [];

        outer: while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1,
              value = array[index];

          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex],
                iteratee = data.iteratee,
                type = data.type,
                computed = iteratee(value);

            if (type == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }

          result[resIndex++] = value;
        }

        return result;
      }

      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;

      function Hash(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }

      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }

      function hashGet(key) {
        var data = this.__data__;

        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined : result;
        }

        return hasOwnProperty.call(data, key) ? data[key] : undefined;
      }

      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
      }

      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
        return this;
      }

      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;

      function ListCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }

      function listCacheDelete(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          return false;
        }

        var lastIndex = data.length - 1;

        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }

        --this.size;
        return true;
      }

      function listCacheGet(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);
        return index < 0 ? undefined : data[index][1];
      }

      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }

      function listCacheSet(key, value) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }

        return this;
      }

      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;

      function MapCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          'hash': new Hash(),
          'map': new (Map || ListCache)(),
          'string': new Hash()
        };
      }

      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }

      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }

      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }

      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
            size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }

      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;

      function SetCache(values) {
        var index = -1,
            length = values == null ? 0 : values.length;
        this.__data__ = new MapCache();

        while (++index < length) {
          this.add(values[index]);
        }
      }

      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);

        return this;
      }

      function setCacheHas(value) {
        return this.__data__.has(value);
      }

      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;

      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }

      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }

      function stackDelete(key) {
        var data = this.__data__,
            result = data['delete'](key);
        this.size = data.size;
        return result;
      }

      function stackGet(key) {
        return this.__data__.get(key);
      }

      function stackHas(key) {
        return this.__data__.has(key);
      }

      function stackSet(key, value) {
        var data = this.__data__;

        if (data instanceof ListCache) {
          var pairs = data.__data__;

          if (!Map || pairs.length < 199) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }

          data = this.__data__ = new MapCache(pairs);
        }

        data.set(key, value);
        this.size = data.size;
        return this;
      }

      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;

      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
            isArg = !isArr && isArguments(value),
            isBuff = !isArr && !isArg && isBuffer(value),
            isType = !isArr && !isArg && !isBuff && isTypedArray(value),
            skipIndexes = isArr || isArg || isBuff || isType,
            result = skipIndexes ? baseTimes(value.length, String) : [],
            length = result.length;

        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
            result.push(key);
          }
        }

        return result;
      }

      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined;
      }

      function arraySampleSize(array, n) {
        return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
      }

      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }

      function assignMergeValue(object, key, value) {
        if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assignValue(object, key, value) {
        var objValue = object[key];

        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assocIndexOf(array, key) {
        var length = array.length;

        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }

        return -1;
      }

      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function (value, key, collection) {
          setter(accumulator, value, iteratee(value), collection);
        });
        return accumulator;
      }

      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }

      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }

      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            'configurable': true,
            'enumerable': true,
            'value': value,
            'writable': true
          });
        } else {
          object[key] = value;
        }
      }

      function baseAt(object, paths) {
        var index = -1,
            length = paths.length,
            result = Array(length),
            skip = object == null;

        while (++index < length) {
          result[index] = skip ? undefined : get(object, paths[index]);
        }

        return result;
      }

      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined) {
            number = number <= upper ? number : upper;
          }

          if (lower !== undefined) {
            number = number >= lower ? number : lower;
          }
        }

        return number;
      }

      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result,
            isDeep = bitmask & CLONE_DEEP_FLAG,
            isFlat = bitmask & CLONE_FLAT_FLAG,
            isFull = bitmask & CLONE_SYMBOLS_FLAG;

        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }

        if (result !== undefined) {
          return result;
        }

        if (!isObject(value)) {
          return value;
        }

        var isArr = isArray(value);

        if (isArr) {
          result = initCloneArray(value);

          if (!isDeep) {
            return copyArray(value, result);
          }
        } else {
          var tag = getTag(value),
              isFunc = tag == funcTag || tag == genTag;

          if (isBuffer(value)) {
            return cloneBuffer(value, isDeep);
          }

          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject(value);

            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }

            result = initCloneByTag(value, tag, isDeep);
          }
        }

        stack || (stack = new Stack());
        var stacked = stack.get(value);

        if (stacked) {
          return stacked;
        }

        stack.set(value, result);

        if (isSet(value)) {
          value.forEach(function (subValue) {
            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function (subValue, key) {
            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
          });
        }

        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined : keysFunc(value);
        arrayEach(props || value, function (subValue, key) {
          if (props) {
            key = subValue;
            subValue = value[key];
          }

          assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }

      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }

      function baseConformsTo(object, source, props) {
        var length = props.length;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (length--) {
          var key = props[length],
              predicate = source[key],
              value = object[key];

          if (value === undefined && !(key in object) || !predicate(value)) {
            return false;
          }
        }

        return true;
      }

      function baseDelay(func, wait, args) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return setTimeout(function () {
          func.apply(undefined, args);
        }, wait);
      }

      function baseDifference(array, values, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            isCommon = true,
            length = array.length,
            result = [],
            valuesLength = values.length;

        if (!length) {
          return result;
        }

        if (iteratee) {
          values = arrayMap(values, baseUnary(iteratee));
        }

        if (comparator) {
          includes = arrayIncludesWith;
          isCommon = false;
        } else if (values.length >= LARGE_ARRAY_SIZE) {
          includes = cacheHas;
          isCommon = false;
          values = new SetCache(values);
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;

            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }

            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }

        return result;
      }

      var baseEach = createBaseEach(baseForOwn);
      var baseEachRight = createBaseEach(baseForOwnRight, true);

      function baseEvery(collection, predicate) {
        var result = true;
        baseEach(collection, function (value, index, collection) {
          result = !!predicate(value, index, collection);
          return result;
        });
        return result;
      }

      function baseExtremum(array, iteratee, comparator) {
        var index = -1,
            length = array.length;

        while (++index < length) {
          var value = array[index],
              current = iteratee(value);

          if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
            var computed = current,
                result = value;
          }
        }

        return result;
      }

      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end === undefined || end > length ? length : toInteger(end);

        if (end < 0) {
          end += length;
        }

        end = start > end ? 0 : toLength(end);

        while (start < end) {
          array[start++] = value;
        }

        return array;
      }

      function baseFilter(collection, predicate) {
        var result = [];
        baseEach(collection, function (value, index, collection) {
          if (predicate(value, index, collection)) {
            result.push(value);
          }
        });
        return result;
      }

      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index = -1,
            length = array.length;
        predicate || (predicate = isFlattenable);
        result || (result = []);

        while (++index < length) {
          var value = array[index];

          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              arrayPush(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }

        return result;
      }

      var baseFor = createBaseFor();
      var baseForRight = createBaseFor(true);

      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }

      function baseForOwnRight(object, iteratee) {
        return object && baseForRight(object, iteratee, keys);
      }

      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction(object[key]);
        });
      }

      function baseGet(object, path) {
        path = castPath(path, object);
        var index = 0,
            length = path.length;

        while (object != null && index < length) {
          object = object[toKey(path[index++])];
        }

        return index && index == length ? object : undefined;
      }

      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
      }

      function baseGetTag(value) {
        if (value == null) {
          return value === undefined ? undefinedTag : nullTag;
        }

        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }

      function baseGt(value, other) {
        return value > other;
      }

      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }

      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }

      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }

      function baseIntersection(arrays, iteratee, comparator) {
        var includes = comparator ? arrayIncludesWith : arrayIncludes,
            length = arrays[0].length,
            othLength = arrays.length,
            othIndex = othLength,
            caches = Array(othLength),
            maxLength = Infinity,
            result = [];

        while (othIndex--) {
          var array = arrays[othIndex];

          if (othIndex && iteratee) {
            array = arrayMap(array, baseUnary(iteratee));
          }

          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
        }

        array = arrays[0];
        var index = -1,
            seen = caches[0];

        outer: while (++index < length && result.length < maxLength) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;

            while (--othIndex) {
              var cache = caches[othIndex];

              if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }

            if (seen) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function (value, key, object) {
          setter(accumulator, iteratee(value), key, object);
        });
        return accumulator;
      }

      function baseInvoke(object, path, args) {
        path = castPath(path, object);
        object = parent(object, path);
        var func = object == null ? object : object[toKey(last(path))];
        return func == null ? undefined : apply(func, object, args);
      }

      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }

      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }

      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }

      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }

        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }

        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }

      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray(object),
            othIsArr = isArray(other),
            objTag = objIsArr ? arrayTag : getTag(object),
            othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag,
            othIsObj = othTag == objectTag,
            isSameTag = objTag == othTag;

        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }

          objIsArr = true;
          objIsObj = false;
        }

        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }

        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
              othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object,
                othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }

        if (!isSameTag) {
          return false;
        }

        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }

      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }

      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length,
            length = index,
            noCustomizer = !customizer;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (index--) {
          var data = matchData[index];

          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }

        while (++index < length) {
          data = matchData[index];
          var key = data[0],
              objValue = object[key],
              srcValue = data[1];

          if (noCustomizer && data[2]) {
            if (objValue === undefined && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();

            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }

            if (!(result === undefined ? baseIsEqual(srcValue, objValue, 3, customizer, stack) : result)) {
              return false;
            }
          }
        }

        return true;
      }

      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }

        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }

      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }

      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }

      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }

      function baseIteratee(value) {
        if (typeof value == 'function') {
          return value;
        }

        if (value == null) {
          return identity;
        }

        if (typeof value == 'object') {
          return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }

        return property(value);
      }

      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }

        var result = [];

        for (var key in Object(object)) {
          if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
          }
        }

        return result;
      }

      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }

        var isProto = isPrototype(object),
            result = [];

        for (var key in object) {
          if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
            result.push(key);
          }
        }

        return result;
      }

      function baseLt(value, other) {
        return value < other;
      }

      function baseMap(collection, iteratee) {
        var index = -1,
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value, key, collection) {
          result[++index] = iteratee(value, key, collection);
        });
        return result;
      }

      function baseMatches(source) {
        var matchData = getMatchData(source);

        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }

        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }

      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }

        return function (object) {
          var objValue = get(object, path);
          return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, 3);
        };
      }

      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }

        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());

          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;

            if (newValue === undefined) {
              newValue = srcValue;
            }

            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }

      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key),
            srcValue = safeGet(source, key),
            stacked = stack.get(srcValue);

        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }

        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
        var isCommon = newValue === undefined;

        if (isCommon) {
          var isArr = isArray(srcValue),
              isBuff = !isArr && isBuffer(srcValue),
              isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;

          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;

            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }

        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }

        assignMergeValue(object, key, newValue);
      }

      function baseNth(array, n) {
        var length = array.length;

        if (!length) {
          return;
        }

        n += n < 0 ? length : 0;
        return isIndex(n, length) ? array[n] : undefined;
      }

      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee) {
            if (isArray(iteratee)) {
              return function (value) {
                return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
              };
            }

            return iteratee;
          });
        } else {
          iteratees = [identity];
        }

        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result = baseMap(collection, function (value, key, collection) {
          var criteria = arrayMap(iteratees, function (iteratee) {
            return iteratee(value);
          });
          return {
            'criteria': criteria,
            'index': ++index,
            'value': value
          };
        });
        return baseSortBy(result, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }

      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path) {
          return hasIn(object, path);
        });
      }

      function basePickBy(object, paths, predicate) {
        var index = -1,
            length = paths.length,
            result = {};

        while (++index < length) {
          var path = paths[index],
              value = baseGet(object, path);

          if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
          }
        }

        return result;
      }

      function basePropertyDeep(path) {
        return function (object) {
          return baseGet(object, path);
        };
      }

      function basePullAll(array, values, iteratee, comparator) {
        var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
            index = -1,
            length = values.length,
            seen = array;

        if (array === values) {
          values = copyArray(values);
        }

        if (iteratee) {
          seen = arrayMap(array, baseUnary(iteratee));
        }

        while (++index < length) {
          var fromIndex = 0,
              value = values[index],
              computed = iteratee ? iteratee(value) : value;

          while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
            if (seen !== array) {
              splice.call(seen, fromIndex, 1);
            }

            splice.call(array, fromIndex, 1);
          }
        }

        return array;
      }

      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0,
            lastIndex = length - 1;

        while (length--) {
          var index = indexes[length];

          if (length == lastIndex || index !== previous) {
            var previous = index;

            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }

        return array;
      }

      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }

      function baseRange(start, end, step, fromRight) {
        var index = -1,
            length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
            result = Array(length);

        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }

        return result;
      }

      function baseRepeat(string, n) {
        var result = '';

        if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
          return result;
        }

        do {
          if (n % 2) {
            result += string;
          }

          n = nativeFloor(n / 2);

          if (n) {
            string += string;
          }
        } while (n);

        return result;
      }

      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }

      function baseSample(collection) {
        return arraySample(values(collection));
      }

      function baseSampleSize(collection, n) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n, 0, array.length));
      }

      function baseSet(object, path, value, customizer) {
        if (!isObject(object)) {
          return object;
        }

        path = castPath(path, object);
        var index = -1,
            length = path.length,
            lastIndex = length - 1,
            nested = object;

        while (nested != null && ++index < length) {
          var key = toKey(path[index]),
              newValue = value;

          if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return object;
          }

          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined;

            if (newValue === undefined) {
              newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
            }
          }

          assignValue(nested, key, newValue);
          nested = nested[key];
        }

        return object;
      }

      var baseSetData = !metaMap ? identity : function (func, data) {
        metaMap.set(func, data);
        return func;
      };
      var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
          'configurable': true,
          'enumerable': false,
          'value': constant(string),
          'writable': true
        });
      };

      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }

      function baseSlice(array, start, end) {
        var index = -1,
            length = array.length;

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end > length ? length : end;

        if (end < 0) {
          end += length;
        }

        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);

        while (++index < length) {
          result[index] = array[index + start];
        }

        return result;
      }

      function baseSome(collection, predicate) {
        var result;
        baseEach(collection, function (value, index, collection) {
          result = predicate(value, index, collection);
          return !result;
        });
        return !!result;
      }

      function baseSortedIndex(array, value, retHighest) {
        var low = 0,
            high = array == null ? low : array.length;

        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1,
                computed = array[mid];

            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }

          return high;
        }

        return baseSortedIndexBy(array, value, identity, retHighest);
      }

      function baseSortedIndexBy(array, value, iteratee, retHighest) {
        var low = 0,
            high = array == null ? 0 : array.length;

        if (high === 0) {
          return 0;
        }

        value = iteratee(value);
        var valIsNaN = value !== value,
            valIsNull = value === null,
            valIsSymbol = isSymbol(value),
            valIsUndefined = value === undefined;

        while (low < high) {
          var mid = nativeFloor((low + high) / 2),
              computed = iteratee(array[mid]),
              othIsDefined = computed !== undefined,
              othIsNull = computed === null,
              othIsReflexive = computed === computed,
              othIsSymbol = isSymbol(computed);

          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }

          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }

        return nativeMin(high, MAX_ARRAY_INDEX);
      }

      function baseSortedUniq(array, iteratee) {
        var index = -1,
            length = array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;

          if (!index || !eq(computed, seen)) {
            var seen = computed;
            result[resIndex++] = value === 0 ? 0 : value;
          }
        }

        return result;
      }

      function baseToNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        return +value;
      }

      function baseToString(value) {
        if (typeof value == 'string') {
          return value;
        }

        if (isArray(value)) {
          return arrayMap(value, baseToString) + '';
        }

        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : '';
        }

        var result = value + '';
        return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
      }

      function baseUniq(array, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            length = array.length,
            isCommon = true,
            result = [],
            seen = result;

        if (comparator) {
          isCommon = false;
          includes = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set = iteratee ? null : createSet(array);

          if (set) {
            return setToArray(set);
          }

          isCommon = false;
          includes = cacheHas;
          seen = new SetCache();
        } else {
          seen = iteratee ? [] : result;
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var seenIndex = seen.length;

            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }

            if (iteratee) {
              seen.push(computed);
            }

            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseUnset(object, path) {
        path = castPath(path, object);
        object = parent(object, path);
        return object == null || delete object[toKey(last(path))];
      }

      function baseUpdate(object, path, updater, customizer) {
        return baseSet(object, path, updater(baseGet(object, path)), customizer);
      }

      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length,
            index = fromRight ? length : -1;

        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }

      function baseWrapperValue(value, actions) {
        var result = value;

        if (result instanceof LazyWrapper) {
          result = result.value();
        }

        return arrayReduce(actions, function (result, action) {
          return action.func.apply(action.thisArg, arrayPush([result], action.args));
        }, result);
      }

      function baseXor(arrays, iteratee, comparator) {
        var length = arrays.length;

        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }

        var index = -1,
            result = Array(length);

        while (++index < length) {
          var array = arrays[index],
              othIndex = -1;

          while (++othIndex < length) {
            if (othIndex != index) {
              result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
          }
        }

        return baseUniq(baseFlatten(result, 1), iteratee, comparator);
      }

      function baseZipObject(props, values, assignFunc) {
        var index = -1,
            length = props.length,
            valsLength = values.length,
            result = {};

        while (++index < length) {
          var value = index < valsLength ? values[index] : undefined;
          assignFunc(result, props[index], value);
        }

        return result;
      }

      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }

      function castFunction(value) {
        return typeof value == 'function' ? value : identity;
      }

      function castPath(value, object) {
        if (isArray(value)) {
          return value;
        }

        return isKey(value, object) ? [value] : stringToPath(toString(value));
      }

      var castRest = baseRest;

      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }

      var clearTimeout = ctxClearTimeout || function (id) {
        return root.clearTimeout(id);
      };

      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }

        var length = buffer.length,
            result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result);
        return result;
      }

      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }

      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }

      function cloneRegExp(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }

      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }

      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }

      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined,
              valIsNull = value === null,
              valIsReflexive = value === value,
              valIsSymbol = isSymbol(value);
          var othIsDefined = other !== undefined,
              othIsNull = other === null,
              othIsReflexive = other === other,
              othIsSymbol = isSymbol(other);

          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }

          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }

        return 0;
      }

      function compareMultiple(object, other, orders) {
        var index = -1,
            objCriteria = object.criteria,
            othCriteria = other.criteria,
            length = objCriteria.length,
            ordersLength = orders.length;

        while (++index < length) {
          var result = compareAscending(objCriteria[index], othCriteria[index]);

          if (result) {
            if (index >= ordersLength) {
              return result;
            }

            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
          }
        }

        return object.index - other.index;
      }

      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersLength = holders.length,
            leftIndex = -1,
            leftLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(leftLength + rangeLength),
            isUncurried = !isCurried;

        while (++leftIndex < leftLength) {
          result[leftIndex] = partials[leftIndex];
        }

        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[holders[argsIndex]] = args[argsIndex];
          }
        }

        while (rangeLength--) {
          result[leftIndex++] = args[argsIndex++];
        }

        return result;
      }

      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersIndex = -1,
            holdersLength = holders.length,
            rightIndex = -1,
            rightLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(rangeLength + rightLength),
            isUncurried = !isCurried;

        while (++argsIndex < rangeLength) {
          result[argsIndex] = args[argsIndex];
        }

        var offset = argsIndex;

        while (++rightIndex < rightLength) {
          result[offset + rightIndex] = partials[rightIndex];
        }

        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }

        return result;
      }

      function copyArray(source, array) {
        var index = -1,
            length = source.length;
        array || (array = Array(length));

        while (++index < length) {
          array[index] = source[index];
        }

        return array;
      }

      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

          if (newValue === undefined) {
            newValue = source[key];
          }

          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }

        return object;
      }

      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }

      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }

      function createAggregator(setter, initializer) {
        return function (collection, iteratee) {
          var func = isArray(collection) ? arrayAggregator : baseAggregator,
              accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee, 2), accumulator);
        };
      }

      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
              length = sources.length,
              customizer = length > 1 ? sources[length - 1] : undefined,
              guard = length > 2 ? sources[2] : undefined;
          customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined : customizer;
            length = 1;
          }

          object = Object(object);

          while (++index < length) {
            var source = sources[index];

            if (source) {
              assigner(object, source, index, customizer);
            }
          }

          return object;
        });
      }

      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee) {
          if (collection == null) {
            return collection;
          }

          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }

          var length = collection.length,
              index = fromRight ? length : -1,
              iterable = Object(collection);

          while (fromRight ? index-- : ++index < length) {
            if (iteratee(iterable[index], index, iterable) === false) {
              break;
            }
          }

          return collection;
        };
      }

      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
              iterable = Object(object),
              props = keysFunc(object),
              length = props.length;

          while (length--) {
            var key = props[fromRight ? length : ++index];

            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }

          return object;
        };
      }

      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }

        return wrapper;
      }

      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }

      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
        };
      }

      function createCtor(Ctor) {
        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return new Ctor();

            case 1:
              return new Ctor(args[0]);

            case 2:
              return new Ctor(args[0], args[1]);

            case 3:
              return new Ctor(args[0], args[1], args[2]);

            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);

            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);

            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }

          var thisBinding = baseCreate(Ctor.prototype),
              result = Ctor.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        };
      }

      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length,
              placeholder = getHolder(wrapper);

          while (index--) {
            args[index] = arguments[index];
          }

          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;

          if (length < arity) {
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
          }

          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }

        return wrapper;
      }

      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object(collection);

          if (!isArrayLike(collection)) {
            var iteratee = getIteratee(predicate, 3);
            collection = keys(collection);

            predicate = function predicate(key) {
              return iteratee(iterable[key], key, iterable);
            };
          }

          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
        };
      }

      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length,
              index = length,
              prereq = LodashWrapper.prototype.thru;

          if (fromRight) {
            funcs.reverse();
          }

          while (index--) {
            var func = funcs[index];

            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }

            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
              var wrapper = new LodashWrapper([], true);
            }
          }

          index = wrapper ? index : length;

          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func),
                data = funcName == 'wrapper' ? getData(func) : undefined;

            if (data && isLaziable(data[0]) && data[1] == 424 && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }

          return function () {
            var args = arguments,
                value = args[0];

            if (wrapper && args.length == 1 && isArray(value)) {
              return wrapper.plant(value).value();
            }

            var index = 0,
                result = length ? funcs[index].apply(this, args) : value;

            while (++index < length) {
              result = funcs[index].call(this, result);
            }

            return result;
          };
        });
      }

      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG,
            isBind = bitmask & WRAP_BIND_FLAG,
            isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
            isCurried = bitmask & 24,
            isFlip = bitmask & WRAP_FLIP_FLAG,
            Ctor = isBindKey ? undefined : createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length;

          while (index--) {
            args[index] = arguments[index];
          }

          if (isCurried) {
            var placeholder = getHolder(wrapper),
                holdersCount = countHolders(args, placeholder);
          }

          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }

          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }

          length -= holdersCount;

          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
          }

          var thisBinding = isBind ? thisArg : this,
              fn = isBindKey ? thisBinding[func] : func;
          length = args.length;

          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }

          if (isAry && ary < length) {
            args.length = ary;
          }

          if (this && this !== root && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }

          return fn.apply(thisBinding, args);
        }

        return wrapper;
      }

      function createInverter(setter, toIteratee) {
        return function (object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }

      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result;

          if (value === undefined && other === undefined) {
            return defaultValue;
          }

          if (value !== undefined) {
            result = value;
          }

          if (other !== undefined) {
            if (result === undefined) {
              return other;
            }

            if (typeof value == 'string' || typeof other == 'string') {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }

            result = operator(value, other);
          }

          return result;
        };
      }

      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee) {
              return apply(iteratee, thisArg, args);
            });
          });
        });
      }

      function createPadding(length, chars) {
        chars = chars === undefined ? ' ' : baseToString(chars);
        var charsLength = chars.length;

        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars, length) : chars;
        }

        var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
        return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
      }

      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var argsIndex = -1,
              argsLength = arguments.length,
              leftIndex = -1,
              leftLength = partials.length,
              args = Array(leftLength + argsLength),
              fn = this && this !== root && this instanceof wrapper ? Ctor : func;

          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }

          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }

          return apply(fn, isBind ? thisArg : this, args);
        }

        return wrapper;
      }

      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
            end = step = undefined;
          }

          start = toFinite(start);

          if (end === undefined) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }

          step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }

      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == 'string' && typeof other == 'string')) {
            value = toNumber(value);
            other = toNumber(other);
          }

          return operator(value, other);
        };
      }

      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG,
            newHolders = isCurry ? holders : undefined,
            newHoldersRight = isCurry ? undefined : holders,
            newPartials = isCurry ? partials : undefined,
            newPartialsRight = isCurry ? undefined : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= -4;
        }

        var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
        var result = wrapFunc.apply(undefined, newData);

        if (isLaziable(func)) {
          setData(result, newData);
        }

        result.placeholder = placeholder;
        return setWrapToString(result, func, bitmask);
      }

      function createRound(methodName) {
        var func = Math[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);

          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + 'e').split('e'),
                value = func(pair[0] + 'e' + (+pair[1] + precision));
            pair = (toString(value) + 'e').split('e');
            return +(pair[0] + 'e' + (+pair[1] - precision));
          }

          return func(number);
        };
      }

      var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
        return new Set(values);
      };

      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);

          if (tag == mapTag) {
            return mapToArray(object);
          }

          if (tag == setTag) {
            return setToPairs(object);
          }

          return baseToPairs(object, keysFunc(object));
        };
      }

      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;

        if (!isBindKey && typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var length = partials ? partials.length : 0;

        if (!length) {
          bitmask &= -97;
          partials = holders = undefined;
        }

        ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
        arity = arity === undefined ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;

        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials,
              holdersRight = holders;
          partials = holders = undefined;
        }

        var data = isBindKey ? undefined : getData(func);
        var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

        if (data) {
          mergeData(newData, data);
        }

        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

        if (!arity && bitmask & 24) {
          bitmask &= -25;
        }

        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == 33) && !holders.length) {
          result = createPartial(func, bitmask, thisArg, partials);
        } else {
          result = createHybrid.apply(undefined, newData);
        }

        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result, newData), func, bitmask);
      }

      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }

        return objValue;
      }

      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
          stack['delete'](srcValue);
        }

        return objValue;
      }

      function customOmitClone(value) {
        return isPlainObject(value) ? undefined : value;
      }

      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            arrLength = array.length,
            othLength = other.length;

        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }

        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);

        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }

        var index = -1,
            result = true,
            seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
        stack.set(array, other);
        stack.set(other, array);

        while (++index < arrLength) {
          var arrValue = array[index],
              othValue = other[index];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }

          if (compared !== undefined) {
            if (compared) {
              continue;
            }

            result = false;
            break;
          }

          if (seen) {
            if (!arraySome(other, function (othValue, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }

        stack['delete'](array);
        stack['delete'](other);
        return result;
      }

      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }

            object = object.buffer;
            other = other.buffer;

          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
              return false;
            }

            return true;

          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);

          case errorTag:
            return object.name == other.name && object.message == other.message;

          case regexpTag:
          case stringTag:
            return object == other + '';

          case mapTag:
            var convert = mapToArray;

          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);

            if (object.size != other.size && !isPartial) {
              return false;
            }

            var stacked = stack.get(object);

            if (stacked) {
              return stacked == other;
            }

            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;

          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }

        }

        return false;
      }

      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            objProps = getAllKeys(object),
            objLength = objProps.length,
            othProps = getAllKeys(other),
            othLength = othProps.length;

        if (objLength != othLength && !isPartial) {
          return false;
        }

        var index = objLength;

        while (index--) {
          var key = objProps[index];

          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }

        var objStacked = stack.get(object);
        var othStacked = stack.get(other);

        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }

        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;

        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key],
              othValue = other[key];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }

          if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }

          skipCtor || (skipCtor = key == 'constructor');
        }

        if (result && !skipCtor) {
          var objCtor = object.constructor,
              othCtor = other.constructor;

          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
          }
        }

        stack['delete'](object);
        stack['delete'](other);
        return result;
      }

      function flatRest(func) {
        return setToString(overRest(func, undefined, flatten), func + '');
      }

      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }

      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }

      var getData = !metaMap ? noop : function (func) {
        return metaMap.get(func);
      };

      function getFuncName(func) {
        var result = func.name + '',
            array = realNames[result],
            length = hasOwnProperty.call(realNames, result) ? array.length : 0;

        while (length--) {
          var data = array[length],
              otherFunc = data.func;

          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }

        return result;
      }

      function getHolder(func) {
        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
        return object.placeholder;
      }

      function getIteratee() {
        var result = lodash.iteratee || iteratee;
        result = result === iteratee ? baseIteratee : result;
        return arguments.length ? result(arguments[0], arguments[1]) : result;
      }

      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
      }

      function getMatchData(object) {
        var result = keys(object),
            length = result.length;

        while (length--) {
          var key = result[length],
              value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }

        return result;
      }

      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined;
      }

      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);
        {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }

        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result = [];

        while (object) {
          arrayPush(result, getSymbols(object));
          object = getPrototype(object);
        }

        return result;
      };
      var getTag = baseGetTag;

      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function getTag(value) {
          var result = baseGetTag(value),
              Ctor = result == objectTag ? value.constructor : undefined,
              ctorString = Ctor ? toSource(Ctor) : '';

          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;

              case mapCtorString:
                return mapTag;

              case promiseCtorString:
                return promiseTag;

              case setCtorString:
                return setTag;

              case weakMapCtorString:
                return weakMapTag;
            }
          }

          return result;
        };
      }

      function getView(start, end, transforms) {
        var index = -1,
            length = transforms.length;

        while (++index < length) {
          var data = transforms[index],
              size = data.size;

          switch (data.type) {
            case 'drop':
              start += size;
              break;

            case 'dropRight':
              end -= size;
              break;

            case 'take':
              end = nativeMin(end, start + size);
              break;

            case 'takeRight':
              start = nativeMax(start, end - size);
              break;
          }
        }

        return {
          'start': start,
          'end': end
        };
      }

      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }

      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index = -1,
            length = path.length,
            result = false;

        while (++index < length) {
          var key = toKey(path[index]);

          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }

          object = object[key];
        }

        if (result || ++index != length) {
          return result;
        }

        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
      }

      function initCloneArray(array) {
        var length = array.length,
            result = new array.constructor(length);

        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
          result.index = array.index;
          result.input = array.input;
        }

        return result;
      }

      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }

      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;

        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);

          case boolTag:
          case dateTag:
            return new Ctor(+object);

          case dataViewTag:
            return cloneDataView(object, isDeep);

          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);

          case mapTag:
            return new Ctor();

          case numberTag:
          case stringTag:
            return new Ctor(object);

          case regexpTag:
            return cloneRegExp(object);

          case setTag:
            return new Ctor();

          case symbolTag:
            return cloneSymbol(object);
        }
      }

      function insertWrapDetails(source, details) {
        var length = details.length;

        if (!length) {
          return source;
        }

        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
        details = details.join(length > 2 ? ', ' : ' ');
        return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
      }

      function isFlattenable(value) {
        return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }

      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
      }

      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }

        var type = typeof index;

        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
          return eq(object[index], value);
        }

        return false;
      }

      function isKey(value, object) {
        if (isArray(value)) {
          return false;
        }

        var type = typeof value;

        if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
          return true;
        }

        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }

      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
      }

      function isLaziable(func) {
        var funcName = getFuncName(func),
            other = lodash[funcName];

        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
          return false;
        }

        if (func === other) {
          return true;
        }

        var data = getData(other);
        return !!data && func === data[0];
      }

      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }

      var isMaskable = coreJsData ? isFunction : stubFalse;

      function isPrototype(value) {
        var Ctor = value && value.constructor,
            proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
      }

      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }

      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }

          return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
        };
      }

      function memoizeCapped(func) {
        var result = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }

          return key;
        });
        var cache = result.cache;
        return result;
      }

      function mergeData(data, source) {
        var bitmask = data[1],
            srcBitmask = source[1],
            newBitmask = bitmask | srcBitmask,
            isCommon = newBitmask < 131;
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == 384 && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

        if (!(isCommon || isCombo)) {
          return data;
        }

        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }

        var value = source[3];

        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }

        value = source[5];

        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }

        value = source[7];

        if (value) {
          data[7] = value;
        }

        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }

        if (data[9] == null) {
          data[9] = source[9];
        }

        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }

      function nativeKeysIn(object) {
        var result = [];

        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }

        return result;
      }

      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      function overRest(func, start, transform) {
        start = nativeMax(start === undefined ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
              index = -1,
              length = nativeMax(args.length - start, 0),
              array = Array(length);

          while (++index < length) {
            array[index] = args[start + index];
          }

          index = -1;
          var otherArgs = Array(start + 1);

          while (++index < start) {
            otherArgs[index] = args[index];
          }

          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }

      function parent(object, path) {
        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
      }

      function reorder(array, indexes) {
        var arrLength = array.length,
            length = nativeMin(indexes.length, arrLength),
            oldArray = copyArray(array);

        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
        }

        return array;
      }

      function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
          return;
        }

        if (key == '__proto__') {
          return;
        }

        return object[key];
      }

      var setData = shortOut(baseSetData);

      var setTimeout = ctxSetTimeout || function (func, wait) {
        return root.setTimeout(func, wait);
      };

      var setToString = shortOut(baseSetToString);

      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + '';
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }

      function shortOut(func) {
        var count = 0,
            lastCalled = 0;
        return function () {
          var stamp = nativeNow(),
              remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;

          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }

          return func.apply(undefined, arguments);
        };
      }

      function shuffleSelf(array, size) {
        var index = -1,
            length = array.length,
            lastIndex = length - 1;
        size = size === undefined ? length : size;

        while (++index < size) {
          var rand = baseRandom(index, lastIndex),
              value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }

        array.length = size;
        return array;
      }

      var stringToPath = memoizeCapped(function (string) {
        var result = [];

        if (string.charCodeAt(0) === 46) {
            result.push('');
          }

        string.replace(rePropName, function (match, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
        });
        return result;
      });

      function toKey(value) {
        if (typeof value == 'string' || isSymbol(value)) {
          return value;
        }

        var result = value + '';
        return result == '0' && 1 / value == -(1 / 0) ? '-0' : result;
      }

      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}

          try {
            return func + '';
          } catch (e) {}
        }

        return '';
      }

      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = '_.' + pair[0];

          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }

      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }

        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result.__actions__ = copyArray(wrapper.__actions__);
        result.__index__ = wrapper.__index__;
        result.__values__ = wrapper.__values__;
        return result;
      }

      function chunk(array, size, guard) {
        if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
          size = 1;
        } else {
          size = nativeMax(toInteger(size), 0);
        }

        var length = array == null ? 0 : array.length;

        if (!length || size < 1) {
          return [];
        }

        var index = 0,
            resIndex = 0,
            result = Array(nativeCeil(length / size));

        while (index < length) {
          result[resIndex++] = baseSlice(array, index, index += size);
        }

        return result;
      }

      function compact(array) {
        var index = -1,
            length = array == null ? 0 : array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index];

          if (value) {
            result[resIndex++] = value;
          }
        }

        return result;
      }

      function concat() {
        var length = arguments.length;

        if (!length) {
          return [];
        }

        var args = Array(length - 1),
            array = arguments[0],
            index = length;

        while (index--) {
          args[index - 1] = arguments[index];
        }

        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }

      var difference = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
      });
      var differenceBy = baseRest(function (array, values) {
        var iteratee = last(values);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
      });
      var differenceWith = baseRest(function (array, values) {
        var comparator = last(values);

        if (isArrayLikeObject(comparator)) {
          comparator = undefined;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
      });

      function drop(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function dropRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }

      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }

      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }

        return baseFill(array, value, start, end);
      }

      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }

      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length - 1;

        if (fromIndex !== undefined) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }

      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }

      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }

      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        depth = depth === undefined ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }

      function fromPairs(pairs) {
        var index = -1,
            length = pairs == null ? 0 : pairs.length,
            result = {};

        while (++index < length) {
          var pair = pairs[index];
          result[pair[0]] = pair[1];
        }

        return result;
      }

      function head(array) {
        return array && array.length ? array[0] : undefined;
      }

      function indexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseIndexOf(array, value, index);
      }

      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }

      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });
      var intersectionBy = baseRest(function (arrays) {
        var iteratee = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);

        if (iteratee === last(mapped)) {
          iteratee = undefined;
        } else {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
      });
      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == 'function' ? comparator : undefined;

        if (comparator) {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
      });

      function join(array, separator) {
        return array == null ? '' : nativeJoin.call(array, separator);
      }

      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined;
      }

      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length;

        if (fromIndex !== undefined) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }

      function nth(array, n) {
        return array && array.length ? baseNth(array, toInteger(n)) : undefined;
      }

      var pull = baseRest(pullAll);

      function pullAll(array, values) {
        return array && array.length && values && values.length ? basePullAll(array, values) : array;
      }

      function pullAllBy(array, values, iteratee) {
        return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
      }

      function pullAllWith(array, values, comparator) {
        return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
      }

      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length,
            result = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result;
      });

      function remove(array, predicate) {
        var result = [];

        if (!(array && array.length)) {
          return result;
        }

        var index = -1,
            indexes = [],
            length = array.length;
        predicate = getIteratee(predicate, 3);

        while (++index < length) {
          var value = array[index];

          if (predicate(value, index, array)) {
            result.push(value);
            indexes.push(index);
          }
        }

        basePullAt(array, indexes);
        return result;
      }

      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }

      function slice(array, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined ? length : toInteger(end);
        }

        return baseSlice(array, start, end);
      }

      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }

      function sortedIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
      }

      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value);

          if (index < length && eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }

      function sortedLastIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
      }

      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;

          if (eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }

      function sortedUniqBy(array, iteratee) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }

      function take(array, n, guard) {
        if (!(array && array.length)) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function takeRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }

      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }

      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });
      var unionBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
      });
      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
      });

      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }

      function uniqBy(array, iteratee) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function uniqWith(array, comparator) {
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return array && array.length ? baseUniq(array, undefined, comparator) : [];
      }

      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }

        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }

      function unzipWith(array, iteratee) {
        if (!(array && array.length)) {
          return [];
        }

        var result = unzip(array);

        if (iteratee == null) {
          return result;
        }

        return arrayMap(result, function (group) {
          return apply(iteratee, undefined, group);
        });
      }

      var without = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, values) : [];
      });
      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });
      var xorBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined;
        }

        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
      });
      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
      });
      var zip = baseRest(unzip);

      function zipObject(props, values) {
        return baseZipObject(props || [], values || [], assignValue);
      }

      function zipObjectDeep(props, values) {
        return baseZipObject(props || [], values || [], baseSet);
      }

      var zipWith = baseRest(function (arrays) {
        var length = arrays.length,
            iteratee = length > 1 ? arrays[length - 1] : undefined;
        iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
        return unzipWith(arrays, iteratee);
      });

      function chain(value) {
        var result = lodash(value);
        result.__chain__ = true;
        return result;
      }

      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }

      function thru(value, interceptor) {
        return interceptor(value);
      }

      var wrapperAt = flatRest(function (paths) {
        var length = paths.length,
            start = length ? paths[0] : 0,
            value = this.__wrapped__,
            interceptor = function interceptor(object) {
          return baseAt(object, paths);
        };

        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }

        value = value.slice(start, +start + (length ? 1 : 0));

        value.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined
        });

        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined);
          }

          return array;
        });
      });

      function wrapperChain() {
        return chain(this);
      }

      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }

      function wrapperNext() {
        if (this.__values__ === undefined) {
          this.__values__ = toArray(this.value());
        }

        var done = this.__index__ >= this.__values__.length,
            value = done ? undefined : this.__values__[this.__index__++];
        return {
          'done': done,
          'value': value
        };
      }

      function wrapperToIterator() {
        return this;
      }

      function wrapperPlant(value) {
        var result,
            parent = this;

        while (parent instanceof baseLodash) {
          var clone = wrapperClone(parent);
          clone.__index__ = 0;
          clone.__values__ = undefined;

          if (result) {
            previous.__wrapped__ = clone;
          } else {
            result = clone;
          }

          var previous = clone;
          parent = parent.__wrapped__;
        }

        previous.__wrapped__ = value;
        return result;
      }

      function wrapperReverse() {
        var value = this.__wrapped__;

        if (value instanceof LazyWrapper) {
          var wrapped = value;

          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }

          wrapped = wrapped.reverse();

          wrapped.__actions__.push({
            'func': thru,
            'args': [reverse],
            'thisArg': undefined
          });

          return new LodashWrapper(wrapped, this.__chain__);
        }

        return this.thru(reverse);
      }

      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }

      var countBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          ++result[key];
        } else {
          baseAssignValue(result, key, 1);
        }
      });

      function every(collection, predicate, guard) {
        var func = isArray(collection) ? arrayEvery : baseEvery;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      function filter(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }

      var find = createFind(findIndex);
      var findLast = createFind(findLastIndex);

      function flatMap(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), 1);
      }

      function flatMapDeep(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), INFINITY);
      }

      function flatMapDepth(collection, iteratee, depth) {
        depth = depth === undefined ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee), depth);
      }

      function forEach(collection, iteratee) {
        var func = isArray(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee, 3));
      }

      function forEachRight(collection, iteratee) {
        var func = isArray(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee, 3));
      }

      var groupBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          result[key].push(value);
        } else {
          baseAssignValue(result, key, [value]);
        }
      });

      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;

        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }

        return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }

      var invokeMap = baseRest(function (collection, path, args) {
        var index = -1,
            isFunc = typeof path == 'function',
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value) {
          result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
        });
        return result;
      });
      var keyBy = createAggregator(function (result, value, key) {
        baseAssignValue(result, key, value);
      });

      function map(collection, iteratee) {
        var func = isArray(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee, 3));
      }

      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }

        if (!isArray(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }

        orders = guard ? undefined : orders;

        if (!isArray(orders)) {
          orders = orders == null ? [] : [orders];
        }

        return baseOrderBy(collection, iteratees, orders);
      }

      var partition = createAggregator(function (result, value, key) {
        result[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });

      function reduce(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduce : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }

      function reduceRight(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduceRight : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
      }

      function reject(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }

      function sample(collection) {
        var func = isArray(collection) ? arraySample : baseSample;
        return func(collection);
      }

      function sampleSize(collection, n, guard) {
        if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        var func = isArray(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n);
      }

      function shuffle(collection) {
        var func = isArray(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }

      function size(collection) {
        if (collection == null) {
          return 0;
        }

        if (isArrayLike(collection)) {
          return isString(collection) ? stringSize(collection) : collection.length;
        }

        var tag = getTag(collection);

        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }

        return baseKeys(collection).length;
      }

      function some(collection, predicate, guard) {
        var func = isArray(collection) ? arraySome : baseSome;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }

        var length = iteratees.length;

        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }

        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });

      var now = ctxNow || function () {
        return root.Date.now();
      };

      function after(n, func) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n < 1) {
            return func.apply(this, arguments);
          }
        };
      }

      function ary(func, n, guard) {
        n = guard ? undefined : n;
        n = func && n == null ? func.length : n;
        return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
      }

      function before(n, func) {
        var result;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n > 0) {
            result = func.apply(this, arguments);
          }

          if (n <= 1) {
            func = undefined;
          }

          return result;
        };
      }

      var bind = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(func, bitmask, thisArg, partials, holders);
      });
      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = 3;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(key, bitmask, object, partials, holders);
      });

      function curry(func, arity, guard) {
        arity = guard ? undefined : arity;
        var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curry.placeholder;
        return result;
      }

      function curryRight(func, arity, guard) {
        arity = guard ? undefined : arity;
        var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curryRight.placeholder;
        return result;
      }

      function debounce(func, wait, options) {
        var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        wait = toNumber(wait) || 0;

        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        function invokeFunc(time) {
          var args = lastArgs,
              thisArg = lastThis;
          lastArgs = lastThis = undefined;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }

        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }

        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }

        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }

        function timerExpired() {
          var time = now();

          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }

          timerId = setTimeout(timerExpired, remainingWait(time));
        }

        function trailingEdge(time) {
          timerId = undefined;

          if (trailing && lastArgs) {
            return invokeFunc(time);
          }

          lastArgs = lastThis = undefined;
          return result;
        }

        function cancel() {
          if (timerId !== undefined) {
            clearTimeout(timerId);
          }

          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined;
        }

        function flush() {
          return timerId === undefined ? result : trailingEdge(now());
        }

        function debounced() {
          var time = now(),
              isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;

          if (isInvoking) {
            if (timerId === undefined) {
              return leadingEdge(lastCallTime);
            }

            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }

          if (timerId === undefined) {
            timerId = setTimeout(timerExpired, wait);
          }

          return result;
        }

        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }

      var defer = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });
      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });

      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }

      function memoize(func, resolver) {
        if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var memoized = function memoized() {
          var args = arguments,
              key = resolver ? resolver.apply(this, args) : args[0],
              cache = memoized.cache;

          if (cache.has(key)) {
            return cache.get(key);
          }

          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };

        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }

      memoize.Cache = MapCache;

      function negate(predicate) {
        if (typeof predicate != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return !predicate.call(this);

            case 1:
              return !predicate.call(this, args[0]);

            case 2:
              return !predicate.call(this, args[0], args[1]);

            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }

          return !predicate.apply(this, args);
        };
      }

      function once(func) {
        return before(2, func);
      }

      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1,
              length = nativeMin(args.length, funcsLength);

          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }

          return apply(func, this, args);
        });
      });
      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
      });
      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
      });
      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
      });

      function rest(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start === undefined ? start : toInteger(start);
        return baseRest(func, start);
      }

      function spread(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start],
              otherArgs = castSlice(args, 0, start);

          if (array) {
            arrayPush(otherArgs, array);
          }

          return apply(func, this, otherArgs);
        });
      }

      function throttle(func, wait, options) {
        var leading = true,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        return debounce(func, wait, {
          'leading': leading,
          'maxWait': wait,
          'trailing': trailing
        });
      }

      function unary(func) {
        return ary(func, 1);
      }

      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }

      function castArray() {
        if (!arguments.length) {
          return [];
        }

        var value = arguments[0];
        return isArray(value) ? value : [value];
      }

      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }

      function cloneWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }

      function cloneDeep(value) {
        return baseClone(value, 5);
      }

      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseClone(value, 5, customizer);
      }

      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }

      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }

      var gt = createRelationalOperation(baseGt);
      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });
      var isArguments = baseIsArguments(function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
      };
      var isArray = Array.isArray;
      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }

      function isBoolean(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }

      var isBuffer = nativeIsBuffer || stubFalse;
      var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

      function isElement(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }

      function isEmpty(value) {
        if (value == null) {
          return true;
        }

        if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }

        var tag = getTag(value);

        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }

        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }

        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }

        return true;
      }

      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }

      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        var result = customizer ? customizer(value, other) : undefined;
        return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
      }

      function isError(value) {
        if (!isObjectLike(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
      }

      function isFinite(value) {
        return typeof value == 'number' && nativeIsFinite(value);
      }

      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }

      function isInteger(value) {
        return typeof value == 'number' && value == toInteger(value);
      }

      function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }

      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }

      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }

      function isNaN(value) {
        return isNumber(value) && value != +value;
      }

      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error(CORE_ERROR_TEXT);
        }

        return baseIsNative(value);
      }

      function isNull(value) {
        return value === null;
      }

      function isNil(value) {
        return value == null;
      }

      function isNumber(value) {
        return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
      }

      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }

        var proto = getPrototype(value);

        if (proto === null) {
          return true;
        }

        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }

      var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

      function isSafeInteger(value) {
        return isInteger(value) && value >= -9007199254740991 && value <= MAX_SAFE_INTEGER;
      }

      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

      function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }

      function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }

      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

      function isUndefined(value) {
        return value === undefined;
      }

      function isWeakMap(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }

      function isWeakSet(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }

      var lt = createRelationalOperation(baseLt);
      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });

      function toArray(value) {
        if (!value) {
          return [];
        }

        if (isArrayLike(value)) {
          return isString(value) ? stringToArray(value) : copyArray(value);
        }

        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }

        var tag = getTag(value),
            func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }

      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }

        value = toNumber(value);

        if (value === INFINITY || value === -(1 / 0)) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }

        return value === value ? value : 0;
      }

      function toInteger(value) {
        var result = toFinite(value),
            remainder = result % 1;
        return result === result ? remainder ? result - remainder : result : 0;
      }

      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }

      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        if (isObject(value)) {
          var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }

        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }

        value = value.replace(reTrim, '');
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }

      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }

      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -9007199254740991, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }

      function toString(value) {
        return value == null ? '' : baseToString(value);
      }

      var assign = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }

        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });
      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });
      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });
      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });
      var at = flatRest(baseAt);

      function create(prototype, properties) {
        var result = baseCreate(prototype);
        return properties == null ? result : baseAssign(result, properties);
      }

      var defaults = baseRest(function (object, sources) {
        object = Object(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }

        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;

          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];

            if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }

        return object;
      });
      var defaultsDeep = baseRest(function (args) {
        args.push(undefined, customDefaultsMerge);
        return apply(mergeWith, undefined, args);
      });

      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }

      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }

      function forIn(object, iteratee) {
        return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
      }

      function forInRight(object, iteratee) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
      }

      function forOwn(object, iteratee) {
        return object && baseForOwn(object, getIteratee(iteratee, 3));
      }

      function forOwnRight(object, iteratee) {
        return object && baseForOwnRight(object, getIteratee(iteratee, 3));
      }

      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }

      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }

      function get(object, path, defaultValue) {
        var result = object == null ? undefined : baseGet(object, path);
        return result === undefined ? defaultValue : result;
      }

      function has(object, path) {
        return object != null && hasPath(object, path, baseHas);
      }

      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }

      var invert = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        result[value] = key;
      }, constant(identity));
      var invertBy = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }, getIteratee);
      var invoke = baseRest(baseInvoke);

      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }

      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }

      function mapKeys(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, iteratee(value, key, object), value);
        });
        return result;
      }

      function mapValues(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, key, iteratee(value, key, object));
        });
        return result;
      }

      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      var omit = flatRest(function (object, paths) {
        var result = {};

        if (object == null) {
          return result;
        }

        var isDeep = false;
        paths = arrayMap(paths, function (path) {
          path = castPath(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        copyObject(object, getAllKeysIn(object), result);

        if (isDeep) {
          result = baseClone(result, 7, customOmitClone);
        }

        var length = paths.length;

        while (length--) {
          baseUnset(result, paths[length]);
        }

        return result;
      });

      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }

      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });

      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }

        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path) {
          return predicate(value, path[0]);
        });
      }

      function result(object, path, defaultValue) {
        path = castPath(path, object);
        var index = -1,
            length = path.length;

        if (!length) {
          length = 1;
          object = undefined;
        }

        while (++index < length) {
          var value = object == null ? undefined : object[toKey(path[index])];

          if (value === undefined) {
            index = length;
            value = defaultValue;
          }

          object = isFunction(value) ? value.call(object) : value;
        }

        return object;
      }

      function set(object, path, value) {
        return object == null ? object : baseSet(object, path, value);
      }

      function setWith(object, path, value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return object == null ? object : baseSet(object, path, value, customizer);
      }

      var toPairs = createToPairs(keys);
      var toPairsIn = createToPairs(keysIn);

      function transform(object, iteratee, accumulator) {
        var isArr = isArray(object),
            isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = getIteratee(iteratee, 4);

        if (accumulator == null) {
          var Ctor = object && object.constructor;

          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }

        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
          return iteratee(accumulator, value, index, object);
        });
        return accumulator;
      }

      function unset(object, path) {
        return object == null ? true : baseUnset(object, path);
      }

      function update(object, path, updater) {
        return object == null ? object : baseUpdate(object, path, castFunction(updater));
      }

      function updateWith(object, path, updater, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined;
        return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
      }

      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }

      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }

      function clamp(number, lower, upper) {
        if (upper === undefined) {
          upper = lower;
          lower = undefined;
        }

        if (upper !== undefined) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }

        if (lower !== undefined) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }

        return baseClamp(toNumber(number), lower, upper);
      }

      function inRange(number, start, end) {
        start = toFinite(start);

        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }

        number = toNumber(number);
        return baseInRange(number, start, end);
      }

      function random(lower, upper, floating) {
        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined;
        }

        if (floating === undefined) {
          if (typeof upper == 'boolean') {
            floating = upper;
            upper = undefined;
          } else if (typeof lower == 'boolean') {
            floating = lower;
            lower = undefined;
          }
        }

        if (lower === undefined && upper === undefined) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);

          if (upper === undefined) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }

        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }

        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
        }

        return baseRandom(lower, upper);
      }

      var camelCase = createCompounder(function (result, word, index) {
        word = word.toLowerCase();
        return result + (index ? capitalize(word) : word);
      });

      function capitalize(string) {
        return upperFirst(toString(string).toLowerCase());
      }

      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
      }

      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }

      function escape(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }

      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
      }

      var kebabCase = createCompounder(function (result, word, index) {
        return result + (index ? '-' : '') + word.toLowerCase();
      });
      var lowerCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toLowerCase();
      });
      var lowerFirst = createCaseFirst('toLowerCase');

      function pad(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;

        if (!length || strLength >= length) {
          return string;
        }

        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
      }

      function padEnd(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
      }

      function padStart(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
      }

      function parseInt(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }

        return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
      }

      function repeat(string, n, guard) {
        if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        return baseRepeat(toString(string), n);
      }

      function replace() {
        var args = arguments,
            string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }

      var snakeCase = createCompounder(function (result, word, index) {
        return result + (index ? '_' : '') + word.toLowerCase();
      });

      function split(string, separator, limit) {
        if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
          separator = limit = undefined;
        }

        limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;

        if (!limit) {
          return [];
        }

        string = toString(string);

        if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
          separator = baseToString(separator);

          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit);
          }
        }

        return string.split(separator, limit);
      }

      var startCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + upperFirst(word);
      });

      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }

      function template(string, options, guard) {
        var settings = lodash.templateSettings;

        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined;
        }

        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
            importsKeys = keys(imports),
            importsValues = baseValues(imports, importsKeys);
        var isEscaping,
            isEvaluating,
            index = 0,
            interpolate = options.interpolate || reNoMatch,
            source = "__p += '";
        var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
        var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);
          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }

          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }

          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }

          index = offset + match.length;
          return match;
        });
        source += "';\n";
        var variable = hasOwnProperty.call(options, 'variable') && options.variable;

        if (!variable) {
          source = 'with (obj) {\n' + source + '\n}\n';
        }

        source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
        source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
        var result = attempt(function () {
          return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
        });
        result.source = source;

        if (isError(result)) {
          throw result;
        }

        return result;
      }

      function toLower(value) {
        return toString(value).toLowerCase();
      }

      function toUpper(value) {
        return toString(value).toUpperCase();
      }

      function trim(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrim, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            chrSymbols = stringToArray(chars),
            start = charsStartIndex(strSymbols, chrSymbols),
            end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join('');
      }

      function trimEnd(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrimEnd, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
        return castSlice(strSymbols, 0, end).join('');
      }

      function trimStart(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined)) {
          return string.replace(reTrimStart, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            start = charsStartIndex(strSymbols, stringToArray(chars));
        return castSlice(strSymbols, start).join('');
      }

      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH,
            omission = DEFAULT_TRUNC_OMISSION;

        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? toInteger(options.length) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        }

        string = toString(string);
        var strLength = string.length;

        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }

        if (length >= strLength) {
          return string;
        }

        var end = length - stringSize(omission);

        if (end < 1) {
          return omission;
        }

        var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

        if (separator === undefined) {
          return result + omission;
        }

        if (strSymbols) {
          end += result.length - end;
        }

        if (isRegExp(separator)) {
          if (string.slice(end).search(separator)) {
            var match,
                substring = result;

            if (!separator.global) {
              separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
            }

            separator.lastIndex = 0;

            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }

            result = result.slice(0, newEnd === undefined ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result.lastIndexOf(separator);

          if (index > -1) {
            result = result.slice(0, index);
          }
        }

        return result + omission;
      }

      function unescape(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }

      var upperCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toUpperCase();
      });
      var upperFirst = createCaseFirst('toUpperCase');

      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined : pattern;

        if (pattern === undefined) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }

        return string.match(pattern) || [];
      }

      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined, args);
        } catch (e) {
          return isError(e) ? e : new Error(e);
        }
      });
      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind(object[key], object));
        });
        return object;
      });

      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length,
            toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }

          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;

          while (++index < length) {
            var pair = pairs[index];

            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }

      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }

      function constant(value) {
        return function () {
          return value;
        };
      }

      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }

      var flow = createFlow();
      var flowRight = createFlow(true);

      function identity(value) {
        return value;
      }

      function iteratee(func) {
        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
      }

      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }

      function matchesProperty(path, srcValue) {
        return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
      }

      var method = baseRest(function (path, args) {
        return function (object) {
          return baseInvoke(object, path, args);
        };
      });
      var methodOf = baseRest(function (object, args) {
        return function (path) {
          return baseInvoke(object, path, args);
        };
      });

      function mixin(object, source, options) {
        var props = keys(source),
            methodNames = baseFunctions(source, props);

        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }

        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
            isFunc = isFunction(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;

          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;

              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                    actions = result.__actions__ = copyArray(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }

              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }

      function noConflict() {
        if (root._ === this) {
          root._ = oldDash;
        }

        return this;
      }

      function noop() {}

      function nthArg(n) {
        n = toInteger(n);
        return baseRest(function (args) {
          return baseNth(args, n);
        });
      }

      var over = createOver(arrayMap);
      var overEvery = createOver(arrayEvery);
      var overSome = createOver(arraySome);

      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }

      function propertyOf(object) {
        return function (path) {
          return object == null ? undefined : baseGet(object, path);
        };
      }

      var range = createRange();
      var rangeRight = createRange(true);

      function stubArray() {
        return [];
      }

      function stubFalse() {
        return false;
      }

      function stubObject() {
        return {};
      }

      function stubString() {
        return '';
      }

      function stubTrue() {
        return true;
      }

      function times(n, iteratee) {
        n = toInteger(n);

        if (n < 1 || n > MAX_SAFE_INTEGER) {
          return [];
        }

        var index = MAX_ARRAY_LENGTH,
            length = nativeMin(n, MAX_ARRAY_LENGTH);
        iteratee = getIteratee(iteratee);
        n -= MAX_ARRAY_LENGTH;
        var result = baseTimes(length, iteratee);

        while (++index < n) {
          iteratee(index);
        }

        return result;
      }

      function toPath(value) {
        if (isArray(value)) {
          return arrayMap(value, toKey);
        }

        return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
      }

      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }

      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);
      var ceil = createRound('ceil');
      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);
      var floor = createRound('floor');

      function max(array) {
        return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
      }

      function maxBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
      }

      function mean(array) {
        return baseMean(array, identity);
      }

      function meanBy(array, iteratee) {
        return baseMean(array, getIteratee(iteratee, 2));
      }

      function min(array) {
        return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
      }

      function minBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
      }

      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);
      var round = createRound('round');
      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);

      function sum(array) {
        return array && array.length ? baseSum(array, identity) : 0;
      }

      function sumBy(array, iteratee) {
        return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
      }

      lodash.after = after;
      lodash.ary = ary;
      lodash.assign = assign;
      lodash.assignIn = assignIn;
      lodash.assignInWith = assignInWith;
      lodash.assignWith = assignWith;
      lodash.at = at;
      lodash.before = before;
      lodash.bind = bind;
      lodash.bindAll = bindAll;
      lodash.bindKey = bindKey;
      lodash.castArray = castArray;
      lodash.chain = chain;
      lodash.chunk = chunk;
      lodash.compact = compact;
      lodash.concat = concat;
      lodash.cond = cond;
      lodash.conforms = conforms;
      lodash.constant = constant;
      lodash.countBy = countBy;
      lodash.create = create;
      lodash.curry = curry;
      lodash.curryRight = curryRight;
      lodash.debounce = debounce;
      lodash.defaults = defaults;
      lodash.defaultsDeep = defaultsDeep;
      lodash.defer = defer;
      lodash.delay = delay;
      lodash.difference = difference;
      lodash.differenceBy = differenceBy;
      lodash.differenceWith = differenceWith;
      lodash.drop = drop;
      lodash.dropRight = dropRight;
      lodash.dropRightWhile = dropRightWhile;
      lodash.dropWhile = dropWhile;
      lodash.fill = fill;
      lodash.filter = filter;
      lodash.flatMap = flatMap;
      lodash.flatMapDeep = flatMapDeep;
      lodash.flatMapDepth = flatMapDepth;
      lodash.flatten = flatten;
      lodash.flattenDeep = flattenDeep;
      lodash.flattenDepth = flattenDepth;
      lodash.flip = flip;
      lodash.flow = flow;
      lodash.flowRight = flowRight;
      lodash.fromPairs = fromPairs;
      lodash.functions = functions;
      lodash.functionsIn = functionsIn;
      lodash.groupBy = groupBy;
      lodash.initial = initial;
      lodash.intersection = intersection;
      lodash.intersectionBy = intersectionBy;
      lodash.intersectionWith = intersectionWith;
      lodash.invert = invert;
      lodash.invertBy = invertBy;
      lodash.invokeMap = invokeMap;
      lodash.iteratee = iteratee;
      lodash.keyBy = keyBy;
      lodash.keys = keys;
      lodash.keysIn = keysIn;
      lodash.map = map;
      lodash.mapKeys = mapKeys;
      lodash.mapValues = mapValues;
      lodash.matches = matches;
      lodash.matchesProperty = matchesProperty;
      lodash.memoize = memoize;
      lodash.merge = merge;
      lodash.mergeWith = mergeWith;
      lodash.method = method;
      lodash.methodOf = methodOf;
      lodash.mixin = mixin;
      lodash.negate = negate;
      lodash.nthArg = nthArg;
      lodash.omit = omit;
      lodash.omitBy = omitBy;
      lodash.once = once;
      lodash.orderBy = orderBy;
      lodash.over = over;
      lodash.overArgs = overArgs;
      lodash.overEvery = overEvery;
      lodash.overSome = overSome;
      lodash.partial = partial;
      lodash.partialRight = partialRight;
      lodash.partition = partition;
      lodash.pick = pick;
      lodash.pickBy = pickBy;
      lodash.property = property;
      lodash.propertyOf = propertyOf;
      lodash.pull = pull;
      lodash.pullAll = pullAll;
      lodash.pullAllBy = pullAllBy;
      lodash.pullAllWith = pullAllWith;
      lodash.pullAt = pullAt;
      lodash.range = range;
      lodash.rangeRight = rangeRight;
      lodash.rearg = rearg;
      lodash.reject = reject;
      lodash.remove = remove;
      lodash.rest = rest;
      lodash.reverse = reverse;
      lodash.sampleSize = sampleSize;
      lodash.set = set;
      lodash.setWith = setWith;
      lodash.shuffle = shuffle;
      lodash.slice = slice;
      lodash.sortBy = sortBy;
      lodash.sortedUniq = sortedUniq;
      lodash.sortedUniqBy = sortedUniqBy;
      lodash.split = split;
      lodash.spread = spread;
      lodash.tail = tail;
      lodash.take = take;
      lodash.takeRight = takeRight;
      lodash.takeRightWhile = takeRightWhile;
      lodash.takeWhile = takeWhile;
      lodash.tap = tap;
      lodash.throttle = throttle;
      lodash.thru = thru;
      lodash.toArray = toArray;
      lodash.toPairs = toPairs;
      lodash.toPairsIn = toPairsIn;
      lodash.toPath = toPath;
      lodash.toPlainObject = toPlainObject;
      lodash.transform = transform;
      lodash.unary = unary;
      lodash.union = union;
      lodash.unionBy = unionBy;
      lodash.unionWith = unionWith;
      lodash.uniq = uniq;
      lodash.uniqBy = uniqBy;
      lodash.uniqWith = uniqWith;
      lodash.unset = unset;
      lodash.unzip = unzip;
      lodash.unzipWith = unzipWith;
      lodash.update = update;
      lodash.updateWith = updateWith;
      lodash.values = values;
      lodash.valuesIn = valuesIn;
      lodash.without = without;
      lodash.words = words;
      lodash.wrap = wrap;
      lodash.xor = xor;
      lodash.xorBy = xorBy;
      lodash.xorWith = xorWith;
      lodash.zip = zip;
      lodash.zipObject = zipObject;
      lodash.zipObjectDeep = zipObjectDeep;
      lodash.zipWith = zipWith;
      lodash.entries = toPairs;
      lodash.entriesIn = toPairsIn;
      lodash.extend = assignIn;
      lodash.extendWith = assignInWith;
      mixin(lodash, lodash);
      lodash.add = add;
      lodash.attempt = attempt;
      lodash.camelCase = camelCase;
      lodash.capitalize = capitalize;
      lodash.ceil = ceil;
      lodash.clamp = clamp;
      lodash.clone = clone;
      lodash.cloneDeep = cloneDeep;
      lodash.cloneDeepWith = cloneDeepWith;
      lodash.cloneWith = cloneWith;
      lodash.conformsTo = conformsTo;
      lodash.deburr = deburr;
      lodash.defaultTo = defaultTo;
      lodash.divide = divide;
      lodash.endsWith = endsWith;
      lodash.eq = eq;
      lodash.escape = escape;
      lodash.escapeRegExp = escapeRegExp;
      lodash.every = every;
      lodash.find = find;
      lodash.findIndex = findIndex;
      lodash.findKey = findKey;
      lodash.findLast = findLast;
      lodash.findLastIndex = findLastIndex;
      lodash.findLastKey = findLastKey;
      lodash.floor = floor;
      lodash.forEach = forEach;
      lodash.forEachRight = forEachRight;
      lodash.forIn = forIn;
      lodash.forInRight = forInRight;
      lodash.forOwn = forOwn;
      lodash.forOwnRight = forOwnRight;
      lodash.get = get;
      lodash.gt = gt;
      lodash.gte = gte;
      lodash.has = has;
      lodash.hasIn = hasIn;
      lodash.head = head;
      lodash.identity = identity;
      lodash.includes = includes;
      lodash.indexOf = indexOf;
      lodash.inRange = inRange;
      lodash.invoke = invoke;
      lodash.isArguments = isArguments;
      lodash.isArray = isArray;
      lodash.isArrayBuffer = isArrayBuffer;
      lodash.isArrayLike = isArrayLike;
      lodash.isArrayLikeObject = isArrayLikeObject;
      lodash.isBoolean = isBoolean;
      lodash.isBuffer = isBuffer;
      lodash.isDate = isDate;
      lodash.isElement = isElement;
      lodash.isEmpty = isEmpty;
      lodash.isEqual = isEqual;
      lodash.isEqualWith = isEqualWith;
      lodash.isError = isError;
      lodash.isFinite = isFinite;
      lodash.isFunction = isFunction;
      lodash.isInteger = isInteger;
      lodash.isLength = isLength;
      lodash.isMap = isMap;
      lodash.isMatch = isMatch;
      lodash.isMatchWith = isMatchWith;
      lodash.isNaN = isNaN;
      lodash.isNative = isNative;
      lodash.isNil = isNil;
      lodash.isNull = isNull;
      lodash.isNumber = isNumber;
      lodash.isObject = isObject;
      lodash.isObjectLike = isObjectLike;
      lodash.isPlainObject = isPlainObject;
      lodash.isRegExp = isRegExp;
      lodash.isSafeInteger = isSafeInteger;
      lodash.isSet = isSet;
      lodash.isString = isString;
      lodash.isSymbol = isSymbol;
      lodash.isTypedArray = isTypedArray;
      lodash.isUndefined = isUndefined;
      lodash.isWeakMap = isWeakMap;
      lodash.isWeakSet = isWeakSet;
      lodash.join = join;
      lodash.kebabCase = kebabCase;
      lodash.last = last;
      lodash.lastIndexOf = lastIndexOf;
      lodash.lowerCase = lowerCase;
      lodash.lowerFirst = lowerFirst;
      lodash.lt = lt;
      lodash.lte = lte;
      lodash.max = max;
      lodash.maxBy = maxBy;
      lodash.mean = mean;
      lodash.meanBy = meanBy;
      lodash.min = min;
      lodash.minBy = minBy;
      lodash.stubArray = stubArray;
      lodash.stubFalse = stubFalse;
      lodash.stubObject = stubObject;
      lodash.stubString = stubString;
      lodash.stubTrue = stubTrue;
      lodash.multiply = multiply;
      lodash.nth = nth;
      lodash.noConflict = noConflict;
      lodash.noop = noop;
      lodash.now = now;
      lodash.pad = pad;
      lodash.padEnd = padEnd;
      lodash.padStart = padStart;
      lodash.parseInt = parseInt;
      lodash.random = random;
      lodash.reduce = reduce;
      lodash.reduceRight = reduceRight;
      lodash.repeat = repeat;
      lodash.replace = replace;
      lodash.result = result;
      lodash.round = round;
      lodash.runInContext = runInContext;
      lodash.sample = sample;
      lodash.size = size;
      lodash.snakeCase = snakeCase;
      lodash.some = some;
      lodash.sortedIndex = sortedIndex;
      lodash.sortedIndexBy = sortedIndexBy;
      lodash.sortedIndexOf = sortedIndexOf;
      lodash.sortedLastIndex = sortedLastIndex;
      lodash.sortedLastIndexBy = sortedLastIndexBy;
      lodash.sortedLastIndexOf = sortedLastIndexOf;
      lodash.startCase = startCase;
      lodash.startsWith = startsWith;
      lodash.subtract = subtract;
      lodash.sum = sum;
      lodash.sumBy = sumBy;
      lodash.template = template;
      lodash.times = times;
      lodash.toFinite = toFinite;
      lodash.toInteger = toInteger;
      lodash.toLength = toLength;
      lodash.toLower = toLower;
      lodash.toNumber = toNumber;
      lodash.toSafeInteger = toSafeInteger;
      lodash.toString = toString;
      lodash.toUpper = toUpper;
      lodash.trim = trim;
      lodash.trimEnd = trimEnd;
      lodash.trimStart = trimStart;
      lodash.truncate = truncate;
      lodash.unescape = unescape;
      lodash.uniqueId = uniqueId;
      lodash.upperCase = upperCase;
      lodash.upperFirst = upperFirst;
      lodash.each = forEach;
      lodash.eachRight = forEachRight;
      lodash.first = head;
      mixin(lodash, function () {
        var source = {};
        baseForOwn(lodash, function (func, methodName) {
          if (!hasOwnProperty.call(lodash.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), {
        'chain': false
      });
      lodash.VERSION = VERSION;
      arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
        lodash[methodName].placeholder = lodash;
      });
      arrayEach(['drop', 'take'], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n) {
          n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
          var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

          if (result.__filtered__) {
            result.__takeCount__ = nativeMin(n, result.__takeCount__);
          } else {
            result.__views__.push({
              'size': nativeMin(n, MAX_ARRAY_LENGTH),
              'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
            });
          }

          return result;
        };

        LazyWrapper.prototype[methodName + 'Right'] = function (n) {
          return this.reverse()[methodName](n).reverse();
        };
      });
      arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
        var type = index + 1,
            isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

        LazyWrapper.prototype[methodName] = function (iteratee) {
          var result = this.clone();

          result.__iteratees__.push({
            'iteratee': getIteratee(iteratee, 3),
            'type': type
          });

          result.__filtered__ = result.__filtered__ || isFilter;
          return result;
        };
      });
      arrayEach(['head', 'last'], function (methodName, index) {
        var takeName = 'take' + (index ? 'Right' : '');

        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });
      arrayEach(['initial', 'tail'], function (methodName, index) {
        var dropName = 'drop' + (index ? '' : 'Right');

        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });

      LazyWrapper.prototype.compact = function () {
        return this.filter(identity);
      };

      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };

      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };

      LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
        if (typeof path == 'function') {
          return new LazyWrapper(this);
        }

        return this.map(function (value) {
          return baseInvoke(value, path, args);
        });
      });

      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };

      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result = this;

        if (result.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result);
        }

        if (start < 0) {
          result = result.takeRight(-start);
        } else if (start) {
          result = result.drop(start);
        }

        if (end !== undefined) {
          end = toInteger(end);
          result = end < 0 ? result.dropRight(-end) : result.take(end - start);
        }

        return result;
      };

      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };

      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };

      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
            isTaker = /^(?:head|last)$/.test(methodName),
            lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
            retUnwrapped = isTaker || /^find/.test(methodName);

        if (!lodashFunc) {
          return;
        }

        lodash.prototype[methodName] = function () {
          var value = this.__wrapped__,
              args = isTaker ? [1] : arguments,
              isLazy = value instanceof LazyWrapper,
              iteratee = args[0],
              useLazy = isLazy || isArray(value);

          var interceptor = function interceptor(value) {
            var result = lodashFunc.apply(lodash, arrayPush([value], args));
            return isTaker && chainAll ? result[0] : result;
          };

          if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
            isLazy = useLazy = false;
          }

          var chainAll = this.__chain__,
              isHybrid = !!this.__actions__.length,
              isUnwrapped = retUnwrapped && !chainAll,
              onlyLazy = isLazy && !isHybrid;

          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result = func.apply(value, args);

            result.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined
            });

            return new LodashWrapper(result, chainAll);
          }

          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }

          result = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
        };
      });
      arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
        var func = arrayProto[methodName],
            chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
            retUnwrapped = /^(?:pop|shift)$/.test(methodName);

        lodash.prototype[methodName] = function () {
          var args = arguments;

          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray(value) ? value : [], args);
          }

          return this[chainName](function (value) {
            return func.apply(isArray(value) ? value : [], args);
          });
        };
      });
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash[methodName];

        if (lodashFunc) {
          var key = lodashFunc.name + '';

          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }

          realNames[key].push({
            'name': methodName,
            'func': lodashFunc
          });
        }
      });
      realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
        'name': 'wrapper',
        'func': undefined
      }];
      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;
      lodash.prototype.at = wrapperAt;
      lodash.prototype.chain = wrapperChain;
      lodash.prototype.commit = wrapperCommit;
      lodash.prototype.next = wrapperNext;
      lodash.prototype.plant = wrapperPlant;
      lodash.prototype.reverse = wrapperReverse;
      lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
      lodash.prototype.first = lodash.prototype.head;

      if (symIterator) {
        lodash.prototype[symIterator] = wrapperToIterator;
      }

      return lodash;
    };

    var _ = runInContext();

    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
      root._ = _;
      define(function () {
        return _;
      });
    } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
  }).call(this);
},11503,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "6cc5d7d5b5cf41a636d767924002d65a",
    "name": "policy_gateway_mgl03_lu",
    "type": "html"
  });
},11504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "5435250583de599fdea89b02ca8a8b48",
    "name": "policy_gateway_mgl03_ms",
    "type": "html"
  });
},11507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "9c28659d661cf5f1da05991d7a275efc",
    "name": "policy_gateway_mgl03_my",
    "type": "html"
  });
},11510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "bd6449684972350e00f43fc39b24fbb6",
    "name": "policy_gateway_mgl03_nl",
    "type": "html"
  });
},11513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "68af381dbd63f92a79e9d0e1616b8d80",
    "name": "policy_gateway_mgl03_no",
    "type": "html"
  });
},11516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "8942bca53fae94f03997cbc999068c8a",
    "name": "policy_gateway_mgl03_pl",
    "type": "html"
  });
},11519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "931f9318798eb7308b68129bf601c384",
    "name": "policy_gateway_mgl03_pt",
    "type": "html"
  });
},11522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "385106a3eeab19efd9d7343689d560b5",
    "name": "policy_gateway_mgl03_pt_br",
    "type": "html"
  });
},11525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "62d71f6aa7adc89b46a47fe02203cb3f",
    "name": "policy_gateway_mgl03_ro",
    "type": "html"
  });
},11528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "4007d9d3e6c407f327d25c3eb1a3ac41",
    "name": "policy_gateway_mgl03_ru",
    "type": "html"
  });
},11531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "214a64ccc8411fb061832efd6b7adea0",
    "name": "policy_gateway_mgl03_sv",
    "type": "html"
  });
},11534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "2f085e1e01b27c80dd4f489ed27d35ed",
    "name": "policy_gateway_mgl03_th",
    "type": "html"
  });
},11537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "08dcc2bc7c79c1f7090bf43e0404387a",
    "name": "policy_gateway_mgl03_tr",
    "type": "html"
  });
},11540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "96c91d25d20da78c0f392d2f3ccc7a7b",
    "name": "policy_gateway_mgl03_tw",
    "type": "html"
  });
},11543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "83982f8eccc0a72d1cd824708d6b4d8b",
    "name": "policy_gateway_mgl03_uk",
    "type": "html"
  });
},11546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "19b08a331c69e46234099b4e0d8f9fdc",
    "name": "policy_gateway_mgl03_vi",
    "type": "html"
  });
},11549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "a652ca93f1fd7334a8ea6111b9784af5",
    "name": "policy_gateway_mgl03_zh",
    "type": "html"
  });
},11552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/html",
    "scales": [1],
    "hash": "494eb66d86dd93ad8986a16cec21ea65",
    "name": "policy_gateway_mgl03_zh_en",
    "type": "html"
  });
},11555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 844,
    "height": 844,
    "scales": [1],
    "hash": "cccfdfe005f402a1db706a08b9cc9d62",
    "name": "lumi_gateway_a_homepage_round_off",
    "type": "png"
  });
},11558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 844,
    "height": 844,
    "scales": [1],
    "hash": "45076a7ec9fca35ebd56e9e1eeeac395",
    "name": "lumi_gateway_a_homepage_round_off_dark",
    "type": "png"
  });
},11561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 880,
    "height": 880,
    "scales": [1],
    "hash": "a35cce1f878ff27f0d6c8533f3671274",
    "name": "lumi_gateway_a_homepage_round_bottom_bg",
    "type": "png"
  });
},11564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 844,
    "height": 844,
    "scales": [1],
    "hash": "2e50c6302e0e6ecfb464767dfb550e2b",
    "name": "lumi_gateway_a_homepage_round_bottom_bg_dark",
    "type": "png"
  });
},11567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 880,
    "height": 880,
    "scales": [1],
    "hash": "294853cfa376297403c99783a1052a72",
    "name": "lumi_gateway_a_homepage_round_bottom",
    "type": "png"
  });
},11570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 844,
    "height": 844,
    "scales": [1],
    "hash": "942e93498959887f3a36d74028f23d29",
    "name": "lumi_gateway_a_homepage_round_bottom_dark",
    "type": "png"
  });
},11573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 219,
    "height": 219,
    "scales": [1],
    "hash": "de0d15dc1b21b643c5f7170793d4b355",
    "name": "lumi_gateway_a_homepage_round_center",
    "type": "png"
  });
},11576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 210,
    "height": 210,
    "scales": [1],
    "hash": "6b50ad61370668cbfb4f4ed81175efd6",
    "name": "lumi_gateway_a_homepage_center_dark",
    "type": "png"
  });
},11579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 115,
    "height": 115,
    "scales": [1],
    "hash": "00c2ca445894c5d40c5d03db4669c2fe",
    "name": "lumi_gateway_a_homepage_mode",
    "type": "png"
  });
},11582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "611fb420c0f4b98147b0ac18a99ecbb5",
    "name": "homepage_log",
    "type": "png"
  });
},11585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "45e716391df88b2b4e8c7ee37f4a60b1",
    "name": "homepag_icon_log_dark",
    "type": "png"
  });
},11588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "836fe01128d20c7f0a2764bab7ac20eb",
    "name": "abnormal_icon",
    "type": "png"
  });
},11591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "5744ad4bc789c5f41aefc68fc607e214",
    "name": "lumi_hub_home_remind_dark",
    "type": "png"
  });
},11594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "4778514381f3cab26a34b331cae11d17",
    "name": "default_card_close",
    "type": "png"
  });
},11597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "bcc0dbc316cd30569d877c352e5cc59a",
    "name": "alarm_device",
    "type": "png"
  });
},11600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "46ba0156434820b14b3361353bf96058",
    "name": "alarm_device_dark",
    "type": "png"
  });
},11603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "591f5810b4bf6cc68acd30ef0389b07e",
    "name": "at_home_off",
    "type": "png"
  });
},11606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "926bb1140e1555e0cd970996b8b3d467",
    "name": "at_home_off_dark",
    "type": "png"
  });
},11609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "47e6090e7251b825916156773d119692",
    "name": "at_home_on",
    "type": "png"
  });
},11612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "b85f03afddb5760be00104f8eefb2cd8",
    "name": "at_home_on_dark",
    "type": "png"
  });
},11615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "78dda62472465fa3c5e256352e3b4f01",
    "name": "away_from_home_off",
    "type": "png"
  });
},11618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "958622bd10f7b9e445f4a7b22f848fd7",
    "name": "away_from_home_off_dark",
    "type": "png"
  });
},11621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "2e2353f8fc326a6b8875033f6136d64a",
    "name": "away_from_home_on",
    "type": "png"
  });
},11624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "d01a142482c5a366fbbb0cbebb0feba9",
    "name": "away_from_home_on_dark",
    "type": "png"
  });
},11627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "b6a0e102ecd72af87af174e6f6f9643d",
    "name": "sleep_off",
    "type": "png"
  });
},11630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "7a65efd55d7b0f34532db007f2931b3c",
    "name": "sleep_off_dark",
    "type": "png"
  });
},11633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 150,
    "height": 150,
    "scales": [1],
    "hash": "4122cc38dd969dc2dbbbe28c06329f72",
    "name": "sleep_on",
    "type": "png"
  });
},11636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 168,
    "height": 168,
    "scales": [1],
    "hash": "8db3708084468766e8118008a0750929",
    "name": "sleep_on_dark",
    "type": "png"
  });
},11639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9dd48778700a15ad3bbd753cd5db190e",
    "name": "sub_device",
    "type": "png"
  });
},11642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources/MainPage",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "ba6aa41f0ea1813f5bd301c0d127f97c",
    "name": "homepag_icon_devices_dark",
    "type": "png"
  });
},11645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 414,
    "height": 414,
    "scales": [1],
    "hash": "372948f0ea16947674da3df52c8be05e",
    "name": "lumi_gateway_empty_image",
    "type": "png"
  });
},11648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "dbb8ee1319601c0bf64e9d699c5ce64b",
    "name": "lumi_gateway_a_seletced",
    "type": "png"
  });
},11651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "59d9ba64766d7d5317afa409cd55c245",
    "name": "lumi_gateway_a_unseletced",
    "type": "png"
  });
},11654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 6,
    "height": 10,
    "scales": [2],
    "hash": "614d4383eedeaa6b266e763c9a0dc413",
    "name": "select_icon",
    "type": "png"
  });
},11657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 6,
    "height": 10,
    "scales": [2],
    "hash": "a15d806a8f0d8e9797a4df9020de12eb",
    "name": "select_icon_dark",
    "type": "png"
  });
},11660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "dc4140dcfa147cea19abc0cd6645881b",
    "name": "lumi_gateway_a_mode_edit",
    "type": "png"
  });
},11663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9c17932b38bc03bdb1b7537dc3c88d8a",
    "name": "lumi_gateway_a_mode_edit_press",
    "type": "png"
  });
},11666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 347,
    "height": 419,
    "scales": [1],
    "hash": "eed5349c4db59727570da3c48d4c6978",
    "name": "lumi_gateway_a_basis_protect",
    "type": "png"
  });
},11669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.lumi.hub/Resources",
    "width": 347,
    "height": 419,
    "scales": [1],
    "hash": "9dd9ab62acdf40eb0c61f4149dd790e7",
    "name": "lumi_gateway_a_basis_protect_off",
    "type": "png"
  });
},11672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[1]);

  var styles = _reactNative.StyleSheet.create({
    flex: {
      flex: 1
    },
    alignItemsCenter: {
      alignItems: 'center'
    },
    topContentWrap: {
      alignItems: 'center',
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(43),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(54)
    },
    guardImgWrap: {
      width: _LHCommonFunction.LHUiUtils.GetPx(282),
      height: _LHCommonFunction.LHUiUtils.GetPx(282),
      alignItems: 'center',
      justifyContent: 'center'
    },
    guardImgBg: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: _LHCommonFunction.LHUiUtils.GetPx(282),
      height: _LHCommonFunction.LHUiUtils.GetPx(282),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(141)
    },
    guardImgAnimate: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: _LHCommonFunction.LHUiUtils.GetPx(282),
      height: _LHCommonFunction.LHUiUtils.GetPx(282),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(141)
    },
    guardInnerImg: {
      width: _LHCommonFunction.LHUiUtils.GetPx(70),
      height: _LHCommonFunction.LHUiUtils.GetPx(70),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(35)
    },
    textWrap: {
      marginTop: _LHCommonFunction.LHUiUtils.GetPx(14),
      width: '100%'
    },
    statusText: {
      width: '100%',
      textAlign: 'center',
      fontSize: _LHCommonFunction.LHUiUtils.GetPx(14),
      lineHeight: _LHCommonFunction.LHUiUtils.GetPx(19),
      color: '#999',
      letterSpacing: 0
    },
    bottomWrap: {
      marginBottom: _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight || _LHCommonFunction.LHUiUtils.GetPx(10),
      zIndex: 10
    },
    cellWrap: {
      shadowOpacity: 0.07,
      shadowColor: '#000',
      shadowRadius: _LHCommonFunction.LHUiUtils.GetPx(7),
      shadowOffset: {
        height: 1,
        width: 0
      },
      marginHorizontal: _LHCommonFunction.LHUiUtils.GetPx(10),
      marginBottom: _LHCommonFunction.LHUiUtils.GetPx(10),
      borderRadius: _LHCommonFunction.LHUiUtils.GetPx(7),
      overflow: 'hidden'
    },
    bottomMask: {
      position: 'absolute',
      left: 0,
      bottom: _LHCommonFunction.LHUiUtils.GetPx(-180),
      zIndex: 1
    },
    row: {
      flexDirection: 'row'
    }
  });

  exports.default = styles;
},11675,[10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reduxActions = _$$_REQUIRE(_dependencyMap[2]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[3]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _GuardModeConstant = _$$_REQUIRE(_dependencyMap[5]);

  var _ActionTypes = _$$_REQUIRE(_dependencyMap[6]);

  var getArmingInfo = (0, _reduxActions.createAction)(_ActionTypes.ARMING_INFO, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetPropertiesValue([_GuardModeConstant.GuardModeSpec.armingMode, _GuardModeConstant.GuardModeSpec.targetMode, _GuardModeConstant.GuardModeConstant.home.delayTime, _GuardModeConstant.GuardModeConstant.away.delayTime, _GuardModeConstant.GuardModeConstant.sleep.delayTime, _GuardModeConstant.GuardModeSpec.alert], function (res) {
        resolve(res);
      }, function (err) {
        reject(err.message);
      });
    });
  });
  var setTargetMode = (0, _reduxActions.createAction)(_ActionTypes.ARMING_MODE, function (res) {
    return res;
  });
  var setGuardMode = (0, _reduxActions.createAction)(_ActionTypes.ARMING_MODE, function (value) {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.SetPropertiesValue([(0, _extends2.default)({}, _GuardModeConstant.GuardModeSpec.armingMode, {
        value: value
      })], function (res) {
        if (res && res[0]) {
          resolve([(0, _extends2.default)({}, res[0], {
            value: value
          })]);
        } else {
          resolve(res);
        }
      }, function (err) {
        reject(err.message);
      });
    });
  });
  var GuardModeReport = (0, _reduxActions.createAction)(_ActionTypes.ARMING_MODE_REPORT, function (res) {
    return res;
  });
  var countDown = (0, _reduxActions.createAction)(_ActionTypes.COUNT_DOWN, function (params) {
    return params;
  });
  var updateDelayTime = (0, _reduxActions.createAction)(_ActionTypes.DELAY_TIME, function (type, value) {
    return {
      type: type,
      value: value
    };
  });
  var getArmingInfoFromCache = (0, _reduxActions.createAction)(_ActionTypes.ARMING_INFO_FROM_CACHE, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetHostStorage(_PluginConfig.default.ArmingInfoCacheKey).then(function (res) {
        var result = {
          hasCache: false,
          data: []
        };

        if (res) {
          result = {
            hasCache: true,
            data: JSON.parse(res)
          };
        }

        resolve(result);
      }).catch(function (err) {
        reject(err.message);
      });
    });
  });
  var GuardModeActions = {
    getArmingInfo: getArmingInfo,
    getArmingInfoFromCache: getArmingInfoFromCache,
    setGuardMode: setGuardMode,
    setTargetMode: setTargetMode,
    GuardModeReport: GuardModeReport,
    countDown: countDown,
    updateDelayTime: updateDelayTime
  };
  var _default = GuardModeActions;
  exports.default = _default;
},11678,[14305,14344,11135,10004,11240,11246,11243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reduxActions = _$$_REQUIRE(_dependencyMap[1]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[2]);

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _ActionTypes = _$$_REQUIRE(_dependencyMap[5]);

  function dealSceneListCache(res) {
    var result = [];

    for (var i = 0, len = res.length; i < len; i += 1) {
      result.push({
        identify: res[i].identify,
        createTime: res[i].createTime,
        name: res[i].name,
        setting: res[i].setting,
        deviceID: res[i].deviceID
      });
    }

    _LHCommonFunction.LHMiServer.SetHostStorage(_PluginConfig.default.SceneListCacheKey, JSON.stringify(result));
  }

  function LHSubDeviceModel(device) {
    var pid = device.type,
        did = device.deviceID,
        model = device.model,
        iconURL = device.iconURL,
        title = device.name,
        isOnline = device.isOnline;
    return {
      pid: pid,
      did: did,
      model: model,
      iconURL: iconURL,
      title: title,
      subTitle: isOnline ? '' : _LHCommonFunction.LHCommonLocalizableString.sub_device_list_device_offline,
      selected: false
    };
  }

  function dealSubDeviceListCache(devices) {
    var newDevices = [];

    for (var i = 0, len = devices.length; i < len; i += 1) {
      newDevices.push(LHSubDeviceModel(devices[i]));
    }

    _LHCommonFunction.LHMiServer.SetHostStorage(_PluginConfig.default.SubDeviceListCacheKey, newDevices);
  }

  var loadScenes = (0, _reduxActions.createAction)(_ActionTypes.SCENES_LIST, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.LoadSceneList(_miot.Device.deviceID, 53, {}, function (res) {
        dealSceneListCache(res);
        resolve(res);
      }, function (err) {
        reject(err.message);
      });
    });
  });
  var loadScenesFromCache = (0, _reduxActions.createAction)(_ActionTypes.SCENES_LIST_FROM_CACHE, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetHostStorage(_PluginConfig.default.SceneListCacheKey).then(function (res) {
        var result = {
          hasCache: false,
          data: []
        };

        if (res) {
          result = {
            hasCache: true,
            data: JSON.parse(res)
          };
        }

        resolve(result);
      }).catch(function (err) {
        reject(err.message);
      });
    });
  });
  var loadSubDevice = (0, _reduxActions.createAction)(_ActionTypes.SUB_DEVICE_LIST, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetSubDevices(function (res) {
        dealSubDeviceListCache(res);
        resolve(res);
      }, function (err) {
        reject(err.message);
      });
    });
  });
  var loadSubDeviceFromCache = (0, _reduxActions.createAction)(_ActionTypes.SUB_DEVICE_LIST_FROM_CACHE, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetHostStorage(_PluginConfig.default.SubDeviceListCacheKey).then(function (res) {
        var result = {
          hasCache: false,
          data: []
        };

        if (res) {
          result = {
            hasCache: true,
            data: res
          };
        }

        resolve(result);
      }).catch(function (err) {
        reject(err.message);
      });
    });
  });
  var loadBtDevice = (0, _reduxActions.createAction)(_ActionTypes.BT_DEVICE_LIST, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.getLinkedBTDevices(_miot.Device.deviceID).then(function (res) {
        var btDevices = _LHCommonFunction.LHIFTTTManager.getBleSupportDevices(res);

        _LHCommonFunction.LHMiServer.SetHostStorage(_PluginConfig.default.BtDeviceListCacheKey, btDevices);

        resolve(btDevices);
      }).catch(function (err) {
        reject(err.message);
      });
    });
  });
  var loadBtDeviceFromCache = (0, _reduxActions.createAction)(_ActionTypes.BT_DEVICE_LIST_FROM_CACHE, function () {
    return new Promise(function (resolve, reject) {
      _LHCommonFunction.LHMiServer.GetHostStorage(_PluginConfig.default.BtDeviceListCacheKey).then(function (res) {
        var result = {
          hasCache: false,
          data: []
        };

        if (res) {
          result = {
            hasCache: true,
            data: res
          };
        }

        resolve(result);
      }).catch(function (err) {
        reject(err.message);
      });
    });
  });
  var ScenesActions = {
    loadScenes: loadScenes,
    loadScenesFromCache: loadScenesFromCache,
    loadSubDevice: loadSubDevice,
    loadSubDeviceFromCache: loadSubDeviceFromCache,
    loadBtDevice: loadBtDevice,
    loadBtDeviceFromCache: loadBtDeviceFromCache
  };
  var _default = ScenesActions;
  exports.default = _default;
},11681,[14305,11135,10004,10074,11240,11243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[1]);

  var LHCommonStyles = _reactNative.StyleSheet.create({
    navigatorWithBorderBotoom: {
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaWhite,
      borderBottomWidth: _LHCommonFunction.LHUiUtils.MiJiaBorderWidth,
      borderBottomColor: _LHCommonFunction.LHUiUtils.MiJiaLineColor
    },
    navigatorWithoutBorderBotoom: {
      backgroundColor: _LHCommonFunction.LHUiUtils.MiJiaBackgroundGray
    },
    pageGrayStyle: {
      flex: 1,
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorBackground
    },
    pageWhiteStyle: {
      flex: 1,
      backgroundColor: _LHCommonFunction.LHUiColorUtils.colorWhite
    },
    bottomBtn: {
      width: _LHCommonFunction.LHUiUtils.GetPx(66),
      height: _LHCommonFunction.LHUiUtils.GetPx(66),
      position: 'absolute',
      bottom: _LHCommonFunction.LHUiUtils.GetPx(12) + _LHCommonFunction.LHDeviceUtils.AppHomeIndicatorHeight,
      right: _LHCommonFunction.LHUiUtils.GetPx(12)
    }
  });

  exports.default = LHCommonStyles;
},11684,[10033,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[3]);

  var LogUtils = function () {
    function LogUtils() {
      (0, _classCallCheck2.default)(this, LogUtils);
    }

    (0, _createClass2.default)(LogUtils, null, [{
      key: "getResult",
      value: function getResult(data) {
        var successCount = 0;
        var errorIndex = -1;

        for (var i = 0, len = data.length; i < len; i += 1) {
          if (data[i].error === 0) {
            successCount += 1;
          } else {
            errorIndex = i;
          }
        }

        if (successCount === data.length) {
          return {
            error: 0
          };
        } else if (successCount !== data.length && successCount !== 0) {
          return {
            error: 'part',
            errorIndex: errorIndex
          };
        } else {
          return {
            error: data[errorIndex].error,
            errorIndex: errorIndex
          };
        }
      }
    }, {
      key: "GetLogContent",
      value: function GetLogContent(logData) {
        var _LogUtils$getResult = LogUtils.getResult(logData.msg),
            error = _LogUtils$getResult.error;

        return {
          content: logData.name,
          type: LogUtils.isArmingHistory(logData) ? error === 0 ? 'error' : 'normal' : error === 0 ? 'normal' : 'error',
          subContext: error === 0 ? null : LogUtils.getErrorText(error),
          subContextStyle: {
            color: _LHCommonFunction.LHUiColorUtils.colorRedNormal
          }
        };
      }
    }, {
      key: "getErrorText",
      value: function getErrorText(errorCode) {
        var executeFailText = _LHCommonFunction.LHCommonLocalizableString.common_ifttt_scene_execute_result_fail + ': ';

        switch (errorCode) {
          case -2:
            {
              return executeFailText + _LHCommonFunction.LHCommonLocalizableString.sub_device_list_device_offline;
            }

          case -3:
            {
              return executeFailText + _LHCommonFunction.LHCommonLocalizableString.common_ifttt_scene_execute_result_time_out;
            }

          case -33066:
            {
              return executeFailText + _LHCommonFunction.LHCommonLocalizableString.common_ifttt_scene_execute_result_camera_sleep;
            }

          case 'part':
            {
              return _LHCommonFunction.LHCommonLocalizableString.common_scene_execute_partiallysucceed;
            }

          default:
            {
              return _LHCommonFunction.LHCommonLocalizableString.common_ifttt_scene_execute_result_unknow_error;
            }
        }
      }
    }, {
      key: "isArmingHistory",
      value: function isArmingHistory(logData) {
        for (var i = 0; i < 4; i += 1) {
          if (_LHCommonFunction.LHGuardTypeMode.getGuardModelWithGuardType(i).identify === logData.identify) {
            return true;
          }
        }

        return false;
      }
    }]);
    return LogUtils;
  }();

  exports.default = LogUtils;
},11687,[14305,14320,14323,10004]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[10]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Resources = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var indicatorLightKey = 'indicatorLight';
  var preventDeletionKey = 'preventDeletion';

  var isShared = _LHCommonFunction.LHDeviceAuthorityUtils.isShared();

  var isOnline = _miot.Device.isOnline;

  var LHSettingPage = function (_React$Component) {
    (0, _inherits2.default)(LHSettingPage, _React$Component);
    (0, _createClass2.default)(LHSettingPage, null, [{
      key: "isSupportLabFeatures",
      value: function isSupportLabFeatures() {
        return _LHCommonFunction.LHStringUtils.deviceVersionCompare('1.4.6_0005', _miot.Device.lastVersion);
      }
    }]);

    function LHSettingPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHSettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHSettingPage).call(this, props, context));

      _this.initState();

      _LHCommonFunction.LHFirmwareUpgradeAutoUtils.checkFirmwareUpgradeAutoShouldShow(function () {});

      return _this;
    }

    (0, _createClass2.default)(LHSettingPage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        _LHCommonFunction.LHSpecHost.loadAllDataFromCache(this.specObjs);

        if (!isOnline || isShared) return;

        _LHCommonFunction.LHSpecHost.getPropertiesValue(this.specObjs);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (_reactNative.Platform.OS !== 'android') {
          var majorVersionIOS = parseInt(_reactNative.Platform.Version, 10);

          if (majorVersionIOS >= 10) {
            _miot.Device.checkIsHomeKitDevice().then(function (res1) {
              if (res1) {
                _this2.setState({
                  isHomeKitDevice: true
                });

                _miot.Device.checkHomeKitConnected().then(function (res2) {
                  _this2.setState({
                    pairedHomeKit: !!res2
                  });
                });
              }
            });
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "initState",
      value: function initState() {
        var _this3 = this;

        this.specObjs = {};
        var stateObj = {
          isHomeKitDevice: false,
          pairedHomeKit: false
        };
        this.specObjs[indicatorLightKey] = new _LHCommonFunction.LHSpecStatus(6, 6, function (value) {
          var status = {};
          status[indicatorLightKey] = !!value;

          _this3.setState(status);
        }, _LHCommonFunction.CommonMethod.CreatCacheKey(indicatorLightKey));
        stateObj[indicatorLightKey] = true;

        if (LHSettingPage.isSupportLabFeatures()) {
          this.specObjs[preventDeletionKey] = new _LHCommonFunction.LHSpecStatus(7, 1, function (value) {
            var status = {};
            status[preventDeletionKey] = !!value;

            _this3.setState(status);
          }, _LHCommonFunction.CommonMethod.CreatCacheKey(preventDeletionKey));
          stateObj[preventDeletionKey] = false;
        }

        this.state = stateObj;
      }
    }, {
      key: "getSettingItems",
      value: function getSettingItems() {
        var _this4 = this;

        var stateObj = this.state;
        var navigation = this.props.navigation;
        var items = [];
        items.push({
          component: 'ListItem',
          props: {
            title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting,
            showSeparator: false,
            useNewType: true,
            onPress: function onPress() {
              navigation.navigate('LHGuardSettingPage');
            }
          }
        });
        items.push({
          component: 'ListItemWithSwitch',
          props: {
            title: _LHLocalizableString.default.mi_comboHub_setting_indicatorLight,
            value: stateObj[indicatorLightKey],
            onTintColor: _PluginConfig.default.ThemeColor,
            showSeparator: false,
            useNewType: true,
            onValueChange: function onValueChange() {
              var stateCp = _this4.state;
              var indicatorLight = stateCp[indicatorLightKey];

              _this4.setState({
                indicatorLight: !indicatorLight
              });

              var oldValue = indicatorLight ? 1 : 0;
              var newValue = indicatorLight ? 0 : 1;

              _LHCommonFunction.LHSpecHost.setPropertiesValue(newValue, oldValue, _this4.specObjs[indicatorLightKey]);
            }
          }
        });

        if (LHSettingPage.isSupportLabFeatures()) {
          items.push({
            component: 'ListItemWithSwitch',
            props: {
              title: _LHCommonFunction.LHCommonLocalizableString.common_setting_protect_delete,
              value: stateObj[preventDeletionKey],
              onTintColor: _PluginConfig.default.ThemeColor,
              showSeparator: false,
              useNewType: true,
              onValueChange: function onValueChange() {
                var stateCp = _this4.state;
                var preventDeletion = stateCp[preventDeletionKey];

                _this4.setState({
                  preventDeletion: !preventDeletion
                });

                var oldValue = preventDeletion ? 1 : 0;
                var newValue = preventDeletion ? 0 : 1;

                _LHCommonFunction.LHSpecHost.setPropertiesValue(newValue, oldValue, _this4.specObjs[preventDeletionKey]);
              }
            }
          });
        }

        if (_Host.default.isIOS) {
          items.push({
            component: 'ListItem',
            props: {
              title: _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_add,
              value: stateObj.pairedHomeKit ? _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_bound : _LHCommonFunction.LHCommonLocalizableString.common_setting_homekit_device_noBind,
              showSeparator: false,
              useNewType: true,
              onPress: function onPress() {
                var newPairedHomeKit = _this4.state.pairedHomeKit;
                if (newPairedHomeKit) return;

                _miot.Device.bindToHomeKit().then(function () {
                  _miot.Device.checkHomeKitConnected().then(function (res2) {
                    _this4.setState({
                      pairedHomeKit: !!res2
                    });
                  });
                });
              }
            }
          });
        }

        return items;
      }
    }, {
      key: "render",
      value: function render() {
        var settingItems = this.getSettingItems();
        var navigation = this.props.navigation;
        return _react.default.createElement(_reactNative.View, {
          style: _LHCommonStyle.default.pageWhiteStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('settingPage'),
          testID: "settingPage"
        }, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
          isDark: _LHCommonFunction.LHUiColorUtils.isDark,
          title: _LHCommonFunction.LHCommonLocalizableString.common_setting_title,
          onPressLeft: function onPressLeft() {
            navigation.goBack();
          },
          onLongPressTitle: function onLongPressTitle() {
            navigation.navigate('LHLabSettingPage');
          }
        }), _react.default.createElement(_LHCommonUI.LHCommonSettingPage, {
          bleMeshPageSwitchColor: _PluginConfig.default.ThemeColor,
          offFirmwareUpgrateDialog: true,
          showBtGateway: true,
          needFirmwareUpgrateDot: true,
          navigation: navigation,
          PolicyLicenseUrl: _Resources.default.PolicyLicense,
          customOptions: settingItems,
          showMorePagePlugInItem: true,
          pluginVersion: _miot.Package.version && _miot.Package.version > 96 ? String(_miot.Package.version) : _PluginConfig.default.PluginVersion
        }));
      }
    }]);
    return LHSettingPage;
  }(_react.default.Component);

  LHSettingPage.navigationOptions = function () {
    return {
      header: null
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHSettingPage);

  exports.default = _default;
},11690,[14305,14320,14371,14377,14323,14386,10297,10033,10074,10004,10265,11240,11306,10035,11684,11249]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[10]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LHLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var throughWallModeSwitchCacheKey = _LHCommonFunction.CommonMethod.CreatCacheKey('throughWallModeSwitch');

  var isOnline = _miot.Device.isOnline;

  var LHLabSettingPage = function (_React$Component) {
    (0, _inherits2.default)(LHLabSettingPage, _React$Component);

    function LHLabSettingPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHLabSettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHLabSettingPage).call(this, props, context));
      _this.hasLoadServerData = false;
      _this.state = {
        throughWallModeSwitch: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHLabSettingPage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.loadWallPenetrationModeFromCache();

        if (isOnline) {
          this.getThroughWallModeSwitchValue();
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "getThroughWallModeSwitchValue",
      value: function getThroughWallModeSwitchValue() {
        var _this2 = this;

        _LHCommonFunction.LHMiServer.SendRPCRequest('get_transmit_power', {}, {}, function (res) {
          if (res && res.result && (res.code + '' === '0' || res.message === 'ok')) {
            var _ref = res.result.length && res.result[0],
                state = _ref.state;

            _this2.setState({
              throughWallModeSwitch: !!state
            });

            _LHCommonFunction.LHMiServer.SetHostStorage(throughWallModeSwitchCacheKey, state);
          }
        }, function (err) {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
        });
      }
    }, {
      key: "setThroughWallModeSwitchStatus",
      value: function setThroughWallModeSwitchStatus(newStatus, oldStatus) {
        var _this3 = this;

        _LHCommonFunction.LHMiServer.SendRPCRequest('set_transmit_power', {
          state: newStatus ? 1 : 0,
          power: newStatus ? 14 : 8
        }, {}, function (res) {
          if (res && (res.code + '' === '0' || res.message === 'ok')) {
            _this3.hasLoadServerData = true;

            _LHCommonFunction.LHMiServer.SetHostStorage(throughWallModeSwitchCacheKey, newStatus);
          }
        }, function (err) {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);

          _this3.setState({
            throughWallModeSwitch: oldStatus
          });
        });
      }
    }, {
      key: "loadWallPenetrationModeFromCache",
      value: function loadWallPenetrationModeFromCache() {
        var _this4 = this;

        _LHCommonFunction.LHMiServer.GetHostStorage(throughWallModeSwitchCacheKey).then(function (value) {
          if (_this4.hasLoadServerData) {
            return;
          }

          if (value !== null) {
            _this4.setState({
              throughWallModeSwitch: !!value
            });
          }
        });
      }
    }, {
      key: "getPageData",
      value: function getPageData() {
        var _this5 = this;

        var throughWallModeSwitch = this.state.throughWallModeSwitch;
        return [{
          title: '',
          data: [{
            title: _LHLocalizableString.default.mi_comboHub_debugPage_zigbeeDebugMode,
            testID: 'throughWallModeSwitchItem',
            hasSwitch: true,
            switchValue: throughWallModeSwitch,
            switchColor: _PluginConfig.default.ThemeColor,
            useControlledSwitch: true,
            onSwitchChange: function onSwitchChange() {
              var throughWallModeTemp = _this5.state.throughWallModeSwitch;

              _this5.setState({
                throughWallModeSwitch: !throughWallModeTemp
              });

              _this5.setThroughWallModeSwitchStatus(!throughWallModeTemp, throughWallModeTemp);
            },
            hideRightArrow: true,
            noTouchableHighlight: true
          }]
        }];
      }
    }, {
      key: "render",
      value: function render() {
        var pageData = this.getPageData();
        return _react.default.createElement(_reactNative.View, {
          style: _LHCommonStyle.default.pageWhiteStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHLabSettingPage'),
          testID: "LHLabSettingPage"
        }, _react.default.createElement(_LHCommonUI.LHStandardList, {
          data: pageData
        }));
      }
    }]);
    return LHLabSettingPage;
  }(_react.default.Component);

  LHLabSettingPage.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
        isDark: _LHCommonFunction.LHUiColorUtils.isDark,
        title: _LHLocalizableString.default.mi_comboHub_debugPage_debugMode,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHLabSettingPage);

  exports.default = _default;
},11693,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10004,10265,11240,11684,11249]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactRedux = _$$_REQUIRE(_dependencyMap[9]);

  var _redux = _$$_REQUIRE(_dependencyMap[10]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[11]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[12]);

  var _GuardMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Scenes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LogUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var LHLogPage = function (_React$Component) {
    (0, _inherits2.default)(LHLogPage, _React$Component);

    function LHLogPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHLogPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHLogPage).call(this, props, context));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHLogPage, [{
      key: "setGesturesEnabled",
      value: function setGesturesEnabled(gesturesEnabled) {
        var navigation = this.props.navigation;
        navigation.setParams({
          gesturesEnabled: gesturesEnabled
        });
      }
    }, {
      key: "getLogContent",
      value: function getLogContent(data) {
        if (!data) {
          return null;
        } else {
          var ScenesReducers = this.props.ScenesReducers;
          var scenesList = ScenesReducers.scenesList;

          var logData = _LogUtils.default.GetLogContent(data, scenesList);

          return {
            context: logData.content,
            logType: logData.type,
            subContext: logData.subContext,
            subContextStyle: logData.subContextStyle
          };
        }
      }
    }, {
      key: "init",
      value: function init() {
        var _this$props = this.props,
            GuardModeReducers = _this$props.GuardModeReducers,
            ScenesReducers = _this$props.ScenesReducers,
            getArmingInfo = _this$props.getArmingInfo,
            loadScenes = _this$props.loadScenes;

        if (ScenesReducers.dataType === 'default' || GuardModeReducers.dataType === 'default') {
          _LHCommonFunction.LHDialogUtils.LoadingDialogShow({
            title: _LHCommonFunction.LHCommonLocalizableString.common_log_loading
          });

          var request = [];
          if (ScenesReducers.dataType === 'default') request.push(loadScenes());
          if (GuardModeReducers.dataType === 'default') request.push(getArmingInfo());
          Promise.all(request).then(function (res) {
            _LHCommonFunction.LHDialogUtils.LoadingDialogHide();
          }).catch(function () {
            _LHCommonFunction.LHDialogUtils.LoadingDialogHide();

            _LHCommonFunction.LHToastUtils.showLongToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_loading_failed);
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: _LHCommonStyle.default.pageWhiteStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('logPage'),
          testID: "logPage"
        }, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
          isDark: _LHCommonFunction.LHUiColorUtils.isDark,
          title: _LHCommonFunction.LHCommonLocalizableString.common_log_title,
          onPressLeft: function onPressLeft() {
            var navigation = _this2.props.navigation;
            navigation.goBack();
          },
          rightButtons: [{
            type: 'calender',
            press: function press() {
              if (_this2.LogView) {
                _this2.LogView.showDatePicker(true);

                _this2.setGesturesEnabled(false);
              }
            }
          }]
        }), _react.default.createElement(_LHCommonUI.LHStandardLog, {
          ref: function ref(_ref) {
            _this2.LogView = _ref;
          },
          loadCache: true,
          titleNumberOfLines: 10,
          serverType: "ScenesHistory",
          dataMap: function dataMap(data) {
            return _this2.getLogContent(data);
          },
          onFailed: function onFailed(isEmpty) {
            if (!isEmpty) {
              _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
            }
          },
          datePickerOnDismiss: function datePickerOnDismiss() {
            _this2.setGesturesEnabled(true);
          }
        }));
      }
    }]);
    return LHLogPage;
  }(_react.default.Component);

  LHLogPage.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    var gesturesEnabled = navigation.getParam('gesturesEnabled');
    return {
      gesturesEnabled: typeof gesturesEnabled !== 'undefined' ? gesturesEnabled : true,
      header: null
    };
  };

  var _default = (0, _reactRedux.connect)(function (state) {
    return {
      GuardModeReducers: state.GuardModeReducers,
      ScenesReducers: state.ScenesReducers
    };
  }, function (dispatch) {
    return (0, _objectSpread2.default)({}, (0, _redux.bindActionCreators)(_GuardMode.default, dispatch), (0, _redux.bindActionCreators)(_Scenes.default, dispatch));
  })((0, _LHCommonFunction.LHPureRenderDecorator)(LHLogPage));

  exports.default = _default;
},11696,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10274,10304,10004,10265,11678,11681,11684,11687]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[8]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[9]);

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _GuardModeConstant = _$$_REQUIRE(_dependencyMap[11]);

  var LHGuardSettingPage = function (_React$Component) {
    (0, _inherits2.default)(LHGuardSettingPage, _React$Component);

    function LHGuardSettingPage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHGuardSettingPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHGuardSettingPage).call(this, props, context));

      _this.gotoLHGuardTypePage = function (params) {
        var navigation = _this.props.navigation;
        navigation.navigate('LHGuardTypePage', params);
      };

      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(LHGuardSettingPage, [{
      key: "getPageData",
      value: function getPageData() {
        var _this2 = this;

        return [{
          title: '',
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.guard_type_basic,
            testID: 'basicGuardItem',
            hideTopSeparatorLine: true,
            press: function press() {
              _this2.gotoLHGuardTypePage({
                pageTitle: _LHCommonFunction.LHCommonLocalizableString.guard_type_basic,
                pageType: _GuardModeConstant.GuardModeConstant.basic.pageType
              });
            }
          }, {
            title: _LHCommonFunction.LHCommonLocalizableString.guard_type_home,
            testID: 'homeGuardItem',
            press: function press() {
              _this2.gotoLHGuardTypePage({
                pageTitle: _LHCommonFunction.LHCommonLocalizableString.guard_type_home,
                pageType: _GuardModeConstant.GuardModeConstant.home.pageType
              });
            }
          }, {
            title: _LHCommonFunction.LHCommonLocalizableString.guard_type_away,
            testID: 'awayGuardItem',
            press: function press() {
              _this2.gotoLHGuardTypePage({
                pageTitle: _LHCommonFunction.LHCommonLocalizableString.guard_type_away,
                pageType: _GuardModeConstant.GuardModeConstant.away.pageType
              });
            }
          }, {
            title: _LHCommonFunction.LHCommonLocalizableString.guard_type_sleep,
            testID: 'sleepGuardItem',
            press: function press() {
              _this2.gotoLHGuardTypePage({
                pageTitle: _LHCommonFunction.LHCommonLocalizableString.guard_type_sleep,
                pageType: _GuardModeConstant.GuardModeConstant.sleep.pageType
              });
            }
          }]
        }];
      }
    }, {
      key: "render",
      value: function render() {
        var pageData = this.getPageData();
        return _react.default.createElement(_reactNative.View, {
          style: _LHCommonStyle.default.pageWhiteStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHGuardSettingPage'),
          testID: "LHGuardSettingPage"
        }, _react.default.createElement(_LHCommonUI.LHStandardList, {
          data: pageData
        }));
      }
    }]);
    return LHGuardSettingPage;
  }(_react.default.Component);

  LHGuardSettingPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
        isDark: _LHCommonFunction.LHUiColorUtils.isDark,
        title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var _default = (0, _LHCommonFunction.LHPureRenderDecorator)(LHGuardSettingPage);

  exports.default = _default;
},11699,[14305,14320,14323,14371,14377,14386,10297,10033,10004,10265,11684,11246]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactRedux = _$$_REQUIRE(_dependencyMap[11]);

  var _redux = _$$_REQUIRE(_dependencyMap[12]);

  var _LHCommonFunction = _$$_REQUIRE(_dependencyMap[13]);

  var _LHCommonUI = _$$_REQUIRE(_dependencyMap[14]);

  var _PluginConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _miot = _$$_REQUIRE(_dependencyMap[16]);

  var _Resources = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[18]);

  var _GuardMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Scenes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _LHCommonStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _GuardModeConstant = _$$_REQUIRE(_dependencyMap[22]);

  var LHGuardTypePage = function (_React$Component) {
    (0, _inherits2.default)(LHGuardTypePage, _React$Component);
    (0, _createClass2.default)(LHGuardTypePage, null, [{
      key: "getStringModalPickerData",
      value: function getStringModalPickerData() {
        var result = [];

        for (var i = 1; i <= 59; i += 1) {
          result.push('' + i);
        }

        return result;
      }
    }, {
      key: "getVolumeLevel",
      value: function getVolumeLevel() {
        return [_LHCommonFunction.LHCommonLocalizableString.common_voice_high, _LHCommonFunction.LHCommonLocalizableString.common_voice_middle, _LHCommonFunction.LHCommonLocalizableString.common_voice_low, _LHCommonFunction.LHCommonLocalizableString.common_voice_mute];
      }
    }, {
      key: "getDelayTimePickerData",
      value: function getDelayTimePickerData() {
        return [0, 5, 15, 30, 60];
      }
    }, {
      key: "getDelayTimePickerText",
      value: function getDelayTimePickerText() {
        return [_LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_delayTime_immediately, _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', 5), _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', 15), _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', 30), _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', 60)];
      }
    }]);

    function LHGuardTypePage(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LHGuardTypePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LHGuardTypePage).call(this, props, context));

      _this.getTypeValue = function () {
        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            pageType = _assertThisInitialize.pageType;

        var alarmDurationSiid = _GuardModeConstant.GuardModeConstant[pageType].alarmDuration.siid;
        var alarmDurationPiid = _GuardModeConstant.GuardModeConstant[pageType].alarmDuration.piid;
        var alarmVolumeSiid = _GuardModeConstant.GuardModeConstant[pageType].alarmVolume.siid;
        var alarmVolumePiid = _GuardModeConstant.GuardModeConstant[pageType].alarmVolume.piid;
        var delayTimeParam = _GuardModeConstant.GuardModeConstant[pageType].delayTime;
        var params = [{
          did: _miot.Device.deviceID,
          siid: alarmDurationSiid,
          piid: alarmDurationPiid
        }, {
          did: _miot.Device.deviceID,
          siid: alarmVolumeSiid,
          piid: alarmVolumePiid
        }];
        if (pageType !== 'basic') params.push(delayTimeParam);

        _LHCommonFunction.LHMiServer.GetPropertiesValue(params, function (res) {
          if (res && res.length > 0) {
            var alarmDurationItem = _LHCommonFunction.CommonMethod.FindSpec(res, alarmDurationSiid, alarmDurationPiid);

            if (alarmDurationItem && alarmDurationItem.code === 0) {
              _this.hasLoadAlarmDuration = true;

              _this.setState({
                alarmDuration: alarmDurationItem.value
              });

              _this.setCache();
            }

            var alarmVolumeItem = _LHCommonFunction.CommonMethod.FindSpec(res, alarmVolumeSiid, alarmVolumePiid);

            if (alarmVolumeItem && alarmVolumeItem.code === 0) {
              _this.hasLoadAlarmVolume = true;

              _this.setState({
                beepVolume: alarmVolumeItem.value
              });

              _this.setCache();
            }

            var delayTimeItem = _LHCommonFunction.CommonMethod.FindSpec(res, delayTimeParam.siid, delayTimeParam.piid);

            if (delayTimeItem && delayTimeItem.code === 0) {
              var updateDelayTime = _this.props.updateDelayTime;
              updateDelayTime(_this.pageType, delayTimeItem.value);
            }
          } else {
            _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
          }
        }, function () {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_tips_request_failed);
        });
      };

      _this.setTypeValue = function (params, newValue, oldValue, type) {
        var siid = params.siid,
            piid = params.piid;

        _LHCommonFunction.LHMiServer.SetPropertiesValue([{
          did: _miot.Device.deviceID,
          siid: siid,
          piid: piid,
          value: newValue
        }], function (res) {
          if (res && res.length > 0 && +res[0].code === 0) {
            if (type === _GuardModeConstant.GuardModeConstant.type.delay) {
              var updateDelayTime = _this.props.updateDelayTime;
              updateDelayTime(_this.pageType, newValue);
            }

            _this.setCache();
          } else {
            _this.setTypeValueFail(type, oldValue);
          }
        }, function () {
          _this.setTypeValueFail(type, oldValue);
        });
      };

      _this.setTypeValueFail = function (type, oldValue) {
        _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);

        if (type === _GuardModeConstant.GuardModeConstant.type.duration) {
          _this.setState({
            alarmDuration: oldValue
          });
        } else if (type === _GuardModeConstant.GuardModeConstant.type.volume) {
          _this.setState({
            beepVolume: oldValue
          });
        } else if (type === _GuardModeConstant.GuardModeConstant.type.delay) {
          var updateDelayTime = _this.props.updateDelayTime;
          updateDelayTime(_this.pageType, oldValue);
        }
      };

      _this.onDelayTimeSelected = function (newValue, oldValue) {
        _this.setTypeValue(_GuardModeConstant.GuardModeConstant[_this.pageType].delayTime, newValue, oldValue, _GuardModeConstant.GuardModeConstant.type.delay);
      };

      _this.onBeepVolumeSelected = function (newValue, oldValue) {
        _this.setTypeValue(_GuardModeConstant.GuardModeConstant[_this.pageType].alarmVolume, newValue, oldValue, _GuardModeConstant.GuardModeConstant.type.volume);
      };

      _this.itemPress = function (newIndex, oldIndex) {
        _this.setState({
          alarmDuration: newIndex
        });

        _this.setAlarmDuration(_GuardModeConstant.GuardModeConstant[_this.pageType].alarmDuration, newIndex, oldIndex);
      };

      _this.setAlarmDuration = function (o, newIndex, oldIndex) {
        var siid = o.siid,
            piid = o.piid;

        _LHCommonFunction.LHMiServer.SetPropertiesValue([{
          did: _miot.Device.deviceID,
          siid: siid,
          piid: piid,
          value: newIndex
        }], function (res) {
          if (res && res.length > 0 && +res[0].code === 0) {
            _this.setCache();
          } else {
            _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);

            _this.setState({
              alarmDuration: oldIndex
            });
          }
        }, function () {
          _LHCommonFunction.LHToastUtils.showShortToast(_LHCommonFunction.LHCommonLocalizableString.common_operation_fail);

          _this.setState({
            alarmDuration: oldIndex
          });
        });
      };

      var navigation = _this.props.navigation;
      _this.pageType = navigation.getParam('pageType');
      _this.hasLoadAlarmDuration = false;
      _this.hasLoadAlarmVolume = false;
      _this.state = {
        showChoiceDialogPicker: 0,
        alarmDuration: 100000000,
        beepVolume: 3,
        showPicker: false
      };
      return _this;
    }

    (0, _createClass2.default)(LHGuardTypePage, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.getCache();
        this.getTypeValue();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "getCache",
      value: function getCache() {
        var _this2 = this;

        _LHCommonFunction.LHMiServer.GetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey('alarmDuration&Volume' + this.pageType)).then(function (res) {
          if (res) {
            if (_this2.hasLoadAlarmVolume && _this2.hasLoadAlarmDuration) return;
            var data = {
              alarmDuration: res.alarmDuration,
              beepVolume: res.beepVolume
            };
            if (_this2.hasLoadAlarmVolume) delete data.beepVolume;
            if (_this2.hasLoadAlarmDuration) delete data.alarmDuration;

            _this2.setState(data);
          }
        });
      }
    }, {
      key: "setCache",
      value: function setCache() {
        var _this$state = this.state,
            alarmDuration = _this$state.alarmDuration,
            beepVolume = _this$state.beepVolume;

        _LHCommonFunction.LHMiServer.SetHostStorage(_LHCommonFunction.CommonMethod.CreatCacheKey('alarmDuration&Volume' + this.pageType), {
          alarmDuration: alarmDuration,
          beepVolume: beepVolume
        });
      }
    }, {
      key: "getPageData",
      value: function getPageData(countTime) {
        var _this3 = this;

        var _this$state2 = this.state,
            alarmDuration = _this$state2.alarmDuration,
            beepVolume = _this$state2.beepVolume;

        var alarmDurationStr = _LHCommonUI.AlertTimeItem.getAlarmDurationStr(alarmDuration);

        var items = [{
          title: '',
          data: [{
            title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmVolume,
            testID: 'alarmVolumeItem',
            rightDescription: LHGuardTypePage.getVolumeLevel()[3 - beepVolume],
            hideTopSeparatorLine: true,
            press: function press() {
              _this3.setState({
                showChoiceDialogPicker: 1
              });
            }
          }, {
            title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration,
            rightDescription: alarmDurationStr,
            testID: 'alarmDurationItem',
            press: function press() {
              _this3.setState({
                showChoiceDialogPicker: 3
              });
            }
          }, this.pageType === _GuardModeConstant.GuardModeConstant.basic.pageType ? null : {
            title: _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_delayTime,
            testID: 'delayTimeItem',
            rightDescription: countTime === 0 ? _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_delayTime_immediately : _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration_seconds.replace('{value}', countTime),
            press: function press() {
              _this3.setState({
                showChoiceDialogPicker: 2
              });
            }
          }]
        }];

        for (var i = 0; i < items[0].data.length; i += 1) {
          if (!items[0].data[i]) {
            items[0].data.splice(i, 1);
            i -= 1;
          }
        }

        return items;
      }
    }, {
      key: "getAlarmDurationData",
      value: function getAlarmDurationData() {
        var alwaysRinging = _LHCommonUI.AlertTimeItem.alwaysRinging,
            tenMinutes = _LHCommonUI.AlertTimeItem.tenMinutes,
            oneMinute = _LHCommonUI.AlertTimeItem.oneMinute,
            thirtySeconds = _LHCommonUI.AlertTimeItem.thirtySeconds,
            custom = _LHCommonUI.AlertTimeItem.custom,
            isCustom = _LHCommonUI.AlertTimeItem.isCustom,
            getAlarmDurationStr = _LHCommonUI.AlertTimeItem.getAlarmDurationStr;
        var alarmDuration = this.state.alarmDuration;
        var isActiveIndexCustom = isCustom(alarmDuration);
        var alarmDurationStr = getAlarmDurationStr(alarmDuration);
        return [{
          title: alwaysRinging.str
        }, {
          title: tenMinutes.str
        }, {
          title: oneMinute.str
        }, {
          title: thirtySeconds.str
        }, {
          title: custom.str,
          subtitle: isActiveIndexCustom ? alarmDurationStr : ''
        }];
      }
    }, {
      key: "getAlarmDurationSelectedIndex",
      value: function getAlarmDurationSelectedIndex() {
        var alwaysRinging = _LHCommonUI.AlertTimeItem.alwaysRinging,
            isCustom = _LHCommonUI.AlertTimeItem.isCustom;
        var alarmDuration = this.state.alarmDuration;
        var isActiveIndexCustom = isCustom(alarmDuration);

        if (isActiveIndexCustom) {
          return 4;
        } else if (alarmDuration >= alwaysRinging.value) {
          return 0;
        } else {
          var values = this.getAlarmDurationValues();
          return values.indexOf(alarmDuration);
        }
      }
    }, {
      key: "getAlarmDurationValues",
      value: function getAlarmDurationValues() {
        var alwaysRinging = _LHCommonUI.AlertTimeItem.alwaysRinging,
            tenMinutes = _LHCommonUI.AlertTimeItem.tenMinutes,
            oneMinute = _LHCommonUI.AlertTimeItem.oneMinute,
            thirtySeconds = _LHCommonUI.AlertTimeItem.thirtySeconds;
        var values = [alwaysRinging.value, tenMinutes.value, oneMinute.value, thirtySeconds.value];
        return values;
      }
    }, {
      key: "getChoiceDialogOptions",
      value: function getChoiceDialogOptions(type) {
        if (type === 3) {
          return this.getAlarmDurationData();
        } else {
          var level = type === 1 ? LHGuardTypePage.getVolumeLevel() : LHGuardTypePage.getDelayTimePickerText();
          var result = [];

          for (var i = 0, len = level.length; i < len; i += 1) {
            result.push({
              title: level[i]
            });
          }

          return result;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$state3 = this.state,
            showChoiceDialogPicker = _this$state3.showChoiceDialogPicker,
            beepVolume = _this$state3.beepVolume,
            showPicker = _this$state3.showPicker,
            alarmDuration = _this$state3.alarmDuration;
        var GuardModeReducers = this.props.GuardModeReducers;
        var delayTime = GuardModeReducers.delayTime;
        var countTime = delayTime[this.pageType];
        var pageData = this.getPageData(countTime);
        var settingAlarmDurationTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmDuration;
        var alarmVolumeTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_alarmVolume;
        var delayTimeTitle = _LHCommonFunction.LHCommonLocalizableString.mi_comboHub_guardSetting_delayTime;
        return _react.default.createElement(_reactNative.View, {
          style: _LHCommonStyle.default.pageWhiteStyle,
          accessibilityLabel: _LHCommonFunction.LHAppiumUtils.GetAccessibilityLabel('LHGuardTypePage'),
          testID: "LHGuardTypePage"
        }, _react.default.createElement(_LHCommonUI.LHStandardList, {
          data: pageData
        }), _react.default.createElement(_Dialog.ChoiceDialog, {
          cancelable: false,
          title: showChoiceDialogPicker === 3 ? settingAlarmDurationTitle : showChoiceDialogPicker === 1 ? alarmVolumeTitle : delayTimeTitle,
          visible: showChoiceDialogPicker > 0,
          options: this.getChoiceDialogOptions(showChoiceDialogPicker),
          selectedIndexArray: [showChoiceDialogPicker === 3 ? this.getAlarmDurationSelectedIndex() : showChoiceDialogPicker === 1 ? 3 - beepVolume : LHGuardTypePage.getDelayTimePickerData().indexOf(countTime)],
          color: _PluginConfig.default.ThemeColor,
          icon: _LHCommonFunction.LHUiColorUtils.isDark ? _Resources.default.GuideMode.seletcedIconDark : _Resources.default.GuideMode.seletcedIcon,
          onSelect: function onSelect(data) {
            var _data = (0, _slicedToArray2.default)(data, 1),
                value = _data[0];

            var _this4$state = _this4.state,
                oldValue = _this4$state.beepVolume,
                showChoiceDialogPicker1 = _this4$state.showChoiceDialogPicker;

            if (showChoiceDialogPicker1 === 1) {
              _this4.onBeepVolumeSelected(3 - value, oldValue);

              _this4.setState({
                showChoiceDialogPicker: 0,
                beepVolume: 3 - value
              });
            } else if (showChoiceDialogPicker1 === 3) {
              if (value === 4) {
                _this4.setState({
                  showPicker: true
                });
              } else {
                var newAlarmDuration = _this4.getAlarmDurationValues()[value];

                _this4.itemPress(newAlarmDuration, alarmDuration);
              }
            } else {
              var newCountTime = LHGuardTypePage.getDelayTimePickerData()[value];
              var updateDelayTime = _this4.props.updateDelayTime;
              updateDelayTime(_this4.pageType, newCountTime);

              _this4.onDelayTimeSelected(newCountTime, delayTime[_this4.pageType]);
            }
          },
          onDismiss: function onDismiss() {
            _this4.setState({
              showChoiceDialogPicker: 0
            });
          }
        }), _react.default.createElement(_LHCommonUI.LHStringModalPicker, {
          title: _LHCommonFunction.LHCommonLocalizableString.common_date_selfdefine,
          show: showPicker,
          dataSource: LHGuardTypePage.getStringModalPickerData(),
          defaultValue: '' + alarmDuration,
          unit: _LHCommonFunction.LHCommonLocalizableString.common_date_second,
          okTextStyle: {
            color: _PluginConfig.default.ThemeColor
          },
          onSelected: function onSelected(data) {
            var alarmDuration1 = _this4.state.alarmDuration;

            _this4.itemPress(Number(data.newValue), alarmDuration1);
          },
          onClose: function onClose() {
            _this4.setState({
              showPicker: false
            });
          },
          innerStyle: {
            selectTextColor: _PluginConfig.default.ThemeColor,
            unitTextColor: _PluginConfig.default.ThemeColor
          }
        }));
      }
    }]);
    return LHGuardTypePage;
  }(_react.default.Component);

  LHGuardTypePage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    var title = navigation.getParam('pageTitle', '');
    return {
      header: _react.default.createElement(_reactNative.View, null, _react.default.createElement(_LHCommonUI.LHTitleBarCustom, {
        isDark: _LHCommonFunction.LHUiColorUtils.isDark,
        title: title,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      }))
    };
  };

  var _default = (0, _reactRedux.connect)(function (state) {
    return {
      GuardModeReducers: state.GuardModeReducers
    };
  }, function (dispatch) {
    return (0, _objectSpread2.default)({}, (0, _redux.bindActionCreators)(_GuardMode.default, dispatch), (0, _redux.bindActionCreators)(_Scenes.default, dispatch));
  })((0, _LHCommonFunction.LHPureRenderDecorator)(LHGuardTypePage));

  exports.default = _default;
},11702,[14305,14314,14347,14320,14371,14377,14374,14323,14386,10297,10033,10274,10304,10004,10265,11240,10074,11306,10755,11678,11681,11684,11246]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},13495,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2;

        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var checkedBigCircleStyle = {
          borderColorChecked: '#32BAC0',
          backgroundColorChecked: '#32BAC0',
          borderColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor,
          backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor
        };

        if (this.props.checkedBigCircleStyle) {
          checkedBigCircleStyle = this.props.checkedBigCircleStyle;
        }

        var _checkedBigCircleStyl = checkedBigCircleStyle,
            borderColorChecked = _checkedBigCircleStyl.borderColorChecked,
            backgroundColorChecked = _checkedBigCircleStyl.backgroundColorChecked,
            borderColor = _checkedBigCircleStyl.borderColor,
            backgroundColor = _checkedBigCircleStyl.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    (0, _extends3.default)(total, (0, _defineProperty2.default)({}, role, role));
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;
  var elementWithoutText = ['image', 'imagebutton'];

  function getAccessibilityConfig(accessibilityConfig) {
    var accessible = accessibilityConfig.accessible,
        accessibilityRole = accessibilityConfig.accessibilityRole,
        accessibilityLabel = accessibilityConfig.accessibilityLabel,
        accessibilityHint = accessibilityConfig.accessibilityHint,
        accessibilityState = accessibilityConfig.accessibilityState,
        accessibilityValue = accessibilityConfig.accessibilityValue;
    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if (elementWithoutText.includes(accessibility.accessibilityRole)) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,14317,14344,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome'
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native'
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.9)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.10)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)'),
    colorGearBackground: new _DynamicColor.default('#EDEEEF', 'rgba(255,255,255,0.20)'),
    iconViewPress: new _DynamicColor.default('#B0B6B8', '#52595B'),
    iconViewNor: new _DynamicColor.default('#F7F7F7', 'rgba(255,255,255,0.20)'),
    listUnderlayColor: new _DynamicColor.default('#ECECEC', 'rgba(255,255,255,0.20)'),
    barChartItem: new _DynamicColor.default('#FFE4BD', 'rgba(230,142,16,0.3)'),
    barChartItemSelected: new _DynamicColor.default('#FFA626', '#E68E10')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var _this3 = this;

        var value = !this.state.value;
        this.setState({
          value: value
        }, function () {
          _this3.animated();

          if (typeof _this3.props.onValueChange === 'function') {
            _this3.props.onValueChange(value);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3])
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[4]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[5]),
          press: _$$_REQUIRE(_dependencyMap[6]),
          disable: _$$_REQUIRE(_dependencyMap[7])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[8]),
          press: _$$_REQUIRE(_dependencyMap[9]),
          disable: _$$_REQUIRE(_dependencyMap[10])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[11]),
          press: _$$_REQUIRE(_dependencyMap[12]),
          disable: _$$_REQUIRE(_dependencyMap[13])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[14]),
          press: _$$_REQUIRE(_dependencyMap[15]),
          disable: _$$_REQUIRE(_dependencyMap[16])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[17]),
          press: _$$_REQUIRE(_dependencyMap[18]),
          disable: _$$_REQUIRE(_dependencyMap[19])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[20]),
          press: _$$_REQUIRE(_dependencyMap[21]),
          disable: _$$_REQUIRE(_dependencyMap[22])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[23]),
          press: _$$_REQUIRE(_dependencyMap[24]),
          disable: _$$_REQUIRE(_dependencyMap[25])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[26]),
          press: _$$_REQUIRE(_dependencyMap[27]),
          disable: _$$_REQUIRE(_dependencyMap[28])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[29]),
          press: _$$_REQUIRE(_dependencyMap[30]),
          disable: _$$_REQUIRE(_dependencyMap[31])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[32]),
          press: _$$_REQUIRE(_dependencyMap[33]),
          disable: _$$_REQUIRE(_dependencyMap[34])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[35]),
          press: _$$_REQUIRE(_dependencyMap[36]),
          disable: _$$_REQUIRE(_dependencyMap[37])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[38]),
          press: _$$_REQUIRE(_dependencyMap[39]),
          disable: _$$_REQUIRE(_dependencyMap[40])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[41]),
          press: _$$_REQUIRE(_dependencyMap[42]),
          disable: _$$_REQUIRE(_dependencyMap[43])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[44]),
          press: _$$_REQUIRE(_dependencyMap[45]),
          disable: _$$_REQUIRE(_dependencyMap[46])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[47]),
          press: _$$_REQUIRE(_dependencyMap[48]),
          disable: _$$_REQUIRE(_dependencyMap[49])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[50]),
          press: _$$_REQUIRE(_dependencyMap[51]),
          disable: _$$_REQUIRE(_dependencyMap[52])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[53]),
          press: _$$_REQUIRE(_dependencyMap[54]),
          disable: _$$_REQUIRE(_dependencyMap[55])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[56]),
          press: _$$_REQUIRE(_dependencyMap[57]),
          disable: _$$_REQUIRE(_dependencyMap[58])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[59]),
          press: _$$_REQUIRE(_dependencyMap[60]),
          disable: _$$_REQUIRE(_dependencyMap[61])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[62]),
          press: _$$_REQUIRE(_dependencyMap[63]),
          disable: _$$_REQUIRE(_dependencyMap[64])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[65]),
          press: _$$_REQUIRE(_dependencyMap[66]),
          disable: _$$_REQUIRE(_dependencyMap[67])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[68]),
          press: _$$_REQUIRE(_dependencyMap[69]),
          disable: _$$_REQUIRE(_dependencyMap[70])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[71]),
          press: _$$_REQUIRE(_dependencyMap[72]),
          disable: _$$_REQUIRE(_dependencyMap[73])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[74]),
          press: _$$_REQUIRE(_dependencyMap[75]),
          disable: _$$_REQUIRE(_dependencyMap[76])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[77]),
          press: _$$_REQUIRE(_dependencyMap[78]),
          disable: _$$_REQUIRE(_dependencyMap[79])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[80]),
          press: _$$_REQUIRE(_dependencyMap[81]),
          disable: _$$_REQUIRE(_dependencyMap[82])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[83]),
          press: _$$_REQUIRE(_dependencyMap[84]),
          disable: _$$_REQUIRE(_dependencyMap[85])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[86]),
          press: _$$_REQUIRE(_dependencyMap[87]),
          disable: _$$_REQUIRE(_dependencyMap[88])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[89]),
          press: _$$_REQUIRE(_dependencyMap[90]),
          disable: _$$_REQUIRE(_dependencyMap[91])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[92]),
          press: _$$_REQUIRE(_dependencyMap[93]),
          disable: _$$_REQUIRE(_dependencyMap[94])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[95]),
          press: _$$_REQUIRE(_dependencyMap[96]),
          disable: _$$_REQUIRE(_dependencyMap[97])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[98]),
          press: _$$_REQUIRE(_dependencyMap[99]),
          disable: _$$_REQUIRE(_dependencyMap[100])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[101]),
          press: _$$_REQUIRE(_dependencyMap[102]),
          disable: _$$_REQUIRE(_dependencyMap[103])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[104]),
          press: _$$_REQUIRE(_dependencyMap[105]),
          disable: _$$_REQUIRE(_dependencyMap[106])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[107]),
          press: _$$_REQUIRE(_dependencyMap[108]),
          disable: _$$_REQUIRE(_dependencyMap[109])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[110]),
          press: _$$_REQUIRE(_dependencyMap[111]),
          disable: _$$_REQUIRE(_dependencyMap[112])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[113]),
          press: _$$_REQUIRE(_dependencyMap[114]),
          disable: _$$_REQUIRE(_dependencyMap[115])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[116]),
          press: _$$_REQUIRE(_dependencyMap[117]),
          disable: _$$_REQUIRE(_dependencyMap[118])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[119]),
          press: _$$_REQUIRE(_dependencyMap[120]),
          disable: _$$_REQUIRE(_dependencyMap[121])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[122]),
          press: _$$_REQUIRE(_dependencyMap[123]),
          disable: _$$_REQUIRE(_dependencyMap[124])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[125])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[126])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[127]),
        press: _$$_REQUIRE(_dependencyMap[128])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[129]),
        press: _$$_REQUIRE(_dependencyMap[130])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,23260,23263,23266,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23269,23272,23275,23278,23281,23284,23206,23209,23287,23290,23293,23296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.05)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#F5F5F5', '#333333');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[12]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation',
    SAVE: 'save'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('#666666', '#ffffff');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NavigationBar');
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel,
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }, this.props.useOrientation ? {} : {
            width: width
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    useOrientation: _propTypes.default.bool,
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'MI-LANTING--GBK1-Light',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    useOrientation: false,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: {
      fontSize: 18,
      lineHeight: 24,
      fontFamily: 'D-DINCondensed-Bold',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    titleView: {
      fontSize: 16,
      fontFamily: 'D-DINCondensed-Bold',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 14,
      lineHeight: 18,
      fontFamily: 'MI-LANTING--GBK1-Light',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,10918,22435,22456,22795,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });
  Object.defineProperty(exports, "GearCard", {
    enumerable: true,
    get: function get() {
      return _GearCard.default;
    }
  });
  Object.defineProperty(exports, "ListCard", {
    enumerable: true,
    get: function get() {
      return _ListCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _GearCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
},22861,[14305,14308,22864,22870,22873,22876,23299,23302]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;
        var underlayColor = theme == null ? undefined : theme.listUnderlayColor;
        if (this.props.underlayColor) underlayColor = this.props.underlayColor;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * (this.length - 1);

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,0.9)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,0.3)', 'rgba(255,255,255,0.3)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : '',
            opacity: opacityValue
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          focusable: false,
          style: [styles.text, {
            color: leftTextColorValue
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight,
            opacity: opacityValue
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: rightTextColorValue
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextOffColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextOffColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextOffColor: 'rgba(127, 127, 127, 0.3)',
    leftTextStyle: {},
    rightTextColor: '#999',
    rightTextOffColor: 'rgba(127, 127, 127, 0.3)',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _string = _$$_REQUIRE(_dependencyMap[15]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _utils = _$$_REQUIRE(_dependencyMap[17]);

  var _locale = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[21]);

  var _popButton = _$$_REQUIRE(_dependencyMap[22]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: _this2.props.accessibilityLabel,
            accessibilityHint: _this2.props.accessibilityHint,
            accessibilityValue: {
              min: Array.isArray(_this2.min) ? _this2.min[index] : 0,
              max: Array.isArray(_this2.max) ? _this2.max[index] : 0,
              now: _this2.state.currentArray[index]
            }
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.background
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {},
    accessible: true
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: {
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16,
      fontFamily: 'MILanPro_MEDIUM--GB1-4',
      fontWeight: 'bold'
    },
    subtitle: {
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5,
      fontFamily: 'MILanPro_MEDIUM--GB1-4',
      fontWeight: 'bold'
    },
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22435,22780,22927,22912,22930,22933,22426,22420,22423,23212]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组',
    selectPlugin: '请选择喜欢的插件样式使用',
    traditionalPlugin: '传统插件',
    standardPlugin: '标准插件',
    recommended: '（推荐使用）',
    changeSteps: '如需更改插件样式，可按照如下步骤操作',
    stepOne: '第一步：点击插件右上角进入更多设置',
    stepTwo: '第二步：在通用设置里找到“标准插件”，\n操作开关即可切换标准插件/传统插件',
    starting: '开始体验',
    switching: '切换中…',
    switchedSucess: '切换成功',
    switchedfail: '切换失败',
    guideFeedback: '意见反馈',
    next: '下一步'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[12]);

  var _locale = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PopButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevState.visible === false && this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }

        if (prevState.visible === true && this.state.visible === false) {
          var onModalHide = this.props.onModalHide;

          if (typeof onModalHide === 'function') {
            onModalHide();
          }
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            fontWeight: 'bold',
            color: theme.colorBlack,
            marginTop: height ? 7 : 10
          }, marginBottom, fontFamily, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.content
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [_resources.Styles.dialog.background, {
            backgroundColor: this.props.hasShade ? theme.colorOverLayerBlack : 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: this.props.layerDismissAccessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    hasShade: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10297,10033,22453,22906,22420,22423,22933,22426,22891,23215]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [{
            textAlign: 'left',
            fontSize: 16,
            fontWeight: 'bold',
            lineHeight: 22,
            fontFamily: 'MILanPro_MEDIUM--GB1-4',
            marginLeft: 30
          }, this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme,
            _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.listUnderlayColor,
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];
            var selectedIndex;

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];

              if (item) {
                selectedIndexArray.push(i);
                selectedIndex = i;
              }
            }

            if (_this.props.type === TYPE.SINGLE) _this.props.onSelect && _this.props.onSelect([selectedIndex]);
            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      var selectedArray = Array.from({
        length: props.options.length
      }, function (v, i) {
        return props.selectedIndexArray.includes(i);
      });
      _this.state = {
        visible: props.visible,
        selectedArray: selectedArray
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();

            this.props.onSelect && this.props.onSelect([index]);
          }
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          style: this.props.modalStyle,
          useNewTheme: true,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: props.noInputDisButton
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: this.props.noInputDisButton
          });
        } else if (!prevProps.visible && this.props.visible) {
          this.textInputArray = [];

          for (var i = 0; i < ((_this$props$inputs = this.props.inputs) == null ? undefined : _this$props$inputs.length) || 0; i++) {
            var _this$props$inputs;

            var input = this.props.inputs[i];

            if (input !== undefined) {
              this.textInputArray.push(input.defaultValue || '');
            }
          }

          if (this.props.noInputDisButton) {
            var result = this.isInputArrayEmpty(this.textInputArray);
            if (result !== this.state.disButton) this.setState({
              disButton: result
            });
          }
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "isInputArrayEmpty",
      value: function isInputArrayEmpty(arr) {
        for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _element = _ref;
          if (_element === '' || typeof _element === undefined || _element === null) return true;
        }

        return false;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;

        if (this.props.noInputDisButton) {
          var result = this.isInputArrayEmpty(this.textInputArray);
          if (result !== this.state.disButton) this.setState({
            disButton: result
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        var _this$context$theme;

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWarn
          }],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$context$theme2;

          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, {
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
            }, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var buttons = this.buttons;

        if (this.props.noInputDisButton && buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: this.props.noInputDisButton
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string,
    noInputDisButton: _propTypes.default.bool
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误',
    noInputDisButton: false
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    },
    inputWarnText: {
      alignSelf: 'flex-start',
      marginHorizontal: 19,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this,
            _this$context$theme,
            _this$context$theme2;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, {
                color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
              }, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, {
                color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
              }, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this,
            _this$context$theme3;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    extra: {}
  };
  MessageDialog.TYPE = TYPE;
  MessageDialog.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      fontFamily: 'MILanPro--GB1-4'
    },
    subText: {
      fontSize: 12,
      lineHeight: 16,
      fontFamily: 'MILanPro--GB1-4'
    },
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this$context$theme;

        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var _this3$context$theme3, _this3$context$theme4;

          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            var _this3$context$theme2;

            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, {
                color: (_this3$context$theme2 = _this3.context.theme) == null ? undefined : _this3$context$theme2.colorBlack1
              }, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, {
              backgroundColor: (_this3$context$theme3 = _this3.context.theme) == null ? undefined : _this3$context$theme3.colorBtnGrayNor,
              borderColor: (_this3$context$theme4 = _this3.context.theme) == null ? undefined : _this3$context$theme4.colorBtnGrayNor
            }, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this,
            _this$context$theme2;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
          }, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      borderRadius: 10,
      borderWidth: 2,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme,
            _this$context$theme2,
            _this$context$theme3;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 350);
        }

        var progressText = Math.round(this.props.progress * 100) + "%";
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        var unfilledColor = (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor;

        if (this.props.unfilledColor) {
          unfilledColor = this.props.unfilledColor;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: unfilledColor,
          width: _resources.Styles.dialog.modal.width - 54,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var margin = ~~((_resources.Styles.dialog.modal.width - 80 - 192) / 3);
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this,
            _this$context$theme;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: margin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[16]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'Kmedium'
          };
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: this.props.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? {
            fontWeight: 'bold'
          } : {}, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, fontFamily, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    underlayColor: _resources.Styles.common.underlayColor
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7,
          fontFamily: _font.FontDefault
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            fontWeight: 'bold',
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          this.setState({
            value: value,
            valueStr: this.format(value)
          });
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        if (_reactNative.Platform.OS === 'android') {
          extraStyle.fontFamily = 'KMedium';
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, this.props.useNewType ? {
            fontWeight: 'bold'
          } : {}, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;
  ListItemWithSwitch.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[15]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.imageContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel || this.props.message,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var fontFamily = {};
        if (_reactNative.Platform.OS === 'android') fontFamily = {
          fontFamily: 'Kmedium'
        };
        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, fontFamily, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$slice$split = color.slice(1).split(''),
        _color$slice$split2 = (0, _slicedToArray2.default)(_color$slice$split, 6),
        r1 = _color$slice$split2[0],
        r2 = _color$slice$split2[1],
        g1 = _color$slice$split2[2],
        g2 = _color$slice$split2[3],
        b1 = _color$slice$split2[4],
        b2 = _color$slice$split2[5];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Icons = _$$_REQUIRE(_dependencyMap[10]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _switch = _$$_REQUIRE(_dependencyMap[12]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _sizes = _$$_REQUIRE(_dependencyMap[14]);

  var _fonts = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            onPress = _this$props2.onPress;

        if (disabled || !onSwitch && !onPress || actionName !== 'activate') {
          return;
        }

        if (onSwitch) {
          onSwitch(!switchOn);
          return;
        }

        onPress();
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            themeColor = _this$props3.themeColor,
            themeBackgroundColor = _this$props3.themeBackgroundColor,
            underlayColor = _this$props3.underlayColor,
            hasShadow = _this$props3.hasShadow,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconStyle = _this$props3.iconStyle,
            icon = _this$props3.icon,
            iconText = _this$props3.iconText,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            onSwitch = _this$props3.onSwitch,
            switchOn = _this$props3.switchOn,
            disabled = _this$props3.disabled,
            onPress = _this$props3.onPress,
            rightText = _this$props3.rightText,
            rightArrow = _this$props3.rightArrow,
            offColor = _this$props3.offColor,
            iconDisabled = _this$props3.iconDisabled,
            invisible = _this$props3.invisible;
        var opacity = disabled ? 0.3 : 1;
        var finalIcon = icon;

        if (disabled && iconDisabled) {
          finalIcon = iconDisabled;
        }

        if (!finalIcon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, {
          invisible: invisible
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: onSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: onSwitch && !!switchOn
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_react.Fragment, null, finalIcon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: (!switchOn && offColor ? offColor : themeColor) || _Colors.default.green,
            opacity: opacity
          }]
        }, finalIcon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: finalIcon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, (0, _extends2.default)({
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))) : rightText || rightArrow ? _react.default.createElement(_react.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.rightArrow, {
            opacity: opacity
          }],
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: {
      fontFamily: _fonts.FontKmedium,
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    },
    titleContainer: {
      flex: 1
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999',
      marginTop: (0, _sizes.adjustSize)(12)
    },
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightArrow: {
      height: (0, _sizes.adjustSize)(72),
      width: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    }
  });
},23077,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: "" + index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal,
            invisible = _this$props2.invisible;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible',
            opacity: invisible ? 0 : 1
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.propTypes = {
    containerStyle: _propTypes.default.any,
    separatorStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    invisible: _propTypes.default.bool
  };
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false,
    invisible: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(33),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _styles = _$$_REQUIRE(_dependencyMap[15]);

  var Size72 = (0, _sizes.adjustSize)(72);
  var Size120 = (0, _sizes.adjustSize)(120);
  var Size168 = (0, _sizes.adjustSize)(168);
  var Size150 = (0, _sizes.adjustSize)(150);
  var Size138 = (0, _sizes.adjustSize)(138);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "renderTouchableList",
      value: function renderTouchableList() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor,
            titleIsTouchable = _this$props2.titleIsTouchable;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;

        if (titleIsTouchable) {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: [horizontal ? _styles.Styles.containerHorizontal : null, _styles.Styles.listContainer],
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null])
          }, icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return this.renderTouchableList();
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.propTypes = {
    sizeLevel: _propTypes.default.oneOf([0, 1, 2, 3]),
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    disabled: _propTypes.default.bool,
    showHighlight: _propTypes.default.bool,
    selected: _propTypes.default.bool,
    horizontal: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    title: _propTypes.default.string,
    titleIsTouchable: _propTypes.default.bool,
    icon: _propTypes.default.any,
    iconSelected: _propTypes.default.any,
    iconText: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '#F7F7F7',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: _fns.NOOP,
    title: '',
    titleIsTouchable: false,
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23137,22420,23098]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#999999'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#999999'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    },
    listContainer: {
      alignItems: 'center'
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLabel: this.props.accessibilityLabel || progress
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel || speedLevel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Source0 = _$$_REQUIRE(_dependencyMap[15]);

  var Source1 = _$$_REQUIRE(_dependencyMap[16]);

  var Source2 = _$$_REQUIRE(_dependencyMap[17]);

  var Source3 = _$$_REQUIRE(_dependencyMap[18]);

  var Source4 = _$$_REQUIRE(_dependencyMap[19]);

  var Source5 = _$$_REQUIRE(_dependencyMap[20]);

  var Source6 = _$$_REQUIRE(_dependencyMap[21]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            showLargeTitle = _this$props.showLargeTitle,
            subtitle = _this$props.subtitle,
            showSubtitle = _this$props.showSubtitle,
            unit = _this$props.unit,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.container1
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' '), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unitTransparent
        }, "" + unit) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.titlesContainer
        }, showLargeTitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.titleLarge
        }, title) : null, showLargeTitle ? null : _react.default.createElement(_reactNative.Text, {
          style: Styles.titleSmall
        }, title), showSubtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unit
        }, "" + unit) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' ')));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    showLargeTitle: _propTypes.default.bool,
    subtitle: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    unit: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0),
        isLoading: true
      };

      _this.onLayout = function () {
        _this.setState({
          isLoading: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.loop(_reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000),
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.timer = setTimeout(function () {
          _this2.startAnimation();
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var translateX = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        var randomTranslateY = getRandomBetween(_sizes.window.height * 0.8, _sizes.window.height);
        var translateY = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [randomTranslateY, 0]
        });

        if (this.state.isLoading) {
          return _react.default.createElement(_reactNative.View, {
            onLayout: this.onLayout,
            style: [StylesDot.container, {
              width: width,
              height: height
            }]
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            transform: [{
              translateX: translateX
            }, {
              translateY: translateY
            }]
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;
        var gradientProps = {
          useAngel: this.props.useAngel,
          angel: this.props.angel,
          angelCenter: this.props.angelCenter,
          locations: this.props.locations,
          colors: this.props.colors
        };

        if (!on) {
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps));
        } else {
          var dots = this.getDots();
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps), dots);
        }
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    useAngel: _propTypes.default.bool,
    angel: _propTypes.default.number,
    angelCenter: _propTypes.default.object,
    locations: _propTypes.default.array,
    colors: _propTypes.default.array
  };
  Background.defaultProps = {
    on: false,
    themeColor: null,
    useAngel: true,
    angel: 180,
    angelCenter: {
      x: 0.5,
      y: 0.5
    },
    locations: [0, 1],
    colors: ["#FFAC6A", "rgba(247,247,247,0.25)"]
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195),
      flexDirection: 'column',
      justifyContent: 'center'
    },
    container1: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    titleLarge: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(240),
      textAlign: 'center',
      color: '#000000'
    },
    titlesContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    titlesContainerHeightHolder: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(282),
      textAlign: 'center',
      color: 'transparent'
    },
    titleSmall: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(120),
      textAlign: 'center',
      color: '#000000'
    },
    unitTransparent: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: 'transparent'
    },
    unit: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: '#000000'
    },
    subtitlePlaceHolder: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: 'transparent'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: "100%",
      position: 'absolute',
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,14299,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _colors = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled,
            maxNumberInRow = _this$props2.maxNumberInRow,
            hideTitleLeastNumber = _this$props2.hideTitleLeastNumber;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        var isHorizontal = itemCount === 2 ? _this.props.isHorizontal : false;
        var hasSeparator = itemCount === 2;
        var newArray = [];
        var index = 0;

        while (index < items.length) {
          newArray.push(items.slice(index, index += maxNumberInRow));
        }

        return newArray.map(function (array, index1) {
          return _react.default.createElement(_reactNative.View, {
            key: index1,
            style: [Styles.selectors, itemCount === 2 && !isHorizontal ? {
              justifyContent: 'space-evenly'
            } : {}]
          }, array.map(function (item, index2) {
            var realIndex = index2 + maxNumberInRow * index1;
            var selected = selectedIndexs.indexOf(realIndex) !== -1;
            var numInOneRow = itemCount > maxNumberInRow ? maxNumberInRow : itemCount;
            var hideTitle = items.findIndex(function (item) {
              return item;
            }) === -1 || numInOneRow >= 5 && _this.context.language !== 'zh' || itemCount >= hideTitleLeastNumber;
            return _react.default.createElement(_react.Fragment, {
              key: index2 + maxNumberInRow * index1
            }, hasSeparator && realIndex > 0 ? _react.default.createElement(_reactNative.View, {
              style: Styles.separator
            }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              horizontal: isHorizontal,
              themeColor: themeColor,
              disabled: disabled || switchDisabled,
              selected: selected,
              title: hideTitle ? '' : item.title,
              icon: item.icon,
              iconSelected: item.iconSelected,
              iconText: item.title || '',
              onPress: function onPress() {
                _this.select(realIndex);
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: _this.props.accessible,
              accessibilityLabel: item.accessibilityLabel,
              accessibilityHint: item.accessibilityHint
            }))));
          }), itemCount > maxNumberInRow && itemCount % maxNumberInRow !== 0 && index1 === parseInt(itemCount / maxNumberInRow) ? Array.apply(null, Array(maxNumberInRow - itemCount % maxNumberInRow)).map(function (item, index) {
            return _react.default.createElement(_reactNative.View, {
              style: {
                opacity: 0
              },
              key: index
            }, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              disabled: true
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            }))));
          }) : null);
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : 2;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            title = _this$props4.title,
            subtitle = _this$props4.subtitle,
            items = _this$props4.items,
            hasShadow = _this$props4.hasShadow,
            showSwitch = _this$props4.showSwitch,
            disabled = _this$props4.disabled,
            switchOn = _this$props4.switchOn,
            themeColor = _this$props4.themeColor,
            onSwitch = _this$props4.onSwitch,
            maxNumberInRow = _this$props4.maxNumberInRow,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? alwaysShowSelectors ? _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors()) : null : _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    maxNumberInRow: _propTypes.default.number,
    hideTitleLeastNumber: _propTypes.default.number,
    isHorizontal: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true,
    maxNumberInRow: 4,
    isHorizontal: true,
    hideTitleLeastNumber: 1000
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)',
      flex: 1
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14344,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fonts = _$$_REQUIRE(_dependencyMap[16]);

  var _colors = _$$_REQUIRE(_dependencyMap[17]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[18]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "showSelector",
      value: function showSelector() {
        var _this$props4 = this.props,
            showSwitch = _this$props4.showSwitch,
            switchOn = _this$props4.switchOn,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (showSwitch && !switchOn) {
          return !!alwaysShowSelectors;
        } else {
          return true;
        }
      }
    }, {
      key: "minimumTrackTintColor",
      value: function minimumTrackTintColor() {
        var _this$props5 = this.props,
            showSwitch = _this$props5.showSwitch,
            switchOn = _this$props5.switchOn,
            disabled = _this$props5.disabled,
            themeColor = _this$props5.themeColor,
            offColor = _this$props5.offColor;

        if (showSwitch && !switchOn) {
          return (offColor ? offColor : themeColor) || _colors.ColorGreen;
        } else {
          return (disabled && offColor ? offColor : themeColor) || _colors.ColorGreen;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            options = _this$props6.options,
            disabled = _this$props6.disabled,
            switchDisabled = _this$props6.switchDisabled,
            themeColor = _this$props6.themeColor,
            offColor = _this$props6.offColor,
            showSwitch = _this$props6.showSwitch,
            switchOn = _this$props6.switchOn,
            onSwitch = _this$props6.onSwitch,
            initValue = _this$props6.initValue,
            title = _this$props6.title,
            subtitle = _this$props6.subtitle,
            hasShadow = _this$props6.hasShadow,
            min = _this$props6.min,
            max = _this$props6.max,
            step = _this$props6.step,
            contentType = _this$props6.contentType,
            showEndText = _this$props6.showEndText,
            alwaysShowSelectors = _this$props6.alwaysShowSelectors;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, this.showSelector() ? _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: this.minimumTrackTintColor(),
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.sliderAccessibilityLabel,
          accessibilityHint: this.props.sliderAccessibilityHint
        })))) : null));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    sliderAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    sliderAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '#EDEEEF',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel || this.props.position + "%",
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.titleAccessibilityLabel || title,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.textAccessibilityLabel || text,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string,
      textAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      titleAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            titleIsTouchable: _this.props.titleIsTouchable,
            selected: _this.props.activeIndex === index,
            showHighlight: _this.props.activeIndex === -1,
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    activeIndex: _propTypes.default.number,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    titleIsTouchable: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    activeIndex: -1,
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    titleIsTouchable: false,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[5]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[6]);

  var _font = _$$_REQUIRE(_dependencyMap[7]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < (str == null ? undefined : str.length); i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: {
      textAlign: 'center',
      maxWidth: 282,
      fontWeight: 'bold',
      fontSize: 16,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    },
    mediumTitle: {
      textAlign: 'center',
      maxWidth: 123,
      fontWeight: 'bold',
      fontSize: 16,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    },
    smallTitle: {
      textAlign: 'center',
      maxWidth: 52,
      fontWeight: 'bold',
      fontSize: 13,
      fontFamily: _font.FontLantingProMedium,
      textAlignVertical: 'center'
    }
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[5]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[6]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _font = _$$_REQUIRE(_dependencyMap[9]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: {
      fontSize: 16,
      lineHeight: 22,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    },
    mediumTitle: {
      fontSize: 16,
      lineHeight: 22,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    },
    smallTitle: {
      fontSize: 13,
      lineHeight: 18,
      fontFamily: _font.FontLantingProMedium,
      fontWeight: 'bold'
    }
  });
},23218,[14308,14305,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: props.type === TYPE.SECURE,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var borderColor = isFocused && this._notNull(inputValue) ? String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor) : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: {
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16,
            fontFamily: _font.FontLantingProMedium
          },
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f13fb08b174c97de0f063b5406edcd19",
    "name": "save_n_dark",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a997ade362625254db11517feb4b57cd",
    "name": "save_p_dark",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7db694f5552517986af48ade14af5dee",
    "name": "save_d_dark",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5ec1f8035bdf49848568663eab32f910",
    "name": "save_n_light",
    "type": "png"
  });
},23278,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dc06f34ea6451e550d102bfb79af7f49",
    "name": "save_p_light",
    "type": "png"
  });
},23281,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9e9264292f6e90aa0a56465fe7227563",
    "name": "save_d_light",
    "type": "png"
  });
},23284,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23287,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23290,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23293,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23296,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 12;
  var cardWidth = width - 24;
  var radiusValue = 12;
  var cardPadding = 20;
  var tabHeight = 46;
  var dotSize = 39;
  var CARD_EXCESS_PADDING = 6;
  var MAX_TAB_SHOW_COUNT = 5;
  var CARD_TYPE = {
    TAB: 'tab',
    SLIDER: 'slider',
    DOT: 'dot'
  };
  Object.freeze(CARD_TYPE);

  var GearCard = function (_Component) {
    (0, _inherits2.default)(GearCard, _Component);

    function GearCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GearCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GearCard).call(this, props));

      _this.onPressButton = function (index) {
        var _this$props = _this.props,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange;

        _this.setState({
          gearValue: index
        }, function () {
          _this.AnimatedMoveGreenTab(index);

          if (onPress) {
            onPress(index);
          }

          if (typeof onValueChange === 'function') {
            onValueChange(index);
          }
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabledSwitch = _this$props2.disabledSwitch,
            switchValue = _this$props2.switchValue;

        if (disabledSwitch) {
          return;
        }

        var gearValue = _this.state.gearValue;
        var toValue = gearValue;

        if (actionName === 'activate' && _this.props.onSwitchValueChange) {
          _this.props.onSwitchValueChange(!switchValue);

          return;
        }

        if (actionName === 'increment') {
          toValue++;
        }

        if (actionName === 'decrement') {
          toValue--;
        }

        _this._onSliderValueChange(toValue, function () {
          _this.props.onSlidingComplete(toValue);
        });
      };

      if (!props.options || !(props.options instanceof Array) || props.options.length < 2) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      if (props.maxDotShowCount > 9) {
        throw new Error('maxDotShowCount cannot exceed 9');
      }

      _this.getCorrectLayout(props);

      _this.state = {
        gearValue: _this.props.sliderProps.value
      };
      _this.currentIndex = new _reactNative.Animated.Value(props.currentIndex);
      return _this;
    }

    (0, _createClass2.default)(GearCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.AnimatedMoveGreenTab(this.props.currentIndex);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.options !== this.props.options) {
          this.getCorrectLayout(nextProps);
        }
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout(props) {
        var cardType = props.cardType,
            maxDotShowCount = props.maxDotShowCount;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(props.options.length, maxShowCount);
        var cardLength = cardWidth - 40 - CARD_EXCESS_PADDING;

        if (props.cardType === CARD_TYPE.DOT) {
          cardLength += CARD_EXCESS_PADDING;
          this.buttonWidth = Math.floor(cardLength / length) > dotSize ? dotSize : Math.floor(cardLength / length);
          this.dotSize = this.buttonWidth === dotSize ? dotSize : this.buttonWidth;
          this.leftMargin = 0;
          this.margin = (cardLength - this.buttonWidth * length) / (length - 1);
          return;
        }

        this.buttonWidth = Math.floor(cardLength / length) - 10;
        this.tabWidth = this.buttonWidth;
        this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
        this.margin = (cardLength - this.buttonWidth * length) / (length - 1);

        if (length === maxShowCount) {
          this.tabWidth = this.buttonWidth > 72 ? this.buttonWidth : 72;
          this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
          this.margin = (cardLength - this.buttonWidth * length - this.leftMargin * 2 + CARD_EXCESS_PADDING) / (length - 1);
        }
      }
    }, {
      key: "renderUpView",
      value: function renderUpView() {
        if (!!this.props.title || this.props.showSwitch) {
          var _this$context$theme, _this$context$theme2;

          var unlimitedHeightEnable = this.props.unlimitedHeightEnable;
          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.upViewContainer, unlimitedHeightEnable || !this.props.allowFontScaling ? {
              height: undefined
            } : {}]
          }, !this.props.onSwitchValueChange ? (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          }) : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledSwitch,
              checked: this.props.switchValue
            }
          }), {
            accessibilityActions: !this.props.onSwitchValueChange ? [] : [{
              name: 'activate'
            }],
            onAccessibilityAction: !this.props.onSwitchValueChange ? null : this.onAccessibilityAction
          }), _react.default.createElement(_reactNative.View, {
            style: styles.titleViewStyle
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            allowFontScaling: this.props.allowFontScaling,
            numberOfLines: this.props.titleNumberOfLines,
            ellipsizeMode: "tail",
            style: [styles.titleStyle, unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
            }, this.props.titleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.View, {
            style: styles.gearStyle
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorCol]
          }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: this.props.subtitleNumberOfLines,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling,
            style: [unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              fontSize: 12,
              fontFamily: 'MILanPro--GB1-4',
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
            }, this.props.subtitleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.subtitle)) : null), this.props.showSwitch ? _react.default.createElement(_reactNative.View, {
            style: styles.right
          }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
            style: this.props.switchStyle,
            value: this.props.switchValue,
            disabled: this.props.disabledSwitch,
            tintColor: this.props.tintColor,
            onTintColor: this.props.onTintColor,
            onValueChange: this.props.onSwitchValueChange
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })))) : null);
        }

        return null;
      }
    }, {
      key: "renderAnimatedView",
      value: function renderAnimatedView() {
        var _this$props$options, _this$props$options2;

        var isTab;
        if (this.props.cardType === CARD_TYPE.TAB) isTab = true;else if (this.props.cardType === CARD_TYPE.DOT && ((_this$props$options = this.props.options) == null ? undefined : _this$props$options.length) < 10 && ((_this$props$options2 = this.props.options) == null ? undefined : _this$props$options2.length) > 1) isTab = false;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            height: isTab ? tabHeight : this.dotSize,
            borderRadius: isTab ? 23 : this.dotSize / 2,
            width: isTab ? this.tabWidth : this.dotSize,
            backgroundColor: this.context.theme.colorPrimary,
            position: 'absolute',
            transform: [{
              translateX: this.currentIndex.interpolate(this.getLeftInterpolate())
            }],
            opacity: this.props.disabledGear ? 0.3 : 1,
            top: isTab ? 3 : 23 - this.dotSize / 2
          }
        });
      }
    }, {
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        if (this.props.cardType === CARD_TYPE.SLIDER) {
          var _this$context$theme3, _this$context$theme4, _this$context$theme5;

          var sliderProps = this.props.sliderProps;
          var sliderStyle = this.props.sliderStyle || {
            minimumTrackTintColor: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary,
            maximumTrackTintColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGearBackground,
            thumbTintColor: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorWhite2
          };
          return _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            options: this.props.options,
            value: this.state.gearValue,
            containerStyle: {
              height: 46,
              marginTop: 8
            },
            showEndText: sliderProps.showEndText,
            onValueChange: function onValueChange(value) {
              return _this2._onSliderValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2.props.onSlidingComplete(value);
            },
            minimumTrackTintColor: sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: sliderStyle.maximumTrackTintColor,
            blockStyle: {
              backgroundColor: sliderStyle.thumbTintColor
            },
            disabled: this.props.disabledGear
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: this.props.accessibilityLabel,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledGear
            },
            accessibilityValue: {
              value: this.state.gearValue
            }
          }), {
            accessibilityActions: [{
              name: 'increment'
            }, {
              name: 'decrement'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }));
        }

        var _this$props3 = this.props,
            cardType = _this$props3.cardType,
            maxDotShowCount = _this$props3.maxDotShowCount,
            optionGearBackgroundColor = _this$props3.optionGearBackgroundColor;
        var viewStyle = {};

        if (this.props.cardType === CARD_TYPE.TAB) {
          viewStyle = [styles.gearTabContainer, {
            backgroundColor: optionGearBackgroundColor || this.context.theme.colorGearBackground
          }];
        } else {
          viewStyle = [styles.gearDotContainer, {
            backgroundColor: optionGearBackgroundColor || 'transparent'
          }];
        }

        var _this$context$theme6 = this.context.theme,
            colorGrayLight = _this$context$theme6.colorGrayLight,
            colorWhite2 = _this$context$theme6.colorWhite2;
        var scrollViewWidth = this.props.options.length * (this.buttonWidth + this.margin) + 2 * this.leftMargin;
        var newScrollViewWidth = cardType === CARD_TYPE.TAB ? scrollViewWidth - CARD_EXCESS_PADDING : scrollViewWidth;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var gearTabContainerStyle = this.props.options.length <= maxShowCount ? {
          flex: 1
        } : {
          width: newScrollViewWidth
        };
        return _react.default.createElement(_reactNative.ScrollView, {
          alwaysBounceHorizontal: false,
          contentContainerStyle: gearTabContainerStyle,
          horizontal: true,
          showsHorizontalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [viewStyle, gearTabContainerStyle]
        }, this.renderAnimatedView(), _react.default.createElement(_reactNative.View, {
          style: [this.props.disabledGear ? {
            opacity: 0.3
          } : {}, styles.gearStyle]
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            key: option,
            onPress: function onPress() {
              return _this2.onPressButton(index);
            },
            activeOpacity: 1,
            disabled: _this2.props.disabledGear,
            style: [styles.textContainer, {
              width: _this2.buttonWidth
            }, index == 0 ? {
              marginLeft: _this2.leftMargin
            } : {
              marginLeft: _this2.margin
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.tab,
            accessibilityLabel: option,
            accessibilityHint: option,
            accessibilityState: {
              disabled: _this2.props.disabledGear,
              selected: index === _this2.state.gearValue
            }
          })), _react.default.createElement(_reactNative.Animated.Text, {
            ellipsizeMode: "tail",
            style: [styles.gearText, _this2.props.gearTextStyle, {
              color: _this2.state.gearValue === index ? colorWhite2 : colorGrayLight
            }]
          }, option));
        }))));
      }
    }, {
      key: "AnimatedMoveGreenTab",
      value: function AnimatedMoveGreenTab(index) {
        _reactNative.Animated.timing(this.currentIndex, {
          toValue: index,
          duration: this.props.duration,
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "getLeftInterpolate",
      value: function getLeftInterpolate() {
        var _this3 = this;

        var _this$props4 = this.props,
            cardType = _this$props4.cardType,
            maxDotShowCount = _this$props4.maxDotShowCount,
            options = _this$props4.options;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(options.length, maxShowCount);
        var inputRange = Array.from({
          length: length
        }).map(function (_value, idx) {
          return idx;
        });
        var outputRange = inputRange.map(function (i) {
          var value = i * (_this3.buttonWidth + _this3.margin) + _this3.leftMargin;

          if (_this3.props.cardType === CARD_TYPE.TAB && length === 5) {
            value -= (_this3.tabWidth - _this3.buttonWidth) / 2;
          }

          return value;
        });
        return {
          inputRange: inputRange,
          outputRange: outputRange
        };
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.innerView
        }, this.renderUpView(), this.renderGear());
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        var cardHeight = 143;
        if (!this.props.title && !this.props.showSwitch) cardHeight = 95;
        if (this.props.unlimitedHeightEnable) cardHeight = undefined;

        var cardStyle = _reactNative.StyleSheet.flatten([{
          width: cardWidth,
          height: cardHeight,
          borderRadius: radiusValue
        }, this.props.cardStyle]);

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          cardStyle: cardStyle,
          showShadow: false,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "_onSliderValueChange",
      value: function _onSliderValueChange(value) {
        var _this4 = this;

        this.setState({
          gearValue: value
        }, function () {
          if (typeof _this4.props.onValueChange === 'function') {
            _this4.props.onValueChange(value);
          }
        });

        if (this.props.onSliderValueChange) {
          this.props.onSliderValueChange(value);
        }
      }
    }]);
    return GearCard;
  }(_react.Component);

  GearCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.DOT, CARD_TYPE.SLIDER, CARD_TYPE.TAB]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    gearTextStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    showSwitch: _propTypes.default.bool,
    switchStyle: _propTypes.default.object,
    disabledSwitch: _propTypes.default.bool,
    disabledGear: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    options: _propTypes.default.array,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    duration: _propTypes.default.number,
    currentIndex: _propTypes.default.number,
    sliderProps: _propTypes.default.object,
    sliderStyle: _propTypes.default.object,
    onSliderValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    maxDotShowCount: _propTypes.default.number,
    onValueChange: _propTypes.default.func,
    optionGearBackgroundColor: _propTypes.default.string
  };
  GearCard.defaultProps = {
    cardType: CARD_TYPE.TAB,
    duration: 200,
    currentIndex: 0,
    showSwitch: false,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    disabledSwitch: false,
    disabledGear: false,
    sliderProps: {
      value: 0,
      showDots: 0,
      showEndText: true
    },
    maxDotShowCount: 9
  };
  GearCard.contextType = _configProvider.ConfigContext;
  GearCard.CARD_TYPE = CARD_TYPE;

  var styles = _reactNative.StyleSheet.create({
    innerView: {
      marginHorizontal: cardPadding,
      marginTop: 14,
      marginBottom: 17,
      flex: 1
    },
    upViewContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      marginBottom: 18
    },
    gearTabContainer: {
      height: 52,
      flexDirection: 'row',
      borderRadius: 26,
      marginBottom: 13,
      marginTop: 8
    },
    gearDotContainer: {
      height: 46,
      flexDirection: 'row',
      alignItems: 'center',
      marginTop: 8,
      marginBottom: 13
    },
    titleStyle: {
      fontSize: 14,
      fontFamily: 'MILanPro--GB1-4',
      fontWeight: 'bold',
      lineHeight: 19
    },
    textContainer: {
      height: tabHeight,
      justifyContent: 'center',
      alignItems: 'center'
    },
    gearText: {
      fontSize: 13,
      fontFamily: 'MILanPro--GB1-4'
    },
    right: {
      alignItems: 'flex-end',
      maxWidth: 70,
      marginLeft: 20
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 10,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    dotView: {
      top: 21,
      height: 4,
      width: 4,
      borderRadius: 2,
      backgroundColor: '#999999',
      position: 'absolute'
    },
    gearStyle: {
      flexDirection: 'row',
      flex: 1,
      alignItems: 'center'
    },
    titleViewStyle: {
      flexDirection: 'row',
      flex: 1,
      marginRight: 10
    }
  });

  var _default = GearCard;
  exports.default = _default;
},23299,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22864,22897,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _popButton = _$$_REQUIRE(_dependencyMap[16]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var radiusValue = 12;
  var cardHeight = 89;
  var marginHor = 20;
  var iconViewLength = 43;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    ARROW: 'arrow',
    NONE: 'none'
  };
  Object.freeze(TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var ListCard = function (_React$Component) {
    (0, _inherits2.default)(ListCard, _React$Component);

    function ListCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ListCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        if (_this.props.disabled) {
          return;
        }

        if (actionName === 'activate') {
          var _this$props$switchOpt, _this$props$switchOpt2, _this$props$choiceOpt, _this$props$choiceOpt2, _this$props$buttonOpt;

          if (_this.props.type === TYPE.SWITCH) (_this$props$switchOpt = _this.props.switchOption) == null ? undefined : _this$props$switchOpt.onSwitchValueChange(!((_this$props$switchOpt2 = _this.props.switchOption) == null ? undefined : _this$props$switchOpt2.switchValue));else if (_this.props.type === TYPE.CHOICE) (_this$props$choiceOpt = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.onValueChange(!((_this$props$choiceOpt2 = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checked));else if (_this.props.type === TYPE.BUTTON) (_this$props$buttonOpt = _this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.onPress();
        }
      };

      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ListCard, [{
      key: "renderIcon",
      value: function renderIcon() {
        return this.props.icon ? _react.default.createElement(_reactNative.View, {
          style: [styles.iconViewStyle, {
            backgroundColor: this.props.themeColor,
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconStyle,
          source: this.props.icon
        })) : null;
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3;

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            lineHeight: undefined
          };
        }

        var valueStyle = {
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var textViewStyle = {
          flex: 1,
          flexDirection: 'row'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'Kmedium'
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        return _react.default.createElement(_reactNative.View, {
          style: [textViewStyle, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleView
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
          }, fontFamily, adaptedFontStyle, this.props.titleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.subtitle, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
          }, adaptedFontStyle, this.props.subtitleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.value && (this.props.type === TYPE.NONE || this.props.type === TYPE.ARROW) ? _react.default.createElement(_reactNative.View, {
          style: styles.valueText
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [styles.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, valueStyle, adaptedFontStyle, this.props.valueStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value)) : null);
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        var _this$props$buttonOpt2, _this$props$buttonOpt3, _this$props$buttonOpt4, _this$props$buttonOpt5, _this$props$buttonOpt6, _this$props$buttonOpt7, _this$props$choiceOpt3, _this$props$choiceOpt4, _this$props$choiceOpt5, _this$props$switchOpt3, _this$props$switchOpt4, _this$props$switchOpt5, _this$props$switchOpt6, _this$props$switchOpt7;

        var component = {};
        if (this.props.type === TYPE.NONE) return null;else if (this.props.type === TYPE.ARROW) component = _react.default.createElement(_reactNative.Image, {
          style: styles.arrowIcon,
          source: _resources.Images.common.right_arrow
        });else if (this.props.type === TYPE.BUTTON) component = _react.default.createElement(_popButton.PopButton, {
          sizeLevel: 'small',
          title: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.title,
          backgroundColor: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.backgroundColor,
          titleStyle: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt4.titleStyle,
          titleColor: (_this$props$buttonOpt5 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt6 = _this$props$buttonOpt5.titleStyle) == null ? undefined : _this$props$buttonOpt6.color,
          disabled: this.props.disabled,
          allowFontScaling: this.props.allowFontScaling,
          onPress: (_this$props$buttonOpt7 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt7.onPress
        });else if (this.props.type === TYPE.CHOICE) component = _react.default.createElement(_Checkbox.default, {
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          disabled: this.props.disabled,
          checked: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.checked,
          checkedColor: (_this$props$choiceOpt4 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt4.checkedColor,
          onValueChange: (_this$props$choiceOpt5 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt5.onValueChange
        });else if (this.props.type === TYPE.SWITCH) component = _react.default.createElement(_Switch.default, {
          style: (_this$props$switchOpt3 = this.props.switchOption) == null ? undefined : _this$props$switchOpt3.switchStyle,
          value: (_this$props$switchOpt4 = this.props.switchOption) == null ? undefined : _this$props$switchOpt4.switchValue,
          disabled: this.props.disabled,
          tintColor: (_this$props$switchOpt5 = this.props.switchOption) == null ? undefined : _this$props$switchOpt5.tintColor,
          onTintColor: (_this$props$switchOpt6 = this.props.switchOption) == null ? undefined : _this$props$switchOpt6.onTintColor,
          onValueChange: (_this$props$switchOpt7 = this.props.switchOption) == null ? undefined : _this$props$switchOpt7.onSwitchValueChange
        });
        return _react.default.createElement(_reactNative.View, {
          style: [styles.right, this.props.type === TYPE.BUTTON ? {
            flex: 1,
            maxWidth: 80
          } : {}]
        }, component);
      }
    }, {
      key: "renderListCard",
      value: function renderListCard() {
        var _this$props$choiceOpt6, _this$props$switchOpt8;

        return _react.default.createElement(_reactNative.View, {
          style: styles.cardView
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.innerView
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: (_this$props$choiceOpt6 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt6.checked,
            value: (_this$props$switchOpt8 = this.props.switchOption) == null ? undefined : _this$props$switchOpt8.switchValue
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.renderIcon(), this.renderText(), this.renderRight()), this.renderSeparator());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4;

        var cardStyle = this.props.cardStyle;
        var defaultCardStyle = {
          height: cardHeight,
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, cardStyle, this.radius, !this.props.allowFontScaling || this.props.unlimitedHeightEnable ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: false,
          onPress: this.props.onPress,
          innerView: this.renderListCard(),
          cardStyle: mixCardStyle,
          disabled: this.props.disabled,
          underlayColor: this.props.cardUnderlayColor || ((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.listUnderlayColor),
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginHorizontal: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListCard;
  }(_react.default.Component);

  ListCard.contextType = _configProvider.ConfigContext;
  ListCard.TYPE = TYPE;
  ListCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;
  ListCard.propTypes = {
    radiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.BOTTOM]),
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.CHOICE, TYPE.BUTTON, TYPE.ARROW, TYPE.NONE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    themeColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    cardUnderlayColor: _propTypes.default.string
  };
  ListCard.defaultProps = {
    type: TYPE.NONE,
    radiusType: CARD_RADIUS_TYPE.ALL,
    themeColor: _resources.Styles.common.MHGreen,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 2,
    valueNumberOfLines: 1,
    allowFontScaling: true,
    unlimitedHeightEnable: false,
    showSeparator: true,
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    cardView: {
      flex: 1,
      justifyContent: 'center'
    },
    innerView: {
      flexDirection: 'row',
      marginHorizontal: marginHor,
      flex: 1,
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20
    },
    title: {
      fontSize: 16,
      lineHeight: 22,
      fontWeight: 'bold'
    },
    subtitle: {
      fontSize: 13,
      lineHeight: 18,
      marginTop: 1
    },
    valueText: {
      marginLeft: 6,
      justifyContent: 'flex-end',
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    titleView: {
      justifyContent: 'center',
      paddingRight: 10
    },
    iconViewStyle: {
      width: iconViewLength,
      height: iconViewLength,
      borderRadius: 21.5,
      alignItems: 'center',
      justifyContent: 'center',
      marginRight: 13
    },
    iconStyle: {
      width: 24,
      height: 24
    },
    arrowIcon: {
      width: 22,
      height: 22
    },
    right: {
      alignItems: 'flex-end'
    }
  });

  var _default = ListCard;
  exports.default = _default;
},23302,[14305,14314,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22450,22864,23212,22786,22426,22420]);
__r(10120);
__r(10001);