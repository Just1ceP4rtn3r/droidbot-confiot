
__d(function (global, _require, module, exports, _dependencyMap) {
    var _Main = _require(_dependencyMap[0]);

    var _Main2 = babelHelpers.interopRequireDefault(_Main);

    var _miot = _require(_dependencyMap[1]);

    var _PluginManager = _require(_dependencyMap[2]);

    var _PluginManager2 = babelHelpers.interopRequireDefault(_PluginManager);

    _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
        var licenseKey = "license-" + _miot.Device.deviceID;

        _miot.Host.storage.set(licenseKey, false);

        _miot.Package.exit();
    });

    _miot.PackageEvent.packageViewWillAppear.addListener(function () {});

    _miot.PackageEvent.packageWillLoad.addListener(function () {});

    _miot.PackageEvent.packageDidLoaded.addListener(function () {});

    _miot.PackageEvent.packageDidResume.addListener(function () {});

    _miot.PackageEvent.packageWillPause.addListener(function () {});

    _miot.PackageEvent.packageWillExit.addListener(function () {
        _PluginManager2.default.getInstance().prepareForUnload();
    });

    _miot.Package.entry(_Main2.default, function (_) {});
},10001,[10004,10074,11018],"projects/com.yeelight.wifi.color1/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _CommonSetting = _require(_dependencyMap[2]);

  var _miot = _require(_dependencyMap[3]);

  var _ui = _require(_dependencyMap[4]);

  var _reactNavigation = _require(_dependencyMap[5]);

  var _reactNavigationStack = _require(_dependencyMap[6]);

  var _CommonYeelightModules = _require(_dependencyMap[7]);

  var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

  var _PluginManager = _require(_dependencyMap[8]);

  var _PluginManager2 = babelHelpers.interopRequireDefault(_PluginManager);

  _PluginManager2.default.getInstance().prepareForLoad();

  var RouteConfigMap = _CommonYeelightModules2.default.RouteConfigMap,
      YLPackage = _CommonYeelightModules2.default.YLPackage,
      MainPage = _CommonYeelightModules2.default.MainPage,
      Images = _CommonYeelightModules2.default.Images,
      Theme = _CommonYeelightModules2.default.Theme,
      CLImageButton = _CommonYeelightModules2.default.CLImageButton,
      Cloud = _CommonYeelightModules2.default.Cloud,
      YLResource = _CommonYeelightModules2.default.YLResource,
      CommonSceneMain = _CommonYeelightModules2.default.CommonSceneMain;
  RouteConfigMap = babelHelpers.extends({}, RouteConfigMap, {
    FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
    MoreSetting: _CommonSetting.MoreSetting
  });
  var IS_ANDROID = true;
  var APPBAR_HEIGHT = 55;
  var NAVIGATION_BAR_HEIGHT = (_reactNative.StatusBar.currentHeight || 0) + APPBAR_HEIGHT;
  var ButtonType = {
    TextButton: 'TextButton',
    ImageButton: 'ImageButton'
  };
  var ratio = Theme.ratio;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      screenHeight = _Theme$getScreenSize.height,
      screenWidth = _Theme$getScreenSize.widt;

  var initRouteName = "MainPage";
  var initRouteParams = MainPage.route;

  if (_miot.Package.entrance == _miot.Entrance.Scene) {
    initRouteName = "CommonSceneMain";
    initRouteParams = CommonSceneMain.route;
  }

  var AppNavigator = (0, _reactNavigation.createStackNavigator)(babelHelpers.extends({}, RouteConfigMap), {
    initialRouteName: initRouteName,
    initialRouteParams: initRouteParams,
    navigationOptions: function navigationOptions(_ref) {
      var navigation = _ref.navigation;
      var pushTemp = navigation.push;

      navigation.push = function () {
        for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        if (params.length > 0) {
          if ("string" === typeof params[0]) {
            pushTemp(params);
          } else {
            var passProps = params[0].passProps || {};
            var component = params[0].component;
            var defaultPropsValue = {};

            if (typeof component.defaultProps === 'function') {
              defaultPropsValue = component.defaultProps();
            }

            component.defaultProps = babelHelpers.extends({}, defaultPropsValue, {
              insetForNavigator: {
                top: 0
              }
            }, passProps);
            pushTemp(component.name, params[0]);
          }
        }
      };

      var params = navigation.state.params || {};
      var navigationBarStyle = params.navigationBarStyle || {};
      var navigationOptions = {
        headerTransparent: false,
        headerStyle: babelHelpers.extends({}, navigationBarStyle, {
          paddingTop: NAVIGATION_BAR_HEIGHT - APPBAR_HEIGHT,
          height: NAVIGATION_BAR_HEIGHT,
          elevation: 0
        })
      };
      var tintColor = "white";

      if (params) {
        if (params.isNavigationBarHidden) {
          navigationOptions = babelHelpers.extends({}, navigationOptions, {
            headerTransparent: true,
            headerStyle: {
              borderBottomWidth: 0,
              backgroundColor: "transparent",
              height: 0
            }
          });
        }

        if (params.navigationBarStyle && params.navigationBarStyle.backgroundColor && "transparent" == params.navigationBarStyle.backgroundColor) {
          navigationOptions = babelHelpers.extends({}, navigationOptions, {
            headerTransparent: true
          });
        }

        if ("light-content" == params.barStyle) {
          tintColor = "white";
        } else {
          tintColor = "black";
        }
      }

      var barStyle = params.barStyle == "light-content" ? "light-content" : 'dark-content';

      _reactNative.StatusBar.setBarStyle(barStyle);

      IS_ANDROID && _reactNative.StatusBar.setTranslucent(true);
      var customTitle = params.headerTitleStyle || {};
      return babelHelpers.extends({}, navigationOptions, {
        headerTitle: params.title || "",
        headerTintColor: tintColor,
        headerBackTitleVisible: false,
        headerBackTitleStyle: {
          width: 0,
          height: 0
        },
        headerTitleStyle: babelHelpers.extends({
          flex: 1,
          textAlign: 'center',
          fontSize: 17,
          fontWeight: '400'
        }, customTitle),
        headerBackImage: params.isNavigationBarHidden ? null : _react2.default.createElement(_reactNative.Image, {
          source: Images("title_bar_back_white.png"),
          style: {
            width: 28,
            height: 28,
            marginLeft: 20 * Theme.ratio,
            tintColor: tintColor
          }
        }),
        headerLeft: leftButton(params, navigation),
        headerRight: rightButton(params, navigation)
      });
    },
    headerMode: 'screen',
    transitionConfig: function transitionConfig() {
      return {
        screenInterpolator: _reactNavigationStack.StackViewStyleInterpolator.forHorizontal,
        transitionSpec: _reactNavigationStack.StackViewTransitionConfigs.SlideFromRightIOS
      };
    }
  });

  function leftButton(route, navigator, index) {
    var navState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    if (!route || route.isNavigationBarHidden) {
      return _react2.default.createElement(_reactNative.View, null);
    }

    if (route.hasOwnProperty('isNavigationBarLeftButtonHidden') && route.isNavigationBarLeftButtonHidden) {
      return _react2.default.createElement(_reactNative.View, null);
    } else if (route.renderNavLeftComponent) {
      return route.renderNavLeftComponent(route, navigator, index, navState);
    } else {
      return _react2.default.createElement(
        _reactNative.View,
        {
          style: {
            left: 0,
            width: 59,
            height: APPBAR_HEIGHT,
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: 'transparent'
          }
        },
        _react2.default.createElement(CLImageButton, {
          source: Images(YLResource.requireNaviBackButtonImage),
          onPress: function onPress() {
            if (route.hasOwnProperty('navLeftButtonConfig') && route.navLeftButtonConfig.hasOwnProperty('actionEvent')) {
              _reactNative.DeviceEventEmitter.emit(route.navLeftButtonConfig.actionEvent, {});
            } else {
              if (index === 0) {
                _reactNative.DeviceEventEmitter.emit("PluginApp Exit");

                closeCurrentPlugin();
              } else {
                navigator.pop();
              }
            }
          },
          style: [{
            width: 29,
            height: 29,
            tintColor: Theme.nbLeftButtonTintColor
          }, route.navLeftButtonStyle]
        })
      );
    }
  }

  function rightButton(route, navigator) {
    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var navState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    if (!route || route.isNavigationBarHidden) {
      return null;
    }

    if (route.hasOwnProperty('isNavigationBarRightButtonHiddenCallback') && typeof route.isNavigationBarRightButtonHiddenCallback === "function" && route.isNavigationBarRightButtonHiddenCallback() || route.hasOwnProperty('isNavigationBarRightButtonHidden') && route.isNavigationBarRightButtonHidden) {
      return null;
    } else if (route.renderNavRightComponent) {
      return route.renderNavRightComponent(route, navigator, index, navState);
    } else {
      var navRightButtonConfig = void 0;

      if (route.hasOwnProperty('isNavigationBarRightButtonHiddenCallback') && typeof route.navRightButtonConfigCallback === "function") {
        navRightButtonConfig = route.navRightButtonConfigCallback();
      } else if (route.hasOwnProperty('navRightButtonConfig')) {
        navRightButtonConfig = route.navRightButtonConfig;
      }

      if (navRightButtonConfig && navRightButtonConfig.hasOwnProperty('buttonType') && navRightButtonConfig.hasOwnProperty('actionEvent')) {
        if (navRightButtonConfig.buttonType == ButtonType.TextButton && navRightButtonConfig.hasOwnProperty('title')) {
          var textColor = '#000000';

          if (navRightButtonConfig.hasOwnProperty('textColor')) {
            textColor = navRightButtonConfig.textColor;
          }

          return _react2.default.createElement(
            _reactNative.View,
            {
              style: {
                height: APPBAR_HEIGHT,
                justifyContent: 'center',
                margin: 6,
                alignItems: 'center'
              }
            },
            _react2.default.createElement(
              _reactNative.TouchableHighlight,
              {
                underlayColor: 'transparent',
                onPress: function onPress() {
                  _reactNative.DeviceEventEmitter.emit(navRightButtonConfig.actionEvent, {});
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: [{
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: 50 * ratio
                  }, navRightButtonConfig ? navRightButtonConfig.containerStyle : {}]
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  {
                    numberOfLines: 1,
                    style: [{
                      fontSize: 15,
                      color: textColor,
                      textAlign: 'left',
                      width: 50 * ratio
                    }, navRightButtonConfig ? navRightButtonConfig.textStyle : {}]
                  },
                  navRightButtonConfig.title
                )
              )
            )
          );
        } else if (navRightButtonConfig.buttonType == ButtonType.ImageButton && navRightButtonConfig.hasOwnProperty('imageURL')) {
          return _react2.default.createElement(
            _reactNative.View,
            {
              accessibilityLabel: "yl_nav_right_btn",
              style: {
                left: 0,
                width: 59,
                height: APPBAR_HEIGHT,
                justifyContent: 'center',
                alignItems: 'center'
              }
            },
            _react2.default.createElement(CLImageButton, {
              source: Images(navRightButtonConfig.imageURL),
              highlightedSource: Images(navRightButtonConfig.highlightedImageURL || navRightButtonConfig.imageURL),
              onPress: function onPress() {
                _reactNative.DeviceEventEmitter.emit(navRightButtonConfig.actionEvent, {});
              },
              style: [{
                width: 35,
                height: 35,
                tintColor: Theme.nbRightButtonTintColor
              }, route.navRightButtonStyle],
              highlightedStyle: [{
                width: 35,
                height: 35
              }, route.navRightButtonStyle]
            })
          );
        }
      }

      return _react2.default.createElement(_reactNative.View, null);
    }
  }

  function header(navigation) {
    var navigationBarStyleBackgroundColor = "#efeff0";
    var params = navigation.state.params;

    if (params) {
      if (params.isNavigationBarHidden) {
        return _react2.default.createElement(_reactNative.View, null);
      }

      if (params.navigationBarStyle && params.navigationBarStyle.backgroundColor) {
        navigationBarStyleBackgroundColor = params.navigationBarStyle.backgroundColor;
      }
    }

    return _react2.default.createElement(_ui.TitleBarBlack, {
      title: navigation.state.params ? navigation.state.params.title : "",
      style: {
        backgroundColor: navigationBarStyleBackgroundColor
      },
      onPressLeft: function onPressLeft() {
        if (navigation.state.routeName == initRouteName) {
          closeCurrentPlugin();
        } else {
          navigation.goBack();
        }
      }
    });
  }

  function closeCurrentPlugin() {
    YLPackage.closeCurrentPage();
  }

  function interpolator(props) {
    var layout = props.layout,
        position = props.position,
        scene = props.scene;

    if (!layout.isMeasured) {
      return function (props) {
        var navigation = props.navigation,
            scene = props.scene;
        var focused = navigation.state.index === scene.index;
        var opacity = focused ? 1 : 0;
        var translate = focused ? 0 : 1000000;
        return {
          opacity: opacity,
          transform: [{
            translateX: translate
          }, {
            translateY: translate
          }]
        };
      };
    }

    var interpolate = function interpolate(props) {
      var scene = props.scene,
          scenes = props.scenes;
      var index = scene.index;
      var lastSceneIndexInScenes = scenes.length - 1;
      var isBack = !scenes[lastSceneIndexInScenes].isActive;

      if (isBack) {
        var currentSceneIndexInScenes = scenes.findIndex(function (item) {
          return item === scene;
        });
        var targetSceneIndexInScenes = scenes.findIndex(function (item) {
          return item.isActive;
        });
        var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
        var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

        if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
          return {
            first: Math.min(targetSceneIndex, index - 1),
            last: index + 1
          };
        } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
          return {
            first: index - 1,
            last: Math.max(lastSceneIndex, index + 1)
          };
        } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
          return null;
        } else {
          return {
            first: index - 1,
            last: index + 1
          };
        }
      } else {
        return {
          first: index - 1,
          last: index + 1
        };
      }
    };

    if (!interpolate) return {
      opacity: 0
    };

    var _interpolate = interpolate(props),
        first = _interpolate.first,
        last = _interpolate.last;

    var index = scene.index;
    var opacity = position.interpolate({
      inputRange: [first, first + 0.01, index, last - 0.01, last],
      outputRange: [0, 1, 1, 0.85, 0]
    });
    var width = layout.initWidth;
    var translateX = position.interpolate({
      inputRange: [first, index, last],
      outputRange: [width, 0, width * -0.3]
    });
    var translateY = 0;
    return {
      opacity: opacity,
      transform: [{
        translateX: translateX
      }, {
        translateY: translateY
      }]
    };
  }

  var App = function (_Component) {
    babelHelpers.inherits(App, _Component);

    function App() {
      babelHelpers.classCallCheck(this, App);
      return babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    babelHelpers.createClass(App, [{
      key: "render",
      value: function render() {
        return _react2.default.createElement(AppNavigator, null);
      }
    }]);
    return App;
  }(_react.Component);

  exports.default = App;

  var styles = _reactNative.StyleSheet.create({
    navBar: {
      marginTop: Theme.APPBAR_MARGINTOP,
      backgroundColor: "#efeff0"
    },
    navBarText: {
      fontSize: 16,
      marginVertical: 10
    },
    navBarTitleText: {
      color: '#ffffff',
      fontWeight: Theme.nbTitleFontWeight,
      fontSize: 17,
      marginVertical: 9
    },
    navBarLeftButton: {
      paddingLeft: 10
    },
    appContainer: {
      flex: 1,
      height: screenHeight,
      width: screenWidth
    }
  });
},10004,[10297,10033,10353,10074,10230,10918,11407,10007,11018],"projects/com.yeelight.wifi.color1/Main/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _ProductModulesEntity = _require(_dependencyMap[0]);

  var _ProductModulesEntity2 = babelHelpers.interopRequireDefault(_ProductModulesEntity);

  module.exports = _ProductModulesEntity2.default;
},10007,[10010],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModules.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _DeviceModulesEntity = _require(_dependencyMap[0]);

  var _DeviceModulesEntity2 = babelHelpers.interopRequireDefault(_DeviceModulesEntity);

  console.log(' color light product modules entity');
  module.exports = _DeviceModulesEntity2.default;
},10010,[10013],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/ProductModulesEntity.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _DeviceModules = _require(_dependencyMap[0]);

  var _DeviceModules2 = babelHelpers.interopRequireDefault(_DeviceModules);

  module.exports = new _DeviceModules2.default();
},10013,[10016],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesEntity.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var ProductModules = _require(_dependencyMap[0]);

  var commonYeelightModulesDataSource = void 0;

  var DeviceModules = function (_ProductModules) {
    babelHelpers.inherits(DeviceModules, _ProductModules);

    function DeviceModules(props) {
      babelHelpers.classCallCheck(this, DeviceModules);
      return babelHelpers.possibleConstructorReturn(this, (DeviceModules.__proto__ || Object.getPrototypeOf(DeviceModules)).call(this, props));
    }

    babelHelpers.createClass(DeviceModules, [{
      key: "CommonYeelightModulesDataSource",
      get: function get() {
        if (!commonYeelightModulesDataSource) {
          var CommonYeelightModulesDataSource = _require(_dependencyMap[1]);

          commonYeelightModulesDataSource = new CommonYeelightModulesDataSource();
        }

        return commonYeelightModulesDataSource;
      }
    }]);
    return DeviceModules;
  }(ProductModules);

  module.exports = DeviceModules;
},10016,[10019,11648],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModules.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseModules = _require(_dependencyMap[0]);

  var commonYeelightModulesDataSource = void 0;

  var ProductModules = function (_BaseModules) {
    babelHelpers.inherits(ProductModules, _BaseModules);

    function ProductModules(props) {
      babelHelpers.classCallCheck(this, ProductModules);
      return babelHelpers.possibleConstructorReturn(this, (ProductModules.__proto__ || Object.getPrototypeOf(ProductModules)).call(this, props));
    }

    babelHelpers.createClass(ProductModules, [{
      key: "MultilingualResources",
      get: function get() {
        return _require(_dependencyMap[1]);
      }
    }, {
      key: "Api",
      get: function get() {
        return _require(_dependencyMap[2]);
      }
    }, {
      key: "SettingMenuEnum",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "TouchPanelConfigurationPage",
      get: function get() {
        return _require(_dependencyMap[4]);
      }
    }, {
      key: "CommonYeelightModulesDataSource",
      get: function get() {
        if (!commonYeelightModulesDataSource) {
          var CommonYeelightModulesDataSource = _require(_dependencyMap[5]);

          commonYeelightModulesDataSource = new CommonYeelightModulesDataSource();
        }

        return commonYeelightModulesDataSource;
      }
    }, {
      key: "RouteConfigMap",
      get: function get() {
        return _require(_dependencyMap[6]).default;
      }
    }]);
    return ProductModules;
  }(BaseModules);

  module.exports = ProductModules;
},10019,[10022,11489,11588,11591,11594,11597,11645],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/ProductModules.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var commonYeelightModulesDataSource = void 0;
  var baseYeelightModulesDataSource = void 0;
  var userGuideManager = void 0;

  var CommonYeelightModules = function () {
    function CommonYeelightModules() {
      babelHelpers.classCallCheck(this, CommonYeelightModules);
    }

    babelHelpers.createClass(CommonYeelightModules, [{
      key: "Images",
      value: function Images(key) {
        try {
          var images = _require(_dependencyMap[0]).default;

          var PluginInfo = _require(_dependencyMap[1]);

          var newKey = PluginInfo.images(key);
          var value = images[newKey];

          if (value) {
            return value();
          } else {
            return null;
          }
        } catch (ex) {
          return null;
        }
      }
    }, {
      key: "ResourceImages",
      value: function ResourceImages(key) {
        try {
          var images = _require(_dependencyMap[2]).default;

          var value = images[key];

          if (value) {
            return value();
          } else {
            return null;
          }
        } catch (ex) {
          return null;
        }
      }
    }, {
      key: "BrightnessIndicator",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "CTIndicator",
      get: function get() {
        return _require(_dependencyMap[4]);
      }
    }, {
      key: "LampOff",
      get: function get() {
        return _require(_dependencyMap[5]);
      }
    }, {
      key: "PageControl",
      get: function get() {
        return _require(_dependencyMap[6]);
      }
    }, {
      key: "UserGuide",
      get: function get() {
        return _require(_dependencyMap[7]);
      }
    }, {
      key: "LightGenerator",
      get: function get() {
        return _require(_dependencyMap[8]);
      }
    }, {
      key: "ColorIndicator",
      get: function get() {
        return _require(_dependencyMap[9]);
      }
    }, {
      key: "FlowingPanel",
      get: function get() {
        return _require(_dependencyMap[10]);
      }
    }, {
      key: "FlowingPanelDefault",
      get: function get() {
        return _require(_dependencyMap[11]);
      }
    }, {
      key: "CFDurationIndicator",
      get: function get() {
        return _require(_dependencyMap[12]);
      }
    }, {
      key: "RoundButton",
      get: function get() {
        return _require(_dependencyMap[13]);
      }
    }, {
      key: "LampOn",
      get: function get() {
        return _require(_dependencyMap[14]);
      }
    }, {
      key: "LampOnGesturePage",
      get: function get() {
        return _require(_dependencyMap[15]);
      }
    }, {
      key: "LightStateComponent",
      get: function get() {
        return _require(_dependencyMap[16]);
      }
    }, {
      key: "LightPromodoStatusView",
      get: function get() {
        return _require(_dependencyMap[17]);
      }
    }, {
      key: "SwipeableListView",
      get: function get() {
        return _require(_dependencyMap[18]);
      }
    }, {
      key: "WebViewPage",
      get: function get() {
        return _require(_dependencyMap[19]);
      }
    }, {
      key: "YLListViewType",
      get: function get() {
        return _require(_dependencyMap[20]);
      }
    }, {
      key: "RectComponent",
      get: function get() {
        return _require(_dependencyMap[21]);
      }
    }, {
      key: "UserGuideManager",
      get: function get() {
        if (!userGuideManager) {
          var UserGuideManager = _require(_dependencyMap[22]).UserGuideManager;

          userGuideManager = new UserGuideManager();
        }

        return userGuideManager;
      }
    }, {
      key: "DeviceControlType",
      get: function get() {
        return _require(_dependencyMap[23]).DeviceControlType;
      }
    }, {
      key: "Api",
      get: function get() {
        return _require(_dependencyMap[24]);
      }
    }, {
      key: "AppUUID",
      get: function get() {
        return _require(_dependencyMap[25]);
      }
    }, {
      key: "HsvToRgb",
      get: function get() {
        return _require(_dependencyMap[26]);
      }
    }, {
      key: "LoadingEffect",
      get: function get() {
        return _require(_dependencyMap[27]);
      }
    }, {
      key: "strings",
      get: function get() {
        return _require(_dependencyMap[28]);
      }
    }, {
      key: "Rgb2Int",
      get: function get() {
        return _require(_dependencyMap[29]);
      }
    }, {
      key: "Cloud",
      get: function get() {
        return _require(_dependencyMap[30]);
      }
    }, {
      key: "YLString",
      get: function get() {
        return _require(_dependencyMap[31]);
      }
    }, {
      key: "Crypto",
      get: function get() {
        return _require(_dependencyMap[32]);
      }
    }, {
      key: "Tools",
      get: function get() {
        return _require(_dependencyMap[33]);
      }
    }, {
      key: "WeekStringTools",
      get: function get() {
        return _require(_dependencyMap[34]);
      }
    }, {
      key: "Category",
      get: function get() {
        return _require(_dependencyMap[35]);
      }
    }, {
      key: "MibandSearchManager",
      get: function get() {
        return _require(_dependencyMap[36]);
      }
    }, {
      key: "SignedIntConverter",
      get: function get() {
        return _require(_dependencyMap[37]);
      }
    }, {
      key: "LightMode",
      get: function get() {
        return _require(_dependencyMap[38]);
      }
    }, {
      key: "AppVersion",
      get: function get() {
        return _require(_dependencyMap[39]);
      }
    }, {
      key: "LampLightMode",
      get: function get() {
        return _require(_dependencyMap[40]);
      }
    }, {
      key: "LightDataType",
      get: function get() {
        return _require(_dependencyMap[41]);
      }
    }, {
      key: "ApplicationModel",
      get: function get() {
        return _require(_dependencyMap[42]);
      }
    }, {
      key: "DeviceModel",
      get: function get() {
        return _require(_dependencyMap[43]);
      }
    }, {
      key: "px2dp",
      get: function get() {
        return _require(_dependencyMap[44]).default;
      }
    }, {
      key: "Theme",
      get: function get() {
        return _require(_dependencyMap[45]);
      }
    }, {
      key: "DeviceTypeEnum",
      get: function get() {
        return _require(_dependencyMap[46]);
      }
    }, {
      key: "CommonTypeEnum",
      get: function get() {
        return _require(_dependencyMap[47]);
      }
    }, {
      key: "YLDate",
      get: function get() {
        return _require(_dependencyMap[48]);
      }
    }, {
      key: "MultilingualResources",
      get: function get() {
        return _require(_dependencyMap[49]);
      }
    }, {
      key: "LocalStorageManager",
      get: function get() {
        return _require(_dependencyMap[50]).getInstance();
      }
    }, {
      key: "LocalStorageManagerClass",
      get: function get() {
        return _require(_dependencyMap[50]);
      }
    }, {
      key: "PluginInfo",
      get: function get() {
        return _require(_dependencyMap[1]);
      }
    }, {
      key: "ResourcesManager",
      get: function get() {
        return _require(_dependencyMap[51]);
      }
    }, {
      key: "PluginManager",
      get: function get() {
        return _require(_dependencyMap[52]);
      }
    }, {
      key: "HomeKitManager",
      get: function get() {
        return _require(_dependencyMap[53]);
      }
    }, {
      key: "BrightnessSelector",
      get: function get() {
        return _require(_dependencyMap[54]);
      }
    }, {
      key: "DelayTimer",
      get: function get() {
        return _require(_dependencyMap[55]);
      }
    }, {
      key: "NightLightSettingPage",
      get: function get() {
        return _require(_dependencyMap[56]);
      }
    }, {
      key: "RemoteControlListPage",
      get: function get() {
        return _require(_dependencyMap[57]);
      }
    }, {
      key: "MibandAttachedPage",
      get: function get() {
        return _require(_dependencyMap[58]);
      }
    }, {
      key: "MibandBroadcastTipPage",
      get: function get() {
        return _require(_dependencyMap[59]);
      }
    }, {
      key: "MibandSearchPage",
      get: function get() {
        return _require(_dependencyMap[60]);
      }
    }, {
      key: "SettingMenu",
      get: function get() {
        return _require(_dependencyMap[61]);
      }
    }, {
      key: "DefaultLightNewCommon",
      get: function get() {
        return _require(_dependencyMap[62]);
      }
    }, {
      key: "AmbilightSettingPage",
      get: function get() {
        return _require(_dependencyMap[63]);
      }
    }, {
      key: "SettingMenuEnum",
      get: function get() {
        return _require(_dependencyMap[64]);
      }
    }, {
      key: "SmartSwitchDetailPage",
      get: function get() {
        return _require(_dependencyMap[65]);
      }
    }, {
      key: "CollectionYeelight",
      get: function get() {
        return _require(_dependencyMap[66]);
      }
    }, {
      key: "CommonSceneMain",
      get: function get() {
        return _require(_dependencyMap[67]);
      }
    }, {
      key: "ColorPicker",
      get: function get() {
        return _require(_dependencyMap[68]);
      }
    }, {
      key: "MainPage",
      get: function get() {
        return _require(_dependencyMap[69]);
      }
    }, {
      key: "LightCircle",
      get: function get() {
        return _require(_dependencyMap[70]);
      }
    }, {
      key: "MijiaBottomModal",
      get: function get() {
        return _require(_dependencyMap[71]);
      }
    }, {
      key: "BaseYeelightModulesDataSource",
      get: function get() {
        if (!baseYeelightModulesDataSource) {
          var BaseYeelightModulesDataSource = _require(_dependencyMap[72]);

          baseYeelightModulesDataSource = new BaseYeelightModulesDataSource();
        }

        return baseYeelightModulesDataSource;
      }
    }, {
      key: "MenuIdentifiers",
      get: function get() {
        return this.SettingMenuEnum.MenuIdentifiers;
      }
    }, {
      key: "SettingMenuTypeEnum",
      get: function get() {
        return this.SettingMenuEnum.SettingMenuTypeEnum;
      }
    }, {
      key: "SettingMenuIcons",
      get: function get() {
        return this.SettingMenuEnum.SettingMenuIcons;
      }
    }, {
      key: "CommonYeelightModulesDataSource",
      get: function get() {
        if (!commonYeelightModulesDataSource) {
          var CommonYeelightModulesDataSource = _require(_dependencyMap[73]);

          commonYeelightModulesDataSource = new CommonYeelightModulesDataSource();
        }

        return commonYeelightModulesDataSource;
      }
    }, {
      key: "Button",
      get: function get() {
        return _require(_dependencyMap[74]);
      }
    }, {
      key: "SwipeListView",
      get: function get() {
        return _require(_dependencyMap[75]);
      }
    }, {
      key: "SwipeRow",
      get: function get() {
        return _require(_dependencyMap[76]);
      }
    }, {
      key: "YLSafeAreaView",
      get: function get() {
        return _require(_dependencyMap[77]).default;
      }
    }, {
      key: "SegmentedBar",
      get: function get() {
        return _require(_dependencyMap[78]).default;
      }
    }, {
      key: "viewPropTypes",
      get: function get() {
        return _require(_dependencyMap[79]);
      }
    }, {
      key: "AnimatedCircularProgress",
      get: function get() {
        return _require(_dependencyMap[80]).default;
      }
    }, {
      key: "SegmentedControlTab",
      get: function get() {
        return _require(_dependencyMap[81]).default;
      }
    }, {
      key: "ProgressBar",
      get: function get() {
        return _require(_dependencyMap[82]);
      }
    }, {
      key: "YLPrompt",
      get: function get() {
        return _require(_dependencyMap[83]).default;
      }
    }, {
      key: "Toast",
      get: function get() {
        return _require(_dependencyMap[84]).default;
      }
    }, {
      key: "SwipeGestures",
      get: function get() {
        return _require(_dependencyMap[85]);
      }
    }, {
      key: "GestureRecognizer",
      get: function get() {
        return _require(_dependencyMap[85]).default;
      }
    }, {
      key: "Overlay",
      get: function get() {
        return _require(_dependencyMap[86]).default;
      }
    }, {
      key: "Switch",
      get: function get() {
        return _require(_dependencyMap[87]).default;
      }
    }, {
      key: "ActionSheet",
      get: function get() {
        return _require(_dependencyMap[88]).default;
      }
    }, {
      key: "SortableFlatList",
      get: function get() {
        return _require(_dependencyMap[89]).default;
      }
    }, {
      key: "SortableList",
      get: function get() {
        return _require(_dependencyMap[90]).default;
      }
    }, {
      key: "BaseReactComponent",
      get: function get() {
        return _require(_dependencyMap[91]);
      }
    }, {
      key: "CompatibleLayer",
      get: function get() {
        return _require(_dependencyMap[92]);
      }
    }, {
      key: "CLImageButton",
      get: function get() {
        return this.CompatibleLayer.CLImageButton;
      }
    }, {
      key: "CLSwitch",
      get: function get() {
        return this.CompatibleLayer.CLSwitch;
      }
    }, {
      key: "CLNumberSpinner",
      get: function get() {
        return this.CompatibleLayer.CLNumberSpinner;
      }
    }, {
      key: "CLDatePicker",
      get: function get() {
        return this.CompatibleLayer.CLDatePicker;
      }
    }, {
      key: "CLActivityIndicator",
      get: function get() {
        return this.CompatibleLayer.CLActivityIndicator;
      }
    }, {
      key: "CLPicker",
      get: function get() {
        return this.CompatibleLayer.CLPicker;
      }
    }, {
      key: "CLProgressView",
      get: function get() {
        return this.CompatibleLayer.CLProgressView;
      }
    }, {
      key: "CLSegmentedControl",
      get: function get() {
        return this.CompatibleLayer.CLSegmentedControl;
      }
    }, {
      key: "CLAlert",
      get: function get() {
        return this.CompatibleLayer.CLAlert;
      }
    }, {
      key: "CLActionSheet",
      get: function get() {
        return this.CompatibleLayer.CLActionSheet;
      }
    }, {
      key: "CLImage",
      get: function get() {
        return this.CompatibleLayer.CLImage;
      }
    }, {
      key: "CLVideo",
      get: function get() {
        return this.CompatibleLayer.CLVideo;
      }
    }, {
      key: "CLCard",
      get: function get() {
        return this.CompatibleLayer.CLCard;
      }
    }, {
      key: "CLNavigationBar",
      get: function get() {
        return this.CompatibleLayer.CLNavigationBar;
      }
    }, {
      key: "CLSeparator",
      get: function get() {
        return this.CompatibleLayer.CLSeparator;
      }
    }, {
      key: "CLCommonSetting",
      get: function get() {
        return this.CompatibleLayer.CLCommonSetting;
      }
    }, {
      key: "CLSETTING_KEYS",
      get: function get() {
        return this.CompatibleLayer.CLSETTING_KEYS;
      }
    }, {
      key: "CLFIRST_ALL_OPTIONS",
      get: function get() {
        return this.CompatibleLayer.CLFIRST_ALL_OPTIONS;
      }
    }, {
      key: "CLSECOND_ALL_OPTIONS",
      get: function get() {
        return this.CompatibleLayer.CLSECOND_ALL_OPTIONS;
      }
    }, {
      key: "CLListItemWithSwitch",
      get: function get() {
        return this.CompatibleLayer.CLListItemWithSwitch;
      }
    }, {
      key: "CLListItem",
      get: function get() {
        return this.CompatibleLayer.CLListItem;
      }
    }, {
      key: "CLStyles",
      get: function get() {
        return this.CompatibleLayer.CLStyles;
      }
    }, {
      key: "PropTypes",
      get: function get() {
        return _require(_dependencyMap[93]);
      }
    }, {
      key: "YLPackage",
      get: function get() {
        return this.CompatibleLayer.YLPackage;
      }
    }, {
      key: "YLDevice",
      get: function get() {
        return this.CompatibleLayer.YLDevice;
      }
    }, {
      key: "YLAccount",
      get: function get() {
        return this.YLService.account;
      }
    }, {
      key: "YLUI",
      get: function get() {
        return this.CompatibleLayer.YLUI;
      }
    }, {
      key: "YLHostUI",
      get: function get() {
        return this.YLHost.ui;
      }
    }, {
      key: "YLResource",
      get: function get() {
        return this.CompatibleLayer.YLResource;
      }
    }, {
      key: "YLHost",
      get: function get() {
        return this.CompatibleLayer.YLHost;
      }
    }, {
      key: "YLDeviceEvent",
      get: function get() {
        return this.CompatibleLayer.YLDeviceEvent;
      }
    }, {
      key: "YLPackageEvent",
      get: function get() {
        return this.CompatibleLayer.YLPackageEvent;
      }
    }, {
      key: "YLStorage",
      get: function get() {
        return this.CompatibleLayer.YLStorage;
      }
    }, {
      key: "YLService",
      get: function get() {
        return this.CompatibleLayer.YLService;
      }
    }, {
      key: "YLScene",
      get: function get() {
        return this.YLService.scene;
      }
    }, {
      key: "YLSmartHome",
      get: function get() {
        return this.YLService.smarthome;
      }
    }, {
      key: "YLMIOTSpec",
      get: function get() {
        return this.YLService.spec;
      }
    }, {
      key: "YLHostLocale",
      get: function get() {
        return this.YLHost.locale;
      }
    }, {
      key: "YLHostFile",
      get: function get() {
        return this.YLHost.file;
      }
    }, {
      key: "YLIBluetoothLE",
      get: function get() {
        return this.CompatibleLayer.YLIBluetoothLE;
      }
    }, {
      key: "YLBluetoothEvent",
      get: function get() {
        return this.CompatibleLayer.YLBluetoothEvent;
      }
    }, {
      key: "YLLocalizedStrings",
      get: function get() {
        return this.CompatibleLayer.YLLocalizedStrings;
      }
    }, {
      key: "CLOverlay",
      get: function get() {
        return _require(_dependencyMap[94]);
      }
    }, {
      key: "RouteConfigMap",
      get: function get() {
        return _require(_dependencyMap[95]).default;
      }
    }, {
      key: "YLSwitch",
      get: function get() {
        return _require(_dependencyMap[96]).default;
      }
    }, {
      key: "YLImageStateButton",
      get: function get() {
        return _require(_dependencyMap[97]).default;
      }
    }, {
      key: "YLRadioStateButton",
      get: function get() {
        return _require(_dependencyMap[98]).default;
      }
    }, {
      key: "YLRadioStateGroup",
      get: function get() {
        return _require(_dependencyMap[99]).default;
      }
    }, {
      key: "YLCollapsingHeaderView",
      get: function get() {
        return _require(_dependencyMap[100]).default;
      }
    }, {
      key: "YLSlider",
      get: function get() {
        return _require(_dependencyMap[101]);
      }
    }, {
      key: "DelayOffTimeScaleSlider",
      get: function get() {
        return _require(_dependencyMap[102]);
      }
    }]);
    return CommonYeelightModules;
  }();

  ;
  module.exports = CommonYeelightModules;
},10022,[10025,10445,10451,10457,10460,10463,10466,10469,10472,10475,10478,10481,10484,10487,10496,10505,10508,10511,10514,10523,10547,10550,10499,10502,10553,10541,10556,10562,10490,10559,10526,10493,10544,10565,10568,10571,10574,10577,10580,10583,10586,10589,10592,10595,10598,10601,10604,10607,10610,10613,10721,10724,11018,11021,11024,11027,11030,11033,11036,11039,11042,11045,11048,11051,11054,11057,11060,11063,11066,11072,11075,11078,11081,11282,11333,11339,11345,11348,11360,11342,11369,11375,11378,11381,11387,11429,11390,11432,11435,11444,11447,11462,11090,11156,11141,11465,11468,11471,11474,11477,11480,11483,11486],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseModules.js");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "MibandNotFound.png": function MibandNotFoundPng() {
                        return _require(_dependencyMap[0]);
                },
                "all_flow_circle.png": function all_flow_circlePng() {
                        return _require(_dependencyMap[1]);
                },
                "btn_settings.png": function btn_settingsPng() {
                        return _require(_dependencyMap[2]);
                },
                "color_edit_icon.png": function color_edit_iconPng() {
                        return _require(_dependencyMap[3]);
                },
                "color_mask.png": function color_maskPng() {
                        return _require(_dependencyMap[4]);
                },
                "color_pick_board.png": function color_pick_boardPng() {
                        return _require(_dependencyMap[5]);
                },
                "color_point.png": function color_pointPng() {
                        return _require(_dependencyMap[6]);
                },
                "color_select_panel1.png": function color_select_panel1Png() {
                        return _require(_dependencyMap[7]);
                },
                "color_select_panel3.png": function color_select_panel3Png() {
                        return _require(_dependencyMap[8]);
                },
                "ct_mask.png": function ct_maskPng() {
                        return _require(_dependencyMap[9]);
                },
                "default_state.png": function default_statePng() {
                        return _require(_dependencyMap[10]);
                },
                "delay_time_save.png": function delay_time_savePng() {
                        return _require(_dependencyMap[11]);
                },
                "fail.png": function failPng() {
                        return _require(_dependencyMap[12]);
                },
                "flow_bg.png": function flow_bgPng() {
                        return _require(_dependencyMap[13]);
                },
                "flow_mask.png": function flow_maskPng() {
                        return _require(_dependencyMap[14]);
                },
                "global_background.png": function global_backgroundPng() {
                        return _require(_dependencyMap[15]);
                },
                "icon_favorite_top.png": function icon_favorite_topPng() {
                        return _require(_dependencyMap[16]);
                },
                "icon_slider_delay_off_time_scale.png": function icon_slider_delay_off_time_scalePng() {
                        return _require(_dependencyMap[17]);
                },
                "icon_slider_thumb_circle.png": function icon_slider_thumb_circlePng() {
                        return _require(_dependencyMap[18]);
                },
                "icon_slider_thumb_delay_off_time.png": function icon_slider_thumb_delay_off_timePng() {
                        return _require(_dependencyMap[19]);
                },
                "icon_yeelight_remote_ct_normal.png": function icon_yeelight_remote_ct_normalPng() {
                        return _require(_dependencyMap[20]);
                },
                "icon_yeelight_remote_ct_pressed.png": function icon_yeelight_remote_ct_pressedPng() {
                        return _require(_dependencyMap[21]);
                },
                "icon_yeelight_remote_light_decrease_normal.png": function icon_yeelight_remote_light_decrease_normalPng() {
                        return _require(_dependencyMap[22]);
                },
                "icon_yeelight_remote_light_decrease_pressed.png": function icon_yeelight_remote_light_decrease_pressedPng() {
                        return _require(_dependencyMap[23]);
                },
                "icon_yeelight_remote_light_increase_normal.png": function icon_yeelight_remote_light_increase_normalPng() {
                        return _require(_dependencyMap[24]);
                },
                "icon_yeelight_remote_light_increase_pressed.png": function icon_yeelight_remote_light_increase_pressedPng() {
                        return _require(_dependencyMap[25]);
                },
                "icon_yeelight_remote_mode-pressed.png": function icon_yeelight_remote_modePressedPng() {
                        return _require(_dependencyMap[26]);
                },
                "icon_yeelight_remote_mode_normal.png": function icon_yeelight_remote_mode_normalPng() {
                        return _require(_dependencyMap[27]);
                },
                "icon_yeelight_remote_off_normal.png": function icon_yeelight_remote_off_normalPng() {
                        return _require(_dependencyMap[28]);
                },
                "icon_yeelight_remote_off_pressed.png": function icon_yeelight_remote_off_pressedPng() {
                        return _require(_dependencyMap[29]);
                },
                "icon_yeelight_remote_on_normal.png": function icon_yeelight_remote_on_normalPng() {
                        return _require(_dependencyMap[30]);
                },
                "icon_yeelight_remote_on_pressed.png": function icon_yeelight_remote_on_pressedPng() {
                        return _require(_dependencyMap[31]);
                },
                "indicator_add.png": function indicator_addPng() {
                        return _require(_dependencyMap[32]);
                },
                "indicator_reduce.png": function indicator_reducePng() {
                        return _require(_dependencyMap[33]);
                },
                "kiwi_background.png": function kiwi_backgroundPng() {
                        return _require(_dependencyMap[34]);
                },
                "kiwi_yellow_dot.png": function kiwi_yellow_dotPng() {
                        return _require(_dependencyMap[35]);
                },
                "lamp_off_background.jpg": function lamp_off_backgroundJpg() {
                        return _require(_dependencyMap[36]);
                },
                "light_ct_scene_selected.png": function light_ct_scene_selectedPng() {
                        return _require(_dependencyMap[37]);
                },
                "menu_advanced_setting_normal.png": function menu_advanced_setting_normalPng() {
                        return _require(_dependencyMap[38]);
                },
                "menu_collection_black.png": function menu_collection_blackPng() {
                        return _require(_dependencyMap[39]);
                },
                "menu_collection_normal.png": function menu_collection_normalPng() {
                        return _require(_dependencyMap[40]);
                },
                "menu_collection_pressed.png": function menu_collection_pressedPng() {
                        return _require(_dependencyMap[41]);
                },
                "menu_color_normal.png": function menu_color_normalPng() {
                        return _require(_dependencyMap[42]);
                },
                "menu_color_pick.png": function menu_color_pickPng() {
                        return _require(_dependencyMap[43]);
                },
                "menu_color_pressed.png": function menu_color_pressedPng() {
                        return _require(_dependencyMap[44]);
                },
                "menu_ct_normal.png": function menu_ct_normalPng() {
                        return _require(_dependencyMap[45]);
                },
                "menu_ct_pressed.png": function menu_ct_pressedPng() {
                        return _require(_dependencyMap[46]);
                },
                "menu_delay_disable.png": function menu_delay_disablePng() {
                        return _require(_dependencyMap[47]);
                },
                "menu_delay_normal.png": function menu_delay_normalPng() {
                        return _require(_dependencyMap[48]);
                },
                "menu_delay_selected.png": function menu_delay_selectedPng() {
                        return _require(_dependencyMap[49]);
                },
                "menu_fav_normal.png": function menu_fav_normalPng() {
                        return _require(_dependencyMap[50]);
                },
                "menu_fav_pressed.png": function menu_fav_pressedPng() {
                        return _require(_dependencyMap[51]);
                },
                "menu_flow_normal.png": function menu_flow_normalPng() {
                        return _require(_dependencyMap[52]);
                },
                "menu_flow_pressed.png": function menu_flow_pressedPng() {
                        return _require(_dependencyMap[53]);
                },
                "menu_mode_normal.png": function menu_mode_normalPng() {
                        return _require(_dependencyMap[54]);
                },
                "menu_mode_pressed.png": function menu_mode_pressedPng() {
                        return _require(_dependencyMap[55]);
                },
                "menu_more_normal.png": function menu_more_normalPng() {
                        return _require(_dependencyMap[56]);
                },
                "menu_noctilucent_normal.png": function menu_noctilucent_normalPng() {
                        return _require(_dependencyMap[57]);
                },
                "menu_noctilucent_pressed.png": function menu_noctilucent_pressedPng() {
                        return _require(_dependencyMap[58]);
                },
                "menu_power_black.png": function menu_power_blackPng() {
                        return _require(_dependencyMap[59]);
                },
                "menu_power_normal.png": function menu_power_normalPng() {
                        return _require(_dependencyMap[60]);
                },
                "menu_power_pressed.png": function menu_power_pressedPng() {
                        return _require(_dependencyMap[61]);
                },
                "menu_setting.png": function menu_settingPng() {
                        return _require(_dependencyMap[62]);
                },
                "menu_setting_black.png": function menu_setting_blackPng() {
                        return _require(_dependencyMap[63]);
                },
                "menu_setting_pressed.png": function menu_setting_pressedPng() {
                        return _require(_dependencyMap[64]);
                },
                "menu_sunlight_normal.png": function menu_sunlight_normalPng() {
                        return _require(_dependencyMap[65]);
                },
                "menu_sunlight_pressed.png": function menu_sunlight_pressedPng() {
                        return _require(_dependencyMap[66]);
                },
                "menu_switch_black_pressed.png": function menu_switch_black_pressedPng() {
                        return _require(_dependencyMap[67]);
                },
                "menu_switch_normal.png": function menu_switch_normalPng() {
                        return _require(_dependencyMap[68]);
                },
                "menu_switch_pressed.png": function menu_switch_pressedPng() {
                        return _require(_dependencyMap[69]);
                },
                "miband_band.png": function miband_bandPng() {
                        return _require(_dependencyMap[70]);
                },
                "miband_broadcast_main.png": function miband_broadcast_mainPng() {
                        return _require(_dependencyMap[71]);
                },
                "miband_broadcast_main_ar.png": function miband_broadcast_main_arPng() {
                        return _require(_dependencyMap[72]);
                },
                "miband_broadcast_main_en.png": function miband_broadcast_main_enPng() {
                        return _require(_dependencyMap[73]);
                },
                "miband_broadcast_main_es.png": function miband_broadcast_main_esPng() {
                        return _require(_dependencyMap[74]);
                },
                "miband_broadcast_main_nl.png": function miband_broadcast_main_nlPng() {
                        return _require(_dependencyMap[75]);
                },
                "miband_broadcast_main_ru.png": function miband_broadcast_main_ruPng() {
                        return _require(_dependencyMap[76]);
                },
                "miband_control_cherry1s_large_icon.png": function miband_control_cherry1s_large_iconPng() {
                        return _require(_dependencyMap[77]);
                },
                "miband_control_large_icon.png": function miband_control_large_iconPng() {
                        return _require(_dependencyMap[78]);
                },
                "miband_control_luna_large_icon.png": function miband_control_luna_large_iconPng() {
                        return _require(_dependencyMap[79]);
                },
                "miband_search_loading.png": function miband_search_loadingPng() {
                        return _require(_dependencyMap[80]);
                },
                "miband_shake.png": function miband_shakePng() {
                        return _require(_dependencyMap[81]);
                },
                "no_miband_tip.png": function no_miband_tipPng() {
                        return _require(_dependencyMap[82]);
                },
                "open_delay_off_light_left.png": function open_delay_off_light_leftPng() {
                        return _require(_dependencyMap[83]);
                },
                "open_delay_off_light_right.png": function open_delay_off_light_rightPng() {
                        return _require(_dependencyMap[84]);
                },
                "panel_color.png": function panel_colorPng() {
                        return _require(_dependencyMap[85]);
                },
                "rabbit.png": function rabbitPng() {
                        return _require(_dependencyMap[86]);
                },
                "recommend_scene_placeholder.png": function recommend_scene_placeholderPng() {
                        return _require(_dependencyMap[87]);
                },
                "scene_babymode.jpg": function scene_babymodeJpg() {
                        return _require(_dependencyMap[88]);
                },
                "scene_birthday.jpg": function scene_birthdayJpg() {
                        return _require(_dependencyMap[89]);
                },
                "scene_bluelightblocking.jpg": function scene_bluelightblockingJpg() {
                        return _require(_dependencyMap[90]);
                },
                "scene_bright25.jpg": function scene_bright25Jpg() {
                        return _require(_dependencyMap[91]);
                },
                "scene_bright50.jpg": function scene_bright50Jpg() {
                        return _require(_dependencyMap[92]);
                },
                "scene_bright75.jpg": function scene_bright75Jpg() {
                        return _require(_dependencyMap[93]);
                },
                "scene_candleflicker.jpg": function scene_candleflickerJpg() {
                        return _require(_dependencyMap[94]);
                },
                "scene_concentration.jpg": function scene_concentrationJpg() {
                        return _require(_dependencyMap[95]);
                },
                "scene_cosyhome.jpg": function scene_cosyhomeJpg() {
                        return _require(_dependencyMap[96]);
                },
                "scene_datenight.jpg": function scene_datenightJpg() {
                        return _require(_dependencyMap[97]);
                },
                "scene_default.jpg": function scene_defaultJpg() {
                        return _require(_dependencyMap[98]);
                },
                "scene_dishes.jpg": function scene_dishesJpg() {
                        return _require(_dependencyMap[99]);
                },
                "scene_dressing.jpg": function scene_dressingJpg() {
                        return _require(_dependencyMap[100]);
                },
                "scene_festivefeast.jpg": function scene_festivefeastJpg() {
                        return _require(_dependencyMap[101]);
                },
                "scene_flashnotification.jpg": function scene_flashnotificationJpg() {
                        return _require(_dependencyMap[102]);
                },
                "scene_movie.jpg": function scene_movieJpg() {
                        return _require(_dependencyMap[103]);
                },
                "scene_nightlight.jpg": function scene_nightlightJpg() {
                        return _require(_dependencyMap[104]);
                },
                "scene_nightreading.jpg": function scene_nightreadingJpg() {
                        return _require(_dependencyMap[105]);
                },
                "scene_reading.jpg": function scene_readingJpg() {
                        return _require(_dependencyMap[106]);
                },
                "scene_reading_book.jpg": function scene_reading_bookJpg() {
                        return _require(_dependencyMap[107]);
                },
                "scene_romanticdate.jpg": function scene_romanticdateJpg() {
                        return _require(_dependencyMap[108]);
                },
                "scene_romanticevening.jpg": function scene_romanticeveningJpg() {
                        return _require(_dependencyMap[109]);
                },
                "scene_sunrise.jpg": function scene_sunriseJpg() {
                        return _require(_dependencyMap[110]);
                },
                "scene_sunset.jpg": function scene_sunsetJpg() {
                        return _require(_dependencyMap[111]);
                },
                "scene_teatime.jpg": function scene_teatimeJpg() {
                        return _require(_dependencyMap[112]);
                },
                "set_default_light.png": function set_default_lightPng() {
                        return _require(_dependencyMap[113]);
                },
                "setting_firmware.png": function setting_firmwarePng() {
                        return _require(_dependencyMap[114]);
                },
                "setting_icon_about.png": function setting_icon_aboutPng() {
                        return _require(_dependencyMap[115]);
                },
                "setting_icon_faq.png": function setting_icon_faqPng() {
                        return _require(_dependencyMap[116]);
                },
                "setting_icon_feedback.png": function setting_icon_feedbackPng() {
                        return _require(_dependencyMap[117]);
                },
                "setting_icon_miband.png": function setting_icon_mibandPng() {
                        return _require(_dependencyMap[118]);
                },
                "setting_icon_night_light.png": function setting_icon_night_lightPng() {
                        return _require(_dependencyMap[119]);
                },
                "setting_icon_remote_control.png": function setting_icon_remote_controlPng() {
                        return _require(_dependencyMap[120]);
                },
                "setting_icon_schedules.png": function setting_icon_schedulesPng() {
                        return _require(_dependencyMap[121]);
                },
                "setting_icon_time.png": function setting_icon_timePng() {
                        return _require(_dependencyMap[122]);
                },
                "setting_name.png": function setting_namePng() {
                        return _require(_dependencyMap[123]);
                },
                "setting_unpair.png": function setting_unpairPng() {
                        return _require(_dependencyMap[124]);
                },
                "smart_switch_detail.png": function smart_switch_detailPng() {
                        return _require(_dependencyMap[125]);
                },
                "sub_arrow.png": function sub_arrowPng() {
                        return _require(_dependencyMap[126]);
                },
                "success.png": function successPng() {
                        return _require(_dependencyMap[127]);
                },
                "sunshine_pick_board.png": function sunshine_pick_boardPng() {
                        return _require(_dependencyMap[128]);
                },
                "test_icon.png": function test_iconPng() {
                        return _require(_dependencyMap[129]);
                },
                "title_bar_back_white.png": function title_bar_back_whitePng() {
                        return _require(_dependencyMap[130]);
                },
                "title_save_white_normal.png": function title_save_white_normalPng() {
                        return _require(_dependencyMap[131]);
                },
                "title_save_white_pressed.png": function title_save_white_pressedPng() {
                        return _require(_dependencyMap[132]);
                },
                "tortoise.png": function tortoisePng() {
                        return _require(_dependencyMap[133]);
                },
                "touch_dot.png": function touch_dotPng() {
                        return _require(_dependencyMap[134]);
                },
                "touch_panel_detail.png": function touch_panel_detailPng() {
                        return _require(_dependencyMap[135]);
                },
                "user_guide_horizon.png": function user_guide_horizonPng() {
                        return _require(_dependencyMap[136]);
                },
                "user_guide_img.png": function user_guide_imgPng() {
                        return _require(_dependencyMap[137]);
                },
                "user_guide_vertical.png": function user_guide_verticalPng() {
                        return _require(_dependencyMap[138]);
                }
        };
},10025,[10028,10031,10034,10037,10040,10043,10046,10049,10052,10055,10058,10061,10064,10067,10070,10073,10076,10079,10082,10085,10088,10091,10094,10097,10100,10103,10106,10109,10112,10115,10118,10121,10124,10127,10130,10133,10136,10139,10142,10145,10148,10151,10154,10157,10160,10163,10166,10169,10172,10175,10178,10181,10184,10187,10190,10193,10196,10199,10202,10205,10208,10211,10214,10217,10220,10223,10226,10229,10232,10235,10238,10241,10244,10247,10250,10253,10256,10259,10262,10265,10268,10271,10274,10277,10280,10283,10286,10289,10292,10295,10298,10301,10304,10307,10310,10313,10316,10319,10322,10325,10328,10331,10334,10337,10340,10343,10346,10349,10352,10355,10358,10361,10364,10367,10370,10373,10376,10379,10382,10385,10388,10391,10394,10397,10400,10403,10406,10409,10412,10415,10418,10421,10424,10427,10430,10433,10436,10439,10442],"projects/com.yeelight.wifi.color1/Assets/images/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 110,
    "height": 110,
    "scales": [1],
    "hash": "49a80b155a842329c884f4ca04305e84",
    "name": "MibandNotFound",
    "type": "png"
  });
},10028,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/MibandNotFound.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "1f8a100d6f455dd3408b177e4a1da180",
    "name": "all_flow_circle",
    "type": "png"
  });
},10031,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/all_flow_circle.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 100,
    "height": 100,
    "scales": [1],
    "hash": "8cdd8d9f3957e3a002570cbaf0d8dbbd",
    "name": "btn_settings",
    "type": "png"
  });
},10034,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/btn_settings.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 152,
    "height": 152,
    "scales": [1],
    "hash": "f1e6a8af8214bb09f4424447f5570fae",
    "name": "color_edit_icon",
    "type": "png"
  });
},10037,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_edit_icon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 1920,
    "scales": [1],
    "hash": "a5d5903f7b3b283473381ec236ad96d5",
    "name": "color_mask",
    "type": "png"
  });
},10040,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_mask.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 858,
    "height": 10,
    "scales": [1],
    "hash": "551abb743cd17b6f7111b3002d0b4ff5",
    "name": "color_pick_board",
    "type": "png"
  });
},10043,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_pick_board.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 44,
    "height": 34,
    "scales": [1],
    "hash": "f89725aa35035a41c42fb926280662fb",
    "name": "color_point",
    "type": "png"
  });
},10046,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_point.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 1080,
		"height": 1080,
		"scales": [1],
		"hash": "a146006a123f087c8a026df70c91623e",
		"name": "color_select_panel1",
		"type": "png"
	});
},10049,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_select_panel1.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 1080,
		"height": 1080,
		"scales": [1],
		"hash": "4f5a45cb52e9142cd0c6f4571aba9dad",
		"name": "color_select_panel3",
		"type": "png"
	});
},10052,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/color_select_panel3.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 1920,
    "scales": [1],
    "hash": "00daf0daaf7f809154e0651ff9282fca",
    "name": "ct_mask",
    "type": "png"
  });
},10055,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/ct_mask.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 1080,
		"height": 575,
		"scales": [1],
		"hash": "7f7f2380fc3783e5d6212df9e4e2b4a9",
		"name": "default_state",
		"type": "png"
	});
},10058,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/default_state.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c0e0f911dbe352a2475ad6f020751ccf",
    "name": "delay_time_save",
    "type": "png"
  });
},10061,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/delay_time_save.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "a997d270ede1a13807dcafa9e66d81dc",
    "name": "fail",
    "type": "png"
  });
},10064,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/fail.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 750,
    "height": 1624,
    "scales": [1],
    "hash": "9d4b38b923d139da57b13e497a222b85",
    "name": "flow_bg",
    "type": "png"
  });
},10067,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/flow_bg.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 1920,
    "scales": [1],
    "hash": "a5d5903f7b3b283473381ec236ad96d5",
    "name": "flow_mask",
    "type": "png"
  });
},10070,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/flow_mask.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 1080,
		"height": 1920,
		"scales": [1],
		"hash": "3c90dde406b882afc5fd2d3eac00435e",
		"name": "global_background",
		"type": "png"
	});
},10073,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/global_background.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 884,
    "scales": [1],
    "hash": "6891d0ad060cbd83aab312f18480c39e",
    "name": "icon_favorite_top",
    "type": "png"
  });
},10076,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_favorite_top.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 2,
    "height": 17,
    "scales": [1],
    "hash": "66ad0ea96926bf9a82f4edc08172923d",
    "name": "icon_slider_delay_off_time_scale",
    "type": "png"
  });
},10079,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_slider_delay_off_time_scale.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 50,
    "height": 50,
    "scales": [1],
    "hash": "e0c2c958c008f1b80ef945a3b5a65587",
    "name": "icon_slider_thumb_circle",
    "type": "png"
  });
},10082,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_slider_thumb_circle.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 46,
    "height": 62,
    "scales": [1],
    "hash": "91bc820098c987eed567fd85b4e370c3",
    "name": "icon_slider_thumb_delay_off_time",
    "type": "png"
  });
},10085,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_slider_thumb_delay_off_time.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "fd4e9c562ebc2fdaf24639ab2a20f8c2",
    "name": "icon_yeelight_remote_ct_normal",
    "type": "png"
  });
},10088,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_ct_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "79434b049bc4a4cdb1355116d5dc7936",
    "name": "icon_yeelight_remote_ct_pressed",
    "type": "png"
  });
},10091,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_ct_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 151,
    "scales": [1],
    "hash": "700e9b0a781d40332e55562420eee6ad",
    "name": "icon_yeelight_remote_light_decrease_normal",
    "type": "png"
  });
},10094,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_light_decrease_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 151,
    "scales": [1],
    "hash": "aed1734c038bc52aab7a6ab9afbcfdae",
    "name": "icon_yeelight_remote_light_decrease_pressed",
    "type": "png"
  });
},10097,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_light_decrease_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 151,
    "scales": [1],
    "hash": "2cd767d7146d67650640c6689e3d8bde",
    "name": "icon_yeelight_remote_light_increase_normal",
    "type": "png"
  });
},10100,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_light_increase_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 151,
    "scales": [1],
    "hash": "f34de5281ea809d60596963b86b74115",
    "name": "icon_yeelight_remote_light_increase_pressed",
    "type": "png"
  });
},10103,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_light_increase_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "872c1cd41656ac5312f9df9d14a6a7d4",
    "name": "icon_yeelight_remote_mode-pressed",
    "type": "png"
  });
},10106,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_mode-pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "8881fa01b9e4f8fa7850a4212b4b2fb4",
    "name": "icon_yeelight_remote_mode_normal",
    "type": "png"
  });
},10109,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_mode_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "e2ddce5c848d0641a0e45b8069ef513a",
    "name": "icon_yeelight_remote_off_normal",
    "type": "png"
  });
},10112,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_off_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "a0dd2a406f99bf7a7a75fcedbfdd8d3e",
    "name": "icon_yeelight_remote_off_pressed",
    "type": "png"
  });
},10115,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_off_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "c9e3acba0f1022b07da167d384781f5c",
    "name": "icon_yeelight_remote_on_normal",
    "type": "png"
  });
},10118,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_on_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 134,
    "height": 134,
    "scales": [1],
    "hash": "7bef222b44af22948e76dbca329d46a5",
    "name": "icon_yeelight_remote_on_pressed",
    "type": "png"
  });
},10121,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/icon_yeelight_remote_on_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 58,
    "height": 53,
    "scales": [1],
    "hash": "ffb5e3e66fb6f5960c7ae93b1a38d01b",
    "name": "indicator_add",
    "type": "png"
  });
},10124,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/indicator_add.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 58,
    "height": 53,
    "scales": [1],
    "hash": "760086867f7504a0e5d14f82b78c704a",
    "name": "indicator_reduce",
    "type": "png"
  });
},10127,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/indicator_reduce.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 542,
    "height": 1475,
    "scales": [1],
    "hash": "d6d4e25688beb0fb06bba1f06bcf350c",
    "name": "kiwi_background",
    "type": "png"
  });
},10130,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/kiwi_background.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 20,
    "height": 20,
    "scales": [1],
    "hash": "6ae5e78e3071dfcf6d938d36172c64a1",
    "name": "kiwi_yellow_dot",
    "type": "png"
  });
},10133,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/kiwi_yellow_dot.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 1920,
    "scales": [1],
    "hash": "fa86aa61bc8f4e8f1883231149a6948c",
    "name": "lamp_off_background",
    "type": "jpg"
  });
},10136,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/lamp_off_background.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 172,
    "height": 172,
    "scales": [1],
    "hash": "52680e3ef6e5951b6f2a482b15e7bdd2",
    "name": "light_ct_scene_selected",
    "type": "png"
  });
},10139,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/light_ct_scene_selected.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "dc36c19a1c7dd783a53e1811b3f93854",
    "name": "menu_advanced_setting_normal",
    "type": "png"
  });
},10142,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_advanced_setting_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "1012547cfbc0071ab124745667af032b",
    "name": "menu_collection_black",
    "type": "png"
  });
},10145,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_collection_black.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "ac28f91471f4b63f67854b63764c4ff6",
    "name": "menu_collection_normal",
    "type": "png"
  });
},10148,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_collection_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "8926f6bc2b84ace1d3c8e549b9870129",
    "name": "menu_collection_pressed",
    "type": "png"
  });
},10151,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_collection_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "65b6ddb9a28ea8966f35ca1606e23b3d",
    "name": "menu_color_normal",
    "type": "png"
  });
},10154,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_color_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "b3e726797edca2575a72d54ef51c0668",
    "name": "menu_color_pick",
    "type": "png"
  });
},10157,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_color_pick.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "a296354bf91be93c1ce2dbeac21e0edb",
    "name": "menu_color_pressed",
    "type": "png"
  });
},10160,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_color_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "89120fe65ab34da13b609e7051b9224d",
    "name": "menu_ct_normal",
    "type": "png"
  });
},10163,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_ct_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "225837d34aade41b4700b2a431725105",
    "name": "menu_ct_pressed",
    "type": "png"
  });
},10166,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_ct_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "9dea0e6bf20f81b59e85006517f4b177",
    "name": "menu_delay_disable",
    "type": "png"
  });
},10169,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_delay_disable.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "128b74fae7cf5aa4c87a08cc592ca33b",
    "name": "menu_delay_normal",
    "type": "png"
  });
},10172,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_delay_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "f08df651e56b2036cffd206f1eadfd37",
    "name": "menu_delay_selected",
    "type": "png"
  });
},10175,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_delay_selected.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "cb537f45a96407d5969f719c941bf964",
    "name": "menu_fav_normal",
    "type": "png"
  });
},10178,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_fav_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "c627f3f77592f16633100f96d73451bd",
    "name": "menu_fav_pressed",
    "type": "png"
  });
},10181,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_fav_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "63189ed2851514e5b10627e3ee58e342",
    "name": "menu_flow_normal",
    "type": "png"
  });
},10184,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_flow_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "6a31acfa0eab4dff3ce45e9d98270021",
    "name": "menu_flow_pressed",
    "type": "png"
  });
},10187,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_flow_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 174,
		"height": 174,
		"scales": [1],
		"hash": "bad157d3ac5145b3188e9f962d0a4b9b",
		"name": "menu_mode_normal",
		"type": "png"
	});
},10190,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_mode_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "a015577cc4e00f40da9a7d706d49fdb5",
    "name": "menu_mode_pressed",
    "type": "png"
  });
},10193,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_mode_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 200,
    "height": 164,
    "scales": [1],
    "hash": "36c2f1a5e2688b7374363deb3aa881a5",
    "name": "menu_more_normal",
    "type": "png"
  });
},10196,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_more_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "ad2d11bad44bd66ac1fdd520e66ac583",
    "name": "menu_noctilucent_normal",
    "type": "png"
  });
},10199,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_noctilucent_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "14078e3f9b2ba37f5c2cf2a84bb40418",
    "name": "menu_noctilucent_pressed",
    "type": "png"
  });
},10202,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_noctilucent_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "d9ee1aea44f4d562320d66c4cb3bec5b",
    "name": "menu_power_black",
    "type": "png"
  });
},10205,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_power_black.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 174,
		"height": 176,
		"scales": [1],
		"hash": "cdaeb66ac6f9d22325b09b04573a4b7e",
		"name": "menu_power_normal",
		"type": "png"
	});
},10208,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_power_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 176,
    "scales": [1],
    "hash": "9440cf056356aa13de12a4d2446f9833",
    "name": "menu_power_pressed",
    "type": "png"
  });
},10211,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_power_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 100,
    "height": 100,
    "scales": [1],
    "hash": "8cdd8d9f3957e3a002570cbaf0d8dbbd",
    "name": "menu_setting",
    "type": "png"
  });
},10214,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_setting.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 100,
    "height": 100,
    "scales": [1],
    "hash": "87148931405657a99ef5e3e077c9ad98",
    "name": "menu_setting_black",
    "type": "png"
  });
},10217,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_setting_black.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "a06bf9bd7df3103ba75bebb3fc857d21",
    "name": "menu_setting_pressed",
    "type": "png"
  });
},10220,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_setting_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "132025be68908209c938f49a19c98676",
    "name": "menu_sunlight_normal",
    "type": "png"
  });
},10223,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_sunlight_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "0540a294463c20947fcc389486d17e2f",
    "name": "menu_sunlight_pressed",
    "type": "png"
  });
},10226,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_sunlight_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 173,
    "height": 174,
    "scales": [1],
    "hash": "e574f19a68c10aff3b0bb2e930fbdc61",
    "name": "menu_switch_black_pressed",
    "type": "png"
  });
},10229,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_switch_black_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "14e97b96966e5289025954c529563930",
    "name": "menu_switch_normal",
    "type": "png"
  });
},10232,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_switch_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 174,
    "height": 174,
    "scales": [1],
    "hash": "894bb9c6396ace3eb936b5f722a871c6",
    "name": "menu_switch_pressed",
    "type": "png"
  });
},10235,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/menu_switch_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 221,
    "height": 86,
    "scales": [1],
    "hash": "70aaad82c1d4c9958cf127fe22b21ad2",
    "name": "miband_band",
    "type": "png"
  });
},10238,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_band.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "447d3b48baffea92791f3c53ce4b5687",
    "name": "miband_broadcast_main",
    "type": "png"
  });
},10241,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "8e8b820d5f89c577f81dd645584d0432",
    "name": "miband_broadcast_main_ar",
    "type": "png"
  });
},10244,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main_ar.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "86e2f7c6afa9038de9e87824f6896b32",
    "name": "miband_broadcast_main_en",
    "type": "png"
  });
},10247,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main_en.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "560e6536f6a6e5f3441a25c3fbc564b5",
    "name": "miband_broadcast_main_es",
    "type": "png"
  });
},10250,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main_es.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "b8c38124c4b7c4988445f417d86a72f0",
    "name": "miband_broadcast_main_nl",
    "type": "png"
  });
},10253,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main_nl.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 800,
    "height": 1389,
    "scales": [1],
    "hash": "128221fa4d1dd7c2de24ff3d02251536",
    "name": "miband_broadcast_main_ru",
    "type": "png"
  });
},10256,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_broadcast_main_ru.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 774,
    "scales": [1],
    "hash": "5b06d60213af07df297a4b29aa1611cb",
    "name": "miband_control_cherry1s_large_icon",
    "type": "png"
  });
},10259,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_control_cherry1s_large_icon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 774,
    "scales": [1],
    "hash": "edb0908486e8bcc3ff389ec5fc283e72",
    "name": "miband_control_large_icon",
    "type": "png"
  });
},10262,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_control_large_icon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 1080,
    "height": 775,
    "scales": [1],
    "hash": "2a5e90837551bdf9b511154cd6d87ca0",
    "name": "miband_control_luna_large_icon",
    "type": "png"
  });
},10265,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_control_luna_large_icon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 550,
    "height": 550,
    "scales": [1],
    "hash": "06ef7b1c5c5a1144f29e04636687ed6a",
    "name": "miband_search_loading",
    "type": "png"
  });
},10268,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_search_loading.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 400,
    "height": 935,
    "scales": [1],
    "hash": "c940a441f0eea245ccc759862049a4b3",
    "name": "miband_shake",
    "type": "png"
  });
},10271,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/miband_shake.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 188,
    "height": 334,
    "scales": [1],
    "hash": "778d3e53885d30631360d3e32e9c942e",
    "name": "no_miband_tip",
    "type": "png"
  });
},10274,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/no_miband_tip.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "346846a1534aa505f0e6847ef3f90104",
    "name": "open_delay_off_light_left",
    "type": "png"
  });
},10277,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/open_delay_off_light_left.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "1ca7a3e3193f0d71749ff921f496984b",
    "name": "open_delay_off_light_right",
    "type": "png"
  });
},10280,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/open_delay_off_light_right.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 512,
		"height": 512,
		"scales": [1],
		"hash": "7fdc5ce4dff009127d2d3f4550d77faf",
		"name": "panel_color",
		"type": "png"
	});
},10283,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/panel_color.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 66,
    "height": 55,
    "scales": [1],
    "hash": "3b37d63d24d19fc6bd0e6c2bbfc3b78a",
    "name": "rabbit",
    "type": "png"
  });
},10286,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/rabbit.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 220,
    "height": 162,
    "scales": [1],
    "hash": "85ce1b04a88945446496176d2390dfd8",
    "name": "recommend_scene_placeholder",
    "type": "png"
  });
},10289,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/recommend_scene_placeholder.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "c9d5b7f8db5074722db6e68e5c00a523",
    "name": "scene_babymode",
    "type": "jpg"
  });
},10292,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_babymode.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "a88d6ddeb91234cf9b1247f94272301a",
    "name": "scene_birthday",
    "type": "jpg"
  });
},10295,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_birthday.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "555032f692a66fd563859768251d57d4",
    "name": "scene_bluelightblocking",
    "type": "jpg"
  });
},10298,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_bluelightblocking.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "30b28244099c9c20ec9022cfe657ec3c",
		"name": "scene_bright25",
		"type": "jpg"
	});
},10301,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_bright25.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "894481fffc723201f45641253f2aa697",
    "name": "scene_bright50",
    "type": "jpg"
  });
},10304,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_bright50.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "18ee5a746b0e4a0d6cd04da4994a51de",
		"name": "scene_bright75",
		"type": "jpg"
	});
},10307,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_bright75.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "c558173173389f894725ef116c15a470",
		"name": "scene_candleflicker",
		"type": "jpg"
	});
},10310,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_candleflicker.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "3e892efa0a1d12a77cabee8b6b80d81a",
		"name": "scene_concentration",
		"type": "jpg"
	});
},10313,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_concentration.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "dd5fdaa37cd1649bfdbd5f8824d565bc",
    "name": "scene_cosyhome",
    "type": "jpg"
  });
},10316,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_cosyhome.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "f18414451b9c6e73b947b11048ffe522",
    "name": "scene_datenight",
    "type": "jpg"
  });
},10319,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_datenight.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "40004b0f9480dac879258cb5a9ac5a75",
		"name": "scene_default",
		"type": "jpg"
	});
},10322,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_default.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "0f40fbeb1e38f07fe89baca4e8ea7c73",
    "name": "scene_dishes",
    "type": "jpg"
  });
},10325,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_dishes.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "a57945661f94d69aa019f3d499396c92",
		"name": "scene_dressing",
		"type": "jpg"
	});
},10328,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_dressing.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "eeaf400acf0db11fcd9b7cef15688250",
    "name": "scene_festivefeast",
    "type": "jpg"
  });
},10331,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_festivefeast.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "6619f2f9bbb0bebf7780df73eefd38ef",
    "name": "scene_flashnotification",
    "type": "jpg"
  });
},10334,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_flashnotification.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "d3aa2d63d7f1fc3f8a6abaca563f8609",
    "name": "scene_movie",
    "type": "jpg"
  });
},10337,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_movie.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "fa243200a6f049cb375dd99f801c8d7a",
    "name": "scene_nightlight",
    "type": "jpg"
  });
},10340,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_nightlight.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "346df126a5784b1fe4a8ed66c87bd64d",
    "name": "scene_nightreading",
    "type": "jpg"
  });
},10343,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_nightreading.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "6402dab1467efe27edfa25f019f01b63",
		"name": "scene_reading",
		"type": "jpg"
	});
},10346,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_reading.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 720,
		"height": 346,
		"scales": [1],
		"hash": "8dbcba993e05eadfed64ddf2bd1111ce",
		"name": "scene_reading_book",
		"type": "jpg"
	});
},10349,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_reading_book.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "3fca5a0172fe6659a3d890b1bd7ce22b",
    "name": "scene_romanticdate",
    "type": "jpg"
  });
},10352,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_romanticdate.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "2e3f47a2e80c26a83f18fe299f867a47",
    "name": "scene_romanticevening",
    "type": "jpg"
  });
},10355,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_romanticevening.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "5a0a932dac23958cfe36c07af4bbd673",
    "name": "scene_sunrise",
    "type": "jpg"
  });
},10358,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_sunrise.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "97b8b92ef6aabfbf3bcd384ea88e5caf",
    "name": "scene_sunset",
    "type": "jpg"
  });
},10361,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_sunset.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 720,
    "height": 346,
    "scales": [1],
    "hash": "380ba6b96e497687e19c0e64f5701654",
    "name": "scene_teatime",
    "type": "jpg"
  });
},10364,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/scene_teatime.jpg");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 824,
    "height": 504,
    "scales": [1],
    "hash": "89939728d6d8cbdb90dd33e332095bbb",
    "name": "set_default_light",
    "type": "png"
  });
},10367,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/set_default_light.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "b78cbe1e75d11a9ad1c6aba89e242c8e",
    "name": "setting_firmware",
    "type": "png"
  });
},10370,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_firmware.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "da0e3736d783bb3918f8f9dfd7e5ae48",
    "name": "setting_icon_about",
    "type": "png"
  });
},10373,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_about.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "ae37392ab3cd888498e7f9b29a2044fb",
    "name": "setting_icon_faq",
    "type": "png"
  });
},10376,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_faq.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "e99ad9e35926bbaeeab9afa6e19a81d0",
    "name": "setting_icon_feedback",
    "type": "png"
  });
},10379,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_feedback.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "1a6593cae7e7e7f3e5b3e7411ca5fd3d",
    "name": "setting_icon_miband",
    "type": "png"
  });
},10382,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_miband.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "a238293610653054d6da21f2cf098dbb",
    "name": "setting_icon_night_light",
    "type": "png"
  });
},10385,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_night_light.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "ee1373ce0bf49d2ea509c4467af4db27",
    "name": "setting_icon_remote_control",
    "type": "png"
  });
},10388,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_remote_control.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "a2ca660dbdfd7cbeca642d83f164ace7",
    "name": "setting_icon_schedules",
    "type": "png"
  });
},10391,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_schedules.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "dd4ceb0632183db4559c62ff2d46a0d2",
    "name": "setting_icon_time",
    "type": "png"
  });
},10394,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_icon_time.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "917080c40a4938b27f1110e9b3b84f9e",
    "name": "setting_name",
    "type": "png"
  });
},10397,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_name.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 70,
    "height": 70,
    "scales": [1],
    "hash": "5ba08e03c3e598693a29c6bd704fa7e5",
    "name": "setting_unpair",
    "type": "png"
  });
},10400,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/setting_unpair.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 945,
    "height": 600,
    "scales": [1],
    "hash": "cf852f03bcfc7d6d17c741b697608f24",
    "name": "smart_switch_detail",
    "type": "png"
  });
},10403,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/smart_switch_detail.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 22,
    "height": 41,
    "scales": [1],
    "hash": "2a12f112e01f0379378b28ee14a04959",
    "name": "sub_arrow",
    "type": "png"
  });
},10406,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/sub_arrow.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "cf7d0a82baf7e67b385e21dd72ce58fe",
    "name": "success",
    "type": "png"
  });
},10409,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/success.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 859,
    "height": 12,
    "scales": [1],
    "hash": "0afd99591ba44f9568548ceae81ee310",
    "name": "sunshine_pick_board",
    "type": "png"
  });
},10412,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/sunshine_pick_board.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "12378dc70a18da438cd84422a9c450c4",
    "name": "test_icon",
    "type": "png"
  });
},10415,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/test_icon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = _require(_dependencyMap[0]).registerAsset({
		"__packager_asset": true,
		"httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
		"width": 84,
		"height": 84,
		"scales": [1],
		"hash": "447dc43080f4988e632265a3fa431cae",
		"name": "title_bar_back_white",
		"type": "png"
	});
},10418,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/title_bar_back_white.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e7e374ef6fe3f77c8de1d78d61370a03",
    "name": "title_save_white_normal",
    "type": "png"
  });
},10421,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/title_save_white_normal.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "edc25d1dd7e7a80437040e356a9bbac9",
    "name": "title_save_white_pressed",
    "type": "png"
  });
},10424,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/title_save_white_pressed.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 66,
    "height": 55,
    "scales": [1],
    "hash": "5fd90f37f7591054333272219d677b89",
    "name": "tortoise",
    "type": "png"
  });
},10427,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/tortoise.png");
__d(function (global, _require, module, exports, _dependencyMap) {
   module.exports = _require(_dependencyMap[0]).registerAsset({
      "__packager_asset": true,
      "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
      "width": 358,
      "height": 358,
      "scales": [1],
      "hash": "a46373d1aa997af175decda89de6a9f8",
      "name": "touch_dot",
      "type": "png"
   });
},10430,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/touch_dot.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 945,
    "height": 969,
    "scales": [1],
    "hash": "18fcae754534c5f5de18a73a90030dcf",
    "name": "touch_panel_detail",
    "type": "png"
  });
},10433,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/touch_panel_detail.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 351,
    "height": 353,
    "scales": [1],
    "hash": "f9b23b27da805f902b8f1a2a95958cb6",
    "name": "user_guide_horizon",
    "type": "png"
  });
},10436,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/user_guide_horizon.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 486,
    "height": 486,
    "scales": [1],
    "hash": "a3ae72d698ab6c2b205b6b82009e1e5e",
    "name": "user_guide_img",
    "type": "png"
  });
},10439,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/user_guide_img.png");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Assets/images/images",
    "width": 351,
    "height": 353,
    "scales": [1],
    "hash": "bdeab6d8a66a46714ec77c7322270fe3",
    "name": "user_guide_vertical",
    "type": "png"
  });
},10442,[10420],"projects/com.yeelight.wifi.color1/Assets/images/images/user_guide_vertical.png");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _CommonYeelightModules = _require(_dependencyMap[0]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var packageInfo = _require(_dependencyMap[1]);

    var YLDevice = _CommonYeelightModules2.default.YLDevice;

    var PluginInfo = function () {
        function PluginInfo() {
            babelHelpers.classCallCheck(this, PluginInfo);
        }

        babelHelpers.createClass(PluginInfo, [{
            key: "getInfoByKey",
            value: function getInfoByKey(key) {
                var defaultModel = this.defaultModel;
                var deviceData = this.valueOfKeyContainsModel(YLDevice.deviceModel) || {};

                if (deviceData && deviceData[key]) {
                    return deviceData[key];
                } else if (packageInfo[defaultModel] && packageInfo[defaultModel][key]) {
                    return packageInfo[defaultModel][key];
                } else {
                    return null;
                }
            }
        }, {
            key: "images",
            value: function images(key) {
                var imageJson = this.imageJson;

                if (imageJson && imageJson[key]) {
                    return imageJson[key];
                } else {
                    return key;
                }
            }
        }, {
            key: "band",
            value: function band() {
                return this.getInfoByKey("band");
            }
        }, {
            key: "getPrivacyPath",
            value: function getPrivacyPath() {
                var agreementPath = this.getInfoByKey("agrementPath");
                return agreementPath && agreementPath['privacyPath'];
            }
        }, {
            key: "getLicensePath",
            value: function getLicensePath() {
                var agreementPath = this.getInfoByKey("agrementPath");
                return agreementPath && agreementPath['licensePath'];
            }
        }, {
            key: "getPowerOffSmooth",
            value: function getPowerOffSmooth() {
                var apiParams = this.getInfoByKey("apiParams");
                return apiParams && apiParams["power"] && apiParams["power"]["powerOffSmooth"];
            }
        }, {
            key: "valueOfKeyContainsModel",
            value: function valueOfKeyContainsModel(model) {
                for (var key in packageInfo) {
                    if (key === model) {
                        return packageInfo[key];
                    } else {
                        var models = key.split('|');

                        if (models.includes(model)) {
                            return packageInfo[key];
                        }
                    }
                }

                return;
            }
        }, {
            key: "packageInfo",
            get: function get() {
                return packageInfo;
            }
        }, {
            key: "deviceJson",
            get: function get() {
                return this.getInfoByKey("device");
            }
        }, {
            key: "settingMenu",
            get: function get() {
                return this.getInfoByKey("settingMenu");
            }
        }, {
            key: "subModelCapability",
            get: function get() {
                return this.getInfoByKey('subModelCapability');
            }
        }, {
            key: "homeKit",
            get: function get() {
                return this.getInfoByKey('homeKit');
            }
        }, {
            key: "maxCT",
            get: function get() {
                var deviceJson = this.deviceJson;

                if (deviceJson) {
                    return deviceJson["maxCT"];
                } else {
                    return 6500;
                }
            }
        }, {
            key: "minCT",
            get: function get() {
                var deviceJson = this.deviceJson;

                if (deviceJson) {
                    return deviceJson["minCT"];
                } else {
                    return 2700;
                }
            }
        }, {
            key: "imageJson",
            get: function get() {
                return this.getInfoByKey("images");
            }
        }, {
            key: "defaultModel",
            get: function get() {
                return "yeelink.light.default";
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new PluginInfo();
                }

                return this.instance;
            }
        }]);
        return PluginInfo;
    }();

    module.exports = PluginInfo.getInstance();
},10445,[10007,10448],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/PluginInfo.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = {
        "faq_url": "https://www.yeelight.com/faq/app/answer/wonder.php",
        "bind_remote_url": "https://www.yeelight.com/faq/app/introduce/{0}/intro-rc-bslamp.html",
        "default_light_background_image": "default_state_cycle.png",
        "miband_control_large_icon": "miband_control_cycle_large_icon.png",
        "model": "yeelink.light.color1|yeelink.light.color2|yeelink.light.color4|yeelink.light.strip1|yeelink.light.color6|yeelink.light.color8",
        "yeelink.light.color1": {
            "device": {
                "supportInitPowerOptionMinVersion": Number.MAX_VALUE,
                "setPowerOnAndChangeModeVersion": 48
            }
        },
        "yeelink.light.color2": {
            "homeKit": {
                "homeKitType": "2"
            }
        },
        "yeelink.light.strip1": {
            "device": {
                "supportInitPowerOptionMinVersion": 39,
                "setPowerOnAndChangeModeVersion": 33
            }
        },
        "yeelink.light.color4|yeelink.light.color6|yeelink.light.color8": {
            "settingMenu": {
                "specificMenuIdentifiers": ["settingTime", "settingSchedules", "settingDefaultLight", "settingSmartSwitch"]
            }
        },
        "yeelink.light.default": {
            "device": {
                "minCT": 1700,
                "maxCT": 6500
            }
        }
    };
},10448,[],"projects/com.yeelight.wifi.color1/pluginInfo.json");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "color_flow.mp4": function color_flowMp4() {
                        return _require(_dependencyMap[0]);
                }
        };
},10451,[10454],"projects/com.yeelight.wifi.color1/Resources/images/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/images/images",
    "scales": [1],
    "hash": "3e587eaf9f07e972bfd98df599e50aa4",
    "name": "color_flow",
    "type": "mp4"
  });
},10454,[10420],"projects/com.yeelight.wifi.color1/Resources/images/images/color_flow.mp4");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var CommonYeelightModules = _require(_dependencyMap[2]);

	var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
	var CLProgressView = CommonYeelightModules.CLProgressView,
	    CLImage = CommonYeelightModules.CLImage;
	var BrightnessIndicatorDataSource = CommonYeelightModulesDataSource.BrightnessIndicatorDataSource;

	var BrightnessIndicator = function (_Component) {
		babelHelpers.inherits(BrightnessIndicator, _Component);

		function BrightnessIndicator(props) {
			babelHelpers.classCallCheck(this, BrightnessIndicator);

			var _this = babelHelpers.possibleConstructorReturn(this, (BrightnessIndicator.__proto__ || Object.getPrototypeOf(BrightnessIndicator)).call(this, props));

			_this.state = {
				progress: _this.props.progress
			};
			return _this;
		}

		babelHelpers.createClass(BrightnessIndicator, [{
			key: "componentWillReceiveProps",
			value: function componentWillReceiveProps(nextProps) {
				if (nextProps.progress != this.state.progress) {
					this.setState({
						progress: nextProps.progress
					});
				}
			}
		}, {
			key: "progressUpdate",
			value: function progressUpdate(value) {
				this.setState({
					progress: value
				});
			}
		}, {
			key: "getProgressStyle",
			value: function getProgressStyle() {
				var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(styles.progress || {}),
				    _StyleSheet$flatten$m = _StyleSheet$flatten.marginLeft,
				    marginLeft = _StyleSheet$flatten$m === undefined ? 0 : _StyleSheet$flatten$m,
				    _StyleSheet$flatten$m2 = _StyleSheet$flatten.marginRight,
				    marginRight = _StyleSheet$flatten$m2 === undefined ? 0 : _StyleSheet$flatten$m2,
				    progressViewStyle = babelHelpers.objectWithoutProperties(_StyleSheet$flatten, ["marginLeft", "marginRight"]);

				return {
					marginLeft: marginLeft,
					marginRight: marginRight
				};
			}
		}, {
			key: "render",
			value: function render() {
				var _StyleSheet$flatten2 = _reactNative.StyleSheet.flatten(BrightnessIndicatorDataSource.containerIndicatorImageStyle || {}),
				    _StyleSheet$flatten2$ = _StyleSheet$flatten2.marginTop,
				    marginTop = _StyleSheet$flatten2$ === undefined ? 11 : _StyleSheet$flatten2$,
				    _StyleSheet$flatten2$2 = _StyleSheet$flatten2.marginBottom,
				    marginBottom = _StyleSheet$flatten2$2 === undefined ? 11 : _StyleSheet$flatten2$2,
				    _StyleSheet$flatten2$3 = _StyleSheet$flatten2.marginLeft,
				    marginLeft = _StyleSheet$flatten2$3 === undefined ? 4 : _StyleSheet$flatten2$3,
				    _StyleSheet$flatten2$4 = _StyleSheet$flatten2.marginRight,
				    marginRight = _StyleSheet$flatten2$4 === undefined ? 4 : _StyleSheet$flatten2$4,
				    _StyleSheet$flatten2$5 = _StyleSheet$flatten2.width,
				    width = _StyleSheet$flatten2$5 === undefined ? 22 : _StyleSheet$flatten2$5,
				    _StyleSheet$flatten2$6 = _StyleSheet$flatten2.height,
				    height = _StyleSheet$flatten2$6 === undefined ? 22 : _StyleSheet$flatten2$6,
				    viewStyle = babelHelpers.objectWithoutProperties(_StyleSheet$flatten2, ["marginTop", "marginBottom", "marginLeft", "marginRight", "width", "height"]);

				var indicatorImageWidth = width;
				var indicatorImageLeft = marginLeft;
				var indicatorImageRight = marginRight;
				var progressLeft = this.getProgressStyle().marginLeft;
				var progressRight = this.getProgressStyle().marginRight;
				var progress = this.state.progress;
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.container
					},
					_react2.default.createElement(CLImage, {
						key: "indicator_reduce",
						imagePath: 'indicator_reduce.png',
						style: styles.indicatorImage
					}),
					_react2.default.createElement(
						_reactNative.View,
						{
							style: styles.progressView
						},
						_react2.default.createElement(CLProgressView, {
							style: styles.progress,
							progressTintColor: "#fff",
							trackTintColor: "rgba(255, 255, 255, 0.3)",
							progress: progress
						})
					),
					_react2.default.createElement(CLImage, {
						key: "indicator_add",
						imagePath: 'indicator_add.png',
						style: styles.indicatorImage
					})
				);
			}
		}]);
		return BrightnessIndicator;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		container: {
			flexDirection: 'row',
			backgroundColor: 'transparent',
			width: BrightnessIndicatorDataSource.containerWidth
		},
		progressView: {
			flex: 1
		},
		progress: {
			marginTop: 21,
			marginRight: 5
		},
		indicatorImage: babelHelpers.extends({}, BrightnessIndicatorDataSource.containerIndicatorImageStyle),
		point: {
			position: 'absolute',
			width: 12,
			height: 11,
			backgroundColor: 'transparent',
			top: 22
		}
	});

	module.exports = BrightnessIndicator;
},10457,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/BrightnessIndicator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
	var CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;
	var CTIndicatorDataSource = CommonYeelightModulesDataSource.CTIndicatorDataSource;
	var offset = CTIndicatorDataSource.offset;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width;

	var CTIndicator = function (_Component) {
		babelHelpers.inherits(CTIndicator, _Component);

		function CTIndicator(props) {
			babelHelpers.classCallCheck(this, CTIndicator);

			var _this = babelHelpers.possibleConstructorReturn(this, (CTIndicator.__proto__ || Object.getPrototypeOf(CTIndicator)).call(this, props));

			_this.state = {
				ct: _this.props.ct
			};
			return _this;
		}

		babelHelpers.createClass(CTIndicator, [{
			key: "omponentWillReceiveProps",
			value: function omponentWillReceiveProps(nextProps) {
				if (nextProps.ct != this.state.ct) {
					this.setState({
						ct: nextProps.ct
					});
				}
			}
		}, {
			key: "updateCt",
			value: function updateCt(value) {
				var left = offset - 6 + value * (width - offset * 2);
				this.pointRef.setNativeProps({
					style: {
						marginLeft: left
					}
				});
			}
		}, {
			key: "render",
			value: function render() {
				var _this2 = this;

				var ct = this.state.ct;
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.container
					},
					_react2.default.createElement(CLImage, {
						ref: function ref(_ref) {
							return _this2.pointRef = _ref;
						},
						imagePath: 'color_point.png',
						style: [styles.point, {
							marginLeft: offset - 6 + ct * (width - offset * 2)
						}]
					}),
					_react2.default.createElement(CLImage, {
						imagePath: 'sunshine_pick_board.png',
						style: styles.indicatorImage
					})
				);
			}
		}]);
		return CTIndicator;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		container: {
			backgroundColor: 'transparent'
		},
		point: babelHelpers.extends({}, CTIndicatorDataSource.pointStyle),
		indicatorImage: babelHelpers.extends({}, CTIndicatorDataSource.indicatorImageStyle)
	});

	module.exports = CTIndicator;
},10460,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/CTIndicator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _reactNative = _require(_dependencyMap[0]);

	var _react = _require(_dependencyMap[1]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var LampOff = function (_Component) {
		babelHelpers.inherits(LampOff, _Component);

		function LampOff(props) {
			babelHelpers.classCallCheck(this, LampOff);
			return babelHelpers.possibleConstructorReturn(this, (LampOff.__proto__ || Object.getPrototypeOf(LampOff)).call(this, props));
		}

		babelHelpers.createClass(LampOff, [{
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.fullContainer
					},
					_react2.default.createElement(CLImage, {
						style: styles.image,
						imagePath: 'lamp_off_background.jpg'
					}),
					this.props.offState ? _react2.default.createElement(
						_reactNative.View,
						{
							style: styles.statusView
						},
						_react2.default.createElement(
							_reactNative.Text,
							{
								style: styles.statusText
							},
							this.props.offState
						)
					) : null
				);
			}
		}, {
			key: "componentWillMount",
			value: function componentWillMount() {}
		}]);
		return LampOff;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		fullContainer: {
			flex: 1,
			flexDirection: 'row',
			justifyContent: 'center',
			alignItems: 'center',
			backgroundColor: '#F5FCFF'
		},
		image: {
			width: width,
			height: height
		},
		statusView: {
			flex: 1,
			position: "absolute",
			top: 58 + Theme.APPBAR_MARGINTOP,
			left: 0,
			width: width,
			backgroundColor: "transparent",
			flexDirection: 'row',
			alignItems: 'center'
		},
		statusText: {
			color: '#ffff',
			textAlign: 'center',
			width: width,
			fontSize: 14
		}
	});

	module.exports = LampOff;
},10463,[10033,10297,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LampOff.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _CommonYeelightModules = _require(_dependencyMap[2]);

    var assign = _require(_dependencyMap[3]);

    var PageControl = function (_Component) {
        babelHelpers.inherits(PageControl, _Component);

        function PageControl() {
            babelHelpers.classCallCheck(this, PageControl);
            return babelHelpers.possibleConstructorReturn(this, (PageControl.__proto__ || Object.getPrototypeOf(PageControl)).apply(this, arguments));
        }

        babelHelpers.createClass(PageControl, [{
            key: "onPageIndicatorPress",
            value: function onPageIndicatorPress(idx) {
                this.props.onPageIndicatorPress(idx);
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var _props = this.props,
                    style = _props.style,
                    props = babelHelpers.objectWithoutProperties(_props, ["style"]);
                var defaultStyle = {
                    height: this.props.indicatorSize.height
                };
                var indicatorItemStyle = {
                    width: this.props.indicatorSize.width,
                    height: this.props.indicatorSize.height,
                    borderRadius: this.props.indicatorSize.height / 2,
                    marginLeft: 5,
                    marginRight: 5
                };
                var indicatorStyle = assign({}, indicatorItemStyle, this.props.indicatorStyle, {
                    backgroundColor: this.props.pageIndicatorTintColor
                });
                var currentIndicatorStyle = assign({}, indicatorItemStyle, this.props.currentIndicatorStyle, {
                    backgroundColor: this.props.currentPageIndicatorTintColor
                });
                var pages = [];

                for (var i = 0; i < this.props.numberOfPages; i++) {
                    pages.push(i);
                }

                return this.props.hidesForSinglePage && pages.length <= 1 ? null : _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: [styles.container, defaultStyle, style]
                    },
                    pages.map(function (el, i) {
                        return _react2.default.createElement(
                            _reactNative.TouchableWithoutFeedback,
                            {
                                key: i,
                                onPress: _this2.onPageIndicatorPress.bind(_this2, i)
                            },
                            _react2.default.createElement(_reactNative.View, {
                                style: i == _this2.props.currentPage ? currentIndicatorStyle : indicatorStyle
                            })
                        );
                    })
                );
            }
        }], [{
            key: "defaultProps",
            value: function defaultProps() {
                return {
                    numberOfPages: 0,
                    currentPage: 0,
                    hidesForSinglePage: false,
                    pageIndicatorTintColor: 'gray',
                    currentPageIndicatorTintColor: 'white',
                    indicatorSize: {
                        width: 8,
                        height: 8
                    },
                    indicatorStyle: {},
                    currentIndicatorStyle: {},
                    onPageIndicatorPress: function onPageIndicatorPress() {}
                };
            }
        }]);
        return PageControl;
    }(_react.Component);

    ;

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: 'transparent',
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
        }
    });

    module.exports = PageControl;
},10466,[10297,10033,10007,10303],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/PageControl.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
	var CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;
	var UserGuideDataSource = CommonYeelightModulesDataSource.UserGuideDataSource;
	var UserGuideType = {
		Vertical: 'user_guide_vertical',
		Horizon: 'user_guide_horizon',
		None: 'user_guide_none',
		Both: 'user_guide_both'
	};

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var UserGuide = function (_Component) {
		babelHelpers.inherits(UserGuide, _Component);

		function UserGuide(props) {
			babelHelpers.classCallCheck(this, UserGuide);
			return babelHelpers.possibleConstructorReturn(this, (UserGuide.__proto__ || Object.getPrototypeOf(UserGuide)).call(this, props));
		}

		babelHelpers.createClass(UserGuide, [{
			key: "render",
			value: function render() {
				if (UserGuideType.None == this.props.currentType) {
					return _react2.default.createElement(_reactNative.View, null);
				} else {
					var guideImageName;

					if (UserGuideType.Vertical == this.props.currentType) {
						guideImageName = 'user_guide_vertical.png';
					} else if (UserGuideType.Horizon == this.props.currentType) {
						guideImageName = 'user_guide_horizon.png';
					} else if (UserGuideType.Both == this.props.currentType) {
						guideImageName = 'user_guide_img.png';
					}

					return _react2.default.createElement(
						_reactNative.View,
						{
							style: [styles.container, {
								opacity: this.props.opacity
							}]
						},
						_react2.default.createElement(CLImage, {
							style: styles.guideImage,
							imagePath: guideImageName
						})
					);
				}
			}
		}]);
		return UserGuide;
	}(_react.Component);

	var userguideMarginTop = (height - UserGuideDataSource.guideImageTopOffset - width / 2) / 2;

	if (userguideMarginTop < 94) {
		userguideMarginTop = 94;
	}

	var styles = _reactNative.StyleSheet.create({
		container: {
			position: 'absolute',
			top: 0,
			left: 0,
			backgroundColor: 'transparent',
			alignItems: 'center',
			justifyContent: 'center',
			width: width,
			height: height
		},
		guideImage: {
			width: width / 2,
			height: width / 2,
			position: 'absolute',
			left: width / 4,
			top: userguideMarginTop
		},
		label: {
			width: 120
		}
	});

	module.exports = UserGuide;
},10469,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/UserGuide.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var CommonYeelightModules = _require(_dependencyMap[0]);

	var strings = CommonYeelightModules.strings,
	    LightMode = CommonYeelightModules.LightMode,
	    DeviceModel = CommonYeelightModules.DeviceModel,
	    Api = CommonYeelightModules.Api,
	    LocalStorageManager = CommonYeelightModules.LocalStorageManager,
	    YLDevice = CommonYeelightModules.YLDevice;
	var API = Api;
	var lightMode = {
		color: "color",
		ct: 'ct',
		flow: 'flow'
	};
	var preMilliseconds = 0;
	var preExcuteCount = 0;

	function _bound(value) {
		if (value > 1.0) {
			value = value - 1.0;
		} else if (value < 0.0) {
			value = value + 1.0;
		}

		return value;
	}

	function changeColor(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			value = _bound(value);
			API.setColor(value, callback);
		}, forceChange);
	}

	function changeCT(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			var ct = _value2CT(value);

			API.setCT(ct, callback);
		}, forceChange);
	}

	function changeBgColor(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			value = _bound(value);
			API.setBgColor(value, callback);
		}, forceChange);
	}

	function changeBgCT(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			var ct = _value2CT(value);

			API.setBgCT(ct, callback);
		}, forceChange);
	}

	function _changeBrightness(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			API.setBright(value, callback);
		}, forceChange);
	}

	function _changeBgBrightness(value, callback) {
		var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		commonChangeValue(function () {
			API.setBgBright(value, callback);
		}, forceChange);
	}

	function _changeSimpleColorFlowBrightness(brightness, cf_duration, callback) {
		var forceChange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
		commonChangeValue(function () {
			readCfColors(function (colors) {
				API.startSimpleCF(colors, brightness, cf_duration, callback);
			});
		}, forceChange);
	}

	function commonChangeValue(callback) {
		var forceChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		if (forceChange) {
			if (callback) {
				callback();
			}
		} else {
			var milliseconds = new Date().getTime();

			if (milliseconds - preMilliseconds > 500) {
				preMilliseconds = milliseconds;

				if (callback) {
					callback();
				}
			}
		}
	}

	function getMaxCT() {
		var MaxValue;
		var model = YLDevice.deviceModel;

		if (DeviceModel.maxCT) {
			return DeviceModel.maxCT;
		} else {
			return 6500;
		}
	}

	function getMinCT() {
		var MinValue;
		var model = YLDevice.deviceModel;

		if (DeviceModel.minCT) {
			return DeviceModel.minCT;
		} else {
			return 2700;
		}
	}

	function _value2CT(value) {
		value = _bound(value);
		var ct;
		var MaxValue = getMaxCT();
		var MinValue = getMinCT();

		if (value <= 0.5) {
			ct = -(MaxValue - MinValue) * 2 * value + MaxValue;
		} else {
			ct = (MaxValue - MinValue) * 2 * value + (-MaxValue + 2 * MinValue);
		}

		ct = Math.round(ct);

		if (ct < MinValue) {
			return MinValue;
		}

		if (ct > MaxValue) {
			return MaxValue;
		} else {
			return ct;
		}
	}

	function _CT2Value(ct, isRight) {
		var MaxValue = getMaxCT();
		var MinValue = getMinCT();

		if (ct > MaxValue) {
			ct = MaxValue;
		}

		if (ct < MinValue) {
			ct = MinValue;
		}

		if (isRight) {
			return ct / ((MaxValue - MinValue) * 2) + (MaxValue - 2 * MinValue) / ((MaxValue - MinValue) * 2);
		} else {
			return ct / -((MaxValue - MinValue) * 2) + MaxValue / ((MaxValue - MinValue) * 2);
		}
	}

	function readCfColors(callback) {
		var colors = [0.028, 0.194, 0.444, 0.750];
		LocalStorageManager.readFlowColorSetting(function (isSucces, content) {
			if (isSucces && content.length > 0) {
				try {
					var c = content.split(",");

					if (c.length > 0) {
						for (var i = 0; i < c.length; i++) {
							colors[i] = parseInt(c[i]) / 1000;
						}

						;
					}
				} catch (e) {}
			}

			callback(colors);
		});
	}

	module.exports = {
		changeLight: function changeLight(value, mode, callback) {
			var forceChange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

			if (mode == lightMode.color) {
				return changeColor(value, callback, forceChange);
			} else if (mode == lightMode.ct) {
				return changeCT(value, callback, forceChange);
			}
		},
		changeBgLight: function changeBgLight(value, mode, callback) {
			var forceChange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

			if (mode == lightMode.color) {
				return changeBgColor(value, callback, forceChange);
			} else if (mode == lightMode.ct) {
				return changeBgCT(value, callback, forceChange);
			}
		},
		changeBrightness: function changeBrightness(value, callback) {
			var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
			return _changeBrightness(value, callback, forceChange);
		},
		changeBgBrightness: function changeBgBrightness(value, callback) {
			var forceChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
			return _changeBgBrightness(value, callback, forceChange);
		},
		changeSimpleColorFlowBrightness: function changeSimpleColorFlowBrightness(brightness, cf_duration, callback) {
			var forceChange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
			return _changeSimpleColorFlowBrightness(brightness, cf_duration, callback, forceChange);
		},
		bound: function bound(value) {
			return _bound(value);
		},
		changeColorDirectly: function changeColorDirectly(value) {
			value = _bound(value);
			return API.setColor(value, function () {});
		},
		changeCTDirectly: function changeCTDirectly(value) {
			value = _value2CT(value);
			return API.setCT(value, function () {});
		},
		changeBgColorDirectly: function changeBgColorDirectly(value) {
			value = _bound(value);
			return API.setBgColor(value, function () {});
		},
		changeBgCTDirectly: function changeBgCTDirectly(value) {
			value = _value2CT(value);
			return API.setBgCT(value, function () {});
		},
		changeBrightnessDirectly: function changeBrightnessDirectly(value, callback) {
			return API.setBright(value, callback);
		},
		changeBgBrightnessDirectly: function changeBgBrightnessDirectly(value, callback) {
			return API.setBgBright(value, callback);
		},
		changeSimpleColorFlowBrightnessDirectly: function changeSimpleColorFlowBrightnessDirectly(brightness, cf_duration, callback) {
			return readCfColors(function (colors) {
				API.startSimpleCF(colors, brightness, cf_duration, callback);
			});
			;
		},
		CT2Value: function CT2Value(ct, isRight) {
			return _CT2Value(ct, isRight);
		},
		value2CT: function value2CT(value) {
			return _value2CT(value);
		},
		getCfColors: function getCfColors(callback) {
			return readCfColors(callback);
		}
	};
},10472,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LightGenerator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;
	var offset = 30;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width;

	var ColorIndicator = function (_Component) {
		babelHelpers.inherits(ColorIndicator, _Component);

		function ColorIndicator(props) {
			babelHelpers.classCallCheck(this, ColorIndicator);
			return babelHelpers.possibleConstructorReturn(this, (ColorIndicator.__proto__ || Object.getPrototypeOf(ColorIndicator)).call(this, props));
		}

		babelHelpers.createClass(ColorIndicator, [{
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.container
					},
					_react2.default.createElement(CLImage, {
						imagePath: 'color_point.png',
						style: [styles.point, {
							marginLeft: offset - 6 + this.props.hue * (width - offset * 2)
						}]
					}),
					_react2.default.createElement(CLImage, {
						imagePath: 'color_pick_board.png',
						style: styles.indicatorImage
					})
				);
			}
		}]);
		return ColorIndicator;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		container: {
			backgroundColor: 'transparent'
		},
		point: {
			width: 12,
			height: 11,
			marginBottom: 0.5
		},
		indicatorImage: {
			marginLeft: offset,
			width: width - offset * 2,
			height: 3
		}
	});

	module.exports = ColorIndicator;
},10475,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/ColorIndicator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLVideo = CommonYeelightModules.CLVideo,
	    Theme = CommonYeelightModules.Theme,
	    CLImage = CommonYeelightModules.CLImage;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var FlowingPanel = function (_Component) {
		babelHelpers.inherits(FlowingPanel, _Component);

		function FlowingPanel(props) {
			babelHelpers.classCallCheck(this, FlowingPanel);

			var _this = babelHelpers.possibleConstructorReturn(this, (FlowingPanel.__proto__ || Object.getPrototypeOf(FlowingPanel)).call(this, props));

			_this.state = {
				rate: 1.0,
				currentTime: 0.0,
				videoLoaded: false
			};
			return _this;
		}

		babelHelpers.createClass(FlowingPanel, [{
			key: "componentDidMount",
			value: function componentDidMount() {}
		}, {
			key: "onVideoLoaded",
			value: function onVideoLoaded() {
				this.player && this.player.seek && this.player.seek(0);
				this.setState({
					videoLoaded: true
				});
			}
		}, {
			key: "onAudioFocusChanged",
			value: function onAudioFocusChanged() {}
		}, {
			key: "loadStart",
			value: function loadStart() {}
		}, {
			key: "onProgress",
			value: function onProgress() {}
		}, {
			key: "onEnd",
			value: function onEnd() {}
		}, {
			key: "videoError",
			value: function videoError() {}
		}, {
			key: "onAudioBecomingNoisy",
			value: function onAudioBecomingNoisy() {}
		}, {
			key: "onAudioFocusChanged",
			value: function onAudioFocusChanged() {}
		}, {
			key: "setPlayer",
			value: function setPlayer(ref) {
				if (ref) {
					this.player = ref;
				}
			}
		}, {
			key: "render",
			value: function render() {
				var maxOpacity = 0.6;
				var maskOpacity = (1 - this.props.bright) * maxOpacity;
				var videoLoaded = this.state.videoLoaded;
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: [styles.container, this.props.style]
					},
					_react2.default.createElement(CLImage, {
						style: {
							position: "absolute",
							width: width,
							height: height,
							top: 0,
							left: 0
						},
						imagePath: 'flow_bg.png'
					}),
					_react2.default.createElement(CLVideo, {
						ref: this.setPlayer.bind(this),
						videoPath: "images/images/color_flow.mp4",
						videoRequireName: "color_flow.mp4",
						style: [styles.fullScreen, {
							opacity: videoLoaded ? 1 : 0
						}],
						rate: this.state.rate,
						paused: this.props.paused,
						volume: 1.0,
						muted: false,
						resizeMode: "cover",
						playInBackground: false,
						playWhenInactive: false,
						currentTime: this.state.currentTime,
						onLoadStart: this.loadStart.bind(this),
						onProgress: this.onProgress.bind(this),
						onEnd: this.onEnd.bind(this),
						onError: this.videoError.bind(this),
						onAudioBecomingNoisy: this.onAudioBecomingNoisy.bind(this),
						onAudioFocusChanged: this.onAudioFocusChanged.bind(this),
						repeat: true,
						onLoad: this.onVideoLoaded.bind(this)
					})
				);
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {}
		}]);
		return FlowingPanel;
	}(_react.Component);

	var lineLength = height * 1.31;

	var styles = _reactNative.StyleSheet.create({
		container: {
			position: 'absolute',
			top: 0,
			flex: 1,
			width: width,
			height: height,
			alignItems: 'center'
		},
		fullScreen: {
			position: 'absolute',
			top: 0,
			left: 0,
			bottom: 0,
			right: 0,
			width: width,
			height: height
		},
		pannel: {
			position: 'absolute',
			width: lineLength,
			height: lineLength,
			top: (height - lineLength) / 2,
			left: (width - lineLength) / 2,
			alignItems: 'center'
		},
		pannelIn: {
			width: lineLength,
			height: lineLength
		},
		mask: {
			width: width,
			height: height
		}
	});

	module.exports = FlowingPanel;
},10478,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/FlowingPanel.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var FlowingPanelDefault = function (_Component) {
		babelHelpers.inherits(FlowingPanelDefault, _Component);

		function FlowingPanelDefault(props) {
			babelHelpers.classCallCheck(this, FlowingPanelDefault);

			var _this = babelHelpers.possibleConstructorReturn(this, (FlowingPanelDefault.__proto__ || Object.getPrototypeOf(FlowingPanelDefault)).call(this, props));

			_this.state = {
				rotate: new _reactNative.Animated.Value(0)
			};
			return _this;
		}

		babelHelpers.createClass(FlowingPanelDefault, [{
			key: "componentDidMount",
			value: function componentDidMount() {
				this.animating = true;

				this._updateRotate();
			}
		}, {
			key: "render",
			value: function render() {
				var maxOpacity = 0.6;
				var maskOpacity = (1 - this.props.bright) * maxOpacity;
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: [styles.container, this.props.style]
					},
					_react2.default.createElement(
						_reactNative.Animated.View,
						{
							style: [styles.pannel, {
								transform: [{
									rotate: this.state.rotate.interpolate({
										inputRange: [0, 360],
										outputRange: ['0deg', '360deg']
									})
								}]
							}]
						},
						_react2.default.createElement(CLImage, {
							style: styles.pannelIn,
							imagePath: 'panel_color.png'
						})
					),
					_react2.default.createElement(_reactNative.View, {
						style: [styles.pannel, {
							backgroundColor: '#000000',
							opacity: maskOpacity
						}]
					})
				);
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				this._stopRotate();
			}
		}, {
			key: "_updateRotate",
			value: function _updateRotate() {
				var _this2 = this;

				var angle = this._angle(this.props.cf_duration);

				var v = this.state.rotate._value + angle;

				if (v >= 360000) {
					this.setState({
						rotate: new _reactNative.Animated.Value(0)
					});
				}

				;

				_reactNative.Animated.timing(this.state.rotate, {
					toValue: v,
					duration: 100
				}).start(function () {
					if (_this2.animating) {
						_this2._updateRotate();
					}
				});
			}
		}, {
			key: "_stopRotate",
			value: function _stopRotate() {
				this.animating = false;
			}
		}, {
			key: "_angle",
			value: function _angle(duration) {
				return duration * 4 + 2;
			}
		}]);
		return FlowingPanelDefault;
	}(_react.Component);

	var lineLength = height * 1.31;

	var styles = _reactNative.StyleSheet.create({
		container: {
			position: 'absolute',
			top: 0,
			flex: 1,
			alignItems: 'center'
		},
		pannel: {
			position: 'absolute',
			width: lineLength,
			height: lineLength,
			top: (height - lineLength) / 2,
			left: (width - lineLength) / 2,
			alignItems: 'center'
		},
		pannelIn: {
			width: lineLength,
			height: lineLength
		},
		mask: {
			width: width,
			height: height
		}
	});

	module.exports = FlowingPanelDefault;
},10481,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/FlowingPanelDefault.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLProgressView = CommonYeelightModules.CLProgressView,
	    CLImage = CommonYeelightModules.CLImage,
	    Theme = CommonYeelightModules.Theme;
	var offset = 30;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width;

	var CFDurationIndicator = function (_Component) {
		babelHelpers.inherits(CFDurationIndicator, _Component);

		function CFDurationIndicator(props) {
			babelHelpers.classCallCheck(this, CFDurationIndicator);
			return babelHelpers.possibleConstructorReturn(this, (CFDurationIndicator.__proto__ || Object.getPrototypeOf(CFDurationIndicator)).call(this, props));
		}

		babelHelpers.createClass(CFDurationIndicator, [{
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.container
					},
					_react2.default.createElement(CLImage, {
						imagePath: 'tortoise.png',
						style: styles.indicatorImage
					}),
					_react2.default.createElement(CLProgressView, {
						style: styles.progress,
						progressTintColor: "#fff",
						trackTintColor: "rgba(255, 255, 255, 0.3)",
						progress: this.props.cf_duration
					}),
					_react2.default.createElement(CLImage, {
						imagePath: 'rabbit.png',
						style: styles.indicatorImage
					})
				);
			}
		}]);
		return CFDurationIndicator;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		container: {
			backgroundColor: 'transparent',
			justifyContent: 'center',
			alignItems: 'center',
			flexDirection: 'row',
			paddingLeft: offset,
			paddingRight: offset,
			width: width
		},
		indicatorImage: {
			width: 26,
			height: 21.8,
			margin: 5
		},
		progress: {
			width: width - (offset + 10 + 26) * 2
		}
	});

	module.exports = CFDurationIndicator;
},10484,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/CFDurationIndicator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var Theme = CommonYeelightModules.Theme;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var strings = _require(_dependencyMap[4]);

	var RoundButton = function (_Component) {
		babelHelpers.inherits(RoundButton, _Component);

		function RoundButton(props) {
			babelHelpers.classCallCheck(this, RoundButton);
			return babelHelpers.possibleConstructorReturn(this, (RoundButton.__proto__ || Object.getPrototypeOf(RoundButton)).call(this, props));
		}

		babelHelpers.createClass(RoundButton, [{
			key: "componentDidMount",
			value: function componentDidMount() {}
		}, {
			key: "render",
			value: function render() {
				var _this2 = this;

				return _react2.default.createElement(
					_reactNative.Animated.View,
					{
						style: {
							opacity: this.props.opacity
						}
					},
					_react2.default.createElement(
						_reactNative.TouchableHighlight,
						{
							style: [styles.button],
							underlayColor: "rgba(255,255,255,0.3)",
							onPress: function onPress() {
								_this2.props.onPress();
							}
						},
						_react2.default.createElement(
							_reactNative.Text,
							{
								style: styles.label
							},
							strings.common_view_control_flow_setting
						)
					)
				);
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {}
		}]);
		return RoundButton;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		button: {
			top: 84,
			width: 100,
			height: 33,
			left: (width - 100) / 2,
			borderRadius: 16,
			borderWidth: 1,
			alignItems: 'center',
			borderColor: 'rgba(255,255,255,0.64)'
		},
		label: {
			paddingTop: 7,
			color: '#fff',
			backgroundColor: 'transparent',
			flex: 1,
			fontSize: 16,
			alignItems: 'center'
		}
	});

	module.exports = RoundButton;
},10487,[10297,10033,10429,10007,10490],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/RoundButton.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var YLString = _require(_dependencyMap[0]);

    var CommonYeelightModules = _require(_dependencyMap[1]);

    var MultilingualResources = CommonYeelightModules.MultilingualResources,
        YLLocalizedStrings = CommonYeelightModules.YLLocalizedStrings;
    var strings = new YLLocalizedStrings({
        en: MultilingualResources.en(),
        "zh-Hans": MultilingualResources.hans(),
        "zh-Hant": MultilingualResources.hant(),
        "zh-HK": MultilingualResources.hantHK(),
        "zh-TW": MultilingualResources.hantTW(),
        "ko": MultilingualResources.ko(),
        "es": MultilingualResources.es(),
        "ru": MultilingualResources.ru(),
        "it": MultilingualResources.it(),
        "de": MultilingualResources.de(),
        "fr": MultilingualResources.fr(),
        "pl": MultilingualResources.pl(),
        "vi": MultilingualResources.vi(),
        "th": MultilingualResources.th(),
        "id": MultilingualResources.id(),
        "nl": MultilingualResources.nl(),
        "ar": MultilingualResources.ar()
    });
    module.exports = strings;
},10490,[10493,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Localization.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    "use strict";

    String.prototype.format = function () {
        var result = this;
        if (arguments.length == 0) return null;

        for (var i = 0; i < arguments.length; i++) {
            var re = new RegExp('\\{' + i + '\\}', 'gm');
            result = result.replace(re, arguments[i]);
        }

        return result;
    };

    exports.String = String;
},10493,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/YLString.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;

	var EventEmitter = _require(_dependencyMap[4]);

	var UserGuideManager = new (_require(_dependencyMap[5]).UserGuideManager)();

	var DeviceControlType = _require(_dependencyMap[6]).DeviceControlType;

	var strings = CommonYeelightModules.strings,
	    CTIndicator = CommonYeelightModules.CTIndicator,
	    UserGuide = CommonYeelightModules.UserGuide,
	    BrightnessIndicator = CommonYeelightModules.BrightnessIndicator,
	    HsvToRgb = CommonYeelightModules.HsvToRgb,
	    ColorIndicator = CommonYeelightModules.ColorIndicator,
	    CTIndicator = CommonYeelightModules.CTIndicator,
	    LightGenerator = CommonYeelightModules.LightGenerator,
	    CFDurationIndicator = CommonYeelightModules.CFDurationIndicator,
	    ColorPicker = CommonYeelightModules.ColorPicker,
	    LightMode = CommonYeelightModules.LightMode,
	    BaseReactComponent = CommonYeelightModules.BaseReactComponent,
	    DeviceModel = CommonYeelightModules.DeviceModel,
	    Theme = CommonYeelightModules.Theme,
	    CLImage = CommonYeelightModules.CLImage,
	    LightStateComponent = CommonYeelightModules.LightStateComponent,
	    LampOnGesturePage = CommonYeelightModules.LampOnGesturePage,
	    LampLightMode = CommonYeelightModules.LampLightMode,
	    LightPromodoStatusView = CommonYeelightModules.LightPromodoStatusView;
	var LampOnDataSource = CommonYeelightModulesDataSource.LampOnDataSource;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var ratio = Theme.ratio;
	var indicatorShowed = false;
	var HoriIndicatorShowed = false;
	var ScrollDirectionType = {
		Vertical: 'vertical',
		Horizon: 'horizon',
		None: 'none'
	};
	var currentScrollDirection = ScrollDirectionType.None;
	var isDirectorSet = false;
	var isHorizontal = false;
	var isVertical = false;
	var lastValueChange = 0;

	var LampOn = function (_BaseReactComponent) {
		babelHelpers.inherits(LampOn, _BaseReactComponent);

		function LampOn(props) {
			babelHelpers.classCallCheck(this, LampOn);

			var _this = babelHelpers.possibleConstructorReturn(this, (LampOn.__proto__ || Object.getPrototypeOf(LampOn)).call(this, props));

			_this.state = {
				showIndicator: new _reactNative.Animated.Value(0),
				showHoriIndicator: new _reactNative.Animated.Value(0),
				showSettingBtn: new _reactNative.Animated.Value(1)
			};
			return _this;
		}

		babelHelpers.createClass(LampOn, [{
			key: "componentWillReceiveProps",
			value: function componentWillReceiveProps(nextProps) {
				if (nextProps.active != this.props.active) {
					this.lampOnPageRef && this.lampOnPageRef.updateGesturePageActive(nextProps.active);
				}

				this.datasource().componentCompareWithProps && this.datasource().componentCompareWithProps(nextProps, this.props);
			}
		}, {
			key: "deviceControlType",
			value: function deviceControlType() {
				if (LightMode.ct == this.datasource().lightMode) {
					return DeviceModel.isFixedColorTemperature ? DeviceControlType.none : DeviceControlType.colorTemperature;
				} else if (LightMode.nightlight == this.datasource().lightMode) {
					return DeviceControlType.nightlight;
				} else if (LightMode.flow == this.datasource().lightMode) {
					return DeviceControlType.flow;
				} else if (LightMode.color == this.datasource().lightMode) {
					return DeviceControlType.color;
				} else {
					return DeviceControlType.none;
				}
			}
		}, {
			key: "shouldComponentUpdate",
			value: function shouldComponentUpdate(nextProps, nextState) {
				var shouldComponentUpdate = this.datasource().shouldComponentUpdate(nextProps, nextState);
				return shouldComponentUpdate || false;
			}
		}, {
			key: "render",
			value: function render() {
				var _this2 = this;

				var brightness = this.currentBrightness();

				if (null == brightness) {
					brightness = 100;
				}

				brightness = this._generateBackgroundBright(brightness);
				var lightStateView;

				if (this.datasource().shouldShowLightState()) {
					var brightnessString = Math.floor(this.currentBrightness()).toString();
					var ctString = LightGenerator.value2CT(this.ct);
					lightStateView = _react2.default.createElement(LightStateComponent, {
						ref: function ref(_ref) {
							return _this2.lightStateRef = _ref;
						},
						mode: this.props.mode,
						bright: brightnessString,
						ct: ctString,
						lightState: this.lightState
					});
				}

				var isSupportFlowing = this.datasource().isSupportFlowing();
				var indicator;
				var colorFlowBtn = null;

				var background = _react2.default.createElement(CLImage, {
					style: [styles.image, {
						opacity: brightness
					}],
					imagePath: this.datasource().lampOnBackGroundImage
				});

				var flowingPanelOpacity = 0.0;
				var backgroundColor = this.getLampOnPageBackgroundColor();

				if (this.datasource().lightMode == LightMode.ct || this.datasource().lightMode == LightMode.nightlight) {
					indicator = _react2.default.createElement(CTIndicator, {
						ref: function ref(_ref2) {
							return _this2.ctIndicator = _ref2;
						},
						ct: this.ct
					});
				} else if (this.datasource().lightMode == LightMode.color) {
					indicator = _react2.default.createElement(ColorIndicator, {
						hue: this.hue
					});
				} else if (this.datasource().lightMode == LightMode.flow && isSupportFlowing) {
					flowingPanelOpacity = 1.0;
					lightStateView = null;
					indicator = _react2.default.createElement(CFDurationIndicator, {
						cf_duration: this.cf_duration
					});
					background = null;
					colorFlowBtn = _react2.default.createElement(
						_reactNative.Animated.View,
						{
							style: [styles.colorFlowSetting, {
								opacity: this.state.showSettingBtn
							}]
						},
						_react2.default.createElement(
							_reactNative.TouchableHighlight,
							{
								style: [styles.colorFlowButton],
								underlayColor: "rgba(255,255,255,0.3)",
								onPress: function onPress() {
									_this2._pushColorPicker();
								}
							},
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: styles.label
								},
								strings.common_view_control_flow_setting
							)
						)
					);
				}

				var touchDotHeight = 150;
				var touchDotImage = 'touch_dot.png';

				if (this.datasource().touchPointImageName()) {
					touchDotImage = this.datasource().touchPointImageName();
				}

				if (this.datasource().touchPointImageSize()) {
					touchDotHeight = this.datasource().touchPointImageSize();
				}

				var userGuideOpacity = this._getCurrentUserGuideOpacity();

				var userGuide = userGuideOpacity == 1 ? _react2.default.createElement(UserGuide, {
					opacity: userGuideOpacity,
					currentType: this._getCurrentUserGuideShouldShowType()
				}) : null;
				var FlowingPanelComponent = isSupportFlowing ? this.datasource().getFlowingPanel() : null;
				var flowingPanel;

				if (FlowingPanelComponent) {
					flowingPanel = flowingPanelOpacity == 1 ? _react2.default.createElement(FlowingPanelComponent, {
						style: {
							opacity: flowingPanelOpacity
						},
						bright: brightness,
						cf_duration: this.cf_duration,
						btnOpacity: this.state.showSettingBtn,
						paused: false
					}) : null;
				}

				var modeCenterView = null;

				if (this.props.mode == LampLightMode.pc) {
					modeCenterView = _react2.default.createElement(
						_reactNative.View,
						{
							style: styles.modeCenter
						},
						_react2.default.createElement(CLImage, {
							imagePath: 'pc_mode_center.png',
							style: styles.modeCenterImg
						}),
						_react2.default.createElement(
							_reactNative.Text,
							{
								style: styles.modeCenterText
							},
							strings.common_view_button_container_guard_screen
						)
					);
					userGuide = null;
				} else if (this.props.mode == LampLightMode.reading) {
					modeCenterView = _react2.default.createElement(
						_reactNative.View,
						{
							style: [styles.modeCenter, {
								backgroundColor: 'rgb(164,191,214)'
							}]
						},
						_react2.default.createElement(CLImage, {
							imagePath: 'reading_mode_center.png',
							style: styles.modeCenterImg
						}),
						_react2.default.createElement(
							_reactNative.Text,
							{
								style: styles.modeCenterText
							},
							strings.common_view_button_container_guard_read
						)
					);
					userGuide = null;
				}

				var promodoStatusView = this.getPromodoStatusView();
				return _react2.default.createElement(
					LampOnGesturePage,
					{
						ref: function ref(_ref4) {
							return _this2.lampOnPageRef = _ref4;
						},
						active: this.props.active,
						backgroundColor: backgroundColor,
						background: background,
						touchDotImage: touchDotImage,
						touchDotHeight: touchDotHeight,
						onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
							if (_this2.props.mode == LampLightMode.pc || _this2.props.mode == LampLightMode.reading) {
								return false;
							}

							return true;
						},
						onPanResponderGrant: function onPanResponderGrant(e, gestureState) {
							_this2.initBrightness = _this2.currentBrightness();
							_this2.initHue = _this2.hue;
							_this2.initCt = _this2.ct;
							_this2.initCfDuration = _this2.cf_duration;
							_this2.firstValidTouchMove = true;
						},
						handleOnPanResponderMove: function handleOnPanResponderMove(e, gestureState, isEnd) {
							return _this2.handleOnPanResponderMove(e, gestureState, isEnd);
						},
						handleOnPanResponderRelease: function handleOnPanResponderRelease(e, gestureState) {
							return _this2.handleOnPanResponderRelease(e, gestureState);
						}
					},
					modeCenterView,
					lightStateView,
					flowingPanel,
					promodoStatusView,
					_react2.default.createElement(
						_reactNative.Animated.View,
						{
							key: "brightnessIndicator",
							style: [styles.indicatorView, {
								opacity: this.state.showIndicator
							}]
						},
						_react2.default.createElement(BrightnessIndicator, {
							ref: function ref(_ref3) {
								return _this2.brightnessIndicator = _ref3;
							},
							progress: this.currentBrightness() / 100
						})
					),
					_react2.default.createElement(
						_reactNative.Animated.View,
						{
							key: "horiIndicator",
							style: [{
								position: 'absolute',
								top: 82 + Theme.APPBAR_MARGINTOP,
								backgroundColor: 'transparent'
							}, {
								opacity: this.state.showHoriIndicator
							}, this.datasource().hIndicatorViewStyles]
						},
						indicator
					),
					userGuide,
					colorFlowBtn
				);
			}
		}, {
			key: "getPromodoStatusView",
			value: function getPromodoStatusView() {
				if (!this.props.mode) {
					return null;
				}

				return _react2.default.createElement(LightPromodoStatusView, {
					bottom: height - this.props.menuViewTop + 10,
					pdo_status: this.datasource().pdo_status
				});
			}
		}, {
			key: "getLampOnPageBackgroundColor",
			value: function getLampOnPageBackgroundColor() {
				var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				var backgroundColor = "transparent";
				var h = 0.085;
				var s = 0.25;
				var bright = object.bright || this.currentBrightness();
				var ct = object.ct || this.ct;

				if (ct > 1) {
					ct = LightGenerator.CT2Value(ct, this.isRight);
				}

				if (LightMode.color == this.datasource().lightMode) {
					var hTmp = object.hue || this.hue;

					if (!isNaN(hTmp)) {
						h = hTmp;
					}
				}

				if (LightMode.ct == this.datasource().lightMode && !isNaN(ct)) {
					s = this._generateSaturation(ct);
				} else {
					s = DeviceModel.ct2Saturation(2700);
				}

				if (this.datasource().lightMode == LightMode.flow && this.datasource().isSupportFlowing()) {
					return this.backgroundColor;
				}

				backgroundColor = HsvToRgb.getRGBString(h, s, DeviceModel.getDisplayBrightness(bright));
				this.backgroundColor = backgroundColor;
				return backgroundColor;
			}
		}, {
			key: "datasource",
			value: function datasource() {
				return this.componentDataSource;
			}
		}, {
			key: "currentBrightness",
			value: function currentBrightness() {
				return this.datasource().currentBrightness();
			}
		}, {
			key: "applyBrightness",
			value: function applyBrightness(brightness, forceChange) {
				this.datasource().applyBrightness(brightness, forceChange);
			}
		}, {
			key: "changeLight",
			value: function changeLight(value, callback, forceChange) {
				this.datasource().changeLight(value, function () {}, forceChange);
			}
		}, {
			key: "startSimpleCF",
			value: function startSimpleCF(colors, forceChange) {
				this.datasource().startSimpleCF(colors, forceChange);
			}
		}, {
			key: "_generateSaturation",
			value: function _generateSaturation(ct) {
				var s;

				if (ct <= 0.5) {
					s = 1.2 * ct + 0.4;
				} else {
					s = -1.2 * ct + 1.6;
				}

				return s;
			}
		}, {
			key: "_getCurrentUserGuideOpacity",
			value: function _getCurrentUserGuideOpacity() {
				return UserGuideManager.getCurrentUserGuideOpacityByDeviceControlType(this.deviceControlType());
			}
		}, {
			key: "_generateBackgroundBright",
			value: function _generateBackgroundBright(brightness) {
				return 0.006060606060606061 * brightness + 0.3939393939393939;
			}
		}, {
			key: "_getDataFromStorage",
			value: function _getDataFromStorage() {
				UserGuideManager.getDataFromStorage();
			}
		}, {
			key: "_getCurrentUserGuideShouldShowType",
			value: function _getCurrentUserGuideShouldShowType() {
				return UserGuideManager.getCurrentUserGuideShouldShowTypeByDeviceControlType(this.deviceControlType());
			}
		}, {
			key: "_isShouldShowUserGuide",
			value: function _isShouldShowUserGuide() {
				return UserGuideManager.isShouldShowUserGuideByDeviceType(this.deviceControlType());
			}
		}, {
			key: "componentWillMount",
			value: function componentWillMount() {
				this.indicatorShowed = false;
				this.HoriIndicatorShowed = false;
				this.eventEmitter = new EventEmitter();

				this._addObserver();

				this._getDataFromStorage();
			}
		}, {
			key: "handleOnPanResponderMove",
			value: function handleOnPanResponderMove(e, gestureState, isEnd) {
				var _this3 = this;

				var x = gestureState.moveX;
				var y = gestureState.moveY;

				if (0 == Math.abs(gestureState.vy) && 0 == Math.abs(gestureState.vx)) {
					return;
				}

				if (!isDirectorSet) {
					if (Math.abs(gestureState.vy) > Math.abs(gestureState.vx)) {
						isHorizontal = false;
						isVertical = true;
					} else {
						isHorizontal = true;
						isVertical = false;
					}

					if (this.props.category && this.props.category == "mono" || LightMode.none == this.datasource().lightMode || LightMode.nightlight == this.datasource().lightMode || typeof this.datasource().isFixedColorTemperature === "function" && this.datasource().isFixedColorTemperature()) {
						isHorizontal = false;
					} else {}

					isDirectorSet = true;
				}

				if (this.firstValidTouchMove && (isHorizontal || isVertical)) {
					this.firstValidTouchMove = false;

					if (typeof this.props.validTouchBegin === "function") {
						this.props.validTouchBegin();
					}
				}

				if (!isHorizontal && isVertical) {
					if (!indicatorShowed) {
						this.indicatorShowed = true;

						_reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.showIndicator, {
							toValue: 1
						}), _reactNative.Animated.timing(this.state.showHoriIndicator, {
							toValue: 0,
							duration: 200
						})]).start();
					}

					var percentage = 100 * gestureState.dy / height;
					var brightness = this.initBrightness - percentage;

					if (brightness > 100) {
						brightness = 100;
					}

					if (brightness < 1) {
						brightness = 1;
					}

					;
					var date = new Date();
					var valueChange = date.getTime();

					if (valueChange - lastValueChange > 100) {
						this.brightnessIndicator.progressUpdate(Math.floor(brightness) / 100);
						var lightState = this.datasource().getLightStateFromValue(babelHelpers.extends({}, this.state, {
							brightness: Math.floor(brightness),
							nl_br: Math.floor(brightness)
						}));
						this.lightStateRef && this.lightStateRef.lightStateUpdate({
							"lightState": lightState,
							bright: Math.floor(brightness),
							ct: Math.floor(LightGenerator.value2CT(this.ct))
						}, !isEnd);
						this.props.touchMove && this.props.touchMove(lightState, ScrollDirectionType.Vertical);
					}

					var backgroundColor = this.getLampOnPageBackgroundColor({
						bright: brightness
					});
					this.lampOnPageRef && this.lampOnPageRef.updatebackGroundColor(backgroundColor);

					if (valueChange - lastValueChange > 500 || isEnd) {
						brightness = Math.floor(brightness);

						if (isEnd) {
							this.initBrightness = brightness;
							this.datasource().setCurrentBrightness(Math.floor(brightness));
							this.datasource().updateLightState();
						}

						requestAnimationFrame(function () {
							_this3.applyBrightness(brightness, isEnd, isEnd ? false : true);
						});
						lastValueChange = valueChange;
					}

					currentScrollDirection = ScrollDirectionType.Vertical;
				} else if (isHorizontal && !isVertical) {
					if (!HoriIndicatorShowed) {
						this.HoriIndicatorShowed = true;

						_reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.showHoriIndicator, {
							toValue: 1
						}), _reactNative.Animated.timing(this.state.showIndicator, {
							toValue: 0,
							duration: 200
						}), _reactNative.Animated.timing(this.state.showSettingBtn, {
							toValue: 0,
							duration: 200
						})]).start();
					}

					;
					var percentage = gestureState.dx / width;
					var horizontalValue;
					var backgroundColrObj = {};

					if (this.datasource().lightMode == LightMode.color) {
						horizontalValue = this.initHue + percentage;
						horizontalValue = LightGenerator.bound(horizontalValue);
						this.datasource().hue = horizontalValue;
						this.datasource().colorCache = horizontalValue;
						backgroundColrObj = {
							hue: horizontalValue
						};
					} else if (this.datasource().lightMode == LightMode.ct) {
						horizontalValue = this.initCt + percentage;
						horizontalValue = LightGenerator.bound(horizontalValue);
						var isRight = false;

						if (horizontalValue > 0.5) {
							isRight = true;
						}

						this.isRight = isRight;

						if (this.props.kid_mode) {
							var tmp = LightGenerator.value2CT(horizontalValue);

							if (tmp >= 4000) {
								horizontalValue = LightGenerator.CT2Value(4000, isRight);
							}
						}

						this.ctIndicator.updateCt(horizontalValue);

						var _lightState = this.datasource().getLightStateFromValue(babelHelpers.extends({}, this.state, {
							ct: horizontalValue
						}));

						this.lightStateRef && this.lightStateRef.lightStateUpdate({
							"lightState": _lightState,
							bright: Math.floor(this.state.brightness),
							ct: Math.floor(LightGenerator.value2CT(horizontalValue))
						}, !isEnd);
						backgroundColrObj = {
							ct: horizontalValue
						};
						this.props.touchMove && this.props.touchMove(_lightState, ScrollDirectionType.Horizon);
					} else if (this.datasource().lightMode == LightMode.flow) {
						var duration = this.initCfDuration + percentage;

						if (duration > 1) {
							duration = 1;
						} else if (duration < 0) {
							duration = 0;
						}

						this.datasource().cf_duration = duration;
						horizontalValue = duration;
					}

					var date = new Date();
					var valueChange = date.getTime();

					var _backgroundColor = this.getLampOnPageBackgroundColor(backgroundColrObj);

					this.lampOnPageRef && this.lampOnPageRef.updatebackGroundColor(_backgroundColor);

					if (valueChange - lastValueChange > 500 || isEnd) {
						if (isEnd) {
							if (this.datasource().lightMode == LightMode.color) {
								this.initHue = horizontalValue;
							} else if (this.datasource().lightMode == LightMode.ct) {
								this.initCt = horizontalValue;
								this.datasource().ct = horizontalValue;
								this.datasource().updateLightState();
							} else {
								this.initCfDuration = horizontalValue;
							}
						}

						if (this.datasource().lightMode == LightMode.flow) {
							this.startSimpleCF({}, isEnd);
						} else {
							this.changeLight(horizontalValue, function () {}, isEnd);
						}

						lastValueChange = valueChange;
					} else {}

					currentScrollDirection = ScrollDirectionType.Horizon;
				} else {}
			}
		}, {
			key: "handleOnPanResponderRelease",
			value: function handleOnPanResponderRelease(e, gestureState) {
				var _this4 = this;

				this.handleOnPanResponderMove(e, gestureState, true);

				if (typeof this.props.touchEnd === "function") {
					this.props.touchEnd();
				}

				this.timer = setTimeout(function () {
					_this4.hideIndicator();

					isDirectorSet = false;
					_this4.timer && clearTimeout(_this4.timer);
				}, 300);

				if (!this._isShouldShowUserGuide()) {
					return;
				}

				UserGuideManager.updateShowTypeOfDeviceControlTypeByScrollDirection(this.deviceControlType(), currentScrollDirection);
				this.forceUpdate();
			}
		}, {
			key: "hideIndicator",
			value: function hideIndicator() {
				var _this5 = this;

				_reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.showHoriIndicator, {
					toValue: 0,
					delay: 100
				}), _reactNative.Animated.timing(this.state.showIndicator, {
					toValue: 0,
					delay: 100
				})]).start(function () {
					_reactNative.Animated.timing(_this5.state.showSettingBtn, {
						toValue: 1,
						delay: 100
					}).start();

					_this5.indicatorShowed = false;
					_this5.HoriIndicatorShowed = false;
				});
			}
		}, {
			key: "componentDidMount",
			value: function componentDidMount() {
				var _this6 = this;

				this.forceUpdateSubscription = _reactNative.DeviceEventEmitter.addListener("forceUpdateLampOn", function (object) {
					_this6.forceUpdate();
				});
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				this._clearObserver();
			}
		}, {
			key: "_addObserver",
			value: function _addObserver() {
				this.datasource().addObserver();
			}
		}, {
			key: "_clearObserver",
			value: function _clearObserver() {
				if (this.forceUpdateSubscription) {
					this.forceUpdateSubscription.remove();
				}

				this.subscription && this.subscription.remove();
				this.datasource().clearObserver();
			}
		}, {
			key: "_pushColorPicker",
			value: function _pushColorPicker() {
				var _this7 = this;

				this.props.navigation.push(babelHelpers.extends({
					title: strings.common_view_control_flow_setting
				}, ColorPicker.route, {
					passProps: {
						events: this.eventEmitter,
						cf_bright: this.datasource().brightness,
						cf_duration: this.datasource().cf_duration
					},
					rightButtonTitle: strings.common_text_capture_apply,
					onRightButtonPress: function onRightButtonPress() {
						return _this7._rightBtnPressed("cf_save");
					}
				}));
			}
		}, {
			key: "_rightBtnPressed",
			value: function _rightBtnPressed(string) {
				this.eventEmitter.emit(string, {});
			}
		}, {
			key: "HoriIndicatorShowed",
			set: function set(value) {
				HoriIndicatorShowed = value;
				this.datasource().HoriIndicatorShowed = value;
			}
		}, {
			key: "indicatorShowed",
			set: function set(value) {
				indicatorShowed = value;
				this.datasource().indicatorShowed = value;
			}
		}, {
			key: "deviceModel",
			set: function set(value) {
				this.datasource().deviceModel = value;
			}
		}, {
			key: "componentDataSourceClassName",
			get: function get() {
				return LampOnDataSource;
			}
		}, {
			key: "ct",
			get: function get() {
				return this.datasource().ct;
			}
		}, {
			key: "hue",
			get: function get() {
				return this.datasource().hue;
			}
		}, {
			key: "lightState",
			get: function get() {
				return this.datasource().lightState;
			}
		}, {
			key: "cf_duration",
			get: function get() {
				return this.datasource().cf_duration;
			}
		}, {
			key: "isRight",
			set: function set(value) {
				this.datasource().isRight = value;
			}
		}]);
		return LampOn;
	}(BaseReactComponent);

	var styles = _reactNative.StyleSheet.create({
		fullContainer: {
			flex: 1
		},
		background: {
			backgroundColor: 'transparent',
			position: 'absolute',
			left: 0,
			top: 0,
			width: width,
			height: height
		},
		image: {
			width: width,
			flex: 1
		},
		touchDot: {
			position: 'absolute',
			top: 0,
			backgroundColor: 'transparent'
		},
		indicatorView: {
			position: 'absolute',
			left: -110,
			top: (height - 280) / 2 + 100,
			backgroundColor: 'transparent',
			overflow: 'visible',
			transform: [{
				rotate: '-90deg'
			}]
		},
		hIndicatorView: {
			position: 'absolute',
			top: 70,
			backgroundColor: 'transparent'
		},
		colorFlowSetting: {
			top: 90,
			justifyContent: 'center',
			alignItems: 'center'
		},
		colorFlowButton: {
			borderRadius: 16,
			borderWidth: 1,
			alignItems: 'center',
			borderColor: 'rgba(255,255,255,0.64)',
			backgroundColor: 'transparent'
		},
		label: {
			paddingTop: 7,
			color: '#fff',
			paddingLeft: 10,
			paddingRight: 10,
			paddingBottom: 7,
			fontSize: 16,
			alignItems: 'center',
			backgroundColor: 'transparent'
		},
		navSubtitleStyle: {
			position: 'absolute',
			left: 10 * ratio,
			right: 10 * ratio,
			top: 50 + Theme.APPBAR_MARGINTOP,
			bottom: 0,
			color: "#ffffff",
			textAlign: 'center',
			fontWeight: '400',
			fontSize: 14 * ratio,
			marginVertical: 9,
			opacity: 0.6,
			height: 20,
			backgroundColor: 'transparent'
		},
		modeCenter: {
			flex: 1,
			alignItems: 'center',
			backgroundColor: 'transparent'
		},
		modeCenterText: {
			color: "#fff",
			fontSize: 16,
			marginTop: -8
		},
		modeCenterImg: {
			width: 120,
			height: 120,
			marginTop: height / 4,
			backgroundColor: 'transparent'
		},
		countDown: {
			position: 'absolute',
			justifyContent: 'center',
			alignItems: 'center',
			backgroundColor: 'transparent',
			width: width,
			bottom: 205 * Theme.ratio
		},
		countDownText: {
			fontSize: 38,
			color: 'rgba(255,255,255,0.7)'
		},
		countDownTips: {
			fontSize: 16,
			color: 'rgba(255,255,255,0.6)'
		}
	});

	module.exports = LampOn;
},10496,[10297,10033,10429,10007,10090,10499,10502],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LampOn.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _CommonYeelightModules = _require(_dependencyMap[0]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var _reactNative = _require(_dependencyMap[1]);

    var DeviceControlType = _require(_dependencyMap[2]).DeviceControlType;

    var YLDevice = _CommonYeelightModules2.default.YLDevice;
    var UserGuideAlreadyShowType = {
        Vertical: 1,
        Horizon: 2
    };
    var UserGuideType = {
        Vertical: 'user_guide_vertical',
        Horizon: 'user_guide_horizon',
        None: 'user_guide_none',
        Both: 'user_guide_both'
    };
    var ScrollDirectionType = {
        Vertical: 'vertical',
        Horizon: 'horizon',
        None: 'none'
    };
    var UserGuideImageShowType = {
        EachDirectionSeperate: 0,
        BothDirectionOneShot: 1
    };
    var UserGuideTypeCurrentVersion = 1;
    var UserGuideTypeKey = YLDevice.deviceModel + "_UserGuideTypeKey";

    var UserGuideManager = function () {
        function UserGuideManager() {
            babelHelpers.classCallCheck(this, UserGuideManager);
            this.userGuideData = {};
            this.showCount = 1;
            this.loaded = false;
        }

        babelHelpers.createClass(UserGuideManager, [{
            key: "userGuideShowType",
            value: function userGuideShowType() {
                return UserGuideImageShowType.BothDirectionOneShot;
            }
        }, {
            key: "currentUserGuideAlreadyShowTypeByControlType",
            value: function currentUserGuideAlreadyShowTypeByControlType(type) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('currentUserGuideAlreadyShowType')) {
                    return this.userGuideData[type].currentUserGuideAlreadyShowType;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {
                            currentUserGuideAlreadyShowType: 0
                        };
                    }

                    if (!this.userGuideData[type].hasOwnProperty('currentUserGuideAlreadyShowType')) {
                        this.userGuideData[type].currentUserGuideAlreadyShowType = 0;
                    }

                    return this.userGuideData[type].currentUserGuideAlreadyShowType;
                }
            }
        }, {
            key: "userGuideHorizonOpacityByControlType",
            value: function userGuideHorizonOpacityByControlType(type) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('userGuideHorizonOpacity')) {
                    return this.userGuideData[type].userGuideHorizonOpacity;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {
                            userGuideHorizonOpacity: 1.0
                        };
                    }

                    if (!this.userGuideData[type].hasOwnProperty('userGuideHorizonOpacity')) {
                        this.userGuideData[type].userGuideHorizonOpacity = 1.0;
                    }

                    return this.userGuideData[type].userGuideHorizonOpacity;
                }
            }
        }, {
            key: "userGuideVerticalOpacityByControlType",
            value: function userGuideVerticalOpacityByControlType(type) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('userGuideVerticalOpacity')) {
                    return this.userGuideData[type].userGuideVerticalOpacity;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {
                            userGuideVerticalOpacity: 1.0
                        };
                    }

                    if (!this.userGuideData[type].hasOwnProperty('userGuideVerticalOpacity')) {
                        this.userGuideData[type].userGuideVerticalOpacity = 1.0;
                    }

                    return this.userGuideData[type].userGuideVerticalOpacity;
                }
            }
        }, {
            key: "setCurrentUserGuideAlreadyShowTypeByControlType",
            value: function setCurrentUserGuideAlreadyShowTypeByControlType(type, value) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('currentUserGuideAlreadyShowType')) {
                    this.userGuideData[type].currentUserGuideAlreadyShowType = value;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {};
                    }

                    this.userGuideData[type].currentUserGuideAlreadyShowType = type;
                }
            }
        }, {
            key: "setUserGuideHorizonOpacityByControlType",
            value: function setUserGuideHorizonOpacityByControlType(type, value) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('userGuideHorizonOpacity')) {
                    this.userGuideData[type].userGuideHorizonOpacity = value;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {};
                    }

                    this.userGuideData[type].userGuideHorizonOpacity = value;
                }
            }
        }, {
            key: "setUserGuideVerticalOpacityByControlType",
            value: function setUserGuideVerticalOpacityByControlType(type, value) {
                if (this.userGuideData[type] && this.userGuideData[type].hasOwnProperty('userGuideVerticalOpacity')) {
                    this.userGuideData[type].userGuideVerticalOpacity = value;
                } else {
                    if (!this.userGuideData[type]) {
                        this.userGuideData[type] = {};
                    }

                    this.userGuideData[type].userGuideVerticalOpacity = value;
                }
            }
        }, {
            key: "getDataFromStorage",
            value: function getDataFromStorage() {
                var _this = this;

                _reactNative.AsyncStorage.getItem(UserGuideTypeKey, function (errs, result) {
                    _this.loaded = true;

                    if (!errs) {
                        var userGuideValue = JSON.parse(result);

                        if (userGuideValue && userGuideValue.version && !isNaN(userGuideValue.version) && userGuideValue.version >= UserGuideTypeCurrentVersion) {
                            if (userGuideValue.multiAlreadyShowType) {
                                _this.userGuideData = userGuideValue.multiAlreadyShowType;
                            } else {}
                        }
                    } else {}
                });
            }
        }, {
            key: "getCurrentUserGuideShouldShowTypeByDeviceControlType",
            value: function getCurrentUserGuideShouldShowTypeByDeviceControlType(type) {
                var currentUserGuideAlreadyShowType = this.currentUserGuideAlreadyShowTypeByControlType(type);
                var returnType = UserGuideType.None;

                if ((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Vertical) == UserGuideAlreadyShowType.Vertical && (currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Horizon) == UserGuideAlreadyShowType.Horizon) {
                    returnType = UserGuideType.None;
                } else if ((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Horizon) != UserGuideAlreadyShowType.Horizon && (currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Vertical) == UserGuideAlreadyShowType.Vertical) {
                    returnType = UserGuideType.Horizon;
                } else if ((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Vertical) != UserGuideAlreadyShowType.Vertical && (currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Horizon) == UserGuideAlreadyShowType.Horizon) {
                    returnType = UserGuideType.Vertical;
                } else {
                    if (type == DeviceControlType.nightlight || type == DeviceControlType.none) {
                        returnType = UserGuideType.Vertical;
                    } else {
                        returnType = UserGuideType.Both;
                    }
                }

                return returnType;
            }
        }, {
            key: "getCurrentUserGuideOpacityByDeviceControlType",
            value: function getCurrentUserGuideOpacityByDeviceControlType(type) {
                var opacity = 0;
                var currentUserGuideAlreadyShowType = this.currentUserGuideAlreadyShowTypeByControlType(type);

                if (!((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Vertical) == UserGuideAlreadyShowType.Vertical) || !((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Horizon) == UserGuideAlreadyShowType.Horizon)) {
                    if (UserGuideImageShowType.BothDirectionOneShot == this.userGuideShowType()) {
                        opacity = Math.min(this.userGuideVerticalOpacityByControlType(type), this.userGuideHorizonOpacityByControlType(type));
                    } else {
                        opacity = Math.max(this.userGuideVerticalOpacityByControlType(type), this.userGuideHorizonOpacityByControlType(type));
                    }
                }

                if (!this.loaded) {
                    opacity = 0;
                }

                return opacity;
            }
        }, {
            key: "isShouldShowUserGuideByDeviceType",
            value: function isShouldShowUserGuideByDeviceType(type) {
                var currentUserGuideAlreadyShowType = this.currentUserGuideAlreadyShowTypeByControlType(type);

                if ((currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Vertical) == UserGuideAlreadyShowType.Vertical && (currentUserGuideAlreadyShowType & UserGuideAlreadyShowType.Horizon) == UserGuideAlreadyShowType.Horizon) {
                    return false;
                } else {
                    return true;
                }
            }
        }, {
            key: "updateShowTypeOfDeviceControlTypeByScrollDirection",
            value: function updateShowTypeOfDeviceControlTypeByScrollDirection(deviceControlType, scrollDirection) {
                var showCount = this.showCount;

                if (this.getCurrentUserGuideOpacityByDeviceControlType(deviceControlType) > 0) {
                    if (ScrollDirectionType.Vertical == scrollDirection) {
                        var userGuideVerticalOpacity = this.userGuideVerticalOpacityByControlType(deviceControlType);
                        var opacity = userGuideVerticalOpacity - 1.0 / showCount;
                        this.setUserGuideVerticalOpacityByControlType(deviceControlType, opacity > 0 ? opacity : 0);
                    } else if (ScrollDirectionType.Horizon == scrollDirection) {
                        var userGuideHorizonOpacity = this.userGuideHorizonOpacityByControlType(deviceControlType);
                        var opacity = userGuideHorizonOpacity - 1.0 / showCount;
                        this.setUserGuideHorizonOpacityByControlType(deviceControlType, opacity > 0 ? opacity : 0);
                    } else {}
                }

                if (this.getCurrentUserGuideOpacityByDeviceControlType(deviceControlType) <= 0) {
                    var currentUserGuideAlreadyShowType = this.currentUserGuideAlreadyShowTypeByControlType(deviceControlType);

                    if (ScrollDirectionType.Horizon == scrollDirection) {
                        var tmp = currentUserGuideAlreadyShowType | UserGuideAlreadyShowType.Horizon;
                        this.setCurrentUserGuideAlreadyShowTypeByControlType(deviceControlType, tmp);
                    } else if (ScrollDirectionType.Vertical == scrollDirection) {
                        var tmp = currentUserGuideAlreadyShowType | UserGuideAlreadyShowType.Vertical;
                        this.setCurrentUserGuideAlreadyShowTypeByControlType(deviceControlType, tmp);
                    }

                    var value = {
                        multiAlreadyShowType: this.userGuideData,
                        version: UserGuideTypeCurrentVersion
                    };

                    _reactNative.AsyncStorage.setItem(UserGuideTypeKey, JSON.stringify(value), function (errs) {
                        if (errs) {}

                        if (!errs) {}
                    });
                }
            }
        }]);
        return UserGuideManager;
    }();

    module.exports = {
        UserGuideManager: UserGuideManager
    };
},10499,[10007,10033,10502],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/UserGuideManager.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var DeviceControlType = {
        colorTemperature: 1,
        color: 2,
        flow: 3,
        nightlight: 4,
        none: -1
    };
    module.exports = {
        DeviceControlType: DeviceControlType
    };
},10502,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/DeviceControlType.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var CLImage = CommonYeelightModules.CLImage,
      Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var LampOnGesturePage = function (_Component) {
    babelHelpers.inherits(LampOnGesturePage, _Component);

    function LampOnGesturePage(props) {
      babelHelpers.classCallCheck(this, LampOnGesturePage);

      var _this = babelHelpers.possibleConstructorReturn(this, (LampOnGesturePage.__proto__ || Object.getPrototypeOf(LampOnGesturePage)).call(this, props));

      _this.gesturePageActive = _this.props.active;
      _this.state = {
        pan: new _reactNative.Animated.ValueXY(),
        showDot: new _reactNative.Animated.Value(0),
        backgroundColor: _this.props.backgroundColor,
        background: _this.props.background
      };
      return _this;
    }

    babelHelpers.createClass(LampOnGesturePage, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.backgroundColor && this.props.backgroundColor !== nextProps.backgroundColor) {
          this.setState({
            backgroundColor: nextProps.backgroundColor,
            background: nextProps.background
          });
        }
      }
    }, {
      key: "updateGesturePageActive",
      value: function updateGesturePageActive(active) {
        this.gesturePageActive = active;
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        var touchDotHeight = this.props.touchDotHeight;
        this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            if (!_this2.gesturePageActive) {
              return false;
            }

            if (_this2.props.onStartShouldSetPanResponder) {
              return _this2.props.onStartShouldSetPanResponder();
            }

            return true;
          },
          onPanResponderGrant: function onPanResponderGrant(e, gestureState) {
            _this2.timer && clearTimeout(_this2.timer);
            var x = gestureState.x0;
            var y = gestureState.y0;

            _reactNative.Animated.parallel([_reactNative.Animated.timing(_this2.state.pan, {
              toValue: {
                x: x - touchDotHeight / 2,
                y: y - touchDotHeight / 2
              },
              duration: 1
            })]).start();

            _this2.firstValidTouchMove = true;
            _this2.props.onPanResponderGrant && _this2.props.onPanResponderGrant(e, gestureState);
          },
          onPanResponderMove: function onPanResponderMove(e, gestureState) {
            _this2.handleOnPanResponderMove(e, gestureState, false);
          },
          onPanResponderRelease: function onPanResponderRelease(e, gestureState) {
            _this2.handleOnPanResponderRelease(e, gestureState);
          },
          onPanResponderTerminate: function onPanResponderTerminate(e, gestureState) {
            _this2.handleOnPanResponderRelease(e, gestureState);
          }
        });
      }
    }, {
      key: "handleOnPanResponderMove",
      value: function handleOnPanResponderMove(e, gestureState, isEnd) {
        var x = gestureState.moveX;
        var y = gestureState.moveY;
        var touchDotHeight = this.props.touchDotHeight;

        if (gestureState.moveX || gestureState.moveY) {
          this.dotImage.setNativeProps({
            style: {
              transform: [{
                translateX: x - touchDotHeight / 2
              }, {
                translateY: y - touchDotHeight / 2
              }]
            }
          });
        }

        if (this.firstValidTouchMove) {
          this.firstValidTouchMove = false;

          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.state.showDot, {
            toValue: 1,
            duration: 600
          })]).start();
        }

        this.props.handleOnPanResponderMove && this.props.handleOnPanResponderMove(e, gestureState, isEnd);
      }
    }, {
      key: "handleOnPanResponderRelease",
      value: function handleOnPanResponderRelease(e, gestureState) {
        _reactNative.Animated.timing(this.state.showDot, {
          toValue: 0,
          duration: 500
        }).start();

        this.props.handleOnPanResponderRelease && this.props.handleOnPanResponderRelease(e, gestureState);
      }
    }, {
      key: "updatebackGroundColor",
      value: function updatebackGroundColor(backgroundColor) {
        this.PageBackgroundColor.setNativeProps({
          style: [styles.fullContainer, {
            backgroundColor: backgroundColor
          }]
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            touchDotImage = _props.touchDotImage,
            touchDotHeight = _props.touchDotHeight;
        var _state = this.state,
            backgroundColor = _state.backgroundColor,
            background = _state.background;
        return _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            style: [styles.fullContainer, {
              backgroundColor: backgroundColor
            }]
          }, this._panResponder.panHandlers, {
            ref: function ref(_ref2) {
              _this3.PageBackgroundColor = _ref2;
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            {
              pointerEvents: "none",
              style: styles.background
            },
            background
          ),
          this.props.children,
          _react2.default.createElement(
            _reactNative.Animated.View,
            {
              key: "dotImage",
              ref: function ref(_ref) {
                return _this3.dotImage = _ref;
              },
              style: [styles.touchDot, {
                opacity: this.state.showDot
              }]
            },
            _react2.default.createElement(CLImage, {
              imagePath: touchDotImage,
              style: [{
                width: touchDotHeight
              }, {
                height: touchDotHeight
              }]
            })
          )
        );
      }
    }]);
    return LampOnGesturePage;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    fullContainer: {
      flex: 1
    },
    background: {
      backgroundColor: "transparent",
      position: "absolute",
      left: 0,
      top: 0,
      width: width,
      height: height
    },
    touchDot: {
      position: "absolute",
      top: 0,
      backgroundColor: "transparent"
    }
  });

  module.exports = LampOnGesturePage;
},10505,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LampOnGesturePage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var CommonYeelightModules = _require(_dependencyMap[2]);

	var Theme = CommonYeelightModules.Theme,
	    strings = CommonYeelightModules.strings;
	var ratio = Theme.ratio;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var LightStateComponent = function (_Component) {
		babelHelpers.inherits(LightStateComponent, _Component);

		function LightStateComponent(props) {
			babelHelpers.classCallCheck(this, LightStateComponent);

			var _this = babelHelpers.possibleConstructorReturn(this, (LightStateComponent.__proto__ || Object.getPrototypeOf(LightStateComponent)).call(this, props));

			_this.isGestureMoving = false;
			_this.state = {
				lightState: props.lightState,
				bright: props.bright,
				ct: props.ct
			};
			return _this;
		}

		babelHelpers.createClass(LightStateComponent, [{
			key: "componentWillReceiveProps",
			value: function componentWillReceiveProps(nextProps) {
				if (!this.isGestureMoving && nextProps.lightState && nextProps.lightState != this.state.lightState) {
					this.setState({
						lightState: nextProps.lightState
					});
				}

				if (this.props.mode && nextProps.bright && nextProps.ct) {
					this.setState({
						bright: nextProps.bright,
						ct: nextProps.ct
					});
				}
			}
		}, {
			key: "lightStateUpdate",
			value: function lightStateUpdate(updateObj, isMoving) {
				var lightState = updateObj.lightState,
				    bright = updateObj.bright,
				    ct = updateObj.ct;
				this.isGestureMoving = isMoving;

				if (lightState != this.state.lightState) {
					this.setState({
						lightState: lightState
					});
				}

				if (this.props.mode && bright && ct) {
					this.setState({
						bright: bright,
						ct: ct
					});
				}
			}
		}, {
			key: "render",
			value: function render() {
				var _state = this.state,
				    lightState = _state.lightState,
				    bright = _state.bright,
				    ct = _state.ct;
				var mode = this.props.mode;

				if (bright && String(bright).length < 2) {
					bright = "0" + bright;
				}

				if (mode) {
					return _react2.default.createElement(
						_reactNative.View,
						{
							style: styles.statusView
						},
						_react2.default.createElement(
							_reactNative.View,
							{
								style: [styles.statusSubview, {
									justifyContent: "flex-end"
								}]
							},
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: styles.statusText
								},
								strings.common_title_bar_brightness + " "
							),
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: styles.statusText
								},
								bright + "%"
							)
						),
						_react2.default.createElement(
							_reactNative.Text,
							{
								style: [{
									width: 12
								}, styles.statusText]
							},
							"\uFF5C"
						),
						_react2.default.createElement(
							_reactNative.View,
							{
								style: styles.statusSubview
							},
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: styles.statusText
								},
								strings.common_title_bar_ct + " "
							),
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: styles.statusText
								},
								ct + "K"
							)
						)
					);
				}

				return _react2.default.createElement(
					_reactNative.Text,
					{
						numberOfLines: 1,
						style: styles.navSubtitleStyle
					},
					lightState
				);
			}
		}]);
		return LightStateComponent;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		navSubtitleStyle: {
			position: 'absolute',
			left: 10 * ratio,
			right: 10 * ratio,
			top: 50 + Theme.APPBAR_MARGINTOP,
			bottom: 0,
			color: "#ffffff",
			textAlign: 'center',
			fontWeight: '400',
			fontSize: 14 * ratio,
			marginVertical: 9,
			opacity: 0.6,
			height: 20,
			backgroundColor: 'transparent'
		},
		statusView: {
			flex: 1,
			position: "absolute",
			top: 58 + Theme.APPBAR_MARGINTOP,
			width: width,
			backgroundColor: "transparent",
			flexDirection: 'row'
		},
		statusSubview: {
			width: width / 2 - 8,
			flexDirection: "row"
		},
		statusText: {
			color: '#fff',
			fontSize: 12 * Theme.ratio
		}
	});

	module.exports = LightStateComponent;
},10508,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LightStateComponent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var CommonYeelightModules = _require(_dependencyMap[2]);

	var Theme = CommonYeelightModules.Theme,
	    strings = CommonYeelightModules.strings,
	    Api = CommonYeelightModules.Api;
	var ratio = Theme.ratio;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var LightPromodoStatusView = function (_Component) {
		babelHelpers.inherits(LightPromodoStatusView, _Component);

		function LightPromodoStatusView(props) {
			babelHelpers.classCallCheck(this, LightPromodoStatusView);

			var _this = babelHelpers.possibleConstructorReturn(this, (LightPromodoStatusView.__proto__ || Object.getPrototypeOf(LightPromodoStatusView)).call(this, props));

			_this.state = {
				countDown: "--:--"
			};
			return _this;
		}

		babelHelpers.createClass(LightPromodoStatusView, [{
			key: "componentWillReceiveProps",
			value: function componentWillReceiveProps(nextProps) {
				if (nextProps.pdo_status) {
					this._startPdoSync();
				} else {
					this._stopPdoSync();
				}
			}
		}, {
			key: "_startPdoSync",
			value: function _startPdoSync() {
				if (this.timer) {
					return;
				}

				this.pdoStart = true;

				this._getPomodoroStatus();

				this.timer = setInterval(function () {
					this._getPomodoroStatus();
				}.bind(this), 30000);
			}
		}, {
			key: "_stopPdoSync",
			value: function _stopPdoSync() {
				if (global.pdo_wt) {
					var timer = global.pdo_wt * 60;
					this.updateCountDownTimer(timer);
				}

				this.timer && clearInterval(this.timer);
				this.countDownTimer && clearInterval(this.countDownTimer);
				this.timer = null;
				this.countDownTimer = null;
			}
		}, {
			key: "_getPomodoroStatus",
			value: function _getPomodoroStatus() {
				var _this2 = this;

				Api.getPomodoroStatus(function (s, r) {
					_this2._handPdo(s, r);
				});
			}
		}, {
			key: "_handPdo",
			value: function _handPdo(s, r) {
				if (s && r && Array.isArray(r.result)) {
					var array = r.result[0].split('|');

					if (array.length >= 3 && parseInt(array[0]) == 1) {
						var duration = parseInt(array[2].toString().substring(0, 4));

						if (duration > 0) {
							this.pdo_wt = duration;
							this.setState({
								pdo_r: true
							});
						} else {
							duration = parseInt(array[2].toString().substring(4, 8));
							this.pdo_bt = duration;
							this.setState({
								pdo_r: false
							});
						}

						this._startCountDown(duration);
					}
				}
			}
		}, {
			key: "_startCountDown",
			value: function _startCountDown(duration) {
				var timer = duration;

				if (this.countDownTimer) {
					clearInterval(this.countDownTimer);
					this.countDownTimer = null;
				}

				this.countDownTimer = setInterval(function () {
					this.updateCountDownTimer(timer);

					if (--timer < 0) {
						this._stopPdoSync();

						this._startPdoSync();
					}
				}.bind(this), 1000);
			}
		}, {
			key: "updateCountDownTimer",
			value: function updateCountDownTimer(timer) {
				var minutes = parseInt(timer / 60, 10);
				var seconds = parseInt(timer % 60, 10);
				minutes = minutes < 10 ? "0" + minutes : minutes;
				seconds = seconds < 10 ? "0" + seconds : seconds;
				this.setState({
					countDown: minutes + ":" + seconds
				});
			}
		}, {
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: [styles.countDown, {
							bottom: this.props.bottom,
							opacity: this.props.pdo_status && this.state.countDown !== "--:--" ? 1.0 : 0.0
						}]
					},
					_react2.default.createElement(
						_reactNative.Text,
						{
							style: styles.countDownText
						},
						this.state.countDown
					),
					_react2.default.createElement(
						_reactNative.Text,
						{
							style: styles.countDownTips
						},
						this.state.pdo_r ? strings.common_pdo_txt_rest : strings.common_pdo_txt_work
					)
				);
			}
		}]);
		return LightPromodoStatusView;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		countDown: {
			position: 'absolute',
			justifyContent: 'center',
			alignItems: 'center',
			backgroundColor: 'transparent',
			width: width,
			bottom: 205 * Theme.ratio
		},
		countDownText: {
			fontSize: 38,
			color: 'rgba(255,255,255,0.7)'
		},
		countDownTips: {
			fontSize: 16,
			color: 'rgba(255,255,255,0.6)'
		}
	});

	module.exports = LightPromodoStatusView;
},10511,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/LightPromodoStatusView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _CommonYeelightModules = _require(_dependencyMap[1]);

  var ListView = _require(_dependencyMap[2]);

  var SwipeableListViewDataSource = _require(_dependencyMap[3]);

  var SwipeableRow = _require(_dependencyMap[4]);

  var SwipeableListView = function (_React$Component) {
    babelHelpers.inherits(SwipeableListView, _React$Component);
    babelHelpers.createClass(SwipeableListView, null, [{
      key: "getNewDataSource",
      value: function getNewDataSource() {
        return new SwipeableListViewDataSource({
          getRowData: function getRowData(data, sectionID, rowID) {
            return data[sectionID][rowID];
          },
          getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
            return data[sectionID];
          },
          rowHasChanged: function rowHasChanged(row1, row2) {
            return row1 !== row2;
          },
          sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
            return s1 !== s2;
          }
        });
      }
    }]);

    function SwipeableListView(props, context) {
      babelHelpers.classCallCheck(this, SwipeableListView);

      var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

      _this._renderRow = function (rowData, sectionID, rowID) {
        var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

        if (!slideoutView) {
          return _this.props.renderRow(rowData, sectionID, rowID);
        }

        var shouldBounceOnMount = false;

        if (_this._shouldBounceFirstRowOnMount) {
          _this._shouldBounceFirstRowOnMount = false;
          shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
        }

        return _react2.default.createElement(
          SwipeableRow,
          {
            slideoutView: slideoutView,
            isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
            maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
            key: rowID,
            onOpen: function onOpen() {
              return _this._onOpen(rowData.id);
            },
            onClose: function onClose() {
              return _this._onClose(rowData.id);
            },
            onSwipeEnd: function onSwipeEnd() {
              return _this._setListViewScrollable(true);
            },
            onSwipeStart: function onSwipeStart() {
              return _this._setListViewScrollable(false);
            },
            shouldBounceOnMount: shouldBounceOnMount
          },
          _this.props.renderRow(rowData, sectionID, rowID)
        );
      };

      _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
      _this.state = {
        dataSource: _this.props.dataSource
      };
      return _this;
    }

    babelHelpers.createClass(SwipeableListView, [{
      key: "_onScroll",
      value: function _onScroll() {
        var _this2 = this;

        return function (e) {
          if (_this2.props.dataSource.getOpenRowID()) {
            _this2.setState({
              dataSource: _this2.state.dataSource.setOpenRowID(null)
            });
          }

          _this2.props.onScroll && _this2.props.onScroll(e);
        };
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
          this.setState({
            dataSource: nextProps.dataSource
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react2.default.createElement(ListView, babelHelpers.extends({}, this.props, {
          ref: function ref(_ref) {
            _this3._listViewRef = _ref;
          },
          dataSource: this.state.dataSource.getDataSource(),
          onScroll: this._onScroll,
          renderRow: this._renderRow
        }));
      }
    }, {
      key: "_setListViewScrollable",
      value: function _setListViewScrollable(value) {
        if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
          this._listViewRef.setNativeProps({
            scrollEnabled: value
          });
        }
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
          return this._listViewRef.getScrollResponder();
        }
      }
    }, {
      key: "_getMaxSwipeDistance",
      value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
        if (typeof this.props.maxSwipeDistance === 'function') {
          return this.props.maxSwipeDistance(rowData, sectionID, rowID);
        }

        return this.props.maxSwipeDistance;
      }
    }, {
      key: "_onOpen",
      value: function _onOpen(rowID) {
        this.setState({
          dataSource: this.state.dataSource.setOpenRowID(rowID)
        });
      }
    }, {
      key: "_onClose",
      value: function _onClose(rowID) {
        this.setState({
          dataSource: this.state.dataSource.setOpenRowID(null)
        });
      }
    }]);
    return SwipeableListView;
  }(_react2.default.Component);

  SwipeableListView.defaultProps = {
    bounceFirstRowOnMount: false,
    renderQuickActions: function renderQuickActions() {
      return null;
    }
  };
  SwipeableListView._listViewRef = null;
  SwipeableListView._shouldBounceFirstRowOnMount = false;
  module.exports = SwipeableListView;
},10514,[10297,10007,10663,10517,10520],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/SwipeableRow/SwipeableListView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var ListViewDataSource = _require(_dependencyMap[0]);

  var SwipeableListViewDataSource = function () {
    function SwipeableListViewDataSource(params) {
      var _this = this;

      babelHelpers.classCallCheck(this, SwipeableListViewDataSource);
      this._dataSource = new ListViewDataSource({
        getRowData: params.getRowData,
        getSectionHeaderData: params.getSectionHeaderData,
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
        },
        sectionHeaderHasChanged: params.sectionHeaderHasChanged
      });
    }

    babelHelpers.createClass(SwipeableListViewDataSource, [{
      key: "cloneWithRowsAndSections",
      value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
        this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);
        this._dataBlob = dataBlob;
        this.rowIdentities = this._dataSource.rowIdentities;
        this.sectionIdentities = this._dataSource.sectionIdentities;
        return this;
      }
    }, {
      key: "getDataSource",
      value: function getDataSource() {
        return this._dataSource;
      }
    }, {
      key: "getOpenRowID",
      value: function getOpenRowID() {
        return this._openRowID;
      }
    }, {
      key: "getFirstRowID",
      value: function getFirstRowID() {
        if (this.rowIdentities) {
          return this.rowIdentities[0] && this.rowIdentities[0][0];
        }

        return Object.keys(this._dataBlob)[0];
      }
    }, {
      key: "setOpenRowID",
      value: function setOpenRowID(rowID) {
        this._previousOpenRowID = this._openRowID;
        this._openRowID = rowID;
        this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);
        return this;
      }
    }]);
    return SwipeableListViewDataSource;
  }();

  module.exports = SwipeableListViewDataSource;
},10517,[10666],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/SwipeableRow/SwipeableListViewDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _CommonYeelightModules = _require(_dependencyMap[1]);

  var Animated = _require(_dependencyMap[2]);

  var PanResponder = _require(_dependencyMap[3]);

  var StyleSheet = _require(_dependencyMap[4]);

  var TimerMixin = _require(_dependencyMap[5]);

  var View = _require(_dependencyMap[6]);

  var emptyFunction = _require(_dependencyMap[7]);

  var IS_RTL = false;
  var CLOSED_LEFT_POSITION = 0;
  var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;
  var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;
  var SLOW_SPEED_SWIPE_FACTOR = 4;
  var SWIPE_DURATION = 300;
  var ON_MOUNT_BOUNCE_DELAY = 700;
  var ON_MOUNT_BOUNCE_DURATION = 400;
  var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
  var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;
  var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

  var SwipeableRow = function (_React$Component) {
    babelHelpers.inherits(SwipeableRow, _React$Component);

    function SwipeableRow(props) {
      babelHelpers.classCallCheck(this, SwipeableRow);

      var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableRow.__proto__ || Object.getPrototypeOf(SwipeableRow)).call(this, props));

      _this._panResponder = {};
      _this._previousLeft = CLOSED_LEFT_POSITION;
      _this.mixins = [TimerMixin];
      _this.state = {
        currentLeft: new Animated.Value(_this._previousLeft),
        isSwipeableViewRendered: false,
        rowHeight: null
      };
      return _this;
    }

    babelHelpers.createClass(SwipeableRow, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this._panResponder = PanResponder.create({
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(e, gs) {
            return _this2._handleMoveShouldSetPanResponderCapture(e, gs);
          },
          onPanResponderGrant: function onPanResponderGrant(e, gs) {
            return _this2._handlePanResponderGrant(e, gs);
          },
          onPanResponderMove: function onPanResponderMove(e, gs) {
            return _this2._handlePanResponderMove(e, gs);
          },
          onPanResponderRelease: function onPanResponderRelease(e, gs) {
            return _this2._handlePanResponderEnd(e, gs);
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest(e, gs) {
            return _this2._onPanResponderTerminationRequest(e, gs);
          },
          onPanResponderTerminate: function onPanResponderTerminate(e, gs) {
            return _this2._handlePanResponderEnd(e, gs);
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
            return false;
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        if (this.props.shouldBounceOnMount) {
          this.setTimeout(function () {
            _this3._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
          }, ON_MOUNT_BOUNCE_DELAY);
        }
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (this.props.isOpen && !nextProps.isOpen) {
          this._animateToClosedPosition();
        }
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps, nextState) {
        if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
          return false;
        }

        return true;
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var slideOutView = void 0;

        if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
          slideOutView = _react2.default.createElement(
            View,
            {
              style: [styles.slideOutContainer, {
                height: this.state.rowHeight
              }]
            },
            this.props.slideoutView
          );
        }

        var swipeableView = _react2.default.createElement(
          Animated.View,
          {
            onLayout: function onLayout(e) {
              return _this4._onSwipeableViewLayout(e);
            },
            style: {
              transform: [{
                translateX: this.state.currentLeft
              }]
            }
          },
          this.props.children
        );

        return _react2.default.createElement(
          View,
          this._panResponder.panHandlers,
          slideOutView,
          swipeableView
        );
      }
    }, {
      key: "_onSwipeableViewLayout",
      value: function _onSwipeableViewLayout(event) {
        this.setState({
          isSwipeableViewRendered: true,
          rowHeight: event.nativeEvent.layout.height
        });
      }
    }, {
      key: "_handleMoveShouldSetPanResponderCapture",
      value: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
        return gestureState.dy < 10 && this._isValidSwipe(gestureState);
      }
    }, {
      key: "_handlePanResponderGrant",
      value: function _handlePanResponderGrant(event, gestureState) {}
    }, {
      key: "_handlePanResponderMove",
      value: function _handlePanResponderMove(event, gestureState) {
        if (this._previousLeft + gestureState.dx >= 0) {
          gestureState.dx = -this._previousLeft;
        } else if (this._previousLeft + gestureState.dx <= -this.props.maxSwipeDistance) {
          gestureState.dx = -this.props.maxSwipeDistance - this._previousLeft;
        }

        if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
          return;
        }

        this.props.onSwipeStart();

        if (this._isSwipingRightFromClosed(gestureState)) {
          this._swipeSlowSpeed(gestureState);
        } else {
          this._swipeFullSpeed(gestureState);
        }
      }
    }, {
      key: "_isSwipingRightFromClosed",
      value: function _isSwipingRightFromClosed(gestureState) {
        var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
        return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
      }
    }, {
      key: "_swipeFullSpeed",
      value: function _swipeFullSpeed(gestureState) {
        this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
      }
    }, {
      key: "_swipeSlowSpeed",
      value: function _swipeSlowSpeed(gestureState) {
        this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
      }
    }, {
      key: "_isSwipingExcessivelyRightFromClosedPosition",
      value: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
        var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
        return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
      }
    }, {
      key: "_onPanResponderTerminationRequest",
      value: function _onPanResponderTerminationRequest(event, gestureState) {
        return false;
      }
    }, {
      key: "_animateTo",
      value: function _animateTo(toValue) {
        var _this5 = this;

        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
        var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;
        Animated.timing(this.state.currentLeft, {
          duration: duration,
          toValue: toValue
        }).start(function () {
          _this5._previousLeft = toValue;
          callback();
        });
      }
    }, {
      key: "_animateToOpenPosition",
      value: function _animateToOpenPosition() {
        var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;

        this._animateTo(-maxSwipeDistance);
      }
    }, {
      key: "_animateToOpenPositionWith",
      value: function _animateToOpenPositionWith(speed, distMoved) {
        speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
        var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
        var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;

        this._animateTo(-maxSwipeDistance, duration);
      }
    }, {
      key: "_animateToClosedPosition",
      value: function _animateToClosedPosition() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

        this._animateTo(CLOSED_LEFT_POSITION, duration);
      }
    }, {
      key: "_animateToClosedPositionDuringBounce",
      value: function _animateToClosedPositionDuringBounce() {
        this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
      }
    }, {
      key: "_animateBounceBack",
      value: function _animateBounceBack(duration) {
        var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;

        this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
      }
    }, {
      key: "_isValidSwipe",
      value: function _isValidSwipe(gestureState) {
        return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
      }
    }, {
      key: "_shouldAnimateRemainder",
      value: function _shouldAnimateRemainder(gestureState) {
        return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
      }
    }, {
      key: "_handlePanResponderEnd",
      value: function _handlePanResponderEnd(event, gestureState) {
        var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;

        if (this._isSwipingRightFromClosed(gestureState)) {
          this.props.onOpen();

          this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
        } else if (this._shouldAnimateRemainder(gestureState)) {
          if (horizontalDistance < 0) {
            this.props.onOpen();

            this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
          } else {
            this.props.onClose();

            this._animateToClosedPosition();
          }
        } else {
          if (this._previousLeft === CLOSED_LEFT_POSITION) {
            this._animateToClosedPosition();
          } else {
            this._animateToOpenPosition();
          }
        }

        this.props.onSwipeEnd();
      }
    }]);
    return SwipeableRow;
  }(_react2.default.Component);

  SwipeableRow.defaultProps = {
    isOpen: false,
    maxSwipeDistance: 0,
    onOpen: emptyFunction,
    onClose: emptyFunction,
    onSwipeEnd: emptyFunction,
    onSwipeStart: emptyFunction,
    swipeThreshold: 30
  };
  ;
  var styles = StyleSheet.create({
    slideOutContainer: {
      bottom: 0,
      left: 0,
      position: 'absolute',
      right: 0,
      top: 0
    }
  });
  SwipeableRow.propTypes = {
    children: _CommonYeelightModules.PropTypes.any,
    isOpen: _CommonYeelightModules.PropTypes.bool,
    maxSwipeDistance: _CommonYeelightModules.PropTypes.number.isRequired,
    onOpen: _CommonYeelightModules.PropTypes.func.isRequired,
    onClose: _CommonYeelightModules.PropTypes.func.isRequired,
    onSwipeEnd: _CommonYeelightModules.PropTypes.func.isRequired,
    onSwipeStart: _CommonYeelightModules.PropTypes.func.isRequired,
    shouldBounceOnMount: _CommonYeelightModules.PropTypes.bool,
    slideoutView: _CommonYeelightModules.PropTypes.node.isRequired,
    swipeThreshold: _CommonYeelightModules.PropTypes.number
  };
  module.exports = SwipeableRow;
},10520,[10297,10007,10522,10768,10441,10513,10447,10081],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/SwipeableRow/SwipeableRow.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var strings = _require(_dependencyMap[2]);

    var Cloud = _require(_dependencyMap[3]);

    var Dimensions = _require(_dependencyMap[4]);

    var CommonYeelightModules = _require(_dependencyMap[5]);

    var YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
        CommonTypeEnum = CommonYeelightModules.CommonTypeEnum,
        Theme = CommonYeelightModules.Theme;
    var GlobalConstant = CommonTypeEnum.GlobalConstant;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var HEADER = '#f2f2f2';
    var BGWASH = 'rgba(255,255,255,0.8)';
    var DISABLED_WASH = 'rgba(255,255,255,0.25)';
    var TEXT_INPUT_REF = 'urlInput';
    var WEBVIEW_REF = 'webview';
    var lang = Cloud.currentLang();
    var subscriptionBack;
    var exitNotify;
    var NAV_TITLE = "";

    var WebViewPage = function (_Component) {
        babelHelpers.inherits(WebViewPage, _Component);

        function WebViewPage(props) {
            babelHelpers.classCallCheck(this, WebViewPage);

            var _this = babelHelpers.possibleConstructorReturn(this, (WebViewPage.__proto__ || Object.getPrototypeOf(WebViewPage)).call(this, props));

            _this.onShouldStartLoadWithRequest = function (event) {
                return true;
            };

            _this.onNavigationStateChange = function (navState) {
                var canGoBack = navState.canGoBack;

                if (navState.url.indexOf("faq/app/introduce") !== -1) {
                    if (navState.url.indexOf("luna") != -1 || navState.url.indexOf("rc-cycle") != -1) {
                        NAV_TITLE = strings.common_remote_control;
                    } else if (navState.url.indexOf("intro-list") !== -1) {
                        NAV_TITLE = strings.common_remote_connection_web_title;
                    } else if (navState.url.indexOf("intro-rc-aura") !== -1) {
                        NAV_TITLE = strings.common_remote_control;
                    } else if (navState.url.indexOf("intro-rc-auster") !== -1 || navState.url.indexOf("intro-rc-bhfv3") !== -1) {
                        NAV_TITLE = strings.common_remote_control_auster;
                    } else {
                        NAV_TITLE = navState.url.indexOf("seesaw") !== -1 || navState.url.indexOf("type=rc-motor") !== -1 ? strings.common_remote_control_seesaw : "";
                    }

                    _this.props.navigation.setParams({
                        title: NAV_TITLE
                    });
                } else {
                    if (navState.url == _this.state.url) {
                        canGoBack = false;
                    }
                }

                _this.setState({
                    backButtonEnabled: canGoBack,
                    url: navState.url,
                    loading: navState.loading,
                    scalesPageToFit: true
                });
            };

            var url = _this.props.url ? _this.props.url : '';
            _this.state = {
                url: url,
                status: 'No Page Loaded',
                backButtonEnabled: false,
                forwardButtonEnabled: false,
                loading: true,
                scalesPageToFit: true,
                inputText: ''
            };
            return _this;
        }

        babelHelpers.createClass(WebViewPage, [{
            key: "handleTextInputChange",
            value: function handleTextInputChange(event) {
                this.state.inputText = event.nativeEvent.text;
            }
        }, {
            key: "render",
            value: function render() {
                this.state.inputText = this.state.url;
                return _react2.default.createElement(
                    YLSafeAreaView,
                    {
                        style: [styles.container],
                        forceInset: {
                            bottom: 0
                        }
                    },
                    _react2.default.createElement(_reactNative.WebView, {
                        ref: WEBVIEW_REF,
                        automaticallyAdjustContentInsets: false,
                        style: [styles.webView, {
                            marginTop: this.props.insetForNavigator.top
                        }],
                        source: {
                            uri: this.state.inputText
                        },
                        javaScriptEnabled: true,
                        domStorageEnabled: true,
                        decelerationRate: "normal",
                        onNavigationStateChange: this.onNavigationStateChange,
                        onShouldStartLoadWithRequest: this.onShouldStartLoadWithRequest,
                        startInLoadingState: true,
                        scalesPageToFit: this.state.scalesPageToFit
                    })
                );
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                this.subscriptionBack = _reactNative.DeviceEventEmitter.addListener('backFromWebViewPage', function () {
                    if (_this2.state.backButtonEnabled) {
                        _this2.refs[WEBVIEW_REF].goBack();
                    } else {
                        _this2.props.navigation.pop();
                    }
                });
                exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
                    exitNotify.remove();

                    if (_this2.subscriptionBack != null) {
                        _this2.subscriptionBack.remove();
                    }
                });
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.subscriptionBack.remove();
            }
        }, {
            key: "goBack",
            value: function goBack() {
                this.refs[WEBVIEW_REF].goBack();
            }
        }, {
            key: "goForward",
            value: function goForward() {
                this.refs[WEBVIEW_REF].goForward();
            }
        }, {
            key: "reload",
            value: function reload() {
                this.refs[WEBVIEW_REF].reload();
            }
        }, {
            key: "onSubmitEditing",
            value: function onSubmitEditing(event) {
                this.pressGoButton();
            }
        }, {
            key: "pressGoButton",
            value: function pressGoButton() {
                var url = this.state.inputText.toLowerCase();

                if (url === this.state.url) {
                    this.reload();
                } else {
                    this.setState({
                        url: url
                    });
                }

                this.refs[TEXT_INPUT_REF].blur();
            }
        }]);
        return WebViewPage;
    }(_react.Component);

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: HEADER
        },
        addressBarRow: {
            position: 'absolute',
            left: 0,
            bottom: 0,
            width: width,
            backgroundColor: HEADER
        },
        webView: {
            backgroundColor: BGWASH,
            flex: 1
        },
        navButton: {
            padding: 4,
            borderColor: 'transparent',
            marginLeft: 10,
            width: width / 2
        },
        goButton: {
            height: 24,
            padding: 3,
            marginLeft: 8,
            alignItems: 'center',
            backgroundColor: BGWASH,
            borderColor: 'transparent',
            borderRadius: 3,
            alignSelf: 'stretch'
        },
        spinner: {
            width: 20,
            marginRight: 6
        }
    });

    var route = {
        component: WebViewPage,
        isNavigationBarHidden: false,
        navigationBarStyle: null,
        navTitleStyle: {
            color: "#000000"
        },
        barStyle: "dark-content",
        isNavigationBarRightButtonHidden: false,
        navLeftButtonStyle: {
            tintColor: "#000000"
        },
        navLeftButtonConfig: {
            actionEvent: 'backFromWebViewPage'
        },
        renderNavTitleComponent: function renderNavTitleComponent(route, navigator, index, navState) {
            return _react2.default.createElement(
                _reactNative.Text,
                {
                    numberOfLines: 1,
                    style: [{
                        alignSelf: 'center',
                        paddingLeft: 47,
                        paddingRight: 47,
                        backgroundColor: 'transparent',
                        color: '#333333',
                        fontSize: 17,
                        fontFamily: 'PingFangSC-Regular'
                    }]
                },
                NAV_TITLE ? NAV_TITLE : route.title
            );
        },
        passRouteProps: {
            insetForNavigator: {
                top: 44
            }
        }
    };
    module.exports = {
        component: WebViewPage,
        route: route
    };
},10523,[10297,10033,10490,10526,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/WebViewPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var _miot = _require(_dependencyMap[1]);

  var RSAKey = _require(_dependencyMap[2]).RSAKey;

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var LocalStorageManager = CommonYeelightModules.LocalStorageManager,
      YLResource = CommonYeelightModules.YLResource,
      YLDevice = CommonYeelightModules.YLDevice,
      YLAccount = CommonYeelightModules.YLAccount,
      YLHost = CommonYeelightModules.YLHost,
      YLSmartHome = CommonYeelightModules.YLSmartHome,
      YLService = CommonYeelightModules.YLService,
      DeviceModel = CommonYeelightModules.DeviceModel,
      YLHostFile = CommonYeelightModules.YLHostFile,
      YLHostLocale = CommonYeelightModules.YLHostLocale;
  var PUBLIC_KEY = '96F334E056AB47DA142818E716DDA90AD5D1D5F1C83AEB3971051623C7E548DC0E8D91F0F24849C6B31512AB447B0CF9436C0B6429D011410E596270546E70D73173D1CBEF9500A2487A520CE55DF448E18CC9CCA6CC9E43ABF9218DF33A73ADC5ADF0FB5660A228AE71D97C83E7DAC317B2E9A395F864C8877FF315A65FDEFD';
  var serverCode = "cn";
  var EUROPE_SERVER = "de";
  var CHINA_SERVER = "cn";
  var ServerCodeMapKey = "ServerCodeMapKey";
  var MiBandDeviceTypeKey = 'MiBandDeviceTypeKey';
  var serverCodeMap = {
    cn: "https://cloud-bj.yeelight.com",
    tw: "https://cloud-sg.yeelight.com",
    in: "https://cloud-sg.yeelight.com",
    us: "https://cloud-us.yeelight.com",
    sg: "https://cloud-sg.yeelight.com",
    de: "https://cloud-de.yeelight.com"
  };

  _reactNative.AsyncStorage.getItem(ServerCodeMapKey, function (errs, resultString) {
    if (!errs && resultString) {
      var jsonObj = JSON.parse(resultString || "{}");

      if (jsonObj.cn) {
        serverCodeMap = jsonObj;
      }
    }
  });

  var newBandDevices = ["MIBand", "MiBand", "MI Band", "Mi Band", "Mi Smart Band 4"];
  var appApiURLTest = "https://yeelight-test.mi-ae.cn/api/v2/";

  var AppUUID = _require(_dependencyMap[4]);

  var C = _require(_dependencyMap[5]);

  var rsa = new RSAKey();
  var aesKey = C.enc.Hex.parse("a7aa048ad2a6a49c344bb055717cb4d7");
  var aesIv = C.enc.Hex.parse("0000000000000000");
  var IS_GDPR = false;
  var isInChinaNow;
  var CurrentPrivacyTimeKey = "CurrentPrivacyTimeKey";
  var ISFIRSTMEETFILE = YLDevice.deviceModel + 'isFirstMeet.dat';
  var RECOMMEND_API_VERSION = 1;
  var devicesCapObj = {
    "yeelink.light.bslamp1": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.bslamp2": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.bslamp3": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.ceiling1": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling2": '["POWER","BRIGHT"]',
    "yeelink.light.ceiling3": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling4": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling5": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling6": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling7": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling8": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling9": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling10": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling11": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling12": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling15": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling18": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling21": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling22": '["POWER","BRIGHT","CT"]',
    "yeelink.light.ceiling23": '["POWER","BRIGHT","CT"]',
    "yeelink.light.color1": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.color2": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.color3": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.color4": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.ct2": '["POWER","BRIGHT","CT"]',
    "yeelink.light.lamp1": '["POWER","BRIGHT","CT"]',
    "yeelink.light.lamp2": '["POWER","BRIGHT","CT"]',
    "yeelink.light.lamp3": '["POWER","BRIGHT"]',
    "yeelink.light.lamp4": '["POWER","BRIGHT","CT"]',
    "yeelink.light.lamp5": '["POWER","BRIGHT"]',
    "yeelink.light.mono1": '["POWER","BRIGHT"]',
    "yeelink.light.panel1": '["POWER","BRIGHT"]',
    "yeelink.light.strip1": '["POWER","BRIGHT","CT","COLOR"]',
    "yeelink.light.strip2": '["POWER","BRIGHT","CT","COLOR"]',
    "yilai.light.ceiling1": '["POWER","BRIGHT","CT"]',
    "yilai.light.ceiling2": '["POWER","BRIGHT","CT"]',
    "yilai.light.ceiling3": '["POWER","BRIGHT","CT"]'
  };
  var default_recommend = [];
  var MIJIA_LANGUAGES = ["zh", "en", "es", "ru", "it", "de", "id", "pl", "fr", "ko", "vi", "th"];
  var CURRENT_PRIVACY_LANGUAGES = ["ar", "cs", "cz", "de", "el", "en", "es_la", "es", "fr", "id", "it", "ko", "my", "nl", "pl", "pt", "ro", "ru", "sk", "th", "tr", "uk", "vi", "zh-Hans", "zh-HK", "zh-TW", "fi", "hu", "da", "be", "bg", "fa", "hr", "sl", "sr-CS", "sr-Latn", "sv", "lv", "no", "pt-BR", "he", "st", "zu", "ms"];
  var YILAI_CURRENT_PRIVACY_LANGUAGES = ["zh-Hans", "en"];
  var PRIVACY_SERVER_TIME = 1566144000;
  var SERVER_TIME = PRIVACY_SERVER_TIME;
  var SUPPORT_COLLECTION_IMAGE_URL = true;

  function _cloudBaseURL() {
    var inDevelopment = false;

    if (inDevelopment) {
      return "https://yeelight-test.mi-ae.cn/";
    } else {
      var url = serverCodeMap[serverCode];

      if (!url) {
        url = serverCodeMap[EUROPE_SERVER];
      }

      var lastChar = url.substr(-1);

      if (lastChar != '/') {
        url = url + '/';
      }

      return url;
    }
  }

  function cloudURL() {
    return _cloudBaseURL() + "hw/v2/";
  }

  function apiURL() {
    return _cloudBaseURL() + "api/";
  }

  function appApiURL() {
    return _cloudBaseURL() + "api/v2/";
  }

  function appV3ApiURL() {
    return _cloudBaseURL() + "api/v3/";
  }

  function _fetchPromise(fetch_promise, timeout) {
    var abort_fn = null;
    var abort_promise = new Promise(function (resolve, reject) {
      abort_fn = function abort_fn() {
        reject('request time out');
      };
    });
    var abortable_promise = Promise.race([fetch_promise, abort_promise]);
    setTimeout(function () {
      abort_fn();
    }, timeout);
    return abortable_promise;
  }

  function _fetch(url, parameters, callback) {
    _fetchPromise(fetch(url, parameters).then(function (res) {
      return res.json();
    }), 8000).then(function (response) {
      validateResponse(response, callback);
    }, function (err) {
      if (callback) {
        callback(err);
      }
    });
  }

  function fetchGet(url, callback) {
    var headers = new Headers();
    headers.set('Cache-Control', 'no-cache');

    _fetch(url, {
      method: 'GET',
      headers: headers
    }, callback);
  }

  function fetchDel(url, callback) {
    _fetch(url, {
      method: 'DELETE'
    }, callback);
  }

  function fetchPut(url, body, callback) {
    if (body) {
      var bodyString = JSON.stringify(body);

      _fetch(url, {
        method: 'PUT',
        body: bodyString
      }, callback);
    }
  }

  function _fetchPost(url, body, callback) {
    if (body) {
      var bodyString = JSON.stringify(body);

      _fetch(url, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: bodyString
      }, callback);
    }
  }

  function validateResponse(response, callback) {
    if (callback) {
      try {
        if (response && response._bodyInit) {
          callback(JSON.parse(response._bodyInit), response);
        } else if (typeof response == 'object') {
          callback(response, response);
        }
      } catch (e) {
        callback({}, {});
      }

      return null;
    }
  }

  function aesDecrypt(message, callback) {
    var decrypted = C.AES.decrypt(message, aesKey, {
      iv: aesIv,
      padding: C.pad.ZeroPadding
    });
    decrypted = C.enc.Utf8.stringify(decrypted);
    callback(JSON.parse(decrypted));
  }

  function getModel(category) {
    var model = 'yeelink.light.mono1';

    if (category == 'lamp') {
      model = 'yeelink.light.lamp1';
    } else if (category == 'color') {
      model = 'yeelink.light.color1';
    }

    return model;
  }

  function formatLanguage(lang) {
    var zh_Hans_tmp = 'zh-Hans';
    var zh_Hant_tmp = 'zh-Hant';
    var zh_HK_tmp = 'zh-HK';
    var zh_TW_tmp = 'zh-TW';
    var sysVersion = parseInt(YLHost.systemInfo.sysVersion);

    if (sysVersion < 9.0) {
      return lang;
    } else {
      var langLower = lang.toLowerCase();

      if (langLower === zh_Hans_tmp.toLowerCase() || langLower === zh_Hant_tmp.toLowerCase() || langLower === zh_HK_tmp.toLowerCase() || langLower === zh_TW_tmp.toLowerCase()) {
        return lang;
      } else {
        var count = countCharacter(lang, "-");

        if (count === 0) {
          return lang;
        } else if (count === 1) {
          var items = lang.split('-');
          return items[0];
        } else if (count === 2) {
          var index = lang.lastIndexOf("-");
          lang = lang.slice(0, index);
          return lang;
        } else {
          return 'zh-Hans';
        }
      }
    }
  }

  function countCharacter(string, character) {
    var count = 0;
    var pos = string.indexOf(character);

    while (pos !== -1) {
      count++;
      pos = string.indexOf(character, pos + 1);
    }

    return count;
  }

  function convertKVObjectArrayToObject() {
    var kvArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var obj = {};
    kvArray.map(function (item) {
      obj[item.sKey] = item.value;
    });
    return obj;
  }

  function requestServerCodeMap(callback) {
    YLSmartHome.rangeGetOpenConfig({
      did: YLDevice.deviceId + "",
      category: 'cloud_regions'
    }, function (response) {
      var result = void 0;

      if (!response.hasOwnProperty('result') && response.hasOwnProperty('configs')) {
        result = response || {};
      } else if (response.hasOwnProperty('result')) {
        result = response.result || {};
      }

      if (result) {
        var configs = convertKVObjectArrayToObject(result.configs || []);
        var cloud_regions = configs || serverCodeMap;
        callback(cloud_regions);
      }
    });
  }

  function _updateDeviceCap(callback) {
    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;
    YLSmartHome.rangeGetOpenConfig({
      did: YLDevice.deviceId + "",
      category: 'grp_cap_list',
      offset: offset,
      limit: limit
    }, function (response) {
      var result = void 0;

      if (!response.hasOwnProperty('result') && response.hasOwnProperty('configs')) {
        result = response || {};
      } else if (response.hasOwnProperty('result')) {
        result = response.result || {};
      }

      if (result) {
        var configsArray = result.configs || [];
        var configs = convertKVObjectArrayToObject(configsArray);
        devicesCapObj = babelHelpers.extends({}, devicesCapObj, configs);

        if (configsArray.length >= 20) {
          _updateDeviceCap(callback, offset += limit);
        }
      }
    });
  }

  function _getDevicesCapability() {
    return devicesCapObj;
  }

  function requestNewMiBind(callback) {
    YLSmartHome.rangeGetOpenConfig({
      did: YLDevice.deviceId + "",
      category: 'third_party_mibind'
    }, function (response) {
      var result = void 0;

      if (!response.hasOwnProperty('result') && response.hasOwnProperty('configs')) {
        result = response || {};
      } else if (response.hasOwnProperty('result')) {
        result = response.result || {};
      }

      if (result) {
        var configs = convertKVObjectArrayToObject(result.configs || []);
        var third_party_mibind = JSON.parse(configs.NewBandDevices || "[]");
        callback(third_party_mibind);
      }
    });
  }

  function _updateServerMap() {
    YLService.getCurrentCountryInfoCallback(function (success, countryInfo) {
      if (success) {
        if (null != countryInfo && countryInfo.hasOwnProperty('serverCode')) {
          serverCode = countryInfo["serverCode"];
          SERVER_TIME = PRIVACY_SERVER_TIME;
          requestServerCodeMap(function (data, response) {
            if (data.cn) {
              serverCodeMap = data;

              _reactNative.AsyncStorage.setItem(ServerCodeMapKey, JSON.stringify(data), function (errs) {
                if (errs) {}

                if (!errs) {}
              });
            }

            var currentLanguageCode = getLanguageCode();

            if (!(currentLanguageCode === "zh_CN" || currentLanguageCode === "en_US")) {
              _getRecommend(0, 20, YLDevice.deviceModel, "en_US").then(function (response) {
                default_recommend = response || [];
              });
            }

            requestNewMiBind(function (data, response) {
              newBandDevices = newBandDevices.concat(data);

              _miot.Host.storage.set(MiBandDeviceTypeKey, JSON.stringify(newBandDevices));
            });
          });
        } else {}
      }
    });
  }

  function _getNewBindDevices(callback) {
    _miot.Host.storage.get(MiBandDeviceTypeKey).then(function (val) {
      if (val) {
        callback(JSON.parse(val));
      } else {
        callback(newBandDevices);
      }
    }).catch(function (err) {
      callback(newBandDevices);

      if (err === 'expired') {}
    });
  }

  function _isSupprotGDPR() {
    return serverCode === EUROPE_SERVER;
  }

  function _isSupportOverseasPrivacyRegulation() {
    return serverCode !== CHINA_SERVER;
  }

  function _shouldShowCurrentPrivacy(callback) {
    if (!YLDevice.isOwner) {
      if (callback) {
        callback(false);
      }
    } else {
      if (isInChinaNow == undefined) {
        YLService.getCurrentCountryInfoCallback(function (success, countryInfo) {
          isInChinaNow = countryInfo && countryInfo.serverCode == "cn";
          getSnapPrivacyTime(function (time) {
            if (callback) {
              callback(SERVER_TIME > time);
            }
          });
        });
      } else {
        getSnapPrivacyTime(function (time) {
          if (callback) {
            callback(SERVER_TIME > time);
          }
        });
      }
    }
  }

  function _snapCurrentPrivacyTime() {
    LocalStorageManager.snapCurrentPrivacyTime(SERVER_TIME);
  }

  function getSnapPrivacyTime(callback) {
    LocalStorageManager.getSnapPrivacyTime(callback);
  }

  function _deleteResourceOfDeviceId(deviceId) {
    var url = appApiURL() + 'device_destroy/' + YLAccount.userId + '/' + deviceId.toString() + '?token=' + _getToken();

    fetchGet(url, function (data) {});
  }

  function _deleteResourceByMid() {}

  function _operatePrivacy(agree) {
    var url = appApiURL() + 'operate-privacy' + '?token=' + _getToken();

    var body = {
      "mid": YLAccount.userId,
      "timestamp": new Date().getTime(),
      "operation": agree ? "agree" : "withdraw"
    };

    _fetchPost(url, body, function (data) {});
  }

  function _getPrivacyOperation(callback) {
    var url = appApiURL() + 'privacy-operation' + '?token=' + _getToken();

    var body = {
      "mid": YLAccount.userId
    };

    _fetchPost(url, body, callback);
  }

  function _deleteUserStoreFiles() {
    LocalStorageManager.deleteDelayTimer(function (callback) {});
    YLHostFile.deleteFile(ISFIRSTMEETFILE, function (callback) {});
    LocalStorageManager.deleteFlowColorSetting(function (callback) {});
  }

  function _removeCurrentPrivacyTime() {
    LocalStorageManager.removeCurrentPrivacyTime();
  }

  function _getToken() {
    var time = new Date().getTime();
    time = Math.floor(time / 1000);
    rsa.setPublic(PUBLIC_KEY, '10001');
    var res = rsa.b64Encrypt('abc|' + time.toString());
    res = rsa.urlEncode(res);
    return res;
  }

  function _requestPomodoroCountWeekData(callback) {
    var url = appApiURL() + 'muse_pomodoro/' + YLDevice.deviceId + '/week' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function _requestPomodoroCountMonthData(callback) {
    var url = appApiURL() + 'muse_pomodoro/' + YLDevice.deviceId + '/month' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function _requestPomodoroCountYearData(callback) {
    var url = appApiURL() + 'muse_pomodoro/' + YLDevice.deviceId + '/year' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function _requestPomodoroUsageWeekData(callback) {
    var url = appApiURL() + 'muse_usage/' + YLDevice.deviceId + '/week' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function _requestPomodoroUsageMonthData(callback) {
    var url = appApiURL() + 'muse_usage/' + YLDevice.deviceId + '/month' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function _requestPomodoroUsageYearData(callback) {
    var url = appApiURL() + 'muse_usage/' + YLDevice.deviceId + '/year' + '?token=' + _getToken();

    return fetchGet(url, callback);
  }

  function getCollectionTypeByMode(lightDataType) {
    var lightMode = "bright";

    if (1 == lightDataType || 3 == lightDataType || 6 == lightDataType) {
      lightMode = "ct";
    } else if (2 == lightDataType) {
      lightMode = "color";
    } else if (4 == lightDataType || 5 == lightDataType || 7 == lightDataType || 8 == lightDataType) {
      lightMode = "cf";
    } else if (6 == lightDataType) {
      lightMode = "nightlight";
    }

    return lightMode;
  }

  var collections = [];

  function _getUserCollection() {
    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;

    if (offset === 0) {
      collections = [];
    }

    return new Promise(function (resolve, reject) {
      YLSmartHome.getDevicesConfig({
        did: YLDevice.deviceId + "",
        prefix: "user_scene_",
        offset: offset,
        limit: limit
      }, function (response) {
        var result = void 0;

        if (!response.hasOwnProperty('result')) {
          result = response || {};
        } else {
          result = response.result || {};
        }

        if (response.hasOwnProperty('code') && response.code !== 0) {
          return resolve([]);
        }

        if (result) {
          var data = result || {};
          var keys = Object.keys(data);
          keys = keys.sort();
          keys.reverse();
          data = keys.map(function (key) {
            var obj = {};
            obj[key] = data[key];
            return obj;
          });
          return resolve(data);
        }
      });
    }).then(function () {
      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      collections = data.concat(collections);

      if (data.length < limit) {
        return Promise.resolve(collections);
      } else {
        offset += limit;
        return _getUserCollection(offset);
      }
    });
  }

  var userRecommends = [];

  function _getRecommend() {
    var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;
    var model = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : YLDevice.deviceModel;
    var language = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getLanguageCode();
    var catergory = "recommend_scenes_" + model + "_" + RECOMMEND_API_VERSION + "_" + language;

    if (offset === 0) {
      userRecommends = [];
    }

    return new Promise(function (resolve, reject) {
      YLSmartHome.rangeGetOpenConfig({
        did: YLDevice.deviceId + "",
        category: catergory,
        offset: offset,
        limit: limit
      }, function (response) {
        var result = void 0;

        if (!response.hasOwnProperty('result') && response.hasOwnProperty('configs')) {
          result = response || {};
        } else if (response.hasOwnProperty('result')) {
          result = response.result || {};
        }

        if (result) {
          var configs = result.configs || [];
          var scenes = configs.map(function (item) {
            try {
              item = JSON.parse(item.value || "{}");
            } catch (error) {
              item = null;
            }

            return item;
          });
          return resolve(scenes);
        }
      });
    }).then(function (data) {
      userRecommends = userRecommends.concat(data);

      if (data.length < limit) {
        return Promise.resolve(userRecommends);
      } else {
        offset += limit;
        return _getRecommend(offset, limit, model);
      }
    });
  }

  function getLanguageCode() {
    var currentLanguage = YLHostLocale.language;

    switch (currentLanguage) {
      case 'en':
        return 'en_US';
        break;

      case 'zh-Hans':
        return 'zh_CN';
        break;

      case 'zh':
        return 'zh_CN';
        break;

      case 'zh-Hant':
        return 'zh_HK';

      case 'zh-HK':
        return 'zh_HK';

      case 'hk':
        return 'zh_HK';

      case 'zh-TW':
        return 'zh_TW';

      case 'tw':
        return 'zh_TW';
        break;

      case 'ko':
        return 'ko_KR';
        break;

      default:
        break;
    }

    return "" + currentLanguage;
  }

  function checkSceneTitleVailed(title) {
    var findItem = collections.find(function (item) {
      return title === item.title;
    });

    if (findItem) {
      return false;
    }

    return true;
  }

  module.exports = {
    getFeedback: function getFeedback(callback) {
      var _this = this;

      AppUUID.getUUID(function (uuid) {
        var url = appApiURL() + 'fb-query/' + uuid + '/' + 0 + '/' + 0 + '?token=' + _this.getToken() + '&format=base64';
        return fetchGet(url, callback);
      });
    },
    currentLang: function currentLang() {
      var interfaceLanguage = YLHostLocale.language;
      return interfaceLanguage;
    },
    getRecommend: function getRecommend(userId, version, callback) {
      var deviceModel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : YLDevice.deviceModel;

      _getRecommend(0, 20, deviceModel).then(function (response) {
        if (Array.isArray(response)) {
          if (response.length === 0) {
            response = default_recommend;
          }
        }

        callback({
          code: 1,
          scenes: response
        });
      });
    },
    getRecommendByCategory: function getRecommendByCategory(userId, category, lang, version, callback) {
      var model = getModel(category);

      _getRecommend(0, 20, model).then(function (response) {
        callback({
          code: 1,
          scenes: response
        });
      });
    },
    getRSAPublicKey: function getRSAPublicKey() {
      return PUBLIC_KEY;
    },
    getToken: function getToken() {
      return _getToken();
    },
    getCloudURL: function getCloudURL() {
      return cloudURL();
    },
    getPomodoroDetailURL: function getPomodoroDetailURL(userId, lang) {
      var url = appApiURL() + 'pomodoro-ranking/' + userId + '/' + lang + '?token=' + this.getToken();
      return url;
    },
    getAppApiURL: function getAppApiURL() {
      return appApiURL();
    },
    getAppApiURLTest: function getAppApiURLTest() {
      return appApiURLTest;
    },
    getUserCollection: function getUserCollection(userId, callback) {
      var deviceModel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : YLDevice.deviceModel;

      _getUserCollection(0).then(function (response) {
        collections = response.map(function (item) {
          var sid = Object.keys(item)[0];
          var scene = JSON.parse(item[sid] || "{}");
          scene["sid"] = sid;
          return scene;
        });
        collections = collections.filter(function (item) {
          return item;
        });
        callback(collections);
      });
    },
    getUserCollectionByCategory: function getUserCollectionByCategory(userId, category, callback) {
      var model = getModel(category);
      var url = this.getCloudURL() + 'scene/user/' + userId + '/' + model + '?token=' + this.getToken() + '&start=0&end=29' + "&format=base64";
      return fetchGet(url, callback);
    },
    removeUserCollection: function removeUserCollection(sid, callback) {
      YLSmartHome.delDevicesConfig({
        did: YLDevice.deviceId,
        keys: [sid]
      }, function (response) {
        callback(response);
      });
    },
    renameUserCollection: function renameUserCollection(sid, title, userId, callback) {
      if (!checkSceneTitleVailed(title)) {
        callback({
          code: -3
        });
        return;
      }

      var scene = collections.find(function (item) {
        return item.sid === sid;
      });
      scene.title = title;
      var sceneObj = {};
      delete scene.sid;
      sceneObj[sid] = JSON.stringify(scene);
      YLSmartHome.deviceSetExtraData({
        did: YLDevice.deviceId,
        extra_data: sceneObj
      }, function (response) {
        callback(response);
      });
    },
    addUserCollection: function addUserCollection(uid, title, mode, bright, color_temperature, wrgb, colorflow, device_model, callback) {
      if (!checkSceneTitleVailed(title)) {
        callback({
          code: -3
        });
        return;
      }

      var scene = {
        "title": title,
        "mode": mode,
        "type": getCollectionTypeByMode(mode),
        "bright": bright,
        "color_temperature": color_temperature,
        "wrgb": wrgb,
        "colorflow": colorflow,
        "device_model": device_model || YLDevice.deviceModel
      };
      var user_scene_index = "user_scene_" + new Date().getTime();
      var sceneObj = {};
      sceneObj[user_scene_index] = JSON.stringify(scene);
      YLSmartHome.deviceSetExtraData({
        did: YLDevice.deviceId,
        extra_data: sceneObj
      }, function (response) {
        if (collections) {
          collections.push(scene);
        }

        callback(response);
      });
    },
    getPomodoro: function getPomodoro(userId, callback) {
      var url = this.getAppApiURL() + 'pomodoro/' + userId + '?token=' + this.getToken() + "&format=base64&skip=1";
      return fetchGet(url, callback);
    },
    bind: function bind(userId, did, callback) {
      var url = appV3ApiURL() + 'bind?token=' + this.getToken() + "&format=base64";
      var body = {
        'mid': userId,
        'device_id': did,
        'device_model': YLDevice.deviceModel
      };
      return _fetchPost(url, body, callback);
    },
    getInternationalVersionByCallback: function getInternationalVersionByCallback(callback) {
      if (!callback) {
        return;
      }

      if (null != isInChinaNow) {
        callback(!isInChinaNow);
      } else {
        if (typeof YLService.getCurrentCountryInfoCallback === 'function') {
          YLService.getCurrentCountryInfoCallback(function (success, countryInfo) {
            if (success) {
              if (null != countryInfo && countryInfo.hasOwnProperty('countryCode')) {
                isInChinaNow = 'cn' == countryInfo.countryCode.toLowerCase();
                callback(!isInChinaNow);
              } else {
                callback(false);
              }
            }
          });
        } else {
          callback(false);
        }
      }
    },
    isSimplifiedChinese: function isSimplifiedChinese() {
      var lang = this.currentLang();
      return lang == "zh-Hans";
    },
    isInternationalVersion: function isInternationalVersion() {
      return !isInChinaNow;
    },
    isLimitMid: function isLimitMid(callback) {
      callback(false);
    },
    requestIsInternationalVersion: function requestIsInternationalVersion() {
      YLService.getCurrentCountryInfoCallback(function (success, countryInfo) {
        if (success) {
          if (null != countryInfo && countryInfo.hasOwnProperty('countryCode')) {
            isInChinaNow = 'cn' == countryInfo.countryCode.toLowerCase();
          } else {}
        }
      });
    },
    shouldBeForcedUpdateByCallback: function shouldBeForcedUpdateByCallback(callback) {
      var _this2 = this;

      if (!callback) {
        return;
      }

      YLSmartHome.rangeGetOpenConfig({
        did: YLDevice.deviceId + "",
        category: 'force_update_firmwares',
        configids: [YLDevice.deviceModel]
      }, function (response) {
        var result = void 0;

        if (!response.hasOwnProperty('result') && response.hasOwnProperty('configs')) {
          result = response || {};
        } else if (response.hasOwnProperty('result')) {
          result = response.result || {};
        }

        if (result) {
          var configs = convertKVObjectArrayToObject(result.configs || []);
          var leastHWVersionTmp = configs[YLDevice.deviceModel];

          if (leastHWVersionTmp) {
            _this2.isLeastHWVersionMoreThanCurrent(leastHWVersionTmp, function (isMoreThan) {
              callback(isMoreThan);
            });

            return;
          }

          callback(false);
        } else {
          callback(false);
        }
      });
    },
    isLeastHWVersionMoreThanCurrent: function isLeastHWVersionMoreThanCurrent(leastHWVersion, callback) {
      YLSmartHome.checkVersion({
        "pid": 0,
        "did": YLDevice.deviceId
      }, function (response) {
        if (response["message"] == "ok" && response["result"]) {
          var result = response["result"] || {};
          var fw_version = 0;

          if (result.hasOwnProperty('curr')) {
            fw_version = result.curr;
          } else if (result.hasOwnProperty('curVersion')) {
            fw_version = result.curVersion;
          }

          if (fw_version && (fw_version.lastIndexOf("_") > -1 || fw_version.lastIndexOf(".") > -1)) {
            var version = fw_version.substr(fw_version.lastIndexOf("_") + 1);
            version = version.substr(version.lastIndexOf(".") + 1);
            version = parseInt(version);

            if (version < leastHWVersion) {
              callback(true);
            } else {
              callback(false);
            }

            return;
          }
        }
      });
    },
    cloudBaseURL: function cloudBaseURL() {
      return _cloudBaseURL();
    },
    getPrivacyLanguageCode: function getPrivacyLanguageCode() {
      var privacyLanguageCodeMap = {
        "sr": "sr-CS",
        "nb": "no",
        "nn": "no"
      };
      var systemLanguag = YLResource.systemLanguage;

      if (systemLanguag.indexOf("es_419") !== -1 || systemLanguag.indexOf("es_US") !== -1) {
        systemLanguag = "es_la";
        return systemLanguag;
      }

      if (systemLanguag.indexOf("sr_Latn") !== -1) {
        systemLanguag = "sr-Latn";
        return systemLanguag;
      }

      if (systemLanguag.indexOf("pt_BR") !== -1) {
        systemLanguag = "pt-BR";
        return systemLanguag;
      }

      if (systemLanguag.indexOf("iw_IL") !== -1) {
        systemLanguag = "he";
        return systemLanguag;
      }

      if (systemLanguag.indexOf("ms_MY") !== -1 || systemLanguag.indexOf("ms_CN") !== -1) {
        systemLanguag = "ms";
        return systemLanguag;
      }

      systemLanguag = systemLanguag.split("_")[0] || "";

      if (MIJIA_LANGUAGES.indexOf(systemLanguag) == -1) {
        if (CURRENT_PRIVACY_LANGUAGES.indexOf(systemLanguag) !== -1) {
          return systemLanguag;
        } else {
          if (privacyLanguageCodeMap[systemLanguag]) {
            return privacyLanguageCodeMap[systemLanguag];
          }

          return "en";
        }
      }

      return YLHostLocale.language;
    },
    privacyURL: function privacyURL() {
      var lang = this.getPrivacyLanguageCode();
      var path = "privacy/";
      var privacyPath = DeviceModel.getPrivacyPath();

      if (!isInChinaNow && lang && lang == 'en') {
        path = "gdpr/privacy/";
      } else {
        var LANGUAGES = [];

        if (privacyPath && privacyPath.indexOf('yilai') != -1) {
          path = privacyPath;
          LANGUAGES = YILAI_CURRENT_PRIVACY_LANGUAGES;
        } else {
          LANGUAGES = CURRENT_PRIVACY_LANGUAGES;
        }

        if (lang.indexOf("es") !== -1 && lang !== "es") {
          lang = "es_la";
        }

        if (LANGUAGES.indexOf(lang) === -1) {
          lang = "en";
        }
      }

      var url = YLResource.baseResourcePath + path + (lang + ".html");
      return url;
    },
    licenseURL: function licenseURL() {
      var lang = this.getPrivacyLanguageCode();
      var path = "license/";
      var licensePath = DeviceModel.getLicensePath();
      var LANGUAGES = [];

      if (licensePath && licensePath.indexOf('yilai') != -1) {
        path = licensePath;
        LANGUAGES = YILAI_CURRENT_PRIVACY_LANGUAGES;
      } else {
        LANGUAGES = CURRENT_PRIVACY_LANGUAGES;
      }

      if (lang.indexOf("es") !== -1 && lang !== "es") {
        lang = "es_la";
      }

      if (LANGUAGES.indexOf(lang) === -1) {
        lang = "en";
      }

      var url = YLResource.baseResourcePath + path + (lang + ".html");
      return url;
    },
    updateServerMap: function updateServerMap() {
      return _updateServerMap();
    },
    updateDeviceCap: function updateDeviceCap() {
      return _updateDeviceCap();
    },
    getDevicesCapability: function getDevicesCapability() {
      return _getDevicesCapability();
    },
    shouldShowCurrentPrivacy: function shouldShowCurrentPrivacy(callback) {
      return _shouldShowCurrentPrivacy(callback);
    },
    snapCurrentPrivacyTime: function snapCurrentPrivacyTime() {
      return _snapCurrentPrivacyTime();
    },
    deleteResourceOfDeviceId: function deleteResourceOfDeviceId(deviceId) {
      return _deleteResourceOfDeviceId(deviceId);
    },
    deleteResourceByMid: function deleteResourceByMid() {
      return _deleteResourceByMid();
    },
    getIsLimitMid: function (_getIsLimitMid) {
      function getIsLimitMid(_x13) {
        return _getIsLimitMid.apply(this, arguments);
      }

      getIsLimitMid.toString = function () {
        return _getIsLimitMid.toString();
      };

      return getIsLimitMid;
    }(function (callback) {
      return getIsLimitMid(callback);
    }),
    operatePrivacy: function operatePrivacy(agree) {
      return _operatePrivacy(agree);
    },
    getPrivacyOperation: function getPrivacyOperation(callback) {
      return _getPrivacyOperation(callback);
    },
    deleteUserStoreFiles: function deleteUserStoreFiles() {
      return _deleteUserStoreFiles();
    },
    removeCurrentPrivacyTime: function removeCurrentPrivacyTime() {
      return _removeCurrentPrivacyTime();
    },
    fetchPost: function fetchPost(url, body, callback) {
      return _fetchPost(url, body, callback);
    },
    requestPomodoroCountWeekData: function requestPomodoroCountWeekData(callback) {
      return _requestPomodoroCountWeekData(callback);
    },
    requestPomodoroCountMonthData: function requestPomodoroCountMonthData(callback) {
      return _requestPomodoroCountMonthData(callback);
    },
    requestPomodoroCountYearData: function requestPomodoroCountYearData(callback) {
      return _requestPomodoroCountYearData(callback);
    },
    requestPomodoroUsageWeekData: function requestPomodoroUsageWeekData(callback) {
      return _requestPomodoroUsageWeekData(callback);
    },
    requestPomodoroUsageMonthData: function requestPomodoroUsageMonthData(callback) {
      return _requestPomodoroUsageMonthData(callback);
    },
    requestPomodoroUsageYearData: function requestPomodoroUsageYearData(callback) {
      return _requestPomodoroUsageYearData(callback);
    },
    getNewBindDevices: function getNewBindDevices(callback) {
      return _getNewBindDevices(callback);
    },
    isSupprotGDPR: function isSupprotGDPR() {
      return _isSupprotGDPR();
    },
    isSupportOverseasPrivacyRegulation: function isSupportOverseasPrivacyRegulation() {
      return _isSupportOverseasPrivacyRegulation();
    },
    isSupportCollectionImageUrl: function isSupportCollectionImageUrl() {
      return SUPPORT_COLLECTION_IMAGE_URL;
    }
  };
},10526,[10033,10074,10529,10007,10541,10544],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/RSA/Cloud.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  var BigInteger = _require(_dependencyMap[0]).BigInteger;

  var SecureRandom = _require(_dependencyMap[1]).SecureRandom;

  var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var b64padchar = "=";

  function parseBigInt(str, r) {
    return new BigInteger(str, r);
  }

  function linebrk(s, n) {
    var ret = "";
    var i = 0;

    while (i + n < s.length) {
      ret += s.substring(i, i + n) + "\n";
      i += n;
    }

    return ret + s.substring(i, s.length);
  }

  function byte2Hex(b) {
    if (b < 0x10) return "0" + b.toString(16);else return b.toString(16);
  }

  function pkcs1pad2(s, n) {
    if (n < s.length + 11) {
      alert("Message too long for RSA");
      return null;
    }

    var ba = new Array();
    var i = s.length - 1;

    while (i >= 0 && n > 0) {
      var c = s.charCodeAt(i--);

      if (c < 128) {
        ba[--n] = c;
      } else if (c > 127 && c < 2048) {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 | 192;
      } else {
        ba[--n] = c & 63 | 128;
        ba[--n] = c >> 6 & 63 | 128;
        ba[--n] = c >> 12 | 224;
      }
    }

    ba[--n] = 0;
    var rng = new SecureRandom();
    var x = new Array();

    while (n > 2) {
      x[0] = 0;

      while (x[0] == 0) {
        rng.nextBytes(x);
      }

      ba[--n] = x[0];
    }

    ba[--n] = 2;
    ba[--n] = 0;
    return new BigInteger(ba);
  }

  function RSAKey() {
    this.n = null;
    this.e = 0;
    this.d = null;
    this.p = null;
    this.q = null;
    this.dmp1 = null;
    this.dmq1 = null;
    this.coeff = null;
  }

  function RSASetPublic(N, E) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = parseBigInt(N, 16);
      this.e = parseInt(E, 16);
    } else alert("Invalid RSA public key");
  }

  function RSADoPublic(x) {
    return x.modPowInt(this.e, this.n);
  }

  function RSAEncrypt(text) {
    var m = pkcs1pad2(text, this.n.bitLength() + 7 >> 3);
    if (m == null) return null;
    var c = this.doPublic(m);
    if (c == null) return null;
    var h = c.toString(16);
    if ((h.length & 1) == 0) return h;else return "0" + h;
  }

  function RSAB64Encrypt(text) {
    var encrypt = this.encrypt(text);
    return hex2b64(encrypt);
  }

  function hex2b64(h) {
    var i;
    var c;
    var ret = "";

    for (i = 0; i + 3 <= h.length; i += 3) {
      c = parseInt(h.substring(i, i + 3), 16);
      ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
    }

    if (i + 1 == h.length) {
      c = parseInt(h.substring(i, i + 1), 16);
      ret += b64map.charAt(c << 2);
    } else if (i + 2 == h.length) {
      c = parseInt(h.substring(i, i + 2), 16);
      ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
    }

    while ((ret.length & 3) > 0) {
      ret += b64padchar;
    }

    return ret;
  }

  function urlEncode(url) {
    return encodeURIComponent(url);
  }

  RSAKey.prototype.doPublic = RSADoPublic;
  RSAKey.prototype.setPublic = RSASetPublic;
  RSAKey.prototype.encrypt = RSAEncrypt;
  RSAKey.prototype.b64Encrypt = RSAB64Encrypt;
  RSAKey.prototype.hex2b64 = hex2b64;
  RSAKey.prototype.linebrk = linebrk;
  RSAKey.prototype.urlEncode = urlEncode;
  exports.RSAKey = RSAKey;
},10529,[10532,10535],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/RSA/RSAKey.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  if (typeof document === 'undefined' || typeof nodemode !== "undefined") {
    nodemode = true;
    document = {};
    navigator = {};

    document.write = function (foo) {};
  }

  var dbits;
  var canary = 0xdeadbeefcafe;
  var j_lm = (canary & 0xffffff) == 0xefcafe;

  function BigInteger(a, b, c) {
    if (a != null) if ("number" == typeof a) this.fromNumber(a, b, c);else if (b == null && "string" != typeof a) this.fromString(a, 256);else this.fromString(a, b);
  }

  function nbi() {
    return new BigInteger(null);
  }

  function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 0x4000000);
      w[j++] = v & 0x3ffffff;
    }

    return c;
  }

  function am2(i, x, w, j, c, n) {
    var xl = x & 0x7fff,
        xh = x >> 15;

    while (--n >= 0) {
      var l = this[i] & 0x7fff;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 0x3fffffff;
    }

    return c;
  }

  function am3(i, x, w, j, c, n) {
    var xl = x & 0x3fff,
        xh = x >> 14;

    while (--n >= 0) {
      var l = this[i] & 0x3fff;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 0xfffffff;
    }

    return c;
  }

  if (j_lm && navigator.appName == "Microsoft Internet Explorer") {
    BigInteger.prototype.am = am2;
    dbits = 30;
  } else if (j_lm && navigator.appName != "Netscape") {
    BigInteger.prototype.am = am1;
    dbits = 26;
  } else {
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = (1 << dbits) - 1;
  BigInteger.prototype.DV = 1 << dbits;
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2, BI_FP);
  BigInteger.prototype.F1 = BI_FP - dbits;
  BigInteger.prototype.F2 = 2 * dbits - BI_FP;
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr, vv;
  rr = "0".charCodeAt(0);

  for (vv = 0; vv <= 9; ++vv) {
    BI_RC[rr++] = vv;
  }

  rr = "a".charCodeAt(0);

  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }

  rr = "A".charCodeAt(0);

  for (vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }

  function int2char(n) {
    return BI_RM.charAt(n);
  }

  function intAt(s, i) {
    var c = BI_RC[s.charCodeAt(i)];
    return c == null ? -1 : c;
  }

  function bnpCopyTo(r) {
    for (var i = this.t - 1; i >= 0; --i) {
      r[i] = this[i];
    }

    r.t = this.t;
    r.s = this.s;
  }

  function bnpFromInt(x) {
    this.t = 1;
    this.s = x < 0 ? -1 : 0;
    if (x > 0) this[0] = x;else if (x < -1) this[0] = x + DV;else this.t = 0;
  }

  function nbv(i) {
    var r = nbi();
    r.fromInt(i);
    return r;
  }

  function bnpFromString(s, b) {
    var k;
    if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {
        this.fromRadix(s, b);
        return;
      }
    this.t = 0;
    this.s = 0;
    var i = s.length,
        mi = false,
        sh = 0;

    while (--i >= 0) {
      var x = k == 8 ? s[i] & 0xff : intAt(s, i);

      if (x < 0) {
        if (s.charAt(i) == "-") mi = true;
        continue;
      }

      mi = false;
      if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {
        this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
        this[this.t++] = x >> this.DB - sh;
      } else this[this.t - 1] |= x << sh;
      sh += k;
      if (sh >= this.DB) sh -= this.DB;
    }

    if (k == 8 && (s[0] & 0x80) != 0) {
      this.s = -1;
      if (sh > 0) this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
    }

    this.clamp();
    if (mi) BigInteger.ZERO.subTo(this, this);
  }

  function bnpClamp() {
    var c = this.s & this.DM;

    while (this.t > 0 && this[this.t - 1] == c) {
      --this.t;
    }
  }

  function bnToString(b) {
    if (this.s < 0) return "-" + this.negate().toString(b);
    var k;
    if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else return this.toRadix(b);
    var km = (1 << k) - 1,
        d,
        m = false,
        r = "",
        i = this.t;
    var p = this.DB - i * this.DB % k;

    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) > 0) {
        m = true;
        r = int2char(d);
      }

      while (i >= 0) {
        if (p < k) {
          d = (this[i] & (1 << p) - 1) << k - p;
          d |= this[--i] >> (p += this.DB - k);
        } else {
          d = this[i] >> (p -= k) & km;

          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }

        if (d > 0) m = true;
        if (m) r += int2char(d);
      }
    }

    return m ? r : "0";
  }

  function bnNegate() {
    var r = nbi();
    BigInteger.ZERO.subTo(this, r);
    return r;
  }

  function bnAbs() {
    return this.s < 0 ? this.negate() : this;
  }

  function bnCompareTo(a) {
    var r = this.s - a.s;
    if (r != 0) return r;
    var i = this.t;
    r = i - a.t;
    if (r != 0) return r;

    while (--i >= 0) {
      if ((r = this[i] - a[i]) != 0) return r;
    }

    return 0;
  }

  function nbits(x) {
    var r = 1,
        t;

    if ((t = x >>> 16) != 0) {
      x = t;
      r += 16;
    }

    if ((t = x >> 8) != 0) {
      x = t;
      r += 8;
    }

    if ((t = x >> 4) != 0) {
      x = t;
      r += 4;
    }

    if ((t = x >> 2) != 0) {
      x = t;
      r += 2;
    }

    if ((t = x >> 1) != 0) {
      x = t;
      r += 1;
    }

    return r;
  }

  function bnBitLength() {
    if (this.t <= 0) return 0;
    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
  }

  function bnpDLShiftTo(n, r) {
    var i;

    for (i = this.t - 1; i >= 0; --i) {
      r[i + n] = this[i];
    }

    for (i = n - 1; i >= 0; --i) {
      r[i] = 0;
    }

    r.t = this.t + n;
    r.s = this.s;
  }

  function bnpDRShiftTo(n, r) {
    for (var i = n; i < this.t; ++i) {
      r[i - n] = this[i];
    }

    r.t = Math.max(this.t - n, 0);
    r.s = this.s;
  }

  function bnpLShiftTo(n, r) {
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << cbs) - 1;
    var ds = Math.floor(n / this.DB),
        c = this.s << bs & this.DM,
        i;

    for (i = this.t - 1; i >= 0; --i) {
      r[i + ds + 1] = this[i] >> cbs | c;
      c = (this[i] & bm) << bs;
    }

    for (i = ds - 1; i >= 0; --i) {
      r[i] = 0;
    }

    r[ds] = c;
    r.t = this.t + ds + 1;
    r.s = this.s;
    r.clamp();
  }

  function bnpRShiftTo(n, r) {
    r.s = this.s;
    var ds = Math.floor(n / this.DB);

    if (ds >= this.t) {
      r.t = 0;
      return;
    }

    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << bs) - 1;
    r[0] = this[ds] >> bs;

    for (var i = ds + 1; i < this.t; ++i) {
      r[i - ds - 1] |= (this[i] & bm) << cbs;
      r[i - ds] = this[i] >> bs;
    }

    if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;
    r.t = this.t - ds;
    r.clamp();
  }

  function bnpSubTo(a, r) {
    var i = 0,
        c = 0,
        m = Math.min(a.t, this.t);

    while (i < m) {
      c += this[i] - a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }

    if (a.t < this.t) {
      c -= a.s;

      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }

      c += this.s;
    } else {
      c += this.s;

      while (i < a.t) {
        c -= a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }

      c -= a.s;
    }

    r.s = c < 0 ? -1 : 0;
    if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  function bnpMultiplyTo(a, r) {
    var x = this.abs(),
        y = a.abs();
    var i = x.t;
    r.t = i + y.t;

    while (--i >= 0) {
      r[i] = 0;
    }

    for (i = 0; i < y.t; ++i) {
      r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
    }

    r.s = 0;
    r.clamp();
    if (this.s != a.s) BigInteger.ZERO.subTo(r, r);
  }

  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2 * x.t;

    while (--i >= 0) {
      r[i] = 0;
    }

    for (i = 0; i < x.t - 1; ++i) {
      var c = x.am(i, x[i], r, 2 * i, 0, 1);

      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
        r[i + x.t] -= x.DV;
        r[i + x.t + 1] = 1;
      }
    }

    if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
    r.s = 0;
    r.clamp();
  }

  function bnpDivRemTo(m, q, r) {
    var pm = m.abs();
    if (pm.t <= 0) return;
    var pt = this.abs();

    if (pt.t < pm.t) {
      if (q != null) q.fromInt(0);
      if (r != null) this.copyTo(r);
      return;
    }

    if (r == null) r = nbi();
    var y = nbi(),
        ts = this.s,
        ms = m.s;
    var nsh = this.DB - nbits(pm[pm.t - 1]);

    if (nsh > 0) {
      pm.lShiftTo(nsh, y);
      pt.lShiftTo(nsh, r);
    } else {
      pm.copyTo(y);
      pt.copyTo(r);
    }

    var ys = y.t;
    var y0 = y[ys - 1];
    if (y0 == 0) return;
    var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
    var d1 = this.FV / yt,
        d2 = (1 << this.F1) / yt,
        e = 1 << this.F2;
    var i = r.t,
        j = i - ys,
        t = q == null ? nbi() : q;
    y.dlShiftTo(j, t);

    if (r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t, r);
    }

    BigInteger.ONE.dlShiftTo(ys, t);
    t.subTo(y, y);

    while (y.t < ys) {
      y[y.t++] = 0;
    }

    while (--j >= 0) {
      var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);

      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
        y.dlShiftTo(j, t);
        r.subTo(t, r);

        while (r[i] < --qd) {
          r.subTo(t, r);
        }
      }
    }

    if (q != null) {
      r.drShiftTo(ys, q);
      if (ts != ms) BigInteger.ZERO.subTo(q, q);
    }

    r.t = ys;
    r.clamp();
    if (nsh > 0) r.rShiftTo(nsh, r);
    if (ts < 0) BigInteger.ZERO.subTo(r, r);
  }

  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a, null, r);
    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);
    return r;
  }

  function Classic(m) {
    this.m = m;
  }

  function cConvert(x) {
    if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;
  }

  function cRevert(x) {
    return x;
  }

  function cReduce(x) {
    x.divRemTo(this.m, null, x);
  }

  function cMulTo(x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  }

  function cSqrTo(x, r) {
    x.squareTo(r);
    this.reduce(r);
  }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  function bnpInvDigit() {
    if (this.t < 1) return 0;
    var x = this[0];
    if ((x & 1) == 0) return 0;
    var y = x & 3;
    y = y * (2 - (x & 0xf) * y) & 0xf;
    y = y * (2 - (x & 0xff) * y) & 0xff;
    y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;
    y = y * (2 - x * y % this.DV) % this.DV;
    return y > 0 ? this.DV - y : -y;
  }

  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp & 0x7fff;
    this.mph = this.mp >> 15;
    this.um = (1 << m.DB - 15) - 1;
    this.mt2 = 2 * m.t;
  }

  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t, r);
    r.divRemTo(this.m, null, r);
    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);
    return r;
  }

  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  function montReduce(x) {
    while (x.t <= this.mt2) {
      x[x.t++] = 0;
    }

    for (var i = 0; i < this.m.t; ++i) {
      var j = x[i] & 0x7fff;
      var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
      j = i + this.m.t;
      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);

      while (x[j] >= x.DV) {
        x[j] -= x.DV;
        x[++j]++;
      }
    }

    x.clamp();
    x.drShiftTo(this.m.t, x);
    if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);
  }

  function montSqrTo(x, r) {
    x.squareTo(r);
    this.reduce(r);
  }

  function montMulTo(x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  function bnpIsEven() {
    return (this.t > 0 ? this[0] & 1 : this.s) == 0;
  }

  function bnpExp(e, z) {
    if (e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(),
        r2 = nbi(),
        g = z.convert(this),
        i = nbits(e) - 1;
    g.copyTo(r);

    while (--i >= 0) {
      z.sqrTo(r, r2);
      if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {
        var t = r;
        r = r2;
        r2 = t;
      }
    }

    return z.revert(r);
  }

  function bnModPowInt(e, m) {
    var z;
    if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);
    return this.exp(e, z);
  }

  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  function bnClone() {
    var r = nbi();
    this.copyTo(r);
    return r;
  }

  function bnIntValue() {
    if (this.s < 0) {
      if (this.t == 1) return this[0] - this.DV;else if (this.t == 0) return -1;
    } else if (this.t == 1) return this[0];else if (this.t == 0) return 0;

    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
  }

  function bnByteValue() {
    return this.t == 0 ? this.s : this[0] << 24 >> 24;
  }

  function bnShortValue() {
    return this.t == 0 ? this.s : this[0] << 16 >> 16;
  }

  function bnpChunkSize(r) {
    return Math.floor(Math.LN2 * this.DB / Math.log(r));
  }

  function bnSigNum() {
    if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this[0] <= 0) return 0;else return 1;
  }

  function bnpToRadix(b) {
    if (b == null) b = 10;
    if (this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b, cs);
    var d = nbv(a),
        y = nbi(),
        z = nbi(),
        r = "";
    this.divRemTo(d, y, z);

    while (y.signum() > 0) {
      r = (a + z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d, y, z);
    }

    return z.intValue().toString(b) + r;
  }

  function bnpFromRadix(s, b) {
    this.fromInt(0);
    if (b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b, cs),
        mi = false,
        j = 0,
        w = 0;

    for (var i = 0; i < s.length; ++i) {
      var x = intAt(s, i);

      if (x < 0) {
        if (s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }

      w = b * w + x;

      if (++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w, 0);
        j = 0;
        w = 0;
      }
    }

    if (j > 0) {
      this.dMultiply(Math.pow(b, j));
      this.dAddOffset(w, 0);
    }

    if (mi) BigInteger.ZERO.subTo(this, this);
  }

  function bnpFromNumber(a, b, c) {
    if ("number" == typeof b) {
      if (a < 2) this.fromInt(1);else {
        this.fromNumber(a, c);
        if (!this.testBit(a - 1)) this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
        if (this.isEven()) this.dAddOffset(1, 0);

        while (!this.isProbablePrime(b)) {
          this.dAddOffset(2, 0);
          if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
        }
      }
    } else {
      var x = new Array(),
          t = a & 7;
      x.length = (a >> 3) + 1;
      b.nextBytes(x);
      if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;
      this.fromString(x, 256);
    }
  }

  function bnToByteArray() {
    var i = this.t,
        r = new Array();
    r[0] = this.s;
    var p = this.DB - i * this.DB % 8,
        d,
        k = 0;

    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | this.s << this.DB - p;

      while (i >= 0) {
        if (p < 8) {
          d = (this[i] & (1 << p) - 1) << 8 - p;
          d |= this[--i] >> (p += this.DB - 8);
        } else {
          d = this[i] >> (p -= 8) & 0xff;

          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }

        if ((d & 0x80) != 0) d |= -256;
        if (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;
        if (k > 0 || d != this.s) r[k++] = d;
      }
    }

    return r;
  }

  function bnEquals(a) {
    return this.compareTo(a) == 0;
  }

  function bnMin(a) {
    return this.compareTo(a) < 0 ? this : a;
  }

  function bnMax(a) {
    return this.compareTo(a) > 0 ? this : a;
  }

  function bnpBitwiseTo(a, op, r) {
    var i,
        f,
        m = Math.min(a.t, this.t);

    for (i = 0; i < m; ++i) {
      r[i] = op(this[i], a[i]);
    }

    if (a.t < this.t) {
      f = a.s & this.DM;

      for (i = m; i < this.t; ++i) {
        r[i] = op(this[i], f);
      }

      r.t = this.t;
    } else {
      f = this.s & this.DM;

      for (i = m; i < a.t; ++i) {
        r[i] = op(f, a[i]);
      }

      r.t = a.t;
    }

    r.s = op(this.s, a.s);
    r.clamp();
  }

  function op_and(x, y) {
    return x & y;
  }

  function bnAnd(a) {
    var r = nbi();
    this.bitwiseTo(a, op_and, r);
    return r;
  }

  function op_or(x, y) {
    return x | y;
  }

  function bnOr(a) {
    var r = nbi();
    this.bitwiseTo(a, op_or, r);
    return r;
  }

  function op_xor(x, y) {
    return x ^ y;
  }

  function bnXor(a) {
    var r = nbi();
    this.bitwiseTo(a, op_xor, r);
    return r;
  }

  function op_andnot(x, y) {
    return x & ~y;
  }

  function bnAndNot(a) {
    var r = nbi();
    this.bitwiseTo(a, op_andnot, r);
    return r;
  }

  function bnNot() {
    var r = nbi();

    for (var i = 0; i < this.t; ++i) {
      r[i] = this.DM & ~this[i];
    }

    r.t = this.t;
    r.s = ~this.s;
    return r;
  }

  function bnShiftLeft(n) {
    var r = nbi();
    if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);
    return r;
  }

  function bnShiftRight(n) {
    var r = nbi();
    if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);
    return r;
  }

  function lbit(x) {
    if (x == 0) return -1;
    var r = 0;

    if ((x & 0xffff) == 0) {
      x >>= 16;
      r += 16;
    }

    if ((x & 0xff) == 0) {
      x >>= 8;
      r += 8;
    }

    if ((x & 0xf) == 0) {
      x >>= 4;
      r += 4;
    }

    if ((x & 3) == 0) {
      x >>= 2;
      r += 2;
    }

    if ((x & 1) == 0) ++r;
    return r;
  }

  function bnGetLowestSetBit() {
    for (var i = 0; i < this.t; ++i) {
      if (this[i] != 0) return i * this.DB + lbit(this[i]);
    }

    if (this.s < 0) return this.t * this.DB;
    return -1;
  }

  function cbit(x) {
    var r = 0;

    while (x != 0) {
      x &= x - 1;
      ++r;
    }

    return r;
  }

  function bnBitCount() {
    var r = 0,
        x = this.s & this.DM;

    for (var i = 0; i < this.t; ++i) {
      r += cbit(this[i] ^ x);
    }

    return r;
  }

  function bnTestBit(n) {
    var j = Math.floor(n / this.DB);
    if (j >= this.t) return this.s != 0;
    return (this[j] & 1 << n % this.DB) != 0;
  }

  function bnpChangeBit(n, op) {
    var r = BigInteger.ONE.shiftLeft(n);
    this.bitwiseTo(r, op, r);
    return r;
  }

  function bnSetBit(n) {
    return this.changeBit(n, op_or);
  }

  function bnClearBit(n) {
    return this.changeBit(n, op_andnot);
  }

  function bnFlipBit(n) {
    return this.changeBit(n, op_xor);
  }

  function bnpAddTo(a, r) {
    var i = 0,
        c = 0,
        m = Math.min(a.t, this.t);

    while (i < m) {
      c += this[i] + a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }

    if (a.t < this.t) {
      c += a.s;

      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }

      c += this.s;
    } else {
      c += this.s;

      while (i < a.t) {
        c += a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }

      c += a.s;
    }

    r.s = c < 0 ? -1 : 0;
    if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;
    r.t = i;
    r.clamp();
  }

  function bnAdd(a) {
    var r = nbi();
    this.addTo(a, r);
    return r;
  }

  function bnSubtract(a) {
    var r = nbi();
    this.subTo(a, r);
    return r;
  }

  function bnMultiply(a) {
    var r = nbi();
    this.multiplyTo(a, r);
    return r;
  }

  function bnDivide(a) {
    var r = nbi();
    this.divRemTo(a, r, null);
    return r;
  }

  function bnRemainder(a) {
    var r = nbi();
    this.divRemTo(a, null, r);
    return r;
  }

  function bnDivideAndRemainder(a) {
    var q = nbi(),
        r = nbi();
    this.divRemTo(a, q, r);
    return new Array(q, r);
  }

  function bnpDMultiply(n) {
    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
    ++this.t;
    this.clamp();
  }

  function bnpDAddOffset(n, w) {
    while (this.t <= w) {
      this[this.t++] = 0;
    }

    this[w] += n;

    while (this[w] >= this.DV) {
      this[w] -= this.DV;
      if (++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  function NullExp() {}

  function nNop(x) {
    return x;
  }

  function nMulTo(x, y, r) {
    x.multiplyTo(y, r);
  }

  function nSqrTo(x, r) {
    x.squareTo(r);
  }

  NullExp.prototype.convert = nNop;
  NullExp.prototype.revert = nNop;
  NullExp.prototype.mulTo = nMulTo;
  NullExp.prototype.sqrTo = nSqrTo;

  function bnPow(e) {
    return this.exp(e, new NullExp());
  }

  function bnpMultiplyLowerTo(a, n, r) {
    var i = Math.min(this.t + a.t, n);
    r.s = 0;
    r.t = i;

    while (i > 0) {
      r[--i] = 0;
    }

    var j;

    for (j = r.t - this.t; i < j; ++i) {
      r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
    }

    for (j = Math.min(a.t, n); i < j; ++i) {
      this.am(0, a[i], r, i, 0, n - i);
    }

    r.clamp();
  }

  function bnpMultiplyUpperTo(a, n, r) {
    --n;
    var i = r.t = this.t + a.t - n;
    r.s = 0;

    while (--i >= 0) {
      r[i] = 0;
    }

    for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
      r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
    }

    r.clamp();
    r.drShiftTo(1, r);
  }

  function Barrett(m) {
    this.r2 = nbi();
    this.q3 = nbi();
    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
    this.mu = this.r2.divide(m);
    this.m = m;
  }

  function barrettConvert(x) {
    if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    }
  }

  function barrettRevert(x) {
    return x;
  }

  function barrettReduce(x) {
    x.drShiftTo(this.m.t - 1, this.r2);

    if (x.t > this.m.t + 1) {
      x.t = this.m.t + 1;
      x.clamp();
    }

    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);

    while (x.compareTo(this.r2) < 0) {
      x.dAddOffset(1, this.m.t + 1);
    }

    x.subTo(this.r2, x);

    while (x.compareTo(this.m) >= 0) {
      x.subTo(this.m, x);
    }
  }

  function barrettSqrTo(x, r) {
    x.squareTo(r);
    this.reduce(r);
  }

  function barrettMulTo(x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  }

  Barrett.prototype.convert = barrettConvert;
  Barrett.prototype.revert = barrettRevert;
  Barrett.prototype.reduce = barrettReduce;
  Barrett.prototype.mulTo = barrettMulTo;
  Barrett.prototype.sqrTo = barrettSqrTo;

  function bnModPow(e, m) {
    var i = e.bitLength(),
        k,
        r = nbv(1),
        z;
    if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;
    if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m);
    var g = new Array(),
        n = 3,
        k1 = k - 1,
        km = (1 << k) - 1;
    g[1] = z.convert(this);

    if (k > 1) {
      var g2 = nbi();
      z.sqrTo(g[1], g2);

      while (n <= km) {
        g[n] = nbi();
        z.mulTo(g2, g[n - 2], g[n]);
        n += 2;
      }
    }

    var j = e.t - 1,
        w,
        is1 = true,
        r2 = nbi(),
        t;
    i = nbits(e[j]) - 1;

    while (j >= 0) {
      if (i >= k1) w = e[j] >> i - k1 & km;else {
        w = (e[j] & (1 << i + 1) - 1) << k1 - i;
        if (j > 0) w |= e[j - 1] >> this.DB + i - k1;
      }
      n = k;

      while ((w & 1) == 0) {
        w >>= 1;
        --n;
      }

      if ((i -= n) < 0) {
        i += this.DB;
        --j;
      }

      if (is1) {
        g[w].copyTo(r);
        is1 = false;
      } else {
        while (n > 1) {
          z.sqrTo(r, r2);
          z.sqrTo(r2, r);
          n -= 2;
        }

        if (n > 0) z.sqrTo(r, r2);else {
          t = r;
          r = r2;
          r2 = t;
        }
        z.mulTo(r2, g[w], r);
      }

      while (j >= 0 && (e[j] & 1 << i) == 0) {
        z.sqrTo(r, r2);
        t = r;
        r = r2;
        r2 = t;

        if (--i < 0) {
          i = this.DB - 1;
          --j;
        }
      }
    }

    return z.revert(r);
  }

  function bnGCD(a) {
    var x = this.s < 0 ? this.negate() : this.clone();
    var y = a.s < 0 ? a.negate() : a.clone();

    if (x.compareTo(y) < 0) {
      var t = x;
      x = y;
      y = t;
    }

    var i = x.getLowestSetBit(),
        g = y.getLowestSetBit();
    if (g < 0) return x;
    if (i < g) g = i;

    if (g > 0) {
      x.rShiftTo(g, x);
      y.rShiftTo(g, y);
    }

    while (x.signum() > 0) {
      if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);
      if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);

      if (x.compareTo(y) >= 0) {
        x.subTo(y, x);
        x.rShiftTo(1, x);
      } else {
        y.subTo(x, y);
        y.rShiftTo(1, y);
      }
    }

    if (g > 0) y.lShiftTo(g, y);
    return y;
  }

  function bnpModInt(n) {
    if (n <= 0) return 0;
    var d = this.DV % n,
        r = this.s < 0 ? n - 1 : 0;
    if (this.t > 0) if (d == 0) r = this[0] % n;else for (var i = this.t - 1; i >= 0; --i) {
      r = (d * r + this[i]) % n;
    }
    return r;
  }

  function bnModInverse(m) {
    var ac = m.isEven();
    if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;
    var u = m.clone(),
        v = this.clone();
    var a = nbv(1),
        b = nbv(0),
        c = nbv(0),
        d = nbv(1);

    while (u.signum() != 0) {
      while (u.isEven()) {
        u.rShiftTo(1, u);

        if (ac) {
          if (!a.isEven() || !b.isEven()) {
            a.addTo(this, a);
            b.subTo(m, b);
          }

          a.rShiftTo(1, a);
        } else if (!b.isEven()) b.subTo(m, b);

        b.rShiftTo(1, b);
      }

      while (v.isEven()) {
        v.rShiftTo(1, v);

        if (ac) {
          if (!c.isEven() || !d.isEven()) {
            c.addTo(this, c);
            d.subTo(m, d);
          }

          c.rShiftTo(1, c);
        } else if (!d.isEven()) d.subTo(m, d);

        d.rShiftTo(1, d);
      }

      if (u.compareTo(v) >= 0) {
        u.subTo(v, u);
        if (ac) a.subTo(c, a);
        b.subTo(d, b);
      } else {
        v.subTo(u, v);
        if (ac) c.subTo(a, c);
        d.subTo(b, d);
      }
    }

    if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
    if (d.compareTo(m) >= 0) return d.subtract(m);
    if (d.signum() < 0) d.addTo(m, d);else return d;
    if (d.signum() < 0) return d.add(m);else return d;
  }

  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509];
  var lplim = 67108864 / lowprimes[lowprimes.length - 1];

  function bnIsProbablePrime(t) {
    var i,
        x = this.abs();

    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
      for (i = 0; i < lowprimes.length; ++i) {
        if (x[0] == lowprimes[i]) return true;
      }

      return false;
    }

    if (x.isEven()) return false;
    i = 1;

    while (i < lowprimes.length) {
      var m = lowprimes[i],
          j = i + 1;

      while (j < lowprimes.length && m < lplim) {
        m *= lowprimes[j++];
      }

      m = x.modInt(m);

      while (i < j) {
        if (m % lowprimes[i++] == 0) return false;
      }
    }

    return x.millerRabin(t);
  }

  function bnpMillerRabin(t) {
    var n1 = this.subtract(BigInteger.ONE);
    var k = n1.getLowestSetBit();
    if (k <= 0) return false;
    var r = n1.shiftRight(k);
    t = t + 1 >> 1;
    if (t > lowprimes.length) t = lowprimes.length;
    var a = nbi();

    for (var i = 0; i < t; ++i) {
      a.fromInt(lowprimes[i]);
      var y = a.modPow(r, this);

      if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
        var j = 1;

        while (j++ < k && y.compareTo(n1) != 0) {
          y = y.modPowInt(2, this);
          if (y.compareTo(BigInteger.ONE) == 0) return false;
        }

        if (y.compareTo(n1) != 0) return false;
      }
    }

    return true;
  }

  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.fromNumber = bnpFromNumber;
  BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
  BigInteger.prototype.changeBit = bnpChangeBit;
  BigInteger.prototype.addTo = bnpAddTo;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
  BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
  BigInteger.prototype.modInt = bnpModInt;
  BigInteger.prototype.millerRabin = bnpMillerRabin;
  BigInteger.prototype.clone = bnClone;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.byteValue = bnByteValue;
  BigInteger.prototype.shortValue = bnShortValue;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.toByteArray = bnToByteArray;
  BigInteger.prototype.equals = bnEquals;
  BigInteger.prototype.min = bnMin;
  BigInteger.prototype.max = bnMax;
  BigInteger.prototype.and = bnAnd;
  BigInteger.prototype.or = bnOr;
  BigInteger.prototype.xor = bnXor;
  BigInteger.prototype.andNot = bnAndNot;
  BigInteger.prototype.not = bnNot;
  BigInteger.prototype.shiftLeft = bnShiftLeft;
  BigInteger.prototype.shiftRight = bnShiftRight;
  BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
  BigInteger.prototype.bitCount = bnBitCount;
  BigInteger.prototype.testBit = bnTestBit;
  BigInteger.prototype.setBit = bnSetBit;
  BigInteger.prototype.clearBit = bnClearBit;
  BigInteger.prototype.flipBit = bnFlipBit;
  BigInteger.prototype.add = bnAdd;
  BigInteger.prototype.subtract = bnSubtract;
  BigInteger.prototype.multiply = bnMultiply;
  BigInteger.prototype.divide = bnDivide;
  BigInteger.prototype.remainder = bnRemainder;
  BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
  BigInteger.prototype.modPow = bnModPow;
  BigInteger.prototype.modInverse = bnModInverse;
  BigInteger.prototype.pow = bnPow;
  BigInteger.prototype.gcd = bnGCD;
  BigInteger.prototype.isProbablePrime = bnIsProbablePrime;

  if (typeof nodemode !== "undefined") {
    exports.BigInteger = BigInteger;
  }
},10532,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/RSA/jsbn.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  if (typeof nodemode !== "undefined") {
    navigator = {};
    rng_psize = _require(_dependencyMap[0]).rng_psize;
    prng_newstate = _require(_dependencyMap[0]).prng_newstate;
  }

  function SecureRandom() {
    this.rng_state;
    this.rng_pool;
    this.rng_pptr;

    this.rng_seed_int = function (x) {
      this.rng_pool[this.rng_pptr++] ^= x & 255;
      this.rng_pool[this.rng_pptr++] ^= x >> 8 & 255;
      this.rng_pool[this.rng_pptr++] ^= x >> 16 & 255;
      this.rng_pool[this.rng_pptr++] ^= x >> 24 & 255;
      if (this.rng_pptr >= rng_psize) this.rng_pptr -= rng_psize;
    };

    this.rng_seed_time = function () {
      this.rng_seed_int(new Date().getTime());
    };

    if (this.rng_pool == null) {
      this.rng_pool = new Array();
      this.rng_pptr = 0;
      var t;

      if (navigator.appName == "Netscape" && navigator.appVersion < "5" && window.crypto) {
        var z = window.crypto.random(32);

        for (t = 0; t < z.length; ++t) {
          this.rng_pool[this.rng_pptr++] = z.charCodeAt(t) & 255;
        }
      }

      while (this.rng_pptr < rng_psize) {
        t = Math.floor(65536 * Math.random());
        this.rng_pool[this.rng_pptr++] = t >>> 8;
        this.rng_pool[this.rng_pptr++] = t & 255;
      }

      this.rng_pptr = 0;
      this.rng_seed_time();
    }

    this.rng_get_byte = function () {
      if (this.rng_state == null) {
        this.rng_seed_time();
        this.rng_state = prng_newstate();
        this.rng_state.init(this.rng_pool);

        for (this.rng_pptr = 0; this.rng_pptr < this.rng_pool.length; ++this.rng_pptr) {
          this.rng_pool[this.rng_pptr] = 0;
        }

        this.rng_pptr = 0;
      }

      return this.rng_state.next();
    };

    this.nextBytes = function (ba) {
      var i;

      for (i = 0; i < ba.length; ++i) {
        ba[i] = this.rng_get_byte();
      }
    };
  }

  if (typeof nodemode !== "undefined") {
    exports.SecureRandom = SecureRandom;
  }
},10535,[10538],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/RSA/rng.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  function Arcfour() {
    this.i = 0;
    this.j = 0;
    this.S = new Array();
  }

  function ARC4init(key) {
    var i, j, t;

    for (i = 0; i < 256; ++i) {
      this.S[i] = i;
    }

    j = 0;

    for (i = 0; i < 256; ++i) {
      j = j + this.S[i] + key[i % key.length] & 255;
      t = this.S[i];
      this.S[i] = this.S[j];
      this.S[j] = t;
    }

    this.i = 0;
    this.j = 0;
  }

  function ARC4next() {
    var t;
    this.i = this.i + 1 & 255;
    this.j = this.j + this.S[this.i] & 255;
    t = this.S[this.i];
    this.S[this.i] = this.S[this.j];
    this.S[this.j] = t;
    return this.S[t + this.S[this.i] & 255];
  }

  Arcfour.prototype.init = ARC4init;
  Arcfour.prototype.next = ARC4next;

  function prng_newstate() {
    return new Arcfour();
  }

  var rng_psize = 256;

  if (typeof nodemode !== "undefined") {
    exports.rng_psize = rng_psize;
    exports.prng_newstate = prng_newstate;
  }
},10538,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/RSA/prng4.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var CommonYeelightModules = _require(_dependencyMap[0]);

	var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
	var YLHostFile = CommonYeelightModules.YLHostFile;
	var AppUUIDDataSource = CommonYeelightModulesDataSource.AppUUIDDataSource;
	var uuidFile = AppUUIDDataSource.uuidFile;
	var APP_UUID = null;

	function uuid(callback) {
		if (APP_UUID) {
			callback(APP_UUID);
			return;
		}

		YLHostFile.readFile(uuidFile, function (isSucces, content) {
			if (isSucces && content.length > 0) {
				callback(content);
				APP_UUID = content;
			} else {
				return generate(callback);
			}
		});
	}

	function generate(callback) {
		var uuid = AppUUIDDataSource.uuid;
		YLHostFile.writeFile(uuidFile, uuid, function () {});
		APP_UUID = uuid;
		callback(uuid);
	}

	module.exports = {
		getUUID: function getUUID(callback) {
			return uuid(callback);
		}
	};
},10541,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/AppUUID.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	;

	(function (root, factory) {
		if (typeof exports === "object") {
			module.exports = exports = factory();
		} else if (typeof define === "function" && define.amd) {
			define([], factory);
		} else {
			root.CryptoJS = factory();
		}
	})(this, function () {
		var CryptoJS = CryptoJS || function (Math, undefined) {
			var C = {};
			var C_lib = C.lib = {};

			var Base = C_lib.Base = function () {
				function F() {}

				return {
					extend: function extend(overrides) {
						F.prototype = this;
						var subtype = new F();

						if (overrides) {
							subtype.mixIn(overrides);
						}

						if (!subtype.hasOwnProperty('init')) {
							subtype.init = function () {
								subtype.$super.init.apply(this, arguments);
							};
						}

						subtype.init.prototype = subtype;
						subtype.$super = this;
						return subtype;
					},
					create: function create() {
						var instance = this.extend();
						instance.init.apply(instance, arguments);
						return instance;
					},
					init: function init() {},
					mixIn: function mixIn(properties) {
						for (var propertyName in properties) {
							if (properties.hasOwnProperty(propertyName)) {
								this[propertyName] = properties[propertyName];
							}
						}

						if (properties.hasOwnProperty('toString')) {
							this.toString = properties.toString;
						}
					},
					clone: function clone() {
						return this.init.prototype.extend(this);
					}
				};
			}();

			var WordArray = C_lib.WordArray = Base.extend({
				init: function init(words, sigBytes) {
					words = this.words = words || [];

					if (sigBytes != undefined) {
						this.sigBytes = sigBytes;
					} else {
						this.sigBytes = words.length * 4;
					}
				},
				toString: function toString(encoder) {
					return (encoder || Hex).stringify(this);
				},
				concat: function concat(wordArray) {
					var thisWords = this.words;
					var thatWords = wordArray.words;
					var thisSigBytes = this.sigBytes;
					var thatSigBytes = wordArray.sigBytes;
					this.clamp();

					if (thisSigBytes % 4) {
						for (var i = 0; i < thatSigBytes; i++) {
							var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
							thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
						}
					} else {
						for (var i = 0; i < thatSigBytes; i += 4) {
							thisWords[thisSigBytes + i >>> 2] = thatWords[i >>> 2];
						}
					}

					this.sigBytes += thatSigBytes;
					return this;
				},
				clamp: function clamp() {
					var words = this.words;
					var sigBytes = this.sigBytes;
					words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
					words.length = Math.ceil(sigBytes / 4);
				},
				clone: function clone() {
					var clone = Base.clone.call(this);
					clone.words = this.words.slice(0);
					return clone;
				},
				random: function random(nBytes) {
					var words = [];

					var r = function r(m_w) {
						var m_w = m_w;
						var m_z = 0x3ade68b1;
						var mask = 0xffffffff;
						return function () {
							m_z = 0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10) & mask;
							m_w = 0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10) & mask;
							var result = (m_z << 0x10) + m_w & mask;
							result /= 0x100000000;
							result += 0.5;
							return result * (Math.random() > .5 ? 1 : -1);
						};
					};

					for (var i = 0, rcache; i < nBytes; i += 4) {
						var _r = r((rcache || Math.random()) * 0x100000000);

						rcache = _r() * 0x3ade67b7;
						words.push(_r() * 0x100000000 | 0);
					}

					return new WordArray.init(words, nBytes);
				}
			});
			var C_enc = C.enc = {};
			var Hex = C_enc.Hex = {
				stringify: function stringify(wordArray) {
					var words = wordArray.words;
					var sigBytes = wordArray.sigBytes;
					var hexChars = [];

					for (var i = 0; i < sigBytes; i++) {
						var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
						hexChars.push((bite >>> 4).toString(16));
						hexChars.push((bite & 0x0f).toString(16));
					}

					return hexChars.join('');
				},
				parse: function parse(hexStr) {
					var hexStrLength = hexStr.length;
					var words = [];

					for (var i = 0; i < hexStrLength; i += 2) {
						words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
					}

					return new WordArray.init(words, hexStrLength / 2);
				}
			};
			var Latin1 = C_enc.Latin1 = {
				stringify: function stringify(wordArray) {
					var words = wordArray.words;
					var sigBytes = wordArray.sigBytes;
					var latin1Chars = [];

					for (var i = 0; i < sigBytes; i++) {
						var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
						latin1Chars.push(String.fromCharCode(bite));
					}

					return latin1Chars.join('');
				},
				parse: function parse(latin1Str) {
					var latin1StrLength = latin1Str.length;
					var words = [];

					for (var i = 0; i < latin1StrLength; i++) {
						words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
					}

					return new WordArray.init(words, latin1StrLength);
				}
			};
			var Utf8 = C_enc.Utf8 = {
				stringify: function stringify(wordArray) {
					try {
						return decodeURIComponent(escape(Latin1.stringify(wordArray)));
					} catch (e) {
						throw new Error('Malformed UTF-8 data');
					}
				},
				parse: function parse(utf8Str) {
					return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
				}
			};
			var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
				reset: function reset() {
					this._data = new WordArray.init();
					this._nDataBytes = 0;
				},
				_append: function _append(data) {
					if (typeof data == 'string') {
						data = Utf8.parse(data);
					}

					this._data.concat(data);

					this._nDataBytes += data.sigBytes;
				},
				_process: function _process(doFlush) {
					var data = this._data;
					var dataWords = data.words;
					var dataSigBytes = data.sigBytes;
					var blockSize = this.blockSize;
					var blockSizeBytes = blockSize * 4;
					var nBlocksReady = dataSigBytes / blockSizeBytes;

					if (doFlush) {
						nBlocksReady = Math.ceil(nBlocksReady);
					} else {
						nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
					}

					var nWordsReady = nBlocksReady * blockSize;
					var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

					if (nWordsReady) {
						for (var offset = 0; offset < nWordsReady; offset += blockSize) {
							this._doProcessBlock(dataWords, offset);
						}

						var processedWords = dataWords.splice(0, nWordsReady);
						data.sigBytes -= nBytesReady;
					}

					return new WordArray.init(processedWords, nBytesReady);
				},
				clone: function clone() {
					var clone = Base.clone.call(this);
					clone._data = this._data.clone();
					return clone;
				},
				_minBufferSize: 0
			});
			var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
				cfg: Base.extend(),
				init: function init(cfg) {
					this.cfg = this.cfg.extend(cfg);
					this.reset();
				},
				reset: function reset() {
					BufferedBlockAlgorithm.reset.call(this);

					this._doReset();
				},
				update: function update(messageUpdate) {
					this._append(messageUpdate);

					this._process();

					return this;
				},
				finalize: function finalize(messageUpdate) {
					if (messageUpdate) {
						this._append(messageUpdate);
					}

					var hash = this._doFinalize();

					return hash;
				},
				blockSize: 16,
				_createHelper: function _createHelper(hasher) {
					return function (message, cfg) {
						return new hasher.init(cfg).finalize(message);
					};
				},
				_createHmacHelper: function _createHmacHelper(hasher) {
					return function (message, key) {
						return new C_algo.HMAC.init(hasher, key).finalize(message);
					};
				}
			});
			var C_algo = C.algo = {};
			return C;
		}(Math);

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var C_enc = C.enc;
			var Base64 = C_enc.Base64 = {
				stringify: function stringify(wordArray) {
					var words = wordArray.words;
					var sigBytes = wordArray.sigBytes;
					var map = this._map;
					wordArray.clamp();
					var base64Chars = [];

					for (var i = 0; i < sigBytes; i += 3) {
						var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
						var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
						var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
						var triplet = byte1 << 16 | byte2 << 8 | byte3;

						for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
							base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
						}
					}

					var paddingChar = map.charAt(64);

					if (paddingChar) {
						while (base64Chars.length % 4) {
							base64Chars.push(paddingChar);
						}
					}

					return base64Chars.join('');
				},
				parse: function parse(base64Str) {
					var base64StrLength = base64Str.length;
					var map = this._map;
					var paddingChar = map.charAt(64);

					if (paddingChar) {
						var paddingIndex = base64Str.indexOf(paddingChar);

						if (paddingIndex != -1) {
							base64StrLength = paddingIndex;
						}
					}

					var words = [];
					var nBytes = 0;

					for (var i = 0; i < base64StrLength; i++) {
						if (i % 4) {
							var bits1 = map.indexOf(base64Str.charAt(i - 1)) << i % 4 * 2;
							var bits2 = map.indexOf(base64Str.charAt(i)) >>> 6 - i % 4 * 2;
							var bitsCombined = bits1 | bits2;
							words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
							nBytes++;
						}
					}

					return WordArray.create(words, nBytes);
				},
				_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
			};
		})();

		(function (Math) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var Hasher = C_lib.Hasher;
			var C_algo = C.algo;
			var T = [];

			(function () {
				for (var i = 0; i < 64; i++) {
					T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
				}
			})();

			var MD5 = C_algo.MD5 = Hasher.extend({
				_doReset: function _doReset() {
					this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					for (var i = 0; i < 16; i++) {
						var offset_i = offset + i;
						var M_offset_i = M[offset_i];
						M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
					}

					var H = this._hash.words;
					var M_offset_0 = M[offset + 0];
					var M_offset_1 = M[offset + 1];
					var M_offset_2 = M[offset + 2];
					var M_offset_3 = M[offset + 3];
					var M_offset_4 = M[offset + 4];
					var M_offset_5 = M[offset + 5];
					var M_offset_6 = M[offset + 6];
					var M_offset_7 = M[offset + 7];
					var M_offset_8 = M[offset + 8];
					var M_offset_9 = M[offset + 9];
					var M_offset_10 = M[offset + 10];
					var M_offset_11 = M[offset + 11];
					var M_offset_12 = M[offset + 12];
					var M_offset_13 = M[offset + 13];
					var M_offset_14 = M[offset + 14];
					var M_offset_15 = M[offset + 15];
					var a = H[0];
					var b = H[1];
					var c = H[2];
					var d = H[3];
					a = FF(a, b, c, d, M_offset_0, 7, T[0]);
					d = FF(d, a, b, c, M_offset_1, 12, T[1]);
					c = FF(c, d, a, b, M_offset_2, 17, T[2]);
					b = FF(b, c, d, a, M_offset_3, 22, T[3]);
					a = FF(a, b, c, d, M_offset_4, 7, T[4]);
					d = FF(d, a, b, c, M_offset_5, 12, T[5]);
					c = FF(c, d, a, b, M_offset_6, 17, T[6]);
					b = FF(b, c, d, a, M_offset_7, 22, T[7]);
					a = FF(a, b, c, d, M_offset_8, 7, T[8]);
					d = FF(d, a, b, c, M_offset_9, 12, T[9]);
					c = FF(c, d, a, b, M_offset_10, 17, T[10]);
					b = FF(b, c, d, a, M_offset_11, 22, T[11]);
					a = FF(a, b, c, d, M_offset_12, 7, T[12]);
					d = FF(d, a, b, c, M_offset_13, 12, T[13]);
					c = FF(c, d, a, b, M_offset_14, 17, T[14]);
					b = FF(b, c, d, a, M_offset_15, 22, T[15]);
					a = GG(a, b, c, d, M_offset_1, 5, T[16]);
					d = GG(d, a, b, c, M_offset_6, 9, T[17]);
					c = GG(c, d, a, b, M_offset_11, 14, T[18]);
					b = GG(b, c, d, a, M_offset_0, 20, T[19]);
					a = GG(a, b, c, d, M_offset_5, 5, T[20]);
					d = GG(d, a, b, c, M_offset_10, 9, T[21]);
					c = GG(c, d, a, b, M_offset_15, 14, T[22]);
					b = GG(b, c, d, a, M_offset_4, 20, T[23]);
					a = GG(a, b, c, d, M_offset_9, 5, T[24]);
					d = GG(d, a, b, c, M_offset_14, 9, T[25]);
					c = GG(c, d, a, b, M_offset_3, 14, T[26]);
					b = GG(b, c, d, a, M_offset_8, 20, T[27]);
					a = GG(a, b, c, d, M_offset_13, 5, T[28]);
					d = GG(d, a, b, c, M_offset_2, 9, T[29]);
					c = GG(c, d, a, b, M_offset_7, 14, T[30]);
					b = GG(b, c, d, a, M_offset_12, 20, T[31]);
					a = HH(a, b, c, d, M_offset_5, 4, T[32]);
					d = HH(d, a, b, c, M_offset_8, 11, T[33]);
					c = HH(c, d, a, b, M_offset_11, 16, T[34]);
					b = HH(b, c, d, a, M_offset_14, 23, T[35]);
					a = HH(a, b, c, d, M_offset_1, 4, T[36]);
					d = HH(d, a, b, c, M_offset_4, 11, T[37]);
					c = HH(c, d, a, b, M_offset_7, 16, T[38]);
					b = HH(b, c, d, a, M_offset_10, 23, T[39]);
					a = HH(a, b, c, d, M_offset_13, 4, T[40]);
					d = HH(d, a, b, c, M_offset_0, 11, T[41]);
					c = HH(c, d, a, b, M_offset_3, 16, T[42]);
					b = HH(b, c, d, a, M_offset_6, 23, T[43]);
					a = HH(a, b, c, d, M_offset_9, 4, T[44]);
					d = HH(d, a, b, c, M_offset_12, 11, T[45]);
					c = HH(c, d, a, b, M_offset_15, 16, T[46]);
					b = HH(b, c, d, a, M_offset_2, 23, T[47]);
					a = II(a, b, c, d, M_offset_0, 6, T[48]);
					d = II(d, a, b, c, M_offset_7, 10, T[49]);
					c = II(c, d, a, b, M_offset_14, 15, T[50]);
					b = II(b, c, d, a, M_offset_5, 21, T[51]);
					a = II(a, b, c, d, M_offset_12, 6, T[52]);
					d = II(d, a, b, c, M_offset_3, 10, T[53]);
					c = II(c, d, a, b, M_offset_10, 15, T[54]);
					b = II(b, c, d, a, M_offset_1, 21, T[55]);
					a = II(a, b, c, d, M_offset_8, 6, T[56]);
					d = II(d, a, b, c, M_offset_15, 10, T[57]);
					c = II(c, d, a, b, M_offset_6, 15, T[58]);
					b = II(b, c, d, a, M_offset_13, 21, T[59]);
					a = II(a, b, c, d, M_offset_4, 6, T[60]);
					d = II(d, a, b, c, M_offset_11, 10, T[61]);
					c = II(c, d, a, b, M_offset_2, 15, T[62]);
					b = II(b, c, d, a, M_offset_9, 21, T[63]);
					H[0] = H[0] + a | 0;
					H[1] = H[1] + b | 0;
					H[2] = H[2] + c | 0;
					H[3] = H[3] + d | 0;
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
					var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
					var nBitsTotalL = nBitsTotal;
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;
					data.sigBytes = (dataWords.length + 1) * 4;

					this._process();

					var hash = this._hash;
					var H = hash.words;

					for (var i = 0; i < 4; i++) {
						var H_i = H[i];
						H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
					}

					return hash;
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);
					clone._hash = this._hash.clone();
					return clone;
				}
			});

			function FF(a, b, c, d, x, s, t) {
				var n = a + (b & c | ~b & d) + x + t;
				return (n << s | n >>> 32 - s) + b;
			}

			function GG(a, b, c, d, x, s, t) {
				var n = a + (b & d | c & ~d) + x + t;
				return (n << s | n >>> 32 - s) + b;
			}

			function HH(a, b, c, d, x, s, t) {
				var n = a + (b ^ c ^ d) + x + t;
				return (n << s | n >>> 32 - s) + b;
			}

			function II(a, b, c, d, x, s, t) {
				var n = a + (c ^ (b | ~d)) + x + t;
				return (n << s | n >>> 32 - s) + b;
			}

			C.MD5 = Hasher._createHelper(MD5);
			C.HmacMD5 = Hasher._createHmacHelper(MD5);
		})(Math);

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var Hasher = C_lib.Hasher;
			var C_algo = C.algo;
			var W = [];
			var SHA1 = C_algo.SHA1 = Hasher.extend({
				_doReset: function _doReset() {
					this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var H = this._hash.words;
					var a = H[0];
					var b = H[1];
					var c = H[2];
					var d = H[3];
					var e = H[4];

					for (var i = 0; i < 80; i++) {
						if (i < 16) {
							W[i] = M[offset + i] | 0;
						} else {
							var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
							W[i] = n << 1 | n >>> 31;
						}

						var t = (a << 5 | a >>> 27) + e + W[i];

						if (i < 20) {
							t += (b & c | ~b & d) + 0x5a827999;
						} else if (i < 40) {
							t += (b ^ c ^ d) + 0x6ed9eba1;
						} else if (i < 60) {
							t += (b & c | b & d | c & d) - 0x70e44324;
						} else {
								t += (b ^ c ^ d) - 0x359d3e2a;
							}

						e = d;
						d = c;
						c = b << 30 | b >>> 2;
						b = a;
						a = t;
					}

					H[0] = H[0] + a | 0;
					H[1] = H[1] + b | 0;
					H[2] = H[2] + c | 0;
					H[3] = H[3] + d | 0;
					H[4] = H[4] + e | 0;
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
					data.sigBytes = dataWords.length * 4;

					this._process();

					return this._hash;
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);
					clone._hash = this._hash.clone();
					return clone;
				}
			});
			C.SHA1 = Hasher._createHelper(SHA1);
			C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
		})();

		(function (Math) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var Hasher = C_lib.Hasher;
			var C_algo = C.algo;
			var H = [];
			var K = [];

			(function () {
				function isPrime(n) {
					var sqrtN = Math.sqrt(n);

					for (var factor = 2; factor <= sqrtN; factor++) {
						if (!(n % factor)) {
							return false;
						}
					}

					return true;
				}

				function getFractionalBits(n) {
					return (n - (n | 0)) * 0x100000000 | 0;
				}

				var n = 2;
				var nPrime = 0;

				while (nPrime < 64) {
					if (isPrime(n)) {
						if (nPrime < 8) {
							H[nPrime] = getFractionalBits(Math.pow(n, 0.5));
						}

						K[nPrime] = getFractionalBits(Math.pow(n, 0.3333333333333333));
						nPrime++;
					}

					n++;
				}
			})();

			var W = [];
			var SHA256 = C_algo.SHA256 = Hasher.extend({
				_doReset: function _doReset() {
					this._hash = new WordArray.init(H.slice(0));
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var H = this._hash.words;
					var a = H[0];
					var b = H[1];
					var c = H[2];
					var d = H[3];
					var e = H[4];
					var f = H[5];
					var g = H[6];
					var h = H[7];

					for (var i = 0; i < 64; i++) {
						if (i < 16) {
							W[i] = M[offset + i] | 0;
						} else {
							var gamma0x = W[i - 15];
							var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
							var gamma1x = W[i - 2];
							var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
							W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
						}

						var ch = e & f ^ ~e & g;
						var maj = a & b ^ a & c ^ b & c;
						var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
						var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
						var t1 = h + sigma1 + ch + K[i] + W[i];
						var t2 = sigma0 + maj;
						h = g;
						g = f;
						f = e;
						e = d + t1 | 0;
						d = c;
						c = b;
						b = a;
						a = t1 + t2 | 0;
					}

					H[0] = H[0] + a | 0;
					H[1] = H[1] + b | 0;
					H[2] = H[2] + c | 0;
					H[3] = H[3] + d | 0;
					H[4] = H[4] + e | 0;
					H[5] = H[5] + f | 0;
					H[6] = H[6] + g | 0;
					H[7] = H[7] + h | 0;
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
					data.sigBytes = dataWords.length * 4;

					this._process();

					return this._hash;
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);
					clone._hash = this._hash.clone();
					return clone;
				}
			});
			C.SHA256 = Hasher._createHelper(SHA256);
			C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
		})(Math);

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var C_enc = C.enc;
			var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
				stringify: function stringify(wordArray) {
					var words = wordArray.words;
					var sigBytes = wordArray.sigBytes;
					var utf16Chars = [];

					for (var i = 0; i < sigBytes; i += 2) {
						var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
						utf16Chars.push(String.fromCharCode(codePoint));
					}

					return utf16Chars.join('');
				},
				parse: function parse(utf16Str) {
					var utf16StrLength = utf16Str.length;
					var words = [];

					for (var i = 0; i < utf16StrLength; i++) {
						words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
					}

					return WordArray.create(words, utf16StrLength * 2);
				}
			};
			C_enc.Utf16LE = {
				stringify: function stringify(wordArray) {
					var words = wordArray.words;
					var sigBytes = wordArray.sigBytes;
					var utf16Chars = [];

					for (var i = 0; i < sigBytes; i += 2) {
						var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
						utf16Chars.push(String.fromCharCode(codePoint));
					}

					return utf16Chars.join('');
				},
				parse: function parse(utf16Str) {
					var utf16StrLength = utf16Str.length;
					var words = [];

					for (var i = 0; i < utf16StrLength; i++) {
						words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
					}

					return WordArray.create(words, utf16StrLength * 2);
				}
			};

			function swapEndian(word) {
				return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
			}
		})();

		(function () {
			if (typeof ArrayBuffer != 'function') {
				return;
			}

			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var superInit = WordArray.init;

			var subInit = WordArray.init = function (typedArray) {
				if (typedArray instanceof ArrayBuffer) {
					typedArray = new Uint8Array(typedArray);
				}

				if (typedArray instanceof Int8Array || typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray || typedArray instanceof Int16Array || typedArray instanceof Uint16Array || typedArray instanceof Int32Array || typedArray instanceof Uint32Array || typedArray instanceof Float32Array || typedArray instanceof Float64Array) {
					typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
				}

				if (typedArray instanceof Uint8Array) {
					var typedArrayByteLength = typedArray.byteLength;
					var words = [];

					for (var i = 0; i < typedArrayByteLength; i++) {
						words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
					}

					superInit.call(this, words, typedArrayByteLength);
				} else {
					superInit.apply(this, arguments);
				}
			};

			subInit.prototype = WordArray;
		})(); /** @preserve
        (c) 2012 by Cédric Mesnil. All rights reserved.
        	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
            - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
        	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        */

		(function (Math) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var Hasher = C_lib.Hasher;
			var C_algo = C.algo;

			var _zl = WordArray.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);

			var _zr = WordArray.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);

			var _sl = WordArray.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);

			var _sr = WordArray.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);

			var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);

			var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

			var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
				_doReset: function _doReset() {
					this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					for (var i = 0; i < 16; i++) {
						var offset_i = offset + i;
						var M_offset_i = M[offset_i];
						M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
					}

					var H = this._hash.words;
					var hl = _hl.words;
					var hr = _hr.words;
					var zl = _zl.words;
					var zr = _zr.words;
					var sl = _sl.words;
					var sr = _sr.words;
					var al, bl, cl, dl, el;
					var ar, br, cr, dr, er;
					ar = al = H[0];
					br = bl = H[1];
					cr = cl = H[2];
					dr = dl = H[3];
					er = el = H[4];
					var t;

					for (var i = 0; i < 80; i += 1) {
						t = al + M[offset + zl[i]] | 0;

						if (i < 16) {
							t += f1(bl, cl, dl) + hl[0];
						} else if (i < 32) {
							t += f2(bl, cl, dl) + hl[1];
						} else if (i < 48) {
							t += f3(bl, cl, dl) + hl[2];
						} else if (i < 64) {
							t += f4(bl, cl, dl) + hl[3];
						} else {
							t += f5(bl, cl, dl) + hl[4];
						}

						t = t | 0;
						t = rotl(t, sl[i]);
						t = t + el | 0;
						al = el;
						el = dl;
						dl = rotl(cl, 10);
						cl = bl;
						bl = t;
						t = ar + M[offset + zr[i]] | 0;

						if (i < 16) {
							t += f5(br, cr, dr) + hr[0];
						} else if (i < 32) {
							t += f4(br, cr, dr) + hr[1];
						} else if (i < 48) {
							t += f3(br, cr, dr) + hr[2];
						} else if (i < 64) {
							t += f2(br, cr, dr) + hr[3];
						} else {
							t += f1(br, cr, dr) + hr[4];
						}

						t = t | 0;
						t = rotl(t, sr[i]);
						t = t + er | 0;
						ar = er;
						er = dr;
						dr = rotl(cr, 10);
						cr = br;
						br = t;
					}

					t = H[1] + cl + dr | 0;
					H[1] = H[2] + dl + er | 0;
					H[2] = H[3] + el + ar | 0;
					H[3] = H[4] + al + br | 0;
					H[4] = H[0] + bl + cr | 0;
					H[0] = t;
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
					dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff | (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;
					data.sigBytes = (dataWords.length + 1) * 4;

					this._process();

					var hash = this._hash;
					var H = hash.words;

					for (var i = 0; i < 5; i++) {
						var H_i = H[i];
						H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
					}

					return hash;
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);
					clone._hash = this._hash.clone();
					return clone;
				}
			});

			function f1(x, y, z) {
				return x ^ y ^ z;
			}

			function f2(x, y, z) {
				return x & y | ~x & z;
			}

			function f3(x, y, z) {
				return (x | ~y) ^ z;
			}

			function f4(x, y, z) {
				return x & z | y & ~z;
			}

			function f5(x, y, z) {
				return x ^ (y | ~z);
			}

			function rotl(x, n) {
				return x << n | x >>> 32 - n;
			}

			C.RIPEMD160 = Hasher._createHelper(RIPEMD160);
			C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
		})(Math);

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Base = C_lib.Base;
			var C_enc = C.enc;
			var Utf8 = C_enc.Utf8;
			var C_algo = C.algo;
			var HMAC = C_algo.HMAC = Base.extend({
				init: function init(hasher, key) {
					hasher = this._hasher = new hasher.init();

					if (typeof key == 'string') {
						key = Utf8.parse(key);
					}

					var hasherBlockSize = hasher.blockSize;
					var hasherBlockSizeBytes = hasherBlockSize * 4;

					if (key.sigBytes > hasherBlockSizeBytes) {
						key = hasher.finalize(key);
					}

					key.clamp();
					var oKey = this._oKey = key.clone();
					var iKey = this._iKey = key.clone();
					var oKeyWords = oKey.words;
					var iKeyWords = iKey.words;

					for (var i = 0; i < hasherBlockSize; i++) {
						oKeyWords[i] ^= 0x5c5c5c5c;
						iKeyWords[i] ^= 0x36363636;
					}

					oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;
					this.reset();
				},
				reset: function reset() {
					var hasher = this._hasher;
					hasher.reset();
					hasher.update(this._iKey);
				},
				update: function update(messageUpdate) {
					this._hasher.update(messageUpdate);

					return this;
				},
				finalize: function finalize(messageUpdate) {
					var hasher = this._hasher;
					var innerHash = hasher.finalize(messageUpdate);
					hasher.reset();
					var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));
					return hmac;
				}
			});
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Base = C_lib.Base;
			var WordArray = C_lib.WordArray;
			var C_algo = C.algo;
			var SHA1 = C_algo.SHA1;
			var HMAC = C_algo.HMAC;
			var PBKDF2 = C_algo.PBKDF2 = Base.extend({
				cfg: Base.extend({
					keySize: 4,
					hasher: SHA1,
					iterations: 1
				}),
				init: function init(cfg) {
					this.cfg = this.cfg.extend(cfg);
				},
				compute: function compute(password, salt) {
					var cfg = this.cfg;
					var hmac = HMAC.create(cfg.hasher, password);
					var derivedKey = WordArray.create();
					var blockIndex = WordArray.create([0x00000001]);
					var derivedKeyWords = derivedKey.words;
					var blockIndexWords = blockIndex.words;
					var keySize = cfg.keySize;
					var iterations = cfg.iterations;

					while (derivedKeyWords.length < keySize) {
						var block = hmac.update(salt).finalize(blockIndex);
						hmac.reset();
						var blockWords = block.words;
						var blockWordsLength = blockWords.length;
						var intermediate = block;

						for (var i = 1; i < iterations; i++) {
							intermediate = hmac.finalize(intermediate);
							hmac.reset();
							var intermediateWords = intermediate.words;

							for (var j = 0; j < blockWordsLength; j++) {
								blockWords[j] ^= intermediateWords[j];
							}
						}

						derivedKey.concat(block);
						blockIndexWords[0]++;
					}

					derivedKey.sigBytes = keySize * 4;
					return derivedKey;
				}
			});

			C.PBKDF2 = function (password, salt, cfg) {
				return PBKDF2.create(cfg).compute(password, salt);
			};
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Base = C_lib.Base;
			var WordArray = C_lib.WordArray;
			var C_algo = C.algo;
			var MD5 = C_algo.MD5;
			var EvpKDF = C_algo.EvpKDF = Base.extend({
				cfg: Base.extend({
					keySize: 4,
					hasher: MD5,
					iterations: 1
				}),
				init: function init(cfg) {
					this.cfg = this.cfg.extend(cfg);
				},
				compute: function compute(password, salt) {
					var cfg = this.cfg;
					var hasher = cfg.hasher.create();
					var derivedKey = WordArray.create();
					var derivedKeyWords = derivedKey.words;
					var keySize = cfg.keySize;
					var iterations = cfg.iterations;

					while (derivedKeyWords.length < keySize) {
						if (block) {
							hasher.update(block);
						}

						var block = hasher.update(password).finalize(salt);
						hasher.reset();

						for (var i = 1; i < iterations; i++) {
							block = hasher.finalize(block);
							hasher.reset();
						}

						derivedKey.concat(block);
					}

					derivedKey.sigBytes = keySize * 4;
					return derivedKey;
				}
			});

			C.EvpKDF = function (password, salt, cfg) {
				return EvpKDF.create(cfg).compute(password, salt);
			};
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var C_algo = C.algo;
			var SHA256 = C_algo.SHA256;
			var SHA224 = C_algo.SHA224 = SHA256.extend({
				_doReset: function _doReset() {
					this._hash = new WordArray.init([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);
				},
				_doFinalize: function _doFinalize() {
					var hash = SHA256._doFinalize.call(this);

					hash.sigBytes -= 4;
					return hash;
				}
			});
			C.SHA224 = SHA256._createHelper(SHA224);
			C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
		})();

		(function (undefined) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Base = C_lib.Base;
			var X32WordArray = C_lib.WordArray;
			var C_x64 = C.x64 = {};
			var X64Word = C_x64.Word = Base.extend({
				init: function init(high, low) {
					this.high = high;
					this.low = low;
				}
			});
			var X64WordArray = C_x64.WordArray = Base.extend({
				init: function init(words, sigBytes) {
					words = this.words = words || [];

					if (sigBytes != undefined) {
						this.sigBytes = sigBytes;
					} else {
						this.sigBytes = words.length * 8;
					}
				},
				toX32: function toX32() {
					var x64Words = this.words;
					var x64WordsLength = x64Words.length;
					var x32Words = [];

					for (var i = 0; i < x64WordsLength; i++) {
						var x64Word = x64Words[i];
						x32Words.push(x64Word.high);
						x32Words.push(x64Word.low);
					}

					return X32WordArray.create(x32Words, this.sigBytes);
				},
				clone: function clone() {
					var clone = Base.clone.call(this);
					var words = clone.words = this.words.slice(0);
					var wordsLength = words.length;

					for (var i = 0; i < wordsLength; i++) {
						words[i] = words[i].clone();
					}

					return clone;
				}
			});
		})();

		(function (Math) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var Hasher = C_lib.Hasher;
			var C_x64 = C.x64;
			var X64Word = C_x64.Word;
			var C_algo = C.algo;
			var RHO_OFFSETS = [];
			var PI_INDEXES = [];
			var ROUND_CONSTANTS = [];

			(function () {
				var x = 1,
				    y = 0;

				for (var t = 0; t < 24; t++) {
					RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;
					var newX = y % 5;
					var newY = (2 * x + 3 * y) % 5;
					x = newX;
					y = newY;
				}

				for (var x = 0; x < 5; x++) {
					for (var y = 0; y < 5; y++) {
						PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
					}
				}

				var LFSR = 0x01;

				for (var i = 0; i < 24; i++) {
					var roundConstantMsw = 0;
					var roundConstantLsw = 0;

					for (var j = 0; j < 7; j++) {
						if (LFSR & 0x01) {
							var bitPosition = (1 << j) - 1;

							if (bitPosition < 32) {
								roundConstantLsw ^= 1 << bitPosition;
							} else {
									roundConstantMsw ^= 1 << bitPosition - 32;
								}
						}

						if (LFSR & 0x80) {
							LFSR = LFSR << 1 ^ 0x71;
						} else {
							LFSR <<= 1;
						}
					}

					ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
				}
			})();

			var T = [];

			(function () {
				for (var i = 0; i < 25; i++) {
					T[i] = X64Word.create();
				}
			})();

			var SHA3 = C_algo.SHA3 = Hasher.extend({
				cfg: Hasher.cfg.extend({
					outputLength: 512
				}),
				_doReset: function _doReset() {
					var state = this._state = [];

					for (var i = 0; i < 25; i++) {
						state[i] = new X64Word.init();
					}

					this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var state = this._state;
					var nBlockSizeLanes = this.blockSize / 2;

					for (var i = 0; i < nBlockSizeLanes; i++) {
						var M2i = M[offset + 2 * i];
						var M2i1 = M[offset + 2 * i + 1];
						M2i = (M2i << 8 | M2i >>> 24) & 0x00ff00ff | (M2i << 24 | M2i >>> 8) & 0xff00ff00;
						M2i1 = (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff | (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;
						var lane = state[i];
						lane.high ^= M2i1;
						lane.low ^= M2i;
					}

					for (var round = 0; round < 24; round++) {
						for (var x = 0; x < 5; x++) {
							var tMsw = 0,
							    tLsw = 0;

							for (var y = 0; y < 5; y++) {
								var lane = state[x + 5 * y];
								tMsw ^= lane.high;
								tLsw ^= lane.low;
							}

							var Tx = T[x];
							Tx.high = tMsw;
							Tx.low = tLsw;
						}

						for (var x = 0; x < 5; x++) {
							var Tx4 = T[(x + 4) % 5];
							var Tx1 = T[(x + 1) % 5];
							var Tx1Msw = Tx1.high;
							var Tx1Lsw = Tx1.low;
							var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
							var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);

							for (var y = 0; y < 5; y++) {
								var lane = state[x + 5 * y];
								lane.high ^= tMsw;
								lane.low ^= tLsw;
							}
						}

						for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
							var lane = state[laneIndex];
							var laneMsw = lane.high;
							var laneLsw = lane.low;
							var rhoOffset = RHO_OFFSETS[laneIndex];

							if (rhoOffset < 32) {
								var tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
								var tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
							} else {
									var tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
									var tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
								}

							var TPiLane = T[PI_INDEXES[laneIndex]];
							TPiLane.high = tMsw;
							TPiLane.low = tLsw;
						}

						var T0 = T[0];
						var state0 = state[0];
						T0.high = state0.high;
						T0.low = state0.low;

						for (var x = 0; x < 5; x++) {
							for (var y = 0; y < 5; y++) {
								var laneIndex = x + 5 * y;
								var lane = state[laneIndex];
								var TLane = T[laneIndex];
								var Tx1Lane = T[(x + 1) % 5 + 5 * y];
								var Tx2Lane = T[(x + 2) % 5 + 5 * y];
								lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
								lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
							}
						}

						var lane = state[0];
						var roundConstant = ROUND_CONSTANTS[round];
						lane.high ^= roundConstant.high;
						lane.low ^= roundConstant.low;
						;
					}
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					var blockSizeBits = this.blockSize * 32;
					dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
					dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
					data.sigBytes = dataWords.length * 4;

					this._process();

					var state = this._state;
					var outputLengthBytes = this.cfg.outputLength / 8;
					var outputLengthLanes = outputLengthBytes / 8;
					var hashWords = [];

					for (var i = 0; i < outputLengthLanes; i++) {
						var lane = state[i];
						var laneMsw = lane.high;
						var laneLsw = lane.low;
						laneMsw = (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff | (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;
						laneLsw = (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff | (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;
						hashWords.push(laneLsw);
						hashWords.push(laneMsw);
					}

					return new WordArray.init(hashWords, outputLengthBytes);
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);

					var state = clone._state = this._state.slice(0);

					for (var i = 0; i < 25; i++) {
						state[i] = state[i].clone();
					}

					return clone;
				}
			});
			C.SHA3 = Hasher._createHelper(SHA3);
			C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
		})(Math);

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Hasher = C_lib.Hasher;
			var C_x64 = C.x64;
			var X64Word = C_x64.Word;
			var X64WordArray = C_x64.WordArray;
			var C_algo = C.algo;

			function X64Word_create() {
				return X64Word.create.apply(X64Word, arguments);
			}

			var K = [X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd), X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc), X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019), X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118), X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe), X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2), X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1), X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694), X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3), X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65), X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483), X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5), X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210), X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4), X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725), X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70), X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926), X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df), X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8), X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b), X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001), X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30), X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910), X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8), X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53), X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8), X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb), X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3), X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60), X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec), X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9), X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b), X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207), X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178), X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6), X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b), X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493), X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c), X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a), X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];
			var W = [];

			(function () {
				for (var i = 0; i < 80; i++) {
					W[i] = X64Word_create();
				}
			})();

			var SHA512 = C_algo.SHA512 = Hasher.extend({
				_doReset: function _doReset() {
					this._hash = new X64WordArray.init([new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b), new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1), new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f), new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var H = this._hash.words;
					var H0 = H[0];
					var H1 = H[1];
					var H2 = H[2];
					var H3 = H[3];
					var H4 = H[4];
					var H5 = H[5];
					var H6 = H[6];
					var H7 = H[7];
					var H0h = H0.high;
					var H0l = H0.low;
					var H1h = H1.high;
					var H1l = H1.low;
					var H2h = H2.high;
					var H2l = H2.low;
					var H3h = H3.high;
					var H3l = H3.low;
					var H4h = H4.high;
					var H4l = H4.low;
					var H5h = H5.high;
					var H5l = H5.low;
					var H6h = H6.high;
					var H6l = H6.low;
					var H7h = H7.high;
					var H7l = H7.low;
					var ah = H0h;
					var al = H0l;
					var bh = H1h;
					var bl = H1l;
					var ch = H2h;
					var cl = H2l;
					var dh = H3h;
					var dl = H3l;
					var eh = H4h;
					var el = H4l;
					var fh = H5h;
					var fl = H5l;
					var gh = H6h;
					var gl = H6l;
					var hh = H7h;
					var hl = H7l;

					for (var i = 0; i < 80; i++) {
						var Wi = W[i];

						if (i < 16) {
							var Wih = Wi.high = M[offset + i * 2] | 0;
							var Wil = Wi.low = M[offset + i * 2 + 1] | 0;
						} else {
							var gamma0x = W[i - 15];
							var gamma0xh = gamma0x.high;
							var gamma0xl = gamma0x.low;
							var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
							var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);
							var gamma1x = W[i - 2];
							var gamma1xh = gamma1x.high;
							var gamma1xl = gamma1x.low;
							var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
							var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);
							var Wi7 = W[i - 7];
							var Wi7h = Wi7.high;
							var Wi7l = Wi7.low;
							var Wi16 = W[i - 16];
							var Wi16h = Wi16.high;
							var Wi16l = Wi16.low;
							var Wil = gamma0l + Wi7l;
							var Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
							var Wil = Wil + gamma1l;
							var Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
							var Wil = Wil + Wi16l;
							var Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);
							Wi.high = Wih;
							Wi.low = Wil;
						}

						var chh = eh & fh ^ ~eh & gh;
						var chl = el & fl ^ ~el & gl;
						var majh = ah & bh ^ ah & ch ^ bh & ch;
						var majl = al & bl ^ al & cl ^ bl & cl;
						var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
						var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
						var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
						var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);
						var Ki = K[i];
						var Kih = Ki.high;
						var Kil = Ki.low;
						var t1l = hl + sigma1l;
						var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
						var t1l = t1l + chl;
						var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
						var t1l = t1l + Kil;
						var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
						var t1l = t1l + Wil;
						var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);
						var t2l = sigma0l + majl;
						var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);
						hh = gh;
						hl = gl;
						gh = fh;
						gl = fl;
						fh = eh;
						fl = el;
						el = dl + t1l | 0;
						eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
						dh = ch;
						dl = cl;
						ch = bh;
						cl = bl;
						bh = ah;
						bl = al;
						al = t1l + t2l | 0;
						ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
					}

					H0l = H0.low = H0l + al;
					H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
					H1l = H1.low = H1l + bl;
					H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
					H2l = H2.low = H2l + cl;
					H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
					H3l = H3.low = H3l + dl;
					H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
					H4l = H4.low = H4l + el;
					H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
					H5l = H5.low = H5l + fl;
					H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
					H6l = H6.low = H6l + gl;
					H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
					H7l = H7.low = H7l + hl;
					H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
				},
				_doFinalize: function _doFinalize() {
					var data = this._data;
					var dataWords = data.words;
					var nBitsTotal = this._nDataBytes * 8;
					var nBitsLeft = data.sigBytes * 8;
					dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
					dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
					dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
					data.sigBytes = dataWords.length * 4;

					this._process();

					var hash = this._hash.toX32();

					return hash;
				},
				clone: function clone() {
					var clone = Hasher.clone.call(this);
					clone._hash = this._hash.clone();
					return clone;
				},
				blockSize: 32
			});
			C.SHA512 = Hasher._createHelper(SHA512);
			C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
		})();

		(function () {
			var C = CryptoJS;
			var C_x64 = C.x64;
			var X64Word = C_x64.Word;
			var X64WordArray = C_x64.WordArray;
			var C_algo = C.algo;
			var SHA512 = C_algo.SHA512;
			var SHA384 = C_algo.SHA384 = SHA512.extend({
				_doReset: function _doReset() {
					this._hash = new X64WordArray.init([new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507), new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939), new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511), new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);
				},
				_doFinalize: function _doFinalize() {
					var hash = SHA512._doFinalize.call(this);

					hash.sigBytes -= 16;
					return hash;
				}
			});
			C.SHA384 = SHA512._createHelper(SHA384);
			C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
		})();

		CryptoJS.lib.Cipher || function (undefined) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var Base = C_lib.Base;
			var WordArray = C_lib.WordArray;
			var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
			var C_enc = C.enc;
			var Utf8 = C_enc.Utf8;
			var Base64 = C_enc.Base64;
			var C_algo = C.algo;
			var EvpKDF = C_algo.EvpKDF;
			var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
				cfg: Base.extend(),
				createEncryptor: function createEncryptor(key, cfg) {
					return this.create(this._ENC_XFORM_MODE, key, cfg);
				},
				createDecryptor: function createDecryptor(key, cfg) {
					return this.create(this._DEC_XFORM_MODE, key, cfg);
				},
				init: function init(xformMode, key, cfg) {
					this.cfg = this.cfg.extend(cfg);
					this._xformMode = xformMode;
					this._key = key;
					this.reset();
				},
				reset: function reset() {
					BufferedBlockAlgorithm.reset.call(this);

					this._doReset();
				},
				process: function process(dataUpdate) {
					this._append(dataUpdate);

					return this._process();
				},
				finalize: function finalize(dataUpdate) {
					if (dataUpdate) {
						this._append(dataUpdate);
					}

					var finalProcessedData = this._doFinalize();

					return finalProcessedData;
				},
				keySize: 4,
				ivSize: 4,
				_ENC_XFORM_MODE: 1,
				_DEC_XFORM_MODE: 2,
				_createHelper: function () {
					function selectCipherStrategy(key) {
						if (typeof key == 'string') {
							return PasswordBasedCipher;
						} else {
							return SerializableCipher;
						}
					}

					return function (cipher) {
						return {
							encrypt: function encrypt(message, key, cfg) {
								return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
							},
							decrypt: function decrypt(ciphertext, key, cfg) {
								return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
							}
						};
					};
				}()
			});
			var StreamCipher = C_lib.StreamCipher = Cipher.extend({
				_doFinalize: function _doFinalize() {
					var finalProcessedBlocks = this._process(true);

					return finalProcessedBlocks;
				},
				blockSize: 1
			});
			var C_mode = C.mode = {};
			var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
				createEncryptor: function createEncryptor(cipher, iv) {
					return this.Encryptor.create(cipher, iv);
				},
				createDecryptor: function createDecryptor(cipher, iv) {
					return this.Decryptor.create(cipher, iv);
				},
				init: function init(cipher, iv) {
					this._cipher = cipher;
					this._iv = iv;
				}
			});

			var CBC = C_mode.CBC = function () {
				var CBC = BlockCipherMode.extend();
				CBC.Encryptor = CBC.extend({
					processBlock: function processBlock(words, offset) {
						var cipher = this._cipher;
						var blockSize = cipher.blockSize;
						xorBlock.call(this, words, offset, blockSize);
						cipher.encryptBlock(words, offset);
						this._prevBlock = words.slice(offset, offset + blockSize);
					}
				});
				CBC.Decryptor = CBC.extend({
					processBlock: function processBlock(words, offset) {
						var cipher = this._cipher;
						var blockSize = cipher.blockSize;
						var thisBlock = words.slice(offset, offset + blockSize);
						cipher.decryptBlock(words, offset);
						xorBlock.call(this, words, offset, blockSize);
						this._prevBlock = thisBlock;
					}
				});

				function xorBlock(words, offset, blockSize) {
					var iv = this._iv;

					if (iv) {
						var block = iv;
						this._iv = undefined;
					} else {
						var block = this._prevBlock;
					}

					for (var i = 0; i < blockSize; i++) {
						words[offset + i] ^= block[i];
					}
				}

				return CBC;
			}();

			var C_pad = C.pad = {};
			var Pkcs7 = C_pad.Pkcs7 = {
				pad: function pad(data, blockSize) {
					var blockSizeBytes = blockSize * 4;
					var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;
					var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;
					var paddingWords = [];

					for (var i = 0; i < nPaddingBytes; i += 4) {
						paddingWords.push(paddingWord);
					}

					var padding = WordArray.create(paddingWords, nPaddingBytes);
					data.concat(padding);
				},
				unpad: function unpad(data) {
					var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;
					data.sigBytes -= nPaddingBytes;
				}
			};
			var BlockCipher = C_lib.BlockCipher = Cipher.extend({
				cfg: Cipher.cfg.extend({
					mode: CBC,
					padding: Pkcs7
				}),
				reset: function reset() {
					Cipher.reset.call(this);
					var cfg = this.cfg;
					var iv = cfg.iv;
					var mode = cfg.mode;

					if (this._xformMode == this._ENC_XFORM_MODE) {
						var modeCreator = mode.createEncryptor;
					} else {
							var modeCreator = mode.createDecryptor;
							this._minBufferSize = 1;
						}

					this._mode = modeCreator.call(mode, this, iv && iv.words);
				},
				_doProcessBlock: function _doProcessBlock(words, offset) {
					this._mode.processBlock(words, offset);
				},
				_doFinalize: function _doFinalize() {
					var padding = this.cfg.padding;

					if (this._xformMode == this._ENC_XFORM_MODE) {
						padding.pad(this._data, this.blockSize);

						var finalProcessedBlocks = this._process(true);
					} else {
							var finalProcessedBlocks = this._process(true);

							padding.unpad(finalProcessedBlocks);
						}

					return finalProcessedBlocks;
				},
				blockSize: 4
			});
			var CipherParams = C_lib.CipherParams = Base.extend({
				init: function init(cipherParams) {
					this.mixIn(cipherParams);
				},
				toString: function toString(formatter) {
					return (formatter || this.formatter).stringify(this);
				}
			});
			var C_format = C.format = {};
			var OpenSSLFormatter = C_format.OpenSSL = {
				stringify: function stringify(cipherParams) {
					var ciphertext = cipherParams.ciphertext;
					var salt = cipherParams.salt;

					if (salt) {
						var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
					} else {
						var wordArray = ciphertext;
					}

					return wordArray.toString(Base64);
				},
				parse: function parse(openSSLStr) {
					var ciphertext = Base64.parse(openSSLStr);
					var ciphertextWords = ciphertext.words;

					if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
						var salt = WordArray.create(ciphertextWords.slice(2, 4));
						ciphertextWords.splice(0, 4);
						ciphertext.sigBytes -= 16;
					}

					return CipherParams.create({
						ciphertext: ciphertext,
						salt: salt
					});
				}
			};
			var SerializableCipher = C_lib.SerializableCipher = Base.extend({
				cfg: Base.extend({
					format: OpenSSLFormatter
				}),
				encrypt: function encrypt(cipher, message, key, cfg) {
					cfg = this.cfg.extend(cfg);
					var encryptor = cipher.createEncryptor(key, cfg);
					var ciphertext = encryptor.finalize(message);
					var cipherCfg = encryptor.cfg;
					return CipherParams.create({
						ciphertext: ciphertext,
						key: key,
						iv: cipherCfg.iv,
						algorithm: cipher,
						mode: cipherCfg.mode,
						padding: cipherCfg.padding,
						blockSize: cipher.blockSize,
						formatter: cfg.format
					});
				},
				decrypt: function decrypt(cipher, ciphertext, key, cfg) {
					cfg = this.cfg.extend(cfg);
					ciphertext = this._parse(ciphertext, cfg.format);
					var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);
					return plaintext;
				},
				_parse: function _parse(ciphertext, format) {
					if (typeof ciphertext == 'string') {
						return format.parse(ciphertext, this);
					} else {
						return ciphertext;
					}
				}
			});
			var C_kdf = C.kdf = {};
			var OpenSSLKdf = C_kdf.OpenSSL = {
				execute: function execute(password, keySize, ivSize, salt) {
					if (!salt) {
						salt = WordArray.random(8);
					}

					var key = EvpKDF.create({
						keySize: keySize + ivSize
					}).compute(password, salt);
					var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
					key.sigBytes = keySize * 4;
					return CipherParams.create({
						key: key,
						iv: iv,
						salt: salt
					});
				}
			};
			var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
				cfg: SerializableCipher.cfg.extend({
					kdf: OpenSSLKdf
				}),
				encrypt: function encrypt(cipher, message, password, cfg) {
					cfg = this.cfg.extend(cfg);
					var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);
					cfg.iv = derivedParams.iv;
					var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);
					ciphertext.mixIn(derivedParams);
					return ciphertext;
				},
				decrypt: function decrypt(cipher, ciphertext, password, cfg) {
					cfg = this.cfg.extend(cfg);
					ciphertext = this._parse(ciphertext, cfg.format);
					var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);
					cfg.iv = derivedParams.iv;
					var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);
					return plaintext;
				}
			});
		}();

		CryptoJS.mode.CFB = function () {
			var CFB = CryptoJS.lib.BlockCipherMode.extend();
			CFB.Encryptor = CFB.extend({
				processBlock: function processBlock(words, offset) {
					var cipher = this._cipher;
					var blockSize = cipher.blockSize;
					generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);
					this._prevBlock = words.slice(offset, offset + blockSize);
				}
			});
			CFB.Decryptor = CFB.extend({
				processBlock: function processBlock(words, offset) {
					var cipher = this._cipher;
					var blockSize = cipher.blockSize;
					var thisBlock = words.slice(offset, offset + blockSize);
					generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);
					this._prevBlock = thisBlock;
				}
			});

			function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
				var iv = this._iv;

				if (iv) {
					var keystream = iv.slice(0);
					this._iv = undefined;
				} else {
					var keystream = this._prevBlock;
				}

				cipher.encryptBlock(keystream, 0);

				for (var i = 0; i < blockSize; i++) {
					words[offset + i] ^= keystream[i];
				}
			}

			return CFB;
		}();

		CryptoJS.mode.ECB = function () {
			var ECB = CryptoJS.lib.BlockCipherMode.extend();
			ECB.Encryptor = ECB.extend({
				processBlock: function processBlock(words, offset) {
					this._cipher.encryptBlock(words, offset);
				}
			});
			ECB.Decryptor = ECB.extend({
				processBlock: function processBlock(words, offset) {
					this._cipher.decryptBlock(words, offset);
				}
			});
			return ECB;
		}();

		CryptoJS.pad.AnsiX923 = {
			pad: function pad(data, blockSize) {
				var dataSigBytes = data.sigBytes;
				var blockSizeBytes = blockSize * 4;
				var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;
				var lastBytePos = dataSigBytes + nPaddingBytes - 1;
				data.clamp();
				data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
				data.sigBytes += nPaddingBytes;
			},
			unpad: function unpad(data) {
				var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;
				data.sigBytes -= nPaddingBytes;
			}
		};
		CryptoJS.pad.Iso10126 = {
			pad: function pad(data, blockSize) {
				var blockSizeBytes = blockSize * 4;
				var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;
				data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
			},
			unpad: function unpad(data) {
				var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;
				data.sigBytes -= nPaddingBytes;
			}
		};
		CryptoJS.pad.Iso97971 = {
			pad: function pad(data, blockSize) {
				data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));
				CryptoJS.pad.ZeroPadding.pad(data, blockSize);
			},
			unpad: function unpad(data) {
				CryptoJS.pad.ZeroPadding.unpad(data);
				data.sigBytes--;
			}
		};

		CryptoJS.mode.OFB = function () {
			var OFB = CryptoJS.lib.BlockCipherMode.extend();
			var Encryptor = OFB.Encryptor = OFB.extend({
				processBlock: function processBlock(words, offset) {
					var cipher = this._cipher;
					var blockSize = cipher.blockSize;
					var iv = this._iv;
					var keystream = this._keystream;

					if (iv) {
						keystream = this._keystream = iv.slice(0);
						this._iv = undefined;
					}

					cipher.encryptBlock(keystream, 0);

					for (var i = 0; i < blockSize; i++) {
						words[offset + i] ^= keystream[i];
					}
				}
			});
			OFB.Decryptor = Encryptor;
			return OFB;
		}();

		CryptoJS.pad.NoPadding = {
			pad: function pad() {},
			unpad: function unpad() {}
		};

		(function (undefined) {
			var C = CryptoJS;
			var C_lib = C.lib;
			var CipherParams = C_lib.CipherParams;
			var C_enc = C.enc;
			var Hex = C_enc.Hex;
			var C_format = C.format;
			var HexFormatter = C_format.Hex = {
				stringify: function stringify(cipherParams) {
					return cipherParams.ciphertext.toString(Hex);
				},
				parse: function parse(input) {
					var ciphertext = Hex.parse(input);
					return CipherParams.create({
						ciphertext: ciphertext
					});
				}
			};
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var BlockCipher = C_lib.BlockCipher;
			var C_algo = C.algo;
			var SBOX = [];
			var INV_SBOX = [];
			var SUB_MIX_0 = [];
			var SUB_MIX_1 = [];
			var SUB_MIX_2 = [];
			var SUB_MIX_3 = [];
			var INV_SUB_MIX_0 = [];
			var INV_SUB_MIX_1 = [];
			var INV_SUB_MIX_2 = [];
			var INV_SUB_MIX_3 = [];

			(function () {
				var d = [];

				for (var i = 0; i < 256; i++) {
					if (i < 128) {
						d[i] = i << 1;
					} else {
						d[i] = i << 1 ^ 0x11b;
					}
				}

				var x = 0;
				var xi = 0;

				for (var i = 0; i < 256; i++) {
					var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
					sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
					SBOX[x] = sx;
					INV_SBOX[sx] = x;
					var x2 = d[x];
					var x4 = d[x2];
					var x8 = d[x4];
					var t = d[sx] * 0x101 ^ sx * 0x1010100;
					SUB_MIX_0[x] = t << 24 | t >>> 8;
					SUB_MIX_1[x] = t << 16 | t >>> 16;
					SUB_MIX_2[x] = t << 8 | t >>> 24;
					SUB_MIX_3[x] = t;
					var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
					INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
					INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
					INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
					INV_SUB_MIX_3[sx] = t;

					if (!x) {
						x = xi = 1;
					} else {
						x = x2 ^ d[d[d[x8 ^ x2]]];
						xi ^= d[d[xi]];
					}
				}
			})();

			var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];
			var AES = C_algo.AES = BlockCipher.extend({
				_doReset: function _doReset() {
					var key = this._key;
					var keyWords = key.words;
					var keySize = key.sigBytes / 4;
					var nRounds = this._nRounds = keySize + 6;
					var ksRows = (nRounds + 1) * 4;
					var keySchedule = this._keySchedule = [];

					for (var ksRow = 0; ksRow < ksRows; ksRow++) {
						if (ksRow < keySize) {
							keySchedule[ksRow] = keyWords[ksRow];
						} else {
							var t = keySchedule[ksRow - 1];

							if (!(ksRow % keySize)) {
								t = t << 8 | t >>> 24;
								t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
								t ^= RCON[ksRow / keySize | 0] << 24;
							} else if (keySize > 6 && ksRow % keySize == 4) {
								t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
							}

							keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
						}
					}

					var invKeySchedule = this._invKeySchedule = [];

					for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
						var ksRow = ksRows - invKsRow;

						if (invKsRow % 4) {
							var t = keySchedule[ksRow];
						} else {
							var t = keySchedule[ksRow - 4];
						}

						if (invKsRow < 4 || ksRow <= 4) {
							invKeySchedule[invKsRow] = t;
						} else {
							invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^ INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
						}
					}
				},
				encryptBlock: function encryptBlock(M, offset) {
					this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
				},
				decryptBlock: function decryptBlock(M, offset) {
					var t = M[offset + 1];
					M[offset + 1] = M[offset + 3];
					M[offset + 3] = t;

					this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

					var t = M[offset + 1];
					M[offset + 1] = M[offset + 3];
					M[offset + 3] = t;
				},
				_doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
					var nRounds = this._nRounds;
					var s0 = M[offset] ^ keySchedule[0];
					var s1 = M[offset + 1] ^ keySchedule[1];
					var s2 = M[offset + 2] ^ keySchedule[2];
					var s3 = M[offset + 3] ^ keySchedule[3];
					var ksRow = 4;

					for (var round = 1; round < nRounds; round++) {
						var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
						var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
						var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
						var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];
						s0 = t0;
						s1 = t1;
						s2 = t2;
						s3 = t3;
					}

					var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
					var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
					var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
					var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];
					M[offset] = t0;
					M[offset + 1] = t1;
					M[offset + 2] = t2;
					M[offset + 3] = t3;
				},
				keySize: 8
			});
			C.AES = BlockCipher._createHelper(AES);
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var WordArray = C_lib.WordArray;
			var BlockCipher = C_lib.BlockCipher;
			var C_algo = C.algo;
			var PC1 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];
			var PC2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];
			var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];
			var SBOX_P = [{
				0x0: 0x808200,
				0x10000000: 0x8000,
				0x20000000: 0x808002,
				0x30000000: 0x2,
				0x40000000: 0x200,
				0x50000000: 0x808202,
				0x60000000: 0x800202,
				0x70000000: 0x800000,
				0x80000000: 0x202,
				0x90000000: 0x800200,
				0xa0000000: 0x8200,
				0xb0000000: 0x808000,
				0xc0000000: 0x8002,
				0xd0000000: 0x800002,
				0xe0000000: 0x0,
				0xf0000000: 0x8202,
				0x8000000: 0x0,
				0x18000000: 0x808202,
				0x28000000: 0x8202,
				0x38000000: 0x8000,
				0x48000000: 0x808200,
				0x58000000: 0x200,
				0x68000000: 0x808002,
				0x78000000: 0x2,
				0x88000000: 0x800200,
				0x98000000: 0x8200,
				0xa8000000: 0x808000,
				0xb8000000: 0x800202,
				0xc8000000: 0x800002,
				0xd8000000: 0x8002,
				0xe8000000: 0x202,
				0xf8000000: 0x800000,
				0x1: 0x8000,
				0x10000001: 0x2,
				0x20000001: 0x808200,
				0x30000001: 0x800000,
				0x40000001: 0x808002,
				0x50000001: 0x8200,
				0x60000001: 0x200,
				0x70000001: 0x800202,
				0x80000001: 0x808202,
				0x90000001: 0x808000,
				0xa0000001: 0x800002,
				0xb0000001: 0x8202,
				0xc0000001: 0x202,
				0xd0000001: 0x800200,
				0xe0000001: 0x8002,
				0xf0000001: 0x0,
				0x8000001: 0x808202,
				0x18000001: 0x808000,
				0x28000001: 0x800000,
				0x38000001: 0x200,
				0x48000001: 0x8000,
				0x58000001: 0x800002,
				0x68000001: 0x2,
				0x78000001: 0x8202,
				0x88000001: 0x8002,
				0x98000001: 0x800202,
				0xa8000001: 0x202,
				0xb8000001: 0x808200,
				0xc8000001: 0x800200,
				0xd8000001: 0x0,
				0xe8000001: 0x8200,
				0xf8000001: 0x808002
			}, {
				0x0: 0x40084010,
				0x1000000: 0x4000,
				0x2000000: 0x80000,
				0x3000000: 0x40080010,
				0x4000000: 0x40000010,
				0x5000000: 0x40084000,
				0x6000000: 0x40004000,
				0x7000000: 0x10,
				0x8000000: 0x84000,
				0x9000000: 0x40004010,
				0xa000000: 0x40000000,
				0xb000000: 0x84010,
				0xc000000: 0x80010,
				0xd000000: 0x0,
				0xe000000: 0x4010,
				0xf000000: 0x40080000,
				0x800000: 0x40004000,
				0x1800000: 0x84010,
				0x2800000: 0x10,
				0x3800000: 0x40004010,
				0x4800000: 0x40084010,
				0x5800000: 0x40000000,
				0x6800000: 0x80000,
				0x7800000: 0x40080010,
				0x8800000: 0x80010,
				0x9800000: 0x0,
				0xa800000: 0x4000,
				0xb800000: 0x40080000,
				0xc800000: 0x40000010,
				0xd800000: 0x84000,
				0xe800000: 0x40084000,
				0xf800000: 0x4010,
				0x10000000: 0x0,
				0x11000000: 0x40080010,
				0x12000000: 0x40004010,
				0x13000000: 0x40084000,
				0x14000000: 0x40080000,
				0x15000000: 0x10,
				0x16000000: 0x84010,
				0x17000000: 0x4000,
				0x18000000: 0x4010,
				0x19000000: 0x80000,
				0x1a000000: 0x80010,
				0x1b000000: 0x40000010,
				0x1c000000: 0x84000,
				0x1d000000: 0x40004000,
				0x1e000000: 0x40000000,
				0x1f000000: 0x40084010,
				0x10800000: 0x84010,
				0x11800000: 0x80000,
				0x12800000: 0x40080000,
				0x13800000: 0x4000,
				0x14800000: 0x40004000,
				0x15800000: 0x40084010,
				0x16800000: 0x10,
				0x17800000: 0x40000000,
				0x18800000: 0x40084000,
				0x19800000: 0x40000010,
				0x1a800000: 0x40004010,
				0x1b800000: 0x80010,
				0x1c800000: 0x0,
				0x1d800000: 0x4010,
				0x1e800000: 0x40080010,
				0x1f800000: 0x84000
			}, {
				0x0: 0x104,
				0x100000: 0x0,
				0x200000: 0x4000100,
				0x300000: 0x10104,
				0x400000: 0x10004,
				0x500000: 0x4000004,
				0x600000: 0x4010104,
				0x700000: 0x4010000,
				0x800000: 0x4000000,
				0x900000: 0x4010100,
				0xa00000: 0x10100,
				0xb00000: 0x4010004,
				0xc00000: 0x4000104,
				0xd00000: 0x10000,
				0xe00000: 0x4,
				0xf00000: 0x100,
				0x80000: 0x4010100,
				0x180000: 0x4010004,
				0x280000: 0x0,
				0x380000: 0x4000100,
				0x480000: 0x4000004,
				0x580000: 0x10000,
				0x680000: 0x10004,
				0x780000: 0x104,
				0x880000: 0x4,
				0x980000: 0x100,
				0xa80000: 0x4010000,
				0xb80000: 0x10104,
				0xc80000: 0x10100,
				0xd80000: 0x4000104,
				0xe80000: 0x4010104,
				0xf80000: 0x4000000,
				0x1000000: 0x4010100,
				0x1100000: 0x10004,
				0x1200000: 0x10000,
				0x1300000: 0x4000100,
				0x1400000: 0x100,
				0x1500000: 0x4010104,
				0x1600000: 0x4000004,
				0x1700000: 0x0,
				0x1800000: 0x4000104,
				0x1900000: 0x4000000,
				0x1a00000: 0x4,
				0x1b00000: 0x10100,
				0x1c00000: 0x4010000,
				0x1d00000: 0x104,
				0x1e00000: 0x10104,
				0x1f00000: 0x4010004,
				0x1080000: 0x4000000,
				0x1180000: 0x104,
				0x1280000: 0x4010100,
				0x1380000: 0x0,
				0x1480000: 0x10004,
				0x1580000: 0x4000100,
				0x1680000: 0x100,
				0x1780000: 0x4010004,
				0x1880000: 0x10000,
				0x1980000: 0x4010104,
				0x1a80000: 0x10104,
				0x1b80000: 0x4000004,
				0x1c80000: 0x4000104,
				0x1d80000: 0x4010000,
				0x1e80000: 0x4,
				0x1f80000: 0x10100
			}, {
				0x0: 0x80401000,
				0x10000: 0x80001040,
				0x20000: 0x401040,
				0x30000: 0x80400000,
				0x40000: 0x0,
				0x50000: 0x401000,
				0x60000: 0x80000040,
				0x70000: 0x400040,
				0x80000: 0x80000000,
				0x90000: 0x400000,
				0xa0000: 0x40,
				0xb0000: 0x80001000,
				0xc0000: 0x80400040,
				0xd0000: 0x1040,
				0xe0000: 0x1000,
				0xf0000: 0x80401040,
				0x8000: 0x80001040,
				0x18000: 0x40,
				0x28000: 0x80400040,
				0x38000: 0x80001000,
				0x48000: 0x401000,
				0x58000: 0x80401040,
				0x68000: 0x0,
				0x78000: 0x80400000,
				0x88000: 0x1000,
				0x98000: 0x80401000,
				0xa8000: 0x400000,
				0xb8000: 0x1040,
				0xc8000: 0x80000000,
				0xd8000: 0x400040,
				0xe8000: 0x401040,
				0xf8000: 0x80000040,
				0x100000: 0x400040,
				0x110000: 0x401000,
				0x120000: 0x80000040,
				0x130000: 0x0,
				0x140000: 0x1040,
				0x150000: 0x80400040,
				0x160000: 0x80401000,
				0x170000: 0x80001040,
				0x180000: 0x80401040,
				0x190000: 0x80000000,
				0x1a0000: 0x80400000,
				0x1b0000: 0x401040,
				0x1c0000: 0x80001000,
				0x1d0000: 0x400000,
				0x1e0000: 0x40,
				0x1f0000: 0x1000,
				0x108000: 0x80400000,
				0x118000: 0x80401040,
				0x128000: 0x0,
				0x138000: 0x401000,
				0x148000: 0x400040,
				0x158000: 0x80000000,
				0x168000: 0x80001040,
				0x178000: 0x40,
				0x188000: 0x80000040,
				0x198000: 0x1000,
				0x1a8000: 0x80001000,
				0x1b8000: 0x80400040,
				0x1c8000: 0x1040,
				0x1d8000: 0x80401000,
				0x1e8000: 0x400000,
				0x1f8000: 0x401040
			}, {
				0x0: 0x80,
				0x1000: 0x1040000,
				0x2000: 0x40000,
				0x3000: 0x20000000,
				0x4000: 0x20040080,
				0x5000: 0x1000080,
				0x6000: 0x21000080,
				0x7000: 0x40080,
				0x8000: 0x1000000,
				0x9000: 0x20040000,
				0xa000: 0x20000080,
				0xb000: 0x21040080,
				0xc000: 0x21040000,
				0xd000: 0x0,
				0xe000: 0x1040080,
				0xf000: 0x21000000,
				0x800: 0x1040080,
				0x1800: 0x21000080,
				0x2800: 0x80,
				0x3800: 0x1040000,
				0x4800: 0x40000,
				0x5800: 0x20040080,
				0x6800: 0x21040000,
				0x7800: 0x20000000,
				0x8800: 0x20040000,
				0x9800: 0x0,
				0xa800: 0x21040080,
				0xb800: 0x1000080,
				0xc800: 0x20000080,
				0xd800: 0x21000000,
				0xe800: 0x1000000,
				0xf800: 0x40080,
				0x10000: 0x40000,
				0x11000: 0x80,
				0x12000: 0x20000000,
				0x13000: 0x21000080,
				0x14000: 0x1000080,
				0x15000: 0x21040000,
				0x16000: 0x20040080,
				0x17000: 0x1000000,
				0x18000: 0x21040080,
				0x19000: 0x21000000,
				0x1a000: 0x1040000,
				0x1b000: 0x20040000,
				0x1c000: 0x40080,
				0x1d000: 0x20000080,
				0x1e000: 0x0,
				0x1f000: 0x1040080,
				0x10800: 0x21000080,
				0x11800: 0x1000000,
				0x12800: 0x1040000,
				0x13800: 0x20040080,
				0x14800: 0x20000000,
				0x15800: 0x1040080,
				0x16800: 0x80,
				0x17800: 0x21040000,
				0x18800: 0x40080,
				0x19800: 0x21040080,
				0x1a800: 0x0,
				0x1b800: 0x21000000,
				0x1c800: 0x1000080,
				0x1d800: 0x40000,
				0x1e800: 0x20040000,
				0x1f800: 0x20000080
			}, {
				0x0: 0x10000008,
				0x100: 0x2000,
				0x200: 0x10200000,
				0x300: 0x10202008,
				0x400: 0x10002000,
				0x500: 0x200000,
				0x600: 0x200008,
				0x700: 0x10000000,
				0x800: 0x0,
				0x900: 0x10002008,
				0xa00: 0x202000,
				0xb00: 0x8,
				0xc00: 0x10200008,
				0xd00: 0x202008,
				0xe00: 0x2008,
				0xf00: 0x10202000,
				0x80: 0x10200000,
				0x180: 0x10202008,
				0x280: 0x8,
				0x380: 0x200000,
				0x480: 0x202008,
				0x580: 0x10000008,
				0x680: 0x10002000,
				0x780: 0x2008,
				0x880: 0x200008,
				0x980: 0x2000,
				0xa80: 0x10002008,
				0xb80: 0x10200008,
				0xc80: 0x0,
				0xd80: 0x10202000,
				0xe80: 0x202000,
				0xf80: 0x10000000,
				0x1000: 0x10002000,
				0x1100: 0x10200008,
				0x1200: 0x10202008,
				0x1300: 0x2008,
				0x1400: 0x200000,
				0x1500: 0x10000000,
				0x1600: 0x10000008,
				0x1700: 0x202000,
				0x1800: 0x202008,
				0x1900: 0x0,
				0x1a00: 0x8,
				0x1b00: 0x10200000,
				0x1c00: 0x2000,
				0x1d00: 0x10002008,
				0x1e00: 0x10202000,
				0x1f00: 0x200008,
				0x1080: 0x8,
				0x1180: 0x202000,
				0x1280: 0x200000,
				0x1380: 0x10000008,
				0x1480: 0x10002000,
				0x1580: 0x2008,
				0x1680: 0x10202008,
				0x1780: 0x10200000,
				0x1880: 0x10202000,
				0x1980: 0x10200008,
				0x1a80: 0x2000,
				0x1b80: 0x202008,
				0x1c80: 0x200008,
				0x1d80: 0x0,
				0x1e80: 0x10000000,
				0x1f80: 0x10002008
			}, {
				0x0: 0x100000,
				0x10: 0x2000401,
				0x20: 0x400,
				0x30: 0x100401,
				0x40: 0x2100401,
				0x50: 0x0,
				0x60: 0x1,
				0x70: 0x2100001,
				0x80: 0x2000400,
				0x90: 0x100001,
				0xa0: 0x2000001,
				0xb0: 0x2100400,
				0xc0: 0x2100000,
				0xd0: 0x401,
				0xe0: 0x100400,
				0xf0: 0x2000000,
				0x8: 0x2100001,
				0x18: 0x0,
				0x28: 0x2000401,
				0x38: 0x2100400,
				0x48: 0x100000,
				0x58: 0x2000001,
				0x68: 0x2000000,
				0x78: 0x401,
				0x88: 0x100401,
				0x98: 0x2000400,
				0xa8: 0x2100000,
				0xb8: 0x100001,
				0xc8: 0x400,
				0xd8: 0x2100401,
				0xe8: 0x1,
				0xf8: 0x100400,
				0x100: 0x2000000,
				0x110: 0x100000,
				0x120: 0x2000401,
				0x130: 0x2100001,
				0x140: 0x100001,
				0x150: 0x2000400,
				0x160: 0x2100400,
				0x170: 0x100401,
				0x180: 0x401,
				0x190: 0x2100401,
				0x1a0: 0x100400,
				0x1b0: 0x1,
				0x1c0: 0x0,
				0x1d0: 0x2100000,
				0x1e0: 0x2000001,
				0x1f0: 0x400,
				0x108: 0x100400,
				0x118: 0x2000401,
				0x128: 0x2100001,
				0x138: 0x1,
				0x148: 0x2000000,
				0x158: 0x100000,
				0x168: 0x401,
				0x178: 0x2100400,
				0x188: 0x2000001,
				0x198: 0x2100000,
				0x1a8: 0x0,
				0x1b8: 0x2100401,
				0x1c8: 0x100401,
				0x1d8: 0x400,
				0x1e8: 0x2000400,
				0x1f8: 0x100001
			}, {
				0x0: 0x8000820,
				0x1: 0x20000,
				0x2: 0x8000000,
				0x3: 0x20,
				0x4: 0x20020,
				0x5: 0x8020820,
				0x6: 0x8020800,
				0x7: 0x800,
				0x8: 0x8020000,
				0x9: 0x8000800,
				0xa: 0x20800,
				0xb: 0x8020020,
				0xc: 0x820,
				0xd: 0x0,
				0xe: 0x8000020,
				0xf: 0x20820,
				0x80000000: 0x800,
				0x80000001: 0x8020820,
				0x80000002: 0x8000820,
				0x80000003: 0x8000000,
				0x80000004: 0x8020000,
				0x80000005: 0x20800,
				0x80000006: 0x20820,
				0x80000007: 0x20,
				0x80000008: 0x8000020,
				0x80000009: 0x820,
				0x8000000a: 0x20020,
				0x8000000b: 0x8020800,
				0x8000000c: 0x0,
				0x8000000d: 0x8020020,
				0x8000000e: 0x8000800,
				0x8000000f: 0x20000,
				0x10: 0x20820,
				0x11: 0x8020800,
				0x12: 0x20,
				0x13: 0x800,
				0x14: 0x8000800,
				0x15: 0x8000020,
				0x16: 0x8020020,
				0x17: 0x20000,
				0x18: 0x0,
				0x19: 0x20020,
				0x1a: 0x8020000,
				0x1b: 0x8000820,
				0x1c: 0x8020820,
				0x1d: 0x20800,
				0x1e: 0x820,
				0x1f: 0x8000000,
				0x80000010: 0x20000,
				0x80000011: 0x800,
				0x80000012: 0x8020020,
				0x80000013: 0x20820,
				0x80000014: 0x20,
				0x80000015: 0x8020000,
				0x80000016: 0x8000000,
				0x80000017: 0x8000820,
				0x80000018: 0x8020820,
				0x80000019: 0x8000020,
				0x8000001a: 0x8000800,
				0x8000001b: 0x0,
				0x8000001c: 0x20800,
				0x8000001d: 0x820,
				0x8000001e: 0x20020,
				0x8000001f: 0x8020800
			}];
			var SBOX_MASK = [0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];
			var DES = C_algo.DES = BlockCipher.extend({
				_doReset: function _doReset() {
					var key = this._key;
					var keyWords = key.words;
					var keyBits = [];

					for (var i = 0; i < 56; i++) {
						var keyBitPos = PC1[i] - 1;
						keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
					}

					var subKeys = this._subKeys = [];

					for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
						var subKey = subKeys[nSubKey] = [];
						var bitShift = BIT_SHIFTS[nSubKey];

						for (var i = 0; i < 24; i++) {
							subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;
							subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;
						}

						subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;

						for (var i = 1; i < 7; i++) {
							subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;
						}

						subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
					}

					var invSubKeys = this._invSubKeys = [];

					for (var i = 0; i < 16; i++) {
						invSubKeys[i] = subKeys[15 - i];
					}
				},
				encryptBlock: function encryptBlock(M, offset) {
					this._doCryptBlock(M, offset, this._subKeys);
				},
				decryptBlock: function decryptBlock(M, offset) {
					this._doCryptBlock(M, offset, this._invSubKeys);
				},
				_doCryptBlock: function _doCryptBlock(M, offset, subKeys) {
					this._lBlock = M[offset];
					this._rBlock = M[offset + 1];
					exchangeLR.call(this, 4, 0x0f0f0f0f);
					exchangeLR.call(this, 16, 0x0000ffff);
					exchangeRL.call(this, 2, 0x33333333);
					exchangeRL.call(this, 8, 0x00ff00ff);
					exchangeLR.call(this, 1, 0x55555555);

					for (var round = 0; round < 16; round++) {
						var subKey = subKeys[round];
						var lBlock = this._lBlock;
						var rBlock = this._rBlock;
						var f = 0;

						for (var i = 0; i < 8; i++) {
							f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
						}

						this._lBlock = rBlock;
						this._rBlock = lBlock ^ f;
					}

					var t = this._lBlock;
					this._lBlock = this._rBlock;
					this._rBlock = t;
					exchangeLR.call(this, 1, 0x55555555);
					exchangeRL.call(this, 8, 0x00ff00ff);
					exchangeRL.call(this, 2, 0x33333333);
					exchangeLR.call(this, 16, 0x0000ffff);
					exchangeLR.call(this, 4, 0x0f0f0f0f);
					M[offset] = this._lBlock;
					M[offset + 1] = this._rBlock;
				},
				keySize: 2,
				ivSize: 2,
				blockSize: 2
			});

			function exchangeLR(offset, mask) {
				var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
				this._rBlock ^= t;
				this._lBlock ^= t << offset;
			}

			function exchangeRL(offset, mask) {
				var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
				this._lBlock ^= t;
				this._rBlock ^= t << offset;
			}

			C.DES = BlockCipher._createHelper(DES);
			var TripleDES = C_algo.TripleDES = BlockCipher.extend({
				_doReset: function _doReset() {
					var key = this._key;
					var keyWords = key.words;
					this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
					this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
					this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
				},
				encryptBlock: function encryptBlock(M, offset) {
					this._des1.encryptBlock(M, offset);

					this._des2.decryptBlock(M, offset);

					this._des3.encryptBlock(M, offset);
				},
				decryptBlock: function decryptBlock(M, offset) {
					this._des3.decryptBlock(M, offset);

					this._des2.encryptBlock(M, offset);

					this._des1.decryptBlock(M, offset);
				},
				keySize: 6,
				ivSize: 2,
				blockSize: 2
			});
			C.TripleDES = BlockCipher._createHelper(TripleDES);
		})();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var StreamCipher = C_lib.StreamCipher;
			var C_algo = C.algo;
			var RC4 = C_algo.RC4 = StreamCipher.extend({
				_doReset: function _doReset() {
					var key = this._key;
					var keyWords = key.words;
					var keySigBytes = key.sigBytes;
					var S = this._S = [];

					for (var i = 0; i < 256; i++) {
						S[i] = i;
					}

					for (var i = 0, j = 0; i < 256; i++) {
						var keyByteIndex = i % keySigBytes;
						var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;
						j = (j + S[i] + keyByte) % 256;
						var t = S[i];
						S[i] = S[j];
						S[j] = t;
					}

					this._i = this._j = 0;
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					M[offset] ^= generateKeystreamWord.call(this);
				},
				keySize: 8,
				ivSize: 0
			});

			function generateKeystreamWord() {
				var S = this._S;
				var i = this._i;
				var j = this._j;
				var keystreamWord = 0;

				for (var n = 0; n < 4; n++) {
					i = (i + 1) % 256;
					j = (j + S[i]) % 256;
					var t = S[i];
					S[i] = S[j];
					S[j] = t;
					keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
				}

				this._i = i;
				this._j = j;
				return keystreamWord;
			}

			C.RC4 = StreamCipher._createHelper(RC4);
			var RC4Drop = C_algo.RC4Drop = RC4.extend({
				cfg: RC4.cfg.extend({
					drop: 192
				}),
				_doReset: function _doReset() {
					RC4._doReset.call(this);

					for (var i = this.cfg.drop; i > 0; i--) {
						generateKeystreamWord.call(this);
					}
				}
			});
			C.RC4Drop = StreamCipher._createHelper(RC4Drop);
		})(); /** @preserve
         * Counter block mode compatible with  Dr Brian Gladman fileenc.c
         * derived from CryptoJS.mode.CTR
         * Jan Hruby jhruby.web@gmail.com
         */

		CryptoJS.mode.CTRGladman = function () {
			var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

			function incWord(word) {
				if ((word >> 24 & 0xff) === 0xff) {
					var b1 = word >> 16 & 0xff;
					var b2 = word >> 8 & 0xff;
					var b3 = word & 0xff;

					if (b1 === 0xff) {
							b1 = 0;

							if (b2 === 0xff) {
								b2 = 0;

								if (b3 === 0xff) {
									b3 = 0;
								} else {
									++b3;
								}
							} else {
								++b2;
							}
						} else {
						++b1;
					}

					word = 0;
					word += b1 << 16;
					word += b2 << 8;
					word += b3;
				} else {
					word += 16777216;
				}

				return word;
			}

			function incCounter(counter) {
				if ((counter[0] = incWord(counter[0])) === 0) {
					counter[1] = incWord(counter[1]);
				}

				return counter;
			}

			var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
				processBlock: function processBlock(words, offset) {
					var cipher = this._cipher;
					var blockSize = cipher.blockSize;
					var iv = this._iv;
					var counter = this._counter;

					if (iv) {
						counter = this._counter = iv.slice(0);
						this._iv = undefined;
					}

					incCounter(counter);
					var keystream = counter.slice(0);
					cipher.encryptBlock(keystream, 0);

					for (var i = 0; i < blockSize; i++) {
						words[offset + i] ^= keystream[i];
					}
				}
			});
			CTRGladman.Decryptor = Encryptor;
			return CTRGladman;
		}();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var StreamCipher = C_lib.StreamCipher;
			var C_algo = C.algo;
			var S = [];
			var C_ = [];
			var G = [];
			var Rabbit = C_algo.Rabbit = StreamCipher.extend({
				_doReset: function _doReset() {
					var K = this._key.words;
					var iv = this.cfg.iv;

					for (var i = 0; i < 4; i++) {
						K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff | (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
					}

					var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];
					var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];
					this._b = 0;

					for (var i = 0; i < 4; i++) {
						nextState.call(this);
					}

					for (var i = 0; i < 8; i++) {
						C[i] ^= X[i + 4 & 7];
					}

					if (iv) {
						var IV = iv.words;
						var IV_0 = IV[0];
						var IV_1 = IV[1];
						var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
						var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
						var i1 = i0 >>> 16 | i2 & 0xffff0000;
						var i3 = i2 << 16 | i0 & 0x0000ffff;
						C[0] ^= i0;
						C[1] ^= i1;
						C[2] ^= i2;
						C[3] ^= i3;
						C[4] ^= i0;
						C[5] ^= i1;
						C[6] ^= i2;
						C[7] ^= i3;

						for (var i = 0; i < 4; i++) {
							nextState.call(this);
						}
					}
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var X = this._X;
					nextState.call(this);
					S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
					S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
					S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
					S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

					for (var i = 0; i < 4; i++) {
						S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;
						M[offset + i] ^= S[i];
					}
				},
				blockSize: 4,
				ivSize: 2
			});

			function nextState() {
				var X = this._X;
				var C = this._C;

				for (var i = 0; i < 8; i++) {
					C_[i] = C[i];
				}

				C[0] = C[0] + 0x4d34d34d + this._b | 0;
				C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
				C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
				C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
				C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
				C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
				C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
				C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
				this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

				for (var i = 0; i < 8; i++) {
					var gx = X[i] + C[i];
					var ga = gx & 0xffff;
					var gb = gx >>> 16;
					var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
					var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);
					G[i] = gh ^ gl;
				}

				X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
				X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
				X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
				X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
				X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
				X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
				X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
				X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
			}

			C.Rabbit = StreamCipher._createHelper(Rabbit);
		})();

		CryptoJS.mode.CTR = function () {
			var CTR = CryptoJS.lib.BlockCipherMode.extend();
			var Encryptor = CTR.Encryptor = CTR.extend({
				processBlock: function processBlock(words, offset) {
					var cipher = this._cipher;
					var blockSize = cipher.blockSize;
					var iv = this._iv;
					var counter = this._counter;

					if (iv) {
						counter = this._counter = iv.slice(0);
						this._iv = undefined;
					}

					var keystream = counter.slice(0);
					cipher.encryptBlock(keystream, 0);
					counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

					for (var i = 0; i < blockSize; i++) {
						words[offset + i] ^= keystream[i];
					}
				}
			});
			CTR.Decryptor = Encryptor;
			return CTR;
		}();

		(function () {
			var C = CryptoJS;
			var C_lib = C.lib;
			var StreamCipher = C_lib.StreamCipher;
			var C_algo = C.algo;
			var S = [];
			var C_ = [];
			var G = [];
			var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
				_doReset: function _doReset() {
					var K = this._key.words;
					var iv = this.cfg.iv;
					var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];
					var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];
					this._b = 0;

					for (var i = 0; i < 4; i++) {
						nextState.call(this);
					}

					for (var i = 0; i < 8; i++) {
						C[i] ^= X[i + 4 & 7];
					}

					if (iv) {
						var IV = iv.words;
						var IV_0 = IV[0];
						var IV_1 = IV[1];
						var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
						var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
						var i1 = i0 >>> 16 | i2 & 0xffff0000;
						var i3 = i2 << 16 | i0 & 0x0000ffff;
						C[0] ^= i0;
						C[1] ^= i1;
						C[2] ^= i2;
						C[3] ^= i3;
						C[4] ^= i0;
						C[5] ^= i1;
						C[6] ^= i2;
						C[7] ^= i3;

						for (var i = 0; i < 4; i++) {
							nextState.call(this);
						}
					}
				},
				_doProcessBlock: function _doProcessBlock(M, offset) {
					var X = this._X;
					nextState.call(this);
					S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
					S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
					S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
					S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

					for (var i = 0; i < 4; i++) {
						S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;
						M[offset + i] ^= S[i];
					}
				},
				blockSize: 4,
				ivSize: 2
			});

			function nextState() {
				var X = this._X;
				var C = this._C;

				for (var i = 0; i < 8; i++) {
					C_[i] = C[i];
				}

				C[0] = C[0] + 0x4d34d34d + this._b | 0;
				C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
				C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
				C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
				C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
				C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
				C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
				C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
				this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

				for (var i = 0; i < 8; i++) {
					var gx = X[i] + C[i];
					var ga = gx & 0xffff;
					var gb = gx >>> 16;
					var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
					var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);
					G[i] = gh ^ gl;
				}

				X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
				X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
				X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
				X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
				X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
				X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
				X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
				X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
			}

			C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
		})();

		CryptoJS.pad.ZeroPadding = {
			pad: function pad(data, blockSize) {
				var blockSizeBytes = blockSize * 4;
				data.clamp();
				data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
			},
			unpad: function unpad(data) {
				var dataWords = data.words;
				var i = data.sigBytes - 1;

				while (!(dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff)) {
					i--;
				}

				data.sigBytes = i + 1;
			}
		};
		return CryptoJS;
	});
},10544,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/crypto/crypto-js.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var YLListViewCellAccessoryType = {
        none: 'YLListViewCellAccessoryTypeNone',
        detailDisclosureIndicator: 'YLListViewCellAccessoryTypeDetailDisclosureIndicator',
        switch: 'YLListViewCellAccessoryTypeSwitch',
        custom: 'YLListViewCellAccessoryTypeCustom'
    };
    module.exports = {
        YLListViewCellAccessoryType: YLListViewCellAccessoryType
    };
},10547,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/YLListViewType.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var _reactNativeSvg = _require(_dependencyMap[2]);

	var _reactNativeSvg2 = babelHelpers.interopRequireDefault(_reactNativeSvg);

	var Dimensions = _require(_dependencyMap[3]);

	var CommonYeelightModules = _require(_dependencyMap[4]);

	var Theme = CommonYeelightModules.Theme;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var RectComponent = function (_Component) {
		babelHelpers.inherits(RectComponent, _Component);

		function RectComponent(props) {
			babelHelpers.classCallCheck(this, RectComponent);

			var _this = babelHelpers.possibleConstructorReturn(this, (RectComponent.__proto__ || Object.getPrototypeOf(RectComponent)).call(this, props));

			_this._onLayout = function () {
				if (!_this.view) return;

				_this.view.measureInWindow(function (winX, winY, winWidth, winHeight) {
					if (_this.state.viewHeight != winHeight && _this.state.viewWidth != winWidth) {
						_this.setState({
							viewWidth: winWidth,
							viewHeight: winHeight
						});
					}
				});
			};

			_this.state = {
				viewWidth: props.width ? props.width : 0,
				viewHeight: props.height ? props.height : 0
			};
			return _this;
		}

		babelHelpers.createClass(RectComponent, [{
			key: "componentWillReceiveProps",
			value: function componentWillReceiveProps(nextProps) {
				if (this.state.viewHeight != nextProps.height || this.state.viewWidth != nextProps.width) {
					this.setState({
						viewHeight: nextProps.height,
						viewWidth: nextProps.width
					});
				}
			}
		}, {
			key: "render",
			value: function render() {
				var fill = this.props.fill;
				var stroke = this.props.stroke;
				var strokeDasharray = this.props.strokeDasharray;
				var strokeWidth = this.props.strokeWidth;
				var cornerRadius = this.props.cornerRadius;
				var left = this.props.strokeWidth;
				var top = this.props.strokeWidth;
				var innerFrameWidth = this.state.viewWidth - strokeWidth * 2;
				var innerFrameHeight = this.state.viewHeight - strokeWidth * 2;
				var horizonLine = innerFrameWidth - cornerRadius * 2;
				var verticalLine = innerFrameHeight - cornerRadius * 2;
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: [{
							position: 'absolute',
							width: this.state.viewWidth,
							height: this.state.viewHeight,
							alignItems: 'center',
							justifyContent: 'center'
						}, this.props.style],
						onLayout: this._onLayout
					},
					_react2.default.createElement(
						_reactNative.View,
						{
							style: {
								alignItems: 'center',
								justifyContent: 'center'
							}
						},
						this.props.children
					),
					_react2.default.createElement(
						_reactNative.View,
						{
							style: {
								position: 'absolute',
								width: this.state.viewWidth,
								height: this.state.viewHeight,
								left: 0,
								top: 0
							}
						},
						_react2.default.createElement(
							_reactNativeSvg2.default,
							{
								width: this.state.viewWidth,
								height: this.state.viewHeight
							},
							_react2.default.createElement(_reactNativeSvg.Path, {
								d: "M" + (left + cornerRadius) + "," + top + "\n\t\t\t\t\t\t\t\t\t\th" + horizonLine + "\n\t\t\t\t\t\t\t\t\t\ta" + cornerRadius + "," + cornerRadius + " 0 0 1 " + cornerRadius + "," + cornerRadius + "\n\t\t\t\t\t\t\t\t\t\tv" + verticalLine + "\n\t\t\t\t\t\t\t\t\t\ta" + cornerRadius + "," + cornerRadius + " 0 0 1 -" + cornerRadius + "," + cornerRadius + "\n\t\t\t\t\t\t\t\t\t\th-" + horizonLine + "\n\t\t\t\t\t\t\t\t\t\ta" + cornerRadius + "," + cornerRadius + " 0 0 1 -" + cornerRadius + ",-" + cornerRadius + "\n\t\t\t\t\t\t\t\t\t\tv-" + verticalLine + "\n\t\t\t\t\t\t\t\t\t\ta" + cornerRadius + "," + cornerRadius + " 0 0 1 " + cornerRadius + ",-" + cornerRadius + "\n\t\t\t\t\t\t\t\t\t\tz",
								fill: fill,
								stroke: stroke,
								strokeWidth: strokeWidth,
								strokeDasharray: strokeDasharray
							})
						)
					)
				);
			}
		}]);
		return RectComponent;
	}(_react.Component);

	module.exports = RectComponent;
},10550,[10297,10033,11485,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/RectComponent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  var ToRGB = _require(_dependencyMap[0]);

  var ToIntColor = _require(_dependencyMap[1]);

  var id = Math.floor(Math.random() * 10000 + 1);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
  var LightMode = CommonYeelightModules.LightMode,
      YLDevice = CommonYeelightModules.YLDevice;
  var ApiDataSource = CommonYeelightModulesDataSource.ApiDataSource;
  var apiDataSource = new ApiDataSource();
  var RemoteBeaconKeyEvent = {
    On: "RemoteBeaconKeyOn",
    Off: "RemoteBeaconKeyOff",
    ColorTemperature: "RemoteBeaconKeyColorTemperature",
    Plus: "RemoteBeaconKeyPlus",
    Mode: "RemoteBeaconKeyMode",
    Minus: "RemoteBeaconKeyMinus"
  };
  var KeyPressEvent = {
    Normal: "KeyPressEventNormal",
    Long: "KeyPressEventLong"
  };

  function _callRemoteBeaconKey(key, actionEvent, callback) {
    var keyValue = -1;

    if (actionEvent == KeyPressEvent.Normal) {
      if (key == RemoteBeaconKeyEvent.On) {
        keyValue = "0";
      } else if (key == RemoteBeaconKeyEvent.Off) {
        keyValue = "1";
      } else if (key == RemoteBeaconKeyEvent.ColorTemperature) {
        keyValue = "2";
      } else if (key == RemoteBeaconKeyEvent.Plus) {
        keyValue = "3";
      } else if (key == RemoteBeaconKeyEvent.Mode) {
        keyValue = "4";
      } else if (key == RemoteBeaconKeyEvent.Minus) {
        keyValue = "5";
      }
    } else if (actionEvent == KeyPressEvent.Long) {
      if (key == RemoteBeaconKeyEvent.On) {
        keyValue = "131072";
      } else if (key == RemoteBeaconKeyEvent.Off) {
        keyValue = "131073";
      } else if (key == RemoteBeaconKeyEvent.ColorTemperature) {
        keyValue = "131074";
      } else if (key == RemoteBeaconKeyEvent.Plus) {
        keyValue = "131075";
      } else if (key == RemoteBeaconKeyEvent.Mode) {
        keyValue = "131076";
      } else if (key == RemoteBeaconKeyEvent.Minus) {
        keyValue = "131077";
      }
    }

    return _callMiSDKMethod("set_ps", ["pseudo_beacon", "4097|" + keyValue], callback);
  }

  function _callMiSDKMethod(method, params, callback) {
    YLDevice.callMethod(method, params, {
      id: id
    }, callback);
    id++;
  }

  function deviceModel() {
    return YLDevice.deviceModel;
  }

  function toDuration(value) {
    var duration = Math.floor(-11.0 * value + 12) * 1000;
    return duration <= 0 ? 1000 : duration;
  }

  function formartNumber(number) {
    if (!number) {
      return "-1";
    }

    number = number.toString();

    if (number.length == 1) {
      return "00" + number;
    } else if (number.length == 2) {
      return "0" + number;
    } else {
      return number;
    }
  }

  function _formatCF(colors, bright, duration) {
    duration = toDuration(duration);
    var string = "";

    for (var i = 0; i < colors.length; i++) {
      colors[i] = ToRGB.getRGB(colors[i], 1.0, 1.0);
      colors[i] = ToIntColor.getInt(colors[i].r, colors[i].g, colors[i].b);
      string = string + duration.toString() + ",1," + colors[i].toString() + "," + bright.toString() + ",";
    }

    string = string.substr(0, string.length - 1);
    return string;
  }

  var TurnOnMode = {
    colorTemperature: 1,
    colorRGB: 2,
    colorFlow: 4,
    nightLight: 5
  };
  module.exports = {
    get apiDataSource() {
      return apiDataSource;
    },

    getProps: function getProps(callback) {
      return _callMiSDKMethod("get_prop", this.apiDataSource.getProps, callback);
    },
    getPropsByProperties: function getPropsByProperties(properties, callback) {
      if (properties && properties instanceof Array && properties.length > 0) {
        return _callMiSDKMethod("get_prop", properties, callback);
      } else {
        if (callback) {
          callback(null);
        }
      }
    },
    IndexOfGetProps: function IndexOfGetProps(value) {
      return this.apiDataSource.IndexOfGetProps(value);
    },
    registerDeviceStatusProps: function registerDeviceStatusProps() {
      return YLDevice.subscribeMessages(this.apiDataSource.registerProps);
    },
    registeringDeviceStatusProps: function registeringDeviceStatusProps() {
      return this.apiDataSource.registerProps;
    },
    registerPropsCount: function registerPropsCount() {
      return this.apiDataSource.registerProps.length;
    },
    getPropsCount: function getPropsCount() {
      return this.apiDataSource.getProps.length;
    },
    getDevicePropKeys: function getDevicePropKeys() {
      return this.apiDataSource.getProps;
    },
    IndexOfRegisterProps: function IndexOfRegisterProps(value) {
      return this.apiDataSource.IndexOfRegisterProps(value);
    },
    setPower: function setPower(isOn, callback) {
      var smoothDuration = 500;

      if (isOn == "off") {
        if (typeof this.apiDataSource.getPowerOffSmooth != 'undefined' && this.apiDataSource.getPowerOffSmooth instanceof Function) {
          var powerOffSmooth = this.apiDataSource.getPowerOffSmooth();
          smoothDuration = powerOffSmooth != undefined ? powerOffSmooth : smoothDuration;
        }
      }

      return _callMiSDKMethod("set_power", [isOn, "smooth", smoothDuration], callback);
    },
    setBgPower: function setBgPower(isOn, callback) {
      return _callMiSDKMethod("bg_set_power", [isOn, "smooth", 500], callback);
    },
    getCron: function getCron(callback) {
      return _callMiSDKMethod("cron_get", [0], callback);
    },
    getDefaultCron: function getDefaultCron(callback) {
      return _callMiSDKMethod("get_prop", ["delayoff_info"], callback);
    },
    addCron: function addCron(delay, callback) {
      return _callMiSDKMethod("cron_add", [0, delay], callback);
    },
    delCron: function delCron(callback) {
      return _callMiSDKMethod("cron_del", [0], callback);
    },
    getSceneDelayValue: function getSceneDelayValue(bright, delayTimer) {
      return ["auto_delay_off", bright, delayTimer];
    },
    setScene: function setScene(mode, value, bright, callback) {
      return _callMiSDKMethod("set_scene", [mode, value, bright], callback);
    },
    setBgScene: function setBgScene(mode, value, bright, callback) {
      return _callMiSDKMethod("bg_set_scene", [mode, value, bright], callback);
    },
    setNightLightScene: function setNightLightScene(bright, callback) {
      return _callMiSDKMethod("set_scene", ["nightlight", bright], callback);
    },
    setCfScene: function setCfScene(cf, callback) {
      return _callMiSDKMethod("set_scene", cf, callback);
    },
    setBgCfScene: function setBgCfScene(cf, callback) {
      return _callMiSDKMethod("bg_set_scene", cf, callback);
    },
    setBright: function setBright(bright, callback) {
      return _callMiSDKMethod("set_bright", [bright, "smooth", 500], callback);
    },
    setBrightAndOn: function setBrightAndOn(value, callback) {
      return _callMiSDKMethod("set_scene", ["bright", value, 500], callback);
    },
    setBgBright: function setBgBright(bright, callback) {
      return _callMiSDKMethod("bg_set_bright", [bright, "smooth", 500], callback);
    },
    setDefault: function setDefault(callback) {
      return _callMiSDKMethod("set_default", [], callback);
    },
    setColor: function setColor(hue, callback) {
      var color = ToRGB.getRGB(hue, 1.0, 1.0);
      color = ToIntColor.getInt(color.r, color.g, color.b);
      return _callMiSDKMethod("set_rgb", [color, "smooth", 500], callback);
    },
    setBgColor: function setBgColor(hue, callback) {
      var color = ToRGB.getRGB(hue, 1.0, 1.0);
      color = ToIntColor.getInt(color.r, color.g, color.b);
      return _callMiSDKMethod("bg_set_rgb", [color, "smooth", 500], callback);
    },
    setCT: function setCT(ct, callback) {
      return _callMiSDKMethod("set_ct_abx", [ct, "smooth", 500], callback);
    },
    setBgCT: function setBgCT(ct, callback) {
      return _callMiSDKMethod("bg_set_ct_abx", [ct, "smooth", 500], callback);
    },
    formatCF: function formatCF(colors, bright, duration) {
      return _formatCF(colors, bright, duration);
    },
    startSimpleCFBySetScene: function startSimpleCFBySetScene(colors, bright, duration, callback) {
      var string = _formatCF(colors, bright, duration);

      return this.setCfScene(["cf", 0, 0, string], callback);
    },
    startSimpleCF: function startSimpleCF(colors, bright, duration, callback) {
      var string = _formatCF(colors, bright, duration);

      return _callMiSDKMethod("start_cf", [0, 0, string], callback);
    },
    getSaveState: function getSaveState(callback) {
      return _callMiSDKMethod("get_prop", ["save_state"], callback);
    },
    getBgProact: function getBgProact(callback) {
      return _callMiSDKMethod("get_prop", ["bg_proact"], callback);
    },
    setSaveState: function setSaveState(state, callback) {
      var s = "0";

      if (state) {
        s = "1";
      }

      return _callMiSDKMethod("set_ps", ["cfg_save_state", s], callback);
    },
    setKidLock: function setKidLock(state, callback) {
      var s = "0";

      if (state) {
        s = "1";
      }

      return _callMiSDKMethod("set_ps", ["cfg_kid_lock", s], callback);
    },
    getKidLock: function getKidLock(callback) {
      return _callMiSDKMethod("get_prop", ["kid_lock"], function (s, r) {
        if (s && r && Array.isArray(r.result)) {
          var state = parseInt(r.result[0]) == 1 ? true : false;

          if (callback) {
            callback(state);
          }
        } else {
          if (callback) {
            callback(false);
          }
        }
      });
    },
    setBgProact: function setBgProact(proact, callback) {
      var s = "0";

      if (proact) {
        s = "1";
      }

      return _callMiSDKMethod("set_ps", ["cfg_bg_proact", s], callback);
    },
    startPomodoro: function startPomodoro(workTime, breakTime, callback) {
      var string = "01|" + formartNumber(workTime) + formartNumber(breakTime);
      return _callMiSDKMethod("set_ps", ["cfg_pomodoro", string], callback);
    },
    stopPomodoro: function stopPomodoro(callback) {
      return _callMiSDKMethod("set_ps", ["cfg_pomodoro", "00"], callback);
    },
    setPomodoroTime: function setPomodoroTime(workTime, breakTime, callback) {
      var string = "02|" + formartNumber(workTime) + formartNumber(breakTime);
      return _callMiSDKMethod("set_ps", ["cfg_pomodoro", string], callback);
    },
    getPomodoroStatus: function getPomodoroStatus(callback) {
      return _callMiSDKMethod("get_ps", ["cfg_pomodoro", "00"], callback);
    },
    getPomodoroSettings: function getPomodoroSettings(callback) {
      return _callMiSDKMethod("get_prop", ["pdo_wt", "pdo_bt", "pdo_status"], callback);
    },
    getDeviceModel: function getDeviceModel() {
      return deviceModel();
    },
    setKidsMode: function setKidsMode(start, callback) {
      var param = "0";

      if (start) {
        param = "1";
      }

      return _callMiSDKMethod("set_ps", ["cfg_kidmode", param], callback);
    },
    getKidsMode: function getKidsMode(callback) {
      return _callMiSDKMethod("get_prop", ["kid_mode"], callback);
    },
    getShortKey: function getShortKey(callback) {
      return _callMiSDKMethod("get_prop", ["skey_act", "skey_delay_tm", "skey_scene_id"], callback);
    },
    setShortKey: function setShortKey(action, delay_tm, name, ct, bright, callback) {
      var string = "0";

      if (action == 1) {
        if (delay_tm < 1) {
          delay_tm = 1;
        } else if (delay_tm > 180) {
          delay_tm = 180;
        }

        string = "1|" + delay_tm.toString();
      } else if (action == 2) {
        string = "2|" + ct.toString() + "|" + bright.toString() + "|" + name;
      }

      return _callMiSDKMethod("set_ps", ["cfg_shortkey", string], callback);
    },
    setNightLight: function setNightLight(isOn, callback) {
      var state = isOn ? "on" : "off";
      return _callMiSDKMethod("set_ps", ["nightlight", state], callback);
    },
    setNightLightWithBright: function setNightLightWithBright(bright, callback) {
      var state = "on|" + bright;
      return _callMiSDKMethod("set_ps", ["nightlight", state], callback);
    },
    setNightLightTime: function setNightLightTime(nightlightString, callback) {
      return _callMiSDKMethod("set_ps", ["nighttime", nightlightString], callback);
    },
    getNightTime: function getNightTime(callback) {
      return _callMiSDKMethod("get_prop", ["nighttime"], callback);
    },
    getSmartSwitchStatus: function getSmartSwitchStatus(callback) {
      return _callMiSDKMethod("get_prop", ["smart_switch"], callback);
    },
    setNightTimeEnable: function setNightTimeEnable(enable, callback) {
      var enableStr;

      if (enable) {
        enableStr = "enable";
      } else {
        enableStr = "disable";
      }

      return _callMiSDKMethod("set_ps", ["nighttime", enableStr], callback);
    },
    setSmartSwitchEnable: function setSmartSwitchEnable(enable, callback) {
      var enableStr;

      if (enable) {
        enableStr = "1";
      } else {
        enableStr = "0";
      }

      return _callMiSDKMethod("set_ps", ["cfg_smart_switch", enableStr], callback);
    },
    getRemoteControlList: function getRemoteControlList(callback) {
      return _callMiSDKMethod("ble_dbg_tbl_dump", {
        table: "evtRuleTbl"
      }, function (response, listReturn) {
        if (callback) {
          if (response) {
            var result = listReturn.result;
            var arrayReturn = new Array();

            if (result.length > 0) {
              var pId;

              for (var index in result) {
                var device = result[index];
                pId = parseInt(device.pid);
                arrayReturn.push(device);
              }
            } else {}
          }

          callback(response, arrayReturn);
        }
      });
    },
    deleteRemoteControllerList: function deleteRemoteControllerList(mac, eid, pid, callback) {
      return _callMiSDKMethod("miIO.bleEvtRuleDel", {
        mac: mac,
        pid: pid,
        eid: eid
      }, callback);
    },
    increaseBright: function increaseBright(callback) {
      return _callMiSDKMethod("set_adjust", ["increase", "bright"], callback);
    },
    decreaseBright: function decreaseBright(callback) {
      return _callMiSDKMethod("set_adjust", ["decrease", "bright"], callback);
    },
    circleColorTemperature: function circleColorTemperature(callback) {
      return _callMiSDKMethod("set_adjust", ["circle", "ct"], callback);
    },
    setPowerOnAndChangeMode: function setPowerOnAndChangeMode(mode, callback) {
      var realMode;

      if (LightMode.color == mode) {
        realMode = TurnOnMode.colorRGB;
      } else if (LightMode.ct == mode) {
        realMode = TurnOnMode.colorTemperature;
      } else if (LightMode.flow == mode) {
        realMode = TurnOnMode.colorFlow;
      } else if (LightMode.nightlight == mode) {
        realMode = TurnOnMode.nightLight;
      } else {
        return;
      }

      return _callMiSDKMethod("set_power", ["on", "smooth", 500, realMode], callback);
    },
    setBgPowerOnAndChangeMode: function setBgPowerOnAndChangeMode(mode, callback) {
      var realMode = this.getRealModeByLightMode(mode);
      return _callMiSDKMethod("bg_set_power", ["on", "smooth", 500, realMode], callback);
    },
    getRealModeByLightMode: function getRealModeByLightMode(mode) {
      var realMode = TurnOnMode.colorTemperature;

      if (LightMode.color == mode) {
        realMode = TurnOnMode.colorRGB;
      } else if (LightMode.ct == mode) {
        realMode = TurnOnMode.colorTemperature;
      } else if (LightMode.flow == mode) {
        realMode = TurnOnMode.colorFlow;
      } else if (LightMode.nightlight == mode) {
        realMode = TurnOnMode.nightLight;
      } else {}

      return realMode;
    },
    getMibandList: function getMibandList(callback) {
      return _callMiSDKMethod("ble_dbg_tbl_dump", {
        table: "evtRuleTbl"
      }, function (response, listReturn) {
        if (callback) {
          if (response) {
            var result = listReturn.result || [];
            var arrayReturn = new Array();

            if (result.length > 0) {
              var pId;

              for (var index in result) {
                var device = result[index];
                pId = parseInt(device.pid);

                if (pId == 21 || pId == 296 || pId == 295 || pId == 294) {
                  arrayReturn.push(device);
                }
              }
            } else {}
          }

          callback(response, arrayReturn);
        }
      });
    },
    getMibandSleep: function getMibandSleep(callback) {
      return _callMiSDKMethod("get_prop", ["miband_sleep"], callback);
    },
    unbindMiband: function unbindMiband(mac, eid, pid, callback) {
      return _callMiSDKMethod("miIO.bleEvtRuleDel", {
        mac: mac,
        pid: pid,
        eid: eid
      }, callback);
    },
    enableMibandSleep: function enableMibandSleep(enabled, callback) {
      return _callMiSDKMethod("set_ps", ["miband_sleep", enabled ? "1" : "0"], callback);
    },
    bindMiband: function bindMiband(mac, eid, pid, beaconKey, callback) {
      return _callMiSDKMethod("miIO.bleEvtRuleAdd", {
        mac: mac,
        pid: pid,
        eid: eid,
        beaconKey: beaconKey
      }, callback);
    },
    callRemoteBeaconKey: function callRemoteBeaconKey(key, actionEvent, callback) {
      return _callRemoteBeaconKey(key, actionEvent, callback);
    },
    getDefaultLightSwitchState: function getDefaultLightSwitchState(callback) {
      return _callMiSDKMethod("get_prop", ["fast_scenes"], callback);
    },
    setDefaultLightSwitchState: function setDefaultLightSwitchState(state, callback) {
      return _callMiSDKMethod("set_ps", ["cfg_fast_scenes", state], callback);
    },
    setDefaultLightInitPower: function setDefaultLightInitPower(state, callback) {
      return _callMiSDKMethod("set_ps", ["cfg_init_power", state], callback);
    },
    requestPomodoro: function requestPomodoro(callback) {
      return _callMiSDKMethod("get_time", ["pomodoro"], callback);
    },
    startComplexPomodoro: function startComplexPomodoro(parameters, callback) {
      return _callMiSDKMethod("set_time", ["pomodoro", "start", parameters], callback);
    },
    stopComplexPomodoro: function stopComplexPomodoro(callback) {
      return _callMiSDKMethod("set_time", ["pomodoro", "stop"], callback);
    },
    setDefaultComplexPomodoro: function setDefaultComplexPomodoro(parameters, callback) {
      return _callMiSDKMethod("set_time", ["pomodoro", "default", parameters], callback);
    },
    getDefaultComplexPomodoro: function getDefaultComplexPomodoro(callback) {
      return _callMiSDKMethod("get_prop", ["default_pomodoro"], callback);
    },
    callMiSDKMethod: function callMiSDKMethod(method, params, callback) {
      return _callMiSDKMethod(method, params, callback);
    },
    applySceneBundle: function applySceneBundle(params, callback) {
      return _callMiSDKMethod("set_scene_bundle", params, callback);
    },
    setHumanInductionMode: function setHumanInductionMode(param, callback) {
      return _callMiSDKMethod('set_ps', ['sensor_pir', param], callback);
    },
    setHumanInductionModeEnable: function setHumanInductionModeEnable(param, callback) {
      return _callMiSDKMethod('set_ps', ['sensor_pir_enable', param], callback);
    },
    getHumanInductionMode: function getHumanInductionMode(callback) {
      return _callMiSDKMethod('get_prop', ['sensor_pir'], callback);
    },
    getHumanInductionModeEnable: function getHumanInductionModeEnable(callback) {
      return _callMiSDKMethod('get_prop', ['sensor_pir_enable'], callback);
    },
    getAdultOrChildMode: function getAdultOrChildMode(callback) {
      return _callMiSDKMethod('get_prop', ['kid_mode'], callback);
    },
    setAdultOrChildMode: function setAdultOrChildMode(param, callback) {
      return _callMiSDKMethod('set_ps', ['kid_mode', param], callback);
    },
    getSubModelProp: function getSubModelProp(callback) {
      return _callMiSDKMethod('get_prop', ['sub_model'], callback);
    }
  };
},10553,[10556,10559,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Api.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    function hsv2rgb(h, s, v) {
        h = bound(h);
        s = bound(s);
        v = bound(v);
        var r, g, b, i, f, p, q, t;
        i = Math.floor(h * 6);
        f = h * 6 - i;
        p = v * (1 - s);
        q = v * (1 - f * s);
        t = v * (1 - (1 - f) * s);

        switch (i % 6) {
            case 0:
                r = v, g = t, b = p;
                break;

            case 1:
                r = q, g = v, b = p;
                break;

            case 2:
                r = p, g = v, b = t;
                break;

            case 3:
                r = p, g = q, b = v;
                break;

            case 4:
                r = t, g = p, b = v;
                break;

            case 5:
                r = v, g = p, b = q;
                break;
        }

        return {
            r: Math.round(r * 255),
            g: Math.round(g * 255),
            b: Math.round(b * 255)
        };
    }

    function hsva2rgba(h, s, v, a) {
        h = bound(h);
        s = bound(s);
        v = bound(v);
        var r, g, b, i, f, p, q, t;
        i = Math.floor(h * 6);
        f = h * 6 - i;
        p = v * (1 - s);
        q = v * (1 - f * s);
        t = v * (1 - (1 - f) * s);

        switch (i % 6) {
            case 0:
                r = v, g = t, b = p;
                break;

            case 1:
                r = q, g = v, b = p;
                break;

            case 2:
                r = p, g = v, b = t;
                break;

            case 3:
                r = p, g = q, b = v;
                break;

            case 4:
                r = t, g = p, b = v;
                break;

            case 5:
                r = v, g = p, b = q;
                break;
        }

        return {
            r: Math.round(r * 255),
            g: Math.round(g * 255),
            b: Math.round(b * 255),
            a: a
        };
    }

    function bound(value) {
        if (value < 0) {
            value = 0;
        }

        if (value > 1) {
            value = 1;
        }

        return value;
    }

    module.exports = {
        getRGB: function getRGB(h, s, v) {
            return hsv2rgb(h, s, v);
        },
        getRGBString: function getRGBString(h, s, v) {
            var rgb = hsv2rgb(h, s, v);
            return 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';
        },
        getRGBAString: function getRGBAString(h, s, v, a) {
            var rgb = hsv2rgb(h, s, v);
            return 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + a + ')';
        }
    };
},10556,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/HsvToRgb.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    function rbg2int(r, g, b) {
        var hexString = decimal2hexString(bound(r));
        hexString = hexString + decimal2hexString(bound(g));
        hexString = hexString + decimal2hexString(bound(b));
        return hexString2Decimal(hexString);
    }

    function bound(value) {
        if (value < 0) {
            value = 0;
        }

        if (value > 255) {
            value = 255;
        }

        return value;
    }

    function decimal2hexString(value) {
        var hexString = value.toString(16);

        if (hexString.length < 2) {
            hexString = "0" + hexString;
        }

        return hexString;
    }

    function hexString2Decimal(hex) {
        var number = parseInt(hex, 16);

        if (number && !isNaN(number)) {
            return number;
        }
    }

    module.exports = {
        getInt: function getInt(r, g, b) {
            return rbg2int(r, g, b);
        }
    };
},10559,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Rgb2int.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var CLActivityIndicator = CommonYeelightModules.CLActivityIndicator;

  var LoadingEffect = function (_Component) {
    babelHelpers.inherits(LoadingEffect, _Component);

    function LoadingEffect() {
      babelHelpers.classCallCheck(this, LoadingEffect);
      return babelHelpers.possibleConstructorReturn(this, (LoadingEffect.__proto__ || Object.getPrototypeOf(LoadingEffect)).apply(this, arguments));
    }

    babelHelpers.createClass(LoadingEffect, [{
      key: "render",
      value: function render() {
        if (this.props.show) {
          return _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: [styles.container, {
                opacity: this.props.opacity
              }]
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.overlay
              },
              _react2.default.createElement(CLActivityIndicator, {
                color: "#fff",
                size: "large"
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  style: styles.text
                },
                this.props.text
              )
            )
          );
        } else {
          return _react2.default.createElement(_reactNative.View, null);
        }
      }
    }]);
    return LoadingEffect;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    },
    overlay: {
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 14,
      backgroundColor: '#000',
      width: 140,
      height: 120,
      opacity: 0.6
    },
    text: {
      color: '#fff',
      fontSize: 14,
      marginTop: 18,
      fontFamily: 'System'
    }
  });

  module.exports = LoadingEffect;
},10562,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/LoadingEffect.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  function int2hsv(int) {
    if (int) {
      var hex = int.toString(16);
      hex = leftPad(hex);
      var r = parseInt(hex.substring(0, 2), 16);
      var g = parseInt(hex.substring(2, 4), 16);
      var b = parseInt(hex.substring(4), 16);
      return rgb2hsv(r, g, b);
    } else {
      return 0;
    }
  }

  function leftPad(hex) {
    return "0".repeat(6 - hex.length) + hex;
  }

  function rgb2hsv() {
    var rr,
        gg,
        bb,
        r = arguments[0] / 255,
        g = arguments[1] / 255,
        b = arguments[2] / 255,
        h,
        s,
        v = Math.max(r, g, b),
        diff = v - Math.min(r, g, b),
        diffc = function diffc(c) {
      return (v - c) / 6 / diff + 0.5;
    };

    if (diff == 0) {
      h = s = 0;
    } else {
      s = diff / v;
      rr = diffc(r);
      gg = diffc(g);
      bb = diffc(b);

      if (r === v) {
        h = bb - gg;
      } else if (g === v) {
        h = 0.3333333333333333 + rr - bb;
      } else if (b === v) {
        h = 0.6666666666666666 + gg - rr;
      }

      if (h < 0) {
        h += 1;
      } else if (h > 1) {
        h -= 1;
      }
    }

    return {
      h: Math.round(h * 360),
      s: Math.round(s * 100),
      v: Math.round(v * 100)
    };
  }

  function _wrgb2rgb(number) {
    var r = number >> 16 & 255;
    var g = number >> 8 & 255;
    var b = number & 255;
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function _rgb2wrgb(r, g, b) {
    return -16777216 | r << 16 | g << 8 | b;
  }

  function rgb2int(r, g, b) {
    var hex = toHex(r) + toHex(g) + toHex(b);
    return parseInt(hex, 16);
  }

  function toHex(number) {
    if (!number) {
      return "00";
    }

    var hex = number.toString(16);

    if (hex.length < 2) {
      hex = "0" + hex;
    }

    return hex;
  }

  function _getHansLen(val) {
    var regex = /[\u2E80-\u2FDF\u3040-\u318F\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FFF\uA960-\uA97F\uAC00-\uD7FF]/;
    var len = 0;

    for (var i = 0; i < val.length; i++) {
      var a = val.charAt(i);

      if (regex.test(a)) {
        len += 1;
      }
    }

    return len;
  }

  function _getLetterLen(val) {
    var regex = /^[a-zA-Z]*$/;
    var len = 0;

    for (var i = 0; i < val.length; i++) {
      var a = val.charAt(i);

      if (regex.test(a)) {
        len += 1;
      }
    }

    return len;
  }

  module.exports = {
    getHue: function getHue(v) {
      return int2hsv(v).h / 360.0;
    },
    getHsv: function getHsv(v) {
      return int2hsv(v);
    },
    getHueFromWrgb: function getHueFromWrgb(number) {
      var c = _wrgb2rgb(number);

      var hsv = rgb2hsv(c.r, c.g, c.b);
      return hsv.h / 360;
    },
    getSaturationFromWrgb: function getSaturationFromWrgb(number) {
      var c = _wrgb2rgb(number);

      var hsv = rgb2hsv(c.r, c.g, c.b);
      return hsv.s / 100;
    },
    wrgb2Int: function wrgb2Int(number) {
      var c = _wrgb2rgb(number);

      return rgb2int(c.r, c.g, c.b);
    },
    rgb2wrgb: function rgb2wrgb(r, g, b) {
      return _rgb2wrgb(r, g, b);
    },
    rgb2Int: function rgb2Int(r, g, b) {
      return rgb2int(r, g, b);
    },
    wrgb2rgb: function wrgb2rgb(number) {
      return _wrgb2rgb(number);
    },
    getHansLen: function getHansLen(val) {
      return _getHansLen(val);
    },
    getLetterLen: function getLetterLen(val) {
      return _getLetterLen(val);
    }
  };
},10565,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Utility.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    var CommonYeelightModules = _require(_dependencyMap[0]);

    var strings = CommonYeelightModules.strings;
    var _weekString = [strings.common_schedule_repeat_mode_sunday, strings.common_schedule_repeat_mode_monday, strings.common_schedule_repeat_mode_tuesday, strings.common_schedule_repeat_mode_wensday, strings.common_schedule_repeat_mode_thursday, strings.common_schedule_repeat_mode_friday, strings.common_schedule_repeat_mode_saturday];
    var _weekShortString = [strings.common_schedule_repeat_mode_sunday_short, strings.common_schedule_repeat_mode_monday_short, strings.common_schedule_repeat_mode_tuesday_short, strings.common_schedule_repeat_mode_wensday_short, strings.common_schedule_repeat_mode_thursday_short, strings.common_schedule_repeat_mode_friday_short, strings.common_schedule_repeat_mode_saturday_short];

    function weekShortMapToWeek() {
        var weekMap = new Map();

        for (var i = 0; i < _weekShortString.length; i++) {
            weekMap.set(_weekShortString[i], _weekString[i]);
        }

        return weekMap;
    }

    function _getSeletedWeekString(optionNames) {
        var map = weekShortMapToWeek();

        if (optionNames.length > 0) {
            return optionNames.length == 1 ? strings.common_schedule_repeat_mode_single + map.get(optionNames[0]) : optionNames.join(" ");
        } else {
            return strings.common_schedule_repeat_mode_never;
        }
    }

    module.exports = {
        weekString: function weekString() {
            return _weekString;
        },
        weekShortString: function weekShortString() {
            return _weekShortString;
        },
        getSeletedWeekString: function getSeletedWeekString(val) {
            return _getSeletedWeekString(val);
        }
    };
},10568,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/WeekStringFormatUtility.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _Cloud = _require(_dependencyMap[0]);

	var _Cloud2 = babelHelpers.interopRequireDefault(_Cloud);

	var MONO_CAP = ["POWER", "BRIGHT"];
	var LAMP_CAP = ["POWER", "BRIGHT", "CT"];
	var COLOR_CAP = ["POWER", "BRIGHT", "CT", "COLOR"];

	function getCategory(arr) {
		var devicesCapabilitys = [];

		var devicesCapObj = _Cloud2.default.getDevicesCapability();

		devicesCapabilitys = arr.map(function (item) {
			var capabilitys = devicesCapObj[item];
			return JSON.parse(capabilitys || "[]");
		});
		var intersectArray = devicesCapabilitys[0];
		devicesCapabilitys.map(function (item) {
			item = new Set([].concat(babelHelpers.toConsumableArray(item)));
			var newSet = new Set([].concat(babelHelpers.toConsumableArray(intersectArray)).filter(function (x) {
				return item.has(x);
			}));
			intersectArray = [].concat(babelHelpers.toConsumableArray(newSet));
		});

		if (isEqual(MONO_CAP, intersectArray)) {
			return "mono";
		} else if (isEqual(LAMP_CAP, intersectArray)) {
			return "lamp";
		} else if (isEqual(COLOR_CAP, intersectArray)) {
			return "color";
		} else {
			return "mono";
		}
	}

	function isEqual(arr1, arr2) {
		return JSON.stringify(arr1.sort()) === JSON.stringify(arr2.sort());
	}

	module.exports = {
		category: function category(arr) {
			return getCategory(arr);
		}
	};
},10571,[10526],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Category.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  var _CommonYeelightModules = _require(_dependencyMap[0]);

  var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

  var _reactNative = _require(_dependencyMap[1]);

  var API = _require(_dependencyMap[2]);

  var Cloud = _require(_dependencyMap[3]);

  var YLUI = _CommonYeelightModules2.default.YLUI,
      YLIBluetoothLE = _CommonYeelightModules2.default.YLIBluetoothLE,
      YLBluetoothEvent = _CommonYeelightModules2.default.YLBluetoothEvent;

  Object.size = function (obj) {
    var size = 0,
        key;

    for (key in obj) {
      if (obj.hasOwnProperty(key)) size++;
    }

    return size;
  };

  var SearchMibandErrorCode = {
    success: "success",
    bluetoothNotOn: "bluetoothNotOn",
    notFound: "notFound"
  };

  var MibandSearchManagerAndroid = function () {
    function MibandSearchManagerAndroid() {
      var _this = this;

      babelHelpers.classCallCheck(this, MibandSearchManagerAndroid);
      this.dataSource = {};
      this.idToMacAdress = {};
      Cloud.getNewBindDevices(function (result) {
        _this.newBindDevice = result;
      });
    }

    babelHelpers.createClass(MibandSearchManagerAndroid, [{
      key: "beaconMacServiceOption0",
      value: function beaconMacServiceOption0() {
        return "FEE7";
      }
    }, {
      key: "beaconMacServiceOption1",
      value: function beaconMacServiceOption1() {
        return "FEE0";
      }
    }, {
      key: "beaconAlertService",
      value: function beaconAlertService() {
        return "1802";
      }
    }, {
      key: "beaconAlertServiceShakeCharacteristic",
      value: function beaconAlertServiceShakeCharacteristic() {
        return "2A06";
      }
    }, {
      key: "getMibandAlertServiceAllCharacteristic",
      value: function getMibandAlertServiceAllCharacteristic(peripheralId) {
        var _this2 = this;

        return new Promise(function (fulfill, reject) {
          YLIBluetoothLE.discoverCharacteristics(peripheralId, _this2.beaconAlertService(), [_this2.beaconAlertServiceShakeCharacteristic()], function (error, service, characteristics) {
            var newCharacteristics = {};

            for (var key in characteristics) {
              if (characteristics.hasOwnProperty(key)) {
                var element = characteristics[key];

                var newElement = _this2.parseCharacteristic(element);

                newCharacteristics[newElement.shortUUID] = newElement;
              }
            }

            var characteristic = newCharacteristics[_this2.beaconAlertServiceShakeCharacteristic()];

            var newService = _this2.parseService(service);

            if (!error && newService && newService.hasOwnProperty("shortUUID") && newService.shortUUID == _this2.beaconAlertService() && characteristic && characteristic.hasOwnProperty("shortUUID") && characteristic.shortUUID == _this2.beaconAlertServiceShakeCharacteristic()) {
              if (fulfill) {
                fulfill();
              }
            } else {
              if (reject) {
                reject(error);
              }
            }
          });
        });
      }
    }, {
      key: "prepareForScan",
      value: function prepareForScan() {
        this.connectedMiband = null;
      }
    }, {
      key: "scanMibands",
      value: function scanMibands() {
        var _this3 = this;

        this.prepareForScan();
        return new Promise(function (fulfill, reject) {
          _this3._didDiscoverPeripheralListener = YLBluetoothEvent.bluetoothDeviceDiscovered(function (perpheral) {
            _this3._showDevicelist(perpheral);
          });
          YLIBluetoothLE.startScan([], {}, function (error) {});
          YLIBluetoothLE.isEnabled(function (isEnable) {
            if (!isEnable) {
              if (reject) {
                reject(new Error(SearchMibandErrorCode.bluetoothNotOn));
              }
            } else {
              setTimeout(function () {
                YLIBluetoothLE.stopScan();
                return _this3.connectMiband(_this3.connectedMiband).then(function (macAddress) {
                  fulfill(macAddress);
                }).catch(reject);
              }, 1000);
            }
          });
        });
      }
    }, {
      key: "getMibandByMacAddress",
      value: function getMibandByMacAddress(macAddress) {
        if (this.getConnectedMibandsAddress() == macAddress) {
          return this.connectedMiband;
        }
      }
    }, {
      key: "disconnectMibands",
      value: function disconnectMibands() {
        this.connectedMiband = null;
      }
    }, {
      key: "_getFormatMac",
      value: function _getFormatMac(macAddress) {
        var macAddressArray = macAddress.match(/.{1,2}/g);
        return macAddressArray.join(":");
      }
    }, {
      key: "getBeaconkey",
      value: function getBeaconkey() {
        return "ffffffffffffffffffffffff";
      }
    }, {
      key: "getEId",
      value: function getEId() {
        return 8193;
      }
    }, {
      key: "getMibandProductIDByName",
      value: function getMibandProductIDByName(name) {
        return 21;
      }
    }, {
      key: "bindMibandByMacAddress",
      value: function bindMibandByMacAddress(macAddress) {
        if (!macAddress) {
          return;
        }

        var perpheral = this.getMibandByMacAddress(macAddress);

        if (!perpheral) {
          return;
        }

        API.enableMibandSleep(true, function (response, returnValue) {
          if (response) {} else {}
        });
        var realMac;

        if (typeof perpheral.macAddress != "undefined") {
          realMac = perpheral.macAddress.toString();
        } else {}

        var pId = this.getMibandProductIDByName(perpheral.name);

        if (realMac && pId) {
          API.bindMiband(realMac, this.getEId(), pId, this.getBeaconkey(), function (isSuccess, response) {
            if (isSuccess) {
              _reactNative.DeviceEventEmitter.emit("FetchMibandBindInfo", null);
            }
          });
        }
      }
    }, {
      key: "getConnectedMibandsAddress",
      value: function getConnectedMibandsAddress() {
        if (this.getConnectedMibands()) {
          return this.getConnectedMibands().address;
        } else {
          return null;
        }
      }
    }, {
      key: "shakeMibandByMacAddress",
      value: function shakeMibandByMacAddress(macAddress) {
        if (macAddress == this.getConnectedMibandsAddress()) {
          this.shakeMiband(macAddress);
        }
      }
    }, {
      key: "parseService",
      value: function parseService(service) {
        var uuid = service.UUID;
        var uuids = uuid.split("-");

        if (uuids.length > 0) {
          var newId = uuids[0].replace(/^0+/, "");
          service.shortUUID = newId.toUpperCase();
        }

        return service;
      }
    }, {
      key: "parseCharacteristic",
      value: function parseCharacteristic(characteristic) {
        var uuid = characteristic.UUID;
        var uuids = uuid.split("-");

        if (uuids.length > 0) {
          var newId = uuids[0].replace(/^0+/, "");
          characteristic.shortUUID = newId.toUpperCase();
        }

        return characteristic;
      }
    }, {
      key: "discoverServices",
      value: function discoverServices(peripheralId, serviceIds) {
        var _this4 = this;

        return new Promise(function (fulfill, reject) {
          YLIBluetoothLE.discoverServices(peripheralId, serviceIds, function (error, peri, services) {
            if (error) {
              if (reject) {
                reject(error);
              }
            } else {
              if (fulfill) {
                var newServices = {};

                for (var key in services) {
                  if (services.hasOwnProperty(key)) {
                    var element = services[key];

                    var newElement = _this4.parseService(element);

                    newServices[newElement.shortUUID] = newElement;
                  }
                }

                fulfill(newServices);
              }
            }
          });
        });
      }
    }, {
      key: "_showDevicelist",
      value: function _showDevicelist(peripheral) {
        if (!peripheral) {
          return;
        } else {}

        if (!peripheral.rssi && peripheral.RSSI) {
          peripheral.rssi = peripheral.RSSI;
        }

        if (peripheral.peripheral) {
          peripheral = babelHelpers.extends({}, peripheral, peripheral.peripheral);
        }

        if (peripheral.address && !peripheral.identifier) {
          peripheral.identifier = peripheral.address;
          peripheral.macAddress = peripheral.address;
        }

        if (peripheral && peripheral.name && peripheral.name.length > 0 && parseInt(peripheral.rssi) > -10000 && parseInt(peripheral.rssi) <= 0) {
          if (this.isSupportedDevices(peripheral.name)) {
            if (this.connectedMiband) {
              if (peripheral.rssi > this.connectedMiband.rssi) {
                this.connectedMiband = peripheral;
              }
            } else {
              this.connectedMiband = peripheral;
            }
          }
        }
      }
    }, {
      key: "getConnectedMibands",
      value: function getConnectedMibands() {
        return this.connectedMiband;
      }
    }, {
      key: "connectMiband",
      value: function connectMiband(perpheral) {
        var _this5 = this;

        return new Promise(function (fulfill, reject) {
          YLIBluetoothLE.connect(perpheral.identifier, {}, function (error, peripheral) {
            YLUI.dismissTips();
            var realThis = _this5;

            var completion = function completion() {
              var perpheral = realThis.getConnectedMibands();

              if (perpheral != null && perpheral.macAddress != null) {
                var macAddress = perpheral.macAddress;
                var perpheralId = perpheral.identifier;
                realThis.shakeMiband(perpheralId);

                if (fulfill) {
                  fulfill(macAddress);
                }
              } else {
                if (reject) {
                  reject(new Error("fail"));
                }
              }
            };

            if (error) {
              var errorStr = JSON.stringify(error);
            } else {
              if (_this5.isSupportedDevices(perpheral.name)) {
                _this5.discoverServices(perpheral.identifier, [_this5.beaconAlertService()]).then(function (services) {
                  if (services[_this5.beaconAlertService()] != undefined) {
                    _this5.getMibandAlertServiceAllCharacteristic(perpheral.identifier).then(function () {
                      if (completion) {
                        completion();
                      }
                    }, function (error) {
                      if (reject) {
                        reject(error);
                      }
                    }).catch(function (error) {
                      if (reject) {
                        reject(error);
                      }
                    });
                  }
                }, function (error) {
                  if (reject) {
                    reject(error);
                  }
                });
              } else {}
            }
          });
        });
      }
    }, {
      key: "shakeMiband",
      value: function shakeMiband(peripheralId) {
        YLIBluetoothLE.writeWithoutResponse(peripheralId, this.beaconAlertService(), this.beaconAlertServiceShakeCharacteristic(), "03", function (error) {
          if (!error) {} else {
            var errorStr = JSON.stringify(error);
          }
        });
      }
    }, {
      key: "isSupportedDevices",
      value: function isSupportedDevices(deviceName) {
        if (this.isNewDevices(deviceName) || this.isMiBand1Devices(deviceName)) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "isNewDevices",
      value: function isNewDevices(deviceName) {
        var findItems = this.newBindDevice.find(function (item) {
          return deviceName.toLowerCase().indexOf(item.toLowerCase()) !== -1;
        });
        return findItems;
      }
    }, {
      key: "isMiBand1Devices",
      value: function isMiBand1Devices(deviceName) {
        if (this.isNewDevices(deviceName)) {
          return false;
        }

        var findItems = ["MI", "MI1A", "MI1S"].find(function (item) {
          return deviceName.toLowerCase().indexOf(item.toLowerCase()) !== -1;
        });
        return findItems;
      }
    }]);
    return MibandSearchManagerAndroid;
  }();

  module.exports = new MibandSearchManagerAndroid();
},10574,[10007,10033,10553,10526],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MibandSearchManager.android.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    function int2Argb(number) {
        var r = number >> 16 & 255;
        var g = number >> 8 & 255;
        var b = number & 255;
        return {
            r: r,
            g: g,
            b: b
        };
    }

    function rgb2hsv(r, g, b) {
        var rr,
            gg,
            bb,
            h,
            s,
            v = Math.max(r, g, b),
            diff = v - Math.min(r, g, b),
            diffc = function diffc(c) {
            return (v - c) / 6 / diff + 0.5;
        };

        if (diff == 0) {
            h = s = 0;
        } else {
            s = diff / v;
            rr = diffc(r);
            gg = diffc(g);
            bb = diffc(b);

            if (r === v) {
                h = bb - gg;
            } else if (g === v) {
                h = 0.3333333333333333 + rr - bb;
            } else if (b === v) {
                h = 0.6666666666666666 + gg - rr;
            }

            if (h < 0) {
                h += 1;
            } else if (h > 1) {
                h -= 1;
            }
        }

        return {
            h: h,
            s: s,
            v: v
        };
    }

    module.exports = {
        getIntFromArgb: function getIntFromArgb(w, r, g, b) {},
        getArgbObjectFromInt: function getArgbObjectFromInt(number) {
            return int2Argb(number);
        },
        getHueFromInt: function getHueFromInt(number) {
            var c = int2Argb(number);
            var hsv = rgb2hsv(c.r, c.g, c.b);
            return hsv.h;
        }
    };
},10577,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/SignedIntConverter.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var LightMode = {
    get color() {
      return 'color';
    },

    get ct() {
      return 'ct';
    },

    get flow() {
      return 'flow';
    },

    get nightlight() {
      return 'nightlight';
    },

    get none() {
      return 'none';
    },

    modeCheck: function modeCheck(num, flow, nightlight) {
      if (!num && !flow) {
        return this.none;
      } else {
        if (flow) {
          return this.flow;
        } else if (nightlight && nightlight > 0) {
          return this.nightlight;
        } else if (num == 2) {
          return this.ct;
        } else {
          return this.color;
        }
      }
    },
    categoryModeCheck: function categoryModeCheck(num, flow, nightlight, category) {
      if (!num && !flow) {
        return this.none;
      } else {
        if (category === "mono") {
          return this.none;
        } else if (category === "lamp" || category === "ceiling") {
          return this.ct;
        }

        if (flow) {
          return this.flow;
        } else if (nightlight && nightlight > 0) {
          return this.nightlight;
        } else if (num == 2) {
          return this.ct;
        } else {
          return this.color;
        }
      }
    }
  };
  module.exports = LightMode;
},10580,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/LightMode.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var CommonYeelightModulesDataSource = _require(_dependencyMap[0]).CommonYeelightModulesDataSource;

	var AppVersionDataSource = CommonYeelightModulesDataSource.AppVersionDataSource;
	var version = AppVersionDataSource.appVersion;
	module.exports = version;
},10583,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/AppVersion.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var LampLightMode = {
    get normal() {
      return 'normal';
    },

    get reading() {
      return 'reading';
    },

    get pc() {
      return 'pc';
    },

    get off() {
      return 'off';
    },

    get none() {
      return 'none';
    },

    modeCheck: function modeCheck(num, flow, nightlight) {
      if (!num && !flow) {
        return this.none;
      } else {
        if (flow) {
          return this.flow;
        } else if (nightlight && nightlight > 0) {
          return this.nightlight;
        } else if (num == 2) {
          return this.ct;
        } else {
          return this.color;
        }
      }
    }
  };
  module.exports = LampLightMode;
},10586,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/LampLightMode.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var LightMode = _require(_dependencyMap[0]);

  var LightDataType = {
    off: 0,
    colorTemperature1: 1,
    color: 2,
    colorTemperature2: 3,
    flow: 4,
    complexColorFlow: 5,
    moon: 6,
    colorTemperatureFlow: 7,
    brightnessFlow: 8,
    bundleScene: 9,
    toLightMode: function toLightMode(lightDataType) {
      var lightMode = LightMode.none;

      if (1 == lightDataType || 3 == lightDataType || 6 == lightDataType) {
        lightMode = LightMode.ct;
      } else if (2 == lightDataType) {
        lightMode = LightMode.color;
      } else if (4 == lightDataType || 5 == lightDataType || 7 == lightDataType || 8 == lightDataType) {
        lightMode = LightMode.flow;
      } else if (6 == lightDataType) {
        lightMode = LightMode.nightlight;
      }

      return lightMode;
    }
  };
  module.exports = LightDataType;
},10589,[10580],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/LightDataType.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var LightMode = _require(_dependencyMap[1]);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var Api = CommonYeelightModules.Api,
      YLDevice = CommonYeelightModules.YLDevice,
      YLHostFile = CommonYeelightModules.YLHostFile;
  var DefaultLightKey = YLDevice.deviceId + "DefaultLightKey";
  var defaultLightSwitchState;
  var ApplicationModel = {
    getDefaultLight: function getDefaultLight(callback) {
      var _this = this;

      _reactNative.AsyncStorage.getItem(DefaultLightKey, function (errs, result) {
        if (callback) {
          callback(JSON.parse(result));
        }
      });
    },
    setDefaultLight: function setDefaultLight(light) {
      _reactNative.AsyncStorage.setItem(DefaultLightKey, JSON.stringify(light), function (errs) {
        if (errs) {}

        if (!errs) {}
      });
    },

    get internalDefaultLightSwitchState() {
      return [{
        colorTemperature: 3200,
        brightness: 39,
        lightMode: LightMode.ct
      }, {
        colorTemperature: 3200,
        brightness: 39,
        lightMode: LightMode.ct
      }, {
        brightness: 39,
        lightMode: LightMode.nightlight
      }];
    },

    get defaultLightSwitchStateKey() {
      return 'default_light_switch_state_key' + YLDevice.deviceId;
    },

    convertSwitchStateFromStringToObject: function convertSwitchStateFromStringToObject(stateStr) {
      var states = stateStr.split('|');
      var data = [];

      for (var index in states) {
        var stateProperty = states[index].split(',');

        if (stateProperty.length > 0) {
          var type = stateProperty[0];
          var value = {};

          if (type == LightMode.ct && stateProperty.length >= 3) {
            value = {
              lightMode: LightMode.ct,
              colorTemperature: parseInt(stateProperty[1]),
              brightness: parseInt(stateProperty[2])
            };
            data.push(value);
          } else if (type == LightMode.nightlight && stateProperty.length >= 2) {
            value = {
              lightMode: LightMode.nightlight,
              brightness: parseInt(stateProperty[1])
            };
            data.push(value);
          }
        }
      }

      return data;
    },
    convertSwitchStateFromObjectToString: function convertSwitchStateFromObjectToString(stateObj) {
      var returnStr = '';

      for (var index in stateObj) {
        var value = stateObj[index];

        if (value.lightMode == LightMode.ct) {
          returnStr += value.lightMode + ',' + value.colorTemperature + ',' + value.brightness;
        } else if (value.lightMode == LightMode.nightlight) {
          returnStr += value.lightMode + ',' + value.brightness;
        }

        if (index < stateObj.length - 1) {
          returnStr += '|';
        } else {}
      }

      return returnStr;
    },
    requestDefaultLightSwitchState: function requestDefaultLightSwitchState(callback) {
      var _this2 = this;

      Api.getDefaultLightSwitchState(function (success, response) {
        var result = response['result'];

        if (result && result.length > 0) {
          var state = _this2.convertSwitchStateFromStringToObject(result[0]);

          _this2.saveDefaultLightSwitchStateLocal(state);

          if (callback) {
            callback(state);
          }
        }
      });
    },
    getDefaultLightSwitchState: function getDefaultLightSwitchState(callback) {
      var _this3 = this;

      if (!defaultLightSwitchState) {
        YLHostFile.readFile(this.defaultLightSwitchStateKey, function (s, str) {
          if (str && typeof str === 'string') {
            defaultLightSwitchState = JSON.parse(str);
          }

          if (!defaultLightSwitchState) {
            defaultLightSwitchState = _this3.internalDefaultLightSwitchState;
          }

          if (callback) {
            callback(defaultLightSwitchState);
          }
        });
      } else {
        if (callback) {
          callback(defaultLightSwitchState);
        }
      }

      this.requestDefaultLightSwitchState(function (state) {
        if (callback) {
          callback(state);
        }
      });
    },

    get defaultLightSwitchState() {
      return defaultLightSwitchState;
    },

    set defaultLightSwitchState(value) {
      defaultLightSwitchState = value;
    },

    saveDefaultLightSwitchStateLocal: function saveDefaultLightSwitchStateLocal(state) {
      this.defaultLightSwitchState = state;
      YLHostFile.writeFile(this.defaultLightSwitchStateKey, JSON.stringify(state), function (isSuccess) {});
    },
    saveDefaultLightSwitchStateLocalAndCloud: function saveDefaultLightSwitchStateLocalAndCloud(state) {
      this.saveDefaultLightSwitchStateLocal(state);
      this.postDefaultLightSwitchStateToCloud(state);
    },
    postDefaultLightSwitchStateToCloud: function postDefaultLightSwitchStateToCloud(value) {
      var saveStr = this.convertSwitchStateFromObjectToString(value);
      Api.setDefaultLightSwitchState(saveStr, function (success, response) {});
    }
  };
  module.exports = ApplicationModel;
},10592,[10033,10580,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/ApplicationModel.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Api = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
  var LightMode = CommonYeelightModules.LightMode,
      Api = CommonYeelightModules.Api,
      LightDataType = CommonYeelightModules.LightDataType,
      Tools = CommonYeelightModules.Tools,
      YLAccount = CommonYeelightModules.YLAccount,
      YLDevice = CommonYeelightModules.YLDevice,
      PluginInfo = CommonYeelightModules.PluginInfo,
      SubModelFeatConfigEnum = CommonYeelightModules.SubModelFeatConfigEnum;
  var DeviceModelDataSource = CommonYeelightModulesDataSource.DeviceModelDataSource;
  var deviceName = YLDevice.deviceName;
  var deviceModelDataSource = new DeviceModelDataSource({});
  var isSaveLastState = null;
  var initPowerOption = null;
  var DeviceModel = {
    get deviceName() {
      return deviceName;
    },

    set deviceName(value) {
      deviceName = value;
    },

    get isSaveLastState() {
      return isSaveLastState;
    },

    set isSaveLastState(value) {
      isSaveLastState = value;
    },

    get initPowerOption() {
      return initPowerOption;
    },

    set initPowerOption(value) {
      initPowerOption = value;
    },

    get maxCT() {
      if (this.isInMainLight) {
        if (deviceModelDataSource.maxCT) {
          return deviceModelDataSource.maxCT;
        } else {
          return 6500;
        }
      } else {
        if (deviceModelDataSource.ambiMaxCT) {
          return deviceModelDataSource.ambiMaxCT;
        } else {
          return 6500;
        }
      }
    },

    get isSupportBgLight() {
      return deviceModelDataSource.isSupportBgLight;
    },

    get isMeshDevice() {
      return deviceModelDataSource.isMeshDevice;
    },

    get minCT() {
      if (this.isInMainLight) {
        if (deviceModelDataSource.minCT) {
          return deviceModelDataSource.minCT;
        } else {
          return 1700;
        }
      } else {
        if (deviceModelDataSource.ambiMinCT) {
          return deviceModelDataSource.ambiMinCT;
        } else {
          return 1700;
        }
      }
    },

    get isFixedColorTemperature() {
      return deviceModelDataSource.isFixedColorTemperature;
    },

    get fixedColorTemperature() {
      return deviceModelDataSource.fixedColorTemperature;
    },

    get supportAmbience() {
      return deviceModelDataSource.supportAmbience;
    },

    get supportSwingAngle() {
      return deviceModelDataSource.supportSwingAngle;
    },

    getDisplayBrightness: function getDisplayBrightness(brightness) {
      return 0.0055 * brightness + 0.4;
    },
    ct2Saturation: function ct2Saturation(ct) {
      return 0.6 / (this.maxCT - this.minCT) * (this.maxCT - ct) + 0.4;
    },
    CT2Value: function CT2Value(ct, isRight) {
      var MaxValue = this.getMaxCT;
      var MinValue = this.getMinCT;

      if (isRight) {
        return ct / ((MaxValue - MinValue) * 2) + (MaxValue - 2 * MinValue) / ((MaxValue - MinValue) * 2);
      } else {
        return ct / -((MaxValue - MinValue) * 2) + MaxValue / ((MaxValue - MinValue) * 2);
      }
    },
    applyLight: function applyLight(object) {
      var v;
      var bright;
      var mode = LightMode.ct;
      var wrgb = object.wrgb;
      var nl_br = this.nl_br;
      var isInMainLight = true;

      if (object.hasOwnProperty('isInMainLight')) {
        isInMainLight = object.isInMainLight;
      }

      v = this.CT2Value(object.ct, this.isRight);

      if (undefined == object.bright || object.bright <= 0) {
        bright = this.brightness;
      } else {
        bright = object.bright;
      }

      if (object.nl_br && object.nl_br > 0) {
        nl_br = object.nl_br;
      }

      var colorflow = object.cf;
      var hue = Tools.getHueFromWrgb(wrgb);

      if (LightDataType.colorTemperature1 == object.mode) {
        mode = LightMode.ct;

        if (object.set_scene) {
          this._setCt(4000, object.bright, isInMainLight);
        }
      }

      if (LightDataType.colorTemperature2 == object.mode) {
        mode = LightMode.ct;

        if (object.set_scene) {
          this._setCt(object.ct, object.bright, isInMainLight);
        }
      } else if (LightDataType.color == object.mode) {
        mode = LightMode.color;

        if (object.set_scene) {
          this._setRgb(object.wrgb, object.bright, isInMainLight);
        }
      } else if (LightDataType.flow == object.mode || LightDataType.complexColorFlow == object.mode || LightDataType.colorTemperatureFlow == object.mode || LightDataType.brightnessFlow == object.mode) {
        mode = LightMode.flow;

        if (object.set_scene && object.cf) {
          this._setCf(object.cf, isInMainLight);
        }
      } else if (LightDataType.moon == object.mode) {
        mode = LightMode.nightlight;

        if (object.set_scene) {
          if (!isNaN(object.nl_br)) {
            this._setNightLight(object.nl_br);
          } else if (!isNaN(object.bright)) {
            this._setNightLight(object.bright);
          }
        }
      } else if (object.mode == LightDataType.bundleScene) {
        var param0 = this._parseParam(object.params[0]);

        var paramString0 = param0.join(',');

        var param1 = this._parseParam(object.params[1]);

        var paramString1 = param1.join(',');
        Api.applySceneBundle([paramString0, paramString1], function (isSuccess, response) {});
      }
    },
    _parseParam: function _parseParam(object) {
      var v;
      var bright;
      var wrgb = object.wrgb;
      var nl_br = this.nl_br;
      v = this.CT2Value(object.ct, this.isRight);

      if (undefined == object.bright || object.bright <= 0) {
        bright = this.brightness;
      } else {
        bright = object.bright;
      }

      if (object.nl_br && object.nl_br > 0) {
        nl_br = object.nl_br;
      }

      var colorflow = object.cf || object.colorflow;
      var hue = Tools.getHueFromWrgb(wrgb);

      if (LightDataType.colorTemperature1 == object.mode || LightDataType.colorTemperature2 == object.mode) {
        return ["\"ct\"", object.color_temperature, object.bright];
      } else if (LightDataType.color == object.mode) {
        return ["\"color\"", object.wrgb, object.bright];
      } else if (LightDataType.flow == object.mode || LightDataType.complexColorFlow == object.mode || LightDataType.colorTemperatureFlow == object.mode || LightDataType.brightnessFlow == object.mode) {
        if (typeof object.colorflow == "string") {
          var cf = JSON.parse(object.colorflow);
          var cf0 = "\"" + cf[0] + "\"";
          var cf3 = "\"" + cf[3] + "\"";

          if (cf.length >= 4) {
            return [cf0, cf[1], cf[2], cf3];
          } else {
            return [""];
          }
        } else {
          return [""];
        }

        return [object.colorflow];
      } else if (LightDataType.moon == object.mode) {
        var _bright = 0;

        if (!isNaN(object.nl_br)) {
          _bright = object.nl_br;
        } else if (!isNaN(object.bright)) {
          _bright = object.bright;
        } else if (!isNaN(object.night_bright)) {
          _bright = object.night_bright;
        }

        return ["\"nightlight\"", _bright];
      } else if (LightDataType.off == object.mode) {
        return ["\"off\""];
      }
    },
    _setCt: function _setCt(ct, bright) {
      var isInMainLight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      if (isInMainLight) {
        ct = parseInt(ct);
        bright = parseInt(bright);
        Api.setScene('ct', ct, bright, function (isSuceess, response) {});
      } else {
        ct = parseInt(ct);
        bright = parseInt(bright);
        Api.setBgScene('ct', ct, bright, function (isSuceess, response) {});
      }
    },
    _setCf: function _setCf(string) {
      var isInMainLight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (isInMainLight) {
        var array = JSON.parse(string);
        Api.setCfScene(array, function (isSuceess, response) {});
      } else {
        var array = JSON.parse(string);
        Api.setBgCfScene(array, function (isSuceess, response) {});
      }
    },
    _setNightLight: function _setNightLight(nl_br) {
      var nl_br = parseInt(nl_br);
      Api.setNightLightScene(nl_br, function (isSuccess, response) {});
    },
    _setRgb: function _setRgb(wrgb, brightness) {
      var isInMainLight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      if (isInMainLight) {
        brightness = parseInt(brightness);
        var i = Tools.wrgb2Int(wrgb);
        Api.setScene("color", i, brightness, function (isSuceess, response) {});
      } else {
        brightness = parseInt(brightness);
        var i = Tools.wrgb2Int(wrgb);
        Api.setBgScene("color", i, brightness, function (isSuceess, response) {});
      }
    },

    get subModelCapability() {
      return deviceModelDataSource.subModelCapability;
    },

    getSupportSunriseSunset: function getSupportSunriseSunset(callback) {
      var configMap = this.subModelCapability;

      if (configMap && configMap[SubModelFeatConfigEnum.SunriseSunset] != undefined) {
        var config = configMap[SubModelFeatConfigEnum.SunriseSunset];
        Api.getSubModelProp(function (success, data) {
          if (success) {
            var re = data.result[0];

            if (re == "0" || re == "") {
              callback(deviceModelDataSource.supportSunriseSunset);
            } else {
              callback(config.includes(parseInt(re)));
            }
          } else {
            callback(false);
          }
        });
      } else {
        callback(deviceModelDataSource.supportSunriseSunset);
      }
    },

    get supportInitPowerOption() {
      return deviceModelDataSource.supportInitPowerOption;
    },

    get supportAutoSaveLight() {
      return deviceModelDataSource.supportAutoSaveLight;
    },

    get supportSaveDefaultLight() {
      return deviceModelDataSource.supportSaveDefaultLight;
    },

    get supportSmartSwitch() {
      return deviceModelDataSource.supportSmartSwitch;
    },

    get YeelightFrimwareVersion() {
      return deviceModelDataSource.YeelightFrimwareVersion;
    },

    get isShared() {
      return !YLDevice.isOwner;
    },

    macAddress: function macAddress() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        if (_this.macAddress && _this.macAddress.length > 0) {
          resolve(_this.macAddress);
        } else {
          YLDevice.mac.then(function (mac) {
            resolve(mac);
          }, reject);
        }
      });
    },
    isYilaiModel: function isYilaiModel() {
      return PluginInfo.band() == "yilai";
    },
    getPrivacyPath: function getPrivacyPath() {
      return PluginInfo.getPrivacyPath();
    },
    getLicensePath: function getLicensePath() {
      return PluginInfo.getLicensePath();
    },

    get supportDefaultOpenHeat() {
      if (deviceModelDataSource.supportDefaultOpenHeat) {
        return deviceModelDataSource.supportDefaultOpenHeat;
      } else {
        return false;
      }
    }

  };
  DeviceModel.nightlight = {
    enableDelayTurnOffTime: false,
    beginTime: 1320,
    endTime: 360,
    delayTurnOffTime: 15
  };
  DeviceModel.isInMainLight = true;
  module.exports = DeviceModel;
},10595,[10553,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/DeviceModel.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = px2dp;

  var _reactNative = _require(_dependencyMap[0]);

  function px2dp(uiElementPx) {
    return uiElementPx * _reactNative.PixelRatio.get();
  }
},10598,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/px2dp.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var StatusBarManager = _reactNative.NativeModules.StatusBarManager;
  var primaryColor = '#f46231';
  var secondaryColor = '#eea95b';
  var defaultColor = '#252527';
  var defaultTextColor = '#ccc';
  var dimKey = "screen";

  var _Dimensions$get = _reactNative.Dimensions.get(dimKey),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ipad = width >= 768;
  var ratio = ipad ? 1 : width / 375.0;
  var ratioHeight = ipad ? 1 : height / 667.0;
  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XR_WIDTH = 414;
  var XR_HEIGHT = 896;
  var APPBAR_HEIGHT = 55;
  var NAVIGATION_BAR_HEIGHT = (_reactNative.StatusBar.currentHeight || 0) + APPBAR_HEIGHT;

  var pixelSize = function () {
    var pixelRatio = _reactNative.PixelRatio.get();

    if (pixelRatio >= 3) return 0.333;else if (pixelRatio >= 2) return 0.5;else return 1;
  }();

  var Theme = {
    getScreenSize: function getScreenSize() {
      return _reactNative.Dimensions.get(dimKey);
    },

    get isAndroid() {
      return true;
    },

    get APPBAR_HEIGHT() {
      return APPBAR_HEIGHT;
    },

    get NAVIGATION_BAR_HEIGHT() {
      return this.isAndroid ? NAVIGATION_BAR_HEIGHT : NAVIGATION_BAR_HEIGHT + 20 + this.APPBAR_MARGINTOP;
    },

    get isIPhoneX() {
      var D_WIDTH = width;
      var D_HEIGHT = height;
      return false;
    },

    get APPBAR_MARGINTOP() {
      return this.isIPhoneX ? 24 : 0;
    },

    get APPBAR_MARGINBottom() {
      return this.isIPhoneX ? 34 : 0;
    },

    get APPBAR_MARGINBottomSmall() {
      return this.isIPhoneX ? 10 : 0;
    },

    get STATUSBAR_HEIGHT() {
      {
        return _reactNative.StatusBar.currentHeight;
      }
    },

    get NAVBAR_HEIGHT() {
      return 55;
    },

    sbColor: defaultColor,
    sbHeight: 40,
    sbBtnPaddingTop: 8,
    sbBtnPaddingBottom: 8,
    sbBtnPaddingLeft: 8,
    sbBtnPaddingRight: 8,
    sbBtnTitleColor: '#989898',
    sbBtnTextFontSize: 13,
    sbBtnActiveTitleColor: primaryColor,
    sbBtnActiveTextFontSize: 13,
    sbIndicatorLineColor: primaryColor,
    sbIndicatorLineWidth: 2,
    sbIndicatorPositionPadding: 0,
    nbLeftButtonTintColor: 'rgba(0, 0, 0, 0.5)',
    nbRightButtonTintColor: 'rgba(0, 0, 0, 0.5)',
    nbTitleColor: '#333333',
    nbTitleFontSize: 17,
    nbTitleFontFamily: 'PingFangSC-Regular',
    nbTitleFontWeight: '400',
    nbLeftButtonLightTintColor: 'rgba(0, 0, 0, 0.5)',
    nbRightButtonLightTintColor: 'rgba(0, 0, 0, 0.5)',
    nbTitleLightColor: '#333333',
    asItemDisabledOpacity: 0.65,
    asItemMinHeight: 53,
    asItemPaddingLeft: 12,
    asItemPaddingRight: 12,
    asItemPaddingTop: 8,
    asItemPaddingBottom: 8,
    asItemColor: 'rgba(255, 255, 255, 0.9)',
    asItemSeparatorColor: 'rgba(127, 127, 127, 0.3)',
    asItemSeparatorLineWidth: pixelSize,
    asItemTitleColor: '#000',
    asItemTitleAlign: 'center',
    asItemFontSize: 19,
    asCancelItemColor: 'rgba(255, 255, 255, 0.9)',
    asCancelItemSeparatorColor: 'rgba(127, 127, 127, 0.3)',
    asCancelItemSeparatorLineWidth: 7,
    asCancelItemTitleColor: '#a94442',
    asCancelItemTitleAlign: 'center',
    asCancelItemFontSize: 19,
    switchTintColor: '#ececec',
    switchOnTintColor: "#1dc58a",
    nbBarButtonTintColor: function nbBarButtonTintColor(barStyle) {
      if (route.barStyle == 'default' || route.barStyle == 'light-content') {
        return this.nbLeftButtonTintColor;
      } else if (route.barStyle == 'dark-content') {
        return this.nbLeftButtonLightTintColor;
      } else {
        return this.nbLeftButtonLightTintColor;
      }
    },
    nbBarTitleColor: function nbBarTitleColor(barStyle) {
      if (route.barStyle == 'default' || route.barStyle == 'light-content') {
        return this.nbTitleColor;
      } else if (route.barStyle == 'dark-content') {
        return this.nbTitleLightColor;
      }
    },
    ratio: ratio,
    ratioHeight: ratioHeight
  };
  module.exports = Theme;
},10601,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/Theme.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var InitPowerOption = {
    Auto: 0,
    On: 1,
    Off: 2
  };
  var cronState = {
    disable: 'disable',
    normal: 'normal',
    selected: 'selected'
  };
  module.exports = {
    InitPowerOption: InitPowerOption,
    cronState: cronState
  };
},10604,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/DeviceTypeEnum.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _CommonYeelightModules = _require(_dependencyMap[0]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var YLDevice = _CommonYeelightModules2.default.YLDevice;
    var ListDataOperateType = {
        Normal: 0,
        Add: 1
    };
    var PomodoroDataEditType = {
        Edit: 0,
        Add: 1
    };
    var RemoteControllerType = {
        BLERC: 339,
        SEESAW: 950,
        BHFRC: 959,
        VENFAN: 1254,
        FANCL: 1678
    };
    var DeviceToken = void 0;

    function getDeviceToken(callback) {
        if (DeviceToken) {
            if (callback) {
                callback(DeviceToken);
            }
        } else {
            YLDevice.deviceToken(function (success, token) {
                if (success && token.length > 0) {
                    DeviceToken = token;

                    if (callback) {
                        callback(DeviceToken);
                    }
                } else {
                    DeviceToken = YLDevice.deviceId;

                    if (callback) {
                        callback(DeviceToken);
                    }
                }
            });
        }
    }

    var GlobalConstant = {
        RequestPomodoroListDataAndReload: 'RequestPomodoroListDataAndReload',
        EnableMainPageScrollView: 'EnableMainPageScrollView',
        EnablePomodoroStatisticsPageScrollView: 'EnablePomodoroStatisticsPageScrollView',
        DismissPluginLoading: "dismiss_loading",
        UserGuideViewMeasure: "UserGuideViewMeasure",
        UserGuideAdjustBrightness: "UserGuideAdjustBrightness",
        UpdateNavigation: "UpdateNavigation",
        OldFlowColorSetting: YLDevice.deviceId + 'FlowColorSetting.dat',

        get FlowColorSetting() {
            return new Promise(function (resolve, reject) {
                getDeviceToken(function (token) {
                    if (token.length > 0) {
                        resolve(token + '_FlowColorSetting.dat');
                    } else {
                        reject(' device token is undefined');
                    }
                });
            });
        },

        OldDELAYTIMERFILE: YLDevice.deviceId + 'DelayTimer.dat',

        get DELAYTIMERFILE() {
            return new Promise(function (resolve, reject) {
                getDeviceToken(function (token) {
                    if (token.length > 0) {
                        resolve(token + '_DelayTimer.dat');
                    } else {
                        reject(' device token is undefined');
                    }
                });
            });
        },

        get Bslamp2TouchIndicatorShowKey() {
            return new Promise(function (resolve, reject) {
                getDeviceToken(function (token) {
                    if (token.length > 0) {
                        resolve(token + '_Bslamp2TouchIndicatorShowKey.dat');
                    } else {
                        reject(' device token is undefined');
                    }
                });
            });
        },

        get LifeCycleDataKey() {
            return new Promise(function (resolve, reject) {
                getDeviceToken(function (token) {
                    if (token.length > 0) {
                        resolve(token + '_LifeCycleData.dat');
                    } else {
                        reject(' device token is undefined');
                    }
                });
            });
        }

    };
    var PomodoroStatisticsType = {
        usageTime: 0,
        timeManagement: 1
    };
    var TimeType = {
        week: 0,
        month: 1,
        year: 2
    };
    var MainControlFunction = {
        ct: 0,
        color: 1,
        flow: 2,
        power: 3,
        delayTimer: 4,
        colorPick: 5,
        nightlight: 6,
        collection: 7
    };
    var DaysRepeatOption = {
        repeatOnce: "repeatOnce",
        repeatEveryday: "repeatEveryday",
        repeatWorkday: "repeatWorkday",
        repeatWeekend: "repeatWeekend",
        repeatCustom: "repeatCustom"
    };
    module.exports = {
        ListDataOperateType: ListDataOperateType,
        PomodoroDataEditType: PomodoroDataEditType,
        RemoteControllerType: RemoteControllerType,
        GlobalConstant: GlobalConstant,
        PomodoroStatisticsType: PomodoroStatisticsType,
        TimeType: TimeType,
        getDeviceToken: getDeviceToken,
        MainControlFunction: MainControlFunction,
        DaysRepeatOption: DaysRepeatOption
    };
},10607,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/CommonTypeEnum.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  Date.prototype.format = function (format) {
    var o = {
      "M+": this.getMonth() + 1,
      "d+": this.getDate(),
      "h+": this.getHours(),
      "m+": this.getMinutes(),
      "s+": this.getSeconds(),
      "q+": Math.floor((this.getMonth() + 3) / 3),
      S: this.getMilliseconds()
    };
    if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));

    for (var k in o) {
      if (new RegExp("(" + k + ")").test(format)) format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
    }

    return format;
  };

  exports.Date = Date;
},10610,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/YLDate.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _index = _require(_dependencyMap[0]);

    var YLString = _require(_dependencyMap[1]);

    var maybePluralize = function maybePluralize(count, noun) {
        var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 's';
        return count === undefined ? noun + suffix : count + " " + noun + (count !== 1 ? suffix : '');
    };

    var MultilingualResources = function () {
        function MultilingualResources() {
            babelHelpers.classCallCheck(this, MultilingualResources);
        }

        babelHelpers.createClass(MultilingualResources, null, [{
            key: "hans",
            value: function hans() {
                return babelHelpers.extends({}, this.hansFunction(), this.hansStrings());
            }
        }, {
            key: "hansStrings",
            value: function hansStrings() {
                return babelHelpers.extends({}, _index.hans);
            }
        }, {
            key: "hansFunction",
            value: function hansFunction() {
                return {};
            }
        }, {
            key: "hantHK",
            value: function hantHK() {
                var object = this.hant();
                var newHk = _index.hant_hk;
                return babelHelpers.extends({}, object, newHk);
            }
        }, {
            key: "hantTW",
            value: function hantTW() {
                var object = this.hant();
                var newTw = this.hantTWStrings();
                return babelHelpers.extends({}, object, newTw);
            }
        }, {
            key: "hantTWStrings",
            value: function hantTWStrings() {
                return _index.hant_tw;
            }
        }, {
            key: "hant",
            value: function hant() {
                return babelHelpers.extends({}, this.hantFunction(), this.hantStrings());
            }
        }, {
            key: "hantStrings",
            value: function hantStrings() {
                return this.hantTWStrings();
            }
        }, {
            key: "hantFunction",
            value: function hantFunction() {
                return {};
            }
        }, {
            key: "en",
            value: function en() {
                return babelHelpers.extends({}, this.enFunction(), this.enStrings());
            }
        }, {
            key: "enFunction",
            value: function enFunction() {
                return {};
            }
        }, {
            key: "enStrings",
            value: function enStrings() {
                return _index.en;
            }
        }, {
            key: "es",
            value: function es() {
                return babelHelpers.extends({}, this.esFunction(), this.esStrings());
            }
        }, {
            key: "esFunction",
            value: function esFunction() {
                return {};
            }
        }, {
            key: "esStrings",
            value: function esStrings() {
                return _index.es;
            }
        }, {
            key: "ko",
            value: function ko() {
                return babelHelpers.extends({}, this.koFunction(), this.koStrings());
            }
        }, {
            key: "koFunction",
            value: function koFunction() {
                return {};
            }
        }, {
            key: "koStrings",
            value: function koStrings() {
                return _index.ko;
            }
        }, {
            key: "ru",
            value: function ru() {
                return babelHelpers.extends({}, this.ruFunction(), this.ruStrings());
            }
        }, {
            key: "ruFunction",
            value: function ruFunction() {
                return {};
            }
        }, {
            key: "ruStrings",
            value: function ruStrings() {
                return _index.ru;
            }
        }, {
            key: "it",
            value: function it() {
                return babelHelpers.extends({}, this.itFunction(), this.itStrings());
            }
        }, {
            key: "itFunction",
            value: function itFunction() {
                return {};
            }
        }, {
            key: "itStrings",
            value: function itStrings() {
                return _index.it;
            }
        }, {
            key: "nl",
            value: function nl() {
                return babelHelpers.extends({}, this.nlFunction(), this.nlStrings());
            }
        }, {
            key: "nlFunction",
            value: function nlFunction() {
                return {};
            }
        }, {
            key: "nlStrings",
            value: function nlStrings() {
                return _index.nl;
            }
        }, {
            key: "ar",
            value: function ar() {
                return babelHelpers.extends({}, this.arFunction(), this.arStrings());
            }
        }, {
            key: "arFunction",
            value: function arFunction() {
                return {};
            }
        }, {
            key: "arStrings",
            value: function arStrings() {
                return _index.ar;
            }
        }, {
            key: "de",
            value: function de() {
                return babelHelpers.extends({}, this.deFunction(), this.deStrings());
            }
        }, {
            key: "deFunction",
            value: function deFunction() {
                return {};
            }
        }, {
            key: "deStrings",
            value: function deStrings() {
                return _index.de;
            }
        }, {
            key: "fr",
            value: function fr() {
                return babelHelpers.extends({}, this.frFunction(), this.frStrings());
            }
        }, {
            key: "frFunction",
            value: function frFunction() {
                return {};
            }
        }, {
            key: "frStrings",
            value: function frStrings() {
                return _index.fr;
            }
        }, {
            key: "pl",
            value: function pl() {
                return babelHelpers.extends({}, this.plFunction(), this.plStrings());
            }
        }, {
            key: "plFunction",
            value: function plFunction() {
                return {};
            }
        }, {
            key: "plStrings",
            value: function plStrings() {
                return _index.pl;
            }
        }, {
            key: "vi",
            value: function vi() {
                return babelHelpers.extends({}, this.viFunction(), this.viStrings());
            }
        }, {
            key: "viFunction",
            value: function viFunction() {
                return {};
            }
        }, {
            key: "viStrings",
            value: function viStrings() {
                return _index.vi;
            }
        }, {
            key: "th",
            value: function th() {
                return babelHelpers.extends({}, this.thFunction(), this.thStrings());
            }
        }, {
            key: "thFunction",
            value: function thFunction() {
                return {};
            }
        }, {
            key: "thStrings",
            value: function thStrings() {
                return _index.th;
            }
        }, {
            key: "id",
            value: function id() {
                return babelHelpers.extends({}, this.idFunction(), this.idStrings());
            }
        }, {
            key: "idFunction",
            value: function idFunction() {
                return {};
            }
        }, {
            key: "idStrings",
            value: function idStrings() {
                return _index.id;
            }
        }]);
        return MultilingualResources;
    }();

    module.exports = MultilingualResources;
},10613,[10616,10493],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ar = exports.nl = exports.id = exports.th = exports.vi = exports.ru = exports.pl = exports.ko = exports.it = exports.hant_tw = exports.hant_hk = exports.hant = exports.hans = exports.fr = exports.es = exports.en = exports.de = undefined;

  var _de = _require(_dependencyMap[0]);

  var _de2 = babelHelpers.interopRequireDefault(_de);

  var _en = _require(_dependencyMap[1]);

  var _en2 = babelHelpers.interopRequireDefault(_en);

  var _es = _require(_dependencyMap[2]);

  var _es2 = babelHelpers.interopRequireDefault(_es);

  var _fr = _require(_dependencyMap[3]);

  var _fr2 = babelHelpers.interopRequireDefault(_fr);

  var _hans = _require(_dependencyMap[4]);

  var _hans2 = babelHelpers.interopRequireDefault(_hans);

  var _hant = _require(_dependencyMap[5]);

  var _hant2 = babelHelpers.interopRequireDefault(_hant);

  var _hant_hk = _require(_dependencyMap[6]);

  var _hant_hk2 = babelHelpers.interopRequireDefault(_hant_hk);

  var _hant_tw = _require(_dependencyMap[7]);

  var _hant_tw2 = babelHelpers.interopRequireDefault(_hant_tw);

  var _it = _require(_dependencyMap[8]);

  var _it2 = babelHelpers.interopRequireDefault(_it);

  var _ko = _require(_dependencyMap[9]);

  var _ko2 = babelHelpers.interopRequireDefault(_ko);

  var _pl = _require(_dependencyMap[10]);

  var _pl2 = babelHelpers.interopRequireDefault(_pl);

  var _ru = _require(_dependencyMap[11]);

  var _ru2 = babelHelpers.interopRequireDefault(_ru);

  var _vi = _require(_dependencyMap[12]);

  var _vi2 = babelHelpers.interopRequireDefault(_vi);

  var _th = _require(_dependencyMap[13]);

  var _th2 = babelHelpers.interopRequireDefault(_th);

  var _id = _require(_dependencyMap[14]);

  var _id2 = babelHelpers.interopRequireDefault(_id);

  var _nl = _require(_dependencyMap[15]);

  var _nl2 = babelHelpers.interopRequireDefault(_nl);

  var _ar = _require(_dependencyMap[16]);

  var _ar2 = babelHelpers.interopRequireDefault(_ar);

  exports.de = _de2.default;
  exports.en = _en2.default;
  exports.es = _es2.default;
  exports.fr = _fr2.default;
  exports.hans = _hans2.default;
  exports.hant = _hant2.default;
  exports.hant_hk = _hant_hk2.default;
  exports.hant_tw = _hant_tw2.default;
  exports.it = _it2.default;
  exports.ko = _ko2.default;
  exports.pl = _pl2.default;
  exports.ru = _ru2.default;
  exports.vi = _vi2.default;
  exports.th = _th2.default;
  exports.id = _id2.default;
  exports.nl = _nl2.default;
  exports.ar = _ar2.default;
},10616,[10619,10625,10631,10637,10643,10649,10655,10661,10667,10673,10679,10685,10691,10697,10703,10709,10715],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10619,[10622],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/de/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Funktion",
    "common_text_done": "Erledigt",
    "common_text_button_add": "Hinzufügen",
    "common_text_edit": "Bearbeiten",
    "common_dialog_cancel": "Abbrechen",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Darf nicht leer sein",
    "common_collection_too_long_ios": "Der Name ist zu lang",
    "common_collection_judgement_existed": "Name bereits vorhanden",
    "common_collection_network_error_ios": "Netzwerkfehler, bitte versuchen Sie es später noch einmal",
    "common_collection_dialog_add_title": "Zu Favoriten hinzufügen",
    "common_text_loading_ios": "Laden wird ausgeführt …",
    "common_view_button_container_switch_open": "Ein",
    "common_view_button_container_switch_close": "Aus",
    "common_collection_favorites": "Favoriten",
    "common_text_delay_off_timer": "Ausschaltverzögerung",
    "common_open_delay_off_off_info_singular": "Licht wird in {0} Minuten ausgeschaltet",
    "common_text_version": "Version:",
    "common_text_save": "Speichern",
    "common_text_save_success": "Erfolgreich gespeichert",
    "common_text_fail_ios": "Speichern fehlgeschlagen, versuchen Sie es später erneut.",
    "common_text_min": "Min.",
    "common_text_setting": "Einstellungen",
    "common_settings_schedules": "Zeitpläne",
    "common_open_light_failed_tips_ios": "Fehlgeschlagen, bitte stellen Sie sicher, dass Ihr Licht eingeschaltet ist.",
    "common_add_delay_off_fail": "Ausschalten nach der Verzögerung nicht möglich, stellen Sie bitte sicher, dass Ihr Licht eingeschaltet ist und Zugang zu einem Netzwerk hat.",
    "common_default_state_save_last_tips": "Wenn diese Funktion aktiviert ist, kehrt das Licht immer zur aktuellen Einstellung zurück, wenn der Strom ab- und wieder eingeschaltet wird. Nachdem Sie das Licht über die App ausgeschaltet haben, schalten Sie das Licht zweimal ein und wieder aus (ähnlich wie beim Zurücksetzen des Lichts, wobei das Licht 5 Mal hintereinander ein und wieder ausgeschaltet werden muss), um das Licht einzuschalten.",
    "common_settings_night_light": "Nachtlicht",
    "common_title_bar_ct": "Farbtemperatur",
    "common_title_bar_brightness": "Helligkeitswert",
    "common_night_light_start_time": "Startzeit",
    "common_night_light_end_time": "Endzeit",
    "common_night_light_auto_delay_off": "Automatische Ausschaltverzögerung",
    "common_night_light_delay_off_time": "Verzögern",
    "common_nightlight_open_success": "Nachtlicht ist aktiviert",
    "common_nightlight_close_success": "Nachtlicht ist deaktiviert",
    "common_nightlight_operate_failure_ios": "Das Nachtlicht konnte nicht eingestellt werden, versuchen Sie später noch einmal.",
    "common_text_hour_unit": "Std.",
    "common_text_hour": "Std.",
    "common_remote_control": "Fernbedienung",
    "common_text_unpaired": "Entkoppeln",
    "common_remote_management_ios": "Verwaltung der Fernbedienung",
    "common_give_up": "Änderungen verwerfen?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Wenn das Licht mit dem Mi Band gekoppelt ist, schaltet es sich automatisch aus, wenn Sie eingeschlafen sind.",
    "common_miband_have_pair_tips": "Das Licht ist mit dem Mi Band gekoppelt, sodass es sich automatisch ausschaltet, wenn Sie eingeschlafen sind.",
    "common_miband_bind_autoclose": "Automatisch ausschalten",
    "common_miband_pair": "Mit Mi Band koppeln",
    "common_miband_unpair": "Mi Band entkoppeln",
    "common_miband_search_title": "Mi Band suchen",
    "common_miband_search_tip": "Halten Sie Ihr Mi Band an Ihr Smartphone und stellen Sie sicher, dass es mit der Mi Fit-App gekoppelt ist.",
    "common_miband_found": "Mi Band gefunden",
    "common_miband_pairing_ios": "Wird mit Mi Band gekoppelt...",
    "common_miband_search_notfound": "Mi Band konnte nicht gefunden werden",
    "common_miband_pair_fail_ios": "Koppeln nicht möglich",
    "common_miband_reopen_broadcast_ok": "Aktiviert, Kopplung starten",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_search_retry": "Erneut suchen",
    "common_miband_unpair_tips": "Sobald die Geräte entkoppelt sind, schaltet sich das Licht nicht automatisch aus, wenn Sie eingeschlafen sind.",
    "common_miband_alter_no_ios": "Nein",
    "common_miband_alter_yes_ios": "Ja",
    "common_miband_shake_ios": "Vibriert das Band, das Sie koppeln möchten?",
    "common_miband_reopen_broadcast": "Navigieren Sie zu Mi Fit-App > Profil > tippen Sie auf „Gerät hinzufügen“ > wählen Sie ein Band aus und schalten Sie Bluetooth ein.",
    "common_text_brightness": "Helligkeit",
    "common_open_delay_off_brightness_sub": "Beim Einschalten wird das Licht auf diese Helligkeit eingestellt.",
    "common_collection_select_message": "{0} als Lichteinstellung für Ihre Smart Scene auswählen?",
    "common_scene_quit_message": "Keine Lichteinstellung ausgewählt, jetzt beenden?",
    "common_dialog_notice_title": "Benachrichtigungen",
    "common_text_rename": "Umbenennen",
    "common_setting_share_device_ios": "Gerät freigeben",
    "common_setting_check_firmware_upgrade_ios": "Nach Firmware-Aktualisierungen suchen",
    "common_setting_unbind_device_ios": "Verbindung trennen",
    "common_view_button_container_colors": "Farbiges Licht",
    "common_view_button_container_sunlight": "Sonnenlicht",
    "common_view_button_container_whitelight": "Weißes Licht",
    "common_view_control_flow_setting": "Durchflusseinstellungen",
    "common_color_flow_pickup_title": "Farbe auswählen",
    "common_text_capture_apply": "Anwenden",
    "common_collection_added_success": "Hinzugefügt",
    "common_text_renamed": "Erfolgreich umbenannt",
    "common_text_delete": "Gelöscht",
    "common_text_deleted": "Erfolgreich gelöscht",
    "common_default_state_set_default_desc": "Tippen Sie auf „Speichern“, um die aktuelle Einstellung als Standardzustand zu speichern. Wenn das Licht wieder eingeschaltet wird, wird dieser Zustand verwendet.",
    "common_text_confirm_knob_custom": "Zweimal tippen, um {0} einzuschalten?",
    "common_collection_knob_kidmode_msg": "Sie haben den Kindermodus aktiviert. Die Farbtemperatur beträgt {0} K und übersteigt somit die festgelegte Begrenzung (4.000 K). Wenn Sie diese Lichteinstellung verwenden möchten, deaktivieren Sie bitte den Kindermodus.",
    "common_dialog_kidmode_disable_apply": "Trotzdem anwenden",
    "common_view_button_container_pickup_color": "Anbringen",
    "common_settings_general_setting_ios": "Allgemeine Einstellungen",
    "common_settings_device_setting": "Geräteeinstellungen",
    "common_text_bright": "Helligkeit",
    "common_text_color_temperature": "Farbtemperatur",
    "common_text_color": "Farbe",
    "common_collection_apply_light": "Anwenden",
    "common_text_flow": "Lichtfluß",
    "common_text_night_light": "Mondlicht",
    "common_collection_recommend_segment": "Empfohlen",
    "common_collection_favorite_segment": "Favoriten",
    "common_setting_room_management_ios": "Standortverwaltung",
    "common_setting_ifttt_auto_ios": "Smart Scene",
    "common_setting_new_more_ios": "Weitere Einstellungen",
    "common_setting_add_to_desktop_ios": "Verknüpfung für Startseite hinzufügen",
    "common_dialog_text_upgrade_firmware": "Bitte aktualisieren Sie zunächst die Firmware.",
    "common_msg_user_agreement": "Nutzungsvereinbarung",
    "common_msg_privacy_policy": "Datenschutzerklärung",
    "common_msg_agreement_and_policy": "Nutzungsvereinbarung und Datenschutzerklärung",
    "common_setting_night_light_no_open_ios": "Nicht aktiviert",
    "common_scene_open_delay_off": "Schalten Sie das Licht ein und aktivieren Sie die Ausschaltverzögerung.",
    "common_night_light_enable_ios": "Aktivieren",
    "common_miband_band_ios": "Band ist gekoppelt",
    "common_miband_not_bind_ios": "Nicht gekoppelt",
    "common_setting_ble_gateway_ios": "Bluetooth-Gateway",
    "common_default_state_on_from_power": "Standardzustand beim Einschalten des Lichts",
    "common_default_state_title": "Standardzustand",
    "common_default_state_save_last": "Zuletzt verwendeten Zustand speichern",
    "common_default_state_recovery_break_light": "Automatische Wiederherstellung des Lichtzustands",
    "common_default_state_set_default_title": "Standardzustand des Lichts",
    "common_collection_apply_success": "Erfolgreich angewendet",
    "common_delay_off_canceled": "Ausschaltverzögerung abgebrochen",
    "common_del_delay_off_fail": "Ausschaltverzögerung konnte nicht abgebrochen werden",
    "common_miband_updating": "Aktualisierung wird ausgeführt …",
    "common_collection_rename_failed": "Umbenennen nicht möglich",
    "common_remote_control_and_switch_title": "Fernbedienung und Schalter",
    "common_remote_control_mac_address": "MAC-Adresse",
    "common_remote_control_seesaw": "Intelligenter Dimmerschalter",
    "common_remote_control_auster": "Fernbedienung für Yeelight Wasserbaderhitzer",
    "common_remote_bind_remote_and_switch_link": "Wie werden die Fernbedienung und der Schalter gekoppelt?",
    "common_remote_connection_no_binding_tips": "Die Fernbedienung und der Schalter sind noch nicht gekoppelt.",
    "common_remote_connection_web_title": "Fernbedienung und Schalter auswählen",
    "commom_default_state_auto_save_desc": "Ist diese Option aktiviert, speichert das Gerät beim Ausschalten die aktuell verwendeten Lichteinstellungen und stellt diese beim erneuten Einschalten wieder her. Ist diese Option deaktiviert, kehrt das Gerät beim Einschalten immer zum Standardzustand des Lichts zurück.",
    "common_default_state_light_prompt": "Wählen Sie den Zustand aus, der beim Einschalten verwendet werden soll.",
    "common_default_state_success": "Standardzustand des Lichts erfolgreich eingestellt",
    "common_default_state_fail": "Standardzustand des Lichts konnte nicht eingestellt werden",
    "common_schedule_repeat_mode_everyday": "Jeden Tag",
    "common_schedule_repeat_mode_workday": "Werktage",
    "common_schedule_repeat_mode_freeday": "Wochenende",
    "common_schedule_repeat_mode_monday": "Montag",
    "common_schedule_repeat_mode_tuesday": "Dienstag",
    "common_schedule_repeat_mode_wensday": "Mittwoch",
    "common_schedule_repeat_mode_thursday": "Donnerstag",
    "common_schedule_repeat_mode_friday": "Freitag",
    "common_schedule_repeat_mode_saturday": "Samstag",
    "common_schedule_repeat_mode_sunday": "Sonntag",
    "common_home_kit_add_tip": "Das Produkt bietet Unterstützung für Apple HomeKit. Öffnen Sie die Mi Home-App, halten Sie die Verknüpfungskarte des Produkts gedrückt und wählen Sie das HomeKit-Symbol, um das Produkt zur Home-App hinzuzufügen."
  };
},10622,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/de/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10625,[10628],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/en/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Function",
    "common_text_done": "Done",
    "common_text_button_add": "Add",
    "common_text_edit": "Edit",
    "common_dialog_cancel": "Cancel",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Cannot be empty",
    "common_collection_too_long_ios": "Too long",
    "common_collection_judgement_existed": "Name already exists",
    "common_collection_network_error_ios": "Network Error",
    "common_collection_dialog_add_title": "Add to Favorites",
    "common_text_loading_ios": "Loading...",
    "common_view_button_container_switch_open": "On",
    "common_view_button_container_switch_close": "Off",
    "common_collection_favorites": "Favorites",
    "common_text_delay_off_timer": "Timer",
    "common_open_delay_off_off_info_singular": "Light will turn off in {0} min",
    "common_text_version": "Version:",
    "common_text_save": "Save",
    "common_text_save_success": "Done",
    "common_text_fail_ios": "Could not save, try again later.",
    "common_text_min": "min",
    "common_text_setting": "Settings",
    "common_settings_schedules": "Schedules",
    "common_open_light_failed_tips_ios": "Failed, please make sure your light is turned on.",
    "common_add_delay_off_fail": "Could not turn off after the delay, please make sure your light is turned on, and has network access.",
    "common_default_state_save_last_tips": "Once this function is enabled, the light will always return to the current setting when power is turned off and on again. After turning the light off via the app, turn the light on and off twice (similar to resetting the light, which requires turning the light on and off 5 times consecutively) to turn the light on.",
    "common_settings_night_light": "Night Light",
    "common_title_bar_ct": "Color Temperature",
    "common_title_bar_brightness": "Brightness",
    "common_night_light_start_time": "Starting Time",
    "common_night_light_end_time": "Ending Time",
    "common_night_light_auto_delay_off": "Automatic turn-off delay",
    "common_night_light_delay_off_time": "Delay",
    "common_nightlight_open_success": "Night Light enabled",
    "common_nightlight_close_success": "Night Light disabled",
    "common_nightlight_operate_failure_ios": "Could not set the night light, please try again later.",
    "common_text_hour_unit": "h",
    "common_text_hour": "hour",
    "common_remote_control": "Remote control",
    "common_text_unpaired": "Unpair",
    "common_remote_management_ios": "Remote Control Management",
    "common_give_up": "Discard changes?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Pair with Mi Band, so the light will turn off automatically after you fall asleep.",
    "common_miband_have_pair_tips": "Paired with Mi Band, so the light will turn off automatically after you fall asleep.",
    "common_miband_bind_autoclose": "Turn off automatically",
    "common_miband_pair": "Pair with Mi Band",
    "common_miband_unpair": "Unpair Mi Band",
    "common_miband_search_title": "Search for Mi Band",
    "common_miband_search_tip": "Hold the Mi Band close to your phone and make sure it is paired with the Mi Fit app.",
    "common_miband_found": "Mi Band found",
    "common_miband_pairing_ios": "Pairing with Mi Band...",
    "common_miband_search_notfound": "No Mi Band found",
    "common_miband_pair_fail_ios": "Could not pair",
    "common_miband_reopen_broadcast_ok": "Enabled, start pairing",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_search_retry": "Search again",
    "common_miband_unpair_tips": "After unpairing, the light will not turn off automatically after you fall asleep.",
    "common_miband_alter_no_ios": "No",
    "common_miband_alter_yes_ios": "Yes",
    "common_miband_shake_ios": "Does the band you wish to pair with vibrate?",
    "common_miband_reopen_broadcast": "Go to the Mi Fit app > Profile > tap Add device > select Band, and turn on Bluetooth.",
    "common_text_brightness": "Brightness",
    "common_open_delay_off_brightness_sub": "The light will be set to this brightness when turned on.",
    "common_collection_select_message": "Select {0} as the light setting for your smart scene?",
    "common_scene_quit_message": "No light setting selected, exit now?",
    "common_dialog_notice_title": "Notifications",
    "common_text_rename": "Rename",
    "common_setting_share_device_ios": "Device sharing",
    "common_setting_check_firmware_upgrade_ios": "Check for firmware updates",
    "common_setting_unbind_device_ios": "Disconnect",
    "common_view_button_container_colors": "Color",
    "common_view_button_container_sunlight": "Sun",
    "common_view_button_container_whitelight": "White",
    "common_view_control_flow_setting": "Flow settings",
    "common_color_flow_pickup_title": "Pick Color",
    "common_text_capture_apply": "Apply",
    "common_collection_added_success": "Added to Favorites",
    "common_text_renamed": "Renamed",
    "common_text_delete": "Delete",
    "common_text_deleted": "Deleted",
    "common_default_state_set_default_desc": "Tap \"Save\" to save the current setting as the default state. When the light is turned on again, this state will be used.",
    "common_text_confirm_knob_custom": "Tap twice to turn on {0}?",
    "common_collection_knob_kidmode_msg": "You have activated Child Mode. The color temperature is {0}K, which exceeds the specified limit (4000 K). If you wish to use this light setting, please disable Child Mode.",
    "common_dialog_kidmode_disable_apply": "Apply Anyway",
    "common_view_button_container_pickup_color": "Snap",
    "common_settings_general_setting_ios": "General settings",
    "common_settings_device_setting": "Device settings",
    "common_text_bright": "Brightness",
    "common_text_color_temperature": "Color Temperature",
    "common_text_color": "Color",
    "common_collection_apply_light": "Apply",
    "common_text_flow": "Flow",
    "common_text_night_light": "Moon",
    "common_collection_recommend_segment": "Recommended",
    "common_collection_favorite_segment": "Favorite",
    "common_setting_room_management_ios": "Manage locations",
    "common_setting_ifttt_auto_ios": "Smart scene",
    "common_setting_new_more_ios": "More settings",
    "common_setting_add_to_desktop_ios": "Add a Home screen shortcut",
    "common_dialog_text_upgrade_firmware": "Please update the firmware first.",
    "common_msg_user_agreement": "User Agreement",
    "common_msg_privacy_policy": "Privacy Policy",
    "common_msg_agreement_and_policy": "User Agreement & Privacy Policy",
    "common_setting_night_light_no_open_ios": "Disabled",
    "common_scene_open_delay_off": "Turn on the light and enable turn-off delay",
    "common_night_light_enable_ios": "Enable",
    "common_miband_band_ios": "Band is paired",
    "common_miband_not_bind_ios": "Not paired",
    "common_setting_ble_gateway_ios": "Bluetooth gateway",
    "common_default_state_on_from_power": "Default light state when turned on",
    "common_default_state_title": "Default state",
    "common_default_state_save_last": "Remember the last used state",
    "common_default_state_recovery_break_light": "Automatic light state recovery",
    "common_default_state_set_default_title": "Default light state",
    "common_collection_apply_success": "Applied successfully",
    "common_collection_apply_failed": "Applied failure",
    "common_delay_off_canceled": "Turn-off delay canceled",
    "common_del_delay_off_fail": "Could not cancel turn-off delay",
    "common_miband_updating": "Updating…",
    "common_collection_rename_failed": "Could not rename",
    "common_remote_control_and_switch_title": "Remote control and switch",
    "common_remote_control_mac_address": "MAC address",
    "common_remote_control_seesaw": "Smart dimmer switch",
    "common_remote_control_auster": "Yeelight bath heater remote control",
    "common_remote_bind_remote_and_switch_link": "How do I pair the remote control and the switch?",
    "common_remote_connection_no_binding_tips": "Remote control and switch are not paired yet.",
    "common_remote_connection_web_title": "Select remote control and switch",
    "commom_default_state_auto_save_desc": "When enabled, the device saves the light settings being used when turned off, and recovers those settings when turned on again. When disabled, the device will always return to the default light state when turned on.",
    "common_default_state_light_prompt": "Select the state to use upon turning on.",
    "common_default_state_success": "Default light state set successfully",
    "common_default_state_fail": "Could not set the default light state!",
    "common_schedule_repeat_mode_everyday": "Every day",
    "common_schedule_repeat_mode_workday": "Working days",
    "common_schedule_repeat_mode_freeday": "Weekend",
    "common_schedule_repeat_mode_monday": "Monday",
    "common_schedule_repeat_mode_tuesday": "Tuesday",
    "common_schedule_repeat_mode_wensday": "Wednesday",
    "common_schedule_repeat_mode_thursday": "Thursday",
    "common_schedule_repeat_mode_friday": "Friday",
    "common_schedule_repeat_mode_saturday": "Saturday",
    "common_schedule_repeat_mode_sunday": "Sunday",
    "common_settings_seesaw_switch_opened": "Flex Switch on",
    "common_settings_seesaw_switch_offed": "Flex Switch off",
    "common_settings_seesaw_switch_failed": "Flex Switch failed",
    "common_settings_seesaw_switch": "Flex Switch",
    "common_settings_seesaw_switch_tips": "This function is ONLY compatible with Yeelight Flex Switch. Otherwise, it may cause the light to malfunction.",
    "common_settings_seesaw_switch_op_tips": "Enable \"Flex Switch\"",
    "common_settings_seesaw_switch_status_on": "ON",
    "common_settings_seesaw_switch_status_off": "OFF",
    "common_home_kit_add_tip": "The product supports Apple HomeKit, open Mi Home app, press and hold the shortcut card of this product, select the HomeKit icon to add the product to the Home app.",
    "common_moon_night_light_tip_one": "In case moonlight mode is enabled, the light will enter moonlight mode automatically after it is turned on either by remote control or app during this period.",
    "common_moon_night_light_tip_two": "If auto delayed turn off mode is enabled, the light will turn off automatically per the customized delay time."
  };
},10628,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/en/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10631,[10634],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/es/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Función",
    "common_text_done": "Listo",
    "common_text_button_add": "Añadir",
    "common_text_edit": "Editar",
    "common_dialog_cancel": "Cancelar",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "No puede estar vacío",
    "common_collection_too_long_ios": "Demasiado largo",
    "common_collection_judgement_existed": "El nombre ya existe",
    "common_collection_network_error_ios": "Error de red",
    "common_collection_dialog_add_title": "Añadir a Favoritos",
    "common_text_loading_ios": "Cargando…",
    "common_view_button_container_switch_open": "Activado",
    "common_view_button_container_switch_close": "Apagado",
    "common_collection_favorites": "Favoritos",
    "common_text_delay_off_timer": "Temporizador de sueño",
    "common_open_delay_off_off_info_singular": "La luz se apagará en {0} min",
    "common_text_version": "Versión :",
    "common_text_save": "Guardar",
    "common_text_save_success": "Usar inmediatamente",
    "common_text_fail_ios": "No se ha podido guardar, inténtelo de nuevo más tarde.",
    "common_text_min": "m",
    "common_text_setting": "Ajustes",
    "common_settings_schedules": "Programas",
    "common_open_light_failed_tips_ios": "Se ha producido un error, asegúrese de que la luz esté encendida.",
    "common_add_delay_off_fail": "No se pudo ejecutar el apagado programado, asegúrese de que la luz esté encendida y tenga acceso a la red.",
    "common_default_state_save_last_tips": "Cuando esté activada esta función, la luz siempre volverá a la configuración actual cuando se apague y encienda de nuevo. Tras apagar la luz a través de la aplicación, enciéndala y apáguela dos veces (parecido a resetear la luz, para lo que es necesario encender y apagar la luz 5 veces seguidas) para encender la luz.",
    "common_settings_night_light": "Luz nocturna",
    "common_title_bar_ct": "Temperatura de color",
    "common_title_bar_brightness": "Brillo",
    "common_night_light_start_time": "Hora de inicio",
    "common_night_light_end_time": "Hora de finalización",
    "common_night_light_auto_delay_off": "Retardo de apagado automático",
    "common_night_light_delay_off_time": "Retardo",
    "common_nightlight_open_success": "La luz nocturna está encendida",
    "common_nightlight_close_success": "La luz nocturna está apagada",
    "common_nightlight_operate_failure_ios": "No se ha podido configurar la luz nocturna, inténtalo de nuevo más tarde.",
    "common_text_hour_unit": "h",
    "common_text_hour": "h",
    "common_remote_control": "Mando a distancia",
    "common_text_unpaired": "Desvincular",
    "common_remote_management_ios": "Control del mando a distancia",
    "common_give_up": "¿Descartar cambios?",
    "common_text_miband": "Vincular con su pulsera",
    "common_miband_will_pair_tips": "Sincronizar con Mi Band para que la luz se apague automáticamente cuando se duerma.",
    "common_miband_have_pair_tips": "Mi Band se ha sincronizado, por lo que la luz se apagará automáticamente cuando se duerma.",
    "common_miband_bind_autoclose": "Apagar automáticamente",
    "common_miband_pair": "Sincronizar con Mi Band",
    "common_miband_unpair": "Desvincule Mi Band",
    "common_miband_search_title": "Buscar Mi Band",
    "common_miband_search_tip": "Coloque su Mi Band cerca del teléfono y asegúrese de que esté sincronizada con la aplicación Mi Fit.",
    "common_miband_found": "Mi Band detectada",
    "common_miband_pairing_ios": "Sincronizando Mi Band...",
    "common_miband_search_notfound": "Ninguna Mi Band encontrada",
    "common_miband_pair_fail_ios": "No se ha podido realizar la sincronización",
    "common_miband_reopen_broadcast_ok": "Activada, comience la sincronización",
    "miband_broadcast_main": "miband_broadcast_main_es.png",
    "common_miband_search_retry": "Buscar de nuevo",
    "common_miband_unpair_tips": "Una vez cancelada la sincronización, la luz ya no se apagará automáticamente cuando se quede dormido.",
    "common_miband_alter_no_ios": "No",
    "common_miband_alter_yes_ios": "Sí",
    "common_miband_shake_ios": "¿Vibra la pulsera que desea sincronizar?",
    "common_miband_reopen_broadcast": "Vaya a la aplicación Mi Fit > Perfil > pulse Añadir dispositivo > seleccione Pulsera y encienda el Bluetooth.",
    "common_text_brightness": "Brillo",
    "common_open_delay_off_brightness_sub": "La luz se establecerá con este brillo cuando se encienda.",
    "common_collection_select_message": "¿Desea seleccionar {0} como la configuración de iluminación para su escena inteligente?",
    "common_scene_quit_message": "No se ha seleccionado ninguna configuración de iluminación, ¿desea salir ahora?",
    "common_dialog_notice_title": "Notificaciones",
    "common_text_rename": "Renombrar",
    "common_setting_share_device_ios": "Uso compartido de dispositivos",
    "common_setting_check_firmware_upgrade_ios": "Buscar actualizaciones del firmware",
    "common_setting_unbind_device_ios": "Desconectar",
    "common_view_button_container_colors": "Color",
    "common_view_button_container_sunlight": "Sol",
    "common_view_button_container_whitelight": "Blanco",
    "common_view_control_flow_setting": "Configuraciones de flujo",
    "common_color_flow_pickup_title": "Elegir color",
    "common_text_capture_apply": "Aplicar",
    "common_collection_added_success": "Añadido a favoritos",
    "common_text_renamed": "Renombrado",
    "common_text_delete": "Eliminar",
    "common_text_deleted": "Eliminado",
    "common_default_state_set_default_desc": "Pulse \"Guardar\" para guardar la configuración actual como configuración predeterminada. Al volver a encender la luz, se utilizará este estado.",
    "common_text_confirm_knob_custom": "¿Desea pulsar dos veces para encender {0}?",
    "common_collection_knob_kidmode_msg": "Ha activado el Modo infantil. La temperatura del color está {0}K, y es superior al límite especificado (4000 K). Si desea utilizar esta configuración de iluminación, desactive el Modo infantil.",
    "common_dialog_kidmode_disable_apply": "Aplicar de todos modos",
    "common_view_button_container_pickup_color": "Foto",
    "common_settings_general_setting_ios": "Ajustes generales",
    "common_settings_device_setting": "Ajustes del dispositivo",
    "common_text_bright": "Brillo",
    "common_text_color_temperature": "Temperatura de color",
    "common_text_color": "Color",
    "common_collection_apply_light": "Aplicar",
    "common_text_flow": "Fluir",
    "common_text_night_light": "Luna",
    "common_collection_recommend_segment": "Recomendado",
    "common_collection_favorite_segment": "Favorito",
    "common_setting_room_management_ios": "Administrar localizaciones",
    "common_setting_ifttt_auto_ios": "Escena inteligente",
    "common_setting_new_more_ios": "Más ajustes",
    "common_setting_add_to_desktop_ios": "Agregar un acceso directo a la pantalla de inicio",
    "common_dialog_text_upgrade_firmware": "Actualice primero el firmware.",
    "common_msg_user_agreement": "Términos de uso",
    "common_msg_privacy_policy": "Política de privacidad",
    "common_msg_agreement_and_policy": "Acuerdo de usuario y Política de privacidad",
    "common_default_state_on_from_power": "Estado de iluminación predeterminada al encenderse",
    "common_default_state_title": "Estado predeterminado",
    "common_default_state_save_last": "Recordar el último estado utilizado",
    "common_default_state_recovery_break_light": "Recuperación del estado de iluminación automática",
    "common_default_state_set_default_title": "Estado de iluminación predeterminada",
    "common_collection_apply_success": "Se ha aplicado correctamente",
    "common_delay_off_canceled": "Retardo de apagado cancelado",
    "common_del_delay_off_fail": "No se ha podido cancelar el retardo de apagado",
    "common_miband_updating": "Actualizando…",
    "common_collection_rename_failed": "No se ha podido cambiar el nombre",
    "common_miband_band_ios": "La pulsera está sincronizada",
    "common_miband_not_bind_ios": "No sincronizada",
    "common_setting_ble_gateway_ios": "Puerta de enlace Bluetooth",
    "common_setting_night_light_no_open_ios": "Desactivado",
    "common_scene_open_delay_off": "Encienda la luz y active el Retardo de apagado",
    "common_night_light_enable_ios": "Activar",
    "common_remote_control_and_switch_title": "Mando a distancia e interruptor",
    "common_remote_control_mac_address": "Dirección MAC",
    "common_remote_control_seesaw": "Interruptor de atenuación inteligente",
    "common_remote_control_auster": "Mando a distancia para calentador Yeelight",
    "common_remote_bind_remote_and_switch_link": "¿Cómo puedo sincronizar el mando a distancia y el interruptor?",
    "common_remote_connection_no_binding_tips": "El mando a distancia y el interruptor no se han sincronizado todavía.",
    "common_remote_connection_web_title": "Seleccione mando a distancia e interruptor",
    "commom_default_state_auto_save_desc": "Una vez activado, el dispositivo guarda la configuración de iluminación que se estaba utilizando cuando se apagó y recupera dicha configuración cuando se vuelva a encender. Cuando se desactiva, el dispositivo siempre vuelve al estado de iluminación predeterminado cuando se enciende.",
    "common_default_state_light_prompt": "Seleccione el estado que desea utilizar tras su encendido.",
    "common_default_state_success": "Se ha establecido correctamente el estado de iluminación",
    "common_default_state_fail": "No se ha podido establecer la iluminación predeterminada",
    "common_schedule_repeat_mode_everyday": "Todos los días",
    "common_schedule_repeat_mode_workday": "Días laborables",
    "common_schedule_repeat_mode_freeday": "Fines de semana",
    "common_schedule_repeat_mode_monday": "Lunes",
    "common_schedule_repeat_mode_tuesday": "Martes",
    "common_schedule_repeat_mode_wensday": "Miércoles",
    "common_schedule_repeat_mode_thursday": "Jueves",
    "common_schedule_repeat_mode_friday": "Viernes",
    "common_schedule_repeat_mode_saturday": "Sábado",
    "common_schedule_repeat_mode_sunday": "Domingo",
    "common_home_kit_add_tip": "El producto es compatible con Apple HomeKit. Para añadir el producto a la aplicación Mi Home. abra la aplicación, mantenga presionada la tarjeta de acceso directo de este producto y seleccione el icono HomeKit."
  };
},10634,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/es/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10637,[10640],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/fr/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Fonction",
    "common_text_done": "Terminé",
    "common_text_button_add": "Ajouter",
    "common_text_edit": "Modifier",
    "common_dialog_cancel": "Annuler",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Ne peut pas être vide.",
    "common_collection_too_long_ios": "Ce nom est trop long",
    "common_collection_judgement_existed": "Le nom existe déjà.",
    "common_collection_network_error_ios": "Erreur de réseau. Veuillez réessayer ultérieurement.",
    "common_collection_dialog_add_title": "Ajouter aux Favoris",
    "common_text_loading_ios": "Chargement...",
    "common_view_button_container_switch_open": "Allumée",
    "common_view_button_container_switch_close": "Éteinte",
    "common_collection_favorites": "Favoris",
    "common_text_delay_off_timer": "Minuterie",
    "common_open_delay_off_off_info_singular": "Éteindre automatiquement la lampe après {0} minute",
    "common_text_version": "Version :",
    "common_text_save": "Enregistrer",
    "common_text_save_success": "Sauvegarde réussie",
    "common_text_fail_ios": "Enregistrement impossible. Réessayez ultérieurement.",
    "common_text_min": "m",
    "common_text_setting": "Paramètres",
    "common_settings_schedules": "Délai d'arrêt de l'appareil",
    "common_open_light_failed_tips_ios": "Échec. Assurez-vous que votre lampe est bien allumée.",
    "common_add_delay_off_fail": "Impossible d’éteindre après le délai. Assurez-vous que votre lampe est allumée et dispose d’une connexion réseau.",
    "common_default_state_save_last_tips": "Lorsque cette fonction est activée, les paramètres de luminosité actuels sont toujours rétablis une fois que l'alimentation est éteinte, puis rallumée. Une fois que la lumière est éteinte via l'application, vous devez rallumer et éteindre à deux reprises (même procédure que pour réinitialiser la lampe, à savoir allumer et éteindre la lumière à cinq reprises consécutives) pour rallumer la lumière.",
    "common_settings_night_light": "Lumière nocturne",
    "common_title_bar_ct": "Température de couleur",
    "common_title_bar_brightness": "Luminosité",
    "common_night_light_start_time": "Heure de début",
    "common_night_light_end_time": "Heure de fin",
    "common_night_light_auto_delay_off": "Délai d'arrêt automatique de l'appareil",
    "common_night_light_delay_off_time": "Délais",
    "common_nightlight_open_success": "La lumière nocturne est activée",
    "common_nightlight_close_success": "La lumière nocturne est désactivée",
    "common_nightlight_operate_failure_ios": "Impossible de configurer la vision nocturne. Réessayez ultérieurement.",
    "common_text_hour_unit": "h",
    "common_text_hour": "h",
    "common_remote_control": "Télécommande",
    "common_text_unpaired": "Annuler le couplage",
    "common_remote_management_ios": "Gestion de la télécommande",
    "common_give_up": "Abandonner les modifications ?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Couplez la lampe au Mi Band pour qu’elle s'éteigne automatiquement lorsque vous vous endormez.",
    "common_miband_have_pair_tips": "Lorsque la lampe est couplée avec le Mi Band, celle-ci s'éteint automatiquement lorsque vous vous endormez.",
    "common_miband_bind_autoclose": "Éteindre automatiquement",
    "common_miband_pair": "Coupler avec un Mi Band",
    "common_miband_unpair": "Annuler le couplage avec le Mi Band",
    "common_miband_search_title": "Rechercher un Mi Band",
    "common_miband_search_tip": "Maintenez le Mi Band à proximité de votre téléphone et assurez-vous que le bracelet est déjà couplé à l'application Mi Fit.",
    "common_miband_found": "Le Mi Band a été trouvé",
    "common_miband_pairing_ios": "Couplage avec le Mi Band...",
    "common_miband_search_notfound": "Impossible de trouver le Mi Band",
    "common_miband_pair_fail_ios": "Couplage impossible",
    "common_miband_reopen_broadcast_ok": "Activée, démarrage du couplage",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_search_retry": "Nouvelle recherche",
    "common_miband_unpair_tips": "Après le découplage, la lampe ne s'éteint plus automatiquement lorsque vous vous endormez.",
    "common_miband_alter_no_ios": "Non",
    "common_miband_alter_yes_ios": "Oui",
    "common_miband_shake_ios": "Le bracelet avec lequel vous souhaitez effectuer le couplage vibre-t-il ?",
    "common_miband_reopen_broadcast": "Ouvrez l’application Mi Fit > Profil > Ajouter un appareil > sélectionnez Bracelet et activez le Bluetooth.",
    "common_text_brightness": "Luminosité",
    "common_open_delay_off_brightness_sub": "La lampe sera configurée sur cette luminosité lorsqu’elle sera allumée.",
    "common_collection_select_message": "Sélectionner {0} comme paramètre de la lampe pour votre Smart Scene ?",
    "common_scene_quit_message": "Aucun paramètre de lampe sélectionné. Quitter ?",
    "common_dialog_notice_title": "Notifications",
    "common_text_rename": "Renommer",
    "common_setting_share_device_ios": "Partage sur dispositif",
    "common_setting_check_firmware_upgrade_ios": "Vérifier les mises à jour du firmware",
    "common_setting_unbind_device_ios": "Déconnecter",
    "common_view_button_container_colors": "Lumière colorée",
    "common_view_button_container_sunlight": "Lumière solaire",
    "common_view_button_container_whitelight": "Lumière blanche",
    "common_view_control_flow_setting": "Définir la couleur",
    "common_color_flow_pickup_title": "Choisir une couleur",
    "common_text_capture_apply": "Appliquer",
    "common_collection_added_success": "Ajouté aux Favoris",
    "common_text_renamed": "Renommé avec succès",
    "common_text_delete": "Supprimer",
    "common_text_deleted": "Supprimé",
    "common_default_state_set_default_desc": "Appuyez sur « Enregistrer » pour sauvegarder le paramètre actuel en tant qu’état par défaut. Lorsque la lampe est rallumée, cet état est automatiquement rétabli.",
    "common_text_confirm_knob_custom": "Appuyer deux fois pour allumer {0} ?",
    "common_collection_knob_kidmode_msg": "Vous avez activé le mode Enfant. La température de couleur est de {0} K, ce qui est supérieur à la limite spécifiée (4 000 K). Si vous souhaitez utiliser ce paramètre de lampe, désactivez le mode Enfant.",
    "common_dialog_kidmode_disable_apply": "Appliquer quand même",
    "common_view_button_container_pickup_color": "Prendre une photo",
    "common_settings_general_setting_ios": "Paramètres généraux",
    "common_settings_device_setting": "Réglages des appareils",
    "common_text_bright": "Luminosité",
    "common_text_color_temperature": "Température de couleur",
    "common_text_color": "Couleur",
    "common_collection_apply_light": "Appliquer",
    "common_text_flow": "Flux lumineux",
    "common_text_night_light": "Lumière lunaire",
    "common_collection_recommend_segment": "Recommandé",
    "common_collection_favorite_segment": "Favoris",
    "common_setting_room_management_ios": "Gestion de la localisation",
    "common_setting_ifttt_auto_ios": "Smart Scene",
    "common_setting_new_more_ios": "Plus de paramètres",
    "common_setting_add_to_desktop_ios": "Ajouter un raccourci vers l’écran d’accueil",
    "common_dialog_text_upgrade_firmware": "Veuillez commencer par mettre à jour votre firmware.",
    "common_msg_user_agreement": "Contrat d'utilisation",
    "common_msg_privacy_policy": "Politique de confidentialité",
    "common_msg_agreement_and_policy": "Contrat d'utilisation et Politique de confidentialité",
    "common_setting_night_light_no_open_ios": "Désactivé",
    "common_scene_open_delay_off": "Allumer la lampe et autoriser un délai avant arrêt",
    "common_night_light_enable_ios": "Activer",
    "common_miband_band_ios": "Le bracelet est couplé",
    "common_miband_not_bind_ios": "Non couplé",
    "common_setting_ble_gateway_ios": "Passerelle Bluetooth",
    "common_default_state_on_from_power": "État de la lampe par défaut à l’allumage",
    "common_default_state_title": "État par défaut",
    "common_default_state_save_last": "Se souvenir du dernier état utilisé",
    "common_default_state_recovery_break_light": "Récupération automatique de l’état de la lampe",
    "common_default_state_set_default_title": "État de la lampe par défaut",
    "common_collection_apply_success": "Application réussie",
    "common_delay_off_canceled": "Annulation du délai d'arrêt de l'appareil",
    "common_del_delay_off_fail": "Échec de l'annulation du délai d'arrêt",
    "common_miband_updating": "Mise à jour en cours…",
    "common_collection_rename_failed": "Impossible de renommer",
    "common_remote_control_and_switch_title": "Télécommande et interrupteur",
    "common_remote_control_mac_address": "Adresse MAC",
    "common_remote_control_seesaw": "Variateur intelligent",
    "common_remote_control_auster": "Télécommande de radiateur Yeelight",
    "common_remote_bind_remote_and_switch_link": "Comment coupler la télécommande et l’interrupteur ?",
    "common_remote_connection_no_binding_tips": "La télécommande et l’interrupteur ne sont pas encore couplés.",
    "common_remote_connection_web_title": "Sélectionner la télécommande et l’interrupteur",
    "commom_default_state_auto_save_desc": "Lorsque cette option est activée, l’appareil enregistre les paramètres de la lampe utilisés lorsque vous l’éteignez et récupère ces paramètres lorsque vous la rallumez. Lorsque cette option est désactivée, l’appareil revient toujours aux paramètres de lampe par défaut à l’allumage.",
    "common_default_state_light_prompt": "Sélectionnez l’état à utiliser à l’allumage.",
    "common_default_state_success": "État par défaut de la lampe configuré avec succès",
    "common_default_state_fail": "Impossible de configurer l’état par défaut de la lampe",
    "common_schedule_repeat_mode_everyday": "Chaque jour",
    "common_schedule_repeat_mode_workday": "Les jours ouvrables",
    "common_schedule_repeat_mode_freeday": "Le week-end",
    "common_schedule_repeat_mode_monday": "Lundi",
    "common_schedule_repeat_mode_tuesday": "Mardi",
    "common_schedule_repeat_mode_wensday": "Mercredi",
    "common_schedule_repeat_mode_thursday": "Jeudi",
    "common_schedule_repeat_mode_friday": "Vendredi",
    "common_schedule_repeat_mode_saturday": "Samedi",
    "common_schedule_repeat_mode_sunday": "Dimanche",
    "common_home_kit_add_tip": "Ce produit prend en charge Apple HomeKit. Ouvrir l’application Mi Home, maintenir appuyer l’aide-mémoire des raccourcis de ce produit, sélectionner l’icône HomeKit pour ajouter le produit à l’application Mi Home."
  };
},10640,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/fr/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10643,[10646],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hans/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "功能",
    "common_text_done": "完成",
    "common_text_button_add": "添加",
    "common_text_edit": "编辑",
    "common_dialog_cancel": "取消",
    "common_dialog_ok": "确定",
    "common_collection_empty_ios": "不能为空",
    "common_collection_too_long_ios": "名称过长",
    "common_collection_judgement_existed": "名称已经存在",
    "common_collection_network_error_ios": "网络错误，请稍后重试",
    "common_collection_dialog_add_title": "添加个人收藏",
    "common_text_loading_ios": "加载中...",
    "common_view_button_container_switch_open": "开灯",
    "common_view_button_container_switch_close": "关灯",
    "common_collection_favorites": "收藏夹",
    "common_text_delay_off_timer": "延时关灯",
    "common_open_delay_off_off_info_singular": "{0}分钟后自动关灯",
    "common_text_version": "版本:",
    "common_text_save": "保存",
    "common_text_save_success": "保存成功",
    "common_text_fail_ios": "保存失败，请稍候再试",
    "common_text_min": "分钟",
    "common_text_setting": "设置",
    "common_settings_schedules": "定时开关",
    "common_open_light_failed_tips_ios": "失败，请确保你的灯在点亮状态",
    "common_add_delay_off_fail": "延时关灯失败，请确保灯已开启且网络畅通。",
    "common_default_state_save_last_tips": "开启此功能，断电后再开灯，灯为断电前状态。当用APP关灯后，通过连续两次开关（重置灯为开关5次，操作相同），可以将灯点亮",
    "common_settings_night_light": "小夜灯",
    "common_title_bar_ct": "色温值",
    "common_title_bar_brightness": "亮度值",
    "common_night_light_start_time": "开始时间",
    "common_night_light_end_time": "结束时间",
    "common_night_light_auto_delay_off": "自动延时关灯",
    "common_night_light_delay_off_time": "延时时间",
    "common_nightlight_open_success": "小夜灯已开启",
    "common_nightlight_close_success": "小夜灯已关闭",
    "common_nightlight_operate_failure_ios": "设置小夜灯失败，请稍后再试",
    "common_text_hour_unit": "时",
    "common_text_hour": "小时",
    "common_remote_control": "遥控器",
    "common_text_unpaired": "解除绑定",
    "common_remote_management_ios": "管理遥控器",
    "common_give_up": "要舍弃修改吗？",
    "common_text_miband": "小米手环",
    "common_miband_will_pair_tips": "绑定小米手环，睡着后灯会自动关闭",
    "common_miband_have_pair_tips": "已绑定小米手环，睡着后灯会自动关闭",
    "common_miband_bind_autoclose": "睡觉自动关灯",
    "common_miband_pair": "绑定小米手环",
    "common_miband_unpair": "解除手环绑定",
    "common_miband_search_title": "搜索小米手环",
    "common_miband_search_tip": "请把小米手环靠近手机，并确保手环与“小米运动”已绑定",
    "common_miband_found": "发现小米手环",
    "common_miband_pairing_ios": "正在绑定小米手环…",
    "common_miband_search_notfound": "没有发现小米手环",
    "common_miband_pair_fail_ios": "绑定失败",
    "common_miband_reopen_broadcast_ok": "已打开，开始绑定",
    "miband_broadcast_main": "miband_broadcast_main.png",
    "common_miband_search_retry": "重新搜索",
    "common_miband_unpair_tips": "解除绑定之后将不能实现睡着后自动关灯",
    "common_miband_alter_no_ios": "没有",
    "common_miband_alter_yes_ios": "是的",
    "common_miband_shake_ios": "要绑定的手环震动了吗？",
    "common_miband_reopen_broadcast": "请先打开小米运动APP > 我的，找到要绑定的小米手环，并开启蓝牙广播",
    "common_text_brightness": "灯光亮度",
    "common_open_delay_off_brightness_sub": "灯会以此亮度开启",
    "common_collection_select_message": "确认选择：{0}，为智能场景的灯光设置？",
    "common_scene_quit_message": "未选中相关的灯光设置，是否退出？",
    "common_dialog_notice_title": "提示",
    "common_text_rename": "重命名",
    "common_setting_share_device_ios": "设备共享",
    "common_setting_check_firmware_upgrade_ios": "检查固件升级",
    "common_setting_unbind_device_ios": "解除连接",
    "common_view_button_container_colors": "彩光",
    "common_view_button_container_sunlight": "日光",
    "common_view_button_container_whitelight": "白光",
    "common_view_control_flow_setting": "流光设置",
    "common_color_flow_pickup_title": "取颜色",
    "common_text_capture_apply": "应用",
    "common_collection_added_success": "收藏成功",
    "common_text_renamed": "已重命名",
    "common_text_delete": "删除",
    "common_text_deleted": "删除成功",
    "common_default_state_set_default_desc": "点击“保存”按钮，即可将设备当前灯光保存为默认灯光。",
    "common_text_confirm_knob_custom": "确认双击开启灯光 {0} ？",
    "common_collection_knob_kidmode_msg": "你已开启儿童模式，此灯光色温为{0}K，超过了限制范围（低于4000K）。如需使用此灯光，请关闭儿童模式。",
    "common_dialog_kidmode_disable_apply": "关闭儿童模式并应用",
    "common_view_button_container_pickup_color": "拾色",
    "common_settings_general_setting_ios": "通用设置",
    "common_settings_device_setting": "设备设置",
    "common_text_bright": "亮度",
    "common_text_color_temperature": "色温",
    "common_text_color": "颜色",
    "common_collection_apply_light": "立即使用",
    "common_text_flow": "流光",
    "common_text_night_light": "月光",
    "common_collection_recommend_segment": "推荐",
    "common_collection_favorite_segment": "收藏",
    "common_setting_room_management_ios": "位置管理",
    "common_setting_ifttt_auto_ios": "智能场景",
    "common_setting_new_more_ios": "更多设置",
    "common_setting_add_to_desktop_ios": "添加桌面快捷方式",
    "common_dialog_text_upgrade_firmware": "请先升级固件!",
    "common_msg_user_agreement": "使用条款",
    "common_msg_privacy_policy": "隐私政策",
    "common_msg_agreement_and_policy": "使用条款和隐私政策",
    "common_setting_night_light_no_open_ios": "未开启",
    "common_scene_open_delay_off": "开启并延时关灯",
    "common_night_light_enable_ios": "开启",
    "common_miband_band_ios": "手环已绑定",
    "common_miband_not_bind_ios": "未绑定",
    "common_setting_ble_gateway_ios": "蓝牙网关",
    "common_default_state_on_from_power": "通电后默认开灯",
    "common_default_state_title": "默认状态",
    "common_default_state_save_last": "记住断电前状态",
    "common_default_state_recovery_break_light": "恢复断电前灯光",
    "common_default_state_set_default_title": "默认灯光",
    "common_collection_apply_success": "应用成功",
    "common_collection_apply_failed": "应用失败",
    "common_delay_off_canceled": "延时关灯已取消",
    "common_del_delay_off_fail": "取消延时关灯失败",
    "common_miband_updating": "更新中...",
    "common_collection_rename_failed": "重命名失败",
    "common_remote_control_mac_address": "MAC地址",
    "common_remote_control_seesaw": "智能调光开关",
    "common_remote_control_auster": "智能浴霸遥控器",
    "common_remote_control_and_switch_title": "遥控器与开关",
    "common_remote_bind_remote_and_switch_link": "如何绑定遥控器与开关？",
    "common_remote_connection_no_binding_tips": "还没有绑定任何遥控器或开关",
    "common_remote_connection_web_title": "选择遥控器与开关",
    "commom_default_state_auto_save_desc": "开启后，设备会自动保存断电前灯光，下次通电后开灯时会自动恢复；关闭后，设备每次通电后开灯时都会恢复到默认灯光。",
    "common_default_state_light_prompt": "选择通电后灯光的状态",
    "common_default_state_success": "设置默认通电灯光成功",
    "common_default_state_fail": "设置默认通电灯光失败",
    "common_schedule_repeat_mode_everyday": "每天",
    "common_schedule_repeat_mode_workday": "工作日",
    "common_schedule_repeat_mode_freeday": "周末",
    "common_schedule_repeat_mode_monday": "周一",
    "common_schedule_repeat_mode_tuesday": "周二",
    "common_schedule_repeat_mode_wensday": "周三",
    "common_schedule_repeat_mode_thursday": "周四",
    "common_schedule_repeat_mode_friday": "周五",
    "common_schedule_repeat_mode_saturday": "周六",
    "common_schedule_repeat_mode_sunday": "周天",
    "common_settings_seesaw_switch_opened": "凌动开启",
    "common_settings_seesaw_switch_offed": "凌动关闭",
    "common_settings_seesaw_switch_failed": "状态切换失败",
    "common_settings_seesaw_switch": "凌动开关",
    "common_settings_seesaw_switch_tips": "请仅在与“凌动开关”配合使用的情况下打开此功能，否则可能引起开关灯异常。",
    "common_settings_seesaw_switch_op_tips": "开启“凌动开关”功能",
    "common_settings_seesaw_switch_status_on": "开启",
    "common_settings_seesaw_switch_status_off": "关闭",
    "common_home_kit_add_tip": "产品已支持Apple HomeKit，打开米家APP，长按本产品的快捷操作卡片，选择HomeKit图标可将产品添加到Home应用中。",
    "common_moon_night_light_tip_one": "“小夜灯”开启后，在该时间段内，使用app或遥控器开灯，灯会自动进入小夜灯模式。",
    "common_moon_night_light_tip_two": "启用“自动延时关灯”后，灯会根据设置的延迟时间进行自动关闭。"
  };
},10646,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hans/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10649,[10652],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {};
},10652,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10655,[10658],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant_hk/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = {
		"common_text_done": "完成",
		"common_text_button_add": "新增",
		"common_text_edit": "編輯",
		"common_text_rename": "重新命名",
		"common_dialog_cancel": "取消",
		"common_dialog_ok": "確定",
		"common_collection_empty_ios": "不能為空",
		"common_collection_too_long_ios": "名稱過長",
		"common_collection_judgement_existed": "名稱已經存在",
		"common_collection_network_error_ios": "網絡錯誤，請稍後重試",
		"common_collection_dialog_add_title": "新增個人收藏",
		"common_text_loading_ios": "載入中…",
		"common_view_button_container_switch_open": "開燈",
		"common_view_button_container_switch_close": "關燈",
		"common_collection_favorites": "收藏夾",
		"common_text_delay_off_timer": "延時關燈",
		"common_open_delay_off_off_info_singular": "{0} 分鐘後自動關燈",
		"common_text_version": "版本：",
		"common_text_save": "儲存",
		"common_text_save_success": "儲存成功",
		"common_text_fail_ios": "儲存失敗，請稍候再試",
		"common_text_setting": "設定",
		"common_settings_schedules": "定時開關",
		"common_open_light_failed_tips_ios": "失敗，請確保燈已亮著",
		"common_add_delay_off_fail": "延時關燈失敗，請確保燈已開啟且網絡順暢。",
		"common_default_state_save_last_tips": "開啟此功能後，在切斷電源後再次開燈，燈光會回到切斷電源前的狀態。用APP關燈後，連續開關兩次即可點亮燈光（重設電燈的方法則為開關5次）",
		"common_settings_night_light": "小夜燈",
		"common_title_bar_ct": "色溫值",
		"common_title_bar_brightness": "亮度值",
		"common_night_light_start_time": "開始時間",
		"common_night_light_end_time": "結束時間",
		"common_night_light_auto_delay_off": "自動延時關燈",
		"common_night_light_delay_off_time": "延時時間",
		"common_nightlight_open_success": "小夜燈已開啟",
		"common_nightlight_close_success": "小夜燈已關閉",
		"common_nightlight_operate_failure_ios": "設定小夜燈失敗，請稍後再試",
		"common_text_unpaired": "解除綁定",
		"common_remote_management_ios": "管理遙控器",
		"common_give_up": "要放棄變更嗎？",
		"common_text_miband": "小米手環",
		"common_miband_will_pair_tips": "綁定小米手環，您睡着後會自動關燈",
		"common_miband_have_pair_tips": "已綁定小米手環，您睡着後會自動關燈",
		"common_miband_bind_autoclose": "睡覺自動關燈",
		"common_miband_pair": "綁定小米手環",
		"common_miband_unpair": "解除手環綁定",
		"common_miband_search_title": "搜尋小米手環",
		"common_miband_search_tip": "請將小米手環移近手機，並確保手環已綁定「小米運動」",
		"common_miband_found": "發現小米手環",
		"common_miband_pairing_ios": "正在綁定小米手環…",
		"common_miband_search_notfound": "沒有發現小米手環",
		"common_miband_pair_fail_ios": "綁定失敗",
		"common_miband_reopen_broadcast_ok": "已打開，開始綁定",
		"common_miband_search_retry": "重新搜尋",
		"common_miband_unpair_tips": "解除綁定之後，將無法在您睡著後自動關燈",
		"common_miband_alter_no_ios": "沒有",
		"common_miband_alter_yes_ios": "是的",
		"common_miband_shake_ios": "要綁定的手環有沒有震動？",
		"common_miband_reopen_broadcast": "請先打開小米運動APP > 我的，找出要綁定的小米手環，並開啟藍牙廣播",
		"common_text_brightness": "燈光亮度",
		"common_open_delay_off_brightness_sub": "燈會以此亮度開啟",
		"common_collection_select_message": "確認選擇：{0}，為智能場景的燈光設定？",
		"common_scene_quit_message": "未選定相關的燈光設定，是否離開？",
		"common_dialog_notice_title": "提示",
		"common_setting_share_device_ios": "裝置共用",
		"common_setting_check_firmware_upgrade_ios": "檢查韌體升級",
		"common_setting_unbind_device_ios": "解除連接",
		"common_view_button_container_colors": "彩光",
		"common_view_button_container_sunlight": "日光",
		"common_view_button_container_whitelight": "白光",
		"common_view_control_flow_setting": "流光設定",
		"common_color_flow_pickup_title": "取顏色",
		"common_text_capture_apply": "應用",
		"common_collection_added_success": "收藏成功",
		"common_text_renamed": "已重新命名",
		"common_text_delete": "刪除",
		"common_text_deleted": "刪除成功",
		"common_default_state_set_default_desc": "點擊「儲存」按鈕，即可將裝置當前燈光儲存為預設燈光。",
		"common_default_light_ios": "設定預設通電燈光",
		"common_text_confirm_knob_custom": "確認按兩下開啟燈光{0}？",
		"common_collection_knob_kidmode_msg": "您已開啟兒童模式，現時燈光色溫為{0}K，超出了限制範圍（低於4000K）。如需使用此燈光，請關閉兒童模式。",
		"common_dialog_kidmode_disable_apply": "關閉兒童模式並應用",
		"common_view_button_container_pickup_color": "拾色",
		"common_settings_general_setting_ios": "通用設定",
		"common_settings_device_setting": "裝置設定",
		"common_text_bright": "亮度",
		"common_text_color_temperature": "色溫",
		"common_text_color": "顏色",
		"common_collection_apply_light": "立即使用",
		"common_text_flow": "流光",
		"common_text_night_light": "月光",
		"common_collection_recommend_segment": "推薦",
		"common_collection_favorite_segment": "收藏",
		"common_setting_room_management_ios": "位置管理",
		"common_setting_ifttt_auto_ios": "智能場景",
		"common_setting_new_more_ios": "更多設定",
		"common_setting_add_to_desktop_ios": "新增桌面快捷鍵",
		"common_dialog_text_upgrade_firmware": "請先升級韌體！",
		"common_msg_user_agreement": "使用條款",
		"common_msg_privacy_policy": "私隱政策",
		"common_msg_agreement_and_policy": "使用條款和私隱政策",
		"common_setting_night_light_no_open_ios": "未開啟",
		"common_scene_open_delay_off": "開啟並延時關燈",
		"common_night_light_enable_ios": "開啟",
		"common_miband_band_ios": "手環已綁定",
		"common_miband_not_bind_ios": "未綁定",
		"common_setting_ble_gateway_ios": "藍牙閘道",
		"common_default_state_on_from_power": "通電後預設開燈",
		"common_default_state_title": "預設狀態",
		"common_default_state_save_last": "記住斷電前狀態",
		"common_default_state_save_last_light_as_default_ios": "記住斷電前燈光",
		"common_default_state_set_default_title": "預設燈光",
		"common_collection_apply_success": "應用成功",
		"common_collection_apply_failed": "應用失敗",
		"common_delay_off_canceled": "延時關燈已取消",
		"common_del_delay_off_fail": "取消延時關燈失敗",
		"common_miband_updating": "更新中…",
		"common_collection_rename_failed": "重新命名失敗",
		"common_remote_control_mac_address": "MAC地址",
		"common_remote_control_seesaw": "智能調光開關",
		"common_remote_control_auster": "智能浴霸遙控器",
		"common_remote_control_and_switch_title": "遙控器與開關",
		"common_remote_bind_remote_and_switch_link": "如何綁定遙控器與開關？",
		"common_remote_connection_no_binding_tips": "還沒有綁定任何遙控器或開關",
		"common_remote_connection_web_title": "選擇遙控器與開關",
		"common_text_settings": "功能",
		"commom_default_state_auto_save_desc": "開啟後，裝置會自動儲存斷電前的燈光，在下次通電後再開燈時自動恢復；關閉後，裝置於每次通電後再開燈時都會恢復到預設燈光。",
		"common_text_loading": "正在獲取裝置資訊…",
		"common_dialog_text_quit": "離開",
		"common_dialog_text_retry": "重試",
		"common_lamp_turned_off": "檯燈已關閉",
		"common_view_button_container_guard_read": "閱讀護眼",
		"common_view_button_container_guard_screen": "螢幕護眼",
		"common_text_delete_failed": "刪除失敗",
		"common_text_kids_mode": "兒童模式",
		"common_kids_mode_tips": "啟用「兒童模式」後，調節色溫時燈光會限制在4000K以下，減少燈光中藍光的比例，從而避免兒童的雙眼受到藍光傷害，保護視力。",
		"common_pdo_bottom_tips": "按兩下燈體上的旋轉按鈕，可快速開啟專注模式\n休息時，燈光會以暖光一明一暗緩慢呼吸\n按一下或輕轉旋轉按鈕，燈光會恢復正常狀態",
		"common_pdo_title": "專注模式",
		"common_pdo_time_info": "每工作{0}分鐘，休息{1}分鐘",
		"common_pdo_time_rest_select_title": "休息時長",
		"common_pdo_time_work_select_title": "工作時長",
		"common_pdo_settings": "作息設定",
		"common_pdo_txt_work": "(%1$d分鐘)後工作",
		"common_pdo_txt_rest": "(%1$d分鐘)後休息",
		"common_scene_dialog_light_not_support": "暫不支援設定此燈光，請重新選擇",
		"common_remote_control": "遙控器",
		"common_text_detail": "詳情",
		"common_text_toast_limit_mid": "由於處理權受限，此功能暫時無法使用",
		"common_default_state_light_prompt": "選擇通電後燈光的狀態",
		"common_default_state_recovery_break_light": "恢復斷電前燈光",
		"common_default_state_success": "成功設定預設通電燈光",
		"common_default_state_fail": "無法設定預設通電燈光",
		"common_setting_new_group": "新建燈組",
		"common_text_mesh_not_connected": "該裝置需要配搭「Yeelight語音助手」或「小米小愛智能鬧鐘」使用，請前往米家有品購買。",
		"common_title_mesh_not_connected": "尚未連接閘道",
		"common_text_device_management_ios": "裝置管理",
		"common_schedule_repeat_mode_everyday": "每天",
		"common_schedule_repeat_mode_workday": "工作日",
		"common_schedule_repeat_mode_freeday": "週末",
		"common_schedule_repeat_mode_monday": "週一",
		"common_schedule_repeat_mode_tuesday": "週二",
		"common_schedule_repeat_mode_wensday": "週三",
		"common_schedule_repeat_mode_thursday": "週四",
		"common_schedule_repeat_mode_friday": "週五",
		"common_schedule_repeat_mode_saturday": "週六",
		"common_schedule_repeat_mode_sunday": "週日",
		"common_nightlight_operate_failure_android": "設定失敗",
		"common_text_min": "分鐘",
		"common_text_hour_unit": " 時",
		"common_text_hour": "小時",
		"common_text_lamp_reading": "閱讀",
		"common_text_lamp_custom": "調光",
		"common_text_lamp_pc_mode": "用電腦",
		"common_settings_seesaw_switch_opened": "凌動開啟",
		"common_settings_seesaw_switch_offed": "凌動關閉",
		"common_settings_seesaw_switch_failed": "狀態切換失敗",
		"common_settings_seesaw_switch": "凌動開關",
		"common_settings_seesaw_switch_tips": "請僅在與「凌動開關」配合使用的情況下打開此功能，否則可能引起開關燈異常。",
		"common_settings_seesaw_switch_status_on": "開啟",
		"common_settings_seesaw_switch_status_off": "關閉",
		"common_settings_seesaw_switch_op_tips": "開啟「凌動開關」功能"
	};
},10658,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant_hk/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10661,[10664],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant_tw/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "功能",
    "common_text_done": "完成",
    "common_text_button_add": "添加",
    "common_text_edit": "編輯",
    "common_dialog_cancel": "取消",
    "common_dialog_ok": "確定",
    "common_collection_empty_ios": "不能為空白",
    "common_collection_too_long_ios": "名稱太長",
    "common_collection_judgement_existed": "名稱已存在",
    "common_collection_network_error_ios": "網路錯誤，請稍後再試",
    "common_collection_dialog_add_title": "新增個人收藏",
    "common_text_loading_ios": "正在載入…",
    "common_view_button_container_switch_open": "開燈",
    "common_view_button_container_switch_close": "關燈",
    "common_collection_favorites": "我的最愛",
    "common_text_delay_off_timer": "延時關燈",
    "common_open_delay_off_off_info_singular": "{0} 分鐘後自動關燈",
    "common_text_version": "版本：",
    "common_text_save": "儲存",
    "common_text_save_success": "儲存成功",
    "common_text_fail_ios": "儲存失敗，請稍後再試",
    "common_text_min": "分鐘",
    "common_text_setting": "設定",
    "common_settings_schedules": "定時開關",
    "common_open_light_failed_tips_ios": "失敗，請確認您的燈為點亮狀態",
    "common_add_delay_off_fail": "延時關燈失敗，請確認燈已開啟且網路暢通。",
    "common_default_state_save_last_tips": "開啟此功能後，若斷電後再開燈，燈光將自動恢復為斷電前狀態。若斷電前是關燈狀態，則連續兩次開關燈即可將燈點亮。",
    "common_settings_night_light": "小夜燈",
    "common_title_bar_ct": "色溫值",
    "common_title_bar_brightness": "亮度值",
    "common_night_light_start_time": "開始時間",
    "common_night_light_end_time": "結束時間",
    "common_night_light_auto_delay_off": "自動延時關燈",
    "common_night_light_delay_off_time": "延時時間",
    "common_nightlight_open_success": "小夜燈已開啟",
    "common_nightlight_close_success": "小夜燈已關閉",
    "common_nightlight_operate_failure_ios": "設定小夜燈失敗，請稍後再試",
    "common_text_hour_unit": "時",
    "common_text_hour": "小時",
    "common_remote_control": "遙控器",
    "common_text_unpaired": "解除綁定",
    "common_remote_management_ios": "管理遙控器",
    "common_give_up": "捨棄修改？",
    "common_text_miband": "小米手環",
    "common_miband_will_pair_tips": "綁定小米手環，入睡後自動關燈",
    "common_miband_have_pair_tips": "已綁定小米手環，入睡後自動關燈",
    "common_miband_bind_autoclose": "睡覺自動關燈",
    "common_miband_pair": "綁定小米手環",
    "common_miband_unpair": "解除手環綁定",
    "common_miband_search_title": "搜尋小米手環",
    "common_miband_search_tip": "請將小米手環靠近手機，並確認手環與「小米運動」已綁定",
    "common_miband_found": "找到小米手環",
    "common_miband_pairing_ios": "正在綁定小米手環",
    "common_miband_search_notfound": "未找到小米手環",
    "common_miband_pair_fail_ios": "綁定失敗",
    "common_miband_reopen_broadcast_ok": "已開啓，開始綁定",
    "miband_broadcast_main": "miband_broadcast_main.png",
    "common_miband_search_retry": "重新搜尋",
    "common_miband_unpair_tips": "解除綁定之後將無法執行入睡後自動關燈",
    "common_miband_alter_no_ios": "否",
    "common_miband_alter_yes_ios": "是",
    "common_miband_shake_ios": "您的手環震動了嗎?",
    "common_miband_reopen_broadcast": "請先開啓小米運動 APP > 我的 > 小米手環，並開啟藍牙廣播",
    "common_text_brightness": "燈光亮度",
    "common_open_delay_off_brightness_sub": "燈會以此亮度開啟",
    "common_collection_select_message": "確認選擇：{0}，為智能場景的燈光設定？",
    "common_scene_quit_message": "未選取相關的燈光設定，是否退出？",
    "common_dialog_notice_title": "提示",
    "common_text_rename": "修改裝置名稱",
    "common_setting_share_device_ios": "裝置共用",
    "common_setting_check_firmware_upgrade_ios": "檢查韌體升級",
    "common_setting_unbind_device_ios": "解除連接",
    "common_view_button_container_colors": "彩光",
    "common_view_button_container_sunlight": "日光",
    "common_view_button_container_whitelight": "白光",
    "common_view_control_flow_setting": "流光設定",
    "common_color_flow_pickup_title": "取顏色",
    "common_text_capture_apply": "套用",
    "common_collection_added_success": "已新增",
    "common_text_renamed": "已重新命名",
    "common_text_delete": "删除",
    "common_text_deleted": "刪除成功",
    "common_default_state_set_default_desc": "按一下儲存，即可將目前燈光儲存為預設通電時的狀態。當斷電後再通電時，開燈即為此燈光。",
    "common_text_confirm_knob_custom": "確認按兩下開啟燈光 {0} ？",
    "common_collection_knob_kidmode_msg": "您已開啟兒童模式，此燈光色溫為 {0}K，超過了限制範圍（低於 4000K）。如需使用此燈光，請關閉兒童模式。",
    "common_dialog_kidmode_disable_apply": "關閉兒童模式並套用",
    "common_view_button_container_pickup_color": "拾色",
    "common_settings_general_setting_ios": "一般設定",
    "common_settings_device_setting": "裝置設定",
    "common_text_bright": "亮度",
    "common_text_color_temperature": "色溫",
    "common_text_color": "顏色",
    "common_collection_apply_light": "立即使用",
    "common_text_flow": "流光",
    "common_text_night_light": "月光",
    "common_collection_recommend_segment": "推薦",
    "common_collection_favorite_segment": "收藏",
    "common_setting_room_management_ios": "位置管理",
    "common_setting_ifttt_auto_ios": "智慧",
    "common_setting_new_more_ios": "更多設定",
    "common_setting_add_to_desktop_ios": "新增桌面捷徑",
    "common_dialog_text_upgrade_firmware": "請升級後使用！",
    "common_msg_user_agreement": "使用條款",
    "common_msg_privacy_policy": "隱私權政策",
    "common_msg_agreement_and_policy": "使用條款和隱私權政策",
    "common_setting_night_light_no_open_ios": "未開啟",
    "common_scene_open_delay_off": "開啓並延時關燈",
    "common_night_light_enable_ios": "開啟",
    "common_miband_band_ios": "手環已綁定",
    "common_miband_not_bind_ios": "未綁定",
    "common_setting_ble_gateway_ios": "藍牙閘道",
    "common_default_state_on_from_power": "通電後預設開燈",
    "common_default_state_title": "預設狀態",
    "common_default_state_save_last": "記住斷電前狀態",
    "common_default_state_recovery_break_light": "記住斷電前燈光",
    "common_default_state_set_default_title": "預設燈光",
    "common_collection_apply_success": "套用成功",
    "common_collection_apply_failed": "套用失敗",
    "common_delay_off_canceled": "延時關燈已取消",
    "common_del_delay_off_fail": "取消延時關燈失敗",
    "common_miband_updating": "更新中…",
    "common_collection_rename_failed": "重新命名失敗",
    "common_remote_control_mac_address": "MAC地址",
    "common_remote_control_seesaw": "智能调光开关",
    "common_remote_control_auster": "智能浴霸遥控器",
    "common_remote_control_and_switch_title": "遥控器与开关",
    "common_remote_bind_remote_and_switch_link": "如何绑定遥控器与开关？",
    "common_remote_connection_no_binding_tips": "还没有绑定任何遥控器或开关",
    "common_remote_connection_web_title": "选择遥控器与开关",
    "commom_default_state_auto_save_desc": "開啟後，裝置會自動儲存斷電前燈光，下次通電後開燈時會自動恢復；關閉後，裝置每次通電後開燈時都會恢復到預設燈光。",
    "common_default_state_light_prompt": "選擇通電後燈光的狀態",
    "common_default_state_success": "設定預設通電燈光成功",
    "common_default_state_fail": "設定預設通電燈光失敗",
    "common_schedule_repeat_mode_everyday": "每天",
    "common_schedule_repeat_mode_workday": "工作日",
    "common_schedule_repeat_mode_freeday": "週末",
    "common_schedule_repeat_mode_monday": "週一",
    "common_schedule_repeat_mode_tuesday": "週二",
    "common_schedule_repeat_mode_wensday": "週三",
    "common_schedule_repeat_mode_thursday": "週四",
    "common_schedule_repeat_mode_friday": "週五",
    "common_schedule_repeat_mode_saturday": "週六",
    "common_schedule_repeat_mode_sunday": "週日",
    "common_settings_seesaw_switch_opened": "開啟凌動功能",
    "common_settings_seesaw_switch_offed": "關閉凌動功能",
    "common_settings_seesaw_switch_failed": "設置切換失敗",
    "common_settings_seesaw_switch": "凌動功能開關",
    "common_settings_seesaw_switch_tips": "請與凌動開關共同使用時開啟此功能，避免日常開關燈異常。",
    "common_settings_seesaw_switch_status_on": "開啟",
    "common_settings_seesaw_switch_status_off": "關閉",
    "common_settings_seesaw_switch_op_tips": "開啟\"凌動開關\"功能"
  };
},10664,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/hant_tw/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10667,[10670],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/it/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Funzione",
    "common_text_done": "Fatto",
    "common_text_button_add": "Aggiungi",
    "common_text_edit": "Modifica",
    "common_dialog_cancel": "Annulla",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Non può essere vuoto",
    "common_collection_too_long_ios": "Questo nome è troppo lungo",
    "common_collection_judgement_existed": "Nome già esistente",
    "common_collection_network_error_ios": "Errore di rete, riprovare più tardi",
    "common_collection_dialog_add_title": "Aggiungi ai Preferiti",
    "common_text_loading_ios": "Caricamento in corso…",
    "common_view_button_container_switch_open": "Acceso",
    "common_view_button_container_switch_close": "Spento",
    "common_collection_favorites": "Preferiti",
    "common_text_delay_off_timer": "Ritardo spegnimento",
    "common_open_delay_off_off_info_singular": "Spegni automaticamente la luce dopo {0} min",
    "common_text_version": "Versione:",
    "common_text_save": "Salva",
    "common_text_save_success": "Salvataggio completato",
    "common_text_fail_ios": "Impossibile salvare, riprovare più tardi.",
    "common_text_min": "m",
    "common_text_setting": "Impostazioni",
    "common_settings_schedules": "Pianificazioni",
    "common_open_light_failed_tips_ios": "Operazione non riuscita, accertarsi che la luce sia accesa.",
    "common_add_delay_off_fail": "Spegnimento non riuscito successivamente al ritardo, accertarsi che la luce sia accesa e abbia accesso alla rete..",
    "common_default_state_save_last_tips": "Una volta abilitata questa funzione, la luce ritorna sempre all’impostazione attuale quando si spegne e riaccende l’unità. Dopo aver spento la luce tramite l'app, accendere e spegnere la luce due volte (un'operazione simile a resettare la luce, che richiede di accendere e spegnere la luce per 5 volte consecutive) per accendere la luce.",
    "common_settings_night_light": "Luce notturna",
    "common_title_bar_ct": "Temperatura colore",
    "common_title_bar_brightness": "Valore luminosità",
    "common_night_light_start_time": "Ora di inizio",
    "common_night_light_end_time": "Ora di fine",
    "common_night_light_auto_delay_off": "Ritardo spegnimento automatico",
    "common_night_light_delay_off_time": "Ritardo",
    "common_nightlight_open_success": "Luce notturna abilitata",
    "common_nightlight_close_success": "Luce notturna disabilitata",
    "common_nightlight_operate_failure_ios": "Impostazione luce notturna non riuscita, riprovare più tardi.",
    "common_text_hour_unit": "h",
    "common_text_hour": "h",
    "common_remote_control": "Telecomando",
    "common_text_unpaired": "Disassocia",
    "common_remote_management_ios": "Gestione telecomando",
    "common_give_up": "Rimuovere le modifiche?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Associare a Mi Band, in modo tale che la luce si spenga automaticamente dopo essersi addormentati.",
    "common_miband_have_pair_tips": "Associato a Mi Band, in modo tale che la luce si spenga automaticamente dopo essersi addormentati.",
    "common_miband_bind_autoclose": "Si spegne automaticamente",
    "common_miband_pair": "Associare a Mi Band",
    "common_miband_unpair": "Disassocia da Mi Band",
    "common_miband_search_title": "Cerca Mi Band",
    "common_miband_search_tip": "Tenere Mi Band vicino al telefono e assicurarsi che sia associato all’app Mi Fit.",
    "common_miband_found": "Mi Band trovato",
    "common_miband_pairing_ios": "Abbinamento a Mi Band in corso…",
    "common_miband_search_notfound": "Impossibile trovare Mi Band",
    "common_miband_pair_fail_ios": "Abbinamento non riuscito",
    "common_miband_reopen_broadcast_ok": "Abilitato, avvio abbinamento",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_search_retry": "Cerca di nuovo",
    "common_miband_unpair_tips": "Una volta disassociati i dispositivi, la luce non si spegne automaticamente dopo essersi addormentati.",
    "common_miband_alter_no_ios": "No",
    "common_miband_alter_yes_ios": "Sì",
    "common_miband_shake_ios": "Il Mi Band che si desidera associare vibra?",
    "common_miband_reopen_broadcast": "Passare all’app Mi Fit > Profilo > toccare Aggiungi dispositivo > selezionare Band e attivare il Bluetooth.",
    "common_text_brightness": "Luminosità",
    "common_open_delay_off_brightness_sub": "La luce verrà impostata su questa luminosità quando accesa.",
    "common_scene_quit_message": "Nessuna impostazione della luce selezionata. Uscire adesso?",
    "common_collection_select_message": "Selezionare {0} come impostazione della luce della scena smart?",
    "common_dialog_notice_title": "Notifiche",
    "common_text_rename": "Rinomina",
    "common_setting_share_device_ios": "Condivisione dispositivo",
    "common_setting_check_firmware_upgrade_ios": "Controlla se sono disponibili aggiornamenti del firmware",
    "common_setting_unbind_device_ios": "Disconnetti",
    "common_view_button_container_colors": "Luce colorata",
    "common_view_button_container_sunlight": "Luce solare",
    "common_view_button_container_whitelight": "Luce bianca",
    "common_view_control_flow_setting": "Impostazioni flusso",
    "common_color_flow_pickup_title": "Scegli colore",
    "common_text_capture_apply": "Applica",
    "common_collection_added_success": "Aggiunto",
    "common_text_renamed": "Ridenominazione completata",
    "common_text_delete": "Eliminazione",
    "common_text_deleted": "Eliminazione completata",
    "common_default_state_set_default_desc": "Toccare “Salva” per salvare l’impostazione corrente come stato predefinito. Quando la luce viene riaccesa, viene utilizzato questo stato.",
    "common_text_confirm_knob_custom": "Toccare due volte per accendere {0}?",
    "common_collection_knob_kidmode_msg": "È stata attivata la Modalità bambino. Il colore della temperatura è {0}K, che supera il limite specificato (4.000 K). Se si desidera utilizzare questa impostazione della luce, disabilitare la Modalità bambino.",
    "common_dialog_kidmode_disable_apply": "Applica comunque",
    "common_view_button_container_pickup_color": "Scatta",
    "common_settings_general_setting_ios": "Impostazioni generali",
    "common_settings_device_setting": "Impostazioni dispositivo",
    "common_text_bright": "Luminosità",
    "common_text_color_temperature": "Temperatura colore",
    "common_text_color": "Colore",
    "common_collection_apply_light": "Applica",
    "common_text_flow": "Luce fluida",
    "common_text_night_light": "Luna",
    "common_collection_recommend_segment": "Consigliato",
    "common_collection_favorite_segment": "Preferiti",
    "common_setting_room_management_ios": "Gestione delle sedi",
    "common_setting_ifttt_auto_ios": "Scena Smart",
    "common_setting_new_more_ios": "Impostazioni aggiuntive",
    "common_setting_add_to_desktop_ios": "Aggiungi un collegamento schermata iniziale",
    "common_dialog_text_upgrade_firmware": "Per prima cosa, aggiornare il firmware.",
    "common_msg_user_agreement": "Contratto di licenza",
    "common_msg_privacy_policy": "Informativa sulla Privacy",
    "common_msg_agreement_and_policy": "Contratto di licenza e Informativa sulla privacy",
    "common_setting_night_light_no_open_ios": "Non abilitato",
    "common_scene_open_delay_off": "Accendi le luci e abilita il ritardo spegnimento",
    "common_night_light_enable_ios": "Abilita",
    "common_miband_band_ios": "Band abbinato",
    "common_miband_not_bind_ios": "Non abbinato",
    "common_setting_ble_gateway_ios": "Gateway Bluetooth",
    "common_default_state_on_from_power": "Stato della luce predefinito all’accensione",
    "common_default_state_title": "Stato predefinito",
    "common_default_state_save_last": "Ricordare l’ultimo stato utilizzato",
    "common_default_state_recovery_break_light": "Recupero automatico stato luce",
    "common_default_state_set_default_title": "Stato luci predefinito",
    "common_collection_apply_success": "Applicazione riuscita",
    "common_delay_off_canceled": "Ritardo spegnimento annullato",
    "common_del_delay_off_fail": "Impossibile annullare ritardo spegnimento",
    "common_miband_updating": "Aggiornamento in corso…",
    "common_collection_rename_failed": "Impossibile rinominare",
    "common_remote_control_and_switch_title": "Telecomando e interruttore",
    "common_remote_control_mac_address": "Indirizzo MAC",
    "common_remote_control_seesaw": "Interruttore dimmer intelligente",
    "common_remote_control_auster": "Telecomando Yeelight Bath Heater",
    "common_remote_bind_remote_and_switch_link": "Come si abbinano il telecomando e l’interruttore?",
    "common_remote_connection_no_binding_tips": "Il telecomando e l’interruttore non sono ancora abbinati.",
    "common_remote_connection_web_title": "Selezionare telecomando e interruttore.",
    "commom_default_state_auto_save_desc": "Quando è abilitato, il dispositivo salva le impostazioni della luce utilizzate quando è spento e recupera tali impostazioni quando viene acceso di nuovo. Quando è disabilitato, il dispositivo ritorna sempre allo stato della luce predefinito quando viene acceso.",
    "common_default_state_light_prompt": "Selezionare lo stato da utilizzare all’accensione.",
    "common_default_state_success": "Impostazione stato luci predefinito completata",
    "common_default_state_fail": "Impossibile impostare lo stato luci predefinito",
    "common_schedule_repeat_mode_everyday": "Ogni giorno",
    "common_schedule_repeat_mode_workday": "Giorni lavorativi",
    "common_schedule_repeat_mode_freeday": "Fine settimana",
    "common_schedule_repeat_mode_monday": "Lunedì",
    "common_schedule_repeat_mode_tuesday": "Martedì",
    "common_schedule_repeat_mode_wensday": "Mercoledì",
    "common_schedule_repeat_mode_thursday": "Giovedì",
    "common_schedule_repeat_mode_friday": "Venerdì",
    "common_schedule_repeat_mode_saturday": "Sabato",
    "common_schedule_repeat_mode_sunday": "Domenica"
  };
},10670,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/it/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10673,[10676],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ko/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_done": "완료",
    "common_text_button_add": "추가",
    "common_text_edit": "편집",
    "common_text_rename": "이름 바꾸기",
    "common_dialog_cancel": "취소",
    "common_dialog_ok": "확인",
    "common_collection_empty_ios": "비워둘 수 없습니다.",
    "common_collection_too_long_ios": "이름이 너무 깁니다.",
    "common_collection_judgement_existed": "중복된 이름입니다.",
    "common_collection_network_error_ios": "네트워크 오류입니다. 잠시 후 다시 시도하세요.",
    "common_collection_dialog_add_title": "즐겨찾기에 추가",
    "common_text_loading_ios": "로드 중...",
    "common_view_button_container_switch_open": "켜기",
    "common_view_button_container_switch_close": "끄기",
    "common_collection_favorites": "즐겨찾기",
    "common_text_delay_off_timer": "예약 소등",
    "common_open_delay_off_off_info_singular": "{0}분 후 자동 소등",
    "common_text_version": "버전:",
    "common_text_save": "저장",
    "common_text_save_success": "성공적으로 저장되었습니다.",
    "common_text_fail_ios": "저장 실패, 잠시 후 다시 시도하세요.",
    "common_text_setting": "설정",
    "common_settings_schedules": "타이머 스위치",
    "common_open_light_failed_tips_ios": "실패했습니다. 전등이 켜진 상태인지 확인하세요.",
    "common_add_delay_off_fail": "예약 소등 실패, 전등이 켜져 있으며 네트워크 연결이 원활한지 확인하세요.",
    "common_default_state_save_last_tips": "해당 기능을 켜면, 다시 전등을 켰을 때 소등 전 상태를 유지합니다. APP으로 소등 후, 스위치를 두 번 연속 누르면(전등 초기화는 다섯 번, 조작 동일), 전등을 켤 수 있습니다.",
    "common_settings_night_light": "야간등",
    "common_title_bar_ct": "색온도 값",
    "common_title_bar_brightness": "밝기",
    "common_night_light_start_time": "시작 시간",
    "common_night_light_end_time": "종료 시간",
    "common_night_light_auto_delay_off": "자동 소등 예약",
    "common_night_light_delay_off_time": "예약 시간",
    "common_nightlight_open_success": "야간등 켜짐",
    "common_nightlight_close_success": "야간등 꺼짐",
    "common_nightlight_operate_failure_ios": "야간등 설정 실패, 잠시 후 다시 시도하세요.",
    "common_text_unpaired": "연동 해제",
    "common_remote_management_ios": "리모컨 관리",
    "common_give_up": "수정 사항을 취소하시겠습니까?",
    "common_text_miband": "미밴드",
    "common_miband_will_pair_tips": "미밴드 연동 시, 수면 시 자동으로 소등합니다.",
    "common_miband_have_pair_tips": "미밴드 연동 완료, 수면 시 자동으로 소등합니다.",
    "common_miband_bind_autoclose": "수면 시 자동 소등",
    "common_miband_pair": "미밴드 연동하기",
    "common_miband_unpair": "미밴드 연동 해제하기",
    "common_miband_search_title": "미밴드 검색",
    "common_miband_search_tip": "미밴드와 Mi Fit를 연동한 후, 미밴드를 휴대폰 가까이에 두세요.",
    "common_miband_found": "미밴드를 발견했습니다.",
    "common_miband_pairing_ios": "미밴드와 연동하고 있습니다.",
    "common_miband_search_notfound": "미밴드를 발견하지 못했습니다.",
    "common_miband_pair_fail_ios": "연동 실패",
    "common_miband_reopen_broadcast_ok": "활성화 완료, 연동을 시작합니다.",
    "common_miband_search_retry": "다시 검색하기",
    "common_miband_unpair_tips": "연동을 해제하면 실시간으로 수면 시 자동 소등 기능을 사용할 수 없습니다.",
    "common_miband_alter_no_ios": "아니요",
    "common_miband_alter_yes_ios": "네",
    "common_miband_shake_ios": "등록된 미밴드에 진동이 울렸습니까?",
    "common_miband_reopen_broadcast": "Mi Fit APP-나의 등록할 미밴드를 켜고, 블루투스를 활성화하세요.",
    "common_text_brightness": "밝기",
    "common_open_delay_off_brightness_sub": "해당 밝기로 켜집니다.",
    "common_collection_select_message": "선택: {0} 을(를) 스마트 배경 설정으로 하시겠습니까?",
    "common_scene_quit_message": "전등 관련 설정을 선택하지 않았습니다. 나가시겠습니까?",
    "common_dialog_notice_title": "알림",
    "common_setting_share_device_ios": "장치 공유",
    "common_setting_check_firmware_upgrade_ios": "펌웨어 업그레이드 확인",
    "common_setting_unbind_device_ios": "연결 해제",
    "common_view_button_container_colors": "컬러",
    "common_view_button_container_sunlight": "태양광",
    "common_view_button_container_whitelight": "백색광",
    "common_view_control_flow_setting": "유광 설정",
    "common_color_flow_pickup_title": "색상 선택 ",
    "common_text_capture_apply": "적용",
    "common_collection_added_success": "저장 성공",
    "common_text_renamed": "이름을 변경했습니다.",
    "common_text_delete": "삭제",
    "common_text_deleted": "성공적으로 삭제되었습니다.",
    "common_default_state_set_default_desc": "‘저장’ 버튼을 클릭하면 즉시 장치의 현재 조명을 기본 조명으로 저장할 수 있습니다.",
    "common_default_light_ios": "기본 등으로 저장",
    "common_text_confirm_knob_custom": "더블클릭 시 {0} (을)를 사용하시겠습니까?",
    "common_collection_knob_kidmode_msg": "키즈모드를 활성화했습니다. 해당 라이트의 색온도는 {0}K이므로, 제한 범위(4000K미만)를 초과합니다. 해당 모드를 사용하시려면 키즈모드를 꺼주세요.",
    "common_dialog_kidmode_disable_apply": "키즈모드와 앱 끄기,",
    "common_view_button_container_pickup_color": "색상 선택",
    "common_settings_general_setting_ios": "일반 설정",
    "common_settings_device_setting": "장치 설정",
    "common_text_bright": "밝기",
    "common_text_color_temperature": "색온도",
    "common_text_color": "색상",
    "common_collection_apply_light": "즉시 사용",
    "common_text_flow": "유광",
    "common_text_night_light": "달빛",
    "common_collection_recommend_segment": "추천",
    "common_collection_favorite_segment": "저장",
    "common_setting_room_management_ios": "위치 관리",
    "common_setting_ifttt_auto_ios": "스마트 배경",
    "common_setting_new_more_ios": "설정 더 보기",
    "common_setting_add_to_desktop_ios": "바탕 화면 바로가기 추가 방식",
    "common_dialog_text_upgrade_firmware": "먼저 펌웨어를 업그레이드 하세요.",
    "common_msg_user_agreement": "이용약관",
    "common_msg_privacy_policy": "개인정보 취급방침",
    "common_msg_agreement_and_policy": "이용약관 및 개인정보 보호정책",
    "common_setting_night_light_no_open_ios": "활성화되지 않음",
    "common_scene_open_delay_off": "켜기 및 예약 소등",
    "common_night_light_enable_ios": "켜기",
    "common_miband_band_ios": "미밴드 연동 완료",
    "common_miband_not_bind_ios": "연동되지 않음",
    "common_setting_ble_gateway_ios": "블루투스 게이트웨이",
    "common_default_state_on_from_power": "전원 연결 시 점등",
    "common_default_state_title": "기본 상태",
    "common_default_state_save_last": "마지막 사용 상태 기억하기",
    "common_default_state_save_last_light_as_default_ios": "마지막 사용 조명 기억하기",
    "common_default_state_set_default_title": "기본 조명",
    "common_collection_apply_success": "적용 성공",
    "common_delay_off_canceled": "예약 소등이 취소되었습니다.",
    "common_del_delay_off_fail": "예약 소등 취소 실패",
    "common_miband_updating": "업데이트 중...",
    "common_collection_rename_failed": "이름 변경 실패",
    "common_remote_control_mac_address": "MAC 주소",
    "common_remote_control_seesaw": "스마트 밝기 조절 스위치 ",
    "common_remote_control_auster": "스마트 히터 리모콘",
    "common_remote_control_and_switch_title": "리모콘과 스위치 ",
    "common_remote_bind_remote_and_switch_link": "리모컨과 스위치를 연동하려면?",
    "common_remote_connection_no_binding_tips": "아직 리모컨 또는 스위치와 연결되지 않았습니다.",
    "common_remote_connection_web_title": "리모콘과 스위치를 선택하세요.",
    "common_text_settings": "기능",
    "commom_default_state_auto_save_desc": "활성화 후, 종료 전, 자동으로 조명을 저장하며 다음 전원 연결 시 자동으로 복구됩니다. 해당 기능을 끄면 장치의 전원을 켤 때마다 기본 조명이 적용됩니다.",
    "common_text_loading": "기기 정보 수집중...",
    "common_dialog_text_quit": "종료",
    "common_dialog_text_retry": "재시도",
    "common_lamp_turned_off": "램프 꺼짐",
    "common_view_button_container_guard_read": "독서 시력 보호",
    "common_view_button_container_guard_screen": "스크린 시력 보호",
    "common_text_delete_failed": "삭제하지 못했습니다",
    "common_text_kids_mode": "키즈모드",
    "common_kids_mode_tips": "‘키즈모드’를 활성화하면 어린이의 시력을 보호하기 위해 색온도 조절 범위를 4000K이하로 제한하여 블루라이트 비율을 감소시킵니다.",
    "common_pdo_bottom_tips": "회전버튼울 두번 클릭하여 집중 모드를 빠르게 킬 수 있습니다.\n휴식 시에는 따뜻한 불빛이 천천히 깜빡입니다.\n다이얼을 클릭하거나 살짝 돌리면 불빛이 정상 상태로 돌아옵니다.",
    "common_pdo_title": "집중 모드",
    "common_pdo_time_info": "{0}분 작업후, {1}분 휴식",
    "common_pdo_time_rest_select_title": "휴식 시간",
    "common_pdo_time_work_select_title": "작업 시간",
    "common_pdo_settings": "스케줄 설정",
    "common_pdo_txt_work": "후 동작 ",
    "common_pdo_txt_rest": "후 작업 끝남",
    "common_scene_dialog_light_not_support": "해당 조명은 아직 지원하지 않습니다. 다시 선택하세요.",
    "common_remote_control": "리모컨",
    "common_text_detail": "상세보기",
    "common_text_toast_limit_mid": "처리 제한으로 인해 해당 기능을 일시적으로 사용할 수 없습니다.",
    "common_default_state_light_prompt": "전원 연결 시 기본 조명 상태를 선택하세요.",
    "common_default_state_recovery_break_light": " 종료 전 조명으로 복구",
    "common_default_state_success": "기본 등으로 저장 성공",
    "common_default_state_fail": "기본 등으로 저장 실패",
    "common_setting_new_group": "새로운 라이트 그룹 생성 ",
    "common_text_mesh_not_connected": "이 장치는 “Yeelight 보이스 어시스턴트” 또는 “샤오미 샤오아이 스마트 알람”과 함께 사용해야합니다. Mi 홈으로 가서 구매하세요.",
    "common_title_mesh_not_connected": "네트워크에 연결되지 않음",
    "common_text_device_management_ios": "기기 관리",
    "common_schedule_repeat_mode_everyday": "매일",
    "common_schedule_repeat_mode_workday": "근무일",
    "common_schedule_repeat_mode_freeday": "주말",
    "common_schedule_repeat_mode_monday": "월요일",
    "common_schedule_repeat_mode_tuesday": "화요일",
    "common_schedule_repeat_mode_wensday": "수요일",
    "common_schedule_repeat_mode_thursday": "목요일",
    "common_schedule_repeat_mode_friday": "금요일",
    "common_schedule_repeat_mode_saturday": "토요일",
    "common_schedule_repeat_mode_sunday": "일요일",
    "common_nightlight_operate_failure_android": "설정 실패",
    "common_text_min": "분",
    "common_text_hour_unit": " 시간",
    "common_text_hour": " 시간",
    "common_text_lamp_reading": "독서",
    "common_text_lamp_custom": "빛 조절",
    "common_text_lamp_pc_mode": "컴퓨터 사용",
    "common_home_kit_add_tip": "이 제품은 Apple HomeKit을 지원합니다. Mi Home 앱을 열어 이 제품의 바로가기 카드를 길게 누른 후, HomeKit 아이콘을 선택하여 Home 앱에 이 제품을 추가하십시오."
  };
},10676,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ko/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10679,[10682],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/pl/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Funkcja",
    "common_text_done": "Gotowe",
    "common_text_button_add": "Dodaj",
    "common_text_edit": "Edytuj",
    "common_dialog_cancel": "Anuluj",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Pole nie może być puste",
    "common_collection_too_long_ios": "Zbyt długa",
    "common_collection_judgement_existed": "Nazwa już istnieje",
    "common_collection_network_error_ios": "Błąd sieci",
    "common_collection_dialog_add_title": "Dodaj do Ulubionych",
    "common_text_loading_ios": "Wczytywanie…",
    "common_view_button_container_switch_open": "Wł.",
    "common_view_button_container_switch_close": "Wył.",
    "common_collection_favorites": "Ulubione",
    "common_text_delay_off_timer": "Timer",
    "common_open_delay_off_off_info_singular": "Lampa zostanie wyłączona za {0} min",
    "common_text_version": "Wersja:",
    "common_text_save": "Zapisz",
    "common_text_save_success": "Gotowe",
    "common_text_fail_ios": "Nie można zapisać, spróbuj ponownie później.",
    "common_text_min": "min",
    "common_text_setting": "Ustawienia",
    "common_settings_schedules": "Harmonogramy",
    "common_open_light_failed_tips_ios": "Niepowodzenie, upewnij się, że lampa jest włączona.",
    "common_add_delay_off_fail": "Nie można wyłączyć po opóźnieniu, upewnij się, że lampa jest włączona i ma połączenie z siecią.",
    "common_default_state_save_last_tips": "Po włączeniu tej funkcji światło zawsze wróci do bieżącego ustawienia, gdy zasilanie zostanie wyłączone i włączone ponownie. Po wyłączeniu światła za pomocą aplikacji, aby je włączyć, włącz i wyłącz światło dwukrotnie (podobnie jak w przypadku ponownego ustawiania światła, co wymaga kolejno włączenia i wyłączenia światła 5 razy).",
    "common_settings_night_light": "Światło nocne",
    "common_title_bar_ct": "Temperatura barwowa",
    "common_title_bar_brightness": "Jasność",
    "common_night_light_start_time": "Godzina rozpoczęcia",
    "common_night_light_end_time": "Godzina zakończenia",
    "common_night_light_auto_delay_off": "Opóźnienie automatycznego wyłączenia",
    "common_night_light_delay_off_time": "Opóźnienie",
    "common_nightlight_open_success": "Światło nocne jest włączone",
    "common_nightlight_close_success": "Światło nocne jest wyłączone",
    "common_nightlight_operate_failure_ios": "Nie można ustawić światła nocnego, spróbuj ponownie później.",
    "common_text_hour_unit": "h",
    "common_text_hour": "h",
    "common_remote_control": "Zdalne sterowanie",
    "common_text_unpaired": "Usuń parowanie",
    "common_remote_management_ios": "Zarządzanie zdalnym sterowaniem",
    "common_give_up": "Czy odrzucić zmiany?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Sparuj z opaską Mi Band, a światło wyłączy się automatycznie po zaśnięciu.",
    "common_miband_have_pair_tips": "Sparowano z opaską Mi Band, światło wyłączy się automatycznie po zaśnięciu.",
    "common_miband_bind_autoclose": "Wyłącz automatycznie",
    "common_miband_pair": "Sparuj z opaską Mi Band",
    "common_miband_unpair": "Usuń parowanie z opaską Mi Band",
    "common_miband_search_title": "Wyszukaj opaskę Mi Band",
    "common_miband_search_tip": "Trzymaj opaskę Mi Band w pobliżu telefonu komórkowego i upewnij się, że została już sparowana z aplikacją Mi Fit.",
    "common_miband_found": "Opaska Mi Band została znaleziona",
    "common_miband_pairing_ios": "Parowanie z opaską Mi Band…",
    "common_miband_search_notfound": "Opaska Mi Band nie została znaleziona",
    "common_miband_pair_fail_ios": "Nie można sparować",
    "common_miband_reopen_broadcast_ok": "Włączono, rozpocznij parowanie",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_search_retry": "Wyszukaj ponownie",
    "common_miband_unpair_tips": "Po usunięciu sparowania lampa nie będzie się już automatycznie wyłączać po zaśnięciu.",
    "common_miband_alter_no_ios": "Nie",
    "common_miband_alter_yes_ios": "Tak",
    "common_miband_shake_ios": "Czy parowanie opaski ma zostać potwierdzone wibracją?",
    "common_miband_reopen_broadcast": "Przejdź do sekcji Aplikacja Mi Fit > Profil > naciśnij Dodaj urządzenie > wybierz opcję Opaska i włącz Bluetooth.",
    "common_text_brightness": "Jasność",
    "common_open_delay_off_brightness_sub": "Po włączeniu lampy ustawiony zostanie ten poziom jasności.",
    "common_collection_select_message": "Czy wybrać {0} jako ustawienie światła dla sceny Smart?",
    "common_scene_quit_message": "Nie wybrano ustawienia lampy. Czy wyjść?",
    "common_dialog_notice_title": "Powiadomienia",
    "common_text_rename": "Zmień nazwę",
    "common_setting_share_device_ios": "Udostępnianie urządzenia",
    "common_setting_check_firmware_upgrade_ios": "Sprawdź aktualizacje oprogramowania układowego",
    "common_setting_unbind_device_ios": "Rozłącz",
    "common_view_button_container_colors": "Barwa",
    "common_view_button_container_sunlight": "Słońce",
    "common_view_button_container_whitelight": "Biała",
    "common_view_control_flow_setting": "Ustawienia przepływu",
    "common_color_flow_pickup_title": "Wybierz barwę",
    "common_text_capture_apply": "Zastosuj",
    "common_collection_added_success": "Dodano do Ulubionych",
    "common_text_renamed": "Zmieniono nazwę",
    "common_text_delete": "Usuń",
    "common_text_deleted": "Usunięto",
    "common_default_state_set_default_desc": "Naciśnij opcję „Zapisz”, aby zapisać bieżące ustawienie jako stan domyślny. Po ponownym włączeniu światła ten stan zostanie automatycznie przywrócony.",
    "common_text_confirm_knob_custom": "Dotknij dwukrotnie, aby włączyć {0}?",
    "common_collection_knob_kidmode_msg": "Aktywowano tryb dziecka. Temperatura barwowa to {0}K, przekracza określony limit (4000 K). Jeśli chcesz użyć tego ustawienia światła, wyłącz tryb dziecka.",
    "common_dialog_kidmode_disable_apply": "Zastosuj mimo to",
    "common_view_button_container_pickup_color": "Wybierz barwę",
    "common_settings_general_setting_ios": "Ustawienia ogólne",
    "common_settings_device_setting": "Ustawienia urządzenia",
    "common_text_bright": "Jasność",
    "common_text_color_temperature": "Temperatura barwowa",
    "common_text_color": "Barwa",
    "common_collection_apply_light": "Zastosuj",
    "common_text_flow": "Przepływ",
    "common_text_night_light": "Księżyc",
    "common_collection_recommend_segment": "Zalecane",
    "common_collection_favorite_segment": "Ulubione",
    "common_setting_room_management_ios": "Zarządzaj lokalizacjami",
    "common_setting_ifttt_auto_ios": "Scena Smart",
    "common_setting_new_more_ios": "Więcej ustawień",
    "common_setting_add_to_desktop_ios": "Dodaj skrót do ekranu głównego",
    "common_dialog_text_upgrade_firmware": "Najpierw zaktualizuj oprogramowanie układowe.",
    "common_msg_user_agreement": "Umowę Użytkownika",
    "common_msg_privacy_policy": "Politykę Prywatności",
    "common_msg_agreement_and_policy": "Umowę Użytkownika i Politykę Prywatności",
    "common_setting_night_light_no_open_ios": "Wyłączono",
    "common_scene_open_delay_off": "Włącz światło i włącz opóźnienie wyłączenia",
    "common_night_light_enable_ios": "Włącz",
    "common_miband_band_ios": "Opaska jest sparowana",
    "common_miband_not_bind_ios": "Nie sparowano",
    "common_setting_ble_gateway_ios": "Brama Bluetooth",
    "common_default_state_on_from_power": "Domyślny stan światła po włączeniu",
    "common_default_state_title": "Domyślny stan",
    "common_default_state_save_last": "Zapamiętaj ostatnio używany stan",
    "common_default_state_recovery_break_light": "Automatyczne przywracanie stanu lampy",
    "common_default_state_set_default_title": "Domyślny stan światła",
    "common_collection_apply_success": "Zastosowano pomyślnie",
    "common_delay_off_canceled": "Anulowano opóźnienie wyłączenia",
    "common_del_delay_off_fail": "Nie można anulować opóźnienia wyłączenia",
    "common_miband_updating": "Aktualizowanie…",
    "common_collection_rename_failed": "Nie można zmienić nazwy",
    "common_remote_control_and_switch_title": "Pilot zdalnego sterowania i przełącznik",
    "common_remote_control_mac_address": "Adres MAC",
    "common_remote_control_seesaw": "Inteligentny ściemniacz",
    "common_remote_control_auster": "Pilot zdalnego sterowania podgrzewaczem Yeelight",
    "common_remote_bind_remote_and_switch_link": "W jaki sposób sparować pilot zdalnego sterowania i przełącznik?",
    "common_remote_connection_no_binding_tips": "Pilot zdalnego sterowania i przełącznik nie są jeszcze sparowane.",
    "common_remote_connection_web_title": "Wybierz pilot zdalnego sterowania i przełącznik",
    "commom_default_state_auto_save_desc": "Jeżeli funkcja jest włączona, urządzenie zapisuje ustawienia użyte podczas wyłączania i przywraca te ustawienia przy ponownym włączeniu. Jeżeli funkcja jest wyłączona, urządzenie zawsze powraca do domyślnego stanu po ponownym włączeniu",
    "common_default_state_light_prompt": "Wybierz stan, który ma zostać przywrócony po włączeniu.",
    "common_default_state_success": "Ustawiono stan domyślny",
    "common_default_state_fail": "Nie powiodło się ustawienie stanu domyślnego",
    "common_schedule_repeat_mode_everyday": "Codziennie",
    "common_schedule_repeat_mode_workday": "Dni robocze",
    "common_schedule_repeat_mode_freeday": "Dni wolne",
    "common_schedule_repeat_mode_monday": "Poniedziałek",
    "common_schedule_repeat_mode_tuesday": "Wtorek",
    "common_schedule_repeat_mode_wensday": "Środa",
    "common_schedule_repeat_mode_thursday": "Czwartek",
    "common_schedule_repeat_mode_friday": "Piątek",
    "common_schedule_repeat_mode_saturday": "Sobota",
    "common_schedule_repeat_mode_sunday": "Niedziela",
    "common_home_kit_add_tip": "Produkt obsługuje Apple HomeKit. Otwórz aplikację Mi Home, naciśnij i przytrzymaj kartę skrótu do tego produktu, wybierz ikonę HomeKit, aby dodać produkt do aplikacji Home."
  };
},10682,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/pl/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10685,[10688],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ru/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Функция",
    "common_text_done": "Готово",
    "common_text_button_add": "Добавить",
    "common_text_edit": "Изменить",
    "common_dialog_cancel": "Отмена",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Не может быть пустым",
    "common_collection_too_long_ios": "Имя слишком длинное",
    "common_collection_judgement_existed": "Имя уже существует",
    "common_collection_network_error_ios": "Ошибка сети. Повторите попытку позже.",
    "common_collection_dialog_add_title": "Добавить в избранное",
    "common_text_loading_ios": "Загрузка...",
    "common_view_button_container_switch_open": "Вкл.",
    "common_view_button_container_switch_close": "Выкл.",
    "common_collection_favorites": "Избран.",
    "common_text_delay_off_timer": "Задержка выкл.",
    "common_open_delay_off_off_info_singular": "Задержка настроена. Светильник будет выключаться с задержкой в {0} мин",
    "common_text_version": "Версия:",
    "common_text_save": "Сохранить",
    "common_text_save_success": "Сохранено",
    "common_text_fail_ios": "Не удалось сохранить. Повторите попытку позже.",
    "common_text_min": "мин",
    "common_text_setting": "Настройки",
    "common_settings_schedules": "Таймер",
    "common_open_light_failed_tips_ios": "Ошибка. Убедитесь, что светильник включен.",
    "common_add_delay_off_fail": "Не удалось выключить после задержки. Убедитесь, что светильник включен и подключен к сети.",
    "common_default_state_save_last_tips": "Когда эта функция активирована, при выключении и повторном включении светильник всегда будет возвращаться к текущей настройке. После выключения светильника с помощью приложения необходимо включить и выключить его дважды (как при перезагрузке светильника, для которой нужно включить и выключить свет пять раз подряд), чтобы включить свет.",
    "common_settings_night_light": "Ночной свет",
    "common_title_bar_ct": "Цветовая температура",
    "common_title_bar_brightness": "Яркость",
    "common_night_light_start_time": "Время начала",
    "common_night_light_end_time": "Время окончания",
    "common_night_light_auto_delay_off": "Автоматическая задержка выключения",
    "common_night_light_delay_off_time": "Задержка",
    "common_nightlight_open_success": "Ночной свет включен",
    "common_nightlight_close_success": "Ночной свет выключен",
    "common_nightlight_operate_failure_ios": "Не удается настроить ночной свет. Повторите попытку позже.",
    "common_text_hour_unit": "ч",
    "common_text_hour": "ч",
    "common_remote_control": "Пульт ДУ",
    "common_text_unpaired": "Отмена сопряжения",
    "common_remote_management_ios": "Управление пультом ДУ",
    "common_miband_will_pair_tips": "Выполните сопряжение с браслетом Mi Band, и светильник будет автоматически выключаться после вашего засыпания.",
    "common_miband_have_pair_tips": "Сопряжение с браслетом Mi Band выполнено. Теперь светильник будет автоматически выключаться после вашего засыпания.",
    "common_miband_bind_autoclose": "Автоматическое выключение",
    "common_miband_pair": "Сопряжение с браслетом Mi Band",
    "common_miband_search_title": "Поиск браслета Mi Band",
    "common_miband_search_tip": "Поднесите браслет Mi Band к телефону и убедитесь, что сопряжение с приложением Mi Fit выполнено.",
    "common_miband_found": "Обнаружен браслет Mi Band",
    "common_miband_pairing_ios": "Сопряжение с браслетом Mi Band...",
    "common_miband_search_notfound": "Не удается найти браслет Mi Band",
    "common_miband_pair_fail_ios": "Не удалось выполнить сопряжение",
    "common_miband_reopen_broadcast_ok": "Включено, начните сопряжение",
    "miband_broadcast_main": "miband_broadcast_main_ru.png",
    "common_miband_search_retry": "Повторить поиск",
    "common_miband_unpair_tips": "После разрыва сопряжения светильник больше не будет выключаться автоматически после вашего засыпания.",
    "common_miband_alter_no_ios": "Нет",
    "common_miband_alter_yes_ios": "Да",
    "common_miband_shake_ios": "Вибрирует ли браслет, с которым выполняется сопряжение?",
    "common_miband_reopen_broadcast": "Откройте приложение Mi Fit и выберите \"Профиль\" > \"Добавить устройство\" > \"Браслет\", затем включите Bluetooth.",
    "common_text_brightness": "Яркость",
    "common_open_delay_off_brightness_sub": "При включении светильник будет настроен на выбранную яркость.",
    "common_collection_select_message": "Использовать \"{0}\" как параметр освещения для умной сцены?",
    "common_scene_quit_message": "Настройки освещения не выбраны. Выйти?",
    "common_dialog_notice_title": "Уведомления",
    "common_text_rename": "Переименовать",
    "common_setting_share_device_ios": "Предоставление доступа к устройству",
    "common_setting_check_firmware_upgrade_ios": "Проверка наличия обновлений встроенного ПО",
    "common_setting_unbind_device_ios": "Отключить",
    "common_view_button_container_colors": "Разноцветный свет",
    "common_view_button_container_sunlight": "Солнечный свет",
    "common_view_button_container_whitelight": "Солнечный свет",
    "common_view_control_flow_setting": "Настройка светового потока",
    "common_text_capture_apply": "Применить",
    "common_collection_added_success": "Добавлено в избранное",
    "common_text_renamed": "Переименовано",
    "common_text_delete": "Удалить",
    "common_text_deleted": "Удалено",
    "common_default_state_set_default_desc": "Нажмите \"Сохранить\", чтобы сохранить текущую настройку как режим по умолчанию. Когда вы в следующий раз включите светильник, будет использоваться режим по умолчанию.",
    "common_text_confirm_knob_custom": "Нажмите дважды, чтобы включить \"{0}\"?",
    "common_collection_knob_kidmode_msg": "Вы включили детский режим. Цветовая температура — {0}К, что превышает указанное ограничение в 4000 К. Если вы хотите применить этот параметр освещения, выключите детский режим.",
    "common_dialog_kidmode_disable_apply": "Все равно применить",
    "common_view_button_container_pickup_color": "Захватить",
    "common_settings_general_setting_ios": "Общие настройки",
    "common_settings_device_setting": "Настройки функции",
    "common_text_bright": "Яркость",
    "common_text_color_temperature": "Цветовая температура",
    "common_text_color": "Цвет",
    "common_collection_apply_light": "Применить",
    "common_text_flow": "Струящийся свет",
    "common_text_night_light": "Лунный свет",
    "common_collection_recommend_segment": "Рекомендуется",
    "common_collection_favorite_segment": "Избранное",
    "common_setting_room_management_ios": "Группирование устройств",
    "common_setting_ifttt_auto_ios": "Умные сцены",
    "common_setting_new_more_ios": "Другие настройки",
    "common_setting_add_to_desktop_ios": "Добавить ярлык на главный экран",
    "common_dialog_text_upgrade_firmware": "Сначала обновите встроенное ПО.",
    "common_msg_user_agreement": "Условия использования",
    "common_msg_privacy_policy": "Политика конфиденциальности",
    "common_msg_agreement_and_policy": "Пользовательское соглашение и политика конфиденциальности",
    "common_setting_night_light_no_open_ios": "Выкл.",
    "common_scene_open_delay_off": "Включение светильника и активация задержки выключения",
    "common_night_light_enable_ios": "Вкл.",
    "common_miband_band_ios": "Браслет подключен",
    "common_miband_not_bind_ios": "Не сопряжено",
    "common_setting_ble_gateway_ios": "Шлюз Bluetooth",
    "common_text_miband": "Сопряжение с браслетом",
    "common_give_up": "Вы хотите отменить свои изменения?",
    "common_miband_unpair": "Отмена сопряжения с браслетом Mi Band",
    "common_color_flow_pickup_title": "Выбор цвета",
    "common_default_state_on_from_power": "Режим освещения по умолчанию при включении",
    "common_default_state_title": "Режим по умолчанию",
    "common_default_state_save_last": "Запомнить последний использовавшийся режим",
    "common_default_state_recovery_break_light": "Автоматическое восстановление режима освещения",
    "common_default_state_set_default_title": "Режим освещения по умолчанию",
    "common_collection_apply_success": "Успешно применено",
    "common_delay_off_canceled": "Задержка выключения отменена",
    "common_del_delay_off_fail": "Не удалось отменить задержку выключения",
    "common_miband_updating": "Обновление...",
    "common_collection_rename_failed": "Не удалось переименовать",
    "common_remote_control_and_switch_title": "Пульт ДУ и переключатель режимов",
    "common_remote_control_mac_address": "MAC-адрес",
    "common_remote_control_seesaw": "Умный регулятор яркости",
    "common_remote_control_auster": "Дистанционное управление нагревом воды в ванне Yeelight",
    "common_remote_bind_remote_and_switch_link": "Как выполнить сопряжение между пультом ДУ и переключателем режимов?",
    "common_remote_connection_no_binding_tips": "Пульт ДУ и переключатель режимов пока не сопряжены.",
    "common_remote_connection_web_title": "Выберите пульт ДУ и переключатель режимов",
    "commom_default_state_auto_save_desc": "Если эта функция активирована, устройство сохраняет настройки освещения, использованные перед выключением, и применяет их при следующем включении. Если эта функция не активирована, устройство при включении всегда будет использовать установленные по умолчанию настройки освещения.",
    "common_default_state_light_prompt": "Выберите режим, который будет использоваться при включении.",
    "common_default_state_success": "Режим освещения по умолчанию установлен",
    "common_default_state_fail": "Не удалось установить режим освещения по умолчанию",
    "common_schedule_repeat_mode_everyday": "Ежедневно",
    "common_schedule_repeat_mode_workday": "В рабочие дни",
    "common_schedule_repeat_mode_freeday": "Выходные",
    "common_schedule_repeat_mode_monday": "Понедельник",
    "common_schedule_repeat_mode_tuesday": "Вторник",
    "common_schedule_repeat_mode_wensday": "Среда",
    "common_schedule_repeat_mode_thursday": "Четверг",
    "common_schedule_repeat_mode_friday": "Пятница",
    "common_schedule_repeat_mode_saturday": "Суббота",
    "common_schedule_repeat_mode_sunday": "Воскресенье",
    "common_home_kit_add_tip": "Устройство поддерживает Apple HomeKit. Откройте приложение Mi Home, нажмите и удерживайте карту комбинаций клавиш этого устройства, выберите значок HomeKit, чтобы добавить устройство в приложение Home."
  };
},10688,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ru/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10691,[10694],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/vi/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_settings": "Chức năng",
    "common_text_done": "Xong",
    "common_text_button_add": "Thêm",
    "common_text_edit": "Chỉnh sửa",
    "common_dialog_cancel": "Hủy",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Không được để trống",
    "common_collection_too_long_ios": "Quá dài",
    "common_collection_judgement_existed": "Tên đã tồn tại",
    "common_collection_network_error_ios": "Lỗi mạng",
    "common_collection_dialog_add_title": "Thêm vào Mục yêu thích",
    "common_text_loading_ios": "Đang tải...",
    "common_view_button_container_switch_open": "Bật",
    "common_view_button_container_switch_close": "Tắt",
    "common_collection_favorites": "Mục yêu thích",
    "common_text_delay_off_timer": "Hẹn giờ",
    "common_open_delay_off_off_info_singular": "Đèn sẽ tắt sau {0} phút",
    "common_text_version": "Phiên bản:",
    "common_text_save": "Lưu",
    "common_text_save_success": "Xong",
    "common_text_fail_ios": "Không lưu được, hãy thử lại sau.",
    "common_text_min": "phút",
    "common_text_setting": "Cài đặt",
    "common_settings_schedules": "Lịch trình",
    "common_open_light_failed_tips_ios": "Không thực hiện được, hãy đảm bảo đã bật đèn.",
    "common_add_delay_off_fail": "Không thể tắt sau khi trì hoãn. Hãy đảm bảo bạn đã bật đèn và có thể truy cập mạng..",
    "common_default_state_save_last_tips": "Sau khi bạn bật chức năng này, đèn sẽ luôn trở về cài đặt hiện tại khi bạn tắt nguồn rồi bật lại. Sau khi tắt đèn thông qua ứng dụng, hãy bật rồi tắt đèn hai lần (tương tự như thao tác đặt lại đèn yêu cầu phải bật rồi tắt đèn 5 lần liên tiếp) để bật đèn.",
    "common_settings_night_light": "Đèn ngủ",
    "common_title_bar_ct": "Nhiệt độ màu",
    "common_title_bar_brightness": "Độ sáng",
    "common_night_light_start_time": "Thời gian bắt đầu",
    "common_night_light_end_time": "Thời gian kết thúc",
    "common_night_light_auto_delay_off": "Trì hoãn tắt tự động",
    "common_night_light_delay_off_time": "Trì hoãn",
    "common_nightlight_open_success": "Đã bật đèn ngủ",
    "common_nightlight_close_success": "Đã tắt đèn ngủ",
    "common_nightlight_operate_failure_ios": "Không thể đặt đèn ngủ, hãy thử lại sau.",
    "common_text_unpaired": "Hủy ghép nối",
    "common_remote_management_ios": "Quản lý điều khiển từ xa",
    "common_miband_will_pair_tips": "Ghép nối với Mi Band để đèn sẽ tự động tắt sau khi bạn đi ngủ.",
    "common_miband_have_pair_tips": "Đã ghép nối với Mi Band, do đó đèn sẽ tự động tắt sau khi bạn đi ngủ.",
    "common_miband_bind_autoclose": "Tự động tắt",
    "common_miband_pair": "Ghép nối với Mi Band",
    "common_miband_search_title": "Tìm kiếm Mi Band",
    "common_miband_search_tip": "Giữ Mi Band ở gần điện thoại và đảm bảo thiết bị được ghép nối bằng ứng dụng Mi Fit.",
    "common_miband_found": "Tìm thấy Mi Band",
    "common_miband_pairing_ios": "Đang ghép nối với Mi Band...",
    "common_miband_search_notfound": "Không tìm thấy Mi Band",
    "common_miband_pair_fail_ios": "Không thể ghép nối",
    "common_miband_reopen_broadcast_ok": "Đã bật, bắt đầu ghép nối",
    "common_miband_search_retry": "Tìm kiếm lại",
    "common_miband_unpair_tips": "Sau khi hủy ghép nối, đèn sẽ không tự động tắt sau khi bạn đi ngủ.",
    "miband_broadcast_main": "miband_broadcast_main_en.png",
    "common_miband_alter_no_ios": "Không",
    "common_miband_alter_yes_ios": "Có",
    "common_miband_shake_ios": "Vòng đeo tay bạn muốn ghép nối có rung không?",
    "common_miband_reopen_broadcast": "Chuyển đến ứng dụng Mi Fit > Hồ sơ > nhấn vào Thêm thiết bị > chọn Vòng đeo tay rồi bật Bluetooth.",
    "common_text_brightness": "Độ sáng",
    "common_open_delay_off_brightness_sub": "Đèn sẽ được đặt ở độ sáng này khi bật.",
    "common_collection_select_message": "Bạn muốn chọn {0} làm cài đặt đèn cho tình huống sử dụng thông minh của mình?",
    "common_scene_quit_message": "Chưa chọn cài đặt đèn nào, thoát ngay bây giờ?",
    "common_dialog_notice_title": "Thông báo",
    "common_text_rename": "Đổi tên",
    "common_setting_share_device_ios": "Chia sẻ thiết bị",
    "common_setting_check_firmware_upgrade_ios": "Kiểm tra bản cập nhật chương trình cơ sở",
    "common_setting_unbind_device_ios": "Ngắt kết nối",
    "common_view_button_container_colors": "Màu sắc",
    "common_view_button_container_sunlight": "Màu mặt trời",
    "common_view_button_container_whitelight": "Màu trắng",
    "common_view_control_flow_setting": "Cài đặt luồng",
    "common_text_capture_apply": "Áp dụng",
    "common_collection_added_success": "Đã thêm vào Mục yêu thích",
    "common_text_renamed": "Đã đổi tên",
    "common_text_delete": "Xóa",
    "common_text_deleted": "Đã xóa",
    "common_default_state_set_default_desc": "Nhấn \"Lưu\" để lưu cài đặt hiện tại làm trạng trái mặc định. Khi đèn bật lại, trạng thái này sẽ được sử dụng.",
    "common_text_confirm_knob_custom": "Nhấn hai lần để bật {0}?",
    "common_collection_knob_kidmode_msg": "Bạn đã kích hoạt Chế độ trẻ em. Nhiệt độ màu hiện tại là {0}K. Nhiệt độ này vượt quá giới hạn quy định (4000 K). Nếu bạn muốn sử dụng cài đặt đèn này, hãy tắt Chế độ trẻ em.",
    "common_dialog_kidmode_disable_apply": "Vẫn áp dụng",
    "common_view_button_container_pickup_color": "Chọn",
    "common_settings_general_setting_ios": "Cài đặt chung",
    "common_settings_device_setting": "Cài đặt thiết bị",
    "common_text_bright": "Độ sáng",
    "common_text_color_temperature": "Nhiệt độ màu",
    "common_text_color": "Màu sắc",
    "common_collection_apply_light": "Áp dụng",
    "common_text_flow": "Luồng",
    "common_text_night_light": "Ánh trăng",
    "common_collection_recommend_segment": "Được khuyến nghị",
    "common_collection_favorite_segment": "Mục yêu thích",
    "common_setting_room_management_ios": "Quản lý các vị trí",
    "common_setting_ifttt_auto_ios": "Tình huống sử dụng thông minh",
    "common_setting_new_more_ios": "Cài đặt khác",
    "common_setting_add_to_desktop_ios": "Thêm lối tắt trên Màn hình chính",
    "common_dialog_text_upgrade_firmware": "Trước tiên, hãy cập nhật chương trình cơ sở.",
    "common_msg_user_agreement": "Thỏa thuận người dùng",
    "common_msg_privacy_policy": "Chính sách bảo mật",
    "common_msg_agreement_and_policy": "Chính sách bảo mật và Thỏa thuận người dùng",
    "common_setting_night_light_no_open_ios": "Đã tắt",
    "common_scene_open_delay_off": "Bật đèn và bật chế độ trì hoãn tắt",
    "common_night_light_enable_ios": "Bật",
    "common_miband_band_ios": "Đã ghép nối vòng đeo tay",
    "common_miband_not_bind_ios": "Chưa được ghép nối",
    "common_setting_ble_gateway_ios": "Cổng Bluetooth",
    "common_text_miband": "Mi Band",
    "common_give_up": "Hủy các thay đổi?",
    "common_miband_unpair": "Hủy ghép nối Mi Band",
    "common_color_flow_pickup_title": "Chọn màu",
    "common_default_state_on_from_power": "Trạng thái đèn mặc định khi bật",
    "common_default_state_title": "Trạng thái mặc định",
    "common_default_state_save_last": "Ghi nhớ trạng thái được dùng gần đây nhất",
    "common_default_state_recovery_break_light": "Khôi phục trạng thái đèn tự động",
    "common_default_state_set_default_title": "Trạng thái đèn mặc định",
    "common_collection_apply_success": "Đã áp dụng thành công",
    "common_delay_off_canceled": "Đã hủy chế độ trì hoãn tắt",
    "common_del_delay_off_fail": "Không thể hủy chế độ trì hoãn tắt",
    "common_miband_updating": "Đang cập nhật…",
    "common_collection_rename_failed": "Không thể đổi tên",
    "common_remote_control": "Điều khiển từ xa",
    "common_remote_control_and_switch_title": "Điều khiển từ xa và công tắc",
    "common_remote_control_mac_address": "Địa chỉ MAC",
    "common_remote_control_seesaw": "Công tắc đèn mờ thông minh",
    "common_remote_control_auster": "Điều khiển từ xa đèn sưởi phòng tắm Yeelight",
    "common_remote_bind_remote_and_switch_link": "Làm thế nào để ghép nối điều khiển từ xa và công tắc?",
    "common_remote_connection_no_binding_tips": "Chưa ghép nối điều khiển từ xa và công tắc.",
    "common_remote_connection_web_title": "Chọn điều khiển từ xa và công tắc",
    "commom_default_state_auto_save_desc": "Nếu bạn bật chức năng này, thiết bị sẽ lưu các cài đặt của đèn được dùng khi tắt và khôi phục những cài đặt đó khi bật lại. Nếu bạn tắt chức năng này, thiết bị sẽ luôn trở về trạng thái đèn mặc định khi bật.",
    "common_default_state_light_prompt": "Chọn trạng thái sẽ dùng khi bật.",
    "common_default_state_success": "Đã đặt thành công trạng thái đèn mặc định",
    "common_default_state_fail": "Không thể đặt trạng thái đèn mặc định",
    "common_schedule_repeat_mode_everyday": "Hàng ngày",
    "common_schedule_repeat_mode_workday": "Các ngày làm việc",
    "common_schedule_repeat_mode_freeday": "Cuối tuần",
    "common_schedule_repeat_mode_monday": "Thứ Hai",
    "common_schedule_repeat_mode_tuesday": "Thứ Ba",
    "common_schedule_repeat_mode_wensday": "Thứ Tư",
    "common_schedule_repeat_mode_thursday": "Thứ Năm",
    "common_schedule_repeat_mode_friday": "Thứ Sáu",
    "common_schedule_repeat_mode_saturday": "Thứ Bảy",
    "common_schedule_repeat_mode_sunday": "Chủ Nhật",
    "common_text_hour_unit": "giờ",
    "common_text_hour": "giờ",
    "common_home_kit_add_tip": "Sản phẩm này hỗ trợ Apple HomeKit, hãy mở ứng dụng Mi Home, nhấn và giữ thẻ lối tắt của sản phẩm này, chọn biểu tượng HomeKit để thêm sản phẩm vào ứng dụng Home."
  };
},10694,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/vi/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10697,[10700],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/th/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = {
        "common_text_done": "เสร็จสิ้น",
        "common_text_button_add": "เพิ่ม",
        "common_text_edit": "แก้ไข",
        "common_text_rename": "ตั้งชื่อใหม่",
        "common_dialog_cancel": "ยกเลิก",
        "common_dialog_ok": "ตกลง",
        "common_collection_empty_ios": "ไม่สามารถเว้นว่างได้",
        "common_collection_too_long_ios": "ยาวเกินไป",
        "common_collection_judgement_existed": "ชื่อนี้มีอยู่แล้ว",
        "common_collection_network_error_ios": "ข้อผิดพลาดเกี่ยวกับเครือข่าย",
        "common_collection_dialog_add_title": "เพิ่มไปยังรายการโปรด",
        "common_text_loading_ios": "กำลังโหลด...",
        "common_view_button_container_switch_open": "เปิด",
        "common_view_button_container_switch_close": "ปิด",
        "common_collection_favorites": "รายการโปรด",
        "common_text_delay_off_timer": "ตัวจับเวลา",
        "common_open_delay_off_off_info_singular": "ไฟจะปิดใน {0} นาที",
        "common_text_version": "เวอร์ชั่น:",
        "common_text_save": "บันทึก",
        "common_text_save_success": "เสร็จสิ้น",
        "common_text_fail_ios": "ไม่สามารถบันทึกได้ โปรดลองอีกครั้งในภายหลัง",
        "common_text_setting": "การตั้งค่า",
        "common_settings_schedules": "กำหนดเวลา",
        "common_open_light_failed_tips_ios": "ล้มเหลว โปรดตรวจสอบให้แน่ใจว่าไฟของคุณเปิดอยู่",
        "common_add_delay_off_fail": "ไม่สามารถปิดหลังการหน่วงเวลาได้ โปรดตรวจสอบให้แน่ใจว่าไฟของคุณเปิดอยู่ และมีการเข้าถึงเครือข่าย..",
        "common_default_state_save_last_tips": "เมื่อเปิดใช้งานฟังก์ชั่นนี้แล้ว ไฟจะกลับสู่การตั้งค่าปัจจุบันเสมอเมื่อเปิดและปิดเครื่องอีกครั้ง หลังการปิดไฟผ่านแอพ ให้เปิดและปิดไฟสองครั้ง (คล้ายกับการรีเซ็ตไฟ ซึ่งต้องเปิดและปิดไฟ 5 ครั้งติดต่อกัน) เพื่อเปิดไฟ",
        "common_settings_night_light": "ไฟกลางคืน",
        "common_title_bar_ct": "อุณหภูมิสี",
        "common_title_bar_brightness": "ความสว่าง",
        "common_night_light_start_time": "เวลาเริ่มต้น",
        "common_night_light_end_time": "เวลาสิ้นสุด",
        "common_night_light_auto_delay_off": "การหน่วงเวลาปิดอัตโนมัติ",
        "common_night_light_delay_off_time": "ความล่าช้า",
        "common_nightlight_open_success": "เปิดใช้งานไฟกลางคืน",
        "common_nightlight_close_success": "ปิดใช้งานไฟกลางคืน",
        "common_nightlight_operate_failure_ios": "ไม่สามารถตั้งค่าไฟกลางคืนได้ โปรดลองอีกครั้งในภายหลัง",
        "common_text_unpaired": "ยกเลิกการจับคู่",
        "common_remote_management_ios": "การจัดการรีโมทคอนโทรล",
        "common_give_up": "ต้องการละทิ้งการเปลี่ยนแปลงหรือไม่",
        "common_text_miband": "Mi แบนด์",
        "common_miband_will_pair_tips": "จับคู่กับ Mi แบนด์ เพื่อให้ไฟปิดโดยอัตโนมัติภายหลังจากที่คุณหลับ",
        "common_miband_have_pair_tips": "จับคู่กับ Mi แบนด์แล้ว เพื่อให้ไฟปิดโดยอัตโนมัติภายหลังจากที่คุณหลับ",
        "common_miband_bind_autoclose": "ปิดโดยอัตโนมัติ",
        "common_miband_pair": "จับคู่กับ Mi แบนด์",
        "common_miband_unpair": "เลิกจับคู่กับ Mi แบนด์",
        "common_miband_search_title": "ค้นหา Mi แบนด์",
        "common_miband_search_tip": "ถือ Mi แบนด์ไว้ให้ใกล้กับโทรศัพท์ของคุณและตรวจสอบให้แน่ใจว่าได้จับคู่กับแอป Mi Fit เรียบร้อยแล้ว",
        "common_miband_found": "พบ Mi แบนด์แล้ว",
        "common_miband_pairing_ios": "ทำการจับคู่กับ Mi แบนด์...",
        "common_miband_search_notfound": "ไม่พบ Mi แบนด์",
        "common_miband_pair_fail_ios": "ไม่สามารถจับคู่ได้",
        "common_miband_reopen_broadcast_ok": "เปิดใช้งานแล้ว เริ่มการจับคู่",
        "common_miband_search_retry": "ค้นหาอีกครั้ง",
        "common_miband_unpair_tips": "หลังยกเลิกการจับคู่ ไฟจะไม่ปิดโดยอัตโนมัติภายหลังจากที่คุณหลับ",
        "common_miband_alter_no_ios": "ไม่",
        "common_miband_alter_yes_ios": "ใช่",
        "common_miband_shake_ios": "แบนด์ที่คุณต้องการจับคู่มีการสั่นหรือไม่",
        "common_miband_reopen_broadcast": "ไปที่แอป Mi Fit > โปรไฟล์> แตะเพิ่มอุปกรณ์ > เลือกแบนด์ แล้วเปิด Bluetooth",
        "common_text_brightness": "ความสว่าง",
        "common_open_delay_off_brightness_sub": "ไฟจะตั้งค่าเป็นความสว่างนี้เมื่อเปิด",
        "common_collection_select_message": "เลือก {0} เป็นการตั้งค่าไฟสำหรับฉากอัจฉริยะของคุณใช่หรือไม่",
        "common_scene_quit_message": "ไม่มีการเลือกการตั้งค่าไฟ ออกตอนนี้ใช่หรือไม่",
        "common_dialog_notice_title": "การแจ้งเตือน",
        "common_setting_share_device_ios": "การแชร์อุปกรณ์",
        "common_setting_check_firmware_upgrade_ios": "ตรวจสอบหาการอัปเดตเฟิร์มแวร์",
        "common_setting_unbind_device_ios": "ยกเลิกการเชื่อมต่อ",
        "common_view_button_container_colors": "สี",
        "common_view_button_container_sunlight": "อา.",
        "common_view_button_container_whitelight": "ขาว",
        "common_view_control_flow_setting": "การตั้งค่าการไหล",
        "common_color_flow_pickup_title": "เลือกสี",
        "common_text_capture_apply": "นำไปใช้",
        "common_collection_added_success": "เพิ่มไปยังรายการโปรดแล้ว",
        "common_text_renamed": "ตั้งชื่อใหม่แล้ว",
        "common_text_delete": "ลบ",
        "common_text_deleted": "ลบแล้ว",
        "common_default_state_set_default_desc": "แตะ \"บันทึก\" เพื่อบันทึกการตั้งค่าปัจจุบันให้เป็นสถานะเริ่มต้น เมื่อเปิดไฟอีกครั้ง สถานะนี้จะถูกใช้งาน",
        "common_default_light_ios": "ตั้งค่าสถานะไฟเริ่มต้น",
        "common_text_confirm_knob_custom": "แตะสองครั้งเพื่อเปิด {0} ใช่หรือไม่",
        "common_collection_knob_kidmode_msg": "คุณได้เปิดใช้งานโหมดเด็กแล้ว อุณหภูมิสีคือ {0}K ซึ่งเกินกว่าขีดจำกัดที่ระบุไว้ (4000 K) หากคุณต้องการใช้การตั้งค่าไฟนี้ โปรดปิดใช้งานโหมดเด็ก",
        "common_dialog_kidmode_disable_apply": "นำไปใช้อยู่ดี",
        "common_view_button_container_pickup_color": "ดีดนิ้ว",
        "common_settings_general_setting_ios": "การตั้งค่าทั่วไป",
        "common_settings_device_setting": "การตั้งค่าอุปกรณ์",
        "common_text_bright": "ความสว่าง",
        "common_text_color_temperature": "อุณหภูมิสี",
        "common_text_color": "สี",
        "common_collection_apply_light": "นำไปใช้",
        "common_text_flow": "การไหล",
        "common_text_night_light": "พระจันทร์",
        "common_collection_recommend_segment": "ที่แนะนำ",
        "common_collection_favorite_segment": "รายการโปรด",
        "common_setting_room_management_ios": "จัดการตำแหน่งที่ตั้ง",
        "common_setting_ifttt_auto_ios": "ฉากอัจฉริยะ",
        "common_setting_new_more_ios": "การตั้งค่าเพิ่มเติม",
        "common_setting_add_to_desktop_ios": "เพิ่มทางลัดหน้าโฮม",
        "common_dialog_text_upgrade_firmware": "โปรดอัปเดตเฟิร์มแวร์ก่อน",
        "common_msg_user_agreement": "ข้อตกลงผู้ใช้",
        "common_msg_privacy_policy": "นโยบายความเป็นส่วนตัว",
        "common_msg_agreement_and_policy": "ข้อตกลงผู้ใช้และนโยบายความเป็นส่วนตัว",
        "common_setting_night_light_no_open_ios": "ปิดใช้งานแล้ว",
        "common_scene_open_delay_off": "เปิดไฟและเปิดใช้งานการหน่วงเวลาปิด",
        "common_night_light_enable_ios": "เปิดใช้งาน",
        "common_miband_band_ios": "จับคู่แบนด์แล้ว",
        "common_miband_not_bind_ios": "ยังไม่ได้จับคู่",
        "common_setting_ble_gateway_ios": "เกตเวย์ Bluetooth",
        "common_default_state_on_from_power": "สถานะไฟเริ่มต้นเมื่อเปิด",
        "common_default_state_title": "สถานะเริ่มต้น",
        "common_default_state_save_last": "จำสถานะที่ใช้ล่าสุด",
        "common_default_state_save_last_light_as_default_ios": "จำการตั้งค่าไฟที่ใช้ล่าสุด",
        "common_default_state_set_default_title": "สถานะไฟเริ่มต้น",
        "common_collection_apply_success": "นำไปใช้เรียบร้อยแล้ว",
        "common_delay_off_canceled": "ยกเลิกการหน่วงเวลาปิด",
        "common_del_delay_off_fail": "ไม่สามารถยกเลิกการหน่วงเวลาปิด",
        "common_miband_updating": "กำลังอัปเดต…",
        "common_collection_rename_failed": "ไม่สามารถตั้งชื่อใหม่",
        "common_remote_control_mac_address": "ที่อยู่ MAC",
        "common_remote_control_seesaw": "สวิตช์หรี่ไฟอัจฉริยะ",
        "common_remote_control_auster": "รีโมทคอนโทรลเครื่องทำน้ำอุ่น Yeelight",
        "common_remote_control_and_switch_title": "รีโมทคอนโทรลและสวิตช์",
        "common_remote_bind_remote_and_switch_link": "ฉันจะจับคู่รีโมทคอนโทรลและสวิตช์ได้อย่างไร",
        "common_remote_connection_no_binding_tips": "ยังไม่ได้จับคู่รีโมทคอนโทรลและสวิตช์",
        "common_remote_connection_web_title": "เลือกรีโมทคอนโทรลและสวิตช์",
        "common_text_settings": "ฟังก์ชั่น",
        "commom_default_state_auto_save_desc": "เมื่อเปิดใช้งานแล้ว อุปกรณ์จะบันทึกการตั้งค่าไฟที่ใช้เมื่อปิด และคืนค่าการตั้งค่าเหล่านั้นเมื่อเปิดอีกครั้งเมื่อปิดใช้งานแล้ว อุปกรณ์จะกลับสู่สถานะไฟเริ่มต้นเสมอเมื่อเปิด",
        "common_text_loading": "กำลังรับข้อมูลอุปกรณ์…",
        "common_dialog_text_quit": "ออก",
        "common_dialog_text_retry": "ลองอีกครั้ง",
        "common_text_delete_failed": "ไม่สามารถลบได้",
        "common_remote_control": "รีโมทคอนโทรล",
        "common_text_toast_limit_mid": "ฟังก์ชั่นนี้ไม่สามารถใช้งานได้ชั่วคราวเนื่องจากสิทธิ์ในการจำกัดการประมวลผลตาม GDPR",
        "common_default_state_light_prompt": "เลือกสถานะที่ใช้เมื่อทำการเปิด",
        "common_default_state_recovery_break_light": "คืนค่าสถานะไฟโดยอัตโนมัติ",
        "common_default_state_success": "การตั้งค่าสถานะไฟเริ่มต้นเรียบร้อยแล้ว",
        "common_default_state_fail": "ไม่สามารถตั้งค่าสถานะไฟเริ่มต้นได้",
        "common_setting_new_group": "สร้างกลุ่มไฟใหม่",
        "common_text_mesh_not_connected": "อุปกรณ์ต้องใช้กับลำโพงอัจฉริยะ Yeelight หรือนาฬิกา Mi AI Assistant โปรดไปที่ร้านค้า You Pin เพื่อซื้อ",
        "common_title_mesh_not_connected": "ไม่สามารถเชื่อมกับเราเตอร์ได้",
        "common_text_device_management_ios": "การจัดการอุปกรณ์",
        "common_schedule_repeat_mode_everyday": "ทุกวัน",
        "common_schedule_repeat_mode_workday": "วันทำงาน",
        "common_schedule_repeat_mode_freeday": "สุดสัปดาห์",
        "common_schedule_repeat_mode_monday": "จันทร์",
        "common_schedule_repeat_mode_tuesday": "อังคาร",
        "common_schedule_repeat_mode_wensday": "พุธ",
        "common_schedule_repeat_mode_thursday": "พฤหัสฯ",
        "common_schedule_repeat_mode_friday": "ศุกร์",
        "common_schedule_repeat_mode_saturday": "เสาร์",
        "common_schedule_repeat_mode_sunday": "อาทิตย์",
        "common_nightlight_operate_failure_android": "ไม่สามารถเปิดได้",
        "common_text_min": "น.",
        "common_text_hour_unit": "ชม.",
        "common_text_hour": "ชม.",
        "common_home_kit_add_tip": "ผลิตภัณฑ์รองรับ Apple HomeKit เปิดแอป Mi Home กดการ์ดทางลัดของผลิตภัณฑ์นี้ค้างไว้ แล้วเลือกไอคอน HomeKit เพื่อเพิ่มผลิตภัณฑ์ไปยังแอปบ้าน"
    };
},10700,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/th/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10703,[10706],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/id/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = {
        "common_text_done": "Selesai",
        "common_text_button_add": "Tambahkan",
        "common_text_edit": "Edit",
        "common_text_rename": "Ubah nama",
        "common_dialog_cancel": "Batalkan",
        "common_dialog_ok": "Oke",
        "common_collection_empty_ios": "Tidak boleh kosong",
        "common_collection_too_long_ios": "Terlalu panjang",
        "common_collection_judgement_existed": "Nama sudah ada",
        "common_collection_network_error_ios": "Kesalahan Jaringan",
        "common_collection_dialog_add_title": "Tambahkan ke Favorit",
        "common_text_loading_ios": "Memuat...",
        "common_view_button_container_switch_open": "Nyala",
        "common_view_button_container_switch_close": "Mati",
        "common_collection_favorites": "Favorit",
        "common_text_delay_off_timer": "Pengatur waktu",
        "common_open_delay_off_off_info_singular": "Lampu akan mati dalam {0} mnt",
        "common_text_version": "Versi:",
        "common_text_save": "Simpan",
        "common_text_save_success": "Selesai",
        "common_text_fail_ios": "Tidak bisa menyimpan, coba lagi nanti.",
        "common_text_setting": "Pengaturan",
        "common_settings_schedules": "Jadwal",
        "common_open_light_failed_tips_ios": "Gagal, pastikan lampu dinyalakan.",
        "common_add_delay_off_fail": "Tidak dapat mati setelah penundaan. Pastikan lampu dinyalakan, dan memiliki akses jaringan.",
        "common_default_state_save_last_tips": "Setelah fungsi ini diaktifkan, lampu akan selalu kembali ke pengaturan saat ini ketika dimatikan dan dinyalakan lagi. Setelah mematikan lampu melalui aplikasi, nyalakan dan matikan lampu dua kali (mirip dengan mengatur ulang lampu, yang memerlukan lampu dinyalakan dan dimatikan 5 kali berturut-turut) untuk menyalakan lampu.",
        "common_settings_night_light": "Lampu Malam",
        "common_title_bar_ct": "Suhu Warna",
        "common_title_bar_brightness": "Kecerahan",
        "common_night_light_start_time": "Waktu Mulai",
        "common_night_light_end_time": "Waktu Selesai",
        "common_night_light_auto_delay_off": "Penundaan matikan otomatis",
        "common_night_light_delay_off_time": "Penundaan",
        "common_nightlight_open_success": "Lampu Malam aktif",
        "common_nightlight_close_success": "Lampu Malam nonaktif",
        "common_nightlight_operate_failure_ios": "Tidak dapat mengatur lampu malam, coba lagi nanti.",
        "common_text_unpaired": "Putuskan",
        "common_remote_management_ios": "Manajemen Kontrol Jarak Jauh",
        "common_give_up": "Buang perubahan?",
        "common_text_miband": "Mi Band",
        "common_miband_will_pair_tips": "Pasangkan dengan Mi Band sehingga lampu akan otomatis mati setelah Anda tertidur.",
        "common_miband_have_pair_tips": "Dipasangkan dengan Mi Band sehingga lampu akan otomatis mati setelah Anda tertidur.",
        "common_miband_bind_autoclose": "Matikan otomatis",
        "common_miband_pair": "Pasangkan dengan Mi Band",
        "common_miband_unpair": "Putuskan Mi Band",
        "common_miband_search_title": "Cari Mi Band",
        "common_miband_search_tip": "Dekatkan Mi Band dengan ponsel dan pastikan sudah dipasangkan dengan aplikasi Mi Fit.",
        "common_miband_found": "Mi Band ditemukan",
        "common_miband_pairing_ios": "Memasangkan dengan Mi Band...",
        "common_miband_search_notfound": "Mi Band tidak ditemukan",
        "common_miband_pair_fail_ios": "Tidak dapat memasangkan",
        "common_miband_reopen_broadcast_ok": "Aktif, mulai memasangkan",
        "common_miband_search_retry": "Cari lagi",
        "common_miband_unpair_tips": "Setelah pemasangan diputus, lampu tidak akan otomatis mati setelah Anda tertidur.",
        "common_miband_alter_no_ios": "Tidak",
        "common_miband_alter_yes_ios": "Ya",
        "common_miband_shake_ios": "Apakah gelang yang ingin Anda pasangkan bergetar?",
        "common_miband_reopen_broadcast": "Buka aplikasi Mi Fit > Profil > ketuk Tambahkan perangkat > pilih Band, dan aktifkan Bluetooth.",
        "common_text_brightness": "Kecerahan",
        "common_open_delay_off_brightness_sub": "Lampu akan diatur ke tingkat kecerahan ini saat dinyalakan.",
        "common_collection_select_message": "Pilih {0} sebagai pengaturan cahaya untuk kegiatan cerdas Anda?",
        "common_scene_quit_message": "Pengaturan cahaya tidak dipilih. Keluar sekarang?",
        "common_dialog_notice_title": "Notifikasi",
        "common_setting_share_device_ios": "Perangkat dibagikan",
        "common_setting_check_firmware_upgrade_ios": "Periksa pembaruan firmware",
        "common_setting_unbind_device_ios": "Putuskan koneksi",
        "common_view_button_container_colors": "Warna",
        "common_view_button_container_sunlight": "Matahari",
        "common_view_button_container_whitelight": "Putih",
        "common_view_control_flow_setting": "Pengaturan aliran",
        "common_color_flow_pickup_title": "Pilih Warna",
        "common_text_capture_apply": "Terapkan",
        "common_collection_added_success": "Ditambahkan ke Favorit",
        "common_text_renamed": "Nama diubah",
        "common_text_delete": "Hapus",
        "common_text_deleted": "Dihapus",
        "common_default_state_set_default_desc": "Tekan \"Simpan\" untuk menyimpan pengaturan saat ini sebagai kondisi default. Saat lampu dinyalakan lagi, kondisi ini akan digunakan.",
        "common_default_light_ios": "Atur kondisi cahaya default",
        "common_text_confirm_knob_custom": "Ketuk dua kali untuk menyalakan {0}?",
        "common_collection_knob_kidmode_msg": "Anda telah mengaktifkan Mode Anak. Suhu warna {0}K, melebihi batas yang ditentukan (4000 K). Jika Anda ingin menggunakan pengaturan cahaya ini, harap nonaktifkan Mode Anak.",
        "common_dialog_kidmode_disable_apply": "Tetap Terapkan",
        "common_view_button_container_pickup_color": "Snap",
        "common_settings_general_setting_ios": "Pengaturan umum",
        "common_settings_device_setting": "Pengaturan perangkat",
        "common_text_bright": "Kecerahan",
        "common_text_color_temperature": "Suhu Warna",
        "common_text_color": "Warna",
        "common_collection_apply_light": "Terapkan",
        "common_text_flow": "Aliran",
        "common_text_night_light": "Bulan",
        "common_collection_recommend_segment": "Direkomendasikan",
        "common_collection_favorite_segment": "Favorit",
        "common_setting_room_management_ios": "Kelola lokasi",
        "common_setting_ifttt_auto_ios": "Kegiatan cerdas",
        "common_setting_new_more_ios": "Pengaturan lainnya",
        "common_setting_add_to_desktop_ios": "Tambahkan pintasan layar Beranda",
        "common_dialog_text_upgrade_firmware": "Harap perbarui firmware terlebih dahulu.",
        "common_msg_user_agreement": "Perjanjian Pengguna",
        "common_msg_privacy_policy": "Kebijakan Privasi",
        "common_msg_agreement_and_policy": "Perjanjian Pengguna & Kebijakan Privasi",
        "common_setting_night_light_no_open_ios": "Nonaktif",
        "common_scene_open_delay_off": "Nyalakan lampu dan aktifkan penundaan matikan",
        "common_night_light_enable_ios": "Aktifkan",
        "common_miband_band_ios": "Gelang dipasangkan",
        "common_miband_not_bind_ios": "Belum dipasangkan",
        "common_setting_ble_gateway_ios": "Gateway Bluetooth",
        "common_default_state_on_from_power": "Kondisi cahaya default saat dinyalakan",
        "common_default_state_title": "Kondisi default",
        "common_default_state_save_last": "Ingat kondisi terakhir yang digunakan",
        "common_default_state_save_last_light_as_default_ios": "Ingat pengaturan cahaya terakhir yang digunakan",
        "common_default_state_set_default_title": "Kondisi cahaya default",
        "common_collection_apply_success": "Berhasil diterapkan",
        "common_delay_off_canceled": "Penundaan matikan dibatalkan",
        "common_del_delay_off_fail": "Tidak dapat membatalkan penundaan matikan",
        "common_miband_updating": "Memperbarui…",
        "common_collection_rename_failed": "Tidak dapat mengubah nama",
        "common_remote_control_mac_address": "Alamat MAC",
        "common_remote_control_seesaw": "Sakelar peredup cerdas",
        "common_remote_control_auster": "Remote control pemanas bak mandi Yeelight",
        "common_remote_control_and_switch_title": "Remote control dan sakelar",
        "common_remote_bind_remote_and_switch_link": "Bagaimana cara memasangkan remote control dan sakelar?",
        "common_remote_connection_no_binding_tips": "Remote control dan sakelar belum dipasangkan.",
        "common_remote_connection_web_title": "Pilih remote control dan sakelar",
        "common_text_settings": "Fungsi",
        "commom_default_state_auto_save_desc": "Jika diaktifkan, perangkat menyimpan pengaturan cahaya yang digunakan saat dimatikan, dan memulihkan pengaturan tersebut saat dinyalakan lagi. Jika dinonaktifkan, perangkat akan selalu kembali ke kondisi cahaya default saat dinyalakan.",
        "common_text_loading": "Mendapatkan info perangkat…",
        "common_dialog_text_quit": "Keluar",
        "common_dialog_text_retry": "Coba Lagi",
        "common_text_delete_failed": "Tidak dapat menghapus",
        "common_remote_control": "Remote control",
        "common_text_toast_limit_mid": "Fungsi ini sementara tidak tersedia karena hak pembatasan pemrosesan menurut GDPR",
        "common_default_state_light_prompt": "Pilih kondisi yang ingin digunakan saat lampu dinyalakan.",
        "common_default_state_recovery_break_light": "Pemulihan kondisi lampu otomatis",
        "common_default_state_success": "Kondisi cahaya default berhasil diatur",
        "common_default_state_fail": "Tidak dapat mengatur kondisi cahaya default",
        "common_setting_new_group": "Buat grup lampu baru",
        "common_text_mesh_not_connected": "Perangkat harus digunakan dengan Speaker Cerdas Yeelight atau Jam Asisten AI Mi. Silakan kunjungi toko You Pin untuk membeli.",
        "common_title_mesh_not_connected": "Tidak terhubung ke perute",
        "common_text_device_management_ios": "Manajemen perangkat",
        "common_schedule_repeat_mode_everyday": "Setiap hari",
        "common_schedule_repeat_mode_workday": "Hari kerja",
        "common_schedule_repeat_mode_freeday": "Akhir pekan",
        "common_schedule_repeat_mode_monday": "Senin",
        "common_schedule_repeat_mode_tuesday": "Selasa",
        "common_schedule_repeat_mode_wensday": "Rabu",
        "common_schedule_repeat_mode_thursday": "Kamis",
        "common_schedule_repeat_mode_friday": "Jumat",
        "common_schedule_repeat_mode_saturday": "Sabtu",
        "common_schedule_repeat_mode_sunday": "Minggu",
        "common_nightlight_operate_failure_android": "Gagal membuka",
        "common_text_min": "mnt",
        "common_text_hour_unit": "j",
        "common_text_hour": "j",
        "common_home_kit_add_tip": "Produk ini mendukung HomeKit Apple. Buka aplikasi Mi Home, tekan dan tahan kartu pintasan produk ini, pilih ikon HomeKit untuk menambahkan produk ke aplikasi Home."
    };
},10706,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/id/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10709,[10712],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/nl/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_done": "Klaar",
    "common_text_button_add": "Toevoegen",
    "common_text_edit": "Bewerken",
    "common_text_rename": "Naam wijzigen",
    "common_dialog_cancel": "Annuleren",
    "common_dialog_ok": "OK",
    "common_collection_empty_ios": "Kan niet leeg zijn",
    "common_collection_too_long_ios": "Te lang",
    "common_collection_judgement_existed": "Naam bestaat al",
    "common_collection_network_error_ios": "Netwerkfout",
    "common_collection_dialog_add_title": "Aan favorieten toevoegen",
    "common_text_loading_ios": "Laden...",
    "common_view_button_container_switch_open": "Aan",
    "common_view_button_container_switch_close": "Uit",
    "common_collection_favorites": "Favorieten",
    "common_text_delay_off_timer": "Timer",
    "common_open_delay_off_off_info_singular": "De lamp wordt over {0} minuten uitgeschakeld",
    "common_text_version": "Versie:",
    "common_text_save": "Opslaan",
    "common_text_save_success": "Klaar",
    "common_text_fail_ios": "Kon niet opslaan, probeer het later opnieuw.",
    "common_text_setting": "Instellingen",
    "common_settings_schedules": "Tijdschema's",
    "common_open_light_failed_tips_ios": "Mislukt, controleer of de lamp is ingeschakeld.",
    "common_add_delay_off_fail": "Kon niet uitschakelen na de vertraging, zorg ervoor dat de lamp is ingeschakeld en toegang heeft tot het netwerk.",
    "common_default_state_save_last_tips": "Als deze functie is ingeschakeld, schakelt de lamp weer over op de huidige instelling wanneer de stroom wordt in- en uitgeschakeld. Na het uitschakelen van de lamp via de app, schakelt u de lamp twee keer in en uit (net als bij het resetten van de lamp, waarbij u de lamp vijf keer achtereenvolgens aan en uit moet doen) om het licht aan te zetten.",
    "common_settings_night_light": "Nachtlamp",
    "common_title_bar_ct": "Kleurtemperatuur",
    "common_title_bar_brightness": "Helderheid",
    "common_night_light_start_time": "Begintijd",
    "common_night_light_end_time": "Eindtijd",
    "common_night_light_auto_delay_off": "Automatische uitschakelvertraging",
    "common_night_light_delay_off_time": "Vertraging",
    "common_nightlight_open_success": "Nachtlamp ingeschakeld",
    "common_nightlight_close_success": "Nachtlamp uitgeschakeld",
    "common_nightlight_operate_failure_ios": "Kon de nachtlamp niet instellen, probeer het later opnieuw.",
    "common_text_unpaired": "Loskoppelen",
    "common_remote_management_ios": "Afstandsbediening beheren",
    "common_give_up": "Wijzigingen verwerpen?",
    "common_text_miband": "Mi Band",
    "common_miband_will_pair_tips": "Koppel met Mi Band, zodat de lamp automatisch uitgaat als u in slaap bent gevallen.",
    "common_miband_have_pair_tips": "Gekoppeld met Mi Band, zodat de lamp automatisch uitgaat als u in slaap bent gevallen.",
    "common_miband_bind_autoclose": "Automatisch uitschakelen",
    "common_miband_pair": "Koppelen met Mi Band",
    "common_miband_unpair": "Mi Band loskoppelen",
    "common_miband_search_title": "Zoeken naar Mi Band",
    "common_miband_search_tip": "Houd de Mi Band dicht bij uw telefoon en zorg ervoor dat deze gekoppeld is met de Mi Fit-app.",
    "common_miband_found": "Mi Band gevonden",
    "common_miband_pairing_ios": "Koppelen met Mi Band...",
    "common_miband_search_notfound": "Geen Mi Band gevonden",
    "common_miband_pair_fail_ios": "Kan niet koppelen",
    "common_miband_reopen_broadcast_ok": "Ingeschakeld, start het koppelen",
    "common_miband_search_retry": "Opnieuw zoeken",
    "common_miband_unpair_tips": "Na het loskoppelen gaat de lamp niet automatisch uit als u in slaap bent gevallen.",
    "common_miband_alter_no_ios": "Nee",
    "common_miband_alter_yes_ios": "Ja",
    "common_miband_shake_ios": "Trilt de band die u wilt koppelen?",
    "common_miband_reopen_broadcast": "Ga naar de Mi Fit-app > Profiel > tik op Apparaat toevoegen > selecteer Band en schakel Bluetooth in.",
    "common_text_brightness": "Helderheid",
    "common_open_delay_off_brightness_sub": "De lamp zal op deze helderheid worden ingesteld wanneer u deze inschakelt.",
    "common_collection_select_message": "{0} als de lichtinstelling voor uw slimme scène selecteren?",
    "common_scene_quit_message": "Geen lichtinstelling geselecteerd, nu afsluiten?",
    "common_dialog_notice_title": "Meldingen",
    "common_setting_share_device_ios": "Apparaat delen",
    "common_setting_check_firmware_upgrade_ios": "Controleren op firmware-updates",
    "common_setting_unbind_device_ios": "De verbinding verbreken",
    "common_view_button_container_colors": "Kleur",
    "common_view_button_container_sunlight": "Zon",
    "common_view_button_container_whitelight": "Wit",
    "common_view_control_flow_setting": "Stroominstellingen",
    "common_color_flow_pickup_title": "Kleur kiezen",
    "common_text_capture_apply": "Toepassen",
    "common_collection_added_success": "Aan favorieten toegevoegd",
    "common_text_renamed": "Naam gewijzigd",
    "common_text_delete": "Verwijderen",
    "common_text_deleted": "Verwijderd",
    "common_default_state_set_default_desc": "Tik op 'Opslaan' om de huidige instelling als standaardinstelling op te slaan. Wanneer de lamp weer wordt ingeschakeld, wordt deze status gebruikt.",
    "common_default_light_ios": "Standaard lichtstand instellen",
    "common_text_confirm_knob_custom": "Twee keer tikken om {0} in te schakelen?",
    "common_collection_knob_kidmode_msg": "U hebt de Kindermodus geactiveerd. De kleurtemperatuur is {0} K, wat hoger is dan de voorgeschreven grenswaarde (4000 K). Schakel de Kindermodus uit als u deze lichtinstelling wilt gebruiken.",
    "common_dialog_kidmode_disable_apply": "Toch toepassen",
    "common_view_button_container_pickup_color": "Snap",
    "common_settings_general_setting_ios": "Algemene instellingen",
    "common_settings_device_setting": "Apparaatinstellingen",
    "common_text_bright": "Helderheid",
    "common_text_color_temperature": "Kleurtemperatuur",
    "common_text_color": "Kleur",
    "common_collection_apply_light": "Toepassen",
    "common_text_flow": "Stroom",
    "common_text_night_light": "Maan",
    "common_collection_recommend_segment": "Aanbevolen",
    "common_collection_favorite_segment": "Favoriet",
    "common_setting_room_management_ios": "Locaties beheren",
    "common_setting_ifttt_auto_ios": "Slimme scène",
    "common_setting_new_more_ios": "Meer instellingen",
    "common_setting_add_to_desktop_ios": "Snelkoppeling op het startscherm toevoegen",
    "common_dialog_text_upgrade_firmware": "Werk eerst de firmware bij.",
    "common_msg_user_agreement": "Gebruikersovereenkomst",
    "common_msg_privacy_policy": "Privacybeleid",
    "common_msg_agreement_and_policy": "Gebruikersovereenkomst & Privacybeleid",
    "common_setting_night_light_no_open_ios": "Uitgeschakeld",
    "common_scene_open_delay_off": "De lamp aanzetten en uitschakelvertraging inschakelen",
    "common_night_light_enable_ios": "Inschakelen",
    "common_miband_band_ios": "Band is gekoppeld",
    "common_miband_not_bind_ios": "Niet gekoppeld",
    "common_setting_ble_gateway_ios": "Bluetooth-gateway",
    "common_default_state_on_from_power": "Standaard lichtstand bij inschakelen",
    "common_default_state_title": "Standaardstand",
    "common_default_state_save_last": "Onthoud de laatst gebruikte stand",
    "common_default_state_save_last_light_as_default_ios": "Onthoud de laatst gebruikte lichtinstellingen",
    "common_default_state_set_default_title": "Standaard lichtstand",
    "common_collection_apply_success": "Succesvol toegepast",
    "common_delay_off_canceled": "Uitschakelvertraging geannuleerd",
    "common_del_delay_off_fail": "Kon de uitschakelvertraging niet annuleren",
    "common_miband_updating": "Bijwerken…",
    "common_collection_rename_failed": "Kon de naam niet wijzigen",
    "common_remote_control_mac_address": "MAC-adres",
    "common_remote_control_seesaw": "Schakelaar slimme dimmer",
    "common_remote_control_auster": "Afstandsbediening Yeelight badverwarmer",
    "common_remote_control_and_switch_title": "Afstandsbediening en schakelaar",
    "common_remote_bind_remote_and_switch_link": "Hoe koppel ik de afstandsbediening met de schakelaar?",
    "common_remote_connection_no_binding_tips": "Afstandsbediening en schakelaar zijn nog niet gekoppeld.",
    "common_remote_connection_web_title": "Selecteer afstandsbediening en schakelaar",
    "common_text_settings": "Functie",
    "commom_default_state_auto_save_desc": "Als de functie is ingeschakeld, slaat het apparaat de gebruikte lichtinstellingen op wanneer het wordt uitgeschakeld en haalt het deze instellingen weer op wanneer het wordt ingeschakeld. Als de functie is uitgeschakeld, schakelt het apparaat bij het inschakelen altijd weer over op de standaard lichtstand.",
    "common_text_loading": "Apparaatinformatie verkrijgen...",
    "common_dialog_text_quit": "Afsluiten",
    "common_dialog_text_retry": "Probeer het opnieuw",
    "common_lamp_turned_off": "Uit",
    "common_view_button_container_guard_read": "Leesmodus",
    "common_view_button_container_guard_screen": "Schermmodus",
    "common_text_delete_failed": "Kon dit niet verwijderen",
    "common_text_kids_mode": "Kindermodus",
    "common_kids_mode_tips": "Nadat u de Kindermodus hebt ingeschakeld, wordt de kleurtemperatuur beperkt tot maximaal 4000 K. Hiermee wordt er minder blauw licht uitgestraald, waardoor de ogen van kinderen niet beschadigd raken en dus hun gezichtsvermogen wordt beschermd.",
    "common_pdo_bottom_tips": "Dubbelklik op de knop om de scherpstelmodus onmiddellijk te activeren. Er pulseert een zacht licht als u rust. Druk of draai licht aan de knop om de lamp terug te zetten naar de normale werkstatus.",
    "common_pdo_title": "Scherpstelmodus",
    "common_pdo_time_info": "%1$d min werken, %2$d min rusten",
    "common_pdo_time_rest_select_title": "Rusttijd",
    "common_pdo_time_work_select_title": "Werktijd",
    "common_pdo_settings": "Instellingen",
    "common_pdo_txt_work": "(%1$d min) tot einde werktijd",
    "common_pdo_txt_rest": "(%1$d min) tot pauze",
    "common_scene_dialog_light_not_support": "Deze lamp wordt niet ondersteund, selecteer opnieuw.",
    "common_remote_control": "Afstandsbediening",
    "common_text_detail": "Details",
    "common_text_toast_limit_mid": "Deze functie is tijdelijk niet beschikbaar wegens het recht op beperking van de verwerking volgens de AVG",
    "common_default_state_light_prompt": "Selecteer welke stand u wilt gebruiken bij het inschakelen.",
    "common_default_state_recovery_break_light": "Lichtstand automatisch herstellen",
    "common_default_state_success": "Standaard lichtstand ingesteld",
    "common_default_state_fail": "Kon de standaard lichtstand niet instellen",
    "common_setting_new_group": "Een nieuwe lichtgroep aanmaken",
    "common_text_mesh_not_connected": "Het apparaat moet worden gebruikt met de Yeelight Smartspeaker of de Mi AI Assistant Clock. Ga naar de You Pin-winkel om deze te kopen.",
    "common_title_mesh_not_connected": "Niet verbonden met een router",
    "common_text_device_management_ios": "Apparaatbeheer",
    "common_schedule_repeat_mode_everyday": "Elke dag",
    "common_schedule_repeat_mode_workday": "Werkdagen",
    "common_schedule_repeat_mode_freeday": "Weekenden",
    "common_schedule_repeat_mode_monday": "Maandag",
    "common_schedule_repeat_mode_tuesday": "Dinsdag",
    "common_schedule_repeat_mode_wensday": "Woensdag",
    "common_schedule_repeat_mode_thursday": "Donderdag",
    "common_schedule_repeat_mode_friday": "Vrijdag",
    "common_schedule_repeat_mode_saturday": "Zaterdag",
    "common_schedule_repeat_mode_sunday": "Zondag",
    "common_nightlight_operate_failure_android": "Kon niet worden geopend",
    "common_text_min": "min",
    "common_text_hour_unit": "u",
    "common_text_hour": "u",
    "common_text_lamp_reading": "Lezen",
    "common_text_lamp_custom": "Aangepast",
    "common_text_lamp_pc_mode": "Pc-modus",
    "common_settings_seesaw_switch_opened": "Flex Switch ingeschakeld",
    "common_settings_seesaw_switch_offed": "Flex Switch uitgeschakeld",
    "common_settings_seesaw_switch_failed": "Flex Switch mislukt",
    "common_settings_seesaw_switch": "Flex Switch",
    "common_settings_seesaw_switch_tips": "Deze functie is ALLEEN compatibel met Yeelight Flex Switch. Anders kan de lamp defect raken.",
    "common_settings_seesaw_switch_status_on": "Aan",
    "common_settings_seesaw_switch_status_off": "Uit",
    "common_settings_seesaw_switch_op_tips": "'Flex Switch' inschakelen",
    "mi_band_bind_title": "Mi Band",
    "mi_band_bind_sub_title": "Koppel met Mi Band, zodat de lamp automatisch uitgaat als u in slaap bent gevallen.",
    "mi_band_bind_enable_bt": "Bluetooth inschakelen",
    "mi_band_bind_Mi_Fit": "Mi Band gekoppeld met Mi Fit. Schakel vervolgens 'Detecteerbaar' in",
    "mi_band_bind_step1": "Koppelen met Mi Band",
    "mi_band_bind_searching": "Zoeken...",
    "mi_band_bind_searching_hint": "Houd uw Mi Band dicht bij uw telefoon en zorg ervoor dat Bluetooth is ingeschakeld",
    "mi_band_bind_bandshake": "Trilt de Mi Band?",
    "mi_band_bind_bandshake_no": "Nee",
    "mi_band_bind_bandshake_yes": "Ja",
    "mi_band_bind_connecting": "Bezig met verbinden...",
    "mi_band_bind_connected": "Verbonden",
    "mi_band_bind_sleep_setting": "Automatisch uitschakelen als u slaapt",
    "mi_band_bind_band_unbind_hint": "De lamp gaat niet automatisch uit zodra de band is losgekoppeld",
    "setting_item_touch_panel_bgl": "Aanraakpaneel: Lamp automatisch uitschakelen",
    "common_setting_item_touch_panel_bgl_hint": "Als u deze functie inschakelt, wordt het aanraakscherm na tien seconden zonder handeling automatisch uitgeschakeld. Hierdoor wordt visuele interferentie voorkomen.",
    "miband_broadcast_main": "miband_broadcast_main_nl.png"
  };
},10712,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/nl/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},10715,[10718],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ar/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "common_text_done": "تم",
    "common_text_button_add": "إضافة",
    "common_text_edit": "تحرير",
    "common_text_rename": "إعادة تسمية",
    "common_dialog_cancel": "إلغاء",
    "common_dialog_ok": "موافق",
    "common_collection_empty_ios": "لا يمكن أن تكون فارغة",
    "common_collection_too_long_ios": "طويل للغاية",
    "common_collection_judgement_existed": "الاسم موجود بالفعل",
    "common_collection_network_error_ios": "خطأ في الشبكة",
    "common_collection_dialog_add_title": "إضافة إلى المفضلات",
    "common_text_loading_ios": "جارٍ التحميل...",
    "common_view_button_container_switch_open": "تشغيل",
    "common_view_button_container_switch_close": "إيقاف",
    "common_collection_favorites": "المفضلة",
    "common_text_delay_off_timer": "موقت",
    "common_open_delay_off_off_info_singular": "ستتوقف الإضاءة خلال {0} من الدقائق",
    "common_text_version": "الإصدار:",
    "common_text_save": "حفظ",
    "common_text_save_success": "تم",
    "common_text_fail_ios": "تعذّر الحفظ، أعد المحاولة لاحقًا.",
    "common_text_setting": "الإعدادات",
    "common_settings_schedules": "جداول",
    "common_open_light_failed_tips_ios": "فشل، الرجاء التأكد من تشغيل الإضاءة.",
    "common_add_delay_off_fail": "تعذّر الإيقاف بعد التأخير، الرجاء التأكد من الإضاءة قيد التشغيل، ولديك وصولاً إلى الشبكة.",
    "common_default_state_save_last_tips": "بمجرد تمكين الوظيفة، ستعود الإضاءة دائمًا إلى الإعداد الحالي عند فصل الكهرباء وتشغيلها مرة أخرى. بعد إيقاف الإضاءة عبر التطبيق، قم بتشغيل الإضاءة وإيقافها مرتين (مثل إعادة ضبط الإضاءة، والذي يتطلب تشغيل الإضاءة وإيقافها 5 مرات على التوالي) لتشغيل الإضاءة.",
    "common_settings_night_light": "الإضاءة الليلية",
    "common_title_bar_ct": "درجة حرارة اللون",
    "common_title_bar_brightness": "السطوع",
    "common_night_light_start_time": "وقت البداية",
    "common_night_light_end_time": "وقت الانتهاء",
    "common_night_light_auto_delay_off": "التأجيل التلقائي لإيقاف التشغيل",
    "common_night_light_delay_off_time": "تأجيل",
    "common_nightlight_open_success": "تم تمكين الإضاءة الليلية",
    "common_nightlight_close_success": "تم تعطيل الإضاءة الليلية",
    "common_nightlight_operate_failure_ios": "تعذّر ضبط الإضاءة الليلية، الرجاء إعادة المحاولة لاحقًا.",
    "common_text_unpaired": "إلغاء إقران",
    "common_remote_management_ios": "إدارة التحكم عن بعد",
    "common_give_up": "تجاهل التغييرات؟",
    "common_text_miband": "سوار Mi",
    "common_miband_will_pair_tips": "قم بالإقران مع سوار Mi بحيث يتم إيقاف الإضاءة تلقائيًا بعد أن تغط في النوم.",
    "common_miband_have_pair_tips": "تم الإقران مع سوار Mi بحيث يتم إيقاف الإضاءة تلقائيًا بعد أن تغط في النوم.",
    "common_miband_bind_autoclose": "إيقاف التشغيل تلقائيًا",
    "common_miband_pair": "الإقران مع سوار Mi",
    "common_miband_unpair": "إلغاء إقران سوار Mi",
    "common_miband_search_title": "البحث عن سوار Mi",
    "common_miband_search_tip": "ضع سوار Mi بالقرب من هاتفك وتأكد من إقرانه مع تطبيق Mi Fit.",
    "common_miband_found": "تم العثور على سوار Mi",
    "common_miband_pairing_ios": "جارٍ الإقران مع سوار Mi...",
    "common_miband_search_notfound": "لم يتم العثور على سوار Mi",
    "common_miband_pair_fail_ios": "تعذّر الإقران",
    "common_miband_reopen_broadcast_ok": "تم التمكين، بدء الإقران",
    "common_miband_search_retry": "البحث مرة أخرى",
    "common_miband_unpair_tips": "بعد إلغاء الإقران، لن تتوقف الإضاءة تلقائيًا بعد أن تغط في النوم.",
    "common_miband_alter_no_ios": "لا",
    "common_miband_alter_yes_ios": "نعم",
    "common_miband_shake_ios": "هل السوار الذي تريد إقرانه به اهتزاز؟",
    "common_miband_reopen_broadcast": "انتقل إلى \"تطبيق Mi Fit\" > \"الملف الشخصي\" > واضغط على \"إضافة جهاز\" > وحدد السوار، وقم بتشغيل البلوتوث.",
    "common_text_brightness": "السطوع",
    "common_open_delay_off_brightness_sub": "سيتم ضبط الإضاءة على درجة السطوع هذه عند تشغيلها.",
    "common_collection_select_message": "تحديد {0} كإعداد الإضاءة للمشهد الذكي لديك؟",
    "common_scene_quit_message": "لم يتم تحديد أي إضاءة، الخروج الآن؟",
    "common_dialog_notice_title": "الإعلامات",
    "common_setting_share_device_ios": "مشاركة الجهاز",
    "common_setting_check_firmware_upgrade_ios": "التحقق من وجود تحديثات للبرنامج الثابت",
    "common_setting_unbind_device_ios": "قطع اتصال",
    "common_view_button_container_colors": "اللون",
    "common_view_button_container_sunlight": "الأحد",
    "common_view_button_container_whitelight": "أبيض",
    "common_view_control_flow_setting": "إعدادات التدفق",
    "common_color_flow_pickup_title": "انتقاء لون",
    "common_text_capture_apply": "تطبيق",
    "common_collection_added_success": "تمت إضافته إلى المفضلات",
    "common_text_renamed": "تمت إعادة التسمية",
    "common_text_delete": "حذف",
    "common_text_deleted": "تم الحذف",
    "common_default_state_set_default_desc": "اضغط على \"حفظ\" لحفظ الإعداد الحالي كالحالة الافتراضية. عند تشغيل الإضاءة مرة أخرى، سيتم استخدام هذه الحالة.",
    "common_default_light_ios": "ضبط حالة الإضاءة الافتراضية",
    "common_text_confirm_knob_custom": "اضغط مرتين لتشغيل {0}?",
    "common_collection_knob_kidmode_msg": "لقد قمتَ بتنشيط وضع الطفل. درجة حرارة اللون هي {0}K، والتي تتجاوز الحد المسموح (4000 ك). إذا كنت ترغب في استخدام إعداد الإضاءة هذا، فالرجاء تعطيل وضع الطفل.",
    "common_dialog_kidmode_disable_apply": "تطبيق على أي حال",
    "common_view_button_container_pickup_color": "التقاط",
    "common_settings_general_setting_ios": "الإعدادات العامة",
    "common_settings_device_setting": "إعدادات الجهاز",
    "common_text_bright": "السطوع",
    "common_text_color_temperature": "درجة حرارة اللون",
    "common_text_color": "اللون",
    "common_collection_apply_light": "تطبيق",
    "common_text_flow": "تدفق",
    "common_text_night_light": "قمر",
    "common_collection_recommend_segment": "موصى به",
    "common_collection_favorite_segment": "المفضلة",
    "common_setting_room_management_ios": "إدارة المواقع",
    "common_setting_ifttt_auto_ios": "المشهد الذكي",
    "common_setting_new_more_ios": "مزيد من الإعدادات",
    "common_setting_add_to_desktop_ios": "إضافة اختصار شاشة رئيسية",
    "common_dialog_text_upgrade_firmware": "الرجاء تحديث البرنامج الثابت أولاً.",
    "common_msg_user_agreement": "اتفاقية المستخدم",
    "common_msg_privacy_policy": "سياسة الخصوصية",
    "common_msg_agreement_and_policy": "اتفاقية المستخدم وسياسة الخصوصية",
    "common_setting_night_light_no_open_ios": "مُعطَّل",
    "common_scene_open_delay_off": "تشغيل الإضاءة وتمكين تأجيل إيقاف التشغيل",
    "common_night_light_enable_ios": "تمكين",
    "common_miband_band_ios": "تم إقران السوار",
    "common_miband_not_bind_ios": "لم يتم إقرانه",
    "common_setting_ble_gateway_ios": "بوابة البلوتوث",
    "common_default_state_on_from_power": "حالة الإضاءة الافتراضية عند التشغيل",
    "common_default_state_title": "الحالة الافتراضية",
    "common_default_state_save_last": "تذكر آخر حالة مستخدمة",
    "common_default_state_save_last_light_as_default_ios": "تذكر آخر إعدادات إضاءة مستخدمة",
    "common_default_state_set_default_title": "حالة الإضاءة الافتراضية",
    "common_collection_apply_success": "تم التطبيق بنجاح",
    "common_delay_off_canceled": "تم إلغاء تأجيل إيقاف التشغيل",
    "common_del_delay_off_fail": "تعذّر إلغاء تأجيل إيقاف التشغيل",
    "common_miband_updating": "جارٍ التحديث…",
    "common_collection_rename_failed": "تعذّرت إعادة التسمية",
    "common_remote_control_mac_address": "عنوان MAC",
    "common_remote_control_seesaw": "مفتاح المعتام الذكي",
    "common_remote_control_auster": "ريموت سخان حمام Yeelight",
    "common_remote_control_and_switch_title": "الريموت والمفتاح",
    "common_remote_bind_remote_and_switch_link": "كيف يمكنني إقران الريموت والمفتاح؟",
    "common_remote_connection_no_binding_tips": "لم يتم إقران الريموت والمفتاح بعد.",
    "common_remote_connection_web_title": "تحديد الريموت والمفتاح",
    "common_text_settings": "الوظيفة",
    "commom_default_state_auto_save_desc": "عند التمكين، يحفظ الجهاز إعدادات الإضاءة المستخدمة عند إيقاف التشغيل، ويستعيد تلك الإعدادات عند تشغيله مرة أخرى. وعند التعطيل، سيعود الجهاز دائمًا إلى حالة الإضاءة الافتراضية عند التشغيل.",
    "common_text_loading": "جارٍ الحصول على معلومات الجهاز...",
    "common_dialog_text_quit": "الخروج",
    "common_dialog_text_retry": "إعادة المحاولة",
    "common_lamp_turned_off": "إيقاف",
    "common_view_button_container_guard_read": "وضع القراءة",
    "common_view_button_container_guard_screen": "وضع الشاشة",
    "common_text_delete_failed": "تعذّر الحذف",
    "common_text_kids_mode": "وضع الطفل",
    "common_kids_mode_tips": "بعد تمكين \"وضع الطفل\"، ستقتصر درجة حرارة اللون على الحد الأقصى. 4000 ك. وهذا يساعد على حماية بصر الأطفال من خلال تقليل نسبة الإضاءة الزرقاء المنبعث بحيث لا تتضرر عيونهم.",
    "common_pdo_bottom_tips": "انقر نقرًا مزدوجًا على المقبض لتنشيط وضع التركيز فورًا. عند إعادة الضبط، ستومض إضاءة خافتة ببطء. اضغط أو أدر المفتاح برفق لإعادة الإضاءة إلى حالة العمل العادية.",
    "common_pdo_title": "وضع التركيز",
    "common_pdo_time_info": "عمل لمدة %1$d دقيقة، راحة لمدة %2$d دقيقة",
    "common_pdo_time_rest_select_title": "وقت إعادة الضبط",
    "common_pdo_time_work_select_title": "وقت العمل",
    "common_pdo_settings": "الإعدادات",
    "common_pdo_txt_work": "(%1$d دقيقة) لحين الخروج من العمل",
    "common_pdo_txt_rest": "(%1$d دقيقة) لحين الاستراحة",
    "common_scene_dialog_light_not_support": "الإضاءة ليست مدعومة، الرجاء التحديد مرة أخرى.",
    "common_remote_control": "التحكم عن بُعد",
    "common_text_detail": "التفاصيل",
    "common_text_toast_limit_mid": "هذه الوظيفة غير متاحة مؤقتًا بسبب الحق في تقييد المعالجة وفقًا للائحة العامة لحماية البيانات",
    "common_default_state_light_prompt": "حدد الحالة لاستخدامها عند التشغيل.",
    "common_default_state_recovery_break_light": "استرداد حالة الإضاءة التلقائية",
    "common_default_state_success": "تم ضبط حالة الإضاءة الافتراضية بنجاح",
    "common_default_state_fail": "تعذّر ضبط حالة الإضاءة الافتراضية",
    "common_setting_new_group": "إنشاء مجموعة إضاءة جديدة",
    "common_text_mesh_not_connected": "يلزم استخدام الجهاز مع سماعة Yeelight الذكية أو ساعة الذكاء الاصطناعي من Mi. الرجاء الانتقال إلى متجر You Pin للشراء.",
    "common_title_mesh_not_connected": "غير متصل بجهاز توجيه",
    "common_text_device_management_ios": "إدارة الجهاز",
    "common_schedule_repeat_mode_everyday": "كل يوم",
    "common_schedule_repeat_mode_workday": "أيام العمل",
    "common_schedule_repeat_mode_freeday": "نهاية الأسبوع",
    "common_schedule_repeat_mode_monday": "الاثنين",
    "common_schedule_repeat_mode_tuesday": "الثلاثاء",
    "common_schedule_repeat_mode_wensday": "الأربعاء",
    "common_schedule_repeat_mode_thursday": "الخميس",
    "common_schedule_repeat_mode_friday": "الجمعة",
    "common_schedule_repeat_mode_saturday": "السبت",
    "common_schedule_repeat_mode_sunday": "الأحد",
    "common_nightlight_operate_failure_android": "فشل فتح",
    "common_text_min": "دقيقة",
    "common_text_hour_unit": "س",
    "common_text_hour": "س",
    "common_text_lamp_reading": "قراءة",
    "common_text_lamp_custom": "مُخصص",
    "common_text_lamp_pc_mode": "وضع الكمبيوتر الشخصي",
    "common_settings_seesaw_switch_opened": "مفتاح التبديل قيد التشغيل",
    "common_settings_seesaw_switch_offed": "مفتاح التبديل قيد إيقاف التشغيل",
    "common_settings_seesaw_switch_failed": "فشل مفتاح التبديل",
    "common_settings_seesaw_switch": "مفتاح التبديل",
    "common_settings_seesaw_switch_tips": "هذه الوظيفة متوافقة \"فقط\" مع مفتاح تبديل Yeelight. وإلا، قد تؤدي إلى عطل في الإضاءة.",
    "common_settings_seesaw_switch_status_on": "تشغيل",
    "common_settings_seesaw_switch_status_off": "إيقاف",
    "common_settings_seesaw_switch_op_tips": "تمكين \"مفتاح التبديل\"",
    "mi_band_bind_title": "سوار Mi",
    "mi_band_bind_sub_title": "قم بالإقران مع سوار Mi، وسيتوقف المصباح تلقائيًا بعد أن تغط في النوم.",
    "mi_band_bind_enable_bt": "تمكين البلوتوث",
    "mi_band_bind_Mi_Fit": "يتم إقران سوار Mi باستخدام تطبيق Mi Fit، ثم تمكين \"قابل للاكتشاف\"",
    "mi_band_bind_step1": "الإقران بسوار Mi",
    "mi_band_bind_searching": "جارِ البحث...",
    "mi_band_bind_searching_hint": "أبقِ سوار Mi بالقرب من الهاتف وتأكد من تشغيل البلوتوث",
    "mi_band_bind_bandshake": "اهتزاز سوار Mi؟",
    "mi_band_bind_bandshake_no": "لا",
    "mi_band_bind_bandshake_yes": "نعم",
    "mi_band_bind_connecting": "جارٍ الاتصال...",
    "mi_band_bind_connected": "متصل",
    "mi_band_bind_sleep_setting": "الإيقاف التلقائي بعد النوم",
    "mi_band_bind_band_unbind_hint": "لن ينطفئ المصباح تلقائيًا بمجرد إلغاء إقران السوار",
    "setting_item_touch_panel_bgl": "لوحة اللمس: إيقاف تشغيل الإضاءة تلقائيًا",
    "common_setting_item_touch_panel_bgl_hint": "بعد بتمكين الوظيفة، سيتم إيقاف لوحة اللمس تلقائيًا بعد 10 ثوان بدون تشغيل، لتجنب التداخل البصري.",
    "miband_broadcast_main": "miband_broadcast_main_ar.png"
  };
},10718,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/MultilingualResources/ar/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var CommonYeelightModules = _require(_dependencyMap[0]);

    var CommonTypeEnum = CommonYeelightModules.CommonTypeEnum,
        YLDevice = CommonYeelightModules.YLDevice,
        YLHostFile = CommonYeelightModules.YLHostFile;
    var _CommonTypeEnum$Globa = CommonTypeEnum.GlobalConstant,
        OldFlowColorSetting = _CommonTypeEnum$Globa.OldFlowColorSetting,
        OldDELAYTIMERFILE = _CommonTypeEnum$Globa.OldDELAYTIMERFILE;
    var CurrentPrivacyTimeKey = "CurrentPrivacyTimeKey";
    var FlowColorSettingKey = "_FlowColorSetting.dat";
    var DelayTimerKey = "_DelayTimer.dat";
    var SunriseSunsetAlertVisible = "SunriseSunsetAlertVisible";
    var HomeKitTipSettingKey = "HomeKitTipSettingKey";

    var LocalStorageManager = function () {
        function LocalStorageManager() {
            babelHelpers.classCallCheck(this, LocalStorageManager);
        }

        babelHelpers.createClass(LocalStorageManager, [{
            key: "initDeviceToken",
            value: function initDeviceToken(callback) {
                var _this = this;

                CommonTypeEnum.getDeviceToken(function (token) {
                    if (token) {
                        YLHostFile.readFile(String(YLDevice.deviceId), function (isSucces, content) {
                            YLHostFile.writeFile(String(YLDevice.deviceId), String(token), function () {});

                            if (isSucces && content.length > 0) {
                                if (token !== content) {
                                    _this.deleteDataWithOldToken(content);
                                }
                            }
                        });
                    }
                });
            }
        }, {
            key: "getSnapPrivacyTime",
            value: function getSnapPrivacyTime(callback) {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.readFile(token + CurrentPrivacyTimeKey, function (isSucces, resultString) {
                        if (isSucces) {
                            var result = JSON.parse(resultString || "{}");
                            var currentTime = 0;

                            if (YLDevice.deviceId && result) {
                                var deviceIdString = YLDevice.deviceId;
                                var currentTimeString = result[deviceIdString];

                                if (currentTimeString) {
                                    currentTime = parseInt(currentTimeString);
                                }

                                if (isNaN(currentTime)) {
                                    currentTime = 0;
                                }
                            }

                            if (callback) {
                                callback(currentTime);
                            }
                        } else {
                            callback(0);
                        }
                    });
                });
            }
        }, {
            key: "snapCurrentPrivacyTime",
            value: function snapCurrentPrivacyTime(SERVER_TIME) {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.readFile(token + CurrentPrivacyTimeKey, function (isSucces, resultString) {
                        var currentPrivacyTimeValue = {};
                        var serverTimePlus = SERVER_TIME + 1;

                        if (isSucces) {
                            currentPrivacyTimeValue = JSON.parse(resultString || "{}");

                            if (!currentPrivacyTimeValue) {
                                currentPrivacyTimeValue = {};
                            }
                        }

                        currentPrivacyTimeValue[YLDevice.deviceId] = serverTimePlus.toString();
                        YLHostFile.writeFile(token + CurrentPrivacyTimeKey, JSON.stringify(currentPrivacyTimeValue), function (isSucces) {
                            if (isSucces) {} else {}
                        });
                    });
                });
            }
        }, {
            key: "removeCurrentPrivacyTime",
            value: function removeCurrentPrivacyTime() {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.deleteFile(token + CurrentPrivacyTimeKey, function () {});
                });
            }
        }, {
            key: "deleteDataWithOldToken",
            value: function deleteDataWithOldToken(oldToken) {
                YLHostFile.deleteFile(oldToken + FlowColorSettingKey, function () {});
                YLHostFile.deleteFile(oldToken + DelayTimerKey, function () {});
                YLHostFile.deleteFile(oldToken + CurrentPrivacyTimeKey, function () {});
            }
        }, {
            key: "realReadDelayTimer",
            value: function realReadDelayTimer(callback) {
                CommonTypeEnum.GlobalConstant.DELAYTIMERFILE.then(function (key) {
                    YLHostFile.readFile(key, callback);
                });
            }
        }, {
            key: "readDelayTimer",
            value: function readDelayTimer(callback) {
                var _this2 = this;

                if (this.hasCheckDelayTimer) {
                    this.realReadDelayTimer(callback);
                } else {
                    YLHostFile.readFile(OldDELAYTIMERFILE, function (isSucces, content) {
                        if (isSucces && content.length > 0) {
                            _this2.writeDelayTimer(content);

                            YLHostFile.deleteFile(OldDELAYTIMERFILE, function () {});

                            if (callback) {
                                callback(isSucces, content);
                            }
                        } else {
                            _this2.realReadDelayTimer(callback);
                        }

                        _this2.hasCheckDelayTimer = true;
                    });
                }
            }
        }, {
            key: "writeDelayTimer",
            value: function writeDelayTimer(data, callback) {
                CommonTypeEnum.GlobalConstant.DELAYTIMERFILE.then(function (key) {
                    YLHostFile.writeFile(key, data, callback);
                });
            }
        }, {
            key: "deleteDelayTimer",
            value: function deleteDelayTimer(callback) {
                CommonTypeEnum.GlobalConstant.DELAYTIMERFILE.then(function (key) {
                    YLHostFile.deleteFile(key, callback);
                });
            }
        }, {
            key: "writeLifeCycleData",
            value: function writeLifeCycleData(data, callback) {
                CommonTypeEnum.GlobalConstant.LifeCycleDataKey.then(function (key) {
                    YLHostFile.writeFile(key, JSON.stringify(data), callback);
                });
            }
        }, {
            key: "readLifeCycleData",
            value: function readLifeCycleData(callback) {
                CommonTypeEnum.GlobalConstant.LifeCycleDataKey.then(function (key) {
                    YLHostFile.readFile(key, callback);
                });
            }
        }, {
            key: "realReadFlowColorSetting",
            value: function realReadFlowColorSetting(callback) {
                CommonTypeEnum.GlobalConstant.FlowColorSetting.then(function (key) {
                    YLHostFile.readFile(key, callback);
                });
            }
        }, {
            key: "readBslamp2TouchIndicatorShowKey",
            value: function readBslamp2TouchIndicatorShowKey(callback) {
                CommonTypeEnum.GlobalConstant.Bslamp2TouchIndicatorShowKey.then(function (key) {
                    YLHostFile.readFile(key, callback);
                });
            }
        }, {
            key: "writeBslamp2TouchIndicatorShowKey",
            value: function writeBslamp2TouchIndicatorShowKey(data, callback) {
                CommonTypeEnum.GlobalConstant.Bslamp2TouchIndicatorShowKey.then(function (key) {
                    YLHostFile.writeFile(key, data, callback);
                });
            }
        }, {
            key: "writeLifeCycleDataWithKey",
            value: function writeLifeCycleDataWithKey(key, value) {
                var _this3 = this;

                this.readLifeCycleData(function (isSucces, content) {
                    var newContent = void 0;

                    if (!isSucces) {
                        content = "{}";
                    }

                    try {
                        newContent = JSON.parse(content);
                    } catch (e) {
                        newContent = {};
                    }

                    newContent[key] = value;

                    _this3.writeLifeCycleData(newContent, function (isSucces, desc) {});
                });
            }
        }, {
            key: "readLifeCycleDataWithKey",
            value: function readLifeCycleDataWithKey(key) {
                var _this4 = this;

                return new Promise(function (resolve, reject) {
                    _this4.readLifeCycleData(function (isSucces, content) {
                        var newContent = void 0;

                        try {
                            newContent = JSON.parse(content);
                        } catch (e) {
                            newContent = {};
                        }

                        if (newContent && newContent.hasOwnProperty(key)) {
                            resolve(newContent[key]);
                        } else {
                            reject("key and value not exist");
                        }
                    });
                });
            }
        }, {
            key: "readSunriseSunsetAlertVisible",
            value: function readSunriseSunsetAlertVisible() {
                return this.readLifeCycleDataWithKey(SunriseSunsetAlertVisible);
            }
        }, {
            key: "writeSunriseSunsetAlertVisible",
            value: function writeSunriseSunsetAlertVisible(value) {
                this.writeLifeCycleDataWithKey(SunriseSunsetAlertVisible, value);
            }
        }, {
            key: "readFlowColorSetting",
            value: function readFlowColorSetting(callback) {
                var _this5 = this;

                if (this.hasCheckOldFlowColorSetting) {
                    this.realReadFlowColorSetting(callback);
                } else {
                    YLHostFile.readFile(OldFlowColorSetting, function (isSucces, content) {
                        if (isSucces && content.length > 0) {
                            _this5.writeFlowColorSetting(content);

                            YLHostFile.deleteFile(OldFlowColorSetting, function () {});

                            if (callback) {
                                callback(isSucces, content);
                            }
                        } else {
                            _this5.realReadFlowColorSetting(callback);
                        }

                        _this5.hasCheckOldFlowColorSetting = true;
                    });
                }
            }
        }, {
            key: "writeFlowColorSetting",
            value: function writeFlowColorSetting(data, callback) {
                CommonTypeEnum.GlobalConstant.FlowColorSetting.then(function (key) {
                    YLHostFile.writeFile(key, data, callback);
                });
            }
        }, {
            key: "deleteFlowColorSetting",
            value: function deleteFlowColorSetting(callback) {
                CommonTypeEnum.GlobalConstant.FlowColorSetting.then(function (key) {
                    YLHostFile.deleteFile(key, callback);
                });
            }
        }, {
            key: "writeHomeKitTipSetting",
            value: function writeHomeKitTipSetting(homeKitTipSetting) {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.writeFile(token + HomeKitTipSettingKey, JSON.stringify(homeKitTipSetting), function (isSucces) {
                        if (isSucces) {} else {}
                    });
                });
            }
        }, {
            key: "readHomeKitTipSetting",
            value: function readHomeKitTipSetting(callback) {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.readFile(token + HomeKitTipSettingKey, function (isSucces, resultString) {
                        if (callback && isSucces && resultString) {
                            callback(JSON.parse(resultString));
                        } else {
                            callback(null);
                        }
                    });
                });
            }
        }, {
            key: "deleteHomeKitTipSetting",
            value: function deleteHomeKitTipSetting(callback) {
                CommonTypeEnum.getDeviceToken(function (token) {
                    YLHostFile.deleteFile(token + HomeKitTipSettingKey, callback);
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!LocalStorageManager.instance) {
                    LocalStorageManager.instance = new LocalStorageManager();
                    LocalStorageManager.instance.initDeviceToken();
                }

                return LocalStorageManager.instance;
            }
        }]);
        return LocalStorageManager;
    }();

    module.exports = LocalStorageManager;
},10721,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/LocalStorageManager.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var ResourcesManager = function () {
        function ResourcesManager() {
            babelHelpers.classCallCheck(this, ResourcesManager);
        }

        babelHelpers.createClass(ResourcesManager, [{
            key: "Images",
            value: function Images(key) {
                try {
                    var images = _require(_dependencyMap[0]).default;

                    var PluginInfo = _require(_dependencyMap[1]);

                    var newKey = PluginInfo.images(key);
                    var value = images[newKey];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "ResourceImages",
            value: function ResourceImages(key) {
                try {
                    var images = _require(_dependencyMap[2]).default;

                    var value = images[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "license",
            value: function license(key) {
                try {
                    var licenses = _require(_dependencyMap[3]).default;

                    var value = licenses[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "privacy",
            value: function privacy(key) {
                try {
                    var privacys = _require(_dependencyMap[4]).default;

                    var value = privacys[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "yilaiLicense",
            value: function yilaiLicense(key) {
                try {
                    var licenses = _require(_dependencyMap[5]).default;

                    var value = licenses[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "yilaiPrivacy",
            value: function yilaiPrivacy(key) {
                try {
                    var privacys = _require(_dependencyMap[6]).default;

                    var value = privacys[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "gdprPrivacy",
            value: function gdprPrivacy(key) {
                try {
                    var privacys = _require(_dependencyMap[7]).default;

                    var value = privacys[key];

                    if (value) {
                        return value();
                    } else {
                        return null;
                    }
                } catch (ex) {
                    return null;
                }
            }
        }, {
            key: "getLicenseSourceByUrl",
            value: function getLicenseSourceByUrl(url) {
                var pathParts = url.split("/");

                if (pathParts.length > 0) {
                    var key = pathParts[pathParts.length - 1];

                    if (pathParts.includes("yilai")) {
                        return this.yilaiLicense(key);
                    } else {
                        return this.license(key);
                    }
                }
            }
        }, {
            key: "getPolicySourceByUrl",
            value: function getPolicySourceByUrl(url) {
                var pathParts = url.split("/");

                if (pathParts.length > 0) {
                    var key = pathParts[pathParts.length - 1];

                    if (pathParts.includes("yilai")) {
                        return this.yilaiPrivacy(key);
                    } else if (pathParts.includes("gdpr")) {
                        return this.gdprPrivacy(key);
                    } else {
                        return this.privacy(key);
                    }
                }
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!ResourcesManager.instance) {
                    ResourcesManager.instance = new ResourcesManager();
                }

                return ResourcesManager.instance;
            }
        }]);
        return ResourcesManager;
    }();

    module.exports = ResourcesManager;
},10724,[10025,10445,10451,10727,10859,10994,11003,11012],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/ResourcesManager.js");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "ar.html": function arHtml() {
                        return _require(_dependencyMap[0]);
                },
                "be.html": function beHtml() {
                        return _require(_dependencyMap[1]);
                },
                "bg.html": function bgHtml() {
                        return _require(_dependencyMap[2]);
                },
                "cs.html": function csHtml() {
                        return _require(_dependencyMap[3]);
                },
                "da.html": function daHtml() {
                        return _require(_dependencyMap[4]);
                },
                "de.html": function deHtml() {
                        return _require(_dependencyMap[5]);
                },
                "el.html": function elHtml() {
                        return _require(_dependencyMap[6]);
                },
                "en.html": function enHtml() {
                        return _require(_dependencyMap[7]);
                },
                "es.html": function esHtml() {
                        return _require(_dependencyMap[8]);
                },
                "es_la.html": function es_laHtml() {
                        return _require(_dependencyMap[9]);
                },
                "fa.html": function faHtml() {
                        return _require(_dependencyMap[10]);
                },
                "fi.html": function fiHtml() {
                        return _require(_dependencyMap[11]);
                },
                "fr.html": function frHtml() {
                        return _require(_dependencyMap[12]);
                },
                "he.html": function heHtml() {
                        return _require(_dependencyMap[13]);
                },
                "hr.html": function hrHtml() {
                        return _require(_dependencyMap[14]);
                },
                "hu.html": function huHtml() {
                        return _require(_dependencyMap[15]);
                },
                "id.html": function idHtml() {
                        return _require(_dependencyMap[16]);
                },
                "index.js": function indexJs() {
                        return _require(_dependencyMap[17]);
                },
                "it.html": function itHtml() {
                        return _require(_dependencyMap[18]);
                },
                "ko.html": function koHtml() {
                        return _require(_dependencyMap[19]);
                },
                "lv.html": function lvHtml() {
                        return _require(_dependencyMap[20]);
                },
                "ms.html": function msHtml() {
                        return _require(_dependencyMap[21]);
                },
                "my.html": function myHtml() {
                        return _require(_dependencyMap[22]);
                },
                "nl.html": function nlHtml() {
                        return _require(_dependencyMap[23]);
                },
                "no.html": function noHtml() {
                        return _require(_dependencyMap[24]);
                },
                "pl.html": function plHtml() {
                        return _require(_dependencyMap[25]);
                },
                "pt-BR.html": function ptBRHtml() {
                        return _require(_dependencyMap[26]);
                },
                "pt.html": function ptHtml() {
                        return _require(_dependencyMap[27]);
                },
                "ro.html": function roHtml() {
                        return _require(_dependencyMap[28]);
                },
                "ru.html": function ruHtml() {
                        return _require(_dependencyMap[29]);
                },
                "sk.html": function skHtml() {
                        return _require(_dependencyMap[30]);
                },
                "sl.html": function slHtml() {
                        return _require(_dependencyMap[31]);
                },
                "sr-CS.html": function srCSHtml() {
                        return _require(_dependencyMap[32]);
                },
                "sr-Latn.html": function srLatnHtml() {
                        return _require(_dependencyMap[33]);
                },
                "st.html": function stHtml() {
                        return _require(_dependencyMap[34]);
                },
                "sv.html": function svHtml() {
                        return _require(_dependencyMap[35]);
                },
                "th.html": function thHtml() {
                        return _require(_dependencyMap[36]);
                },
                "tr.html": function trHtml() {
                        return _require(_dependencyMap[37]);
                },
                "uk.html": function ukHtml() {
                        return _require(_dependencyMap[38]);
                },
                "vi.html": function viHtml() {
                        return _require(_dependencyMap[39]);
                },
                "zh-HK.html": function zhHKHtml() {
                        return _require(_dependencyMap[40]);
                },
                "zh-Hans.html": function zhHansHtml() {
                        return _require(_dependencyMap[41]);
                },
                "zh-TW.html": function zhTWHtml() {
                        return _require(_dependencyMap[42]);
                },
                "zu.html": function zuHtml() {
                        return _require(_dependencyMap[43]);
                }
        };
},10727,[10730,10733,10736,10739,10742,10745,10748,10751,10754,10757,10760,10763,10766,10769,10772,10775,10778,10727,10781,10784,10787,10790,10793,10796,10799,10802,10805,10808,10811,10814,10817,10820,10823,10826,10829,10832,10835,10838,10841,10844,10847,10850,10853,10856],"projects/com.yeelight.wifi.color1/Resources/license/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "d67b8cb63a60d06867dfe1335e7558b5",
        "name": "ar",
        "type": "html"
    });
},10730,[10420],"projects/com.yeelight.wifi.color1/Resources/license/ar.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "4b313c3d7b12358e1700c8d6878ce457",
        "name": "be",
        "type": "html"
    });
},10733,[10420],"projects/com.yeelight.wifi.color1/Resources/license/be.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "7e1a87d4bd81cd558908e6b7d418901c",
        "name": "bg",
        "type": "html"
    });
},10736,[10420],"projects/com.yeelight.wifi.color1/Resources/license/bg.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "251b43d563d3faef25d9b7f11260967a",
        "name": "cs",
        "type": "html"
    });
},10739,[10420],"projects/com.yeelight.wifi.color1/Resources/license/cs.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "030c7b566ecf6cbdb01f18a0ef483b4a",
        "name": "da",
        "type": "html"
    });
},10742,[10420],"projects/com.yeelight.wifi.color1/Resources/license/da.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "11c2b74c346d2518718ee4679bbda26e",
                                "name": "de",
                                "type": "html"
                });
},10745,[10420],"projects/com.yeelight.wifi.color1/Resources/license/de.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "769c8ae570c2266121a5ee5825938cfe",
        "name": "el",
        "type": "html"
    });
},10748,[10420],"projects/com.yeelight.wifi.color1/Resources/license/el.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "1cff3e1b4f39cf40d5752da9c053023f",
                                "name": "en",
                                "type": "html"
                });
},10751,[10420],"projects/com.yeelight.wifi.color1/Resources/license/en.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "cf63acdb48690e1abd023a3500731fe2",
                                "name": "es",
                                "type": "html"
                });
},10754,[10420],"projects/com.yeelight.wifi.color1/Resources/license/es.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "4c3413387c2e126d80f79898c6d9c28d",
        "name": "es_la",
        "type": "html"
    });
},10757,[10420],"projects/com.yeelight.wifi.color1/Resources/license/es_la.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "1a72ea95116571065afc5ece50d2f254",
        "name": "fa",
        "type": "html"
    });
},10760,[10420],"projects/com.yeelight.wifi.color1/Resources/license/fa.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "a926de6daea6265c0a8d80c037394fbc",
        "name": "fi",
        "type": "html"
    });
},10763,[10420],"projects/com.yeelight.wifi.color1/Resources/license/fi.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "c151e465b62e895265911dcfc333f0fc",
                                "name": "fr",
                                "type": "html"
                });
},10766,[10420],"projects/com.yeelight.wifi.color1/Resources/license/fr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "e5243a466e480fad68be621b08272d95",
        "name": "he",
        "type": "html"
    });
},10769,[10420],"projects/com.yeelight.wifi.color1/Resources/license/he.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "d05f097bc7c631653ac3a117e93ecc34",
        "name": "hr",
        "type": "html"
    });
},10772,[10420],"projects/com.yeelight.wifi.color1/Resources/license/hr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "682f09a993217cfd837c6fe99682e7ba",
        "name": "hu",
        "type": "html"
    });
},10775,[10420],"projects/com.yeelight.wifi.color1/Resources/license/hu.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "091cab8b542107cd07dab446eabd40d7",
        "name": "id",
        "type": "html"
    });
},10778,[10420],"projects/com.yeelight.wifi.color1/Resources/license/id.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "494a4514d06a0db2f602ddb1ecccfc1a",
                                "name": "it",
                                "type": "html"
                });
},10781,[10420],"projects/com.yeelight.wifi.color1/Resources/license/it.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "bddb20eb04b768b2d43383abcb55cc06",
        "name": "ko",
        "type": "html"
    });
},10784,[10420],"projects/com.yeelight.wifi.color1/Resources/license/ko.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "a5b1f6921118cd56ada7693e7ec186ed",
        "name": "lv",
        "type": "html"
    });
},10787,[10420],"projects/com.yeelight.wifi.color1/Resources/license/lv.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "443b5ca3ed126e97e3f2a7968dd9ff72",
        "name": "ms",
        "type": "html"
    });
},10790,[10420],"projects/com.yeelight.wifi.color1/Resources/license/ms.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "8ab6f1dd8e54605c812567d8de804be6",
        "name": "my",
        "type": "html"
    });
},10793,[10420],"projects/com.yeelight.wifi.color1/Resources/license/my.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "1cfd697c3b7232785f4f1b411ab822ff",
        "name": "nl",
        "type": "html"
    });
},10796,[10420],"projects/com.yeelight.wifi.color1/Resources/license/nl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "2df17f38cbce5d9d69e8594fe57bc7a7",
        "name": "no",
        "type": "html"
    });
},10799,[10420],"projects/com.yeelight.wifi.color1/Resources/license/no.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "ab1c38467a9aed17efb3e54dba0773f8",
        "name": "pl",
        "type": "html"
    });
},10802,[10420],"projects/com.yeelight.wifi.color1/Resources/license/pl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "a461b549112af1ba352f7a8d9a2192dc",
        "name": "pt-BR",
        "type": "html"
    });
},10805,[10420],"projects/com.yeelight.wifi.color1/Resources/license/pt-BR.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "a864cb9423517fb9f303c855b04672fc",
        "name": "pt",
        "type": "html"
    });
},10808,[10420],"projects/com.yeelight.wifi.color1/Resources/license/pt.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "3baafa9b393d8405c44ed79bd4843664",
        "name": "ro",
        "type": "html"
    });
},10811,[10420],"projects/com.yeelight.wifi.color1/Resources/license/ro.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "9063c2197f83ed8ce90f902a0a6bf509",
                                "name": "ru",
                                "type": "html"
                });
},10814,[10420],"projects/com.yeelight.wifi.color1/Resources/license/ru.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "2cd779d2cb98c7fed9df93901d090174",
        "name": "sk",
        "type": "html"
    });
},10817,[10420],"projects/com.yeelight.wifi.color1/Resources/license/sk.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "24842e182a3338ce52bdd3379ea96aee",
        "name": "sl",
        "type": "html"
    });
},10820,[10420],"projects/com.yeelight.wifi.color1/Resources/license/sl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "1d4a08b9b372b6c4af4843e8b38a5f0d",
        "name": "sr-CS",
        "type": "html"
    });
},10823,[10420],"projects/com.yeelight.wifi.color1/Resources/license/sr-CS.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "056781175165dda91b979951fa002ccd",
        "name": "sr-Latn",
        "type": "html"
    });
},10826,[10420],"projects/com.yeelight.wifi.color1/Resources/license/sr-Latn.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "44889382480865377e67038d717147bf",
        "name": "st",
        "type": "html"
    });
},10829,[10420],"projects/com.yeelight.wifi.color1/Resources/license/st.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "e4e430a98efc0ede0c7f2ab204cf902c",
        "name": "sv",
        "type": "html"
    });
},10832,[10420],"projects/com.yeelight.wifi.color1/Resources/license/sv.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "82ca2906a5d99b9249d87deee4bb6913",
        "name": "th",
        "type": "html"
    });
},10835,[10420],"projects/com.yeelight.wifi.color1/Resources/license/th.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "e3385b97a6347972233c305d7ab1e824",
        "name": "tr",
        "type": "html"
    });
},10838,[10420],"projects/com.yeelight.wifi.color1/Resources/license/tr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "387c11c25f83782e16ae1d7d162b617a",
        "name": "uk",
        "type": "html"
    });
},10841,[10420],"projects/com.yeelight.wifi.color1/Resources/license/uk.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "1722142b2c1f7134a483eeac4e7e9843",
        "name": "vi",
        "type": "html"
    });
},10844,[10420],"projects/com.yeelight.wifi.color1/Resources/license/vi.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "b17d092e04e7164cfe2ff6b79ffa67c8",
                                "name": "zh-HK",
                                "type": "html"
                });
},10847,[10420],"projects/com.yeelight.wifi.color1/Resources/license/zh-HK.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "59c826feefdcacee05a42408b0bb0883",
        "name": "zh-Hans",
        "type": "html"
    });
},10850,[10420],"projects/com.yeelight.wifi.color1/Resources/license/zh-Hans.html");
__d(function (global, _require, module, exports, _dependencyMap) {
                module.exports = _require(_dependencyMap[0]).registerAsset({
                                "__packager_asset": true,
                                "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
                                "scales": [1],
                                "hash": "9a4c4f5bdf684600e8eb5ce44e765591",
                                "name": "zh-TW",
                                "type": "html"
                });
},10853,[10420],"projects/com.yeelight.wifi.color1/Resources/license/zh-TW.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/license",
        "scales": [1],
        "hash": "50f98c7319dd2c122e7f9b1b0f4078ff",
        "name": "zu",
        "type": "html"
    });
},10856,[10420],"projects/com.yeelight.wifi.color1/Resources/license/zu.html");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "ar.html": function arHtml() {
                        return _require(_dependencyMap[0]);
                },
                "be.html": function beHtml() {
                        return _require(_dependencyMap[1]);
                },
                "bg.html": function bgHtml() {
                        return _require(_dependencyMap[2]);
                },
                "cs.html": function csHtml() {
                        return _require(_dependencyMap[3]);
                },
                "da.html": function daHtml() {
                        return _require(_dependencyMap[4]);
                },
                "de.html": function deHtml() {
                        return _require(_dependencyMap[5]);
                },
                "el.html": function elHtml() {
                        return _require(_dependencyMap[6]);
                },
                "en.html": function enHtml() {
                        return _require(_dependencyMap[7]);
                },
                "es.html": function esHtml() {
                        return _require(_dependencyMap[8]);
                },
                "es_la.html": function es_laHtml() {
                        return _require(_dependencyMap[9]);
                },
                "fa.html": function faHtml() {
                        return _require(_dependencyMap[10]);
                },
                "fi.html": function fiHtml() {
                        return _require(_dependencyMap[11]);
                },
                "fr.html": function frHtml() {
                        return _require(_dependencyMap[12]);
                },
                "he.html": function heHtml() {
                        return _require(_dependencyMap[13]);
                },
                "hr.html": function hrHtml() {
                        return _require(_dependencyMap[14]);
                },
                "hu.html": function huHtml() {
                        return _require(_dependencyMap[15]);
                },
                "id.html": function idHtml() {
                        return _require(_dependencyMap[16]);
                },
                "index.js": function indexJs() {
                        return _require(_dependencyMap[17]);
                },
                "it.html": function itHtml() {
                        return _require(_dependencyMap[18]);
                },
                "ja.html": function jaHtml() {
                        return _require(_dependencyMap[19]);
                },
                "ko.html": function koHtml() {
                        return _require(_dependencyMap[20]);
                },
                "lv.html": function lvHtml() {
                        return _require(_dependencyMap[21]);
                },
                "ms.html": function msHtml() {
                        return _require(_dependencyMap[22]);
                },
                "my.html": function myHtml() {
                        return _require(_dependencyMap[23]);
                },
                "nl.html": function nlHtml() {
                        return _require(_dependencyMap[24]);
                },
                "no.html": function noHtml() {
                        return _require(_dependencyMap[25]);
                },
                "pl.html": function plHtml() {
                        return _require(_dependencyMap[26]);
                },
                "pt-BR.html": function ptBRHtml() {
                        return _require(_dependencyMap[27]);
                },
                "pt.html": function ptHtml() {
                        return _require(_dependencyMap[28]);
                },
                "ro.html": function roHtml() {
                        return _require(_dependencyMap[29]);
                },
                "ru.html": function ruHtml() {
                        return _require(_dependencyMap[30]);
                },
                "sk.html": function skHtml() {
                        return _require(_dependencyMap[31]);
                },
                "sl.html": function slHtml() {
                        return _require(_dependencyMap[32]);
                },
                "sr-CS.html": function srCSHtml() {
                        return _require(_dependencyMap[33]);
                },
                "sr-Latn.html": function srLatnHtml() {
                        return _require(_dependencyMap[34]);
                },
                "st.html": function stHtml() {
                        return _require(_dependencyMap[35]);
                },
                "sv.html": function svHtml() {
                        return _require(_dependencyMap[36]);
                },
                "th.html": function thHtml() {
                        return _require(_dependencyMap[37]);
                },
                "tr.html": function trHtml() {
                        return _require(_dependencyMap[38]);
                },
                "uk.html": function ukHtml() {
                        return _require(_dependencyMap[39]);
                },
                "vi.html": function viHtml() {
                        return _require(_dependencyMap[40]);
                },
                "zh-HK.html": function zhHKHtml() {
                        return _require(_dependencyMap[41]);
                },
                "zh-Hans.html": function zhHansHtml() {
                        return _require(_dependencyMap[42]);
                },
                "zh-TW.html": function zhTWHtml() {
                        return _require(_dependencyMap[43]);
                },
                "zu.html": function zuHtml() {
                        return _require(_dependencyMap[44]);
                }
        };
},10859,[10862,10865,10868,10871,10874,10877,10880,10883,10886,10889,10892,10895,10898,10901,10904,10907,10910,10859,10913,10916,10919,10922,10925,10928,10931,10934,10937,10940,10943,10946,10949,10952,10955,10958,10961,10964,10967,10970,10973,10976,10979,10982,10985,10988,10991],"projects/com.yeelight.wifi.color1/Resources/privacy/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "176ff553079cfb927ed5212e565d87e2",
        "name": "ar",
        "type": "html"
    });
},10862,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ar.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "9907769e9828eb97ba215e255b7d7324",
        "name": "be",
        "type": "html"
    });
},10865,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/be.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "82f483b683c644a029a47a66662f11e1",
        "name": "bg",
        "type": "html"
    });
},10868,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/bg.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "1db6d40d26c40abdf57d266cd162384c",
        "name": "cs",
        "type": "html"
    });
},10871,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/cs.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "8b854be56abdcdee389c7a0c5087e0e3",
        "name": "da",
        "type": "html"
    });
},10874,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/da.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "1f9e4f3eeba097e5782bf5f18ad4b175",
        "name": "de",
        "type": "html"
    });
},10877,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/de.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "86ae17e9bd9219b1cc3968738ef01b98",
        "name": "el",
        "type": "html"
    });
},10880,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/el.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "a915027a3c56d6bbf47271da3888cd2f",
        "name": "en",
        "type": "html"
    });
},10883,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/en.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "b3241f72d367f0f13ef6b2391fabdc2c",
        "name": "es",
        "type": "html"
    });
},10886,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/es.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "58b31d6d2c9171f9e3bdf0c069bc2637",
        "name": "es_la",
        "type": "html"
    });
},10889,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/es_la.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "0223d43850a7e06d8bd511753218a205",
        "name": "fa",
        "type": "html"
    });
},10892,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/fa.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "0858ee83b11975772994eade58b35a95",
        "name": "fi",
        "type": "html"
    });
},10895,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/fi.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "16dfe2175ebe368d8d20a23407fc12bd",
        "name": "fr",
        "type": "html"
    });
},10898,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/fr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "78639a4b90e8fb3ae1c892f66041970e",
        "name": "he",
        "type": "html"
    });
},10901,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/he.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "745907125c694a951f3ece27e8e2f2b3",
        "name": "hr",
        "type": "html"
    });
},10904,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/hr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "ad00cdf65d922dfb2ce14c239f2a9802",
        "name": "hu",
        "type": "html"
    });
},10907,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/hu.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "7faee23e233b7298cdf81051b5fc2659",
        "name": "id",
        "type": "html"
    });
},10910,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/id.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "9bb89a41c492a857c3ed2921574128cb",
        "name": "it",
        "type": "html"
    });
},10913,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/it.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "91b41e1ffe9544c46d20c8498a2fb34c",
        "name": "ja",
        "type": "html"
    });
},10916,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ja.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "97eee548408f0275f80367c3d0c61861",
        "name": "ko",
        "type": "html"
    });
},10919,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ko.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "52867187991675a1362d7ff93b5f60df",
        "name": "lv",
        "type": "html"
    });
},10922,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/lv.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "19ba7a99b76a5b47128b06e5afe0af7b",
        "name": "ms",
        "type": "html"
    });
},10925,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ms.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "823620b452cf284f15b4d6fc850962e6",
        "name": "my",
        "type": "html"
    });
},10928,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/my.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "164f31d354902f398099fcd1a035c0f0",
        "name": "nl",
        "type": "html"
    });
},10931,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/nl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "acec0d103aed8db5aa7840f8acaa2d22",
        "name": "no",
        "type": "html"
    });
},10934,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/no.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "23ab5bf81e4286c4dec0c76dc0220928",
        "name": "pl",
        "type": "html"
    });
},10937,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/pl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "54f3f30d438362b9288eb5d691c53c5d",
        "name": "pt-BR",
        "type": "html"
    });
},10940,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/pt-BR.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "bac93356088cf46745184fe80df88770",
        "name": "pt",
        "type": "html"
    });
},10943,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/pt.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "284c69100796b7b43f50d256830ef44b",
        "name": "ro",
        "type": "html"
    });
},10946,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ro.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "91ba1f76fd53d182cba6c666c4efa684",
        "name": "ru",
        "type": "html"
    });
},10949,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/ru.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "1eeb146ba0fbdd08f0915b7c8f084822",
        "name": "sk",
        "type": "html"
    });
},10952,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/sk.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "f4edfadc1630aa07a369fcf7feda4aa0",
        "name": "sl",
        "type": "html"
    });
},10955,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/sl.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "2afcdda1130803620430a195fadbfcf4",
        "name": "sr-CS",
        "type": "html"
    });
},10958,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/sr-CS.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "c02e5e2409f995ef4e8ca650400b9a00",
        "name": "sr-Latn",
        "type": "html"
    });
},10961,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/sr-Latn.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "9b9d927b1701ceed00876cfcebab1a2f",
        "name": "st",
        "type": "html"
    });
},10964,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/st.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "d1d9063fb6b8aeae70c7392c48f35fd6",
        "name": "sv",
        "type": "html"
    });
},10967,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/sv.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "bb7d1c956920e766b38d2bfaeaf0989e",
        "name": "th",
        "type": "html"
    });
},10970,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/th.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "f7b522423a12fb09c6f68a9451db30f6",
        "name": "tr",
        "type": "html"
    });
},10973,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/tr.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "9f477d5182d5c986e7e6083d5a8f57cd",
        "name": "uk",
        "type": "html"
    });
},10976,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/uk.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "a2b5f5d1a49aea3d4a0b9a5e991a43a0",
        "name": "vi",
        "type": "html"
    });
},10979,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/vi.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "2992b3c0b1838e6065aa4498b5e8e7c8",
        "name": "zh-HK",
        "type": "html"
    });
},10982,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/zh-HK.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "af4c7e075f70418090ef89d06628c753",
        "name": "zh-Hans",
        "type": "html"
    });
},10985,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/zh-Hans.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "ab6f731773dfe20224e75162cc697546",
        "name": "zh-TW",
        "type": "html"
    });
},10988,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/zh-TW.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/privacy",
        "scales": [1],
        "hash": "b5b01a440c16a2068f8a43981f4acada",
        "name": "zu",
        "type": "html"
    });
},10991,[10420],"projects/com.yeelight.wifi.color1/Resources/privacy/zu.html");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "en.html": function enHtml() {
                        return _require(_dependencyMap[0]);
                },
                "index.js": function indexJs() {
                        return _require(_dependencyMap[1]);
                },
                "zh-Hans.html": function zhHansHtml() {
                        return _require(_dependencyMap[2]);
                }
        };
},10994,[10997,10994,11000],"projects/com.yeelight.wifi.color1/Resources/yilai/license/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/yilai/license",
        "scales": [1],
        "hash": "d4b7c19ea3d39be9eecab524da0692dd",
        "name": "en",
        "type": "html"
    });
},10997,[10420],"projects/com.yeelight.wifi.color1/Resources/yilai/license/en.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/yilai/license",
        "scales": [1],
        "hash": "4d0222aebcd8d32328e1dfc81044bd8d",
        "name": "zh-Hans",
        "type": "html"
    });
},11000,[10420],"projects/com.yeelight.wifi.color1/Resources/yilai/license/zh-Hans.html");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "en.html": function enHtml() {
                        return _require(_dependencyMap[0]);
                },
                "index.js": function indexJs() {
                        return _require(_dependencyMap[1]);
                },
                "zh-Hans.html": function zhHansHtml() {
                        return _require(_dependencyMap[2]);
                }
        };
},11003,[11006,11003,11009],"projects/com.yeelight.wifi.color1/Resources/yilai/privacy/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/yilai/privacy",
        "scales": [1],
        "hash": "9cb389895539da1d57861e869cddeb46",
        "name": "en",
        "type": "html"
    });
},11006,[10420],"projects/com.yeelight.wifi.color1/Resources/yilai/privacy/en.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/yilai/privacy",
        "scales": [1],
        "hash": "9846c92bab766360327cd4b63e56ff39",
        "name": "zh-Hans",
        "type": "html"
    });
},11009,[10420],"projects/com.yeelight.wifi.color1/Resources/yilai/privacy/zh-Hans.html");
__d(function (global, _require, module, exports, _dependencyMap) {
        'use strict';

        Object.defineProperty(exports, "__esModule", {
                value: true
        });
        exports.default = {
                "en.html": function enHtml() {
                        return _require(_dependencyMap[0]);
                },
                "index.js": function indexJs() {
                        return _require(_dependencyMap[1]);
                }
        };
},11012,[11015,11012],"projects/com.yeelight.wifi.color1/Resources/gdpr/privacy/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = _require(_dependencyMap[0]).registerAsset({
        "__packager_asset": true,
        "httpServerLocation": "/assets/projects/com.yeelight.wifi.color1/Resources/gdpr/privacy",
        "scales": [1],
        "hash": "b84f678cedde1a841d93b772f553afe7",
        "name": "en",
        "type": "html"
    });
},11015,[10420],"projects/com.yeelight.wifi.color1/Resources/gdpr/privacy/en.html");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var CommonYeelightModules = _require(_dependencyMap[2]);

    var Cloud = CommonYeelightModules.Cloud,
        YLHostUI = CommonYeelightModules.YLHostUI,
        YLDevice = CommonYeelightModules.YLDevice,
        strings = CommonYeelightModules.strings,
        CLAlert = CommonYeelightModules.CLAlert,
        YLPackage = CommonYeelightModules.YLPackage,
        YLPackageEvent = CommonYeelightModules.YLPackageEvent,
        Theme = CommonYeelightModules.Theme,
        LocalStorageManager = CommonYeelightModules.LocalStorageManager,
        Api = CommonYeelightModules.Api,
        YLUI = CommonYeelightModules.YLUI;

    var styles = _reactNative.StyleSheet.create({
        defaultFontFamily: {
            fontFamily: ""
        }
    });

    var PluginManager = function () {
        function PluginManager() {
            babelHelpers.classCallCheck(this, PluginManager);
        }

        babelHelpers.createClass(PluginManager, [{
            key: "initPluginServices",
            value: function initPluginServices() {
                var _this = this;

                Cloud.shouldShowCurrentPrivacy(function (shouldShow) {
                    if (shouldShow) {
                        _this.showPrivacyDialog();
                    } else {
                        _this.checkPluginShouldUpdateVersion();
                    }
                });
            }
        }, {
            key: "showPrivacyDialog",
            value: function showPrivacyDialog() {
                var _this2 = this;

                YLHostUI.openPrivacyLicense(strings.common_msg_user_agreement, Cloud.licenseURL(), strings.common_msg_privacy_policy, Cloud.privacyURL(), function (result) {
                    if (result == "ok") {
                        Cloud.snapCurrentPrivacyTime();

                        _this2.checkPluginShouldUpdateVersion();

                        _reactNative.DeviceEventEmitter.emit('PrivacyDialogDissmissedOK');
                    }
                });
            }
        }, {
            key: "checkPluginShouldUpdateVersion",
            value: function checkPluginShouldUpdateVersion() {
                var _this3 = this;

                YLDevice.isOnline.then(function (isOnline) {
                    if (isOnline) {
                        _this3.checkShouldForceUpdateFirmware();
                    }
                });
            }
        }, {
            key: "checkShouldForceUpdateFirmware",
            value: function checkShouldForceUpdateFirmware() {
                var _this4 = this;

                Cloud.shouldBeForcedUpdateByCallback(function (isShould) {
                    if (isShould) {
                        YLDevice.firmwareNotCheckUpdate(true, function (success, message) {
                            if (success) {}
                        });
                        CLAlert.alert(strings.common_dialog_text_upgrade_firmware, null, [{
                            text: strings.common_dialog_cancel,
                            onPress: function onPress() {
                                YLPackage.closeCurrentPage();
                            }
                        }, {
                            text: strings.common_dialog_ok,
                            onPress: function onPress() {
                                YLHostUI.openDeviceUpgradePage();

                                _this4.observeViewWillAppear();
                            }
                        }]);
                    } else {
                        YLDevice.firmwareNotCheckUpdate(false, function (success, message) {
                            if (success) {}
                        });
                    }
                });
            }
        }, {
            key: "observeViewWillAppear",
            value: function observeViewWillAppear() {
                if (!this._viewWillAppearListener) {
                    this._viewWillAppearListener = YLPackageEvent.packageViewWillAppear(function (event) {
                        YLPackage.closeCurrentPage();
                    });
                }
            }
        }, {
            key: "prepareForLoad",
            value: function prepareForLoad() {
                Cloud.updateServerMap();
                YLDevice.firmwareNotCheckUpdate(true, function (success, message) {
                    if (success) {}
                });
                Cloud.requestIsInternationalVersion();

                if (Theme.isAndroid) {
                    var oldRender = _reactNative.Text.prototype.render;

                    _reactNative.Text.prototype.render = function () {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                            args[_key] = arguments[_key];
                        }

                        var origin = oldRender.call.apply(oldRender, [this].concat(args));
                        return _react2.default.cloneElement(origin, {
                            style: [styles.defaultFontFamily, origin.props.style]
                        });
                    };
                }

                if (!String.prototype.padStart) {
                    String.prototype.padStart = function padStart(targetLength, padString) {
                        targetLength = targetLength >> 0;
                        padString = String(typeof padString !== 'undefined' ? padString : ' ');

                        if (this.length > targetLength) {
                            return String(this);
                        } else {
                            targetLength = targetLength - this.length;

                            if (targetLength > padString.length) {
                                padString += padString.repeat(targetLength / padString.length);
                            }

                            return padString.slice(0, targetLength) + String(this);
                        }
                    };
                } else {}

                if (!String.prototype.padEnd) {
                    String.prototype.padEnd = function padEnd(targetLength, padString) {
                        targetLength = targetLength >> 0;
                        padString = String(typeof padString !== 'undefined' ? padString : '');

                        if (this.length > targetLength) {
                            return String(this);
                        } else {
                            targetLength = targetLength - this.length;

                            if (targetLength > padString.length) {
                                padString += padString.repeat(targetLength / padString.length);
                            }

                            return String(this) + padString.slice(0, targetLength);
                        }
                    };
                }

                Api.getDefaultCron(function (success, response) {
                    if (success && Array.isArray(response.result) && response.result.length > 0) {
                        LocalStorageManager.writeDelayTimer(JSON.stringify(response.result[0]), function () {});
                    }
                });

                _reactNative.NetInfo.isConnected.addEventListener("connectionChange", this.netInfoListener.bind(this));
            }
        }, {
            key: "netInfoListener",
            value: function netInfoListener(hasInternetConnection) {
                if (!hasInternetConnection) {
                    YLUI.showFailTips(strings.common_collection_network_error_ios);
                }
            }
        }, {
            key: "prepareForUnload",
            value: function prepareForUnload() {
                _reactNative.NetInfo.isConnected.removeEventListener("connectionChange", this.netInfoListener.bind(this));
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!PluginManager.instance) {
                    PluginManager.instance = new PluginManager();
                }

                return PluginManager.instance;
            }
        }]);
        return PluginManager;
    }();

    module.exports = PluginManager;
},11018,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/PluginManager.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _reactNative = _require(_dependencyMap[0]);

    var _CommonYeelightModules = _require(_dependencyMap[1]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var LocalStorageManager = _CommonYeelightModules2.default.LocalStorageManager,
        PluginInfo = _CommonYeelightModules2.default.PluginInfo;
    var SoftType = "2";

    var HomeKitManager = function () {
        function HomeKitManager() {
            babelHelpers.classCallCheck(this, HomeKitManager);
        }

        babelHelpers.createClass(HomeKitManager, [{
            key: "shouldShowHomeKitTip",
            value: function shouldShowHomeKitTip(callback) {
                {
                    callback && callback(false);
                }
            }
        }, {
            key: "saveIsHadShowHomeKitTip",
            value: function saveIsHadShowHomeKitTip(isHadShow) {
                var homeKitTipSetting = {
                    hadShowHomeKit: isHadShow
                };
                LocalStorageManager.writeHomeKitTipSetting(homeKitTipSetting);
            }
        }, {
            key: "getHomeKitType",
            value: function getHomeKitType() {
                var homeKit = PluginInfo.homeKit;
                return homeKit && homeKit.homeKitType;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!HomeKitManager.instance) {
                    HomeKitManager.instance = new HomeKitManager();
                }

                return HomeKitManager.instance;
            }
        }]);
        return HomeKitManager;
    }();

    module.exports = HomeKitManager.getInstance();
},11021,[10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Helper/HomeKitManager.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var strings = _require(_dependencyMap[3]);

  var CommonYeelightModules = _require(_dependencyMap[4]);

  var CLImage = CommonYeelightModules.CLImage,
      Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width;

  var BrightnessSelector = function (_Component) {
    babelHelpers.inherits(BrightnessSelector, _Component);

    function BrightnessSelector(props) {
      babelHelpers.classCallCheck(this, BrightnessSelector);

      var _this = babelHelpers.possibleConstructorReturn(this, (BrightnessSelector.__proto__ || Object.getPrototypeOf(BrightnessSelector)).call(this, props));

      _this.state = {
        brightness: _this.props.brightness
      };
      return _this;
    }

    babelHelpers.createClass(BrightnessSelector, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this.subscriptionCustomSceneBrightFromDelayTimer = _reactNative.DeviceEventEmitter.addListener("customSceneBrightFromDelayTimer", function (object) {
          _this2.setState({
            brightness: object
          });
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.subscriptionCustomSceneBrightFromDelayTimer) {
          this.subscriptionCustomSceneBrightFromDelayTimer.remove();
        }
      }
    }, {
      key: "brightOnValueChange",
      value: function brightOnValueChange(value) {
        this.setState({
          brightness: Math.floor(value)
        });
      }
    }, {
      key: "brightOnValueChangeComplete",
      value: function brightOnValueChangeComplete(value) {
        _reactNative.DeviceEventEmitter.emit("customSceneBrightSelector", Math.floor(value));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: this.props.style
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.firstContainer
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: styles.topLeftText
              },
              strings.common_text_brightness
            ),
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: styles.topRightText
              },
              this.state.brightness + "%"
            ),
            _react2.default.createElement(_reactNative.View, {
              style: styles.firstSeperator
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.secondContainer
            },
            _react2.default.createElement(_reactNative.Slider, {
              style: styles.slider,
              value: this.state.brightness,
              minimumValue: 1,
              maximumValue: 100,
              onValueChange: function onValueChange(value) {
                return _this3.brightOnValueChange(value);
              },
              onSlidingComplete: function onSlidingComplete(value) {
                return _this3.brightOnValueChangeComplete(value);
              }
            }),
            _react2.default.createElement(CLImage, {
              imagePath: 'open_delay_off_light_left.png',
              style: styles.indicatorReduce
            }),
            _react2.default.createElement(CLImage, {
              imagePath: 'open_delay_off_light_right.png',
              style: styles.indicatorAdd
            }),
            _react2.default.createElement(_reactNative.View, {
              style: styles.secondSeperator
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.thirdContainer
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: styles.bottomLeftText,
                allowFontScaling: true,
                numberOfLines: 0
              },
              strings.common_open_delay_off_brightness_sub
            )
          )
        );
      }
    }]);
    return BrightnessSelector;
  }(_react.Component);

  var cellHeight = 52;
  var slideHeight = 32;
  var iconEdgeLength = 24;
  var horizontalGap = 20;
  var fontSize = 16;
  var textHeight = fontSize + 2;
  var fontColor = '#222222';

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: 'transparent'
    },
    indicatorReduce: {
      top: (cellHeight - iconEdgeLength) / 2,
      width: iconEdgeLength,
      height: iconEdgeLength,
      left: horizontalGap,
      position: 'absolute'
    },
    indicatorAdd: {
      top: (cellHeight - iconEdgeLength) / 2,
      width: iconEdgeLength,
      height: iconEdgeLength,
      right: horizontalGap,
      position: 'absolute'
    },
    firstSeperator: {
      left: horizontalGap,
      right: horizontalGap,
      height: 1,
      bottom: 0,
      backgroundColor: "#aaaaaa",
      position: 'absolute'
    },
    secondSeperator: {
      left: 0,
      right: 0,
      height: 1,
      bottom: 0,
      backgroundColor: "#aaaaaa",
      position: 'absolute'
    },
    firstContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around',
      backgroundColor: 'transparent'
    },
    secondContainer: {
      flex: 1,
      backgroundColor: 'transparent'
    },
    thirdContainer: {
      flex: 0,
      backgroundColor: 'transparent'
    },
    topLeftText: {
      top: (cellHeight - textHeight) / 2,
      right: horizontalGap,
      height: (cellHeight + textHeight) / 2,
      left: horizontalGap,
      backgroundColor: 'transparent',
      position: 'absolute',
      fontSize: fontSize,
      color: fontColor
    },
    topRightText: {
      textAlign: 'right',
      top: (cellHeight - textHeight) / 2,
      right: horizontalGap,
      height: (cellHeight + textHeight) / 2,
      backgroundColor: 'transparent',
      position: 'absolute',
      fontSize: fontSize,
      color: fontColor
    },
    slider: {
      top: (cellHeight - slideHeight) / 2,
      height: slideHeight,
      left: horizontalGap + iconEdgeLength + 4,
      right: horizontalGap + iconEdgeLength + 4,
      position: 'absolute'
    },
    bottomLeftText: {
      marginTop: (cellHeight - textHeight) / 2,
      marginRight: horizontalGap,
      width: width - 2 * horizontalGap,
      marginLeft: horizontalGap,
      fontSize: fontSize,
      color: fontColor
    }
  });

  module.exports = BrightnessSelector;
},11024,[10297,10033,10429,10490,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/BrightnessSelector.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var strings = _require(_dependencyMap[3]);

  var BrightnessSelector = _require(_dependencyMap[4]);

  var CommonYeelightModules = _require(_dependencyMap[5]);

  var Theme = CommonYeelightModules.Theme,
      LocalStorageManager = CommonYeelightModules.LocalStorageManager,
      Api = CommonYeelightModules.Api,
      CLAlert = CommonYeelightModules.CLAlert,
      YLUI = CommonYeelightModules.YLUI,
      YLPackage = CommonYeelightModules.YLPackage,
      YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
      YLDevice = CommonYeelightModules.YLDevice,
      CLNumberSpinner = CommonYeelightModules.CLNumberSpinner;
  var entryModeType = {
    normal: "normal",
    customScene: "customScene"
  };
  var PICKER_TEXT_MARGIN = Theme.isAndroid ? 10 : 0;
  var data = Array.apply(null, {
    length: 60
  }).map(Number.call, Number);

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width;

  var exitNotify;

  var DelayTimer = function (_Component) {
    babelHelpers.inherits(DelayTimer, _Component);

    function DelayTimer(props) {
      babelHelpers.classCallCheck(this, DelayTimer);

      var _this = babelHelpers.possibleConstructorReturn(this, (DelayTimer.__proto__ || Object.getPrototypeOf(DelayTimer)).call(this, props));

      var entryMode = entryModeType.normal;

      if (_this.props.entryMode) {
        entryMode = _this.props.entryMode;
      }

      _this.state = {
        selectedNum: 15,
        timerRunning: false,
        originalSelectedNum: 15,
        entryMode: entryMode
      };
      return _this;
    }

    babelHelpers.createClass(DelayTimer, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.subscriptionBack = _reactNative.DeviceEventEmitter.addListener("backFromTime", function () {
          if (_this2.state.selectedNum != _this2.state.originalSelectedNum) {
            CLAlert.alert(null, strings.common_give_up, [{
              text: strings.common_dialog_cancel,
              onPress: function onPress() {}
            }, {
              text: strings.common_dialog_ok,
              onPress: function onPress() {
                if (entryModeType.customScene == _this2.state.entryMode) {
                  _reactNative.DeviceEventEmitter.emit("quitDelayTimerOfCustomScene", {});
                } else {
                  _this2.props.navigation.pop();
                }
              }
            }]);
          } else {
            if (entryModeType.customScene == _this2.state.entryMode) {
              _reactNative.DeviceEventEmitter.emit("quitDelayTimerOfCustomScene", {});
            } else {
              _this2.props.navigation.pop();
            }
          }
        });

        if (entryModeType.customScene == this.state.entryMode) {
          this.subscriptionCustomSceneBrightSelector = _reactNative.DeviceEventEmitter.addListener("customSceneBrightSelector", function (object) {
            _this2.setState({
              brightness: object
            });
          });
          Api.getProps(function (isSuceess, response) {
            return _this2._getProps(isSuceess, response);
          });
        }

        exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
          exitNotify.remove();

          if (_this2.subscription != null) {
            _this2.subscription.remove();
          }

          if (_this2.subscriptionBack != null) {
            _this2.subscriptionBack.remove();
          }

          if (_this2.subscriptionCustomSceneBrightSelector != null) {
            _this2.subscriptionCustomSceneBrightSelector.remove();
          }
        });
      }
    }, {
      key: "_getProps",
      value: function _getProps(isSuceess, response) {
        if (isSuceess && response && Array.isArray(response.result) && response.result.length >= 2) {
          var bright = parseInt(response.result[Api.IndexOfGetProps("bright")]);

          if (!isNaN(bright)) {
            this.setState({
              brightness: bright
            });

            _reactNative.DeviceEventEmitter.emit("customSceneBrightFromDelayTimer", bright);
          }
        } else if (isSuceess && response && Array.isArray(response) && response.length > 0) {
          var bright = parseInt(response[Api.IndexOfGetProps("bright")].value);

          if (!isNaN(bright)) {
            this.setState({
              brightness: bright
            });

            _reactNative.DeviceEventEmitter.emit("customSceneBrightFromDelayTimer", bright);
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.subscription.remove();
        this.subscriptionBack.remove();

        if (this.subscriptionCustomSceneBrightSelector != null) {
          this.subscriptionCustomSceneBrightSelector.remove();
        }
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this3 = this;

        if (entryModeType.customScene == this.state.entryMode) {
          this.setState({
            brightness: 50
          });
        } else {
          var num = 15;
          LocalStorageManager.readDelayTimer(function (isSuccess, content) {
            if (isSuccess) {
              if (content != null) {
                num = parseInt(content);

                if (isNaN(num) || num <= 0) {
                  return;
                }

                _this3.setState({
                  selectedNum: num,
                  originalSelectedNum: num
                });
              }
            }
          });
        }

        Api.getCron(function (suceess, response) {
          return _this3._getCron(suceess, response);
        });
        this.subscription = _reactNative.DeviceEventEmitter.addListener("timer", function () {
          if (entryModeType.customScene == _this3.state.entryMode) {
            _reactNative.DeviceEventEmitter.emit("delayTimeFromCustomScene", {
              brightness: _this3.state.brightness,
              delayTimer: _this3.state.selectedNum
            });
          } else {
            var selTime = _this3.state.selectedNum;
            Api.addCron(parseInt(selTime), function (isSuccess, response) {
              if (isSuccess && Array.isArray(response.result)) {
                if (_this3.props.delayTimerDidChange) {
                  _this3.props.delayTimerDidChange(_this3.state.selectedNum);
                }

                YLUI.showFinishTips(strings.common_text_save_success);
                LocalStorageManager.writeDelayTimer(_this3.state.selectedNum.toString(), function (isSuccess) {
                  _this3.setState({
                    originalSelectedNum: _this3.state.selectedNum
                  });
                });

                _this3.props.navigation.pop();
              } else {
                YLUI.showFailTips(strings.common_add_delay_off_fail);

                _this3.setState({
                  selectedNum: _this3.state.originalSelectedNum
                });
              }
            });
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var selectedNum = this.state.selectedNum;
        var top = this.props.insetForNavigator.top;

        var brightSelector = _react2.default.createElement(_reactNative.View, {
          style: [styles.brightSelector, {
            marginTop: top
          }]
        });

        if (entryModeType.customScene == this.state.entryMode) {
          brightSelector = _react2.default.createElement(BrightnessSelector, {
            style: [styles.brightSelector, {
              marginTop: top
            }],
            brightness: this.state.brightness
          });
        }

        return _react2.default.createElement(
          YLSafeAreaView,
          {
            style: styles.container
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: {
                flexDirection: "column",
                alignItems: "center",
                justifyContent: 'flex-start'
              }
            },
            brightSelector
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: {
                flexDirection: "column",
                alignItems: "center",
                justifyContent: 'flex-start',
                height: 250
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: styles.tips
              },
              strings.common_open_delay_off_off_info_singular.format(selectedNum.toString())
            ),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.picker
              },
              _react2.default.createElement(CLNumberSpinner, {
                style: {
                  flex: 1
                },
                maxValue: data[data.length - 1] + 1,
                minValue: data[0] + 1,
                interval: 1,
                defaultValue: this.state.selectedNum,
                valueFormat: "%1.0f",
                unit: strings.common_text_min,
                pickerInnerStyle: {
                  lineColor: "#00000000",
                  selectTextColor: "black",
                  unitTextColor: 'black',
                  unitFontSize: 14
                },
                onNumberChanged: function onNumberChanged(data) {
                  _this4._selected(data.newValue);
                }
              })
            )
          )
        );
      }
    }, {
      key: "_selected",
      value: function _selected(num) {
        this.setState({
          selectedNum: num
        });
      }
    }, {
      key: "_getCron",
      value: function _getCron(isSuccess, response) {
        if (isSuccess && response && response.result && response.result.length > 0) {
          this.setState({
            timerRunning: true
          });
        }
      }
    }, {
      key: "saveDelayTimer",
      value: function saveDelayTimer() {
        var _this5 = this;

        if (entryModeType.customScene == this.state.entryMode) {
          _reactNative.DeviceEventEmitter.emit("delayTimeFromCustomScene", {
            brightness: this.state.brightness,
            delayTimer: this.state.selectedNum
          });
        } else {
          Api.addCron(this.state.selectedNum, function (isSuccess, response) {
            if (isSuccess) {
              YLUI.showFinishTips(strings.common_text_save_success);
              LocalStorageManager.writeDelayTimer(_this5.state.selectedNum.toString(), function (isSuccess) {
                _this5.setState({
                  originalSelectedNum: _this5.state.selectedNum
                });
              });
            } else {
              YLUI.showFailTips(strings.common_add_delay_off_fail);

              _this5.setState({
                selectedNum: _this5.state.originalSelectedNum
              });
            }
          });
        }
      }
    }]);
    return DelayTimer;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#f2f2f2",
      flexDirection: "column",
      justifyContent: "space-between"
    },
    brightSelector: {
      height: 156,
      backgroundColor: "transparent"
    },
    picker: {
      backgroundColor: "#fff",
      flex: 1,
      width: width,
      marginTop: 10
    },
    tips: {
      color: "#777",
      fontSize: 16,
      width: width,
      textAlign: "center"
    },
    label: {
      fontSize: 14,
      position: "absolute",
      bottom: 106 + PICKER_TEXT_MARGIN,
      width: width / 2 - 20,
      right: 0,
      textAlign: "left",
      backgroundColor: "transparent",
      color: 'black'
    }
  });

  var automaticDelay = "GET_YEELINK_DELAY_SETTING" == YLPackage.plugId;
  var route = {
    component: DelayTimer,
    isNavigationBarHidden: false,
    navigationBarStyle: null,
    title: automaticDelay ? strings.common_scene_open_delay_off : strings.common_text_delay_off_timer,
    barStyle: "dark-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#000000"
    },
    navLeftButtonConfig: {
      actionEvent: "backFromTime"
    },
    navRightButtonConfig: {
      buttonType: "ImageButton",
      imageURL: "delay_time_save.png",
      actionEvent: "timer"
    },
    navRightButtonStyle: {
      tintColor: "#000000",
      width: 29,
      height: 29
    },
    passRouteProps: {
      insetForNavigator: {
        top: 44
      }
    }
  };
  module.exports = {
    component: DelayTimer,
    route: route
  };
},11027,[10297,10033,10429,10490,11024,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/DelayTimer.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var strings = _require(_dependencyMap[3]);

	var API = _require(_dependencyMap[4]);

	var CommonYeelightModules = _require(_dependencyMap[5]);

	var YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
	    BaseReactComponent = CommonYeelightModules.BaseReactComponent,
	    DeviceModel = CommonYeelightModules.DeviceModel,
	    Theme = CommonYeelightModules.Theme,
	    CLSwitch = CommonYeelightModules.CLSwitch,
	    CLAlert = CommonYeelightModules.CLAlert,
	    YLUI = CommonYeelightModules.YLUI,
	    YLSwitch = CommonYeelightModules.YLSwitch,
	    CLNumberSpinner = CommonYeelightModules.CLNumberSpinner;
	var exitNotify;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var ratio = Theme.ratio;
	var PICKER_TEXT_MARGIN = Theme.isAndroid ? 10 : 0;
	var data = [{
		0: [strings.common_night_light_start_time, 0]
	}, {
		1: [strings.common_night_light_end_time, 0]
	}, {
		2: [strings.common_night_light_auto_delay_off, 0]
	}, {
		3: [strings.common_night_light_delay_off_time, 0]
	}];

	var NightLightSettingPage = function (_BaseReactComponent) {
		babelHelpers.inherits(NightLightSettingPage, _BaseReactComponent);

		function NightLightSettingPage(props) {
			babelHelpers.classCallCheck(this, NightLightSettingPage);

			var _this = babelHelpers.possibleConstructorReturn(this, (NightLightSettingPage.__proto__ || Object.getPrototypeOf(NightLightSettingPage)).call(this, props));

			_this.ds = new _reactNative.ListView.DataSource({
				rowHasChanged: function rowHasChanged(r1, r2) {
					return r1 !== r2;
				}
			});
			_this.state = {
				dataSource: _this.ds.cloneWithRows(data),
				enableDelayTurnOffTime: false,
				beginTime: 1320,
				endTime: 360,
				delayTurnOffTime: 15,
				originalBeginTime: 1320,
				originalEndTime: 360,
				originalDelayTurnOffTime: 15,
				originalEnableDelayTurnOffTime: false,
				date: new Date(),
				currentSeledtedRow: -1
			};
			return _this;
		}

		babelHelpers.createClass(NightLightSettingPage, [{
			key: "componentDidMount",
			value: function componentDidMount() {
				var _this2 = this;

				var nightlight = DeviceModel.nightlight;
				this.setState({
					enableDelayTurnOffTime: nightlight.enableDelayTurnOffTime,
					beginTime: nightlight.beginTime,
					endTime: nightlight.endTime,
					delayTurnOffTime: nightlight.delayTurnOffTime,
					originalBeginTime: nightlight.beginTime,
					originalEndTime: nightlight.endTime,
					originalDelayTurnOffTime: nightlight.delayTurnOffTime,
					originalEnableDelayTurnOffTime: nightlight.enableDelayTurnOffTime
				});
				this.updateSettingListView();
				this.subscription = _reactNative.DeviceEventEmitter.addListener('nightLightSetting', function () {
					var commandStr = _this2._getNightTimeCommand();

					DeviceModel.nightlight = babelHelpers.extends({}, DeviceModel.nightlight, {
						beginTime: _this2.state.beginTime,
						endTime: _this2.state.endTime,
						delayTurnOffTime: _this2.state.delayTurnOffTime,
						enableDelayTurnOffTime: _this2.state.enableDelayTurnOffTime
					});
					API.setNightLightTime(commandStr, function (isSuceess, response) {
						_this2.setState({
							originalBeginTime: _this2.state.beginTime
						});

						_this2.setState({
							originalEndTime: _this2.state.endTime
						});

						_this2.setState({
							originalDelayTurnOffTime: _this2.state.delayTurnOffTime
						});

						_this2.setState({
							originalEnableDelayTurnOffTime: _this2.state.enableDelayTurnOffTime
						});

						if (isSuceess) {
							YLUI.showFinishTips(strings.common_text_save_success);

							_this2.props.navigation.pop();
						} else {
							YLUI.showFailTips(strings.common_text_fail_ios);
						}
					});
				});
				this.subscriptionBack = _reactNative.DeviceEventEmitter.addListener('backFromNightLightSetting', function () {
					if (_this2.state.beginTime != _this2.state.originalBeginTime || _this2.state.endTime != _this2.state.originalEndTime || _this2.state.delayTurnOffTime != _this2.state.originalDelayTurnOffTime || _this2.state.enableDelayTurnOffTime != _this2.state.originalEnableDelayTurnOffTime) {
						CLAlert.alert(null, strings.common_give_up, [{
							text: strings.common_dialog_cancel,
							onPress: function onPress() {}
						}, {
							text: strings.common_dialog_ok,
							onPress: function onPress() {
								_this2.props.navigation.pop();
							}
						}]);
					} else {
						_this2.props.navigation.pop();
					}
				});
				exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
					exitNotify.remove();

					if (_this2.subscription != null) {
						_this2.subscription.remove();
					}

					;

					if (_this2.subscriptionBack != null) {
						_this2.subscriptionBack.remove();
					}
				});
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				this.subscription.remove();
				this.subscriptionBack.remove();
			}
		}, {
			key: "_getNightTimeCommand",
			value: function _getNightTimeCommand() {
				var commandStr;
				var enableNightLightStr;

				if (this.state.enableDelayTurnOffTime) {
					enableNightLightStr = 'enable';
				} else {
					enableNightLightStr = 'disable';
				}

				commandStr = 'set';
				var beginTimeStr = this.getTimeStringCommandFromTime(this.state.beginTime);
				commandStr += "|" + beginTimeStr;
				var endTimeStr = this.getTimeStringCommandFromTime(this.state.endTime);
				commandStr += "|" + endTimeStr;

				if (this.state.enableDelayTurnOffTime) {
					var delayTimeStr = this.state.delayTurnOffTime.toString();

					if (delayTimeStr.length > 0) {
						commandStr += "|" + delayTimeStr;
					} else {
						commandStr += "|0";
					}
				} else {
					commandStr += "|0";
				}

				return commandStr;
			}
		}, {
			key: "getTimeStringCommandFromTime",
			value: function getTimeStringCommandFromTime(time) {
				if (time < 0) {
					return "-1";
				}

				var hour = Math.floor(time / 60);
				var minute = Math.floor(time % 60);
				var hourStr = hour.toString();
				var minuteStr = minute.toString();

				if (hour < 10) {
					hourStr = '0' + hourStr;
				} else {}

				if (minute < 10) {
					minuteStr = '0' + minuteStr;
				} else {}

				return hourStr + minuteStr + '00';
			}
		}, {
			key: "_toggleNightLight",
			value: function _toggleNightLight(value) {
				this.setState({
					currentSeledtedRow: 2
				});
				this.updateSettingListView();

				if (value && this.state.delayTurnOffTime <= 0) {
					this.setState({
						enableDelayTurnOffTime: value,
						delayTurnOffTime: 15
					});
				} else {
					this.setState({
						enableDelayTurnOffTime: value
					});
				}

				if (this.props.valueChangeCallback) {
					this.props.valueChangeCallback({
						enableDelayTurnOffTime: value
					});
				}
			}
		}, {
			key: "getHourFromTime",
			value: function getHourFromTime(time) {
				return Math.floor(time / 60);
			}
		}, {
			key: "getMinuteFromTime",
			value: function getMinuteFromTime(time) {
				return Math.floor(time % 60);
			}
		}, {
			key: "getNewDataSource",
			value: function getNewDataSource() {
				return [{
					0: [strings.common_night_light_start_time, this.state.beginTime]
				}, {
					1: [strings.common_night_light_end_time, this.state.endTime]
				}, {
					2: [strings.common_night_light_auto_delay_off, this.state.enableDelayTurnOffTime]
				}, {
					3: [strings.common_night_light_delay_off_time, this.state.delayTurnOffTime]
				}];
			}
		}, {
			key: "updateSettingListView",
			value: function updateSettingListView() {
				this.ds = new _reactNative.ListView.DataSource({
					rowHasChanged: function rowHasChanged(r1, r2) {
						return r1 !== r2;
					}
				});
				this.setState({
					dataSource: this.ds.cloneWithRows(this.getNewDataSource())
				});
			}
		}, {
			key: "updateBeginTimeHour",
			value: function updateBeginTimeHour(hourStr) {
				var hour = parseInt(hourStr);
				var minute = this.getMinuteFromTime(this.state.beginTime);
				var beginTime = hour * 60 + minute;
				this.setState({
					beginTime: beginTime
				});
				this.updateSettingListView();
			}
		}, {
			key: "updateBeginTimeMinute",
			value: function updateBeginTimeMinute(minuteStr) {
				var minute = parseInt(minuteStr);
				var hour = this.getHourFromTime(this.state.beginTime);
				var beginTime = hour * 60 + minute;
				this.setState({
					beginTime: beginTime
				});
				this.updateSettingListView();
			}
		}, {
			key: "updateEndTimeHour",
			value: function updateEndTimeHour(hourStr) {
				var hour = parseInt(hourStr);
				var minute = this.getMinuteFromTime(this.state.endTime);
				var endTime = hour * 60 + minute;
				this.setState({
					endTime: endTime
				});
				this.updateSettingListView();
			}
		}, {
			key: "updateEndTimeMinute",
			value: function updateEndTimeMinute(minuteStr) {
				var minute = parseInt(minuteStr);
				var hour = this.getHourFromTime(this.state.endTime);
				var endTime = hour * 60 + minute;
				this.setState({
					endTime: endTime
				});
				this.updateSettingListView();
			}
		}, {
			key: "updateAutoDelayTime",
			value: function updateAutoDelayTime(delayTimeStr) {
				var delayTime = parseInt(delayTimeStr);
				this.setState({
					delayTurnOffTime: delayTime
				});
				this.updateSettingListView();
			}
		}, {
			key: "renderPickerContainer",
			value: function renderPickerContainer() {
				var _this3 = this;

				var shouldReturnContainer = false;

				if (0 == this.state.currentSeledtedRow) {
					shouldReturnContainer = true;
				} else if (1 == this.state.currentSeledtedRow) {
					shouldReturnContainer = true;
				} else if (3 == this.state.currentSeledtedRow) {
					shouldReturnContainer = true;
				} else {}

				var hourTimeModels = this._returnHourTimeModels();

				var minuteTimeModels = this._returnMinuteTimeModels();

				var delayTimeModels = this._returnDelayTimeModels();

				if (shouldReturnContainer) {
					if (0 == this.state.currentSeledtedRow) {
						return _react2.default.createElement(
							_reactNative.View,
							{
								style: styles.pickerViewContainer
							},
							_react2.default.createElement(
								_reactNative.View,
								{
									style: styles.pickerParentStyle
								},
								_react2.default.createElement(CLNumberSpinner, {
									style: styles.pickerStyle,
									maxValue: hourTimeModels.max,
									minValue: hourTimeModels.min,
									interval: 1,
									defaultValue: this.getHourFromTime(this.state.beginTime),
									valueFormat: "%1.0f",
									unit: strings.common_text_hour_unit,
									pickerInnerStyle: {
										lineColor: "#00000000",
										selectTextColor: "black",
										unitTextColor: 'black',
										unitFontSize: 14
									},
									onNumberChanged: function onNumberChanged(data) {
										_this3.updateBeginTimeHour(data.newValue);
									}
								})
							),
							_react2.default.createElement(
								_reactNative.View,
								{
									style: styles.pickerParentStyle
								},
								_react2.default.createElement(CLNumberSpinner, {
									style: styles.pickerStyle,
									maxValue: minuteTimeModels.max,
									minValue: minuteTimeModels.min,
									interval: 1,
									defaultValue: this.getMinuteFromTime(this.state.beginTime),
									valueFormat: "%1.0f",
									unit: strings.common_text_min,
									pickerInnerStyle: {
										lineColor: "#00000000",
										selectTextColor: "black",
										unitTextColor: 'black',
										unitFontSize: 14
									},
									onNumberChanged: function onNumberChanged(data) {
										_this3.updateBeginTimeMinute(data.newValue);
									}
								})
							)
						);
					} else if (1 == this.state.currentSeledtedRow) {
						return _react2.default.createElement(
							_reactNative.View,
							{
								style: styles.pickerViewContainer
							},
							_react2.default.createElement(
								_reactNative.View,
								{
									style: styles.pickerParentStyle
								},
								_react2.default.createElement(CLNumberSpinner, {
									style: styles.pickerStyle,
									maxValue: hourTimeModels.max,
									minValue: hourTimeModels.min,
									interval: 1,
									defaultValue: this.getHourFromTime(this.state.endTime),
									valueFormat: "%1.0f",
									unit: strings.common_text_hour_unit,
									pickerInnerStyle: {
										lineColor: "#00000000",
										selectTextColor: "black",
										unitTextColor: 'black',
										unitFontSize: 14
									},
									onNumberChanged: function onNumberChanged(data) {
										_this3.updateEndTimeHour(data.newValue);
									}
								})
							),
							_react2.default.createElement(
								_reactNative.View,
								{
									style: styles.pickerParentStyle
								},
								_react2.default.createElement(CLNumberSpinner, {
									style: styles.pickerStyle,
									maxValue: minuteTimeModels.max,
									minValue: minuteTimeModels.min,
									interval: 1,
									defaultValue: this.getMinuteFromTime(this.state.endTime),
									valueFormat: "%1.0f",
									unit: strings.common_text_min,
									pickerInnerStyle: {
										lineColor: "#00000000",
										selectTextColor: "black",
										unitTextColor: 'black',
										unitFontSize: 14
									},
									onNumberChanged: function onNumberChanged(data) {
										_this3.updateEndTimeMinute(data.newValue);
									}
								})
							)
						);
					} else if (3 == this.state.currentSeledtedRow) {
						return _react2.default.createElement(
							_reactNative.View,
							{
								style: styles.pickerViewContainer
							},
							_react2.default.createElement(CLNumberSpinner, {
								style: styles.pickerStyle,
								maxValue: delayTimeModels.max,
								minValue: delayTimeModels.min,
								interval: 1,
								defaultValue: this.state.delayTurnOffTime,
								valueFormat: "%1.0f",
								unit: strings.common_text_min,
								pickerInnerStyle: {
									lineColor: "#00000000",
									selectTextColor: "black",
									unitTextColor: 'black',
									unitFontSize: 14
								},
								onNumberChanged: function onNumberChanged(data) {
									_this3.updateAutoDelayTime(data.newValue);
								}
							})
						);
					}
				}
			}
		}, {
			key: "_getListViewHeight",
			value: function _getListViewHeight() {
				var rowCount = this.state.dataSource.getRowCount();

				if (!this.state.enableDelayTurnOffTime) {
					rowCount = rowCount - 1;
				}

				return rowHeight * rowCount + rowCount;
			}
		}, {
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					YLSafeAreaView,
					{
						style: styles.container
					},
					this._renderSectionHeader(),
					_react2.default.createElement(
						_reactNative.View,
						{
							style: {
								width: width,
								marginTop: this.props.insetForNavigator.top
							}
						},
						_react2.default.createElement(_reactNative.ListView, {
							style: [styles.list, {
								height: this._getListViewHeight()
							}],
							dataSource: this.state.dataSource,
							renderRow: this._renderRow.bind(this)
						}),
						_react2.default.createElement(
							_reactNative.View,
							{
								style: {
									width: width,
									height: 120,
									padding: 10,
									marginLeft: 2
								}
							},
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: {
										fontSize: 12,
										color: "#A1A1A1"
									}
								},
								strings.common_moon_night_light_tip_one
							),
							_react2.default.createElement(
								_reactNative.Text,
								{
									style: {
										fontSize: 12,
										color: "#A1A1A1"
									}
								},
								strings.common_moon_night_light_tip_two
							)
						)
					),
					this.renderPickerContainer()
				);
			}
		}, {
			key: "_renderRow",
			value: function _renderRow(rowDataMap, sectionID, rowID) {
				var _this4 = this;

				var key = Object.keys(rowDataMap)[0];
				var values = rowDataMap[key];
				var rowData = values[0];

				var extra = _react2.default.createElement(_reactNative.View, null);

				var showCustomKnob = true;
				var timeContent;
				var shouldShowSwitch = false;

				if (0 == rowID) {
					timeContent = this._formatTime(this.state.beginTime);
					shouldShowSwitch = false;
				} else if (1 == rowID) {
					timeContent = this._formatTime(this.state.endTime);
					shouldShowSwitch = false;
				} else if (3 == rowID) {
					timeContent = this.state.delayTurnOffTime.toString() + strings.common_text_min;
					shouldShowSwitch = false;
				} else if (2 == rowID) {
					shouldShowSwitch = true;
				}

				if (3 == rowID && !this.state.enableDelayTurnOffTime) {
					return _react2.default.createElement(_reactNative.View, null);
				}

				if (!shouldShowSwitch) {
					return _react2.default.createElement(
						_reactNative.TouchableHighlight,
						{
							underlayColor: "transparent",
							activeOpacity: 0.6,
							onPress: function onPress() {
								return _this4._pressRow(rowData);
							}
						},
						_react2.default.createElement(
							_reactNative.View,
							null,
							_react2.default.createElement(
								_reactNative.View,
								{
									style: styles.rowContainer
								},
								_react2.default.createElement(_reactNative.View, {
									style: rowID == 3 ? [styles.circle, {
										opacity: this.state.newReply ? 1.0 : 0.0
									}] : {}
								}),
								_react2.default.createElement(
									_reactNative.Text,
									{
										numberOfLines: 1,
										style: styles.title
									},
									rowData
								),
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.textContent
									},
									timeContent
								)
							),
							_react2.default.createElement(_reactNative.View, {
								style: styles.separator
							})
						)
					);
				} else {
					return _react2.default.createElement(
						_reactNative.View,
						null,
						_react2.default.createElement(
							_reactNative.View,
							{
								style: styles.rowContainer
							},
							_react2.default.createElement(_reactNative.View, {
								style: rowID == 3 ? [styles.circle, {
									opacity: this.state.newReply ? 1.0 : 0.0
								}] : {}
							}),
							_react2.default.createElement(
								_reactNative.Text,
								{
									numberOfLines: 1,
									style: styles.title
								},
								rowData
							),
							_react2.default.createElement(YLSwitch, {
								style: styles.switch,
								onValueChange: function onValueChange(value) {
									return _this4._toggleNightLight(value);
								},
								value: Boolean(this.state.enableDelayTurnOffTime)
							})
						),
						_react2.default.createElement(_reactNative.View, {
							style: styles.separator
						})
					);
				}
			}
		}, {
			key: "_renderSectionHeader",
			value: function _renderSectionHeader() {
				return _react2.default.createElement(_reactNative.View, {
					style: styles.section
				});
			}
		}, {
			key: "_pressRow",
			value: function _pressRow(rowData) {
				if (rowData == strings.common_night_light_start_time) {
					this.setState({
						currentSeledtedRow: 0
					});
				} else if (rowData == strings.common_night_light_end_time) {
					this.setState({
						currentSeledtedRow: 1
					});
				} else if (rowData == strings.common_night_light_auto_delay_off) {} else if (rowData == strings.common_night_light_delay_off_time) {
					this.setState({
						currentSeledtedRow: 3
					});
				}
			}
		}, {
			key: "componentWillMount",
			value: function componentWillMount() {
				this._getNightTime();
			}
		}, {
			key: "_formatTime",
			value: function _formatTime(time) {
				var hour = this.getHourFromTime(time);
				var minute = this.getMinuteFromTime(time);
				var hourStr = hour;
				var minuteStr = minute;

				if (hour < 10) {
					hourStr = '0' + hour;
				}

				if (minute < 10) {
					minuteStr = '0' + minute;
				}

				return hourStr + ":" + minuteStr;
			}
		}, {
			key: "_returnDelayTimeModels",
			value: function _returnDelayTimeModels() {
				return {
					min: 1,
					max: 60
				};
			}
		}, {
			key: "_returnHourTimeModels",
			value: function _returnHourTimeModels() {
				return {
					min: 0,
					max: 23
				};
			}
		}, {
			key: "_returnMinuteTimeModels",
			value: function _returnMinuteTimeModels() {
				return {
					min: 0,
					max: 59
				};
			}
		}, {
			key: "_getContinuousNumberArray",
			value: function _getContinuousNumberArray(beginNumber, EndNumber) {
				var returnMap = [];

				for (var i = beginNumber; i <= EndNumber; i++) {
					returnMap[i - beginNumber] = i.toString();
				}

				return returnMap;
			}
		}, {
			key: "_getTimeFromData",
			value: function _getTimeFromData(data) {
				return Math.floor(data / 10000) * 60 + Math.floor(data / 100) % 100;
			}
		}, {
			key: "_getNightTime",
			value: function _getNightTime() {
				var _this5 = this;

				API.getNightTime(function (response, nightTimeReturn) {
					if (response) {
						var nightTimeReturnArray = nightTimeReturn.result[0].split('|');
						var nightTimeEnableStr = nightTimeReturnArray[0];
						var nightTimeEnableBool;

						if (nightTimeEnableStr == 'enable') {
							nightTimeEnableBool = true;
						} else {
							nightTimeEnableBool = false;
						}

						var beginTimeTmp = parseInt(nightTimeReturnArray[1]);
						var endTimeTmp = parseInt(nightTimeReturnArray[2]);

						if (isNaN(beginTimeTmp)) {
							beginTimeTmp = 220000;
						}

						if (isNaN(endTimeTmp)) {
							endTimeTmp = 60000;
						}

						_this5.setState({
							beginTime: _this5._getTimeFromData(beginTimeTmp),
							originalBeginTime: _this5._getTimeFromData(beginTimeTmp)
						});

						_this5.setState({
							endTime: _this5._getTimeFromData(endTimeTmp),
							originalEndTime: _this5._getTimeFromData(endTimeTmp)
						});

						var delayTurnOffTimeTmp = parseInt(nightTimeReturnArray[3]);

						if (isNaN(delayTurnOffTimeTmp)) {
							delayTurnOffTimeTmp = 0;
						}

						_this5.setState({
							delayTurnOffTime: delayTurnOffTimeTmp,
							originalDelayTurnOffTime: delayTurnOffTimeTmp
						});

						var enableDelayTurnOffTimeTmp = delayTurnOffTimeTmp > 0;

						_this5.setState({
							enableDelayTurnOffTime: enableDelayTurnOffTimeTmp,
							originalEnableDelayTurnOffTime: enableDelayTurnOffTimeTmp
						});

						DeviceModel.nightlight = babelHelpers.extends({}, DeviceModel.nightlight, {
							beginTime: _this5.state.beginTime,
							endTime: _this5.state.endTime,
							delayTurnOffTime: _this5.state.delayTurnOffTime,
							enableDelayTurnOffTime: _this5.state.enableDelayTurnOffTime
						});

						_this5.updateSettingListView();
					}
				});
			}
		}]);
		return NightLightSettingPage;
	}(BaseReactComponent);

	var rowHeight = 44;
	var sectionHeight = 15;

	var styles = _reactNative.StyleSheet.create({
		container: {
			flex: 1,
			flexDirection: 'column',
			alignItems: 'center',
			backgroundColor: '#f2f2f2'
		},
		rowContainer: {
			flexDirection: 'row',
			alignSelf: 'stretch',
			alignItems: 'center',
			paddingTop: 6,
			paddingBottom: 6,
			backgroundColor: '#fff',
			height: rowHeight
		},
		section: {
			backgroundColor: 'transparent',
			width: width,
			height: sectionHeight
		},
		title: {
			fontSize: 14 * ratio,
			alignItems: 'center',
			flex: 1,
			marginLeft: 12 * ratio,
			marginRight: 6 * ratio,
			color: 'black'
		},
		textContent: {
			fontSize: 13 * ratio,
			marginRight: 12 * ratio,
			color: '#222'
		},
		list: {
			alignSelf: 'stretch',
			width: width
		},
		separator: {
			height: 1,
			backgroundColor: "#fff",
			width: 12 * ratio
		},
		pickerViewContainer: {
			position: 'absolute',
			flexDirection: 'row',
			flex: 1,
			bottom: 0,
			left: 0,
			width: width,
			height: 240
		},
		pickerParentStyle: {
			flex: 1
		},
		pickerStyle: {
			flex: 1
		},
		test: {
			flex: 1,
			backgroundColor: 'red'
		},
		switch: {
			marginRight: 12 * ratio
		},
		timeDurationLabel: {
			fontSize: 14 * ratio,
			position: 'absolute',
			bottom: 144 + PICKER_TEXT_MARGIN,
			left: width / 2 + 54,
			backgroundColor: 'transparent',
			color: 'black'
		},
		timeStateLabel: {
			fontSize: 14 * ratio,
			position: 'absolute',
			bottom: 144 + PICKER_TEXT_MARGIN,
			left: (width / 2 + 27) / 2,
			color: 'black'
		}
	});

	var route = {
		component: NightLightSettingPage,
		isNavigationBarHidden: false,
		navigationBarStyle: null,
		title: strings.common_settings_night_light,
		barStyle: "dark-content",
		isNavigationBarRightButtonHidden: false,
		navLeftButtonStyle: {
			tintColor: "#000000"
		},
		navLeftButtonConfig: {
			actionEvent: 'backFromNightLightSetting'
		},
		navRightButtonConfig: {
			buttonType: 'TextButton',
			title: strings.common_text_save,
			actionEvent: 'nightLightSetting'
		},
		passRouteProps: {
			insetForNavigator: {
				top: 44
			}
		}
	};
	module.exports = {
		component: NightLightSettingPage,
		route: route
	};
},11030,[10297,10033,10429,10490,10553,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/NightLightSettingPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var Dimensions = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
	    WebViewPage = CommonYeelightModules.WebViewPage,
	    strings = CommonYeelightModules.strings,
	    Api = CommonYeelightModules.Api,
	    Cloud = CommonYeelightModules.Cloud,
	    CommonTypeEnum = CommonYeelightModules.CommonTypeEnum,
	    CLAlert = CommonYeelightModules.CLAlert,
	    CLImage = CommonYeelightModules.CLImage,
	    YLUI = CommonYeelightModules.YLUI,
	    Theme = CommonYeelightModules.Theme;

	var _Theme$getScreenSize = Theme.getScreenSize(),
	    width = _Theme$getScreenSize.width,
	    height = _Theme$getScreenSize.height;

	var data = [];

	var RemoteControlListPage = function (_Component) {
		babelHelpers.inherits(RemoteControlListPage, _Component);

		function RemoteControlListPage(props) {
			babelHelpers.classCallCheck(this, RemoteControlListPage);

			var _this = babelHelpers.possibleConstructorReturn(this, (RemoteControlListPage.__proto__ || Object.getPrototypeOf(RemoteControlListPage)).call(this, props));

			_this.ds = new _reactNative.ListView.DataSource({
				rowHasChanged: function rowHasChanged(r1, r2) {
					return r1 !== r2;
				}
			});
			_this.data = [];
			_this.state = {
				dataSource: _this.ds.cloneWithRows(data),
				isFinishFetchList: true
			};
			return _this;
		}

		babelHelpers.createClass(RemoteControlListPage, [{
			key: "render",
			value: function render() {
				var _this2 = this;

				var contentView = _react2.default.createElement(_reactNative.View, null);

				if (this.state.isFinishFetchList) {
					if (this.data.length > 0) {
						contentView = _react2.default.createElement(
							_reactNative.View,
							{
								style: {
									flex: 1
								}
							},
							_react2.default.createElement(_reactNative.ListView, {
								style: [styles.list, {
									marginTop: this.props.insetForNavigator.top
								}],
								dataSource: this.state.dataSource,
								enableEmptySections: true,
								renderRow: this._renderRow.bind(this),
								renderSectionHeader: this._renderSectionHeader.bind(this)
							}),
							_react2.default.createElement(
								_reactNative.TouchableHighlight,
								{
									style: {
										height: 30,
										marginBottom: 25,
										justifyContent: 'center'
									},
									underlayColor: "transparent",
									onPress: function onPress() {
										return _this2.openHowBindRemotePage();
									}
								},
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.howBindRemoteText
									},
									strings.common_remote_bind_remote_and_switch_link
								)
							)
						);
					} else {
						contentView = _react2.default.createElement(
							_reactNative.View,
							{
								style: {
									alignSelf: 'stretch',
									flex: 1,
									justifyContent: 'center',
									alignItems: 'center',
									marginBottom: 0,
									marginTop: this.props.insetForNavigator.top
								}
							},
							_react2.default.createElement(
								_reactNative.View,
								{
									style: {
										position: 'absolute',
										top: 0,
										left: 0,
										bottom: 0,
										right: 0,
										flex: 1,
										justifyContent: 'center',
										alignItems: 'center'
									}
								},
								_react2.default.createElement(CLImage, {
									imagePath: "no_miband_tip.png",
									style: styles.noTip
								}),
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.noTipText
									},
									strings.common_remote_connection_no_binding_tips
								)
							),
							_react2.default.createElement(
								_reactNative.TouchableHighlight,
								{
									style: styles.howBindRemoteContainer,
									underlayColor: "transparent",
									onPress: function onPress() {
										return _this2.openHowBindRemotePage();
									}
								},
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.howBindRemoteText
									},
									strings.common_remote_bind_remote_and_switch_link
								)
							)
						);
					}
				}

				return _react2.default.createElement(
					YLSafeAreaView,
					{
						style: styles.container
					},
					contentView
				);
			}
		}, {
			key: "openHowBindRemotePage",
			value: function openHowBindRemotePage() {
				var lang = Cloud.currentLang();

				var packageInfo = _require(_dependencyMap[4]);

				var url = packageInfo.bind_remote_url.format(lang);
				url = Cloud.cloudBaseURL() + url;
				this.props.navigation.push(babelHelpers.extends({
					title: strings.common_remote_connection_web_title
				}, WebViewPage.route, {
					passProps: {
						url: url
					}
				}));
			}
		}, {
			key: "componentWillMount",
			value: function componentWillMount() {
				this._getRemoteControlList();
			}
		}, {
			key: "_renderRow",
			value: function _renderRow(rowData, sectionID, rowID) {
				var _this3 = this;

				var remoteDeivce = strings.common_remote_control;
				var deviceImageName = "remote_controller_icon.png";

				if (rowData.pid == CommonTypeEnum.RemoteControllerType.SEESAW) {
					deviceImageName = "remote_controller_seesaw.png";
					remoteDeivce = strings.common_remote_control_seesaw;
				} else if (rowData.pid == CommonTypeEnum.RemoteControllerType.BHFRC) {
					deviceImageName = "remote_controller_bhf.png";
					remoteDeivce = strings.common_remote_control_auster;
				} else if (rowData.pid == CommonTypeEnum.RemoteControllerType.VENFAN) {
					deviceImageName = "remote_controller_fan.png";
					remoteDeivce = strings.common_remote_control;
				} else if (rowData.pid == CommonTypeEnum.RemoteControllerType.FANCL) {
					deviceImageName = "remote_controller_fancl.png";
					remoteDeivce = strings.common_remote_control;
				}

				return _react2.default.createElement(
					_reactNative.TouchableHighlight,
					{
						underlayColor: "transparent",
						activeOpacity: 0.6,
						onPress: function onPress() {
							return _this3._pressRow(rowData);
						},
						onLongPress: function onLongPress() {
							return _this3._longPressRow(rowData);
						}
					},
					_react2.default.createElement(
						_reactNative.View,
						null,
						_react2.default.createElement(
							_reactNative.View,
							{
								style: styles.rowContainer
							},
							_react2.default.createElement(CLImage, {
								imagePath: deviceImageName,
								style: styles.cellImage
							}),
							_react2.default.createElement(
								_reactNative.View,
								{
									style: {
										flex: 1,
										justifyContent: 'center',
										alignItems: 'flex-start'
									}
								},
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.cellTitle
									},
									remoteDeivce + " " + (rowData.index == -1 ? "" : parseInt(rowData.index) + 1)
								),
								_react2.default.createElement(
									_reactNative.Text,
									{
										style: styles.cellSubtitle
									},
									strings.common_remote_control_mac_address + " (" + rowData.mac + ")"
								)
							)
						),
						_react2.default.createElement(_reactNative.View, {
							style: styles.separator
						})
					)
				);
			}
		}, {
			key: "_pressRow",
			value: function _pressRow(rowData) {
				return;
			}
		}, {
			key: "_deleteRemoteController",
			value: function _deleteRemoteController(remoteController) {
				var _this4 = this;

				Api.deleteRemoteControllerList(remoteController.mac, remoteController.evtid, remoteController.pid, function (isSuccess, response) {
					if (isSuccess) {
						YLUI.showFinishTips(strings.common_text_deleted);

						var index = _this4.data.findIndex(function (item) {
							return item.mac === remoteController.mac;
						});

						_this4.data.splice(index, 1);

						var ds = _this4.ds.cloneWithRows(_this4.data);

						_this4.setState({
							dataSource: ds
						});
					} else {
						YLUI.showFailTips(strings.common_text_fail_ios);
					}
				});
			}
		}, {
			key: "_longPressRow",
			value: function _longPressRow(rowData) {
				var _this5 = this;

				CLAlert.alert(null, strings.common_text_unpaired, [{
					text: strings.common_dialog_cancel,
					onPress: function onPress() {}
				}, {
					text: strings.common_dialog_ok,
					onPress: function onPress() {
						_this5._deleteRemoteController(rowData);
					}
				}]);
			}
		}, {
			key: "_renderSectionHeader",
			value: function _renderSectionHeader() {
				return _react2.default.createElement(_reactNative.View, {
					style: styles.section
				});
			}
		}, {
			key: "_getRemoteControlList",
			value: function _getRemoteControlList() {
				var _this6 = this;

				Api.getRemoteControlList(function (response, remoteControlListReturn) {
					if (response) {
						var result = remoteControlListReturn;

						if (result.length > 0) {
							var index;
							result = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.BLERC || item.pid == CommonTypeEnum.RemoteControllerType.SEESAW || item.pid == CommonTypeEnum.RemoteControllerType.BHFRC || item.pid == CommonTypeEnum.RemoteControllerType.VENFAN || item.pid == CommonTypeEnum.RemoteControllerType.FANCL;
							});
							var blercs = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.BLERC;
							});
							var seesaws = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.SEESAW;
							});
							var bhfs = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.BHFRC;
							});
							var vfans = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.VENFAN;
							});
							var fancls = result.filter(function (item) {
								return item.pid == CommonTypeEnum.RemoteControllerType.FANCL;
							});

							for (index in result) {
								var item = result[index];

								if (item.pid === CommonTypeEnum.RemoteControllerType.SEESAW) {
									if (seesaws.length == 1) {
										item.index = -1;
									} else {
										item.index = seesaws.indexOf(item);
									}
								} else if (item.pid === CommonTypeEnum.RemoteControllerType.BHFRC) {
									if (bhfs.length == 1) {
										item.index = -1;
									} else {
										item.index = bhfs.indexOf(item);
									}
								} else if (item.pid === CommonTypeEnum.RemoteControllerType.VENFAN) {
									if (vfans.length == 1) {
										item.index = -1;
									} else {
										item.index = vfans.indexOf(item);
									}
								} else if (item.pid === CommonTypeEnum.RemoteControllerType.FANCL) {
									if (fancls.length == 1) {
										item.index = -1;
									} else {
										item.index = fancls.indexOf(item);
									}
								} else {
									if (blercs.length == 1) {
										item.index = -1;
									} else {
										item.index = blercs.indexOf(item);
									}
								}

								var macTemp = _this6._getRealMacFromReverse(item.mac);

								item.mac = macTemp.toUpperCase();
							}

							var ds = _this6.ds.cloneWithRows(result);

							_this6.data = result;

							_this6.setState({
								dataSource: ds,
								isFinishFetchList: true
							});
						} else {
							_this6.setState({
								isFinishFetchList: true
							});
						}
					} else {
						_this6.setState({
							isFinishFetchList: true
						});
					}
				});
			}
		}, {
			key: "_getRealMacFromReverse",
			value: function _getRealMacFromReverse(reverseMac) {
				var reverseMacArray = reverseMac.match(/.{1,2}/g);
				var realMac = reverseMacArray.reverse();
				return realMac.join(':');
			}
		}]);
		return RemoteControlListPage;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		fullContainer: {
			flex: 1,
			flexDirection: 'row',
			justifyContent: 'center',
			alignItems: 'center',
			backgroundColor: '#ffffff'
		},
		image: {
			width: width,
			height: height
		},
		container: {
			flex: 1,
			flexDirection: 'column',
			justifyContent: 'center',
			alignItems: 'center',
			backgroundColor: '#ffffff',
			marginBottom: 0,
			marginTop: 0
		},
		list: {
			alignSelf: 'stretch',
			flex: 1,
			marginTop: 0
		},
		section: {
			backgroundColor: 'transparent',
			padding: 0
		},
		separator: {
			height: 1,
			backgroundColor: "#dddddd",
			width: width
		},
		rowContainer: {
			flexDirection: 'row',
			alignSelf: 'stretch',
			paddingTop: 10,
			paddingBottom: 10,
			backgroundColor: '#fff'
		},
		title: {
			fontSize: 17,
			alignItems: 'center',
			flex: 1,
			marginLeft: 12,
			marginTop: 19
		},
		cellTitle: {
			fontFamily: 'PingFangSC-Light',
			color: '#333333',
			fontSize: 15
		},
		cellSubtitle: {
			fontFamily: 'PingFangSC-Light',
			color: '#666666',
			fontSize: 12
		},
		cellImage: {
			height: 64,
			width: 64,
			marginLeft: 17
		},
		noTip: {
			height: 111,
			width: 62,
			marginBottom: 16
		},
		subArrow: {
			width: 9,
			height: 18,
			marginTop: 19,
			marginRight: 12
		},
		noTipText: {
			color: "#aeaeae"
		},
		howBindRemoteContainer: {
			position: 'absolute',
			bottom: 25,
			left: 0,
			height: 30,
			right: 0
		},
		howBindRemoteText: {
			textAlign: 'center',
			color: "#5ead2f",
			textDecorationLine: 'underline'
		}
	});

	var route = {
		component: RemoteControlListPage,
		isNavigationBarHidden: false,
		navigationBarStyle: null,
		title: strings.common_remote_control_and_switch_title,
		barStyle: "dark-content",
		isNavigationBarRightButtonHidden: false,
		navLeftButtonStyle: {
			tintColor: "#000000"
		},
		passRouteProps: {
			insetForNavigator: {
				top: 44
			}
		}
	};
	module.exports = {
		component: RemoteControlListPage,
		route: route
	};
},11033,[10297,10033,10429,10007,10448],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/RemoteControlListPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var strings = _require(_dependencyMap[3]);

  var MibandBroadcastTipPage = _require(_dependencyMap[4]);

  var API = _require(_dependencyMap[5]);

  var CommonYeelightModules = _require(_dependencyMap[6]);

  var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
  var MibandAttachedPageDataSource = CommonYeelightModulesDataSource.MibandAttachedPageDataSource;
  var Theme = CommonYeelightModules.Theme,
      LoadingEffect = CommonYeelightModules.LoadingEffect,
      BaseReactComponent = CommonYeelightModules.BaseReactComponent,
      YLSwitch = CommonYeelightModules.YLSwitch,
      CLAlert = CommonYeelightModules.CLAlert,
      CLImage = CommonYeelightModules.CLImage;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var mibandAttachedPageDataSource = new MibandAttachedPageDataSource();

  var MibandAttachedPage = function (_BaseReactComponent) {
    babelHelpers.inherits(MibandAttachedPage, _BaseReactComponent);

    function MibandAttachedPage(props) {
      babelHelpers.classCallCheck(this, MibandAttachedPage);

      var _this = babelHelpers.possibleConstructorReturn(this, (MibandAttachedPage.__proto__ || Object.getPrototypeOf(MibandAttachedPage)).call(this, props));

      _this.state = {
        hasGotMibandSleepFromCloud: false,
        hasGotMibandListFromCloud: false,
        enableMibandSleep: false,
        mibandAttachedList: new Array(),
        loadingAnimate: new _reactNative.Animated.Value(1),
        loading: true
      };
      return _this;
    }

    babelHelpers.createClass(MibandAttachedPage, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.getMibandBindInfo();
      }
    }, {
      key: "getMibandBindInfo",
      value: function getMibandBindInfo() {
        var _this2 = this;

        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._showLoading();

        setTimeout(function () {
          API.getMibandSleep(function (response, returnValue) {
            if (response) {
              var enableSleep = false;

              if (0 == returnValue.result) {
                enableSleep = false;
              } else {
                enableSleep = true;
              }

              _this2.setState({
                enableMibandSleep: enableSleep,
                hasGotMibandSleepFromCloud: true
              });
            }
          });
          API.getMibandList(function (response, returnValue) {
            _this2._dismissLoading();

            if (response) {
              _this2.setState({
                mibandAttachedList: returnValue,
                hasGotMibandListFromCloud: true
              });
            } else {
              _this2.setState({
                mibandAttachedList: {},
                hasGotMibandListFromCloud: true
              });
            }
          });
        }, delay);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.subscription = _reactNative.DeviceEventEmitter.addListener("FetchMibandBindInfo", function (data) {
          var delay = data ? data.delay : 0;

          _this3.getMibandBindInfo(delay);
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.removeObserver();
      }
    }, {
      key: "removeObserver",
      value: function removeObserver() {
        if (this.subscription) {
          this.subscription.remove();
        }
      }
    }, {
      key: "_getMibandSleepSwitchIsOn",
      value: function _getMibandSleepSwitchIsOn() {
        if (!this.state.hasGotMibandSleepFromCloud || !this._hasBindMiband()) {
          return false;
        } else {
          return this.state.enableMibandSleep;
        }
      }
    }, {
      key: "_getUnbindButtonTitle",
      value: function _getUnbindButtonTitle() {
        if (!this._hasBindMiband()) {
          return strings.common_miband_pair;
        } else {
          return strings.common_miband_unpair;
        }
      }
    }, {
      key: "_hasBindMiband",
      value: function _hasBindMiband() {
        return this.state.hasGotMibandListFromCloud && this.state.mibandAttachedList.length > 0;
      }
    }, {
      key: "_enableMibandSleepSwitch",
      value: function _enableMibandSleepSwitch() {
        if (!this.state.hasGotMibandSleepFromCloud) {
          return false;
        } else if (this.state.mibandAttachedList.length > 0) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.container
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.background]
            },
            _react2.default.createElement(CLImage, {
              imagePath: 'global_background.png',
              style: [styles.imageBackground, {
                opacity: 1.0
              }]
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.content
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: 4,
                style: styles.topTip
              },
              this._hasBindMiband() ? strings.common_miband_have_pair_tips : strings.common_miband_will_pair_tips
            ),
            _react2.default.createElement(CLImage, {
              imagePath: mibandAttachedPageDataSource.getControlLargeIcon,
              style: [styles.tipImage, {
                opacity: 1.0
              }]
            }),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.bottomView
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: {
                    flex: 1,
                    marginBottom: Theme.APPBAR_MARGINBottom
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  {
                    style: styles.bottomTitle
                  },
                  strings.common_text_setting
                ),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.bottomFirstView
                  },
                  _react2.default.createElement(_reactNative.View, {
                    style: styles.bottomCellSeperator
                  }),
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      numberOfLines: 1,
                      style: styles.bottomCellText
                    },
                    strings.common_miband_bind_autoclose
                  ),
                  _react2.default.createElement(YLSwitch, {
                    style: styles.switch,
                    disabled: !this._hasBindMiband(),
                    onValueChange: function onValueChange(value) {
                      return _this4._toggleAutoSleep(value);
                    },
                    value: this._getMibandSleepSwitchIsOn(),
                    onTintColor: "#1dc58a"
                  })
                ),
                _react2.default.createElement(
                  _reactNative.TouchableHighlight,
                  {
                    underlayColor: "transparent",
                    disabled: !this.state.hasGotMibandListFromCloud,
                    style: styles.bottomSecondView,
                    onPress: function onPress() {
                      return _this4._gotoBindMiband();
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    {
                      style: styles.bottomSecondContainer
                    },
                    _react2.default.createElement(_reactNative.View, {
                      style: styles.bottomCellSeperator
                    }),
                    _react2.default.createElement(
                      _reactNative.Text,
                      {
                        numberOfLines: 1,
                        style: styles.bottomCellText
                      },
                      this._getUnbindButtonTitle()
                    ),
                    _react2.default.createElement(CLImage, {
                      imagePath: "sub_arrow.png",
                      style: styles.subArrow
                    })
                  )
                ),
                _react2.default.createElement(_reactNative.View, {
                  style: styles.bottomSeperator
                })
              )
            )
          ),
          _react2.default.createElement(LoadingEffect, {
            text: strings.common_miband_updating,
            show: this.state.loading,
            opacity: this.state.loadingAnimate
          })
        );
      }
    }, {
      key: "_toggleAutoSleep",
      value: function _toggleAutoSleep(value) {
        var _this5 = this;

        var preValue = this.state.enableMibandSleep;
        this.setState({
          enableMibandSleep: value
        });
        API.enableMibandSleep(value, function (response, returnValue) {
          if (response) {} else {
            _this5.setState({
              enableMibandSleep: preValue
            });
          }
        });
      }
    }, {
      key: "_gotoBindMiband",
      value: function _gotoBindMiband() {
        var _this6 = this;

        if (this._hasBindMiband()) {
          CLAlert.alert(strings.common_text_unpaired, strings.common_miband_unpair_tips, [{
            text: strings.common_dialog_cancel,
            onPress: function onPress() {}
          }, {
            text: strings.common_dialog_ok,
            onPress: function onPress(value) {
              _this6.props.navigation.pop();

              _this6.removeObserver();

              _this6._unbindMiband();
            }
          }]);
        } else {
          this.props.navigation.push(babelHelpers.extends({
            title: ''
          }, MibandBroadcastTipPage.route, {
            passProps: {}
          }));
        }
      }
    }, {
      key: "_getRealMacFromReverse",
      value: function _getRealMacFromReverse(reverseMac) {
        var reverseMacArray = reverseMac.match(/.{1,2}/g);
        var realMac = reverseMacArray.reverse();
        return realMac.join(':');
      }
    }, {
      key: "_unbindMiband",
      value: function _unbindMiband() {
        if (!this._hasBindMiband()) {
          return;
        }

        var mibandItem = this.state.mibandAttachedList[0];

        var realMac = this._getRealMacFromReverse(mibandItem.mac);

        API.unbindMiband(realMac, mibandItem.evtid, mibandItem.pid, function (isSuccess, response) {
          if (isSuccess) {
            _reactNative.DeviceEventEmitter.emit('FetchMibandBindInfo', null);
          }
        });
      }
    }, {
      key: "_dismissLoading",
      value: function _dismissLoading() {
        var _this7 = this;

        if (this.state.loading) {
          _reactNative.Animated.timing(this.state.loadingAnimate, {
            toValue: 0,
            duration: 400,
            delay: 200
          }).start(function () {
            _this7.setState({
              loading: false
            });
          });
        }
      }
    }, {
      key: "_showLoading",
      value: function _showLoading() {
        var _this8 = this;

        if (!this.state.loading) {
          _reactNative.Animated.timing(this.state.loadingAnimate, {
            toValue: 1,
            duration: 400,
            delay: 200
          }).start(function () {
            _this8.setState({
              loading: true
            });
          });
        }
      }
    }]);
    return MibandAttachedPage;
  }(BaseReactComponent);

  var topTipToTop = 16;
  var topTipHeight = 18;
  var ratio = Theme.ratio;
  var bottomCellViewHeight = 40 * ratio;
  var middleTipTopDistance = 60;
  var bottomViewHeight = 160;

  if (width == 320) {
    middleTipTopDistance = 30;
    bottomViewHeight = 160;
    bottomCellViewHeight = 40;
  } else if (width == 375) {
    middleTipTopDistance = 90;
    bottomViewHeight = 160;
    bottomCellViewHeight = 40;
  } else if (width >= 414) {
    middleTipTopDistance = 110;
    bottomViewHeight = 160 * ratio;
    bottomCellViewHeight = 40 * ratio;
  }

  var bottomSecondViewDistanceToBottom = 20;
  var tipImageHeight = 269 * ratio;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center'
    },
    content: {
      position: 'absolute',
      left: 0,
      top: 64,
      bottom: 0,
      width: width,
      backgroundColor: 'transparent'
    },
    topTip: {
      top: topTipToTop + 4,
      justifyContent: 'center',
      fontSize: 16 * ratio,
      color: '#rgba(255, 255, 255, 0.6)',
      backgroundColor: 'transparent',
      textAlign: 'center',
      marginLeft: 16,
      marginRight: 16
    },
    background: {
      top: 0,
      position: 'absolute',
      width: width,
      height: height
    },
    imageBackground: {
      position: 'absolute',
      width: width,
      height: height,
      opacity: 0.8,
      backgroundColor: 'transparent'
    },
    tipImage: {
      position: 'absolute',
      top: topTipToTop + topTipHeight + 40 * ratio + (Theme.isIPhoneX ? 72.5 : 0),
      height: tipImageHeight,
      width: width,
      left: 0,
      right: 0,
      backgroundColor: 'transparent',
      resizeMode: 'contain'
    },
    middleTip: {
      position: 'absolute',
      top: topTipToTop + topTipHeight + tipImageHeight + middleTipTopDistance,
      left: 40,
      right: 40,
      height: 40,
      color: '#rgba(255, 255, 255, 0.7)',
      fontSize: 12 * ratio,
      textAlign: 'center',
      backgroundColor: 'transparent'
    },
    bottomView: {
      position: 'absolute',
      bottom: 0,
      height: bottomViewHeight + Theme.APPBAR_MARGINBottom,
      left: 0,
      right: 0,
      backgroundColor: '#ffffff'
    },
    bottomTitle: {
      position: 'absolute',
      bottom: bottomCellViewHeight * 2 + bottomSecondViewDistanceToBottom + 10,
      height: 20,
      left: 0,
      right: 0,
      textAlign: 'center',
      backgroundColor: 'transparent',
      color: '#rgba(0, 0, 0, 0.8)'
    },
    bottomFirstView: {
      position: 'absolute',
      bottom: bottomCellViewHeight + bottomSecondViewDistanceToBottom,
      height: bottomCellViewHeight,
      left: 0,
      right: 0,
      backgroundColor: 'transparent',
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      flexDirection: 'row',
      width: width
    },
    bottomSecondView: {
      position: 'absolute',
      bottom: bottomSecondViewDistanceToBottom,
      height: bottomCellViewHeight,
      left: 0,
      right: 0,
      backgroundColor: 'transparent',
      flexDirection: 'row',
      width: width
    },
    bottomSecondContainer: {
      alignSelf: 'stretch',
      flex: 1,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center',
      flexDirection: 'row'
    },
    bottomCellText: {
      marginLeft: 20,
      marginRight: 6,
      textAlign: 'left',
      backgroundColor: 'transparent',
      color: '#rgba(0, 0, 0, 0.8)',
      flex: 1,
      fontSize: 14 * ratio
    },
    bottomCellSeperator: {
      position: 'absolute',
      top: 0,
      height: 1,
      left: 20,
      right: 20,
      backgroundColor: '#f2f2f2'
    },
    bottomSeperator: {
      position: 'absolute',
      bottom: bottomSecondViewDistanceToBottom,
      height: 1,
      left: 0,
      right: 0,
      backgroundColor: '#f2f2f2'
    },
    subArrow: {
      width: 9,
      height: 18,
      marginRight: 20
    },
    switch: {
      marginRight: 20
    }
  });

  var route = {
    component: MibandAttachedPage,
    isNavigationBarHidden: false,
    navigationBarStyle: {
      backgroundColor: "transparent"
    },
    title: strings.common_text_miband,
    navTitleStyle: {
      color: "#ffffff"
    },
    barStyle: "light-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#ffffff"
    }
  };
  module.exports = {
    component: MibandAttachedPage,
    route: route
  };
},11036,[10297,10033,10429,10490,11039,10553,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/Miband/MibandAttachedPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var strings = _require(_dependencyMap[2]);

  var Dimensions = _require(_dependencyMap[3]);

  var MibandSearchPage = _require(_dependencyMap[4]);

  var CommonYeelightModules = _require(_dependencyMap[5]);

  var Theme = CommonYeelightModules.Theme,
      CLImage = CommonYeelightModules.CLImage;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var MibandBroadcastTipPage = function (_Component) {
    babelHelpers.inherits(MibandBroadcastTipPage, _Component);

    function MibandBroadcastTipPage(props) {
      babelHelpers.classCallCheck(this, MibandBroadcastTipPage);
      return babelHelpers.possibleConstructorReturn(this, (MibandBroadcastTipPage.__proto__ || Object.getPrototypeOf(MibandBroadcastTipPage)).call(this, props));
    }

    babelHelpers.createClass(MibandBroadcastTipPage, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.container
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.background]
            },
            _react2.default.createElement(CLImage, {
              imagePath: 'global_background.png',
              style: [styles.imageBackground, {
                opacity: 1.0
              }]
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.content
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: 3,
                style: styles.title
              },
              strings.common_miband_reopen_broadcast
            ),
            _react2.default.createElement(CLImage, {
              imagePath: strings.miband_broadcast_main,
              style: [styles.tipImage, {
                opacity: 1.0
              }]
            }),
            _react2.default.createElement(
              _reactNative.TouchableHighlight,
              {
                style: styles.submit,
                onPress: function onPress() {
                  return _this2.gotoMibandSearch();
                },
                underlayColor: "transparent"
              },
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 1,
                  style: [styles.submitText]
                },
                strings.common_miband_reopen_broadcast_ok
              )
            )
          )
        );
      }
    }, {
      key: "gotoMibandSearch",
      value: function gotoMibandSearch() {
        this.props.navigation.push(babelHelpers.extends({
          title: ''
        }, MibandSearchPage.route, {
          passProps: {}
        }));
      }
    }]);
    return MibandBroadcastTipPage;
  }(_react.Component);

  var ratio = Theme.ratio;
  var topTipToTop = 16;
  var topTipHeight = 18;

  if (width == 320) {
    topTipToTop = 6;
  } else if (width == 375) {
    topTipToTop = 16;
  } else if (width >= 414) {
    topTipToTop = 16;
  }

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center'
    },
    title: {
      top: 0,
      justifyContent: 'center',
      fontSize: 16 * ratio,
      marginLeft: 16 * ratio,
      marginRight: 16 * ratio,
      color: '#rgba(255, 255, 255, 1.0)',
      backgroundColor: 'transparent',
      textAlign: 'center'
    },
    background: {
      top: 0,
      position: 'absolute',
      width: width,
      height: height,
      alignItems: 'center',
      justifyContent: 'center'
    },
    imageBackground: {
      position: 'absolute',
      top: 0,
      width: width,
      height: height,
      opacity: 0.8,
      backgroundColor: 'transparent'
    },
    content: {
      position: 'absolute',
      left: 0,
      top: (Theme.APPBAR_MARGINTOP + 60) * ratio,
      bottom: 0,
      width: width,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    tipImage: {
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 16 * ratio,
      width: 260 * ratio,
      height: 449.97333333333336 * ratio,
      backgroundColor: 'transparent',
      resizeMode: 'contain'
    },
    submit: {
      marginTop: 16 * ratio,
      marginBottom: 10 * ratio,
      marginLeft: 40 * ratio,
      marginRight: 40 * ratio,
      height: 42 * ratio,
      borderRadius: 21 * ratio,
      borderWidth: 1,
      borderColor: '#rgba(255, 255, 255, 0.6)',
      alignItems: 'center',
      justifyContent: 'center',
      alignSelf: 'stretch'
    },
    submitText: {
      color: '#fff',
      textAlign: 'center',
      backgroundColor: 'transparent',
      marginLeft: 10 * ratio,
      marginRight: 10 * ratio,
      fontSize: 14 * ratio
    }
  });

  var route = {
    component: MibandBroadcastTipPage,
    isNavigationBarHidden: false,
    navigationBarStyle: {
      backgroundColor: "transparent"
    },
    title: null,
    navTitleStyle: {
      color: "#ffffff"
    },
    barStyle: "light-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#ffffff"
    }
  };
  module.exports = {
    component: MibandBroadcastTipPage,
    route: route
  };
},11039,[10297,10033,10490,10429,11042,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/Miband/MibandBroadcastTipPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var strings = _require(_dependencyMap[2]);

  var Dimensions = _require(_dependencyMap[3]);

  var MibandSearchManager = _require(_dependencyMap[4]);

  var CommonYeelightModules = _require(_dependencyMap[5]);

  var SearchState = {
    searching: 'searching',
    notFound: 'notFound',
    hasFound: 'hasFound',
    bindFail: 'bindFail',
    bindSuccess: 'bindSuccess'
  };
  var SearchMibandErrorCode = {
    success: 'success',
    bluetoothNotOn: 'bluetoothNotOn',
    notFound: 'notFound'
  };
  var Theme = CommonYeelightModules.Theme,
      CLAlert = CommonYeelightModules.CLAlert,
      CLImage = CommonYeelightModules.CLImage;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var AnimatedCLImage = _reactNative.Animated.createAnimatedComponent(CLImage);

  var MibandSearchPage = function (_Component) {
    babelHelpers.inherits(MibandSearchPage, _Component);

    function MibandSearchPage(props) {
      babelHelpers.classCallCheck(this, MibandSearchPage);

      var _this = babelHelpers.possibleConstructorReturn(this, (MibandSearchPage.__proto__ || Object.getPrototypeOf(MibandSearchPage)).call(this, props));

      _this.state = {
        rotateValue: new _reactNative.Animated.Value(0),
        searchState: SearchState.notFound,
        macAddress: ''
      };
      return _this;
    }

    babelHelpers.createClass(MibandSearchPage, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this.setState({
          searchState: SearchState.notFound
        });
        this.scanMibands();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnimation();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        MibandSearchManager.disconnectMibands();
        clearTimeout(this.getMacAddressTimer);
      }
    }, {
      key: "handleSearchErrorCode",
      value: function handleSearchErrorCode(error) {
        if (error == SearchMibandErrorCode.bluetoothNotOn) {
          clearTimeout(this.getMacAddressTimer);
          this.setState({
            searchState: SearchState.notFound
          });
        } else {}
      }
    }, {
      key: "bindMiband",
      value: function bindMiband() {
        MibandSearchManager.bindMibandByMacAddress(this.state.macAddress);

        _reactNative.DeviceEventEmitter.emit('FetchMibandBindInfo', {
          delay: 500
        });

        var navigation = this.props.navigation;

        if (navigation.hasOwnProperty('getCurrentRoutes') && navigation.hasOwnProperty('popToRoute')) {
          var routes = this.props.navigation.getCurrentRoutes();

          if (routes.length > 2) {
            var jumpToRoute = routes[routes.length - 2 - 1];
            this.props.navigation.popToRoute(jumpToRoute);
          } else {
            this.props.navigation.pop();
          }
        } else {
          this.props.navigation.pop(2);
        }
      }
    }, {
      key: "showBindTip",
      value: function showBindTip() {
        var _this2 = this;

        CLAlert.alert(strings.common_miband_shake_ios, '', [{
          text: strings.common_miband_alter_no_ios,
          onPress: function onPress() {
            _this2.setState({
              searchState: SearchState.bindFail
            });
          }
        }, {
          text: strings.common_miband_alter_yes_ios,
          onPress: function onPress() {
            _this2.bindMiband();
          }
        }]);
      }
    }, {
      key: "getMacAddress",
      value: function getMacAddress() {
        clearTimeout(this.getMacAddressTimer);
        var macAddress = MibandSearchManager.getConnectedMibandsAddress();

        if (null != macAddress) {
          MibandSearchManager.shakeMibandByMacAddress(macAddress);
          this.setState({
            searchState: SearchState.hasFound,
            macAddress: macAddress
          });
          this.showBindTip();
        } else {
          this.setState({
            searchState: SearchState.notFound
          });
        }
      }
    }, {
      key: "scanMibands",
      value: function scanMibands() {
        var _this3 = this;

        this.getMacAddressTimer = setTimeout(function () {
          return _this3.getMacAddress();
        }, 30000);
        this.setState({
          searchState: SearchState.searching
        });
        this.startAnimation();
        var realThis = this;
        MibandSearchManager.scanMibands().then(function (macAddress) {
          clearTimeout(_this3.getMacAddressTimer);
          realThis.setState({
            searchState: SearchState.hasFound,
            macAddress: macAddress
          });

          _this3.showBindTip();
        }, function (error) {
          realThis.handleSearchErrorCode(error.message);
        }).catch(function (error) {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var centerTipView = _react2.default.createElement(_reactNative.View, null);

        var bottomButton = _react2.default.createElement(_reactNative.View, null);

        var title;
        var tip;

        var rotatingView = _react2.default.createElement(_reactNative.View, null);

        if (SearchState.hasFound == this.state.searchState) {
          centerTipView = _react2.default.createElement(CLImage, {
            imagePath: 'miband_shake.png',
            style: [styles.centerBandImage, {
              opacity: 1.0
            }]
          });
          title = strings.common_miband_found;
          tip = strings.common_miband_pairing_ios;
        } else if (SearchState.bindFail == this.state.searchState) {
          centerTipView = _react2.default.createElement(CLImage, {
            imagePath: 'miband_shake.png',
            style: [styles.centerBandImage, {
              opacity: 1.0
            }]
          });
          bottomButton = _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              style: styles.submit,
              onPress: function onPress() {
                return _this4.researchMiband();
              },
              underlayColor: "transparent"
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: [styles.submitText]
              },
              strings.common_miband_search_retry
            )
          );
          title = strings.common_miband_pair_fail_ios;
          tip = strings.common_miband_search_tip;
        } else if (SearchState.searching == this.state.searchState) {
          centerTipView = _react2.default.createElement(CLImage, {
            imagePath: 'miband_band.png',
            style: [styles.centerLoadingImage, {
              opacity: 1.0
            }]
          });
          title = strings.common_miband_search_title;
          tip = strings.common_miband_search_tip;
          rotatingView = _react2.default.createElement(AnimatedCLImage, {
            style: [styles.rotate, {
              opacity: 1.0,
              transform: [{
                rotate: this.state.rotateValue.interpolate({
                  inputRange: [0, 1],
                  outputRange: ['0deg', '360deg']
                })
              }]
            }],
            imagePath: 'miband_search_loading.png'
          });
        } else if (SearchState.notFound == this.state.searchState) {
          centerTipView = _react2.default.createElement(CLImage, {
            imagePath: 'MibandNotFound.png',
            style: [styles.centerLoadingImage, {
              opacity: 1.0
            }]
          });
          bottomButton = _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              style: styles.submit,
              onPress: function onPress() {
                return _this4.researchMiband();
              },
              underlayColor: "transparent"
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                style: [styles.submitText]
              },
              strings.common_miband_search_retry
            )
          );
          title = strings.common_miband_search_notfound;
          tip = strings.common_miband_search_tip;
          rotatingView = _react2.default.createElement(_reactNative.View, {
            style: styles.circleBorder
          });
        }

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.container
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.background]
            },
            _react2.default.createElement(CLImage, {
              imagePath: 'global_background.png',
              style: [styles.imageBackground, {
                opacity: 1.0
              }]
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.content
            },
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: 2,
                style: styles.title
              },
              title
            ),
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: 3,
                style: styles.tip
              },
              tip
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.background
            },
            rotatingView
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.background
            },
            centerTipView
          ),
          bottomButton
        );
      }
    }, {
      key: "researchMiband",
      value: function researchMiband() {
        if (SearchState.searching != this.state.searchState) {
          this.scanMibands();
        } else {
          this.setState({
            searchState: SearchState.notFound
          });
          this.state.rotateValue.stopAnimation();
        }
      }
    }, {
      key: "startAnimation",
      value: function startAnimation() {
        var _this5 = this;

        if (SearchState.searching != this.state.searchState) {
          return;
        }

        this.state.rotateValue.setValue(0);

        _reactNative.Animated.timing(this.state.rotateValue, {
          toValue: 1,
          duration: 800,
          easing: _reactNative.Easing.linear
        }).start(function () {
          return _this5.startAnimation();
        });
      }
    }]);
    return MibandSearchPage;
  }(_react.Component);

  var titleToTop = 16;
  var titleHeight = 24;
  var ratio = Theme.ratio;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center'
    },
    background: {
      top: 0,
      position: 'absolute',
      width: width,
      height: height,
      alignItems: 'center',
      justifyContent: 'center'
    },
    imageBackground: {
      position: 'absolute',
      top: 0,
      width: width,
      height: height,
      opacity: 0.8,
      backgroundColor: 'transparent'
    },
    content: {
      position: 'absolute',
      left: 0,
      top: 64,
      bottom: 0,
      width: width,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    title: {
      marginTop: titleToTop,
      justifyContent: 'center',
      fontSize: titleHeight * ratio,
      marginLeft: 20 * ratio,
      marginRight: 20 * ratio,
      color: '#rgba(255, 255, 255, 1.0)',
      backgroundColor: 'transparent',
      textAlign: 'center',
      fontWeight: 'bold'
    },
    tip: {
      marginTop: 20 * ratio,
      justifyContent: 'center',
      fontSize: 14 * ratio,
      marginLeft: 20,
      marginRight: 20,
      color: '#rgba(255, 255, 255, 0.6)',
      backgroundColor: 'transparent',
      textAlign: 'center'
    },
    submit: {
      bottom: 40,
      left: 40,
      right: 40,
      height: 42,
      borderRadius: 21,
      borderWidth: 1,
      borderColor: '#rgba(255, 255, 255, 0.6)',
      position: 'absolute',
      alignItems: 'center',
      justifyContent: 'center'
    },
    submitText: {
      color: '#fff',
      textAlign: 'center',
      backgroundColor: 'transparent'
    },
    rotate: {
      alignItems: 'center',
      justifyContent: 'center',
      width: 220,
      height: 220 * ratio,
      backgroundColor: 'transparent',
      resizeMode: 'contain'
    },
    centerNotFoundImage: {
      alignItems: 'center',
      justifyContent: 'center',
      width: 55,
      height: 55 * ratio,
      backgroundColor: 'transparent',
      resizeMode: 'contain'
    },
    centerLoadingImage: {
      alignItems: 'center',
      justifyContent: 'center',
      width: 110,
      height: 43 * ratio,
      backgroundColor: 'transparent',
      resizeMode: 'contain'
    },
    centerBandImage: {
      alignItems: 'center',
      justifyContent: 'center',
      width: 150,
      height: 350 * ratio,
      backgroundColor: 'transparent',
      resizeMode: 'stretch'
    },
    circleBorder: {
      alignItems: 'center',
      justifyContent: 'center',
      width: 220 * ratio * 0.95,
      height: 220 * ratio * 0.95,
      backgroundColor: 'transparent',
      borderColor: '#ffffff60',
      borderWidth: 1.5,
      borderRadius: 220 * ratio / 2 * 0.95
    }
  });

  var route = {
    component: MibandSearchPage,
    isNavigationBarHidden: false,
    navigationBarStyle: {
      backgroundColor: "transparent"
    },
    title: null,
    navTitleStyle: {
      color: "#ffffff"
    },
    barStyle: "light-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#ffffff"
    }
  };
  module.exports = {
    component: MibandSearchPage,
    route: route
  };
},11042,[10297,10033,10490,10429,10574,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/Miband/MibandSearchPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var EventEmitter = _require(_dependencyMap[2]);

    var CommonYeelightModules = _require(_dependencyMap[3]);

    var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
    var strings = CommonYeelightModules.strings,
        BaseReactComponent = CommonYeelightModules.BaseReactComponent,
        Theme = CommonYeelightModules.Theme,
        YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
        YLListViewType = CommonYeelightModules.YLListViewType,
        CLSwitch = CommonYeelightModules.CLSwitch,
        CLImage = CommonYeelightModules.CLImage,
        YLPackageEvent = CommonYeelightModules.YLPackageEvent,
        Theme = CommonYeelightModules.Theme,
        Cloud = CommonYeelightModules.Cloud,
        YLDevice = CommonYeelightModules.YLDevice,
        ResourcesManager = CommonYeelightModules.ResourcesManager,
        CLSeparator = CommonYeelightModules.CLSeparator,
        CLListItem = CommonYeelightModules.CLListItem,
        CLListItemWithSwitch = CommonYeelightModules.CLListItemWithSwitch,
        CLStyles = CommonYeelightModules.CLStyles,
        CLCommonSetting = CommonYeelightModules.CLCommonSetting;
    var SettingMenuDataSource = CommonYeelightModulesDataSource.SettingMenuDataSource;
    var YLListViewCellAccessoryType = YLListViewType.YLListViewCellAccessoryType;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var ratio = Theme.ratio;

    var SettingMenu = function (_BaseReactComponent) {
        babelHelpers.inherits(SettingMenu, _BaseReactComponent);

        function SettingMenu(props) {
            babelHelpers.classCallCheck(this, SettingMenu);

            var _this = babelHelpers.possibleConstructorReturn(this, (SettingMenu.__proto__ || Object.getPrototypeOf(SettingMenu)).call(this, props));

            _this.state = {
                dataSource: _this.getDataSource()
            };
            return _this;
        }

        babelHelpers.createClass(SettingMenu, [{
            key: "componentWillMount",
            value: function componentWillMount() {
                var _this2 = this;

                this._viewWillAppearListener = YLPackageEvent.packageViewWillAppear(function () {
                    _this2.componentDataSource._checkFirmwareVersion();
                });
                this.eventEmitter = new EventEmitter();
                this.componentDataSource.addObserver();
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.requestData();
                this.componentDataSource.readData();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.componentDataSource.clearComponentOwner();
                this.componentDataSource.removeObserver();
                this._viewWillAppearListener && this._viewWillAppearListener.remove();
            }
        }, {
            key: "forInternational",
            value: function forInternational() {
                return this.componentDataSource.forInternational();
            }
        }, {
            key: "getDataSource",
            value: function getDataSource() {
                return this.componentDataSource.getDataSource();
            }
        }, {
            key: "requestData",
            value: function requestData() {
                this.componentDataSource.requestData();
            }
        }, {
            key: "dataSource",
            value: function dataSource() {
                return this.componentDataSource.dataSource();
            }
        }, {
            key: "renderSpecificFunctionOptions",
            value: function renderSpecificFunctionOptions() {
                var specificFunctionOptions = this.componentDataSource.getSpecificFunctionOptions();
                var specificFunctionViews = [];
                var arrLength = specificFunctionOptions.length;

                if (arrLength == 0) {
                    return null;
                }

                specificFunctionOptions.forEach(function (element, index) {
                    var name = element.name;
                    var func = element.func;
                    var value = element.value;
                    var disabled = element.disabled || false;
                    var containerStyle = element.containerStyle || {};
                    var hideArrow = element.accessoryType === YLListViewCellAccessoryType.none;
                    var normalListItemFlag = !element.accessoryType || element.accessoryType === YLListViewCellAccessoryType.detailDisclosureIndicator || element.accessoryType === YLListViewCellAccessoryType.none;
                    var showSeparator = index != arrLength - 1;

                    if (normalListItemFlag) {
                        specificFunctionViews.push(_react2.default.createElement(CLListItem, {
                            title: name,
                            onPress: function onPress(_) {
                                return func && func(0);
                            },
                            key: index++,
                            value: value,
                            hideArrow: hideArrow,
                            showSeparator: showSeparator,
                            disabled: disabled,
                            containerStyle: containerStyle
                        }));
                    } else if (element.accessoryType === YLListViewCellAccessoryType.switch) {
                        specificFunctionViews.push(_react2.default.createElement(CLListItemWithSwitch, {
                            key: index++,
                            title: name,
                            value: element.accessoryValue == undefined ? false : element.accessoryValue(),
                            onValueChange: function onValueChange(value) {
                                return element.accessoryFunc && element.accessoryFunc(value);
                            },
                            onPress: function onPress(_) {
                                return func && func(0);
                            },
                            disabled: disabled,
                            extraTitleStyle: babelHelpers.extends({}, {
                                fontFamily: 'Kmedium'
                            }),
                            showSeparator: showSeparator
                        }));
                    } else if (element.accessoryType === YLListViewCellAccessoryType.custom) {}
                });
                return _react2.default.createElement(
                    _reactNative.View,
                    null,
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.featureSetting
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: styles.titleContainer
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                {
                                    style: styles.title
                                },
                                strings.common_settings_device_setting
                            )
                        ),
                        _react2.default.createElement(CLSeparator, {
                            style: {
                                marginLeft: CLStyles.common.padding
                            }
                        }),
                        specificFunctionViews,
                        _react2.default.createElement(CLSeparator, null)
                    )
                );
            }
        }, {
            key: "renderCommonFunctionOptions",
            value: function renderCommonFunctionOptions() {
                var firstOptions = this.componentDataSource.getSettingMenuFirstOptions();
                var secondOptions = this.componentDataSource.getSettingMenuSecondOptions();
                var extraOptions = this.componentDataSource.getSettingMenuExtraOptions();
                var showDotOptions = this.componentDataSource.getSettingMenuDotOptions();
                return _react2.default.createElement(CLCommonSetting, {
                    navigation: this.props.navigation,
                    firstOptions: firstOptions,
                    secondOptions: secondOptions,
                    extraOptions: extraOptions,
                    showDot: showDotOptions
                });
            }
        }, {
            key: "render",
            value: function render() {
                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container
                    },
                    _react2.default.createElement(CLSeparator, null),
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        {
                            showsVerticalScrollIndicator: false
                        },
                        this.renderSpecificFunctionOptions(),
                        _react2.default.createElement(
                            _reactNative.View,
                            null,
                            _react2.default.createElement(_reactNative.View, {
                                style: [styles.blank, {
                                    borderTopWidth: 0,
                                    borderTopColor: "transparent"
                                }]
                            }),
                            this.renderCommonFunctionOptions()
                        ),
                        _react2.default.createElement(_reactNative.View, {
                            style: {
                                height: 20
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                numberOfLines: 1,
                                style: {
                                    marginTop: -35 * ratio,
                                    fontSize: 12 * ratio,
                                    color: '#999',
                                    width: width,
                                    marginLeft: 0,
                                    textAlign: 'center',
                                    paddingBottom: 15
                                }
                            },
                            this.componentDataSource.version()
                        ),
                        this.renderBottomContentView()
                    )
                );
            }
        }, {
            key: "renderBottomContentView",
            value: function renderBottomContentView() {
                return _react2.default.createElement(_reactNative.View, null);
            }
        }, {
            key: "getMenuData",
            value: function getMenuData() {
                return this.componentDataSource.getMenuData();
            }
        }, {
            key: "_renderSectionHeader",
            value: function _renderSectionHeader(sectionData, sectionID) {
                var text;

                if (0 == sectionID) {
                    text = strings.common_settings_device_setting;
                } else if (1 == sectionID) {
                    text = strings.common_settings_general_setting_ios;
                }

                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.section
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        {
                            style: styles.sectionHeaderTitle
                        },
                        text
                    )
                );
            }
        }, {
            key: "_pressRow",
            value: function _pressRow(rowData) {
                var func = rowData.func;

                if (func) {
                    func();
                }
            }
        }, {
            key: "_rightBtnPressed",
            value: function _rightBtnPressed(string) {
                this.eventEmitter.emit(string, {});
            }
        }, {
            key: "_saveNightTimeDataButtonPressed",
            value: function _saveNightTimeDataButtonPressed(string) {
                this.eventEmitter.emit(string, {});
            }
        }, {
            key: "_backFromNightTimeDataButtonPressed",
            value: function _backFromNightTimeDataButtonPressed(string) {
                this.eventEmitter.emit(string, {});
            }
        }, {
            key: "_backFromTimePressed",
            value: function _backFromTimePressed(string) {
                this.eventEmitter.emit(string, {});
            }
        }, {
            key: "componentDataSourceClassName",
            get: function get() {
                return SettingMenuDataSource;
            }
        }], [{
            key: "defaultProps",
            value: function defaultProps() {
                return {
                    insetForNavigator: {
                        top: 0
                    }
                };
            }
        }]);
        return SettingMenu;
    }(BaseReactComponent);

    var styles = _reactNative.StyleSheet.create({
        container: {
            backgroundColor: CLStyles.common.backgroundColor,
            flex: 1
        },
        featureSetting: {
            backgroundColor: '#fff'
        },
        blank: {
            height: 8,
            backgroundColor: CLStyles.common.backgroundColor,
            borderTopColor: CLStyles.common.hairlineColor,
            borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
            borderBottomColor: CLStyles.common.hairlineColor,
            borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
        },
        titleContainer: {
            height: 32,
            backgroundColor: '#fff',
            justifyContent: 'center',
            paddingLeft: CLStyles.common.padding
        },
        title: {
            fontSize: 11,
            color: 'rgba(0,0,0,0.5)',
            lineHeight: 14
        }
    });

    var route = {
        component: SettingMenu,
        isNavigationBarHidden: false,
        navigationBarStyle: null,
        title: strings.common_text_setting,
        barStyle: "dark-content",
        isNavigationBarRightButtonHidden: false,
        navLeftButtonStyle: {
            tintColor: "#000000"
        },
        passRouteProps: {
            insetForNavigator: {
                top: 64 + Theme.APPBAR_MARGINTOP
            }
        }
    };
    module.exports = {
        component: SettingMenu,
        route: route
    };
},11045,[10297,10033,10090,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/SettingMenu.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var strings = CommonYeelightModules.strings,
      Api = CommonYeelightModules.Api,
      YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
      DeviceTypeEnum = CommonYeelightModules.DeviceTypeEnum,
      DeviceModel = CommonYeelightModules.DeviceModel,
      BaseReactComponent = CommonYeelightModules.BaseReactComponent,
      CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource,
      Theme = CommonYeelightModules.Theme,
      CLActivityIndicator = CommonYeelightModules.CLActivityIndicator,
      YLUI = CommonYeelightModules.YLUI,
      YLSwitch = CommonYeelightModules.YLSwitch,
      YLDevice = CommonYeelightModules.YLDevice;
  var InitPowerOption = DeviceTypeEnum.InitPowerOption;
  var DefaultLightDataSource = CommonYeelightModulesDataSource.DefaultLightDataSource;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var ratio = Theme.ratio;

  var DefaultLightNewCommon = function (_BaseReactComponent) {
    babelHelpers.inherits(DefaultLightNewCommon, _BaseReactComponent);

    function DefaultLightNewCommon(props) {
      babelHelpers.classCallCheck(this, DefaultLightNewCommon);

      var _this = babelHelpers.possibleConstructorReturn(this, (DefaultLightNewCommon.__proto__ || Object.getPrototypeOf(DefaultLightNewCommon)).call(this, props));

      _this.state = {
        saveState: false,
        initPowerOption: false,
        isOn: true,
        isFinishFetchList: false
      };
      _this.requestCount = 0;
      return _this;
    }

    babelHelpers.createClass(DefaultLightNewCommon, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        if (DeviceModel.hasOwnProperty('isSaveLastState') && null !== DeviceModel.isSaveLastState && DeviceModel.hasOwnProperty('initPowerOption') && null !== DeviceModel.initPowerOption) {
          this.setState({
            isFinishFetchList: true,
            saveState: DeviceModel.isSaveLastState,
            initPowerOption: DeviceModel.initPowerOption
          });
        } else {
          this.setState({
            isFinishFetchList: false
          });
        }

        this.componentDataSource.requestData();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var tintColor = this.componentDataSource.getDefaultTintColor();
        return _react2.default.createElement(
          YLSafeAreaView,
          {
            style: styles.container
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: {
                flex: 1,
                marginTop: this.props.insetForNavigator.top,
                opacity: this.state.isFinishFetchList ? 1.0 : 0.0
              }
            },
            DeviceModel.supportInitPowerOption ? _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.section1
              },
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 1,
                  style: styles.title
                },
                strings.common_default_state_on_from_power
              ),
              _react2.default.createElement(YLSwitch, {
                style: styles.switch,
                onValueChange: function onValueChange(value) {
                  return _this2._saveInitPowerOption(value);
                },
                value: this.state.initPowerOption,
                tintColor: '#ececec',
                onTintColor: tintColor
              })
            ) : null,
            DeviceModel.supportAutoSaveLight ? _react2.default.createElement(
              _reactNative.View,
              null,
              _react2.default.createElement(
                _reactNative.Text,
                {
                  style: styles.section2Title
                },
                strings.common_default_state_light_prompt
              ),
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: styles.section
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.cell
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      numberOfLines: 1,
                      style: styles.title
                    },
                    DeviceModel.supportInitPowerOption ? strings.common_default_state_recovery_break_light : strings.common_default_state_save_last
                  ),
                  _react2.default.createElement(YLSwitch, {
                    style: styles.switch,
                    onValueChange: function onValueChange(value) {
                      return _this2._toggleSaveState(value);
                    },
                    value: this.state.saveState,
                    tintColor: '#ececec',
                    onTintColor: tintColor
                  })
                )
              ),
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: styles.section2Footer
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  {
                    style: styles.section2FooterText
                  },
                  DeviceModel.supportInitPowerOption ? strings.commom_default_state_auto_save_desc : strings.common_default_state_save_last_tips
                )
              )
            ) : null,
            DeviceModel.supportSaveDefaultLight ? _react2.default.createElement(
              _reactNative.View,
              null,
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: [styles.section, {
                    opacity: this.state.saveState ? 0 : 1
                  }]
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.cell
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      numberOfLines: 1,
                      style: styles.title
                    },
                    strings.common_default_state_set_default_title
                  )
                ),
                _react2.default.createElement(
                  _reactNative.TouchableHighlight,
                  {
                    style: [styles.button, {
                      backgroundColor: tintColor
                    }],
                    underlayColor: '#ddd',
                    onPress: function onPress() {
                      return _this2._saveDefaultLight();
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      numberOfLines: 1,
                      style: styles.saveText
                    },
                    strings.common_text_save
                  )
                )
              ),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  style: [styles.des, {
                    opacity: this.state.saveState ? 0 : 1
                  }]
                },
                strings.common_default_state_set_default_desc
              )
            ) : null
          ),
          _react2.default.createElement(CLActivityIndicator, {
            style: {
              left: (width - 25) / 2,
              height: 25,
              width: 25,
              top: 206 * ratio,
              position: 'absolute',
              alignItems: 'center',
              justifyContent: 'center',
              opacity: this.state.isFinishFetchList ? 0.0 : 1.0
            }
          })
        );
      }
    }, {
      key: "_saveInitPowerOption",
      value: function _saveInitPowerOption(value) {
        this.setState({
          initPowerOption: value
        });
        DeviceModel.initPowerOption = value;
        var state = value ? InitPowerOption.On : InitPowerOption.Off;
        Api.setDefaultLightInitPower(state.toString(), function (s, r) {});
      }
    }, {
      key: "_saveDefaultLight",
      value: function _saveDefaultLight() {
        if (!this.state.isOn) {
          YLUI.showFailTips(strings.common_default_state_fail);
          return;
        }

        Api.setDefault(function (s, r) {
          if (s && r && Array.isArray(r.result)) {
            YLUI.showFinishTips(strings.common_default_state_success);
          } else {
            YLUI.showFailTips(strings.common_default_state_fail);
          }
        });
      }
    }, {
      key: "_toggleSaveState",
      value: function _toggleSaveState() {
        var value = !this.state.saveState;
        this.setState({
          saveState: value
        });
        DeviceModel.isSaveLastState = value;
        Api.setSaveState(value, function (s, r) {});
      }
    }, {
      key: "componentDataSourceClassName",
      get: function get() {
        return DefaultLightDataSource;
      }
    }]);
    return DefaultLightNewCommon;
  }(BaseReactComponent);

  var cellHeight = 44;
  var leftGap = 20;
  var titleFontSize = 15;
  var seperatorColor = '#e8e8e8';

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#f8f8f8',
      alignItems: 'stretch',
      justifyContent: 'flex-start'
    },
    section1: {
      flexDirection: 'row',
      height: cellHeight,
      marginTop: 17,
      justifyContent: 'space-between',
      alignItems: 'center',
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: seperatorColor,
      backgroundColor: '#fff'
    },
    title: {
      color: '#333',
      fontSize: titleFontSize,
      marginLeft: leftGap,
      flex: 1,
      marginRight: 6
    },
    switch: {
      marginRight: 20
    },
    des: {
      color: '#999999',
      margin: 22,
      marginTop: 7,
      fontSize: 12,
      lineHeight: 18
    },
    label: {
      marginLeft: leftGap
    },
    section: {
      height: cellHeight,
      backgroundColor: '#fff',
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: seperatorColor
    },
    section2Title: {
      fontSize: 13,
      color: '#666666',
      marginTop: 25,
      marginBottom: 10,
      marginLeft: leftGap,
      marginRight: 13
    },
    cell: {
      flex: 1,
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    cell1: {
      flex: 1,
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: seperatorColor
    },
    cell2: {
      flex: 1,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: seperatorColor
    },
    cellContent: {
      flex: 1,
      justifyContent: 'space-between',
      flexDirection: 'row',
      alignItems: 'center'
    },
    seperator: {
      position: 'absolute',
      left: leftGap,
      width: width - leftGap,
      top: cellHeight,
      height: _reactNative.StyleSheet.hairlineWidth,
      backgroundColor: seperatorColor
    },
    choiceOnIcon: {
      width: 17,
      height: 17,
      marginRight: 25
    },
    section2Footer: {
      marginTop: 7,
      marginLeft: 20,
      marginRight: 20,
      marginBottom: 20
    },
    section2FooterText: {
      fontSize: 12,
      color: '#999',
      lineHeight: 18
    },
    button: {
      backgroundColor: '#49B5FF',
      borderRadius: 4,
      height: 26,
      marginRight: 20,
      overflow: 'hidden',
      justifyContent: 'center',
      alignItems: 'center',
      paddingLeft: 6,
      paddingRight: 6
    },
    saveText: babelHelpers.extends({
      paddingLeft: -3,
      padding: 0,
      textAlign: 'center',
      fontSize: 11,
      color: '#fff'
    }, {
      fontFamily: ''
    })
  });

  var route = {
    component: DefaultLightNewCommon,
    isNavigationBarHidden: false,
    title: strings.common_default_state_title,
    barStyle: "default",
    isNavigationBarRightButtonHidden: false,
    navigationBarStyle: {
      backgroundColor: '#fff'
    },
    navigationBarConfig: {
      bottomLineColor: '#e8e8e8'
    },
    passRouteProps: {
      insetForNavigator: {
        top: 44
      }
    }
  };
  module.exports = {
    component: DefaultLightNewCommon,
    route: route
  };
},11048,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/DefaultLightNewCommon.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var Api = CommonYeelightModules.Api,
      strings = CommonYeelightModules.strings,
      YLSafeAreaView = CommonYeelightModules.YLSafeAreaView,
      YLSwitch = CommonYeelightModules.YLSwitch;

  var AmbilightSettingPage = function (_Component) {
    babelHelpers.inherits(AmbilightSettingPage, _Component);

    function AmbilightSettingPage(props) {
      babelHelpers.classCallCheck(this, AmbilightSettingPage);

      var _this = babelHelpers.possibleConstructorReturn(this, (AmbilightSettingPage.__proto__ || Object.getPrototypeOf(AmbilightSettingPage)).call(this, props));

      _this.ds = new _reactNative.ListView.DataSource({
        rowHasChanged: function rowHasChanged(r1, r2) {
          return r1 !== r2;
        }
      });
      _this.state = {
        bgProact: false,
        dataSource: _this.getDataSource()
      };
      return _this;
    }

    babelHelpers.createClass(AmbilightSettingPage, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        this._getBgProact();
      }
    }, {
      key: "getDataSource",
      value: function getDataSource() {
        return this.ds.cloneWithRows([strings.common_setting_ambi_follow_main_light]);
      }
    }, {
      key: "_renderRow",
      value: function _renderRow(rowData, sectionID, rowID) {
        var _this2 = this;

        var name = strings.common_setting_ambi_follow_main_light;

        var extra = _react2.default.createElement(YLSwitch, {
          style: styles.timerSwitch,
          onValueChange: function onValueChange(value) {
            return _this2._toggleBgProact(value);
          },
          value: this.state.bgProact,
          onTintColor: "#1dc58a"
        });

        return _react2.default.createElement(
          _reactNative.View,
          null,
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              activeOpacity: 1.0,
              onPress: function onPress() {}
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: [{
                  opacity: 1.0
                }, {
                  height: 50
                }, {
                  backgroundColor: '#ffffff'
                }]
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: styles.rowContainer
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  {
                    style: styles.title
                  },
                  name
                )
              ),
              _react2.default.createElement(_reactNative.View, {
                style: styles.separator
              })
            )
          ),
          extra
        );
      }
    }, {
      key: "_toggleBgProact",
      value: function _toggleBgProact(value) {
        this.setState({
          bgProact: value
        });
        this.updateListView();
        Api.setBgProact(value, function (s, r) {});
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(
          YLSafeAreaView,
          {
            style: {
              flex: 1
            },
            forceInset: {
              bottom: 'never'
            }
          },
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              style: {
                backgroundColor: '#ebebec'
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: [styles.container, {
                  marginTop: this.props.insetForNavigator.top
                }]
              },
              _react2.default.createElement(_reactNative.ListView, {
                style: styles.list,
                dataSource: this.state.dataSource,
                renderRow: this._renderRow.bind(this),
                enableEmptySections: true,
                stickySectionHeadersEnabled: false
              })
            )
          )
        );
      }
    }, {
      key: "updateListView",
      value: function updateListView() {
        var ds = this.getDataSource();
        this.setState({
          dataSource: ds
        });
      }
    }, {
      key: "_getBgProact",
      value: function _getBgProact() {
        var _this3 = this;

        Api.getBgProact(function (s, r) {
          if (s && r && Array.isArray(r.result)) {
            var state = parseInt(r.result[0]) == 1 ? true : false;

            _this3.setState({
              bgProact: state
            });

            _this3.updateListView();
          } else {
            setTimeout(function () {
              _this3._getBgProact();
            }, 1000);
          }
        });
      }
    }]);
    return AmbilightSettingPage;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: 'transparent',
      marginBottom: 30
    },
    rowContainer: {
      alignSelf: 'stretch',
      flexDirection: 'row',
      flex: 1,
      paddingTop: 6,
      paddingBottom: 6,
      marginLeft: 20,
      marginRight: 20,
      backgroundColor: '#fff',
      height: 50,
      alignItems: 'center'
    },
    timerSwitch: {
      position: 'absolute',
      top: 13,
      right: 36,
      backgroundColor: 'transparent'
    },
    list: {
      paddingTop: 20,
      alignSelf: 'stretch'
    },
    title: {
      fontSize: 16,
      alignItems: 'center',
      flex: 1,
      marginLeft: 0,
      marginTop: 6,
      color: 'black'
    },
    subArrow: {
      width: 9,
      height: 18,
      marginTop: 6,
      marginRight: 0
    }
  });

  var route = {
    component: AmbilightSettingPage,
    isNavigationBarHidden: false,
    navigationBarStyle: null,
    title: strings.common_setting_ambi_setting_feature,
    barStyle: "dark-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#000000"
    },
    passRouteProps: {
      insetForNavigator: {
        top: 44
      }
    }
  };
  module.exports = {
    component: AmbilightSettingPage,
    route: route
  };
},11051,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/AmbilightSettingPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var MenuIdentifiers = {
    miHomeSettingEditDeviceName: 'miHomeSettingEditDeviceName',
    miHomeSettingShareDevice: 'miHomeSettingShareDevice',
    miHomeSettingCheckFirmwareUpgrade: 'miHomeSettingCheckFirmwareUpgrade',
    miHomeSettingUnbindDevice: 'miHomeSettingUnbindDevice',
    miHomeSettingRoomManagement: 'miHomeSettingRoomManagement',
    miHomeSettingIftttAuto: 'miHomeSettingIftttAuto',
    miHomeSettingNewMore: 'miHomeSettingNewMore',
    miHomeSettingAddToDesktop: 'miHomeSettingAddToDesktop',
    miHomeSettingOpenPrivacyAndLicense: 'miHomeSettingOpenPrivacyAndLicense',
    miHomeSettingOpenBtGatewayPage: 'miHomeSettingOpenBtGatewayPage',
    settingTime: 'settingTime',
    settingSchedules: 'settingSchedules',
    settingNightLight: 'settingNightLight',
    settingGestureOn: 'settingGestureOn',
    settingRemoteControl: 'settingRemoteControl',
    settingMiband: 'settingMiband',
    settingDefaultLight: 'settingDefaultLight',
    settingAmbilight: 'settingAmbilight',
    settingDefaultLightSwitchState: 'settingDefaultLightSwitchState',
    settingChildMode: 'settingChildMode',
    settingKnobCustom: 'settingKnobCustom',
    settingDefaultTimeManagement: 'settingDefaultTimeManagement',
    settingSmartSwitch: 'settingSmartSwitch',
    miHomeSettingVoiceAuth: 'miHomeSettingVoiceAuth',
    miHomeSettingHelp: 'miHomeSettingHelp'
  };
  var SettingFirstOptionsKey = {
    miHomeSettingEditDeviceName: 'NAME',
    miHomeSettingShareDevice: 'SHARE',
    miHomeSettingCheckFirmwareUpgrade: 'FIRMWARE_UPGRADE',
    miHomeSettingUnbindDevice: 'UNBIND',
    miHomeSettingRoomManagement: 'LOCATION',
    miHomeSettingIftttAuto: 'IFTTT',
    miHomeSettingNewMore: 'MORE',
    miHomeSettingOpenPrivacyAndLicense: 'LEGAL_INFO',
    miHomeSettingOpenBtGatewayPage: 'BTGATEWAY',
    miHomeSettingVoiceAuth: 'VOICE_AUTH',
    miHomeSettingHelp: 'HELP'
  };
  var SettingSecondOptionsKey = {
    miHomeSettingAutoUpgrade: 'AUTO_UPGRADE',
    miHomeSettingTimeZone: 'TIMEZONE',
    miHomeSettingUserExperienceProgram: 'USER_EXPERIENCE_PROGRAM'
  };
  var iconTypeName = ".png";
  var SettingMenuIcons = {
    miHomeSettingEditDeviceName: 'miHomeSettingEditDeviceName' + iconTypeName,
    miHomeSettingShareDevice: 'miHomeSettingShareDevice' + iconTypeName,
    miHomeSettingCheckFirmwareUpgrade: 'miHomeSettingCheckFirmwareUpgrade' + iconTypeName,
    miHomeSettingUnbindDevice: 'miHomeSettingUnbindDevice' + iconTypeName,
    miHomeSettingRoomManagement: 'miHomeSettingRoomManagement' + iconTypeName,
    miHomeSettingIftttAuto: 'miHomeSettingIftttAuto' + iconTypeName,
    miHomeSettingNewMore: 'miHomeSettingNewMore' + iconTypeName,
    miHomeSettingAddToDesktop: 'miHomeSettingAddToDesktop' + iconTypeName,
    miHomeSettingOpenPrivacyAndLicense: 'miHomeSettingOpenPrivacyAndLicense' + iconTypeName,
    miHomeSettingOpenBtGatewayPage: 'miHomeSettingOpenBtGatewayPage' + iconTypeName,
    settingTime: 'setting_icon_delay' + iconTypeName,
    settingSchedules: 'setting_icon_timer' + iconTypeName,
    settingNightLight: 'setting_icon_nightlight' + iconTypeName,
    settingRemoteControl: 'setting_icon_remote' + iconTypeName,
    settingMiband: 'setting_icon_miband' + iconTypeName,
    settingDefaultLight: 'settingDefaultLight' + iconTypeName,
    settingAmbilight: 'settingAmbilight' + iconTypeName,
    settingDefaultLightSwitchState: 'setting_icon_default_light_switch_state' + iconTypeName,
    settingChildMode: 'settingChildMode' + iconTypeName,
    settingKnobCustom: 'settingKnobCustom' + iconTypeName,
    settingDefaultTimeManagement: 'settingDefaultTimeManagement' + iconTypeName,
    settingSmartSwitch: 'setting_icon_smart_switch' + iconTypeName
  };
  var SettingMenuTypeEnum = {
    AdvancedType: 'SettingMenuTypeAdvanced',
    CommonType: 'SettingMenuTypeCommon',
    CommboType: 'SettingMenuTypeCommbo'
  };
  module.exports = {
    MenuIdentifiers: MenuIdentifiers,
    SettingMenuIcons: SettingMenuIcons,
    SettingMenuTypeEnum: SettingMenuTypeEnum,
    SettingFirstOptionsKey: SettingFirstOptionsKey,
    SettingSecondOptionsKey: SettingSecondOptionsKey
  };
},11054,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/SettingMenuEnum.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var CommonYeelightModules = _require(_dependencyMap[2]);

    var BaseReactComponent = CommonYeelightModules.BaseReactComponent;
    var strings = CommonYeelightModules.strings,
        Theme = CommonYeelightModules.Theme,
        YLSwitch = CommonYeelightModules.YLSwitch,
        Api = CommonYeelightModules.Api,
        YLUI = CommonYeelightModules.YLUI,
        CLImage = CommonYeelightModules.CLImage;

    var SmartSwitchDetailPage = function (_BaseReactComponent) {
        babelHelpers.inherits(SmartSwitchDetailPage, _BaseReactComponent);

        function SmartSwitchDetailPage(props) {
            babelHelpers.classCallCheck(this, SmartSwitchDetailPage);

            var _this = babelHelpers.possibleConstructorReturn(this, (SmartSwitchDetailPage.__proto__ || Object.getPrototypeOf(SmartSwitchDetailPage)).call(this, props));

            _this.state = {
                enableInduction: false
            };
            return _this;
        }

        babelHelpers.createClass(SmartSwitchDetailPage, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this._getSmartSwitchState();
            }
        }, {
            key: "_toggleInductionOn",
            value: function _toggleInductionOn(value) {
                var _this2 = this;

                this.setState({
                    enableInduction: value
                });
                Api.setSmartSwitchEnable(value, function (isSuceess, response) {
                    if (isSuceess) {
                        if (_this2.props.smartSwitchDidChange) {
                            _this2.props.smartSwitchDidChange(value);
                        }

                        if (value) {
                            YLUI.showFinishTips(strings.common_settings_seesaw_switch_opened);
                        } else {
                            YLUI.showFinishTips(strings.common_settings_seesaw_switch_offed);
                        }
                    } else {
                        YLUI.showFailTips(strings.common_settings_seesaw_switch_failed);

                        _this2.setState({
                            enableInduction: !value
                        });
                    }
                });
            }
        }, {
            key: "_getSmartSwitchState",
            value: function _getSmartSwitchState() {
                var _this3 = this;

                Api.getSmartSwitchStatus(function (response, smartSwitchReturn) {
                    if (response && (Array.isArray(smartSwitchReturn.result) || Array.isArray(smartSwitchReturn))) {
                        var isOn = false;

                        if (Array.isArray(smartSwitchReturn.result) && smartSwitchReturn.result[0] == 1) {
                            isOn = true;
                        } else if (Array.isArray(smartSwitchReturn) && smartSwitchReturn.length > 0 && smartSwitchReturn[0].value && smartSwitchReturn[0].value == 1) {
                            isOn = true;
                        }

                        _this3.setState({
                            enableInduction: isOn
                        });
                    } else {
                        setTimeout(function () {
                            return _this3._getSmartSwitchState();
                        }, 1000);
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.rowContainer
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                numberOfLines: 1,
                                style: styles.title
                            },
                            strings.common_settings_seesaw_switch_op_tips
                        ),
                        _react2.default.createElement(YLSwitch, {
                            tintColor: '#ECECEC',
                            onTintColor: '#71C873',
                            thumbTintColor: '#ececec',
                            onValueChange: function onValueChange(value) {
                                return _this4._toggleInductionOn(value);
                            },
                            value: this.state.enableInduction
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.imgContent
                        },
                        _react2.default.createElement(CLImage, {
                            style: styles.img,
                            imagePath: 'smart_switch_detail.png'
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.subTitle
                            },
                            strings.common_settings_seesaw_switch_tips
                        )
                    )
                );
            }
        }]);
        return SmartSwitchDetailPage;
    }(BaseReactComponent);

    SmartSwitchDetailPage.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            headerStyle: {
                paddingTop: Theme.STATUSBAR_HEIGHT,
                height: Theme.NAVBAR_HEIGHT + (_reactNative.StatusBar.currentHeight || 0),
                backgroundColor: "white",
                borderBottomWidth: 0,
                elevation: 0
            }
        };
    };

    var ratio = Theme.ratio;
    var rowCellHeight = 50 * ratio;
    var margin = 30 * ratio;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#fff'
        },
        title: babelHelpers.extends({
            fontSize: 19 * ratio,
            color: '#333333'
        }, {
            fontFamily: ''
        }, {
            textAlign: 'left'
        }),
        rowContainer: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            height: rowCellHeight,
            marginTop: 35 * ratio,
            marginRight: margin,
            marginLeft: margin,
            backgroundColor: '#fff'
        },
        subTitle: babelHelpers.extends({
            marginTop: 20 * ratio,
            fontSize: 14 * ratio,
            color: '#666666'
        }, {
            fontFamily: ''
        }),
        imgContent: {
            marginTop: 25 * ratio,
            marginRight: margin,
            marginLeft: margin
        },
        img: {
            resizeMode: 'contain',
            width: 315 * ratio,
            height: 200 * ratio
        }
    });

    var route = {
        component: SmartSwitchDetailPage,
        isNavigationBarHidden: false,
        navigationBarStyle: null,
        title: '',
        barStyle: "default",
        isNavigationBarRightButtonHidden: false,
        navLeftButtonStyle: {
            tintColor: "#000000"
        },
        passRouteProps: {
            insetForNavigator: {
                top: 44
            }
        }
    };
    module.exports = {
        component: SmartSwitchDetailPage,
        route: route
    };
},11057,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Setting/SmartSwitchDetailPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var HsvToRgb = _require(_dependencyMap[3]);

  var strings = _require(_dependencyMap[4]);

  var Cloud = _require(_dependencyMap[5]);

  var CommonYeelightModules = _require(_dependencyMap[6]);

  var CommonYeelightModulesDataSource = _require(_dependencyMap[6]).CommonYeelightModulesDataSource;

  var APPBAR_HEIGHT = 56;
  var Theme = CommonYeelightModules.Theme,
      CLImageButton = CommonYeelightModules.CLImageButton,
      CLActionSheet = CommonYeelightModules.CLActionSheet,
      CLAlert = CommonYeelightModules.CLAlert,
      CLImage = CommonYeelightModules.CLImage,
      YLAccount = CommonYeelightModules.YLAccount,
      YLResource = CommonYeelightModules.YLResource,
      YLUI = CommonYeelightModules.YLUI,
      DeviceModel = CommonYeelightModules.DeviceModel,
      Images = CommonYeelightModules.Images,
      YLHostLocale = CommonYeelightModules.YLHostLocale;
  var CollectionDataSource = CommonYeelightModulesDataSource.CollectionDataSource;
  var Tools = CommonYeelightModules.Tools,
      CLSegmentedControl = CommonYeelightModules.CLSegmentedControl;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var RecommandCellHeight = width * 52 / 108;
  var NAVIGATION_BAR_HEIGHT = (_reactNative.StatusBar.currentHeight || 20 + Theme.APPBAR_MARGINTOP) + APPBAR_HEIGHT;
  var UserCellHeight = 55;
  var CIRCLE_SIZE = 45;
  var CIRCLE_MARGIN = (width - 4 * CIRCLE_SIZE) / 8;
  var NUM_CIRCLES = 30;
  var subscription;
  var exitNotify;
  var dataSource;
  var entryModeType = {
    normal: 'normal',
    customScene: 'customScene',
    doubleClickCustomLight: 'doubleClickCustomLight'
  };

  var CollectionYeelight = function (_Component) {
    babelHelpers.inherits(CollectionYeelight, _Component);

    function CollectionYeelight(props) {
      babelHelpers.classCallCheck(this, CollectionYeelight);

      var _this = babelHelpers.possibleConstructorReturn(this, (CollectionYeelight.__proto__ || Object.getPrototypeOf(CollectionYeelight)).call(this, props));

      dataSource = new CollectionDataSource(_this.props);
      _this.dataSource = dataSource;
      var entryMode = entryModeType.normal;

      if (_this.props.hasOwnProperty('entryMode')) {
        entryMode = _this.props.entryMode;
      }

      _this.recommandDS = new _reactNative.ListView.DataSource({
        rowHasChanged: function rowHasChanged(r1, r2) {
          return r1 !== r2;
        }
      });
      _this.userDS = new _reactNative.ListView.DataSource({
        rowHasChanged: function rowHasChanged(r1, r2) {
          return r1 !== r2;
        }
      });
      _this.state = {
        userId: YLAccount.userId,
        currentPage: 0,
        entryMode: entryMode,
        recommandDataSource: _this.recommandDS.cloneWithRows([]),
        userDataSource: _this.userDS.cloneWithRows([]),
        selectedIndex: 0
      };
      return _this;
    }

    babelHelpers.createClass(CollectionYeelight, [{
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this._isMounted = true;

        _reactNative.InteractionManager.runAfterInteractions(function () {
          _this2.requestData();
        });

        if (entryModeType.customScene == this.state.entryMode || entryModeType.doubleClickCustomLight == this.state.entryMode) {} else {
          this.subscription = _reactNative.DeviceEventEmitter.addListener("deviceUpdate", dataSource.handleDeviceUpdate.bind(dataSource));
        }

        this.exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
          _this2.exitNotify.remove();

          if (_this2.subscription) {
            _this2.subscription.remove();
          }

          ;
        });
      }
    }, {
      key: "requestData",
      value: function requestData() {
        this._getCollections();

        this._getRecommends();

        dataSource.requestData();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._isMounted = false;

        if (this.subscription) {
          this.subscription.remove();
        }
      }
    }, {
      key: "_getCollections",
      value: function _getCollections() {
        var _this3 = this;

        dataSource.getUserCollection(this.state.userId, function (scenes) {
          _this3.setState({
            userDataSource: _this3.userDS.cloneWithRows(scenes)
          });
        });
      }
    }, {
      key: "_getRecommends",
      value: function _getRecommends() {
        var _this4 = this;

        dataSource.getRecommend(this.state.userId, function (scenes) {
          _this4.setState({
            recommandDataSource: _this4.recommandDS.cloneWithRows(scenes)
          });
        });
      }
    }, {
      key: "_showNamePrompt",
      value: function _showNamePrompt() {
        var _this5 = this;

        if (!this.props.lampOn) {
          return;
        }

        CLAlert.prompt(strings.common_collection_dialog_add_title, null, [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress(value) {
            if (!value || value.trim() === '') {
              YLUI.showFailTips(strings.common_collection_empty_ios);
              return;
            } else if (value.length > 20) {
              YLUI.showFailTips(strings.common_collection_too_long_ios);
              return;
            } else {
              _this5._addCollection(value);
            }
          }
        }]);
      }
    }, {
      key: "_addCollection",
      value: function _addCollection(value) {
        var _this6 = this;

        dataSource.addUserCollection(value, function (data) {
          if (!data) {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
            return;
          }

          if (data.code == 0) {
            _this6._getCollections();

            YLUI.showFinishTips(strings.common_collection_added_success);
          } else if (data.code == -3) {
            YLUI.showFailTips(strings.common_collection_judgement_existed);
          } else {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
          }
        });
      }
    }, {
      key: "onScroll",
      value: function onScroll(event) {
        var offsetX = event.nativeEvent.contentOffset.x;
        var pageWidth = width;
        this.setState({
          currentPage: Math.floor((offsetX - pageWidth / 2) / pageWidth) + 1
        });
      }
    }, {
      key: "renderRecommandRow",
      value: function renderRecommandRow(rowData, sectionID, rowID) {
        var recommendScene = dataSource.getRecommendSceneWithType(rowData.type);
        return _react2.default.createElement(
          _reactNative.TouchableHighlight,
          null,
          _react2.default.createElement(
            _reactNative.View,
            null,
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.recommandCell
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: [styles.recommandPoster, {
                    borderBottomColor: '#eeeeee',
                    borderBottomWidth: 1
                  }]
                },
                _react2.default.createElement(CLImage, {
                  style: styles.recommandPosterContent,
                  imagePath: 'recommend_scene_placeholder.png'
                })
              ),
              Cloud.isSupportCollectionImageUrl ? _react2.default.createElement(_reactNative.Image, {
                style: styles.recommandPoster,
                source: {
                  uri: rowData.image
                }
              }) : _react2.default.createElement(CLImage, {
                style: styles.recommandPoster,
                imagePath: recommendScene.imageName
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 1,
                  style: styles.recommandTitle
                },
                rowData.title
              ),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  style: styles.recommandDesc
                },
                rowData.description
              ),
              _react2.default.createElement(
                _reactNative.TouchableHighlight,
                {
                  style: styles.recommandButton,
                  underlayColor: "#00000010",
                  onPress: function onPress() {
                    return dataSource.selectRecommend(rowData);
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  {
                    numberOfLines: 1,
                    style: styles.recommandButtonLabel
                  },
                  strings.common_collection_apply_light
                )
              )
            )
          )
        );
      }
    }, {
      key: "renderUserRow",
      value: function renderUserRow(rowData, sectionID, rowID) {
        var _this7 = this;

        var object = rowData;
        return _react2.default.createElement(
          _reactNative.TouchableHighlight,
          null,
          _react2.default.createElement(
            _reactNative.View,
            null,
            _react2.default.createElement(CircleCell, {
              key: object.sid,
              mode: object.mode,
              bright: object.bright,
              wrgb: object.wrgb,
              color_temperature: object.color_temperature,
              colorflow: object.colorflow,
              title: object.title,
              sid: object.sid,
              call: function call(s) {
                return dataSource.selectRecommend(babelHelpers.extends({}, s, object));
              },
              needUpdate: function needUpdate() {
                if (_this7.props.scenesChangedCallback) {
                  _this7.props.scenesChangedCallback();
                }

                _this7._getCollections();
              }
            })
          )
        );
      }
    }, {
      key: "renderUserHeader",
      value: function renderUserHeader(sectionID) {
        return _react2.default.createElement(
          _reactNative.View,
          null,
          _react2.default.createElement(CLImage, {
            style: styles.userHeader,
            imagePath: 'icon_favorite_top.png'
          }),
          _react2.default.createElement(_reactNative.View, {
            style: styles.userHeaderSeperator
          })
        );
      }
    }, {
      key: "onScroll",
      value: function onScroll(event) {
        var nativeEvent = event['nativeEvent'];
        var contentSize = nativeEvent['contentSize'];
        var contentOffset = nativeEvent['contentOffset'];
        var contentOffsetX = contentOffset['x'];
        this.setState({
          selectedIndex: Math.round(contentOffsetX / (contentSize['width'] / 2))
        });
      }
    }, {
      key: "onScrollStop",
      value: function onScrollStop(event) {
        var nativeEvent = event['nativeEvent'];
        var contentSize = nativeEvent['contentSize'];
        var contentOffset = nativeEvent['contentOffset'];
        var contentOffsetX = contentOffset['x'];
        this.setState({
          selectedIndex: Math.round(contentOffsetX / (contentSize['width'] / 2) * 10 / 10)
        });
      }
    }, {
      key: "onSegmentedControlChange",
      value: function onSegmentedControlChange(event) {
        var scrollView = this.refs['contentScrollView'];
        scrollView.scrollTo({
          y: 0,
          x: event.nativeEvent.selectedSegmentIndex * width,
          animated: true
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.container, {
              backgroundColor: '#ffffff'
            }]
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.fakeNav
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.fakeNavContent
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: styles.navBarLeftButton
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: {
                      left: 0,
                      width: 59,
                      height: APPBAR_HEIGHT,
                      justifyContent: 'center',
                      alignItems: 'center'
                    }
                  },
                  _react2.default.createElement(CLImageButton, {
                    source: Images(YLResource.requireNaviBackButtonImage),
                    onPress: function onPress() {
                      if (entryModeType.customScene == _this8.state.entryMode) {
                        _reactNative.DeviceEventEmitter.emit("quitCollectionOfCustomScene");
                      } else {
                        _this8.props.navigation.pop();
                      }
                    },
                    style: [{
                      width: 29,
                      height: 29,
                      tintColor: '#ffffff'
                    }, route.navLeftButtonStyle]
                  })
                )
              ),
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: styles.navBarTitle
                },
                _react2.default.createElement(CLSegmentedControl, {
                  values: [strings.common_collection_recommend_segment, strings.common_collection_favorite_segment],
                  selectedIndex: this.state.selectedIndex,
                  tintColor: '#888888',
                  tabStyle: {
                    borderWidth: 1,
                    borderColor: '#888888',
                    borderRadius: 1
                  },
                  style: {
                    flex: 1,
                    width: 220 * Theme.ratio,
                    marginTop: Theme.isAndroid ? 12 : 6,
                    marginBottom: Theme.isAndroid ? 12 : 6
                  },
                  onChange: function onChange(event) {
                    _this8.setState({
                      selectedIndex: event.nativeEvent.selectedSegmentIndex
                    });

                    _this8.onSegmentedControlChange(event);
                  }
                })
              )
            )
          ),
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              ref: 'contentScrollView',
              style: {
                backgroundColor: 'white',
                top: 1,
                bottom: 0,
                flex: 1
              },
              horizontal: true,
              pagingEnabled: true,
              onScrollAnimationEnd: function onScrollAnimationEnd(scrollView) {
                _this8.onScrollStop(scrollView);
              },
              onScrollEndDrag: function onScrollEndDrag(scrollView) {
                _this8.onScrollStop(scrollView);
              },
              onMomentumScrollEnd: function onMomentumScrollEnd(scrollView) {
                _this8.onScrollStop(scrollView);
              },
              scrollEventThrottle: 24
            },
            _react2.default.createElement(_reactNative.ListView, {
              style: [styles.listView, {
                backgroundColor: 'transparent'
              }],
              dataSource: this.state.recommandDataSource,
              renderRow: this.renderRecommandRow.bind(this),
              enableEmptySections: true
            }),
            _react2.default.createElement(_reactNative.ListView, {
              style: [styles.listView, {
                backgroundColor: 'transparent'
              }],
              dataSource: this.state.userDataSource,
              renderRow: this.renderUserRow.bind(this),
              renderHeader: this.renderUserHeader.bind(this),
              enableEmptySections: true
            })
          )
        );
      }
    }]);
    return CollectionYeelight;
  }(_react.Component);

  var CircleCell = function (_Component2) {
    babelHelpers.inherits(CircleCell, _Component2);

    function CircleCell(props) {
      babelHelpers.classCallCheck(this, CircleCell);

      var _this9 = babelHelpers.possibleConstructorReturn(this, (CircleCell.__proto__ || Object.getPrototypeOf(CircleCell)).call(this, props));

      _this9.state = {
        scaleAnimate: new _reactNative.Animated.Value(1),
        userId: YLAccount.userId
      };
      return _this9;
    }

    babelHelpers.createClass(CircleCell, [{
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this10 = this;

        var hue = 0.1;
        var s = 0.25;
        var numberOfLines = 2;
        var top = 15;
        var height = 70;

        if (this.props.mode == 2) {
          hue = dataSource.getHueFromWrgb(this.props.wrgb);
          s = dataSource.getCircleRenderSaturationFromWrgb(this.props.wrgb);
          top = 5;
          height = UserCellHeight;
        } else if (this.props.mode == 3) {
          s = this._ct2Saturation(this.props.color_temperature);
          var language = YLHostLocale.language;

          if (language === 'zh-Hans' || language === 'zh-HK' || language === 'zh-TW' || language === 'ko' || language === 'zh' || language === 'hk' || language === 'tw' || language === 'zh-Hant' || language === 'th') {
            numberOfLines = 1;
            top = 5;
            height = UserCellHeight;
          }
        } else {
          numberOfLines = 1;
          top = 5;
          height = UserCellHeight;
        }

        var component = _react2.default.createElement(
          _reactNative.TouchableHighlight,
          {
            underlayColor: "transparent",
            style: {
              marginTop: top
            },
            activeOpacity: 1.0
          },
          _react2.default.createElement(_reactNative.Animated.View, {
            style: [styles.circle, {
              transform: [{
                scale: this.state.scaleAnimate
              }]
            }, {
              backgroundColor: HsvToRgb.getRGBString(hue, s, getDisplayBrightness(this.props.bright))
            }]
          })
        );

        if (this.props.mode == 4 || this.props.mode == 5) {
          component = _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: [{
                transform: [{
                  scale: this.state.scaleAnimate
                }]
              }, {
                marginTop: top
              }]
            },
            _react2.default.createElement(CLImage, {
              style: styles.imgForCircle,
              imagePath: 'all_flow_circle.png'
            })
          );
        }

        return _react2.default.createElement(
          _reactNative.TouchableHighlight,
          {
            onLongPress: function onLongPress() {
              return _this10._onLongPress();
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.circleContainer, {
                height: height
              }]
            },
            component,
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: 1,
                style: styles.title
              },
              this.props.title
            ),
            _react2.default.createElement(
              _reactNative.Text,
              {
                numberOfLines: numberOfLines,
                style: styles.desc
              },
              this._getDataDescription()
            ),
            _react2.default.createElement(
              _reactNative.TouchableHighlight,
              {
                style: styles.userButton,
                underlayColor: "#00000010",
                activeOpacity: 1.0,
                onPress: function onPress() {
                  return _this10._pressed();
                }
              },
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 1,
                  style: styles.userButtonLabel
                },
                strings.common_collection_apply_light
              )
            ),
            _react2.default.createElement(_reactNative.View, {
              style: styles.userCellSeperator
            })
          )
        );
      }
    }, {
      key: "_getDataDescription",
      value: function _getDataDescription() {
        if (1 == this.props.mode) {
          return strings.common_text_bright + ':' + this.props.bright;
        } else if (2 == this.props.mode) {
          var rgb = Tools.wrgb2rgb(this.props.wrgb);
          return strings.common_text_color + ':' + rgb.r + ',' + rgb.g + ',' + rgb.b;
        } else if (3 == this.props.mode) {
          if (DeviceModel.isFixedColorTemperature) {
            return strings.common_text_bright + ':' + this.props.bright;
          }

          var language = YLHostLocale.language;
          var space = '\n';

          if (language === 'zh-Hans' || language === 'zh-HK' || language === 'zh-TW' || language === 'ko' || language === 'zh' || language === 'hk' || language === 'tw' || language === 'zh-Hant' || language === 'th') {
            space = ' ';
          }

          return strings.common_text_color_temperature + ':' + this.props.color_temperature + space + strings.common_text_bright + ':' + this.props.bright;
        } else if (4 == this.props.mode) {
          return strings.common_text_flow;
        } else if (5 == this.props.mode) {
          return strings.common_text_flow;
        } else if (6 == this.props.mode) {
          return strings.common_text_night_light + ':' + this.props.bright;
        } else if (7 == this.props.mode) {
          return strings.common_text_flow;
        } else if (8 == this.props.mode) {
          return strings.common_text_flow;
        } else {
          return '';
        }
      }
    }, {
      key: "_handTouchBegin",
      value: function _handTouchBegin() {
        var _this11 = this;

        this.longTimer = setTimeout(function () {
          _this11._onLongPress();

          _this11.longTimer && clearTimeout(_this11.longTimer);
        }, 600);
      }
    }, {
      key: "_handTouchEnd",
      value: function _handTouchEnd() {
        clearTimeout(this.longTimer);
      }
    }, {
      key: "_handTouchCancel",
      value: function _handTouchCancel() {}
    }, {
      key: "_pressed",
      value: function _pressed() {
        this.props.call({
          mode: this.props.mode,
          wrgb: this.props.wrgb,
          ct: this.props.color_temperature,
          bright: this.props.bright,
          cf: this.props.colorflow
        });
      }
    }, {
      key: "_onLongPress",
      value: function _onLongPress() {
        var _this12 = this;

        if (this.props.sid == null) {
          return;
        }

        CLActionSheet.showActionSheetWithOptions({
          options: [strings.common_text_delete, strings.common_text_rename, strings.common_dialog_cancel],
          cancelButtonIndex: 2
        }, function (buttonIndex) {
          if (buttonIndex == 0) {
            _this12._showDelConfrim();
          } else if (buttonIndex == 1) {
            _this12._renameCollection();
          }
        });
      }
    }, {
      key: "_showDelConfrim",
      value: function _showDelConfrim() {
        this._delCollection(this.props.sid);
      }
    }, {
      key: "_delCollection",
      value: function _delCollection(sid) {
        var _this13 = this;

        Cloud.removeUserCollection(sid, function (data) {
          if (data && data.code == 0) {
            _this13.props.needUpdate();

            YLUI.showFinishTips(strings.common_text_deleted);
          } else {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
          }
        });
      }
    }, {
      key: "_renameCollection",
      value: function _renameCollection() {
        var _this14 = this;

        CLAlert.prompt(strings.common_text_rename, this.props.title, [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress(value) {
            if (value == null || value.trim() === '') {
              YLUI.showFailTips(strings.common_collection_empty_ios);
              return;
            } else if (value.length > 20) {
              YLUI.showFailTips(strings.common_collection_too_long_ios);
              return;
            } else {
              Cloud.renameUserCollection(_this14.props.sid, value, _this14.state.userId, function (data) {
                if (data == null) {
                  YLUI.showFailTips(strings.common_collection_network_error_ios);
                  return;
                }

                if (data.code == 0) {
                  _this14.props.needUpdate();

                  YLUI.showFinishTips(strings.common_text_renamed);
                } else if (data.code == -3) {
                  YLUI.showFailTips(strings.common_collection_judgement_existed);
                } else if (data.code == -4) {
                  YLUI.showFailTips(strings.common_collection_rename_failed);
                } else {
                  YLUI.showFailTips(strings.common_collection_network_error_ios);
                }
              });
            }
          }
        }]);
      }
    }, {
      key: "_ct2Saturation",
      value: function _ct2Saturation(ct) {
        return dataSource._ct2Saturation(ct);
      }
    }]);
    return CircleCell;
  }(_react.Component);

  function getDisplayBrightness(brightness) {
    return dataSource.getDisplayBrightness(brightness);
  }

  var topGap = 0;
  var applyButtonWidth = 96;
  var applyButtonHeight = 28;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width,
      height: height
    },
    scrollViewContainer: {
      position: 'absolute',
      paddingLeft: 0,
      paddingRight: 0,
      top: 0,
      bottom: 0,
      width: width,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center',
      flexDirection: 'column'
    },
    imageBackground: {
      width: width,
      height: height
    },
    listView: {
      flex: 1,
      width: width,
      paddingLeft: 0,
      paddingRight: 0,
      paddingBottom: 0
    },
    main: {
      position: 'absolute',
      left: 0,
      top: topGap,
      width: width,
      height: height - topGap,
      backgroundColor: 'transparent',
      flex: 1
    },
    scrollSection: {
      width: width,
      height: (width - 15) / 49 * 16 + 5,
      flexDirection: 'row',
      flexWrap: 'wrap'
    },
    imageContainer: {
      marginLeft: 5,
      marginBottom: 5
    },
    image: {
      width: (width - 15) / 2,
      height: (width - 15) / 49 * 16
    },
    fixBottom: {
      height: height / 2 + 5
    },
    title: {
      position: 'absolute',
      fontSize: 16,
      color: '#333333',
      bottom: 5,
      top: 9,
      left: 20 + CIRCLE_SIZE + 8,
      opacity: 1.0,
      right: applyButtonWidth + 6 + 10
    },
    divide: {
      margin: 8,
      marginTop: 16,
      marginBottom: 0,
      height: 1,
      backgroundColor: '#fff',
      opacity: 0.2
    },
    collection: {
      backgroundColor: 'transparent',
      flexDirection: 'row',
      marginTop: 8,
      flexWrap: 'wrap',
      marginBottom: 80
    },
    circleContainer: {
      width: width,
      height: UserCellHeight,
      backgroundColor: '#ffffff'
    },
    circle: {
      width: CIRCLE_SIZE,
      height: CIRCLE_SIZE,
      borderRadius: CIRCLE_SIZE / 2,
      left: 20
    },
    imgForCircle: {
      width: CIRCLE_SIZE,
      height: CIRCLE_SIZE,
      borderRadius: CIRCLE_SIZE / 2,
      left: 20,
      opacity: 0.8
    },
    desc: {
      position: 'absolute',
      fontSize: 13,
      color: '#838383',
      opacity: 1.0,
      bottom: 5,
      top: 30,
      left: 20 + CIRCLE_SIZE + 8,
      overflow: 'hidden',
      right: applyButtonWidth + 6 + 10
    },
    addBtnContainer: {
      backgroundColor: 'transparent',
      position: 'absolute',
      bottom: 10,
      alignItems: 'center',
      left: (width - 300) / 2
    },
    button: {
      width: 300,
      height: 50,
      borderColor: '#eee',
      borderRadius: 26,
      borderWidth: 1,
      alignItems: 'center',
      backgroundColor: 'rgba(200,100,0,0.9)'
    },
    label: {
      backgroundColor: 'transparent',
      flex: 1,
      marginTop: 14,
      fontSize: 16,
      color: '#fff'
    },
    recommandCell: {
      flexDirection: 'column',
      justifyContent: 'flex-end',
      height: RecommandCellHeight
    },
    recommandTitle: {
      marginLeft: 23,
      marginBottom: 3,
      marginRight: applyButtonWidth + 6 + 10,
      color: '#fff',
      fontSize: 16
    },
    recommandDesc: {
      marginLeft: 23,
      marginBottom: 10,
      marginRight: applyButtonWidth + 6 + 10,
      color: 'rgba(255,255,255,0.8)',
      fontSize: 13
    },
    recommandPoster: {
      position: 'absolute',
      left: 0,
      bottom: 0,
      right: 0,
      top: 0,
      justifyContent: 'center',
      alignItems: 'center',
      width: width,
      height: RecommandCellHeight - 1
    },
    recommandPosterContent: {
      width: width * 110.0 / 540.0,
      height: RecommandCellHeight * 81.0 / 260.0
    },
    recommandButton: {
      position: 'absolute',
      width: applyButtonWidth,
      height: applyButtonHeight,
      right: 10,
      bottom: 10,
      backgroundColor: '#ffffff50',
      borderColor: '#ffffff68',
      borderRadius: applyButtonHeight / 2,
      borderWidth: 0.5,
      flex: 1,
      justifyContent: 'center'
    },
    recommandButtonLabel: {
      textAlign: 'center',
      color: '#ffffff',
      backgroundColor: 'transparent',
      fontSize: 13
    },
    userCell: {
      height: UserCellHeight
    },
    userCellSeperator: {
      left: 20 + CIRCLE_SIZE + 8,
      right: 0,
      height: 1,
      bottom: 0,
      backgroundColor: "#00000010",
      position: 'absolute'
    },
    userButton: {
      position: 'absolute',
      width: applyButtonWidth,
      height: applyButtonHeight,
      right: 10,
      bottom: 10,
      backgroundColor: 'transparent',
      borderColor: '#cccccc',
      borderRadius: applyButtonHeight / 2,
      borderWidth: 0.5,
      justifyContent: 'center'
    },
    userButtonLabel: {
      textAlign: 'center',
      color: '#666666',
      backgroundColor: 'transparent',
      fontSize: 13
    },
    userHeader: {
      flex: 1,
      width: width,
      height: width * 884 / 1080
    },
    userHeaderSeperator: {
      left: 0,
      right: 0,
      height: 1,
      bottom: 0,
      backgroundColor: "#eeeeee",
      position: 'absolute'
    },
    navBar: {
      backgroundColor: "#efeff0"
    },
    navBarText: {
      fontSize: 16,
      marginVertical: 10
    },
    navBarTitleText: {
      color: '#ffffff',
      fontWeight: Theme.nbTitleFontWeight,
      fontSize: 18,
      marginVertical: 9
    },
    navBarLeftButton: {
      position: 'absolute',
      left: 0
    },
    fakeNav: {
      top: 0,
      left: 0,
      right: 0,
      height: NAVIGATION_BAR_HEIGHT,
      backgroundColor: "#efeff0"
    },
    fakeNavContent: {
      top: NAVIGATION_BAR_HEIGHT - APPBAR_HEIGHT,
      left: 0,
      right: 0,
      height: APPBAR_HEIGHT,
      backgroundColor: "transparent",
      flexDirection: 'row',
      justifyContent: 'center'
    },
    navBarTitle: {
      top: 0,
      bottom: 0
    }
  });

  var route = {
    component: CollectionYeelight,
    isNavigationBarHidden: true,
    navigationBarStyle: {
      backgroundColor: "#f7f7f7"
    },
    title: strings.common_collection_favorites,
    navTitleStyle: {
      color: "#ffffff"
    },
    barStyle: "dark-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#222222"
    }
  };
  module.exports = {
    component: CollectionYeelight,
    route: route,
    entryModeType: entryModeType
  };
},11060,[10297,10033,10429,10556,10490,10526,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CollectionYeelight.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _CommonYeelightModules = _require(_dependencyMap[1]);

  var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

  var _reactNative = _require(_dependencyMap[2]);

  var CommonYeelightModulesDataSource = _CommonYeelightModules2.default.CommonYeelightModulesDataSource;
  var Tools = _CommonYeelightModules2.default.Tools,
      strings = _CommonYeelightModules2.default.strings,
      DeviceModel = _CommonYeelightModules2.default.DeviceModel,
      DelayTimer = _CommonYeelightModules2.default.DelayTimer,
      CLAlert = _CommonYeelightModules2.default.CLAlert,
      YLDevice = _CommonYeelightModules2.default.YLDevice,
      YLPackage = _CommonYeelightModules2.default.YLPackage,
      Api = _CommonYeelightModules2.default.Api,
      FanCLDelayTimer = _CommonYeelightModules2.default.FanCLDelayTimer,
      strings = _CommonYeelightModules2.default.strings;
  var CommonSceneMainDataSource = CommonYeelightModulesDataSource.CommonSceneMainDataSource;
  var Collection = CommonSceneMainDataSource.getCollection;

  var DelayTimer = _require(_dependencyMap[3]);

  var EventEmitter = _require(_dependencyMap[4]);

  var entryModeType = Collection.entryModeType;

  var SceneMain = function (_Component) {
    babelHelpers.inherits(SceneMain, _Component);

    function SceneMain(props) {
      babelHelpers.classCallCheck(this, SceneMain);

      var _this = babelHelpers.possibleConstructorReturn(this, (SceneMain.__proto__ || Object.getPrototypeOf(SceneMain)).call(this, props));

      _this.hasGotCustomSceneFromCollection = false;

      if (YLPackage.action) {
        if ('GET_YEELINK_SCENE' == YLPackage.plugId) {
          _this._firstPage = Collection;
          _this._firstPageTitle = strings.common_collection_favorites;
        } else if ('GET_YEELINK_DELAY_SETTING' == YLPackage.plugId) {
          _this._firstPage = DelayTimer;
          _this._firstPageTitle = strings.common_text_delay_off_timer;
        } else if ('GET_YEELINK_FANCL_DELAY_SETTING' == YLPackage.plugId) {
          _this._firstPage = FanCLDelayTimer;
          _this._firstPageTitle = "strings.common_text_delay_off_timer";
        } else {
          _this._firstPage = DelayTimer;
          _this._firstPageTitle = strings.common_text_delay_off_timer;
        }
      } else {}

      return _this;
    }

    babelHelpers.createClass(SceneMain, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this.eventEmitter = new EventEmitter();
        this.subscription = _reactNative.DeviceEventEmitter.addListener("deviceUpdateFromCustomScene", function (object) {
          _this2.hasGotCustomSceneFromCollection = true;

          if (object) {
            var brightness = parseInt(object.bright);
            var ct = parseInt(object.ct);

            if (DeviceModel.isMeshDevice) {
              var action = YLPackage.action;
              action.payload.value = Api.getSceneValue(ct, brightness);
              YLPackage.finishCustomSceneSetupWithAction(action);
              return;
            }

            var mode = parseInt(object.mode);
            var nl_br = parseInt(object.nl_br);
            var cf = [];

            try {
              cf = JSON.parse(object.cf);
            } catch (e) {}

            var wrgb = parseInt(object.wrgb);

            if (isNaN(mode)) {
              return;
            }

            _this2.setState({
              brightness: brightness,
              ct: ct,
              mode: mode,
              nl_br: nl_br
            });

            if (!object.set_scene) {
              return;
            }

            var action = YLPackage.action;

            if (6 == object.mode) {
              if (isNaN(nl_br)) {
                return;
              }

              action.payload.value = ['nightlight', nl_br];
            } else if (2 == mode) {
              brightness = parseInt(brightness);

              if (isNaN(brightness) || isNaN(wrgb)) {
                return;
              }

              var i = Tools.wrgb2Int(wrgb);
              action.payload.value = ['color', i, brightness];
            } else if (4 == mode || 5 == mode || 7 == mode || 8 == mode) {
              action.payload.value = cf;
            } else if (1 == mode || 3 == mode) {
              if (isNaN(ct)) {
                return;
              }

              action.payload.value = ['ct', ct, brightness];
            } else {
              if (typeof object.params == "string") {
                object.params = JSON.parse(object.params);
              }

              var param0 = DeviceModel._parseParam(object.params[0]);

              var paramString0 = param0.join(',');

              var param1 = DeviceModel._parseParam(object.params[1]);

              var paramString1 = param1.join(',');
              action.payload.value = [paramString0, paramString1];
              action.payload.command = YLDevice.deviceModel + '.set_scene_bundle';
            }

            if (DeviceModel.isSupportBgLight && mode != 9) {
              var param = JSON.stringify(action.payload.value);
              var value = param.replace(/\[|]/g, '');

              if (YLDevice.deviceModel !== object.device_model) {
                action.payload.value = ["\"keep\"", value];
              } else {
                action.payload.value = [value, "\"keep\""];
              }

              action.payload.command = YLDevice.deviceModel + '.set_scene_bundle';
            }

            YLPackage.finishCustomSceneSetupWithAction(action);
          }
        });
        this.subscriptionOfDelay = _reactNative.DeviceEventEmitter.addListener("delayTimeFromCustomScene", function (object) {
          var action = YLPackage.action;
          action.payload.value = Api.getSceneDelayValue(parseInt(object.brightness), parseInt(object.delayTimer));
          YLPackage.finishCustomSceneSetupWithAction(action);
        });
        this.subscriptionOfQuitCollection = _reactNative.DeviceEventEmitter.addListener("quitCollectionOfCustomScene", function (object) {
          if (!_this2.hasGotCustomSceneFromCollection) {
            CLAlert.alert(strings.common_dialog_notice_title, strings.common_scene_quit_message, [{
              text: strings.common_dialog_cancel,
              onPress: function onPress() {}
            }, {
              text: strings.common_dialog_ok,
              onPress: function onPress() {
                _reactNative.DeviceEventEmitter.emit("PluginApp Exit", null);

                YLPackage.closeCurrentPage();
              }
            }]);
          }
        });
        this.subscriptionOfQuitDelayTimer = _reactNative.DeviceEventEmitter.addListener("quitDelayTimerOfCustomScene", function (object) {
          _reactNative.DeviceEventEmitter.emit("PluginApp Exit", null);

          YLPackage.closeCurrentPage();
        });
        this.exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
          _this2.exitNotify.remove();

          if (_this2.subscription) {
            _this2.subscription.remove();
          }

          ;

          if (_this2.subscriptionOfDelay) {
            _this2.subscriptionOfDelay.remove();
          }

          if (_this2.subscriptionOfQuitCollection) {
            _this2.subscriptionOfQuitCollection.remove();
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.subscription.remove();
        this.subscriptionOfDelay.remove();
        this.subscriptionOfQuitCollection.remove();
        this.exitNotify.remove();
      }
    }, {
      key: "_rightBtnPressed",
      value: function _rightBtnPressed(string) {
        this.eventEmitter.emit(string, {});
      }
    }, {
      key: "render",
      value: function render() {
        var top = {
          insetForNavigator: {
            top: 44
          }
        };

        if (Collection == this._firstPage) {
          return _react2.default.createElement(this._firstPage.component, babelHelpers.extends({}, top, {
            brightness: 10,
            mode: 1,
            ct: 4500,
            entryMode: entryModeType.customScene,
            navigation: this.props.navigation
          }));
        } else if (DelayTimer == this._firstPage) {
          return _react2.default.createElement(this._firstPage.component, babelHelpers.extends({}, top, {
            entryMode: entryModeType.customScene,
            navigation: this.props.navigation
          }));
        } else if (FanCLDelayTimer == this._firstPage) {
          return _react2.default.createElement(this._firstPage.component, babelHelpers.extends({}, top, {
            entryMode: entryModeType.customScene,
            navigation: this.props.navigation
          }));
        } else {
          return _react2.default.createElement(this._firstPage.component, top);
        }
      }
    }]);
    return SceneMain;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    containerAll: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#838383',
      marginTop: 0
    },
    containerIconDemo: {
      flex: 1.7,
      flexDirection: 'column',
      backgroundColor: '#191919',
      alignSelf: 'stretch',
      justifyContent: 'center'
    },
    containerMenu: {
      flex: 1,
      flexDirection: 'column',
      backgroundColor: '#ffffff',
      alignSelf: 'stretch'
    },
    iconDemo: {
      width: 270,
      height: 181,
      alignSelf: 'center'
    },
    iconText: {
      fontSize: 20,
      textAlign: 'center',
      color: '#ffffff',
      marginTop: 20,
      alignSelf: 'center'
    }
  });

  var KEY_OF_SCENEMAIN = 'SceneMain';
  var route;

  if (YLPackage.action) {
    if ('GET_YEELINK_SCENE' == YLPackage.plugId) {
      route = Collection.route;
      route.navLeftButtonConfig = {
        actionEvent: '  '
      };
    } else if ('GET_YEELINK_DELAY_SETTING' == YLPackage.plugId) {
      route = DelayTimer.route;
    } else if ('GET_YEELINK_FANCL_DELAY_SETTING' == YLPackage.plugId) {
      route = FanCLDelayTimer.route;
    } else {}
  } else {}

  if (route) {
    route.component = SceneMain;
  }

  module.exports = {
    component: SceneMain,
    route: route
  };
},11063,[10297,10007,10033,11027,10090],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonSceneMain.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var HsvToRgb = _require(_dependencyMap[3]);

  var API = _require(_dependencyMap[4]);

  var strings = _require(_dependencyMap[5]);

  var ColorCircle = _require(_dependencyMap[6]);

  var CommonYeelightModules = _require(_dependencyMap[7]);

  var LocalStorageManager = CommonYeelightModules.LocalStorageManager,
      CLAlert = CommonYeelightModules.CLAlert,
      CLImage = CommonYeelightModules.CLImage,
      YLUI = CommonYeelightModules.YLUI,
      Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var currentHueRadian = 0;
  var COLORS = [];
  var init_colors = "";

  var ColorPicker = function (_Component) {
    babelHelpers.inherits(ColorPicker, _Component);

    function ColorPicker(props) {
      babelHelpers.classCallCheck(this, ColorPicker);

      var _this = babelHelpers.possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, props));

      _this.state = {
        hue: 0
      };
      return _this;
    }

    babelHelpers.createClass(ColorPicker, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this.subscriptionBack = _reactNative.DeviceEventEmitter.addListener('backFromTime', function () {
          if (init_colors !== JSON.stringify(COLORS)) {
            CLAlert.alert(null, strings.common_give_up, [{
              text: strings.common_dialog_cancel,
              onPress: function onPress() {}
            }, {
              text: strings.common_dialog_ok,
              onPress: function onPress() {
                _this2.props.navigation.pop();
              }
            }]);
          } else {
            _this2.props.navigation.pop();
          }
        });

        this._ramdomInitHue();

        this.setState({
          hue: COLORS[0]
        });

        this._abserveCfSaveNotify();

        var startPointx = 0;
        var startPointy = 0;
        this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: function onPanResponderGrant(e, gestureState) {
            startPointx = gestureState.x0;
            startPointy = gestureState.y0;

            var verify = _this2._verifyTouchArea(startPointx, startPointy);

            if (verify) {
              _this2.startRadian = _this2._getRadianFromXY(startPointx - _this2.centerPointx, startPointy - _this2.centerPointy);
            }
          },
          onPanResponderMove: function onPanResponderMove(e, gestureState) {
            var verify = _this2._verifyTouchArea(gestureState.x0, gestureState.y0);

            if (!verify) {
              return;
            }

            var x = gestureState.moveX - _this2.centerPointx;
            var y = gestureState.moveY - _this2.centerPointy;

            var radian = _this2._getRadianFromXY(x, y);

            var addedRadian = 0;

            if (_this2.startRadian > Math.PI * 3 / 2 && _this2.startRadian <= Math.PI * 2 && radian < Math.PI / 2.0) {
              addedRadian = 2 * Math.PI + radian - _this2.startRadian;
            } else if (_this2.startRadian > 0 && _this2.startRadian < Math.PI / 2.0 && radian > Math.PI * 3 / 2) {
              addedRadian = radian - _this2.startRadian - Math.PI * 2;
            } else {
              addedRadian = radian - _this2.startRadian;
            }

            _this2.startRadian = radian;

            if (Math.abs(addedRadian) < Math.PI * 2) {
              currentHueRadian += addedRadian;

              if (currentHueRadian < 0) {
                currentHueRadian += 2 * Math.PI;
              } else if (currentHueRadian > Math.PI * 2) {
                currentHueRadian += -2 * Math.PI;
              }

              var hue = currentHueRadian / (Math.PI * 2);

              _this2.setState({
                hue: hue
              });

              _reactNative.DeviceEventEmitter.emit("cf_setting_hue", {
                hue: hue
              });
            }
          },
          onPanResponderRelease: function onPanResponderRelease(e, gestureState) {}
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.subscription) {
          this.subscription.remove();
        }

        this.subscriptionBack && this.subscriptionBack.remove();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var backgroundColor = HsvToRgb.getRGBString(this.state.hue, 1, 50);
        var rotate = (this.state.hue * 360).toString() + 'deg';
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.container, {
              backgroundColor: backgroundColor
            }]
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.main
            },
            _react2.default.createElement(CLImage, {
              style: styles.pannelOuter,
              imagePath: 'color_select_panel1.png'
            }),
            _react2.default.createElement(
              _reactNative.View,
              babelHelpers.extends({
                style: [styles.pannel, {
                  transform: [{
                    rotate: rotate
                  }]
                }]
              }, this._panResponder.panHandlers),
              _react2.default.createElement(CLImage, {
                style: styles.pannelIn,
                imagePath: 'color_select_panel3.png'
              })
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.colors
            },
            _react2.default.createElement(ColorCircle, {
              tag: 1,
              hue: COLORS[0],
              hueChanged: function hueChanged(hue) {
                return _this3._updateSelectedColors(0, hue);
              },
              taped: function taped() {
                _this3.tapedAtIndex(0);
              }
            }),
            _react2.default.createElement(ColorCircle, {
              tag: 2,
              hue: COLORS[1],
              hueChanged: function hueChanged(hue) {
                return _this3._updateSelectedColors(1, hue);
              },
              taped: function taped() {
                _this3.tapedAtIndex(1);
              }
            }),
            _react2.default.createElement(ColorCircle, {
              tag: 3,
              hue: COLORS[2],
              hueChanged: function hueChanged(hue) {
                return _this3._updateSelectedColors(2, hue);
              },
              taped: function taped() {
                _this3.tapedAtIndex(2);
              }
            }),
            _react2.default.createElement(ColorCircle, {
              tag: 4,
              hue: COLORS[3],
              hueChanged: function hueChanged(hue) {
                return _this3._updateSelectedColors(3, hue);
              },
              taped: function taped() {
                _this3.tapedAtIndex(3);
              }
            })
          )
        );
      }
    }, {
      key: "tapedAtIndex",
      value: function tapedAtIndex(index) {
        this.setState({
          hue: COLORS[index]
        });
      }
    }, {
      key: "_verifyTouchArea",
      value: function _verifyTouchArea(x0, y0) {
        this.centerPointx = width / 2;
        this.centerPointy = height / 2 - 30;
        var x = x0 - this.centerPointx;
        var y = y0 - this.centerPointy;
        var radius = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));

        if (radius < 65.0 || radius > 140.0) {
          return false;
        }

        return true;
      }
    }, {
      key: "_getRadianFromXY",
      value: function _getRadianFromXY(x, y) {
        var radian;

        if (x == 0.0) {
          radian = y > 0 ? 0.5 * Math.PI : 1.5 * Math.PI;
        } else if (y == 0.0) {
          radian = x > 0 ? 0.0 : Math.PI;
        } else if (y < 0 && x > 0) {
          radian = 2 * Math.PI + Math.atan(y / x);
        } else {
          radian = x > 0 ? Math.atan(y / x) : Math.atan(y / x) + Math.PI;
        }

        return radian;
      }
    }, {
      key: "_ramdomInitHue",
      value: function _ramdomInitHue() {
        COLORS = [0.5030, 0.8127, 0.9341, 0.2658];
        init_colors = JSON.stringify(COLORS);
      }
    }, {
      key: "_updateSelectedColors",
      value: function _updateSelectedColors(index, hue) {
        COLORS[index] = hue;
      }
    }, {
      key: "_abserveCfSaveNotify",
      value: function _abserveCfSaveNotify() {
        var _this4 = this;

        this.subscription = _reactNative.DeviceEventEmitter.addListener('cf_save', function () {
          _this4._saveFlow();

          var COLORSCopy = JSON.parse(JSON.stringify(COLORS));
          API.startSimpleCF(COLORS, _this4.props.cf_bright, _this4.props.cf_duration, function () {});
          var flow = '[' + JSON.stringify('cf') + ',0,0,' + JSON.stringify(API.formatCF(COLORSCopy, _this4.props.cf_bright, _this4.props.cf_duration)) + ']';

          _reactNative.DeviceEventEmitter.emit("deviceUpdate", {
            mode: 5,
            wrgb: -1,
            ct: -1,
            bright: _this4.props.cf_bright,
            cf: flow,
            set_scene: true
          });

          YLUI.showFinishTips(strings.common_collection_apply_success);

          _this4.props.navigation.pop();
        });
      }
    }, {
      key: "_saveFlow",
      value: function _saveFlow() {
        var colors = COLORS.slice();

        for (var i = 0; i < colors.length; i++) {
          colors[i] = Math.floor(colors[i] * 1000);
        }

        ;
        LocalStorageManager.writeFlowColorSetting(colors.toString(), function () {});
      }
    }]);
    return ColorPicker;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    imageBackground: {
      width: width,
      height: height
    },
    main: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: width,
      height: height,
      flex: 1,
      alignItems: 'center',
      backgroundColor: '#000',
      opacity: 0.7
    },
    pannelOuter: {
      width: 370,
      height: 370,
      marginTop: (height - 370) / 2 - 30
    },
    pannel: {
      position: 'absolute',
      width: 370,
      height: 370,
      top: (height - 370) / 2 - 30,
      left: (width - 370) / 2,
      backgroundColor: 'transparent',
      alignItems: 'center'
    },
    pannelIn: {
      width: 370,
      height: 370
    },
    colors: {
      position: 'absolute',
      alignItems: 'center',
      bottom: 50,
      width: width - 30,
      marginLeft: 15,
      flexDirection: 'row',
      backgroundColor: 'transparent'
    }
  });

  var route = {
    component: ColorPicker,
    isNavigationBarHidden: false,
    navigationBarStyle: {
      backgroundColor: "transparent"
    },
    title: strings.common_color_flow_pickup_title,
    navTitleStyle: {
      color: "#ffffff",
      width: width - 100,
      textAlign: 'center'
    },
    barStyle: "light-content",
    isNavigationBarRightButtonHidden: false,
    navLeftButtonStyle: {
      tintColor: "#ffffff"
    },
    navLeftButtonConfig: {
      actionEvent: 'backFromTime'
    },
    navRightButtonConfig: {
      buttonType: 'TextButton',
      title: strings.common_text_capture_apply,
      actionEvent: 'cf_save',
      textColor: '#ffffff'
    }
  };
  module.exports = {
    component: ColorPicker,
    route: route
  };
},11066,[10297,10033,10429,10556,10553,10490,11069,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ColorPicker.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var HsvToRgb = _require(_dependencyMap[2]);

	var CommonYeelightModules = _require(_dependencyMap[3]);

	var CLImage = CommonYeelightModules.CLImage;
	var CIRCLE_SIZE = 60;

	var ColorCircle = function (_Component) {
		babelHelpers.inherits(ColorCircle, _Component);

		function ColorCircle(props) {
			babelHelpers.classCallCheck(this, ColorCircle);

			var _this = babelHelpers.possibleConstructorReturn(this, (ColorCircle.__proto__ || Object.getPrototypeOf(ColorCircle)).call(this, props));

			_this.state = {
				scaleAnimate: new _reactNative.Animated.Value(1),
				selected: false,
				hue: _this.props.hue
			};
			return _this;
		}

		babelHelpers.createClass(ColorCircle, [{
			key: "componentWillMount",
			value: function componentWillMount() {
				var _this2 = this;

				this._setDefaultSelected();

				this.cc_observer = _reactNative.DeviceEventEmitter.addListener("cc_changed", function (object) {
					var selected = false;

					if (object.tag == _this2.props.tag) {
						selected = true;
					}

					_this2.setState({
						selected: selected
					});
				});
				this.hue_observer = _reactNative.DeviceEventEmitter.addListener("cf_setting_hue", function (object) {
					if (_this2.state.selected) {
						_this2.setState({
							hue: object.hue
						});

						_this2.props.hueChanged(object.hue);
					}
				});
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				if (this.cc_observer) {
					this.cc_observer.remove();
				}

				if (this.hue_observer) {
					this.hue_observer.remove();
				}
			}
		}, {
			key: "render",
			value: function render() {
				var _this3 = this;

				var editing = _react2.default.createElement(_reactNative.View, null);

				if (this.state.selected) {
					editing = _react2.default.createElement(CLImage, {
						style: styles.inner,
						imagePath: 'color_edit_icon.png'
					});
				}

				return _react2.default.createElement(
					_reactNative.View,
					{
						style: styles.circleContainer
					},
					_react2.default.createElement(
						_reactNative.Animated.View,
						{
							style: [styles.circle, {
								transform: [{
									scale: this.state.scaleAnimate
								}]
							}, {
								backgroundColor: HsvToRgb.getRGBString(this.state.hue, 1.0, 1.0)
							}],
							onTouchEnd: function onTouchEnd() {
								return _this3._handTouchEnd();
							},
							onTouchStart: function onTouchStart() {
								return _this3._handTouchBegin();
							},
							onTouchCancel: function onTouchCancel() {
								return _this3._handTouchCancel();
							}
						},
						editing
					)
				);
			}
		}, {
			key: "_handTouchBegin",
			value: function _handTouchBegin() {
				_reactNative.DeviceEventEmitter.emit("cc_changed", {
					tag: this.props.tag
				});

				_reactNative.Animated.spring(this.state.scaleAnimate, {
					toValue: 1.2
				}).start();

				if (this.props.taped) {
					this.props.taped();
				}
			}
		}, {
			key: "_handTouchEnd",
			value: function _handTouchEnd() {
				_reactNative.Animated.spring(this.state.scaleAnimate, {
					toValue: 1,
					friction: 2.5
				}).start();
			}
		}, {
			key: "_handTouchCancel",
			value: function _handTouchCancel() {
				_reactNative.Animated.spring(this.state.scaleAnimate, {
					toValue: 1,
					friction: 2.5
				}).start();
			}
		}, {
			key: "_setDefaultSelected",
			value: function _setDefaultSelected() {
				if (this.props.tag == 1) {
					this.setState({
						selected: true
					});
				}
			}
		}]);
		return ColorCircle;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		circleContainer: {
			flex: 1,
			alignItems: 'center',
			overflow: 'hidden'
		},
		circle: {
			flex: 1,
			width: CIRCLE_SIZE,
			height: CIRCLE_SIZE,
			borderRadius: CIRCLE_SIZE / 2,
			margin: 10,
			alignItems: 'center',
			justifyContent: 'center'
		},
		inner: {
			width: CIRCLE_SIZE - 18,
			height: CIRCLE_SIZE - 18
		}
	});

	module.exports = ColorCircle;
},11069,[10297,10033,10556,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/APP/ColorCircle.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var EventEmitter = _require(_dependencyMap[3]);

  var CommonYeelightModules = _require(_dependencyMap[4]);

  var CommonYeelightModulesDataSource = CommonYeelightModules.CommonYeelightModulesDataSource;
  var APPBAR_HEIGHT = 56;
  var strings = CommonYeelightModules.strings,
      LoadingEffect = CommonYeelightModules.LoadingEffect,
      LampOff = CommonYeelightModules.LampOff,
      PageControl = CommonYeelightModules.PageControl,
      LightMode = CommonYeelightModules.LightMode,
      BaseReactComponent = CommonYeelightModules.BaseReactComponent,
      Theme = CommonYeelightModules.Theme,
      DeviceModel = CommonYeelightModules.DeviceModel,
      LampOn = CommonYeelightModules.LampOn,
      CLImageButton = CommonYeelightModules.CLImageButton,
      CLSegmentedControl = CommonYeelightModules.CLSegmentedControl,
      CLImage = CommonYeelightModules.CLImage,
      Images = CommonYeelightModules.Images,
      YLDevice = CommonYeelightModules.YLDevice,
      YLResource = CommonYeelightModules.YLResource,
      YLPackage = CommonYeelightModules.YLPackage,
      CommonTypeEnum = CommonYeelightModules.CommonTypeEnum,
      YLUI = CommonYeelightModules.YLUI,
      LocalStorageManager = CommonYeelightModules.LocalStorageManager;
  var MainControlFunction = CommonTypeEnum.MainControlFunction;
  var MainPageDataSource = CommonYeelightModulesDataSource.MainPageDataSource;
  var cronState = {
    disable: 'disable',
    normal: 'normal',
    selected: 'selected'
  };
  var touchIndex = 0;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var MainPage = function (_BaseReactComponent) {
    babelHelpers.inherits(MainPage, _BaseReactComponent);

    function MainPage(props) {
      babelHelpers.classCallCheck(this, MainPage);

      var _this = babelHelpers.possibleConstructorReturn(this, (MainPage.__proto__ || Object.getPrototypeOf(MainPage)).call(this, props));

      _this.state = {
        fadeAnimate: new _reactNative.Animated.Value(0),
        loadingAnimate: new _reactNative.Animated.Value(1),
        deviceId: YLDevice.deviceId,
        cron: cronState.normal,
        loading: true,
        category: null,
        selectedIndex: 0,
        deviceName: DeviceModel.deviceName
      };
      return _this;
    }

    babelHelpers.createClass(MainPage, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        LocalStorageManager.readLifeCycleDataWithKey("DEV").then(function (value) {
          global.DEV = value;
        }).catch(function (err) {});
        this.eventEmitter = new EventEmitter();
        this.dismissLoadingTimer = setTimeout(function () {
          _this2._dismissLoading();
        }, 6000);
        this.componentDataSource.initPluginServices();
        this.componentDataSource.addObserver();
      }
    }, {
      key: "lampOn",
      value: function lampOn() {
        return this.componentDataSource.lampOn;
      }
    }, {
      key: "lampOnOrOffFadeAnimate",
      value: function lampOnOrOffFadeAnimate() {
        var initOpacity = this.lampOn() ? 1 : 0;

        _reactNative.Animated.timing(this.state.fadeAnimate, {
          toValue: initOpacity,
          duration: 1
        }).start();
      }
    }, {
      key: "_dismissLoading",
      value: function _dismissLoading() {
        var _this3 = this;

        if (this.state.loading) {
          _reactNative.Animated.timing(this.state.loadingAnimate, {
            toValue: 0,
            duration: 400,
            delay: 200
          }).start(function () {
            _this3.setState({
              loading: false
            });
          });
        }
      }
    }, {
      key: "_rightBtnPressed",
      value: function _rightBtnPressed(string) {
        this.eventEmitter.emit(string, {});
      }
    }, {
      key: "saveDevModal",
      value: function saveDevModal() {
        touchIndex++;

        if (this.lastBackPressed && 500 <= Date.now() - this.lastBackPressed) {
          touchIndex = 0;
          this.lastBackPressed = Date.now();
          return;
        }

        this.lastBackPressed = Date.now();

        if (touchIndex > 8) {
          touchIndex = 0;
          var dev = global.DEV ? false : true;
          YLUI.showFinishTips(dev ? "开发者模式已开启" : "开发者模式关闭");
          global.DEV = dev;
          LocalStorageManager.writeLifeCycleDataWithKey("DEV", dev);
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this4 = this;

        this.componentDataSource.requestData();
        this.exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
          _this4.exitNotify.remove();
        });
        this.finishHandlePropsSubscription = _reactNative.DeviceEventEmitter.addListener("lampOnOrOffFadeAnimate", function (object) {
          _this4.lampOnOrOffFadeAnimate();
        });
        this.dismissLoadingSubscription = _reactNative.DeviceEventEmitter.addListener("dismiss_loading", function (object) {
          _this4._dismissLoading();
        });
        this.forceUpdateSubscription = _reactNative.DeviceEventEmitter.addListener("forceUpdate", function (object) {
          _this4.forceUpdate();
        });
        this._navListener = this.props.navigation.addListener('didFocus', function () {
          _reactNative.StatusBar.setBarStyle(route.barStyle || "default");
        });
      }
    }, {
      key: "clearObserver",
      value: function clearObserver() {
        if (this.finishHandlePropsSubscription) {
          this.finishHandlePropsSubscription.remove();
        }

        if (this.dismissLoadingSubscription) {
          this.dismissLoadingSubscription.remove();
        }

        if (this.forceUpdateSubscription) {
          this.forceUpdateSubscription.remove();
        }

        if (this._viewWillAppearListener) {
          this._viewWillAppearListener.remove();
        }

        this.componentDataSource.clearDataWhenUnmount();
        this.dismissLoadingTimer && clearTimeout(this.dismissLoadingTimer);
        this._navListener && this._navListener.remove();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearObserver();
      }
    }, {
      key: "_fakeNav",
      value: function _fakeNav() {
        var _this5 = this;

        var favoriteButton;

        if (this.lampOn()) {
          favoriteButton = _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              style: styles.favoriteButton,
              underlayColor: "transparent",
              onPress: function onPress() {
                _reactNative.DeviceEventEmitter.emit("addUserCollectionEvent");
              }
            },
            _react2.default.createElement(CLImage, {
              imagePath: 'title_save_white_normal.png',
              style: {
                width: 28,
                height: 28
              }
            })
          );
        }

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.fakeNav
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: styles.fakeNavContent
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.navBarLeftButton
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: {
                    left: 0,
                    width: 59,
                    height: APPBAR_HEIGHT,
                    justifyContent: 'center',
                    alignItems: 'center'
                  }
                },
                _react2.default.createElement(CLImageButton, {
                  source: Images(YLResource.requireNaviBackButtonImage),
                  onPress: function onPress() {
                    _reactNative.DeviceEventEmitter.emit("PluginApp Exit", null);

                    YLPackage.closeCurrentPage();
                  },
                  style: [{
                    width: 29,
                    height: 29,
                    tintColor: '#ffffff'
                  }, route.navLeftButtonStyle]
                })
              )
            ),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.navBarTitle
              },
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 1,
                  style: route.navTitleStyle,
                  onPress: function onPress() {
                    _this5.saveDevModal();
                  }
                },
                YLDevice.deviceName
              ),
              favoriteButton
            ),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: {
                  position: 'absolute',
                  right: 0,
                  width: 59,
                  height: APPBAR_HEIGHT,
                  justifyContent: 'center',
                  alignItems: 'center'
                }
              },
              _react2.default.createElement(CLImageButton, {
                source: Images(route.navRightButtonConfig.imageURL),
                highlightedSource: Images(route.navRightButtonConfig.highlightedImageURL || route.navRightButtonConfig.imageURL),
                onPress: function onPress() {
                  _reactNative.DeviceEventEmitter.emit(route.navRightButtonConfig.actionEvent, {});
                },
                style: [{
                  width: 35,
                  height: 35,
                  tintColor: '#ffffff'
                }, route.navRightButtonStyle]
              })
            )
          )
        );
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.container
          },
          this._displayControl(),
          this._displayMenu(),
          this._fakeNav(),
          this._topSegmentedControl(),
          _react2.default.createElement(LoadingEffect, {
            text: strings.common_text_loading_ios,
            show: this.state.loading,
            opacity: this.state.loadingAnimate
          })
        );
      }
    }, {
      key: "_topSegmentedControl",
      value: function _topSegmentedControl() {
        var _this6 = this;

        if (this.componentDataSource.shouldShowTopSegmentedControl()) {
          var tabStyle = {
            borderWidth: 1,
            borderColor: '#ffffff',
            borderRadius: 5,
            backgroundColor: 'transparent'
          };
          var activeTabStyle = {
            borderWidth: 1,
            borderColor: '#ffffff',
            borderRadius: 5,
            backgroundColor: '#ffffff'
          };
          var tabTextStyle = {
            color: '#ffffff'
          };
          var activeTabTextStyle = {
            color: "#000000"
          };
          return _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.topSegmentedControl]
            },
            _react2.default.createElement(CLSegmentedControl, {
              values: this.componentDataSource.topSegmentedControlTitles(),
              selectedIndex: this.componentDataSource.topSegmentedControlSelectedIndex,
              style: {
                flex: 1,
                width: 204,
                height: 30,
                marginTop: 0,
                marginBottom: 0
              },
              tabStyle: tabStyle,
              activeTabStyle: activeTabStyle,
              tabTextStyle: tabTextStyle,
              activeTabTextStyle: activeTabTextStyle,
              onChange: function onChange(event) {
                _this6.componentDataSource.topSegmentedControlSelectedIndex = event.nativeEvent.selectedSegmentIndex;

                _this6.onSegmentedControlChange(event);
              }
            })
          );
        } else {}
      }
    }, {
      key: "onSegmentedControlChange",
      value: function onSegmentedControlChange(event) {
        if (this.componentDataSource.mainLampOn != this.componentDataSource.backgroundLampOn) {
          this.state.fadeAnimate = new _reactNative.Animated.Value(0);
        }

        var lampOnPage = this.refs['MainPageLampOnPage'];
        lampOnPage.deviceModel = this.componentDataSource.deviceModel;
        this.lampOnOrOffFadeAnimate();
        this.forceUpdate();
      }
    }, {
      key: "ctButtonImage",
      value: function ctButtonImage() {
        return this.componentDataSource.lightMode == LightMode.ct && this.lampOn() ? this.componentDataSource.whiteButtonPressedImageName : this.componentDataSource.whiteButtonNormalImageName;
      }
    }, {
      key: "colorButtonImage",
      value: function colorButtonImage() {
        return this.componentDataSource.lightMode == LightMode.color && this.lampOn() ? 'menu_color_pressed.png' : 'menu_color_normal.png';
      }
    }, {
      key: "flowButtonImage",
      value: function flowButtonImage() {
        return this.componentDataSource.lightMode == LightMode.flow && this.lampOn() ? 'menu_flow_pressed.png' : 'menu_flow_normal.png';
      }
    }, {
      key: "nightlightButtonImage",
      value: function nightlightButtonImage() {
        return this.componentDataSource.lightMode == LightMode.nightlight && this.lampOn() ? 'menu_noctilucent_pressed.png' : 'menu_noctilucent_normal.png';
      }
    }, {
      key: "functionsByTypes",
      value: function functionsByTypes(types) {
        var returnTypes = [];

        for (var key in types) {
          var type = types[key];

          if (type == MainControlFunction.power) {
            returnTypes.push(this.powerButton());
          } else if (type == MainControlFunction.color) {
            returnTypes.push(this.colorButton());
          } else if (type == MainControlFunction.ct) {
            returnTypes.push(this.ctButton());
          } else if (type == MainControlFunction.flow) {
            returnTypes.push(this.flowingButton());
          } else if (type == MainControlFunction.collection) {
            returnTypes.push(this.collectionButton());
          } else if (type == MainControlFunction.delayTimer) {
            returnTypes.push(this.delayTimerButton());
          } else if (type == MainControlFunction.colorPick) {
            returnTypes.push(this.colorPickButton());
          } else if (type == MainControlFunction.nightlight) {
            returnTypes.push(this.nightlightButton());
          }
        }

        return returnTypes;
      }
    }, {
      key: "powerButton",
      value: function powerButton() {
        var _this7 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.button,
            key: "1001"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              activeOpacity: 0.3,
              onPress: function onPress() {
                return _this7._toggle();
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: 'menu_power_normal.png',
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                this.lampOn() ? strings.common_view_button_container_switch_close : strings.common_view_button_container_switch_open
              )
            )
          )
        );
      }
    }, {
      key: "colorButton",
      value: function colorButton() {
        var _this8 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.button],
            key: "1002"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              onPress: function onPress() {
                return _this8.componentDataSource._switch2Mode(LightMode.color);
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: this.colorButtonImage(),
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                strings.common_view_button_container_colors
              )
            )
          )
        );
      }
    }, {
      key: "ctButton",
      value: function ctButton() {
        var _this9 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.button],
            key: "1003"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              onPress: function onPress() {
                return _this9.componentDataSource._switch2Mode(LightMode.ct);
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: this.ctButtonImage(),
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                this.componentDataSource.colorTemperatureButtonName()
              )
            )
          )
        );
      }
    }, {
      key: "flowingButton",
      value: function flowingButton() {
        var _this10 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.button],
            key: "1004"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              onPress: function onPress() {
                return _this10.componentDataSource._switch2Mode(LightMode.flow);
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: this.flowButtonImage(),
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                strings.common_text_flow
              )
            )
          )
        );
      }
    }, {
      key: "collectionButton",
      value: function collectionButton() {
        var _this11 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.button,
            key: "1006"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              activeOpacity: 0.3,
              underlayColor: "transparent",
              onPress: function onPress() {
                _this11.componentDataSource._pushCollection();
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: 'menu_collection_normal.png',
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                strings.common_collection_favorites
              )
            )
          )
        );
      }
    }, {
      key: "delayTimerButton",
      value: function delayTimerButton() {
        var _this12 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.button,
            key: "1007"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              activeOpacity: this.componentDataSource.getCronState() == cronState.disable ? 1.0 : 0.3,
              underlayColor: "transparent",
              onPress: function onPress() {
                _this12.componentDataSource._handleDelayTimer();
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: 'menu_delay_' + this.componentDataSource.getCronState() + '.png',
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: [styles.buttonLabel, {
                    opacity: this.componentDataSource.getCronState() == cronState.disable ? 0.3 : 0.7
                  }]
                },
                strings.common_text_delay_off_timer
              )
            )
          )
        );
      }
    }, {
      key: "colorPickButton",
      value: function colorPickButton() {
        var _this13 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.button],
            key: "1008"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              onPress: function onPress() {
                _this13.componentDataSource.colorPick();
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: 'menu_color_pick.png',
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                strings.common_view_button_container_pickup_color
              )
            )
          )
        );
      }
    }, {
      key: "nightlightButton",
      value: function nightlightButton() {
        var _this14 = this;

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.button],
            key: "1008"
          },
          _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              onPress: function onPress() {
                return _this14.componentDataSource._switch2Mode(LightMode.nightlight);
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: styles.btnIn
              },
              _react2.default.createElement(CLImage, {
                imagePath: this.nightlightButtonImage(),
                style: this.buttonImage
              }),
              _react2.default.createElement(
                _reactNative.Text,
                {
                  numberOfLines: 2,
                  style: styles.buttonLabel
                },
                strings.common_text_night_light
              )
            )
          )
        );
      }
    }, {
      key: "_displayControl",
      value: function _displayControl() {
        var _this15 = this;

        return _react2.default.createElement(
          _reactNative.Animated.View,
          {
            onTouchStart: function onTouchStart(event) {
              return _this15._touchBegin(event);
            },
            onTouchEnd: function onTouchEnd(event) {
              return _this15._touchEnd(event);
            }
          },
          _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: styles.onContainer
            },
            _react2.default.createElement(LampOff, null)
          ),
          _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: [styles.onContainer, {
                opacity: this.state.fadeAnimate
              }]
            },
            _react2.default.createElement(LampOn, {
              navigation: this.props.navigation,
              active: this.lampOn(),
              category: this.state.category,
              deviceModel: this.componentDataSource.deviceModel,
              ref: 'MainPageLampOnPage'
            })
          )
        );
      }
    }, {
      key: "onScrollStop",
      value: function onScrollStop(event) {
        var nativeEvent = event['nativeEvent'];
        var contentSize = nativeEvent['contentSize'];
        var contentOffset = nativeEvent['contentOffset'];
        var contentOffsetX = contentOffset['x'];
        this.setState({
          selectedIndex: Math.round(contentOffsetX / (contentSize['width'] / 2) * 10 / 10)
        });
      }
    }, {
      key: "_itemsCountInARow",
      value: function _itemsCountInARow() {
        return 4;
      }
    }, {
      key: "_getBottomButtons",
      value: function _getBottomButtons(buttons) {
        if (!buttons || !Array.isArray(buttons)) {
          return [];
        }

        var groupItemCount = this._itemsCountInARow();

        var newButtonGroupArray = [];
        var group = [];

        for (var i = 0; i < buttons.length; i++) {
          var button = buttons[i];

          if (i % groupItemCount == 0) {
            group = [];
            newButtonGroupArray.push(group);
          }

          group.push(button);
        }

        var returnViews = [];

        for (var i = 0; i < newButtonGroupArray.length; i++) {
          var buttons = newButtonGroupArray[i];

          var buttonContainer = this._getButtonContainer(buttons, i);

          returnViews.push(buttonContainer);
        }

        return returnViews;
      }
    }, {
      key: "_getButtonContainer",
      value: function _getButtonContainer(buttons, i) {
        var buttonContainer = _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              width: 53 * buttons.length + 32 * Theme.ratio * buttons.length,
              backgroundColor: 'transparent',
              flexDirection: 'row'
            },
            ref: 'buttonsContainer' + i,
            key: i
          },
          buttons
        );

        var pageContainer = _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              width: width,
              backgroundColor: 'transparent',
              flex: 1,
              justifyContent: 'center',
              flexDirection: 'row'
            },
            key: i,
            ref: 'buttonsPageContainer' + i
          },
          buttonContainer
        );

        return pageContainer;
      }
    }, {
      key: "onPageIndicatorPress",
      value: function onPageIndicatorPress(index) {
        var scrollView = this.refs['buttonsScrollView'];
        scrollView.scrollTo({
          y: 0,
          x: index * width,
          animated: true
        });
      }
    }, {
      key: "_getButtonsArray",
      value: function _getButtonsArray() {
        var model = this.componentDataSource.deviceModel;
        var buttonsArray = [];

        if (this.componentDataSource.bottomFunctionTypes && this.componentDataSource.bottomFunctionTypes().length > 0) {
          buttonsArray = this.functionsByTypes(this.componentDataSource.bottomFunctionTypes());

          if (!buttonsArray) {
            buttonsArray = [this.powerButton(), this.collectionButton()];
          }
        } else if (undefined != this.state.category) {
          if (this.state.category === 'color') {
            this.buttonImage = {
              width: 60,
              height: 60
            };
            buttonsArray = [this.powerButton(), this.colorButton(), this.ctButton(), this.flowingButton(), this.collectionButton()];
          } else if (this.state.category === 'mono' || this.state.category === 'lamp') {
            buttonsArray = [this.powerButton(), this.collectionButton()];
          } else {
            buttonsArray = [this.powerButton(), this.collectionButton()];
          }
        } else {
          if (model.indexOf("yeelink.light.color") > -1 || model.indexOf("yeelink.light.strip") > -1) {
            this.buttonImage = {
              width: 60,
              height: 60
            };
            buttonsArray = [this.powerButton(), this.ctButton(), this.colorButton(), this.delayTimerButton(), this.collectionButton(), this.flowingButton()];

            if (model === "yeelink.light.strip2") {
              buttonsArray = [this.powerButton(), this.colorButton(), this.flowingButton(), this.delayTimerButton(), this.collectionButton()];
            } else if (model === "yeelink.light.color3" || model === 'yeelink.light.color5' || model === 'yeelink.light.color7') {
              buttonsArray = [this.powerButton(), this.ctButton(), this.colorButton(), this.flowingButton(), this.collectionButton()];
            }
          } else if (model === 'yeelink.light.mono1') {
            buttonsArray = [this.powerButton(), this.delayTimerButton(), this.collectionButton()];
          } else if (model === 'yeelink.light.ct2') {
            buttonsArray = [this.powerButton(), this.delayTimerButton(), this.collectionButton()];
          } else if ('yeelink.light.lamp1' === model || 'yeelink.light.lamp2' === model) {} else if (model.indexOf("ambi") !== -1) {
            buttonsArray = [this.powerButton(), this.ctButton(), this.colorButton(), this.collectionButton()];
          } else if (model === 'yeelink.light.ceiling10') {
            buttonsArray = [this.powerButton(), this.ctButton(), this.collectionButton()];
          } else if (model.indexOf("yeelink.light.ceiling") > -1) {
            buttonsArray = [this.powerButton(), this.ctButton(), this.nightlightButton(), this.collectionButton()];
          } else if (model.indexOf("yilai.light.ceiling") > -1) {
            buttonsArray = [this.powerButton(), this.ctButton(), this.collectionButton()];
          } else if (model.indexOf("yeelink.light.panel") > -1) {
            buttonsArray = [this.powerButton(), this.ctButton(), this.collectionButton()];
          } else {
            buttonsArray = [this.powerButton(), this.collectionButton()];
          }
        }

        return buttonsArray;
      }
    }, {
      key: "_displayMenu",
      value: function _displayMenu() {
        this.buttonImage = {
          width: 60,
          height: 60
        };
        var buttonsSection;

        var buttonsArray = this._getButtonsArray();

        ;

        var itemsCountInARow = this._itemsCountInARow();

        buttonsSection = function () {
          var _this16 = this;

          var buttonContainers = this._getBottomButtons(buttonsArray);

          var buttonsBottom = 8;

          if (buttonsArray.length <= itemsCountInARow) {
            buttonsBottom = 8;
          }

          var buttonsView = _react2.default.createElement(
            _reactNative.ScrollView,
            {
              style: {
                paddingRight: 0,
                paddingLeft: 0,
                bottom: buttonsBottom,
                backgroundColor: 'transparent',
                flex: 1,
                flexDirection: 'row'
              },
              showsVerticalScrollIndicator: false,
              showsHorizontalScrollIndicator: false,
              horizontal: true,
              directionalLockEnabled: true,
              ref: 'buttonsScrollView',
              pagingEnabled: true,
              onScrollAnimationEnd: function onScrollAnimationEnd(scrollView) {
                _this16.onScrollStop(scrollView);
              },
              onScrollEndDrag: function onScrollEndDrag(scrollView) {
                _this16.onScrollStop(scrollView);
              },
              onMomentumScrollEnd: function onMomentumScrollEnd(scrollView) {
                _this16.onScrollStop(scrollView);
              }
            },
            buttonContainers
          );

          if (buttonsArray.length <= itemsCountInARow) {
            return buttonsView;
          } else {
            var bottomContainer = this._getBottomContainer(buttonsView, buttonsArray);

            return bottomContainer;
          }
        }.bind(this);

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.menuContainer]
          },
          buttonsSection()
        );
      }
    }, {
      key: "_getBottomContainer",
      value: function _getBottomContainer(buttonsView, buttonsArray) {
        var _this17 = this;

        var pageControl = _react2.default.createElement(PageControl, {
          style: {
            paddingRight: 0,
            paddingLeft: 0,
            bottom: 0,
            height: 20,
            paddingTop: 0,
            backgroundColor: 'transparent',
            flexDirection: 'row'
          },
          ref: 'bottomPageControl',
          numberOfPages: Math.ceil(buttonsArray.length / 4),
          pageIndicatorTintColor: 'rgba(255,255,255,0.3)',
          indicatorSize: {
            width: 8,
            height: 8
          },
          currentPageIndicatorTintColor: 'rgb(255,255,255)',
          currentPage: this.state.selectedIndex,
          onPageIndicatorPress: function onPageIndicatorPress(index) {
            _this17.onPageIndicatorPress(index);
          }
        });

        var bottomContainer = _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              width: width,
              backgroundColor: 'transparent',
              flex: 1,
              justifyContent: 'flex-end',
              flexDirection: 'column'
            },
            ref: 'bottomContainer'
          },
          buttonsView,
          pageControl
        );

        return bottomContainer;
      }
    }, {
      key: "_touchBegin",
      value: function _touchBegin() {
        if (!this.lampOn()) {
          return;
        }
      }
    }, {
      key: "_touchEnd",
      value: function _touchEnd() {}
    }, {
      key: "_pushCollection",
      value: function _pushCollection() {
        this.componentDataSource._pushCollection();
      }
    }, {
      key: "_toggle",
      value: function _toggle() {
        this.componentDataSource._toggle();
      }
    }, {
      key: "componentDataSourceClassName",
      get: function get() {
        return MainPageDataSource;
      }
    }]);
    return MainPage;
  }(BaseReactComponent);

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#000000'
    },
    menuContainer: {
      position: 'absolute',
      paddingLeft: 0,
      paddingRight: 0,
      bottom: 10 + Theme.APPBAR_MARGINBottomSmall,
      width: width,
      backgroundColor: 'transparent',
      alignItems: 'center',
      justifyContent: 'center',
      flexDirection: 'row'
    },
    secMenu: {
      left: 0 - width
    },
    button: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'flex-start',
      paddingLeft: 10,
      paddingRight: 10,
      marginTop: 8
    },
    btnIn: {
      alignItems: 'center'
    },
    buttonLabel: babelHelpers.extends({
      fontSize: 13,
      color: '#fff',
      margin: 0,
      opacity: 0.7,
      textAlign: 'center'
    }, {
      fontFamily: ''
    }),
    image: {
      width: width,
      height: height
    },
    onContainer: {
      position: 'absolute',
      width: width,
      height: height,
      left: 0,
      top: 0
    },
    favoriteButton: {
      position: 'absolute',
      right: 8,
      width: 28,
      top: 0,
      bottom: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    navBar: {
      backgroundColor: "transparent"
    },
    navBarText: {
      fontSize: 16,
      marginVertical: 10
    },
    navBarTitleText: {
      color: '#ffffff',
      fontWeight: Theme.nbTitleFontWeight,
      fontSize: 18,
      marginVertical: 9
    },
    navBarLeftButton: {
      position: 'absolute',
      left: 0
    },
    fakeNav: {
      position: 'absolute',
      width: width,
      height: APPBAR_HEIGHT + 20,
      left: 0,
      right: 0,
      top: Theme.APPBAR_MARGINTOP,
      bottom: 0,
      padding: 0,
      backgroundColor: "transparent"
    },
    fakeNavContent: {
      top: 20,
      left: 0,
      right: 0,
      height: APPBAR_HEIGHT,
      backgroundColor: "transparent",
      flexDirection: 'row',
      justifyContent: 'center'
    },
    navBarTitle: {
      position: 'absolute',
      top: 0,
      bottom: 0,
      left: 50,
      right: 50,
      backgroundColor: 'transparent'
    },
    topSegmentedControl: {
      position: 'absolute',
      top: 72 + Theme.APPBAR_MARGINTOP,
      width: 204,
      height: 28,
      left: (width - 204) / 2,
      alignItems: 'center',
      flex: 1
    }
  });

  var navigationBarStyle = {
    backgroundColor: "transparent"
  };
  var route = {
    component: MainPage,
    isNavigationBarHidden: true,
    navigationBarStyle: navigationBarStyle,
    navTitleStyle: {
      position: 'absolute',
      left: 32,
      right: 40,
      top: 4,
      bottom: 0,
      color: "#ffffff",
      textAlign: 'center',
      fontWeight: Theme.nbTitleFontWeight,
      textAlignVertical: 'center',
      fontSize: 18,
      marginVertical: 9
    },
    barStyle: "light-content",
    isNavigationBarRightButtonHidden: false,
    navRightButtonConfig: {
      buttonType: 'ImageButton',
      imageURL: 'btn_settings.png',
      actionEvent: 'pressSettingInMainPage'
    },
    renderNavTitleComponent: function renderNavTitleComponent(route, navigator, index, navState) {
      return _react2.default.createElement(
        _reactNative.View,
        {
          style: {
            flex: 1,
            flexDirection: 'row',
            width: width - 90,
            height: 18,
            marginTop: 0,
            marginBottom: 0,
            backgroundColor: 'transparent'
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          {
            numberOfLines: 1,
            style: route.navTitleStyle
          },
          YLDevice.deviceName
        ),
        _react2.default.createElement(
          _reactNative.TouchableHighlight,
          {
            style: styles.rightButton,
            underlayColor: "transparent",
            onPress: function onPress() {
              _reactNative.DeviceEventEmitter.emit("AddFavoriteLightEvent");
            }
          },
          _react2.default.createElement(CLImage, {
            imagePath: 'title_save_white_normal.png',
            style: {
              width: 28,
              height: 28
            }
          })
        )
      );
    }
  };
  module.exports = {
    component: MainPage,
    route: route
  };
},11072,[10297,10033,10429,10090,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/MainPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var HsvToRgb = _require(_dependencyMap[3]);

  var DeviceModel = CommonYeelightModules.DeviceModel,
      SignedIntConverter = CommonYeelightModules.SignedIntConverter,
      Tools = CommonYeelightModules.Tools,
      Theme = CommonYeelightModules.Theme,
      CLImage = CommonYeelightModules.CLImage;
  var ratio = Theme.ratio;
  var CIRCLE_SIZE_SELECTED = 52 * ratio;
  var CIRCLE_SIZE = CIRCLE_SIZE_SELECTED * 0.9;

  var LightCircle = function (_Component) {
    babelHelpers.inherits(LightCircle, _Component);

    function LightCircle(props) {
      babelHelpers.classCallCheck(this, LightCircle);

      var _this = babelHelpers.possibleConstructorReturn(this, (LightCircle.__proto__ || Object.getPrototypeOf(LightCircle)).call(this, props));

      _this.state = {
        scaleAnimate: new _reactNative.Animated.Value(1)
      };
      return _this;
    }

    babelHelpers.createClass(LightCircle, [{
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "getHueFromWrgb",
      value: function getHueFromWrgb(wrgb) {
        return SignedIntConverter.getHueFromInt(wrgb);
      }
    }, {
      key: "getCircleRenderSaturationFromWrgb",
      value: function getCircleRenderSaturationFromWrgb(wrgb) {
        return Tools.getSaturationFromWrgb(wrgb);
      }
    }, {
      key: "_ct2Saturation",
      value: function _ct2Saturation(ct) {
        return 0.6 / (DeviceModel.maxCT - DeviceModel.minCT) * (DeviceModel.maxCT - ct) + 0.4;
      }
    }, {
      key: "getDisplayBrightness",
      value: function getDisplayBrightness(brightness) {
        return 0.0055 * brightness + 0.4;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var hue = 0.1;
        var s = 0.25;
        var bright = 50;

        if (this.props.mode == 2) {
          hue = this.getHueFromWrgb(this.props.wrgb);
          s = this.getCircleRenderSaturationFromWrgb(this.props.wrgb);
        } else if (this.props.mode == 3) {
          s = this._ct2Saturation(this.props.color_temperature);
        } else if (this.props.mode == 6) {
          s = this._ct2Saturation(2700);
        }

        if (this.props.mode == 6) {
          bright = this.props.nl_br * 0.1;
        } else {
          bright = this.props.bright;
        }

        if (this.props.mode == 4 || this.props.mode == 5) {
          return _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: [{
                transform: [{
                  scale: this.state.scaleAnimate
                }]
              }, this.props.circleStyle],
              onTouchEnd: function onTouchEnd() {
                return _this2._handTouchEnd();
              },
              onTouchStart: function onTouchStart() {
                return _this2._handTouchBegin();
              },
              onTouchCancel: function onTouchCancel() {
                return _this2._handTouchCancel();
              }
            },
            _react2.default.createElement(
              _reactNative.TouchableHighlight,
              {
                underlayColor: "transparent",
                activeOpacity: 1.0,
                onPress: function onPress() {
                  if (_this2.props.pressed) {
                    _this2.props.pressed();
                  }
                }
              },
              _react2.default.createElement(CLImage, {
                style: styles.imgForCircle,
                imagePath: 'all_flow_circle.png'
              })
            )
          );
        } else {
          return _react2.default.createElement(
            _reactNative.TouchableHighlight,
            {
              underlayColor: "transparent",
              activeOpacity: 1.0,
              onPress: function onPress() {
                if (_this2.props.pressed) {
                  _this2.props.pressed();
                }
              }
            },
            _react2.default.createElement(_reactNative.Animated.View, {
              style: [styles.circle, this.props.circleStyle, {
                backgroundColor: HsvToRgb.getRGBString(hue, s, this.getDisplayBrightness(bright))
              }],
              onTouchEnd: function onTouchEnd() {
                return _this2._handTouchEnd();
              },
              onTouchStart: function onTouchStart() {
                return _this2._handTouchBegin();
              },
              onTouchCancel: function onTouchCancel() {
                return _this2._handTouchCancel();
              }
            })
          );
        }
      }
    }, {
      key: "_handTouchBegin",
      value: function _handTouchBegin() {
        var _this3 = this;

        this.longTimer = setTimeout(function () {
          if (_this3.onLongPress) {
            _this3.onLongPress();
          }

          _this3.longTimer && clearTimeout(_this3.longTimer);
        }, 600);

        _reactNative.Animated.spring(this.state.scaleAnimate, {
          toValue: 1.2
        }).start();
      }
    }, {
      key: "_handTouchEnd",
      value: function _handTouchEnd() {
        clearTimeout(this.longTimer);

        _reactNative.Animated.spring(this.state.scaleAnimate, {
          toValue: 1,
          friction: 2.5
        }).start();
      }
    }, {
      key: "_handTouchCancel",
      value: function _handTouchCancel() {
        _reactNative.Animated.spring(this.state.scaleAnimate, {
          toValue: 1,
          friction: 2.5
        }).start();
      }
    }]);
    return LightCircle;
  }(_react.Component);

  var UserCellHeight = 55;
  var applyButtonWidth = 96;

  var styles = _reactNative.StyleSheet.create({
    circle: {
      width: CIRCLE_SIZE,
      height: CIRCLE_SIZE,
      borderRadius: CIRCLE_SIZE / 2
    },
    imgForCircle: {
      width: CIRCLE_SIZE,
      height: CIRCLE_SIZE,
      borderRadius: CIRCLE_SIZE / 2,
      opacity: 0.8,
      alignSelf: 'center'
    }
  });

  module.exports = LightCircle;
},11075,[10297,10033,10007,10556],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/LightCircle.js");
__d(function (global, _require2, module, exports, _dependencyMap) {
    var _react = _require2(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require2(_dependencyMap[1]);

    var _require = _require2(_dependencyMap[2]),
        Theme = _require.Theme,
        PropTypes = _require.PropTypes;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var Button = function (_Component) {
        babelHelpers.inherits(Button, _Component);

        function Button(props) {
            babelHelpers.classCallCheck(this, Button);

            var _this = babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

            _this.state = {
                active: true
            };
            return _this;
        }

        babelHelpers.createClass(Button, [{
            key: "_onHighlight",
            value: function _onHighlight() {
                this.setState({
                    active: true
                });
            }
        }, {
            key: "_onUnhighlight",
            value: function _onUnhighlight() {
                this.setState({
                    active: false
                });
            }
        }, {
            key: "render",
            value: function render() {
                var colorStyle = {
                    color: this.state.active ? '#666666' : '#000'
                };
                return _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    {
                        onHideUnderlay: this._onUnhighlight.bind(this),
                        onPress: this.props.onPress,
                        onShowUnderlay: this._onHighlight.bind(this),
                        style: [styles.button, this.props.style],
                        underlayColor: "#ddd"
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        {
                            style: [styles.buttonText, colorStyle]
                        },
                        this.props.children
                    )
                );
            }
        }]);
        return Button;
    }(_react.Component);

    ;

    var MijiaBottomModal = function (_Component2) {
        babelHelpers.inherits(MijiaBottomModal, _Component2);

        function MijiaBottomModal(props) {
            babelHelpers.classCallCheck(this, MijiaBottomModal);

            var _this2 = babelHelpers.possibleConstructorReturn(this, (MijiaBottomModal.__proto__ || Object.getPrototypeOf(MijiaBottomModal)).call(this, props));

            _this2.state = {
                modalVisible: _this2.props.modalVisible
            };
            return _this2;
        }

        babelHelpers.createClass(MijiaBottomModal, [{
            key: "componentWillMount",
            value: function componentWillMount() {}
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {}
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {}
        }, {
            key: "keyboardWillShow",
            value: function keyboardWillShow(e) {
                if (!this.state.modalVisible) {
                    return;
                }

                var endCoordinates = e.endCoordinates || {};
                var kHeight = endCoordinates.height;
                this.setState({
                    bottomY: kHeight + 10
                });
            }
        }, {
            key: "keyboardWillHide",
            value: function keyboardWillHide(e) {
                if (!this.state.modalVisible) {
                    return;
                }

                _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.easeIn);

                this.setState({
                    bottomY: 0
                });
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                this.setState({
                    modalVisible: nextProps.modalVisible
                });
            }
        }, {
            key: "dismiss",
            value: function dismiss() {
                this.setState({
                    modalVisible: false
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this3 = this;

                var transparent = true;
                var modalBackgroundStyle = {
                    backgroundColor: transparent ? 'rgba(0, 0, 0, 0.2)' : '#f5fcff'
                };
                var innerContainerTransparentStyle = transparent ? {
                    backgroundColor: '#F8F8F8',
                    margin: 5
                } : null;
                return _react2.default.createElement(
                    _reactNative.Modal,
                    {
                        animated: false,
                        transparent: true,
                        visible: this.state.modalVisible,
                        onRequestClose: function onRequestClose() {
                            _this3.setState({
                                modalVisible: false
                            });
                        },
                        style: [styles.container1, this.props.style]
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: [styles.background, modalBackgroundStyle]
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: [styles.innerContainer, innerContainerTransparentStyle, {
                                    justifyContent: 'center'
                                }]
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                {
                                    style: {
                                        padding: 20,
                                        paddingBottom: 5
                                    }
                                },
                                this.props.title && this.props.title.length > 0 ? _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: [styles.title]
                                    },
                                    this.props.title || ""
                                ) : null,
                                this.props.message ? _react2.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: [styles.content]
                                    },
                                    this.props.message || ""
                                ) : null,
                                this.props.children
                            ),
                            _react2.default.createElement(
                                _reactNative.View,
                                {
                                    style: [styles.bottomMenu]
                                },
                                _react2.default.createElement(
                                    Button,
                                    {
                                        onPress: function onPress() {
                                            if (_this3.props.leftButtonClicked) {
                                                _this3.props.leftButtonClicked();
                                            }
                                        },
                                        style: styles.leftModalButton
                                    },
                                    this.props.leftButtonTitle || ""
                                ),
                                _react2.default.createElement(
                                    Button,
                                    {
                                        onPress: function onPress() {
                                            if (_this3.props.rightButtonClicked) {
                                                _this3.props.rightButtonClicked();
                                            }
                                        },
                                        style: styles.rightModalButton
                                    },
                                    this.props.RightButtonTitle || ""
                                )
                            )
                        )
                    )
                );
            }
        }]);
        return MijiaBottomModal;
    }(_react.Component);

    MijiaBottomModal.propTypes = {
        modalVisible: PropTypes.bool,
        title: PropTypes.string,
        message: PropTypes.string,
        leftButtonTitle: PropTypes.string,
        RightButtonTitle: PropTypes.string,
        leftButtonClicked: PropTypes.func,
        rightButtonClicked: PropTypes.func
    };
    var radius = 18;

    var styles = _reactNative.StyleSheet.create({
        container: {
            position: 'absolute',
            bottom: 0,
            left: 0,
            right: 0,
            top: 0,
            height: height
        },
        container1: {
            position: 'absolute',
            bottom: 0,
            left: 0,
            right: 0,
            height: height
        },
        background: {
            flex: 1,
            justifyContent: 'center',
            padding: 0,
            position: 'absolute',
            bottom: 0,
            left: 0,
            right: 0,
            height: height
        },
        innerContainer: {
            position: 'absolute',
            left: 0,
            right: 0,
            bottom: Theme.APPBAR_MARGINBottom,
            backgroundColor: '#f5f5f5'
        },
        button: {
            flex: 1,
            height: 44,
            alignSelf: 'stretch',
            justifyContent: 'center',
            overflow: 'hidden'
        },
        bottomMenu: {
            flex: 1,
            flexDirection: 'row',
            marginBottom: 0
        },
        buttonText: {
            fontSize: 14,
            margin: 5,
            textAlign: 'center',
            color: '#999999'
        },
        leftModalButton: {
            flex: 1,
            borderWidth: 1,
            borderRightWidth: 0,
            marginTop: 10,
            marginLeft: 0,
            height: 50,
            backgroundColor: '#eff0f1',
            borderColor: '#E8E8E8'
        },
        rightModalButton: {
            flex: 1,
            borderWidth: 1,
            marginTop: 10,
            marginRight: 0,
            height: 50,
            backgroundColor: '#eff0f1',
            borderColor: '#E8E8E8'
        },
        title: {
            color: '#666666',
            fontWeight: '400',
            fontSize: 16,
            top: 0,
            marginVertical: 9,
            textAlign: 'center'
        },
        content: {
            flex: 1,
            flexDirection: 'row',
            fontWeight: '300',
            fontSize: 13,
            marginTop: 10,
            marginLeft: 20,
            marginRight: 20,
            textAlign: 'center'
        },
        contentText: {
            height: 20
        }
    });

    module.exports = MijiaBottomModal;
},11078,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/MijiaBottomModal.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseYeelightModulesDataSource = function () {
    function BaseYeelightModulesDataSource() {
      babelHelpers.classCallCheck(this, BaseYeelightModulesDataSource);
    }

    babelHelpers.createClass(BaseYeelightModulesDataSource, [{
      key: "BaseLampOnDataSource",
      get: function get() {
        return _require(_dependencyMap[0]);
      }
    }, {
      key: "BaseApiDataSource",
      get: function get() {
        return _require(_dependencyMap[1]);
      }
    }, {
      key: "BaseSettingMenuDataSource",
      get: function get() {
        return _require(_dependencyMap[2]);
      }
    }, {
      key: "BaseDefaultLightDataSource",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "BaseMibandAttachedPageDataSource",
      get: function get() {
        return _require(_dependencyMap[4]);
      }
    }, {
      key: "BaseCollectionDataSource",
      get: function get() {
        return _require(_dependencyMap[5]);
      }
    }, {
      key: "BaseMainIndexIOSDataSource",
      get: function get() {
        return _require(_dependencyMap[6]);
      }
    }, {
      key: "BaseMainPageDataSource",
      get: function get() {
        return _require(_dependencyMap[7]);
      }
    }, {
      key: "BaseComponentDataSource",
      get: function get() {
        return _require(_dependencyMap[8]);
      }
    }, {
      key: "BaseDeviceModelDataSource",
      get: function get() {
        return _require(_dependencyMap[9]);
      }
    }]);
    return BaseYeelightModulesDataSource;
  }();

  module.exports = BaseYeelightModulesDataSource;
},11081,[11084,11087,11252,11258,11261,11264,11267,11270,11276,11279],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseYeelightModulesDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var CollectionMiJia = CommonYeelightModules.CollectionMiJia,
      LightMode = CommonYeelightModules.LightMode,
      Cloud = CommonYeelightModules.Cloud,
      Tools = CommonYeelightModules.Tools,
      HsvToRgb = CommonYeelightModules.HsvToRgb,
      Api = CommonYeelightModules.Api,
      LightGenerator = CommonYeelightModules.LightGenerator,
      strings = CommonYeelightModules.strings,
      AppVersion = CommonYeelightModules.AppVersion,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      DeviceModel = CommonYeelightModules.DeviceModel,
      Theme = CommonYeelightModules.Theme,
      FlowingPanelDefault = CommonYeelightModules.FlowingPanelDefault,
      CLAlert = CommonYeelightModules.CLAlert,
      YLAccount = CommonYeelightModules.YLAccount,
      YLUI = CommonYeelightModules.YLUI,
      LightDataType = CommonYeelightModules.LightDataType;
  var BaseComponentDataSource = BaseYeelightModulesDataSource.BaseComponentDataSource;
  var modeObserver;
  var pushObserver;
  var modeWithoutSendCommandObserver;
  var exitNotify;
  var addUserCollectionObserver;
  var subscription;
  var colorCache = 0.0;
  var preLightMode;
  var indicatorShowed = false;
  var HoriIndicatorShowed = false;

  var BaseLampOnDataSource = function (_BaseComponentDataSou) {
    babelHelpers.inherits(BaseLampOnDataSource, _BaseComponentDataSou);

    function BaseLampOnDataSource(props) {
      babelHelpers.classCallCheck(this, BaseLampOnDataSource);

      var _this = babelHelpers.possibleConstructorReturn(this, (BaseLampOnDataSource.__proto__ || Object.getPrototypeOf(BaseLampOnDataSource)).call(this, props));

      LightGenerator.getCfColors(function (colors) {
        var formatColorFlow = Api.formatCF(colors, 100, 1);

        if (formatColorFlow) {
          var flow = '[' + JSON.stringify('cf') + ',0,0,' + JSON.stringify(formatColorFlow) + ']';

          _this.setState({
            cf: flow
          });
        }
      });
      _this.state = {
        userId: YLAccount.userId,
        brightness: 100,
        cf_brightness: 100,
        nl_br: 0,
        hue: 0.08,
        ct: 0.5,
        lightMode: LightMode.ct,
        cf_duration: 1,
        deviceModel: _this.props.deviceModel,
        isRight: false
      };
      return _this;
    }

    babelHelpers.createClass(BaseLampOnDataSource, [{
      key: "addObserver",
      value: function addObserver() {
        var _this2 = this;

        subscription = _reactNative.DeviceEventEmitter.addListener("deviceUpdate", function (object) {
          if (indicatorShowed || HoriIndicatorShowed) {
            return;
          }

          _this2.handleParseDeviceUpdate(object);
        });
        this.subscription = _reactNative.DeviceEventEmitter.addListener("get_status", function (object) {
          _this2.handleParseGetStatus(object);
        });
        pushObserver = _reactNative.DeviceEventEmitter.addListener("push_collection", function (object) {
          if (_this2.state.category) {
            _this2.props.navigation.push(babelHelpers.extends({
              title: strings.common_collection_favorites
            }, _this2.getCollection().route, {
              passProps: {
                state: _this2.state,
                category: _this2.props.category,
                lampOn: _this2.props.active
              }
            }));
          } else {
            _this2.props.navigation.push(babelHelpers.extends({
              title: strings.common_collection_favorites
            }, _this2.getCollection().route, {
              passProps: {
                state: _this2.state,
                lampOn: _this2.props.active
              }
            }));
          }
        });
        modeObserver = _reactNative.DeviceEventEmitter.addListener("changeMode", function (object) {
          if (object.mode) {
            _this2._changeLightMode(object.mode, true);
          }
        });
        modeWithoutSendCommandObserver = _reactNative.DeviceEventEmitter.addListener("changeModeWithoutSendCommand", function (object) {
          if (object.mode) {
            _this2._changeLightMode(object.mode, false);
          }
        });
        exitNotify = _reactNative.DeviceEventEmitter.addListener("PluginApp Exit", function (object) {
          exitNotify.remove();

          if (subscription != null) {
            subscription.remove();
          }

          ;

          _this2.clearObserver();
        });
        addUserCollectionObserver = _reactNative.DeviceEventEmitter.addListener("addUserCollectionEvent", function (value) {
          _this2._showNamePrompt(value);
        });
      }
    }, {
      key: "statusProcessor",
      value: function statusProcessor() {
        var _this3 = this;

        return {
          lampOn: function lampOn(value) {
            return {
              "lampOn": value
            };
          },
          ct: function ct(value) {
            return {
              "ct": LightGenerator.CT2Value(value, _this3.isRight)
            };
          },
          bright: function bright(value) {
            return {
              "brightness": value
            };
          },
          flow_params: function flow_params(value) {
            var flowString = '';

            if (value) {
              flowString = JSON.stringify(value);
            }

            var flowPartString = '[]';
            var flow = '';

            if (flowString && flowString.length > 5) {
              flowPartString = flowString.substring(5);

              if (flowPartString) {
                flow = '[' + JSON.stringify('cf') + ',0,0,' + '\"' + flowPartString + ']';
              }
            }

            return {
              "cf": flow
            };
          },
          nl_br: function nl_br(value) {
            var nl_br = _this3.nl_br;

            if (value && value > 0) {
              nl_br = value;
            }

            return {
              "nl_br": nl_br
            };
          },
          rgb: function (_rgb) {
            function rgb(_x, _x2) {
              return _rgb.apply(this, arguments);
            }

            rgb.toString = function () {
              return _rgb.toString();
            };

            return rgb;
          }(function (value, object) {
            var hue = Tools.getHue(value);

            if (object.color_mode == 3) {
              hue = object.hue / 360.0;
            }

            _this3.colorCache = rgb;
            return {
              "hue": hue
            };
          }),
          common: function common(object) {
            var returnValue = {};

            if (object.hasOwnProperty('color_mode')) {
              var color_mode = object.color_mode;
              var flowing = _this3.state.flowing;

              if (object.hasOwnProperty('flowing')) {
                flowing = object.flowing;
              }

              var nl_br = _this3.state.nl_br;

              if (object.hasOwnProperty('nl_br')) {
                nl_br = object.nl_br;
              }

              returnValue = {
                "lightMode": LightMode.modeCheck(color_mode, flowing, nl_br)
              };
            } else if (object.hasOwnProperty('lightMode')) {
              returnValue = {
                lightMode: object.lightMode
              };
            }

            return returnValue;
          }
        };
      }
    }, {
      key: "handleParseGetStatus",
      value: function handleParseGetStatus(result) {
        if (this.indicatorShowed || this.HoriIndicatorShowed) {
          return;
        }

        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.statusProcessor()[key];

            if (processor) {
              var value = processor(item);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        if (this.statusProcessor().common) {
          var _value = this.statusProcessor().common(result);

          updateValue = babelHelpers.extends({}, updateValue, _value);
        }

        this.setState(updateValue);
      }
    }, {
      key: "stateProcessor",
      value: function stateProcessor() {
        var _this4 = this;

        return {
          ct: function ct(value) {
            return {
              "ct": LightGenerator.CT2Value(value, _this4.isRight)
            };
          },
          bright: function bright(value) {
            var bright = _this4.brightness;

            if (undefined == value || 0 >= value) {
              bright = _this4.brightness;
            } else {
              bright = value;
            }

            return {
              "brightness": bright,
              "cf_brightness": bright
            };
          },
          cf: function cf(value) {
            return {
              "cf": value
            };
          },
          nl_br: function nl_br(value) {
            var nl_br = _this4.nl_br;

            if (value && value > 0) {
              nl_br = value;
            }

            return {
              "nl_br": nl_br
            };
          },
          wrgb: function wrgb(value) {
            var hue = Tools.getHueFromWrgb(value);
            _this4.colorCache = hue;
            return {
              "hue": hue
            };
          },
          mode: function mode(value, object) {
            var mode = LightMode.ct;

            if (LightDataType.colorTemperature1 == value) {
              mode = LightMode.ct;
            }

            if (LightDataType.colorTemperature2 == value) {
              mode = LightMode.ct;
            } else if (LightDataType.color == value) {
              mode = LightMode.color;
            } else if (LightDataType.flow == value || LightDataType.complexColorFlow == value || LightDataType.colorTemperatureFlow == value || LightDataType.brightnessFlow == value) {
              mode = LightMode.flow;
            } else if (LightDataType.moon == value) {
              mode = LightMode.nightlight;
            }

            return {
              "lightMode": mode
            };
          }
        };
      }
    }, {
      key: "handleParseDeviceUpdate",
      value: function handleParseDeviceUpdate(result) {
        if (this.indicatorShowed || this.HoriIndicatorShowed) {
          return;
        }

        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.stateProcessor()[key];

            if (processor) {
              var value = processor(item);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        this.setState(updateValue);

        if (result.set_scene) {
          DeviceModel.applyLight(babelHelpers.extends({}, result, {
            isInMainLight: this.isInMainLight()
          }));
        }
      }
    }, {
      key: "getCollection",
      value: function getCollection() {
        return CollectionMiJia;
      }
    }, {
      key: "getFlowingPanel",
      value: function getFlowingPanel() {
        return FlowingPanelDefault;
      }
    }, {
      key: "isSupportFlowing",
      value: function isSupportFlowing() {
        return true;
      }
    }, {
      key: "_showNamePrompt",
      value: function _showNamePrompt(value) {
        var _this5 = this;

        CLAlert.prompt(this.addCollectionAlertTitle(), null, [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress(value) {
            if (!value || value.trim() === '') {
              YLUI.showFailTips(strings.common_collection_empty_ios);
              return;
            } else if (value.length > 20) {
              YLUI.showFailTips(strings.common_collection_too_long_ios);
              return;
            } else {
              _this5.addUserCollection(value);
            }
          }
        }]);
      }
    }, {
      key: "clearObserver",
      value: function clearObserver() {
        if (this.subscription) {
          this.subscription.remove();
        }

        if (modeObserver) {
          modeObserver.remove();
        }

        if (pushObserver) {
          pushObserver.remove();
        }

        if (modeWithoutSendCommandObserver) {
          modeWithoutSendCommandObserver.remove();
        }

        if (addUserCollectionObserver) {
          addUserCollectionObserver.remove();
        }
      }
    }, {
      key: "currentBrightness",
      value: function currentBrightness() {
        if (LightMode.nightlight == this.lightMode) {
          return this.nl_br;
        } else if (LightMode.flow == this.lightMode) {
          return this.cf_brightness;
        } else {
          return this.brightness;
        }
      }
    }, {
      key: "setCurrentBrightness",
      value: function setCurrentBrightness(value) {
        if (LightMode.nightlight == this.lightMode) {
          this.nl_br = value;
        } else if (LightMode.flow == this.lightMode) {
          this.cf_brightness = value;
        } else {
          this.brightness = value;
        }
      }
    }, {
      key: "_setLightMode",
      value: function _setLightMode(value) {
        this.lightMode = value;
      }
    }, {
      key: "getHueFromWrgb",
      value: function getHueFromWrgb(wrgb) {
        return Tools.getHueFromWrgb(wrgb);
      }
    }, {
      key: "setState",
      value: function setState(value) {
        this.state = babelHelpers.extends({}, this.state, value);
        this.stateValueDidChange(value);

        if (this.shouldForceUpdateOfValue(value)) {
          _reactNative.DeviceEventEmitter.emit("forceUpdateLampOn", {});
        }
      }
    }, {
      key: "stateValueDidChange",
      value: function stateValueDidChange(value) {
        if (this.props.componentOwner && this.props.stateValueChangeCallback) {
          this.props.stateValueChangeCallback(value);
        }
      }
    }, {
      key: "getRealKeyByKey",
      value: function getRealKeyByKey(key) {
        return key;
      }
    }, {
      key: "setAdaptorState",
      value: function setAdaptorState(value) {
        var newValue = {};

        for (var key in value) {
          var newKey = this.getRealKeyByKey(key);
          newValue[newKey] = value[key];
        }

        this.state = babelHelpers.extends({}, this.state, newValue);
      }
    }, {
      key: "shouldForceUpdateOfValue",
      value: function shouldForceUpdateOfValue(value) {
        var forceUpdateKeys = this.forceUpdateKeys();

        for (var index in forceUpdateKeys) {
          var key = forceUpdateKeys[index];

          if (value.hasOwnProperty(key)) {
            if (this.state[key] != value[key]) {
              return true;
            }
          }
        }

        return false;
      }
    }, {
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lightMode', 'ct', 'hue', 'brightness', 'nl_br'];
      }
    }, {
      key: "applyBrightness",
      value: function applyBrightness(brightness, forceChange, directlyChange) {
        if (this.lightMode == LightMode.flow) {
          if (!directlyChange) {
            this.cf_brightness = brightness;
          }

          LightGenerator.changeSimpleColorFlowBrightness(brightness, this.cf_duration, function (success, response) {}, forceChange);
        } else if (this.lightMode == LightMode.nightlight) {
          if (!directlyChange) {
            this.nl_br = brightness;
          }

          LightGenerator.changeBrightness(brightness, function () {}, forceChange);
        } else {
          if (!directlyChange) {
            this.brightness = brightness;
          }

          LightGenerator.changeBrightness(brightness, function () {}, forceChange);
        }
      }
    }, {
      key: "addUserCollection",
      value: function addUserCollection(value) {
        var mode = 2;
        var ct = -1;
        var wrgb = -1;
        var flow = -1;

        if (this.lightMode == LightMode.ct) {
          mode = DeviceModel.isFixedColorTemperature ? 1 : 3;
          ct = LightGenerator.value2CT(this.ct);
          wrgb = -1;
        } else if (this.lightMode == LightMode.flow) {
          mode = 4;
          wrgb = -1;
          flow = this.cf;
        } else if (this.lightMode == LightMode.color) {
          mode = 2;
          wrgb = HsvToRgb.getRGB(this.hue, 1, 1);
          wrgb = Tools.rgb2wrgb(wrgb.r, wrgb.g, wrgb.b);
        } else if (this.lightMode == LightMode.nightlight) {
          mode = 6;
          ct = -1;
        } else if (this.lightMode == LightMode.none) {
          mode = 1;
          ct = 4000;
        }

        var callback = function callback(data) {
          if (!data) {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
            return;
          }

          if (data.code == 0) {
            YLUI.showFinishTips(strings.common_collection_added_success);
          } else if (data.code == -3) {
            YLUI.showFailTips(strings.common_collection_judgement_existed);
          } else {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
          }
        };

        this._postCollection(value, mode, this.currentBrightness(), ct, wrgb, flow, callback);
      }
    }, {
      key: "_postCollection",
      value: function _postCollection(title, mode, bright, ct, wrgb, flow, callback) {
        Cloud.addUserCollection(this.state.userId, title, mode, bright, ct, wrgb, flow, this.state.deviceModel, callback);
      }
    }, {
      key: "startSimpleCF",
      value: function startSimpleCF(colors) {
        var _this6 = this;

        LightGenerator.getCfColors(function (colors) {
          Api.startSimpleCF(colors, _this6.cf_brightness, _this6.cf_duration, function (success, response) {});
        });
      }
    }, {
      key: "_turnOnNightlight",
      value: function _turnOnNightlight() {
        var _this7 = this;

        if (LightMode.nightlight == this.lightMode && this.lampOn) {
          return;
        } else {
          this.lampOn = true;
        }

        var preLightMode = this.lightMode;

        this._setLightMode(LightMode.nightlight);

        Api.setNightLight(true, function (isSuceess, response) {
          if (isSuceess) {} else {
            _this7._setLightMode(preLightMode);
          }
        });
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this8 = this;

        Api.setPowerOnAndChangeMode(mode, function (success, response) {
          if (success) {
            _this8.setAdaptorState({
              lampOn: true,
              lightMode: mode
            });
          }
        });
      }
    }, {
      key: "turnOnCT",
      value: function turnOnCT() {
        this.changeCTDirectly();
      }
    }, {
      key: "_turnOnSunlight",
      value: function _turnOnSunlight() {
        var _this9 = this;

        if (LightMode.ct == this.lightMode && this.lampOn) {
          return;
        } else {
          if (this.lampOn) {
            var preLightMode = this.lightMode;

            this._setLightMode(LightMode.ct);

            Api.setNightLight(false, function (isSuceess, response) {
              if (isSuceess) {} else {
                _this9._setLightMode(preLightMode);
              }
            });
          } else {
            var index = AppVersion.indexOf('(');
            var versionBigThan1_8 = false;

            if (index != -1) {
              var realVersion = parseInt(AppVersion.substring(0, index));

              if (!isNaN(realVersion) && realVersion > 1.8) {
                versionBigThan1_8 = true;
              } else {}
            } else {}

            this.lampOn = true;
            var preLightMode = this.lightMode;

            this._setLightMode(LightMode.ct);

            if (versionBigThan1_8) {
              this._setPowerOnAndSwitch2Mode(LightMode.ct);
            } else {
              Api.setScene('ct', this.ct, this.brightness, function (isSuccess, response) {});
            }
          }
        }
      }
    }, {
      key: "_changeLightMode",
      value: function _changeLightMode(mode, shouldSendCommand) {
        var _this10 = this;

        if (mode == LightMode.ct) {
          if (preLightMode != LightMode.ct) {
            this.colorCache = this.hue;
          }

          this.hue = 0.08;

          if (shouldSendCommand) {
            var model = this.state.deviceModel;
            this.turnOnCT();
          }
        } else if (mode == LightMode.color) {
          this.hue = this.colorCache;

          if (shouldSendCommand) {
            this.changeColorDirectly();
          }
        } else if (mode == LightMode.flow) {
          if (shouldSendCommand) {
            LightGenerator.getCfColors(function (colors) {
              Api.startSimpleCFBySetScene(colors, _this10.cf_brightness, _this10.cf_duration, function (success, response) {});
            });
          }
        } else if (LightMode.nightlight == mode) {
          this._turnOnNightlight();
        } else {}

        preLightMode = mode;
        this.lightMode = mode;
        this.updateLightState();
      }
    }, {
      key: "changeCTDirectly",
      value: function changeCTDirectly() {
        LightGenerator.changeCTDirectly(this.ct);
      }
    }, {
      key: "changeColorDirectly",
      value: function changeColorDirectly() {
        LightGenerator.changeColorDirectly(this.colorCache);
      }
    }, {
      key: "changeLight",
      value: function changeLight(value, callback, forceChange) {
        LightGenerator.changeLight(value, this.lightMode, callback, forceChange);
      }
    }, {
      key: "getValueFromStateByKey",
      value: function getValueFromStateByKey(key) {
        return this.state[key];
      }
    }, {
      key: "setValueFromStateByKey",
      value: function setValueFromStateByKey(key, value) {
        var realKey = this.getRealKeyByKey(key);
        var dict = {};
        dict[realKey] = value;
        this.setState(dict);
      }
    }, {
      key: "touchPointImageName",
      value: function touchPointImageName() {
        return 'touch_dot.png';
      }
    }, {
      key: "touchPointImageSize",
      value: function touchPointImageSize() {
        return 150;
      }
    }, {
      key: "_setCt",
      value: function _setCt(ct, bright) {
        if (this.isInMainLight()) {
          ct = parseInt(ct);
          bright = parseInt(bright);
          Api.setScene('ct', ct, bright, function (isSuceess, response) {});
        } else {
          ct = parseInt(ct);
          bright = parseInt(bright);
          Api.setBgScene('ct', ct, bright, function (isSuceess, response) {});
        }
      }
    }, {
      key: "_setCf",
      value: function _setCf(string) {
        if (this.isInMainLight()) {
          var array = JSON.parse(string);
          Api.setCfScene(array, function (isSuceess, response) {});
        } else {
          var array = JSON.parse(string);
          Api.setBgCfScene(array, function (isSuceess, response) {});
        }
      }
    }, {
      key: "_setNightLight",
      value: function _setNightLight(nl_br) {
        var nl_br = parseInt(nl_br);
        Api.setNightLightScene(nl_br, function (isSuccess, response) {});
      }
    }, {
      key: "_setRgb",
      value: function _setRgb(wrgb, brightness) {
        if (this.isInMainLight()) {
          brightness = parseInt(brightness);
          var i = Tools.wrgb2Int(wrgb);
          Api.setScene("color", i, brightness, function (isSuceess, response) {});
        } else {
          brightness = parseInt(brightness);
          var i = Tools.wrgb2Int(wrgb);
          Api.setBgScene("color", i, brightness, function (isSuceess, response) {});
        }
      }
    }, {
      key: "updateLightState",
      value: function updateLightState() {}
    }, {
      key: "getLightStateFromValue",
      value: function getLightStateFromValue(value) {
        if (value) {
          var lightState = '';

          if (LightMode.nightlight == value.lightMode) {
            lightState = strings.common_title_bar_brightness + ' ' + value.nl_br + '%';
          } else {
            lightState = strings.common_title_bar_brightness + ' ' + value.brightness + '%' + '   ' + strings.common_title_bar_ct + ' ' + Math.floor(LightGenerator.value2CT(value.ct)) + 'K';
          }

          return lightState;
        }
      }
    }, {
      key: "addCollectionAlertTitle",
      value: function addCollectionAlertTitle() {
        return strings.common_collection_dialog_add_title;
      }
    }, {
      key: "isFixedColorTemperature",
      value: function isFixedColorTemperature() {
        return false;
      }
    }, {
      key: "shouldShowLightState",
      value: function shouldShowLightState() {
        return global.DEV ? true : false;
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps, nextState) {
        return false;
      }
    }, {
      key: "wrgb",
      get: function get() {
        return this.state.wrgb;
      },
      set: function set(value) {
        this.setState({
          wrgb: value
        });
      }
    }, {
      key: "brightness",
      get: function get() {
        var value = this.getValueFromStateByKey('brightness');

        if (null != value) {
          return value;
        } else {
          return 100;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('brightness', value);
      }
    }, {
      key: "cf_brightness",
      get: function get() {
        var value = this.getValueFromStateByKey('cf_brightness');

        if (null != value) {
          return value;
        } else {
          return 100;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('cf_brightness', value);
      }
    }, {
      key: "nl_br",
      get: function get() {
        var value = this.getValueFromStateByKey('nl_br');

        if (null != value) {
          return value;
        } else {
          return 1;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('nl_br', value);
      }
    }, {
      key: "hue",
      get: function get() {
        var value = this.getValueFromStateByKey('hue');

        if (null != value) {
          return value;
        } else {
          return 0.08;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('hue', value);
      }
    }, {
      key: "ct",
      get: function get() {
        var value = this.getValueFromStateByKey('ct');

        if (null != value) {
          return value;
        } else {
          return 0.5;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('ct', value);
      }
    }, {
      key: "cf_duration",
      get: function get() {
        var value = this.getValueFromStateByKey('cf_duration');

        if (null != value) {
          return value;
        } else {
          return 1;
        }
      },
      set: function set(value) {
        this.setValueFromStateByKey('cf_duration', value);
      }
    }, {
      key: "cf",
      get: function get() {
        return this.state.cf;
      }
    }, {
      key: "HoriIndicatorShowed",
      set: function set(value) {
        HoriIndicatorShowed = value;
      },
      get: function get() {
        return HoriIndicatorShowed;
      }
    }, {
      key: "indicatorShowed",
      set: function set(value) {
        indicatorShowed = value;
      },
      get: function get() {
        return indicatorShowed;
      }
    }, {
      key: "lampOn",
      get: function get() {
        return this.getValueFromStateByKey('lampOn');
      },
      set: function set(lampOn) {
        this.setState({
          lampOn: lampOn
        });
      }
    }, {
      key: "lightMode",
      get: function get() {
        return this.getValueFromStateByKey('lightMode');
      },
      set: function set(value) {
        this.setValueFromStateByKey('lightMode', value);
      }
    }, {
      key: "isRight",
      set: function set(value) {
        this.setValueFromStateByKey('isRight', value);
      },
      get: function get() {
        return this.state.isRight;
      }
    }, {
      key: "deviceModel",
      get: function get() {
        return this.state.deviceModel;
      },
      set: function set(value) {
        this.setState({
          deviceModel: value
        });
      }
    }, {
      key: "colorCache",
      set: function set(value) {
        colorCache = value;
      },
      get: function get() {
        return colorCache;
      }
    }, {
      key: "hIndicatorViewStyles",
      get: function get() {
        return {
          position: 'absolute',
          top: 70 + Theme.APPBAR_MARGINTOP,
          backgroundColor: 'transparent'
        };
      }
    }, {
      key: "lampOnBackGroundImage",
      get: function get() {
        return "ct_mask.png";
      }
    }]);
    return BaseLampOnDataSource;
  }(BaseComponentDataSource);

  module.exports = BaseLampOnDataSource;
},11084,[10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseLampOnDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _CompatibleLayer = _require(_dependencyMap[0]);

  var BaseApiDataSource = function () {
    function BaseApiDataSource() {
      babelHelpers.classCallCheck(this, BaseApiDataSource);
    }

    babelHelpers.createClass(BaseApiDataSource, [{
      key: "getPropsArray",
      value: function getPropsArray() {
        return ['color_mode', 'power', 'ct', 'bright', 'nl_br'];
      }
    }, {
      key: "registerPropsArray",
      value: function registerPropsArray() {
        return ["power", "bright", "ct", 'color_mode', "nl_br"];
      }
    }, {
      key: "IndexOfGetProps",
      value: function IndexOfGetProps(value) {
        return this.getProps.indexOf(value);
      }
    }, {
      key: "IndexOfRegisterProps",
      value: function IndexOfRegisterProps(value) {
        return this.registerProps.indexOf(value);
      }
    }, {
      key: "getProps",
      get: function get() {
        return this.getPropsArray();
      }
    }, {
      key: "registerProps",
      get: function get() {
        var a = this.registerPropsArray().map(function (item) {
          return (0, _CompatibleLayer.devicePropConverter)(item);
        });
        return a;
      }
    }]);
    return BaseApiDataSource;
  }();

  module.exports = BaseApiDataSource;
},11087,[11090],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseApiDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _CLNumberSpinner = _require(_dependencyMap[0]);

    var _CLNumberSpinner2 = babelHelpers.interopRequireDefault(_CLNumberSpinner);

    var _CLDatePicker = _require(_dependencyMap[1]);

    var _CLDatePicker2 = babelHelpers.interopRequireDefault(_CLDatePicker);

    var _CLSwitch = _require(_dependencyMap[2]);

    var _CLSwitch2 = babelHelpers.interopRequireDefault(_CLSwitch);

    var _CLImageButton = _require(_dependencyMap[3]);

    var _CLImageButton2 = babelHelpers.interopRequireDefault(_CLImageButton);

    var _CLActivityIndicator = _require(_dependencyMap[4]);

    var _CLActivityIndicator2 = babelHelpers.interopRequireDefault(_CLActivityIndicator);

    var _CLPicker = _require(_dependencyMap[5]);

    var _CLPicker2 = babelHelpers.interopRequireDefault(_CLPicker);

    var _CLProgressView = _require(_dependencyMap[6]);

    var _CLProgressView2 = babelHelpers.interopRequireDefault(_CLProgressView);

    var _CLSegmentedControl = _require(_dependencyMap[7]);

    var _CLSegmentedControl2 = babelHelpers.interopRequireDefault(_CLSegmentedControl);

    var _CLAlert = _require(_dependencyMap[8]);

    var _CLAlert2 = babelHelpers.interopRequireDefault(_CLAlert);

    var _CLActionSheet = _require(_dependencyMap[9]);

    var _CLActionSheet2 = babelHelpers.interopRequireDefault(_CLActionSheet);

    var _CLImage = _require(_dependencyMap[10]);

    var _CLImage2 = babelHelpers.interopRequireDefault(_CLImage);

    var _CLPropTypes = _require(_dependencyMap[11]);

    var _CLPropTypes2 = babelHelpers.interopRequireDefault(_CLPropTypes);

    var _YLPackage = _require(_dependencyMap[12]);

    var _YLPackage2 = babelHelpers.interopRequireDefault(_YLPackage);

    var _CLVideo = _require(_dependencyMap[13]);

    var _CLVideo2 = babelHelpers.interopRequireDefault(_CLVideo);

    var _YLDevice = _require(_dependencyMap[14]);

    var _YLDevice2 = babelHelpers.interopRequireDefault(_YLDevice);

    var _YLHost = _require(_dependencyMap[15]);

    var _YLHost2 = babelHelpers.interopRequireDefault(_YLHost);

    var _YLResource = _require(_dependencyMap[16]);

    var _YLResource2 = babelHelpers.interopRequireDefault(_YLResource);

    var _YLDeviceEvent = _require(_dependencyMap[17]);

    var _YLDeviceEvent2 = babelHelpers.interopRequireDefault(_YLDeviceEvent);

    var _YLPackageEvent = _require(_dependencyMap[18]);

    var _YLPackageEvent2 = babelHelpers.interopRequireDefault(_YLPackageEvent);

    var _YLUI = _require(_dependencyMap[19]);

    var _YLUI2 = babelHelpers.interopRequireDefault(_YLUI);

    var _YLStorage = _require(_dependencyMap[20]);

    var _YLStorage2 = babelHelpers.interopRequireDefault(_YLStorage);

    var _YLService = _require(_dependencyMap[21]);

    var _YLService2 = babelHelpers.interopRequireDefault(_YLService);

    var _YLIBluetoothLE = _require(_dependencyMap[22]);

    var _YLIBluetoothLE2 = babelHelpers.interopRequireDefault(_YLIBluetoothLE);

    var _YLBluetoothEvent = _require(_dependencyMap[23]);

    var _YLBluetoothEvent2 = babelHelpers.interopRequireDefault(_YLBluetoothEvent);

    var _YLLocalizedStrings = _require(_dependencyMap[24]);

    var _YLLocalizedStrings2 = babelHelpers.interopRequireDefault(_YLLocalizedStrings);

    var _CLCard = _require(_dependencyMap[25]);

    var _CLCard2 = babelHelpers.interopRequireDefault(_CLCard);

    var _CLNavigationBar = _require(_dependencyMap[26]);

    var _CLNavigationBar2 = babelHelpers.interopRequireDefault(_CLNavigationBar);

    var _CLSeparator = _require(_dependencyMap[27]);

    var _CLSeparator2 = babelHelpers.interopRequireDefault(_CLSeparator);

    var _CLCommonSetting = _require(_dependencyMap[28]);

    var _CLListItem = _require(_dependencyMap[29]);

    var _CLResources = _require(_dependencyMap[30]);

    var CompatibleLayer = {
        get CLPropTypes() {
            return _CLPropTypes2.default;
        },

        get CLNumberSpinner() {
            return _CLNumberSpinner2.default;
        },

        get CLDatePicker() {
            return _CLDatePicker2.default;
        },

        get CLSwitch() {
            return _CLSwitch2.default;
        },

        get CLImageButton() {
            return _CLImageButton2.default;
        },

        get CLActivityIndicator() {
            return _CLActivityIndicator2.default;
        },

        get CLPicker() {
            return _CLPicker2.default;
        },

        get CLProgressView() {
            return _CLProgressView2.default;
        },

        get CLSegmentedControl() {
            return _CLSegmentedControl2.default;
        },

        get CLAlert() {
            return _CLAlert2.default;
        },

        get CLActionSheet() {
            return _CLActionSheet2.default;
        },

        get CLImage() {
            return _CLImage2.default;
        },

        get YLPackage() {
            return _YLPackage2.default;
        },

        get CLVideo() {
            return _CLVideo2.default;
        },

        get YLDevice() {
            return _YLDevice2.default;
        },

        get YLHost() {
            return _YLHost2.default;
        },

        get YLResource() {
            return _YLResource2.default;
        },

        get YLDeviceEvent() {
            return _YLDeviceEvent2.default;
        },

        get YLPackageEvent() {
            return _YLPackageEvent2.default;
        },

        get YLUI() {
            return _YLUI2.default;
        },

        get YLStorage() {
            return _YLStorage2.default;
        },

        get YLService() {
            return _YLService2.default;
        },

        get YLIBluetoothLE() {
            return _YLIBluetoothLE2.default;
        },

        get YLBluetoothEvent() {
            return _YLBluetoothEvent2.default;
        },

        get YLLocalizedStrings() {
            return _YLLocalizedStrings2.default;
        },

        get CLCard() {
            return _CLCard2.default;
        },

        get CLNavigationBar() {
            return _CLNavigationBar2.default;
        },

        get CLSeparator() {
            return _CLSeparator2.default;
        },

        get CLCommonSetting() {
            return _CLCommonSetting.CommonSetting;
        },

        get CLSETTING_KEYS() {
            return _CLCommonSetting.SETTING_KEYS;
        },

        get CLFIRST_ALL_OPTIONS() {
            return _CLCommonSetting.firstAllOptions;
        },

        get CLSECOND_ALL_OPTIONS() {
            return _CLCommonSetting.secondAllOptions;
        },

        get CLListItemWithSwitch() {
            return _CLListItem.ListItemWithSwitch;
        },

        get CLListItem() {
            return _CLListItem.ListItem;
        },

        get CLStyles() {
            return _CLResources.Styles;
        },

        devicePropConverter: function devicePropConverter(prop) {
            if (prop.includes('prop.') || prop.includes('event.')) {
                return prop;
            } else {
                return 'prop.' + prop;
            }
        }
    };
    module.exports = CompatibleLayer;
},11090,[11093,11096,11099,11102,11105,11108,11129,11132,11135,11150,11153,11156,11159,11162,11174,11177,11192,11195,11198,11201,11207,11210,11225,11228,11231,11234,11237,11240,11243,11246,11249],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _ui = _require(_dependencyMap[1]);

  module.exports = _ui.NumberSpinner;
},11093,[10297,10230],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLNumberSpinner.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _MHDatePicker = _require(_dependencyMap[1]);

  var _MHDatePicker2 = babelHelpers.interopRequireDefault(_MHDatePicker);

  module.exports = _MHDatePicker2.default;
},11096,[10297,10716],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLDatePicker.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNativeUiKitten = _require(_dependencyMap[1]);

  module.exports = _reactNativeUiKitten.RkSwitch;
},11099,[10297,11251],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLSwitch.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _ImageButton = _require(_dependencyMap[0]);

  var _ImageButton2 = babelHelpers.interopRequireDefault(_ImageButton);

  module.exports = _ImageButton2.default;
},11102,[10200],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLImageButton.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  module.exports = _reactNative.ActivityIndicator;
},11105,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLActivityIndicator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _rmcPicker = _require(_dependencyMap[0]);

  var _rmcPicker2 = babelHelpers.interopRequireDefault(_rmcPicker);

  module.exports = _rmcPicker2.default;
},11108,[11111],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLPicker.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Picker = _require(_dependencyMap[0]);

  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Picker)['default'];
    }
  });

  var _Popup = _require(_dependencyMap[1]);

  Object.defineProperty(exports, 'Popup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Popup)['default'];
    }
  });

  var _PopupStyles = _require(_dependencyMap[2]);

  Object.defineProperty(exports, 'PopupStyles', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_PopupStyles)['default'];
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }
},11111,[13465,11114,11126],"node_modules/rmc-picker/lib/index.native.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = _interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _PopupMixin = _require(_dependencyMap[2]);

    var _PopupMixin2 = _interopRequireDefault(_PopupMixin);

    var _Modal = _require(_dependencyMap[3]);

    var _Modal2 = _interopRequireDefault(_Modal);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            'default': obj
        };
    }

    var getModal = function getModal(props, visible, _ref) {
        var getContent = _ref.getContent,
            hide = _ref.hide,
            onDismiss = _ref.onDismiss,
            onOk = _ref.onOk;
        var styles = props.styles,
            title = props.title,
            okText = props.okText,
            dismissText = props.dismissText;
        var titleEl = typeof title === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: [styles.title]
        }, title) : title;
        var okEl = typeof okText === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: [styles.actionText, styles.okText]
        }, okText) : okText;
        var dismissEl = typeof dismissText === 'string' ? _react2['default'].createElement(_reactNative.Text, {
            style: [styles.actionText, styles.dismissText]
        }, dismissText) : dismissText;
        return _react2['default'].createElement(_Modal2['default'], {
            animationType: 'slide-up',
            wrapStyle: styles.modal,
            visible: visible,
            onClose: hide
        }, _react2['default'].createElement(_reactNative.View, {
            style: [styles.header]
        }, _react2['default'].createElement(_reactNative.TouchableHighlight, {
            onPress: onDismiss,
            style: [styles.headerItem],
            activeOpacity: props.actionTextActiveOpacity,
            underlayColor: props.actionTextUnderlayColor
        }, dismissEl), _react2['default'].createElement(_reactNative.View, {
            style: [styles.headerItem]
        }, titleEl), _react2['default'].createElement(_reactNative.TouchableHighlight, {
            onPress: onOk,
            style: [styles.headerItem],
            activeOpacity: props.actionTextActiveOpacity,
            underlayColor: props.actionTextUnderlayColor
        }, okEl)), getContent());
    };

    exports['default'] = (0, _PopupMixin2['default'])(getModal, {
        actionTextUnderlayColor: '#ddd',
        actionTextActiveOpacity: 1,
        triggerType: 'onPress',
        styles: {},
        WrapComponent: _reactNative.View
    });
    module.exports = exports['default'];
},11114,[10297,10033,11117,11123],"node_modules/rmc-picker/lib/Popup.native.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _extends2 = _require(_dependencyMap[0]);

    var _extends3 = _interopRequireDefault(_extends2);

    var _defineProperty2 = _require(_dependencyMap[1]);

    var _defineProperty3 = _interopRequireDefault(_defineProperty2);

    var _classCallCheck2 = _require(_dependencyMap[2]);

    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

    var _createClass2 = _require(_dependencyMap[3]);

    var _createClass3 = _interopRequireDefault(_createClass2);

    var _possibleConstructorReturn2 = _require(_dependencyMap[4]);

    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

    var _inherits2 = _require(_dependencyMap[5]);

    var _inherits3 = _interopRequireDefault(_inherits2);

    exports['default'] = PopupMixin;

    var _react = _require(_dependencyMap[6]);

    var _react2 = _interopRequireDefault(_react);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            'default': obj
        };
    }

    function PopupMixin(getModal, platformProps) {
        return _a = function (_React$Component) {
            (0, _inherits3['default'])(_a, _React$Component);

            function _a(props) {
                (0, _classCallCheck3['default'])(this, _a);

                var _this = (0, _possibleConstructorReturn3['default'])(this, (_a.__proto__ || Object.getPrototypeOf(_a)).call(this, props));

                _this.onPickerChange = function (pickerValue) {
                    if (_this.state.pickerValue !== pickerValue) {
                        _this.setState({
                            pickerValue: pickerValue
                        });

                        var _this$props = _this.props,
                            picker = _this$props.picker,
                            pickerValueChangeProp = _this$props.pickerValueChangeProp;

                        if (picker && picker.props[pickerValueChangeProp]) {
                            picker.props[pickerValueChangeProp](pickerValue);
                        }
                    }
                };

                _this.saveRef = function (picker) {
                    _this.picker = picker;
                };

                _this.onTriggerClick = function (e) {
                    var child = _this.props.children;
                    var childProps = child.props || {};

                    if (childProps[_this.props.triggerType]) {
                        childProps[_this.props.triggerType](e);
                    }

                    _this.fireVisibleChange(!_this.state.visible);
                };

                _this.onOk = function () {
                    _this.props.onOk(_this.picker && _this.picker.getValue());

                    _this.fireVisibleChange(false);
                };

                _this.getContent = function () {
                    if (_this.props.picker) {
                        var _React$cloneElement;

                        var pickerValue = _this.state.pickerValue;

                        if (pickerValue === null) {
                            pickerValue = _this.props.value;
                        }

                        return _react2['default'].cloneElement(_this.props.picker, (_React$cloneElement = {}, (0, _defineProperty3['default'])(_React$cloneElement, _this.props.pickerValueProp, pickerValue), (0, _defineProperty3['default'])(_React$cloneElement, _this.props.pickerValueChangeProp, _this.onPickerChange), (0, _defineProperty3['default'])(_React$cloneElement, 'ref', _this.saveRef), _React$cloneElement));
                    } else {
                        return _this.props.content;
                    }
                };

                _this.onDismiss = function () {
                    _this.props.onDismiss();

                    _this.fireVisibleChange(false);
                };

                _this.hide = function () {
                    _this.fireVisibleChange(false);
                };

                _this.state = {
                    pickerValue: 'value' in _this.props ? _this.props.value : null,
                    visible: _this.props.visible || false
                };
                return _this;
            }

            (0, _createClass3['default'])(_a, [{
                key: 'componentWillReceiveProps',
                value: function componentWillReceiveProps(nextProps) {
                    if ('value' in nextProps) {
                        this.setState({
                            pickerValue: nextProps.value
                        });
                    }

                    if ('visible' in nextProps) {
                        this.setVisibleState(nextProps.visible);
                    }
                }
            }, {
                key: 'setVisibleState',
                value: function setVisibleState(visible) {
                    this.setState({
                        visible: visible
                    });

                    if (!visible) {
                        this.setState({
                            pickerValue: null
                        });
                    }
                }
            }, {
                key: 'fireVisibleChange',
                value: function fireVisibleChange(visible) {
                    if (this.state.visible !== visible) {
                        if (!('visible' in this.props)) {
                            this.setVisibleState(visible);
                        }

                        this.props.onVisibleChange(visible);
                    }
                }
            }, {
                key: 'getRender',
                value: function getRender() {
                    var props = this.props;
                    var children = props.children;

                    if (!children) {
                        return getModal(props, this.state.visible, {
                            getContent: this.getContent,
                            onOk: this.onOk,
                            hide: this.hide,
                            onDismiss: this.onDismiss
                        });
                    }

                    var _props = this.props,
                        WrapComponent = _props.WrapComponent,
                        disabled = _props.disabled;
                    var child = children;
                    var newChildProps = {};

                    if (!disabled) {
                        newChildProps[props.triggerType] = this.onTriggerClick;
                    }

                    return _react2['default'].createElement(WrapComponent, {
                        style: props.wrapStyle
                    }, _react2['default'].cloneElement(child, newChildProps), getModal(props, this.state.visible, {
                        getContent: this.getContent,
                        onOk: this.onOk,
                        hide: this.hide,
                        onDismiss: this.onDismiss
                    }));
                }
            }, {
                key: 'render',
                value: function render() {
                    return this.getRender();
                }
            }]);
            return _a;
        }(_react2['default'].Component), _a.defaultProps = (0, _extends3['default'])({
            onVisibleChange: function onVisibleChange(_) {},
            okText: 'Ok',
            dismissText: 'Dismiss',
            title: '',
            onOk: function onOk(_) {},
            onDismiss: function onDismiss() {}
        }, platformProps), _a;

        var _a;
    }

    module.exports = exports['default'];
},11117,[13201,11120,13318,13321,13333,13435,10297],"node_modules/rmc-picker/lib/PopupMixin.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  exports.__esModule = true;

  var _defineProperty = _require(_dependencyMap[0]);

  var _defineProperty2 = _interopRequireDefault(_defineProperty);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = function (obj, key, value) {
    if (key in obj) {
      (0, _defineProperty2.default)(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  };
},11120,[13324],"node_modules/babel-runtime/helpers/defineProperty.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _classCallCheck2 = _require(_dependencyMap[0]);

    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

    var _createClass2 = _require(_dependencyMap[1]);

    var _createClass3 = _interopRequireDefault(_createClass2);

    var _possibleConstructorReturn2 = _require(_dependencyMap[2]);

    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

    var _inherits2 = _require(_dependencyMap[3]);

    var _inherits3 = _interopRequireDefault(_inherits2);

    var _react = _require(_dependencyMap[4]);

    var _react2 = _interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[5]);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            'default': obj
        };
    }

    var styles = _reactNative.StyleSheet.create({
        wrap: {
            flex: 1,
            backgroundColor: 'rgba(0,0,0,0)'
        },
        mask: {
            backgroundColor: 'black',
            opacity: .5
        },
        content: {
            backgroundColor: 'white'
        },
        absolute: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            left: 0,
            right: 0
        }
    });

    var screen = _reactNative.Dimensions.get('window');

    var RCModal = function (_React$Component) {
        (0, _inherits3['default'])(RCModal, _React$Component);

        function RCModal(props) {
            (0, _classCallCheck3['default'])(this, RCModal);

            var _this = (0, _possibleConstructorReturn3['default'])(this, (RCModal.__proto__ || Object.getPrototypeOf(RCModal)).call(this, props));

            _this.animateMask = function (visible) {
                _this.stopMaskAnim();

                _this.state.opacity.setValue(_this.getOpacity(!visible));

                _this.animMask = _reactNative.Animated.timing(_this.state.opacity, {
                    toValue: _this.getOpacity(visible),
                    duration: _this.props.animationDuration
                });

                _this.animMask.start(function () {
                    _this.animMask = null;
                });
            };

            _this.stopMaskAnim = function () {
                if (_this.animMask) {
                    _this.animMask.stop();

                    _this.animMask = null;
                }
            };

            _this.stopDialogAnim = function () {
                if (_this.animDialog) {
                    _this.animDialog.stop();

                    _this.animDialog = null;
                }
            };

            _this.animateDialog = function (visible) {
                _this.stopDialogAnim();

                _this.animateMask(visible);

                var _this$props = _this.props,
                    animationType = _this$props.animationType,
                    animationDuration = _this$props.animationDuration;
                animationDuration = animationDuration;

                if (animationType !== 'none') {
                    if (animationType === 'slide-up' || animationType === 'slide-down') {
                        _this.state.position.setValue(_this.getPosition(!visible));

                        _this.animDialog = _reactNative.Animated.timing(_this.state.position, {
                            toValue: _this.getPosition(visible),
                            duration: animationDuration,
                            easing: visible ? _reactNative.Easing.elastic(0.8) : undefined
                        });
                    } else if (animationType === 'fade') {
                        _this.animDialog = _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.opacity, {
                            toValue: _this.getOpacity(visible),
                            duration: animationDuration,
                            easing: visible ? _reactNative.Easing.elastic(0.8) : undefined
                        }), _reactNative.Animated.spring(_this.state.scale, {
                            toValue: _this.getScale(visible)
                        })]);
                    }

                    _this.animDialog.start(function () {
                        _this.animDialog = null;

                        if (!visible) {
                            _this.setState({
                                modalVisible: false
                            });
                        }

                        if (_this.props.onAnimationEnd) {
                            _this.props.onAnimationEnd(visible);
                        }
                    });
                } else {
                    if (!visible) {
                        _this.setState({
                            modalVisible: false
                        });
                    }
                }
            };

            _this.close = function () {
                _this.animateDialog(false);
            };

            _this.onMaskClose = function () {
                if (_this.props.maskClosable && _this.props.onClose) {
                    _this.props.onClose();
                }
            };

            _this.getPosition = function (visible) {
                if (visible) {
                    return 0;
                }

                return _this.props.animationType === 'slide-down' ? -screen.height : screen.height;
            };

            _this.getScale = function (visible) {
                return visible ? 1 : 1.05;
            };

            _this.getOpacity = function (visible) {
                return visible ? 1 : 0;
            };

            var visible = props.visible;
            _this.state = {
                position: new _reactNative.Animated.Value(_this.getPosition(visible)),
                scale: new _reactNative.Animated.Value(_this.getScale(visible)),
                opacity: new _reactNative.Animated.Value(_this.getOpacity(visible)),
                modalVisible: visible
            };
            return _this;
        }

        (0, _createClass3['default'])(RCModal, [{
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
                if (this.shouldComponentUpdate(nextProps, null)) {
                    this.setState({
                        modalVisible: true
                    });
                }
            }
        }, {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps, nextState) {
                if (this.props.visible || this.props.visible !== nextProps.visible) {
                    return true;
                }

                if (nextState) {
                    if (nextState.modalVisible !== this.state.modalVisible) {
                        return true;
                    }
                }

                return false;
            }
        }, {
            key: 'componentDidMount',
            value: function componentDidMount() {
                if (this.props.animateAppear && this.props.animationType !== 'none') {
                    this.componentDidUpdate({});
                }
            }
        }, {
            key: 'componentDidUpdate',
            value: function componentDidUpdate(prevProps) {
                var props = this.props;

                if (prevProps.visible !== props.visible) {
                    this.animateDialog(props.visible);
                }
            }
        }, {
            key: 'render',
            value: function render() {
                var props = this.props;

                if (!this.state.modalVisible) {
                    return null;
                }

                var animationStyleMap = {
                    none: {},
                    'slide-up': {
                        transform: [{
                            translateY: this.state.position
                        }]
                    },
                    'slide-down': {
                        transform: [{
                            translateY: this.state.position
                        }]
                    },
                    fade: {
                        transform: [{
                            scale: this.state.scale
                        }],
                        opacity: this.state.opacity
                    }
                };
                return _react2['default'].createElement(_reactNative.Modal, {
                    visible: true,
                    transparent: true,
                    onRequestClose: this.props.onClose,
                    supportedOrientations: ['portrait', 'landscape']
                }, _react2['default'].createElement(_reactNative.View, {
                    style: [styles.wrap, props.wrapStyle]
                }, _react2['default'].createElement(_reactNative.TouchableWithoutFeedback, {
                    onPress: this.onMaskClose
                }, _react2['default'].createElement(_reactNative.Animated.View, {
                    style: [styles.absolute, {
                        opacity: this.state.opacity
                    }]
                }, _react2['default'].createElement(_reactNative.View, {
                    style: [styles.absolute, props.maskStyle]
                }))), _react2['default'].createElement(_reactNative.Animated.View, {
                    style: [styles.content, props.style, animationStyleMap[props.animationType]]
                }, this.props.children)));
            }
        }]);
        return RCModal;
    }(_react2['default'].Component);

    exports['default'] = RCModal;
    RCModal.defaultProps = {
        wrapStyle: styles.wrap,
        maskStyle: styles.mask,
        animationType: 'slide-up',
        animateAppear: false,
        animationDuration: 300,
        visible: false,
        maskClosable: true,
        onClose: function onClose() {},
        onAnimationEnd: function onAnimationEnd(_visible) {}
    };
    module.exports = exports['default'];
},11123,[13318,13321,13333,13435,10297,10033],"node_modules/rmc-dialog/lib/Modal.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _extends2 = _require(_dependencyMap[0]);

    var _extends3 = _interopRequireDefault(_extends2);

    var _reactNative = _require(_dependencyMap[1]);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            'default': obj
        };
    }

    var textStyle = {
        color: '#0ae',
        fontSize: 18,
        textAlign: 'center'
    };

    var styles = _reactNative.StyleSheet.create({
        modal: {
            flexDirection: 'column',
            justifyContent: 'flex-end'
        },
        header: {
            height: 44,
            alignItems: 'center',
            flexDirection: 'row',
            justifyContent: 'center',
            borderBottomWidth: 1,
            borderBottomColor: '#e7e7e7'
        },
        headerItem: {
            height: 44,
            alignItems: 'center',
            justifyContent: 'center',
            flex: 1
        },
        actionText: textStyle,
        okText: {},
        dismissText: {},
        title: (0, _extends3['default'])({}, textStyle, {
            color: '#666'
        })
    });

    exports['default'] = styles;
    module.exports = exports['default'];
},11126,[13201,10033],"node_modules/rmc-picker/lib/PopupStyles.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNativeProgress = _require(_dependencyMap[1]);

    var Progress = babelHelpers.interopRequireWildcard(_reactNativeProgress);

    var CLProgressView = function CLProgressView(props) {
        var defaultProps = {
            width: null,
            height: 2,
            borderRadius: 0,
            borderWidth: 0
        };
        var style = props.style,
            progressTintColor = props.progressTintColor,
            trackTintColor = props.trackTintColor,
            progress = props.progress,
            _props$options = props.options,
            options = _props$options === undefined ? {} : _props$options;

        if (style.width) {
            options.width = style.width;
        }

        if (style.height) {
            options.height = style.height;
        }

        options = babelHelpers.extends({}, defaultProps, options);
        return _react2.default.createElement(Progress.Bar, babelHelpers.extends({
            style: style,
            progress: progress,
            color: progressTintColor,
            unfilledColor: trackTintColor
        }, options));
    };

    module.exports = CLProgressView;
},11129,[10297,13636],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLProgressView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _CommonYeelightModules = _require(_dependencyMap[1]);

    var SegmentedControl = function SegmentedControl(props) {
        var values = props.values,
            _props$enabled = props.enabled,
            enabled = _props$enabled === undefined ? true : _props$enabled,
            selectedIndex = props.selectedIndex,
            _props$tintColor = props.tintColor,
            tintColor = _props$tintColor === undefined ? "#5E89F7" : _props$tintColor,
            style = props.style,
            onChange = props.onChange,
            _props$options = props.options,
            options = _props$options === undefined ? {} : _props$options,
            _props$tabStyle = props.tabStyle,
            tabStyle = _props$tabStyle === undefined ? {} : _props$tabStyle,
            _props$tabTextStyle = props.tabTextStyle,
            tabTextStyle = _props$tabTextStyle === undefined ? {} : _props$tabTextStyle,
            _props$activeTabStyle = props.activeTabStyle,
            activeTabStyle = _props$activeTabStyle === undefined ? {} : _props$activeTabStyle,
            _props$activeTabTextS = props.activeTabTextStyle,
            activeTabTextStyle = _props$activeTabTextS === undefined ? {} : _props$activeTabTextS;
        tabStyle = babelHelpers.extends({
            borderColor: tintColor
        }, tabStyle);
        tabTextStyle = babelHelpers.extends({
            color: tintColor
        }, tabTextStyle);
        activeTabStyle = babelHelpers.extends({
            backgroundColor: tintColor
        }, activeTabStyle);
        activeTabTextStyle = babelHelpers.extends({
            color: "#ffffff"
        }, activeTabTextStyle);
        return _react2.default.createElement(_CommonYeelightModules.SegmentedControlTab, babelHelpers.extends({
            enabled: enabled,
            tabsContainerStyle: style,
            tabStyle: tabStyle,
            tabTextStyle: tabTextStyle,
            activeTabStyle: activeTabStyle,
            activeTabTextStyle: activeTabTextStyle,
            values: values,
            selectedIndex: selectedIndex,
            onTabPress: function onTabPress(index) {
                var event = {
                    nativeEvent: {
                        selectedSegmentIndex: index
                    }
                };
                onChange && onChange(event);
            }
        }, options));
    };

    module.exports = SegmentedControl;
},11132,[10297,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLSegmentedControl.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Prompt = _require(_dependencyMap[2]);

  var _Prompt2 = babelHelpers.interopRequireDefault(_Prompt);

  var _CLOverlay = _require(_dependencyMap[3]);

  var _CLOverlay2 = babelHelpers.interopRequireDefault(_CLOverlay);

  var _ui = _require(_dependencyMap[4]);

  var DialogView = function (_Overlay$View) {
    babelHelpers.inherits(DialogView, _Overlay$View);

    function DialogView(props) {
      babelHelpers.classCallCheck(this, DialogView);

      var _this = babelHelpers.possibleConstructorReturn(this, (DialogView.__proto__ || Object.getPrototypeOf(DialogView)).call(this, props));

      _this.state = babelHelpers.extends({}, _this.state);
      return _this;
    }

    babelHelpers.createClass(DialogView, [{
      key: "renderContent",
      value: function renderContent() {
        var _props = this.props,
            title = _props.title,
            message = _props.message,
            cancelText = _props.cancelText,
            submitText = _props.submitText,
            _onCancel = _props.onCancel,
            _onConfirm = _props.onConfirm;
        return _react2.default.createElement(_ui.InputDialog, {
          title: title,
          message: message,
          singleLine: true,
          cancel: cancelText,
          cancelable: false,
          timeout: 0,
          confirm: submitText,
          placeholder: "",
          onCancel: function onCancel(e) {
            _onCancel && _onCancel();
          },
          onConfirm: function onConfirm(e) {
            _onConfirm && _onConfirm(e.text || "");
          },
          onDismiss: function onDismiss() {},
          visible: true
        });
      }
    }]);
    return DialogView;
  }(_CLOverlay2.default.View);

  var DialogMessageView = function (_Overlay$View2) {
    babelHelpers.inherits(DialogMessageView, _Overlay$View2);

    function DialogMessageView(props) {
      babelHelpers.classCallCheck(this, DialogMessageView);
      return babelHelpers.possibleConstructorReturn(this, (DialogMessageView.__proto__ || Object.getPrototypeOf(DialogMessageView)).call(this, props));
    }

    babelHelpers.createClass(DialogMessageView, [{
      key: "renderContent",
      value: function renderContent() {
        var _props2 = this.props,
            title = _props2.title,
            message = _props2.message,
            cancelText = _props2.cancelText,
            submitText = _props2.submitText,
            _onCancel2 = _props2.onCancel,
            _onConfirm2 = _props2.onConfirm;
        return _react2.default.createElement(_ui.MessageDialog, {
          title: title,
          message: message,
          cancelable: false,
          cancel: cancelText,
          confirm: submitText,
          onCancel: function onCancel(e) {
            _onCancel2 & _onCancel2();
          },
          onConfirm: function onConfirm(e) {
            _onConfirm2 && _onConfirm2();
          },
          onDismiss: function onDismiss() {},
          visible: true
        });
      }
    }]);
    return DialogMessageView;
  }(_CLOverlay2.default.View);

  var miKey = null;

  var AlertComponent = function (_Overlay) {
    babelHelpers.inherits(AlertComponent, _Overlay);

    function AlertComponent() {
      babelHelpers.classCallCheck(this, AlertComponent);
      return babelHelpers.possibleConstructorReturn(this, (AlertComponent.__proto__ || Object.getPrototypeOf(AlertComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(AlertComponent, null, [{
      key: "prompt",
      value: function prompt(title, message, callbackOrButtons) {
        var _this4 = this;

        var cancelItem = callbackOrButtons[0] || {};
        var confirmItme = callbackOrButtons[1] || {};
        miKey = babelHelpers.get(AlertComponent.__proto__ || Object.getPrototypeOf(AlertComponent), "show", this).call(this, _react2.default.createElement(this.DialogView, {
          title: title,
          message: message,
          cancelText: cancelItem.text || "",
          submitText: confirmItme.text || "",
          onCancel: function onCancel(e) {
            _this4.hide(miKey);

            cancelItem.onPress && cancelItem.onPress();
          },
          onConfirm: function onConfirm(value) {
            _this4.hide(miKey);

            confirmItme.onPress && confirmItme.onPress(value);
          }
        }));
      }
    }, {
      key: "hide",
      value: function hide() {
        if (miKey) {
          babelHelpers.get(AlertComponent.__proto__ || Object.getPrototypeOf(AlertComponent), "hide", this).call(this, miKey);
          miKey = null;
        }
      }
    }]);
    return AlertComponent;
  }(_CLOverlay2.default);

  AlertComponent.DialogView = DialogView;
  var miKey1 = null;

  var AlertMessageComponent = function (_Overlay2) {
    babelHelpers.inherits(AlertMessageComponent, _Overlay2);

    function AlertMessageComponent() {
      babelHelpers.classCallCheck(this, AlertMessageComponent);
      return babelHelpers.possibleConstructorReturn(this, (AlertMessageComponent.__proto__ || Object.getPrototypeOf(AlertMessageComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(AlertMessageComponent, null, [{
      key: "prompt",
      value: function prompt(title, message, callbackOrButtons) {
        var _this6 = this;

        var cancelItem = callbackOrButtons[0] || {};
        var confirmItme = callbackOrButtons[1] || {};
        miKey1 = babelHelpers.get(AlertMessageComponent.__proto__ || Object.getPrototypeOf(AlertMessageComponent), "show", this).call(this, _react2.default.createElement(this.DialogMessageView, {
          title: title,
          message: message,
          cancelText: cancelItem.text || "",
          submitText: confirmItme.text || "",
          onCancel: function onCancel(e) {
            _this6.hide(miKey1);

            cancelItem.onPress && cancelItem.onPress();
          },
          onConfirm: function onConfirm(value) {
            _this6.hide(miKey1);

            confirmItme.onPress && confirmItme.onPress(value);
          }
        }));
      }
    }, {
      key: "hide",
      value: function hide() {
        if (miKey1) {
          babelHelpers.get(AlertMessageComponent.__proto__ || Object.getPrototypeOf(AlertMessageComponent), "hide", this).call(this, miKey1);
          miKey1 = null;
        }
      }
    }]);
    return AlertMessageComponent;
  }(_CLOverlay2.default);

  AlertMessageComponent.DialogMessageView = DialogMessageView;

  _reactNative.Alert.prompt = function (title, message, callbackOrButtons) {
    {
      AlertComponent.prompt(title, message, callbackOrButtons);
    }
  };

  {
    _reactNative.Alert.alert = function (title, message, callbackOrButtons) {
      AlertMessageComponent.prompt(title, message, callbackOrButtons);
    };
  }
  module.exports = _reactNative.Alert;
},11135,[10297,10033,11138,11141,10230],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLAlert.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _CLOverlay = _require(_dependencyMap[1]);

  var _CLOverlay2 = babelHelpers.interopRequireDefault(_CLOverlay);

  var _PromptView = _require(_dependencyMap[2]);

  var _PromptView2 = babelHelpers.interopRequireDefault(_PromptView);

  var _reactNative = _require(_dependencyMap[3]);

  var miKey = null;
  var miOverlay = null;

  var Prompt = function (_Overlay) {
    babelHelpers.inherits(Prompt, _Overlay);

    function Prompt() {
      babelHelpers.classCallCheck(this, Prompt);
      return babelHelpers.possibleConstructorReturn(this, (Prompt.__proto__ || Object.getPrototypeOf(Prompt)).apply(this, arguments));
    }

    babelHelpers.createClass(Prompt, null, [{
      key: "show",
      value: function show(title, message, callbackOrButtons) {
        var _this2 = this;

        if (miOverlay) {
          return;
        }

        var cancelText = "";
        var submitText = "";

        var closeDialog = function closeDialog() {};

        var submitInput = function submitInput() {};

        if (callbackOrButtons.length >= 2) {
          var cancel = callbackOrButtons[0];
          var submit = callbackOrButtons[1];
          cancelText = cancel.text;

          closeDialog = function closeDialog() {
            cancel.onPress && cancel.onPress();

            _this2.hide();
          };

          submitText = submit.text;

          submitInput = function submitInput(value) {
            submit.onPress && submit.onPress(value);

            _this2.hide();
          };
        }

        miKey = babelHelpers.get(Prompt.__proto__ || Object.getPrototypeOf(Prompt), "show", this).call(this, _react2.default.createElement(this.IndicatorView, {
          title: title,
          message: message,
          cancelText: cancelText,
          submitText: submitText,
          closeDialog: closeDialog,
          submitInput: submitInput
        }));
      }
    }, {
      key: "hide",
      value: function hide() {
        if (miKey) {
          babelHelpers.get(Prompt.__proto__ || Object.getPrototypeOf(Prompt), "hide", this).call(this, miKey);
          miKey = null;
          miOverlay = null;
        }
      }
    }]);
    return Prompt;
  }(_CLOverlay2.default);

  Prompt.IndicatorView = _PromptView2.default;
  exports.default = Prompt;
},11138,[10297,11141,11144,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/Prompt/Prompt.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var CommonYeelightModules = _require(_dependencyMap[0]);

    var Overlay = CommonYeelightModules.Overlay;

    var CLOverlay = function (_Overlay) {
        babelHelpers.inherits(CLOverlay, _Overlay);

        function CLOverlay(props) {
            babelHelpers.classCallCheck(this, CLOverlay);
            return babelHelpers.possibleConstructorReturn(this, (CLOverlay.__proto__ || Object.getPrototypeOf(CLOverlay)).call(this, props));
        }

        return CLOverlay;
    }(Overlay);

    exports.default = CLOverlay;
},11141,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/CLOverlay.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _CLOverlay = _require(_dependencyMap[1]);

  var _CLOverlay2 = babelHelpers.interopRequireDefault(_CLOverlay);

  var _DialogInput = _require(_dependencyMap[2]);

  var _DialogInput2 = babelHelpers.interopRequireDefault(_DialogInput);

  var PromptView = function (_Overlay$View) {
    babelHelpers.inherits(PromptView, _Overlay$View);

    function PromptView(props) {
      babelHelpers.classCallCheck(this, PromptView);
      return babelHelpers.possibleConstructorReturn(this, (PromptView.__proto__ || Object.getPrototypeOf(PromptView)).call(this, props));
    }

    babelHelpers.createClass(PromptView, [{
      key: "renderContent",
      value: function renderContent() {
        var _props = this.props,
            title = _props.title,
            message = _props.message,
            cancelText = _props.cancelText,
            submitText = _props.submitText,
            closeDialog = _props.closeDialog,
            submitInput = _props.submitInput;
        return _react2.default.createElement(_DialogInput2.default, {
          title: title,
          message: message,
          cancelText: cancelText,
          submitText: submitText,
          closeDialog: closeDialog,
          submitInput: submitInput
        });
      }
    }]);
    return PromptView;
  }(_CLOverlay2.default.View);

  exports.default = PromptView;
},11144,[10297,11141,11147],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/Prompt/PromptView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Dimensions = _require(_dependencyMap[2]);

  var _Dimensions2 = babelHelpers.interopRequireDefault(_Dimensions);

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var DialogInput = function (_React$Component) {
    babelHelpers.inherits(DialogInput, _React$Component);

    function DialogInput(props) {
      babelHelpers.classCallCheck(this, DialogInput);

      var _this = babelHelpers.possibleConstructorReturn(this, (DialogInput.__proto__ || Object.getPrototypeOf(DialogInput)).call(this, props));

      _this.state = {
        inputModal: '',
        openning: true,
        marginBottomAnimation: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    babelHelpers.createClass(DialogInput, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardWillShow', this._keyboardDidShow.bind(this));
        this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardWillHide', this._keyboardDidHide.bind(this));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.keyboardDidShowListener.remove();
        this.keyboardDidHideListener.remove();
      }
    }, {
      key: "_keyboardDidShow",
      value: function _keyboardDidShow() {
        _reactNative.Animated.timing(this.state.marginBottomAnimation, {
          toValue: 100,
          duration: 200
        }).start();
      }
    }, {
      key: "_keyboardDidHide",
      value: function _keyboardDidHide() {
        _reactNative.Animated.timing(this.state.marginBottomAnimation, {
          toValue: 0,
          duration: 10
        }).start();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var title = this.props.title || '';
        var hintInput = this.props.hintInput || '';
        var value = '';

        if (!this.state.openning) {
          value = this.state.inputModal;
        } else {
          value = this.props.initValueTextInput ? this.props.initValueTextInput : '';
        }

        var textProps = this.props.textInputProps || null;
        var modalStyleProps = this.props.modalStyle || {};
        var dialogStyleProps = this.props.dialogStyle || {};
        var cancelText = this.props.cancelText || 'Cancel';
        var submitText = this.props.submitText || 'Submit';
        cancelText = cancelText.toUpperCase();
        submitText = submitText.toUpperCase();
        return _react2.default.createElement(
          _reactNative.Modal,
          {
            animationType: "fade",
            transparent: true,
            visible: this.props.isDialogVisible,
            onRequestClose: function onRequestClose() {
              _this2.props.closeDialog();

              _this2.setState({
                inputModal: ''
              });
            }
          },
          _react2.default.createElement(
            _reactNative.KeyboardAvoidingView,
            {
              style: [styles.container, babelHelpers.extends({}, modalStyleProps)],
              behavior: 'padding',
              keyboardVerticalOffset: -200 * height / 812.0
            },
            _react2.default.createElement(
              _reactNative.TouchableOpacity,
              {
                style: styles.container,
                activeOpacity: 1,
                onPress: function onPress() {
                  _this2.props.closeDialog();

                  _this2.setState({
                    inputModal: '',
                    openning: true
                  });
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                {
                  style: [styles.modal_container, babelHelpers.extends({}, dialogStyleProps)]
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.modal_body
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      style: styles.title_modal
                    },
                    title
                  ),
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      style: [this.props.message ? styles.message_modal : {
                        height: 0
                      }]
                    },
                    this.props.message
                  ),
                  _react2.default.createElement(_reactNative.TextInput, {
                    style: styles.input_container,
                    autoCorrect: textProps && textProps.autoCorrect == false ? false : true,
                    autoCapitalize: textProps && textProps.autoCapitalize ? textProps.autoCapitalize : 'none',
                    clearButtonMode: textProps && textProps.clearButtonMode ? textProps.clearButtonMode : 'never',
                    clearTextOnFocus: textProps && textProps.clearTextOnFocus == true ? textProps.clearTextOnFocus : false,
                    keyboardType: textProps && textProps.keyboardType ? textProps.keyboardType : 'default',
                    autoFocus: true,
                    onKeyPress: function onKeyPress() {
                      return _this2.setState({
                        openning: false
                      });
                    },
                    underlineColorAndroid: "transparent",
                    placeholder: hintInput,
                    onChangeText: function onChangeText(inputModal) {
                      return _this2.setState({
                        inputModal: inputModal
                      });
                    },
                    value: value
                  })
                ),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.btn_container
                  },
                  _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                      style: styles.touch_modal,
                      onPress: function onPress() {
                        _this2.props.closeDialog();

                        _this2.setState({
                          inputModal: '',
                          openning: true
                        });
                      }
                    },
                    _react2.default.createElement(
                      _reactNative.Text,
                      {
                        style: styles.btn_modal_left
                      },
                      cancelText
                    )
                  ),
                  _react2.default.createElement(_reactNative.View, {
                    style: styles.divider_btn
                  }),
                  _react2.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                      style: styles.touch_modal,
                      onPress: function onPress() {
                        _this2.props.submitInput(value);

                        _this2.setState({
                          inputModal: '',
                          openning: true
                        });
                      }
                    },
                    _react2.default.createElement(
                      _reactNative.Text,
                      {
                        style: styles.btn_modal_right
                      },
                      submitText
                    )
                  )
                )
              )
            )
          )
        );
      }
    }]);
    return DialogInput;
  }(_react2.default.Component);

  var styles = _reactNative.StyleSheet.create({
    container: babelHelpers.extends({
      flex: 1,
      width: '100%',
      height: '100%',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center'
    }, {
      backgroundColor: 'rgba(0,0,0,0.62)'
    }),
    modal_container: babelHelpers.extends({
      marginLeft: 30,
      marginRight: 30
    }, {
      backgroundColor: '#fff',
      elevation: 24,
      minWidth: 280,
      borderRadius: 5
    }),
    modal_body: babelHelpers.extends({}, {
      padding: 24
    }),
    title_modal: babelHelpers.extends({
      fontWeight: 'bold',
      fontSize: 20
    }, {
      textAlign: 'left'
    }),
    message_modal: babelHelpers.extends({
      fontSize: 16
    }, {
      textAlign: 'left',
      marginTop: 20
    }),
    input_container: babelHelpers.extends({
      textAlign: 'left',
      fontSize: 16,
      color: 'rgba(0,0,0,0.54)'
    }, {
      marginTop: 8,
      borderBottomWidth: 2,
      borderColor: '#009688'
    }),
    btn_container: babelHelpers.extends({
      flex: 1,
      flexDirection: 'row'
    }, {
      alignSelf: 'flex-end',
      maxHeight: 52,
      paddingTop: 8,
      paddingBottom: 8
    }),
    divider_btn: babelHelpers.extends({}, {
      width: 0
    }),
    touch_modal: babelHelpers.extends({}, {
      paddingRight: 8,
      minWidth: 64,
      height: 36
    }),
    btn_modal_left: babelHelpers.extends({}, {
      textAlign: 'right',
      color: '#009688',
      padding: 8
    }),
    btn_modal_right: babelHelpers.extends({}, {
      textAlign: 'right',
      color: '#009688',
      padding: 8
    })
  });

  exports.default = DialogInput;
},11147,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/DialogInput.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _CommonYeelightModules = _require(_dependencyMap[1]);

    var CLActionSheet = function (_ActionSheet) {
        babelHelpers.inherits(CLActionSheet, _ActionSheet);

        function CLActionSheet() {
            babelHelpers.classCallCheck(this, CLActionSheet);
            return babelHelpers.possibleConstructorReturn(this, (CLActionSheet.__proto__ || Object.getPrototypeOf(CLActionSheet)).apply(this, arguments));
        }

        babelHelpers.createClass(CLActionSheet, null, [{
            key: "showActionSheetWithOptions",
            value: function showActionSheetWithOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                var btnClickCallback = arguments[1];
                var actionSheetOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var titles = options.options || [];
                var items = [];
                var cancelItem = {};
                titles.map(function (title, index) {
                    var option = {
                        title: title,
                        onPress: function onPress() {
                            btnClickCallback(index);
                        }
                    };
                    items.push(option);
                });

                if (items.length > 1) {
                    cancelItem = items.splice(items.length - 1, 1)[0];
                }

                return babelHelpers.get(CLActionSheet.__proto__ || Object.getPrototypeOf(CLActionSheet), "show", this).call(this, items, cancelItem, actionSheetOptions);
            }
        }]);
        return CLActionSheet;
    }(_CommonYeelightModules.ActionSheet);

    module.exports = CLActionSheet;
},11150,[10297,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLActionSheet.js");
__d(function (global, _require, module, exports, _dependencyMap) {
											'use strict';

											var _react = _require(_dependencyMap[0]);

											var _react2 = babelHelpers.interopRequireDefault(_react);

											var _reactNative = _require(_dependencyMap[1]);

											var _images = _require(_dependencyMap[2]);

											var _images2 = babelHelpers.interopRequireDefault(_images);

											var _CommonYeelightModules = _require(_dependencyMap[3]);

											var CLImage = function (_Component) {
																						babelHelpers.inherits(CLImage, _Component);

																						function CLImage(props) {
																																	babelHelpers.classCallCheck(this, CLImage);
																																	return babelHelpers.possibleConstructorReturn(this, (CLImage.__proto__ || Object.getPrototypeOf(CLImage)).call(this, props));
																						}

																						babelHelpers.createClass(CLImage, [{
																																	key: "setNativeProps",
																																	value: function setNativeProps(nativeProps) {
																																												this._root.setNativeProps(nativeProps);
																																	}
																						}, {
																																	key: "render",
																																	value: function render() {
																																												var _this2 = this;

																																												var _props = this.props,
																																												    imagePath = _props.imagePath,
																																												    uri = _props.uri,
																																												    defaultSourceURI = _props.defaultSourceURI,
																																												    style = _props.style;
																																												var realURI = void 0;
																																												var source = void 0;

																																												if (imagePath && imagePath.length > 0) {
																																																							var newimagePath = _CommonYeelightModules.PluginInfo.images(imagePath);

																																																							var value = _images2.default[newimagePath];

																																																							if (value) {
																																																																		source = value();
																																																							} else {
																																																																		source = null;
																																																							}
																																												} else if (uri && uri.length > 0) {
																																																							realURI = uri;
																																																							source = {
																																																																		uri: realURI
																																																							};
																																												}

																																												return _react2.default.createElement(_reactNative.Image, {
																																																							style: style,
																																																							ref: function ref(component) {
																																																																		return _this2._root = component;
																																																							},
																																																							source: source,
																																																							defaultSource: {
																																																																		uri: defaultSourceURI
																																																							}
																																												});
																																	}
																						}]);
																						return CLImage;
											}(_react.Component);

											module.exports = CLImage;
},11153,[10297,10033,10025,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLImage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _propTypes = _require(_dependencyMap[0]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  module.exports = _propTypes2.default;
},11156,[10318],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/React/CLPropTypes.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLPackage = function () {
        function YLPackage() {
            babelHelpers.classCallCheck(this, YLPackage);
        }

        babelHelpers.createClass(YLPackage, [{
            key: "closeCurrentPage",
            value: function closeCurrentPage() {
                _miot.Package.exit();
            }
        }, {
            key: "finishCustomSceneSetupWithAction",
            value: function finishCustomSceneSetupWithAction(action) {
                _miot.Package.exit(action);
            }
        }, {
            key: "action",
            get: function get() {
                return _miot.Package.entryInfo;
            }
        }, {
            key: "plugId",
            get: function get() {
                var entryInfo = _miot.Package.entryInfo || {};
                var payload = entryInfo.payload || {};
                return payload.plug_id || "";
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLPackage();
                }

                return this.instance;
            }
        }]);
        return YLPackage;
    }();

    module.exports = YLPackage.getInstance();
},11159,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLPackage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _reactNativeVideo = _require(_dependencyMap[2]);

    var _reactNativeVideo2 = babelHelpers.interopRequireDefault(_reactNativeVideo);

    var _images = _require(_dependencyMap[3]);

    var _images2 = babelHelpers.interopRequireDefault(_images);

    var _CommonYeelightModules = _require(_dependencyMap[4]);

    var CLVideo = function (_Component) {
        babelHelpers.inherits(CLVideo, _Component);

        function CLVideo(props) {
            babelHelpers.classCallCheck(this, CLVideo);
            return babelHelpers.possibleConstructorReturn(this, (CLVideo.__proto__ || Object.getPrototypeOf(CLVideo)).call(this, props));
        }

        babelHelpers.createClass(CLVideo, [{
            key: "render",
            value: function render() {
                var _props = this.props,
                    videoPath = _props.videoPath,
                    videoRequireName = _props.videoRequireName,
                    uri = _props.uri,
                    style = _props.style,
                    rate = _props.rate,
                    paused = _props.paused,
                    volume = _props.volume,
                    muted = _props.muted,
                    resizeMode = _props.resizeMode,
                    playInBackground = _props.playInBackground,
                    playWhenInactive = _props.playWhenInactive,
                    currentTime = _props.currentTime,
                    onLoadStart = _props.onLoadStart,
                    onProgress = _props.onProgress,
                    onEnd = _props.onEnd,
                    onError = _props.onError,
                    onAudioBecomingNoisy = _props.onAudioBecomingNoisy,
                    onAudioFocusChanged = _props.onAudioFocusChanged,
                    repeat = _props.repeat,
                    onLoad = _props.onLoad;
                var source = void 0;

                if (videoRequireName) {
                    var value = _images2.default[videoRequireName];

                    if (value) {
                        source = value();
                    } else {
                        source = null;
                    }
                } else if (uri) {
                    source = {
                        uri: uri
                    };
                }

                return _react2.default.createElement(_reactNativeVideo2.default, {
                    source: source,
                    style: style,
                    rate: rate,
                    paused: paused,
                    volume: volume,
                    muted: muted,
                    resizeMode: resizeMode,
                    playInBackground: playInBackground,
                    playWhenInactive: playWhenInactive,
                    currentTime: currentTime,
                    onLoadStart: onLoadStart,
                    onProgress: onProgress,
                    onEnd: onEnd,
                    onError: onError,
                    onAudioBecomingNoisy: onAudioBecomingNoisy,
                    onAudioFocusChanged: onAudioFocusChanged,
                    repeat: repeat,
                    onLoad: onLoad
                });
            }
        }]);
        return CLVideo;
    }(_react.Component);

    CLVideo.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes);
    CLVideo.defaultProps = babelHelpers.extends({}, _reactNative.View.defaultProps);
    module.exports = CLVideo;
},11162,[10297,10033,11165,10451,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLVideo.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[1]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _resolveAssetSource = _require(_dependencyMap[3]);

  var _resolveAssetSource2 = babelHelpers.interopRequireDefault(_resolveAssetSource);

  var _VideoResizeMode = _require(_dependencyMap[4]);

  var _VideoResizeMode2 = babelHelpers.interopRequireDefault(_VideoResizeMode);

  var styles = _reactNative.StyleSheet.create({
    base: {
      overflow: 'hidden'
    }
  });

  var Video = function (_Component) {
    babelHelpers.inherits(Video, _Component);

    function Video(props) {
      babelHelpers.classCallCheck(this, Video);

      var _this = babelHelpers.possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).call(this, props));

      _this.seek = function (time) {
        _this.setNativeProps({
          seek: time
        });
      };

      _this.presentFullscreenPlayer = function () {
        _this.setNativeProps({
          fullscreen: true
        });
      };

      _this.dismissFullscreenPlayer = function () {
        _this.setNativeProps({
          fullscreen: false
        });
      };

      _this._assignRoot = function (component) {
        _this._root = component;
      };

      _this._onLoadStart = function (event) {
        if (_this.props.onLoadStart) {
          _this.props.onLoadStart(event.nativeEvent);
        }
      };

      _this._onLoad = function (event) {
        if (_this.props.onLoad) {
          _this.props.onLoad(event.nativeEvent);
        }
      };

      _this._onError = function (event) {
        if (_this.props.onError) {
          _this.props.onError(event.nativeEvent);
        }
      };

      _this._onProgress = function (event) {
        if (_this.props.onProgress) {
          _this.props.onProgress(event.nativeEvent);
        }
      };

      _this._onSeek = function (event) {
        if (_this.state.showPoster) {
          _this.setState({
            showPoster: false
          });
        }

        if (_this.props.onSeek) {
          _this.props.onSeek(event.nativeEvent);
        }
      };

      _this._onEnd = function (event) {
        if (_this.props.onEnd) {
          _this.props.onEnd(event.nativeEvent);
        }
      };

      _this._onTimedMetadata = function (event) {
        if (_this.props.onTimedMetadata) {
          _this.props.onTimedMetadata(event.nativeEvent);
        }
      };

      _this._onFullscreenPlayerWillPresent = function (event) {
        if (_this.props.onFullscreenPlayerWillPresent) {
          _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);
        }
      };

      _this._onFullscreenPlayerDidPresent = function (event) {
        if (_this.props.onFullscreenPlayerDidPresent) {
          _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);
        }
      };

      _this._onFullscreenPlayerWillDismiss = function (event) {
        if (_this.props.onFullscreenPlayerWillDismiss) {
          _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);
        }
      };

      _this._onFullscreenPlayerDidDismiss = function (event) {
        if (_this.props.onFullscreenPlayerDidDismiss) {
          _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);
        }
      };

      _this._onReadyForDisplay = function (event) {
        if (_this.props.onReadyForDisplay) {
          _this.props.onReadyForDisplay(event.nativeEvent);
        }
      };

      _this._onPlaybackStalled = function (event) {
        if (_this.props.onPlaybackStalled) {
          _this.props.onPlaybackStalled(event.nativeEvent);
        }
      };

      _this._onPlaybackResume = function (event) {
        if (_this.props.onPlaybackResume) {
          _this.props.onPlaybackResume(event.nativeEvent);
        }
      };

      _this._onPlaybackRateChange = function (event) {
        if (_this.state.showPoster && event.nativeEvent.playbackRate !== 0) {
          _this.setState({
            showPoster: false
          });
        }

        if (_this.props.onPlaybackRateChange) {
          _this.props.onPlaybackRateChange(event.nativeEvent);
        }
      };

      _this._onAudioBecomingNoisy = function () {
        if (_this.props.onAudioBecomingNoisy) {
          _this.props.onAudioBecomingNoisy();
        }
      };

      _this._onAudioFocusChanged = function (event) {
        if (_this.props.onAudioFocusChanged) {
          _this.props.onAudioFocusChanged(event.nativeEvent);
        }
      };

      _this._onBuffer = function (event) {
        if (_this.props.onBuffer) {
          _this.props.onBuffer(event.nativeEvent);
        }
      };

      _this.state = {
        showPoster: true
      };
      return _this;
    }

    babelHelpers.createClass(Video, [{
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        this._root.setNativeProps(nativeProps);
      }
    }, {
      key: "render",
      value: function render() {
        var resizeMode = this.props.resizeMode;
        var source = (0, _resolveAssetSource2.default)(this.props.source) || {};
        var uri = source.uri || '';

        if (uri && uri.match(/^\//)) {
          uri = "file://" + uri;
        }

        var isNetwork = !!(uri && uri.match(/^https?:/));
        var isAsset = !!(uri && uri.match(/^(assets-library|file|content|ms-appx|ms-appdata):/));
        var nativeResizeMode = void 0;

        if (resizeMode === _VideoResizeMode2.default.stretch) {
          nativeResizeMode = _reactNative.NativeModules.UIManager.RCTVideo.Constants.ScaleToFill;
        } else if (resizeMode === _VideoResizeMode2.default.contain) {
          nativeResizeMode = _reactNative.NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFit;
        } else if (resizeMode === _VideoResizeMode2.default.cover) {
          nativeResizeMode = _reactNative.NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFill;
        } else {
          nativeResizeMode = _reactNative.NativeModules.UIManager.RCTVideo.Constants.ScaleNone;
        }

        var nativeProps = babelHelpers.extends({}, this.props);
        babelHelpers.extends(nativeProps, {
          style: [styles.base, nativeProps.style],
          resizeMode: nativeResizeMode,
          src: {
            uri: uri,
            isNetwork: isNetwork,
            isAsset: isAsset,
            type: source.type || '',
            mainVer: source.mainVer || 0,
            patchVer: source.patchVer || 0
          },
          onVideoLoadStart: this._onLoadStart,
          onVideoLoad: this._onLoad,
          onVideoError: this._onError,
          onVideoProgress: this._onProgress,
          onVideoSeek: this._onSeek,
          onVideoEnd: this._onEnd,
          onVideoBuffer: this._onBuffer,
          onTimedMetadata: this._onTimedMetadata,
          onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,
          onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,
          onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,
          onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,
          onReadyForDisplay: this._onReadyForDisplay,
          onPlaybackStalled: this._onPlaybackStalled,
          onPlaybackResume: this._onPlaybackResume,
          onPlaybackRateChange: this._onPlaybackRateChange,
          onAudioFocusChanged: this._onAudioFocusChanged,
          onAudioBecomingNoisy: this._onAudioBecomingNoisy
        });

        if (this.props.poster && this.state.showPoster) {
          var posterStyle = {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            resizeMode: 'contain'
          };
          return _react2.default.createElement(
            _reactNative.View,
            {
              style: nativeProps.style
            },
            _react2.default.createElement(RCTVideo, babelHelpers.extends({
              ref: this._assignRoot
            }, nativeProps)),
            _react2.default.createElement(_reactNative.Image, {
              style: posterStyle,
              source: {
                uri: this.props.poster
              }
            })
          );
        }

        return _react2.default.createElement(RCTVideo, babelHelpers.extends({
          ref: this._assignRoot
        }, nativeProps));
      }
    }]);
    return Video;
  }(_react.Component);

  exports.default = Video;
  Video.propTypes = babelHelpers.extends({
    src: _propTypes2.default.object,
    seek: _propTypes2.default.number,
    fullscreen: _propTypes2.default.bool,
    onVideoLoadStart: _propTypes2.default.func,
    onVideoLoad: _propTypes2.default.func,
    onVideoBuffer: _propTypes2.default.func,
    onVideoError: _propTypes2.default.func,
    onVideoProgress: _propTypes2.default.func,
    onVideoSeek: _propTypes2.default.func,
    onVideoEnd: _propTypes2.default.func,
    onTimedMetadata: _propTypes2.default.func,
    onVideoFullscreenPlayerWillPresent: _propTypes2.default.func,
    onVideoFullscreenPlayerDidPresent: _propTypes2.default.func,
    onVideoFullscreenPlayerWillDismiss: _propTypes2.default.func,
    onVideoFullscreenPlayerDidDismiss: _propTypes2.default.func,
    source: _propTypes2.default.oneOfType([_propTypes2.default.shape({
      uri: _propTypes2.default.string
    }), _propTypes2.default.number]),
    resizeMode: _propTypes2.default.string,
    poster: _propTypes2.default.string,
    repeat: _propTypes2.default.bool,
    paused: _propTypes2.default.bool,
    muted: _propTypes2.default.bool,
    volume: _propTypes2.default.number,
    rate: _propTypes2.default.number,
    playInBackground: _propTypes2.default.bool,
    playWhenInactive: _propTypes2.default.bool,
    ignoreSilentSwitch: _propTypes2.default.oneOf(['ignore', 'obey']),
    disableFocus: _propTypes2.default.bool,
    controls: _propTypes2.default.bool,
    currentTime: _propTypes2.default.number,
    progressUpdateInterval: _propTypes2.default.number,
    onLoadStart: _propTypes2.default.func,
    onLoad: _propTypes2.default.func,
    onBuffer: _propTypes2.default.func,
    onError: _propTypes2.default.func,
    onProgress: _propTypes2.default.func,
    onSeek: _propTypes2.default.func,
    onEnd: _propTypes2.default.func,
    onFullscreenPlayerWillPresent: _propTypes2.default.func,
    onFullscreenPlayerDidPresent: _propTypes2.default.func,
    onFullscreenPlayerWillDismiss: _propTypes2.default.func,
    onFullscreenPlayerDidDismiss: _propTypes2.default.func,
    onReadyForDisplay: _propTypes2.default.func,
    onPlaybackStalled: _propTypes2.default.func,
    onPlaybackResume: _propTypes2.default.func,
    onPlaybackRateChange: _propTypes2.default.func,
    onAudioFocusChanged: _propTypes2.default.func,
    onAudioBecomingNoisy: _propTypes2.default.func,
    scaleX: _propTypes2.default.number,
    scaleY: _propTypes2.default.number,
    translateX: _propTypes2.default.number,
    translateY: _propTypes2.default.number,
    rotation: _propTypes2.default.number
  }, _reactNative.View.propTypes);
  var RCTVideo = (0, _reactNative.requireNativeComponent)('RCTVideo', Video, {
    nativeOnly: {
      src: true,
      seek: true,
      fullscreen: true
    }
  });
},11165,[10297,10318,10033,10417,11168],"node_modules/react-native-video/Video.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _keymirror = _require(_dependencyMap[0]);

  var _keymirror2 = babelHelpers.interopRequireDefault(_keymirror);

  exports.default = (0, _keymirror2.default)({
    contain: null,
    cover: null,
    stretch: null
  });
},11168,[11171],"node_modules/react-native-video/VideoResizeMode.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  "use strict";

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;

    if (!(obj instanceof Object && !Array.isArray(obj))) {
      throw new Error('keyMirror(...): Argument must be an object.');
    }

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},11171,[],"node_modules/keymirror/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _Package = _require(_dependencyMap[1]);

    var _Package2 = babelHelpers.interopRequireDefault(_Package);

    var YLDevice = function () {
        function YLDevice() {
            babelHelpers.classCallCheck(this, YLDevice);
        }

        babelHelpers.createClass(YLDevice, [{
            key: "getDevicePropertyFromMemCache",
            value: function getDevicePropertyFromMemCache(properties, callback) {}
        }, {
            key: "firmwareNotCheckUpdate",
            value: function firmwareNotCheckUpdate(notCheck, callback) {
                _Package2.default.disableAutoCheckUpgrade = notCheck;

                if (!notCheck) {
                    _miot.Device.checkFirmwareUpdateAndAlert().then(function (res) {
                        if (res) {
                            callback && callback(true);
                        } else {
                            callback && callback(false);
                        }
                    }).catch(function (err) {
                        callback && callback(false);
                    });
                } else {
                    callback && callback(true);
                }
            }
        }, {
            key: "callMethod",
            value: function callMethod(method, params, extraInfo, callback) {
                _miot.Device.getDeviceWifi().callMethod(method, params, extraInfo).then(function (res) {
                    callback && callback(true, res);
                }, function (res) {
                    callback && callback(false, res);
                }).catch(function (err) {
                    callback && callback(false, err);
                });
            }
        }, {
            key: "getVirtualDevices",
            value: function getVirtualDevices(params, callback) {
                _miot.Device.getVirtualDevices().then(callback).catch(callback);
            }
        }, {
            key: "deviceToken",
            value: function deviceToken(callback) {
                if (callback) {
                    callback(true, _miot.Device.session);
                }
            }
        }, {
            key: "subscribeMessages",
            value: function subscribeMessages(props) {
                var _Device$getDeviceWifi;

                (_Device$getDeviceWifi = _miot.Device.getDeviceWifi()).subscribeMessages.apply(_Device$getDeviceWifi, babelHelpers.toConsumableArray(props));
            }
        }, {
            key: "checkIsHomeKitDevice",
            value: function checkIsHomeKitDevice(callback) {
                _miot.Device.checkIsHomeKitDevice().then(function (res) {
                    callback && callback(res);
                }).catch(function (err) {
                    callback && callback(false);
                });
            }
        }, {
            key: "deviceModel",
            get: function get() {
                return _miot.Device.model;
            }
        }, {
            key: "deviceId",
            get: function get() {
                return _miot.Device.deviceID;
            }
        }, {
            key: "ownerId",
            get: function get() {
                return _miot.Device.owner.ID;
            }
        }, {
            key: "isOwner",
            get: function get() {
                return _miot.Device.isOwner;
            }
        }, {
            key: "deviceName",
            get: function get() {
                return _miot.Device.name;
            }
        }, {
            key: "deviceExtra",
            get: function get() {
                if (typeof _miot.Device.extra == "string") {
                    return JSON.parse(_miot.Device.extra);
                }

                return _miot.Device.extra;
            }
        }, {
            key: "needUpgrade",
            set: function set(value) {
                _miot.Device.needUpgrade = value || false;
            },
            get: function get() {
                return _miot.Device.needUpgrade;
            }
        }, {
            key: "deviceType",
            get: function get() {
                return _miot.Device.type;
            }
        }, {
            key: "mac",
            get: function get() {
                return new Promise(function (resolve, reject) {
                    resolve && resolve(_miot.Device.mac);
                });
            }
        }, {
            key: "isOnline",
            get: function get() {
                return new Promise(function (resolve, reject) {
                    resolve && resolve(_miot.Device.isOnline);
                });
            }
        }, {
            key: "firmwareVersion",
            get: function get() {
                return new Promise(function (resolve, reject) {
                    resolve && _miot.Device.extra && _miot.Device.extra.fw_version && resolve(_miot.Device.extra.fw_version);
                });
            }
        }, {
            key: "getLinkedBTDevices",
            get: function get() {
                return _miot.Device.getLinkedBTDevices(this.deviceId);
            }
        }, {
            key: "getBluetoothLE",
            get: function get() {
                return _miot.Device.getBluetoothLE();
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLDevice();
                }

                return this.instance;
            }
        }]);
        return YLDevice;
    }();

    module.exports = YLDevice.getInstance();
},11174,[10074,10056],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLDevice.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _YLHostUI = _require(_dependencyMap[1]);

    var _YLHostUI2 = babelHelpers.interopRequireDefault(_YLHostUI);

    var _YLHostLocale = _require(_dependencyMap[2]);

    var _YLHostLocale2 = babelHelpers.interopRequireDefault(_YLHostLocale);

    var _YLHostFile = _require(_dependencyMap[3]);

    var _YLHostFile2 = babelHelpers.interopRequireDefault(_YLHostFile);

    var YLHost = function () {
        function YLHost() {
            babelHelpers.classCallCheck(this, YLHost);
        }

        babelHelpers.createClass(YLHost, [{
            key: "ui",
            get: function get() {
                return _YLHostUI2.default;
            }
        }, {
            key: "apiLevel",
            get: function get() {
                return _miot.Host.apiLevel;
            }
        }, {
            key: "systemInfo",
            get: function get() {
                return _miot.Host.systemInfo;
            }
        }, {
            key: "locale",
            get: function get() {
                return _YLHostLocale2.default;
            }
        }, {
            key: "file",
            get: function get() {
                return _YLHostFile2.default;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLHost();
                }

                return this.instance;
            }
        }]);
        return YLHost;
    }();

    module.exports = YLHost.getInstance();
},11177,[10074,11180,11183,11189],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLHost.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _ResourcesManager = _require(_dependencyMap[1]);

    var _ResourcesManager2 = babelHelpers.interopRequireDefault(_ResourcesManager);

    var YLHostUI = function () {
        function YLHostUI() {
            babelHelpers.classCallCheck(this, YLHostUI);
        }

        babelHelpers.createClass(YLHostUI, [{
            key: "openPrivacyLicense",
            value: function openPrivacyLicense(licenseTitle, licenseUrl, policyTitle, policyUrl, callback) {
                _miot.Host.ui.openPrivacyLicense(licenseTitle, _ResourcesManager2.default.getInstance().getLicenseSourceByUrl(licenseUrl), policyTitle, _ResourcesManager2.default.getInstance().getPolicySourceByUrl(policyUrl)).then(function (res) {
                    if (res) {
                        callback && callback("ok");
                    } else {
                        callback && callback("cancel");
                    }
                }, function () {
                    callback && callback("cancel");
                }).catch(function () {
                    callback && callback("cancel");
                });
            }
        }, {
            key: "openDeviceUpgradePage",
            value: function openDeviceUpgradePage() {
                _miot.Host.ui.openDeviceUpgradePage();
            }
        }, {
            key: "openChangeDeviceName",
            value: function openChangeDeviceName() {
                _miot.Host.ui.openChangeDeviceName();
            }
        }, {
            key: "openShareDevicePage",
            value: function openShareDevicePage() {
                _miot.Host.ui.openShareDevicePage();
            }
        }, {
            key: "openFeedback",
            value: function openFeedback() {
                _miot.Host.ui.openFeedbackInput();
            }
        }, {
            key: "openRoomManagementPage",
            value: function openRoomManagementPage() {
                _miot.Host.ui.openRoomManagementPage();
            }
        }, {
            key: "openIftttAutoPage",
            value: function openIftttAutoPage() {
                _miot.Host.ui.openIftttAutoPage();
            }
        }, {
            key: "openNewMorePage",
            value: function openNewMorePage() {
                _miot.Host.ui.openNewMorePage();
            }
        }, {
            key: "openAddToDesktopPage",
            value: function openAddToDesktopPage() {
                _miot.Host.ui.openAddToDesktopPage();
            }
        }, {
            key: "openBtGatewayPage",
            value: function openBtGatewayPage() {
                _miot.Host.ui.openBtGatewayPage();
            }
        }, {
            key: "openDeleteDevice",
            value: function openDeleteDevice() {
                _miot.Host.ui.openDeleteDevice();
            }
        }, {
            key: "openTimerSettingPage",
            value: function openTimerSettingPage(onMethod, onParam, offMethod, offParam) {
                _miot.Host.ui.openTimerSettingPageWithVariousTypeParams(onMethod, onParam, offMethod, offParam);
            }
        }, {
            key: "openTimerSettingPageForSpec",
            value: function openTimerSettingPageForSpec(onMethod, onParam, offMethod, offParam, displayName) {
                _miot.Host.ui.openTimerSettingPageWithOptions({
                    onMethod: onMethod,
                    onParam: onParam,
                    offMethod: offMethod,
                    offParam: offParam,
                    displayName: displayName
                });
            }
        }, {
            key: "openEditDeviceGroupPage",
            value: function openEditDeviceGroupPage(dids) {
                _miot.Host.ui.openEditDeviceGroupPage(dids);
            }
        }, {
            key: "privacyAndProtocolReview",
            value: function privacyAndProtocolReview(licenseTitle, licenseUrl, policyTitle, policyUrl) {
                _miot.Host.ui.privacyAndProtocolReview(licenseTitle, _ResourcesManager2.default.getInstance().getLicenseSourceByUrl(licenseUrl), policyTitle, _ResourcesManager2.default.getInstance().getPolicySourceByUrl(policyUrl));
            }
        }, {
            key: "openDeviceGroupPageForCreate",
            value: function openDeviceGroupPageForCreate(did) {
                _miot.Host.ui.openMeshDeviceGroupPage("add", did);
            }
        }, {
            key: "openDeviceGroupPageForEdit",
            value: function openDeviceGroupPageForEdit(did) {
                _miot.Host.ui.openMeshDeviceGroupPage("edit", did);
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLHostUI();
                }

                return this.instance;
            }
        }]);
        return YLHostUI;
    }();

    module.exports = YLHostUI.getInstance();
},11180,[10074,10724],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLHostUI.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _YLConstant = _require(_dependencyMap[1]);

    var YLHostLocale = function () {
        function YLHostLocale() {
            babelHelpers.classCallCheck(this, YLHostLocale);
        }

        babelHelpers.createClass(YLHostLocale, [{
            key: "getLocation",
            value: function getLocation(callback) {
                _miot.Host.locale.getLocation().then(callback).catch(callback);
            }
        }, {
            key: "language",
            get: function get() {
                var language = _miot.Host.locale.language;
                return _YLConstant.NEW_LANGUAGE_CODE_MAP[language] || language;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLHostLocale();
                }

                return this.instance;
            }
        }]);
        return YLHostLocale;
    }();

    module.exports = YLHostLocale.getInstance();
},11183,[10074,11186],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLHostLocale.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    var NEW_LANGUAGE_CODE_MAP = {
        "zh": "zh-Hans",
        "zh_hk": "zh-HK",
        "zh_tw": "zh-TW",
        "zh-hk": "zh-HK",
        "zh-tw": "zh-TW"
    };
    module.exports = {
        NEW_LANGUAGE_CODE_MAP: NEW_LANGUAGE_CODE_MAP
    };
},11186,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLConstant.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLHostFile = function () {
        function YLHostFile() {
            babelHelpers.classCallCheck(this, YLHostFile);
        }

        babelHelpers.createClass(YLHostFile, [{
            key: "readFile",
            value: function readFile(filename, callback) {
                _miot.Host.file.readFile(filename).then(function (r) {
                    callback(true, r);
                }).catch(function (r) {
                    callback(false, r);
                });
            }
        }, {
            key: "writeFile",
            value: function writeFile(filename, utf8Content, callback) {
                _miot.Host.file.writeFile(filename, utf8Content).then(callback);
            }
        }, {
            key: "deleteFile",
            value: function deleteFile(filename, callback) {
                _miot.Host.file.deleteFile(filename).then(callback);
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLHostFile();
                }

                return this.instance;
            }
        }]);
        return YLHostFile;
    }();

    module.exports = YLHostFile.getInstance();
},11189,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLHostFile.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _YLConstant = _require(_dependencyMap[1]);

    var YLResource = function () {
        function YLResource() {
            babelHelpers.classCallCheck(this, YLResource);
        }

        babelHelpers.createClass(YLResource, [{
            key: "baseResourcePath",
            get: function get() {
                return "@App/Resources/";
            }
        }, {
            key: "uriNaviBackButtonImage",
            get: function get() {
                return "title_bar_back_white.png";
            }
        }, {
            key: "requireNaviBackButtonImage",
            get: function get() {
                return "title_bar_back_white.png";
            }
        }, {
            key: "systemLanguage",
            get: function get() {
                var systemLanguage = _miot.Host.locale.systemLanguage;
                return _YLConstant.NEW_LANGUAGE_CODE_MAP[systemLanguage] || systemLanguage;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLResource();
                }

                return this.instance;
            }
        }]);
        return YLResource;
    }();

    module.exports = YLResource.getInstance();
},11192,[10074,11186],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLResource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLDeviceEvent = function () {
        function YLDeviceEvent() {
            babelHelpers.classCallCheck(this, YLDeviceEvent);
        }

        babelHelpers.createClass(YLDeviceEvent, [{
            key: "deviceNameChanged",
            value: function deviceNameChanged(callback) {
                return _miot.DeviceEvent.deviceNameChanged.addListener(callback);
            }
        }, {
            key: "deviceReceivedMessages",
            value: function deviceReceivedMessages(props, callback) {
                return _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, messages) {
                    var values = {};

                    for (var key in props) {
                        if (props.hasOwnProperty(key)) {
                            var element = props[key];

                            if (messages.has(element)) {
                                var value = messages.get(element);
                                var newKey = element.replace('prop.', '');
                                values[newKey] = value;
                            }
                        }
                    }

                    if (callback) {
                        callback(values);
                    }
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLDeviceEvent();
                }

                return this.instance;
            }
        }]);
        return YLDeviceEvent;
    }();

    module.exports = YLDeviceEvent.getInstance();
},11195,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLDeviceEvent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLPackageEvent = function () {
        function YLPackageEvent() {
            babelHelpers.classCallCheck(this, YLPackageEvent);
        }

        babelHelpers.createClass(YLPackageEvent, [{
            key: "packageViewWillAppear",
            value: function packageViewWillAppear(callback) {
                return _miot.PackageEvent.packageViewWillAppear.addListener(callback);
            }
        }, {
            key: "packageAuthorizationCancel",
            value: function packageAuthorizationCancel(callback) {
                return _miot.PackageEvent.packageAuthorizationCancel.addListener(callback);
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLPackageEvent();
                }

                return this.instance;
            }
        }]);
        return YLPackageEvent;
    }();

    module.exports = YLPackageEvent.getInstance();
},11198,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLPackageEvent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _ToastModal = _require(_dependencyMap[0]);

    var _ToastModal2 = babelHelpers.interopRequireDefault(_ToastModal);

    var YLUI = function () {
        function YLUI() {
            babelHelpers.classCallCheck(this, YLUI);
        }

        babelHelpers.createClass(YLUI, [{
            key: "showFailTips",
            value: function showFailTips(title) {
                _ToastModal2.default.showToast(title, 'fail');
            }
        }, {
            key: "showFinishTips",
            value: function showFinishTips(title) {
                _ToastModal2.default.showToast(title, 'success');
            }
        }, {
            key: "dismissTips",
            value: function dismissTips() {
                _ToastModal2.default.showToast('', 'dismiss');
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLUI();
                }

                return this.instance;
            }
        }]);
        return YLUI;
    }();

    module.exports = YLUI.getInstance();
},11201,[11204],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLUI.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _CommonYeelightModules = _require(_dependencyMap[1]);

    var ToastModal = function (_Component) {
        babelHelpers.inherits(ToastModal, _Component);

        function ToastModal() {
            babelHelpers.classCallCheck(this, ToastModal);
            return babelHelpers.possibleConstructorReturn(this, (ToastModal.__proto__ || Object.getPrototypeOf(ToastModal)).call(this));
        }

        babelHelpers.createClass(ToastModal, null, [{
            key: "showToast",
            value: function showToast(title, type) {
                if (type === 'success') {
                    _CommonYeelightModules.Toast.success(title);
                } else if (type === 'fail') {
                    _CommonYeelightModules.Toast.fail(title);
                } else if (type === 'dismiss') {
                    _CommonYeelightModules.Toast.hide();
                }
            }
        }]);
        return ToastModal;
    }(_react.Component);

    exports.default = ToastModal;
},11204,[10297,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/ToastModal.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLStorage = function () {
        function YLStorage() {
            babelHelpers.classCallCheck(this, YLStorage);
        }

        babelHelpers.createClass(YLStorage, [{
            key: "loadInfoCallback",
            value: function loadInfoCallback(callback) {
                _miot.Host.storage.load().then(callback).catch(callback);
            }
        }, {
            key: "loadInfoCallbackWithKeys",
            value: function loadInfoCallbackWithKeys(keysArray, callback) {
                _miot.Host.storage.load(keysArray).then(callback).catch(callback);
            }
        }, {
            key: "saveInfo",
            value: function saveInfo(data) {
                _miot.Host.storage.save(data);
            }
        }, {
            key: "setInfo",
            value: function setInfo(key, data) {
                _miot.Host.storage.set(key, JSON.stringify(data));
            }
        }, {
            key: "getInfo",
            value: function getInfo(key, callback) {
                _miot.Host.storage.get(key).then(function (val) {
                    if (val) {
                        callback(true, JSON.parse(val));
                    } else {
                        callback(false, "opps! no storage data");
                    }
                }).catch(function (err) {
                    callback(false, err);
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLStorage();
                }

                return this.instance;
            }
        }]);
        return YLStorage;
    }();

    module.exports = YLStorage.getInstance();
},11207,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLStorage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _YLAccount = _require(_dependencyMap[0]);

    var _YLAccount2 = babelHelpers.interopRequireDefault(_YLAccount);

    var _YLSmartHome = _require(_dependencyMap[1]);

    var _YLSmartHome2 = babelHelpers.interopRequireDefault(_YLSmartHome);

    var _YLScene = _require(_dependencyMap[2]);

    var _YLScene2 = babelHelpers.interopRequireDefault(_YLScene);

    var _YLMIOTSpec = _require(_dependencyMap[3]);

    var _YLMIOTSpec2 = babelHelpers.interopRequireDefault(_YLMIOTSpec);

    var _miot = _require(_dependencyMap[4]);

    var YLService = function () {
        function YLService() {
            babelHelpers.classCallCheck(this, YLService);
        }

        babelHelpers.createClass(YLService, [{
            key: "getCurrentCountryInfoCallback",
            value: function getCurrentCountryInfoCallback(callback) {
                _miot.Service.getServerName().then(function (server) {
                    callback && callback(true, server);
                }).catch(function (error) {
                    callback && callback(false, error);
                });
            }
        }, {
            key: "userId",
            get: function get() {
                return _miot.Service.account.ID;
            }
        }, {
            key: "account",
            get: function get() {
                return _YLAccount2.default;
            }
        }, {
            key: "smarthome",
            get: function get() {
                return _YLSmartHome2.default;
            }
        }, {
            key: "scene",
            get: function get() {
                return _YLScene2.default;
            }
        }, {
            key: "spec",
            get: function get() {
                return _YLMIOTSpec2.default;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLService();
                }

                return this.instance;
            }
        }]);
        return YLService;
    }();

    module.exports = YLService.getInstance();
},11210,[11213,11216,11219,11222,10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLService.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLAccount = function () {
        function YLAccount() {
            babelHelpers.classCallCheck(this, YLAccount);
        }

        babelHelpers.createClass(YLAccount, [{
            key: "userId",
            get: function get() {
                return _miot.Service.account.ID;
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLAccount();
                }

                return this.instance;
            }
        }]);
        return YLAccount;
    }();

    module.exports = YLAccount.getInstance();
},11213,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLAccount.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLSmartHome = function () {
        function YLSmartHome() {
            babelHelpers.classCallCheck(this, YLSmartHome);
        }

        babelHelpers.createClass(YLSmartHome, [{
            key: "getDeviceSetting",
            value: function getDeviceSetting(params, callback) {
                _miot.Service.smarthome.getDeviceSetting(params).then(callback).catch(callback);
            }
        }, {
            key: "delDevicesConfig",
            value: function delDevicesConfig(params, callback) {
                _miot.Service.smarthome.delDevicesConfig(params).then(callback).catch(callback);
            }
        }, {
            key: "getDevicesConfig",
            value: function getDevicesConfig(param, callback) {
                _miot.Service.smarthome.getDevicesConfig(param).then(function () {
                    callback && callback.apply(undefined, arguments);
                }).catch(callback);
            }
        }, {
            key: "rangeGetOpenConfig",
            value: function rangeGetOpenConfig(params, callback) {
                _miot.Service.smarthome.getRangeOpenConfig(params).then(function () {
                    callback && callback.apply(undefined, arguments);
                }).catch(callback);
            }
        }, {
            key: "deviceSetExtraData",
            value: function deviceSetExtraData(param, callback) {
                _miot.Service.smarthome.deviceSetExtraData(param).then(function () {
                    var returnValue = {};

                    if (arguments.length > 0) {
                        var isSuccess = arguments.length <= 0 ? undefined : arguments[0];
                        returnValue.code = isSuccess ? 0 : -1;
                    }

                    callback && callback(returnValue);
                }).catch(callback);
            }
        }, {
            key: "checkVersion",
            value: function checkVersion(params, callback) {
                _miot.Service.smarthome.checkDeviceVersion(params.did, params.pid).then(function (result) {
                    callback && callback({
                        "message": "ok",
                        "result": result
                    });
                }, function (result) {
                    callback && callback({
                        "message": "failed",
                        "result": result
                    });
                }).catch(function (result) {
                    callback && callback({
                        "message": "failed",
                        "result": result
                    });
                });
            }
        }, {
            key: "getLatestVersion",
            value: function getLatestVersion(model, callback) {
                _miot.Service.smarthome.getLatestVersion(model).then(function (result) {
                    callback && callback({
                        "message": "ok",
                        "result": result
                    });
                }, function (result) {
                    callback && callback({
                        "message": "failed",
                        "result": result
                    });
                }).catch(function (result) {
                    callback && callback({
                        "message": "failed",
                        "result": result
                    });
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLSmartHome();
                }

                return this.instance;
            }
        }]);
        return YLSmartHome;
    }();

    module.exports = YLSmartHome.getInstance();
},11216,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLSmartHome.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLScene = function () {
        function YLScene() {
            babelHelpers.classCallCheck(this, YLScene);
        }

        babelHelpers.createClass(YLScene, [{
            key: "list",
            value: function list(params, callback) {
                _miot.Service.scene.list(params).then(callback).catch(callback);
            }
        }, {
            key: "save",
            value: function save(params, callback) {
                _miot.Service.scene.save(params).then(callback).catch(callback);
            }
        }, {
            key: "remove",
            value: function remove(params) {
                _miot.Service.scene.remove(params).then(callback).catch(callback);
            }
        }, {
            key: "loadTimerScenes",
            value: function loadTimerScenes(callback) {
                _miot.Device.loadTimerScenes().then(function (sceneArr) {
                    callback && callback(true, sceneArr);
                }).catch(function (err) {
                    callback && callback(false);
                });
            }
        }, {
            key: "createTimerScene",
            value: function createTimerScene(params, callback) {
                var scene = _miot.Device.createTimerScene(params);

                scene.save().then(function (scene) {
                    callback && callback(scene);
                }).catch(function (err) {
                    callback && callback(null);
                });
            }
        }, {
            key: "saveScene",
            value: function saveScene(scene, callback) {
                scene.save().then(function (scene) {
                    callback && callback(scene);
                }).catch(function (err) {
                    callback && callback(null);
                });
            }
        }, {
            key: "removeTimerScene",
            value: function removeTimerScene(scene, callback) {
                scene.remove().then(function (response) {
                    callback && callback(true, response);
                }).catch(function (err) {
                    callback && callback(false);
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLScene();
                }

                return this.instance;
            }
        }]);
        return YLScene;
    }();

    module.exports = YLScene.getInstance();
},11219,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLScene.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLMIOTSpec = function () {
        function YLMIOTSpec() {
            babelHelpers.classCallCheck(this, YLMIOTSpec);
        }

        babelHelpers.createClass(YLMIOTSpec, [{
            key: "setPropertiesValue",
            value: function setPropertiesValue(params, callback) {
                return _miot.Service.spec.setPropertiesValue(params).then(function (r) {
                    callback(true, r);
                }).catch(function (e) {
                    callback(false, e);
                });
            }
        }, {
            key: "getPropertiesValue",
            value: function getPropertiesValue(params, callback) {
                return _miot.Service.spec.getPropertiesValue(params).then(function (r) {
                    callback(true, r);
                }).catch(function (e) {
                    callback(false, e);
                });
            }
        }, {
            key: "setAction",
            value: function setAction(params, callback) {
                _miot.Service.spec.doAction(params).then(function (r) {
                    callback(true, r);
                }).catch(function (e) {
                    callback(false, e);
                });
            }
        }, {
            key: "callSpecMethod",
            value: function callSpecMethod(method, params, callback) {}
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLMIOTSpec();
                }

                return this.instance;
            }
        }]);
        return YLMIOTSpec;
    }();

    module.exports = YLMIOTSpec.getInstance();
},11222,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLMIOTSpec.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLIBluetoothLE = function () {
        function YLIBluetoothLE() {
            babelHelpers.classCallCheck(this, YLIBluetoothLE);
        }

        babelHelpers.createClass(YLIBluetoothLE, [{
            key: "bluetoothLE",
            value: function bluetoothLE(identifier) {
                var ble = _miot.Bluetooth.createBluetoothLE(identifier);

                return ble;
            }
        }, {
            key: "connect",
            value: function connect(identifier, options, callback) {
                this.bluetoothLE(identifier).connect(3, babelHelpers.extends({
                    peripheralID: identifier,
                    timeout: 12000
                }, options)).then(function (peripheral) {
                    if (!peripheral.identifier) {
                        if (peripheral.UUID) {
                            peripheral.identifier = peripheral.UUID;
                        } else if (peripheral.uuid) {
                            peripheral.identifier = peripheral.uuid;
                        }
                    }

                    callback && callback(null, peripheral);
                }).catch(function (err) {
                    callback && callback(err, null);
                });
            }
        }, {
            key: "writeWithoutResponse",
            value: function writeWithoutResponse(identifier, serviceUUID, characteristicUUID, msg, callback) {
                this.bluetoothLE(identifier).getService(serviceUUID).getCharacteristic(characteristicUUID).writeWithoutResponse(msg).then(callback).catch(callback);
            }
        }, {
            key: "write",
            value: function write(identifier, serviceUUID, characteristicUUID, msg, callback) {
                this.bluetoothLE(identifier).getService(serviceUUID).getCharacteristic(characteristicUUID).write(msg).then(callback).catch(callback);
            }
        }, {
            key: "disconnect",
            value: function disconnect(identifier, callback) {
                var bluetooth = this.bluetoothLE(identifier);

                if (bluetooth.isConnected) {
                    bluetooth.disconnect();
                }

                setTimeout(function () {
                    if (callback) {
                        callback();
                    }
                }, 0);
            }
        }, {
            key: "getConnectedPeripherals",
            value: function getConnectedPeripherals(serviceUUIDs, callback) {
                _miot.Bluetooth.retrievePeripheralsWithServicesForIOS.apply(_miot.Bluetooth, babelHelpers.toConsumableArray(serviceUUIDs)).then(callback).catch(callback);
            }
        }, {
            key: "discoverCharacteristics",
            value: function discoverCharacteristics(identifier, serviceUUID, charas, callback) {
                var _bluetoothLE$getServi;

                (_bluetoothLE$getServi = this.bluetoothLE(identifier).getService(serviceUUID)).startDiscoverCharacteristics.apply(_bluetoothLE$getServi, babelHelpers.toConsumableArray(charas));

                _miot.BluetoothEvent.bluetoothCharacteristicDiscovered.addListener(function (bluetooth, service, characters) {
                    if (!service.UUID) {
                        service.UUID = service.uuid;
                    }

                    var newCharacters = {};
                    characters.forEach(function (characteristic, index) {
                        if (characteristic && !characteristic.hasOwnProperty('UUID') && !characteristic.UUID) {
                            characteristic.UUID = characteristic.uuid;
                        }

                        newCharacters[characteristic.UUID] = characteristic;
                    });

                    if (callback) {
                        callback(null, service, newCharacters);
                    }
                });
            }
        }, {
            key: "readValue",
            value: function readValue(identifier, serviceUUID, characteristicUUID, callback) {
                this.bluetoothLE(identifier).getService(serviceUUID).getCharacteristic(characteristicUUID).read().then(function (data) {
                    callback && callback(null, data.characteristicUUID, data.value);
                }).catch(callback);
            }
        }, {
            key: "discoverServices",
            value: function discoverServices(identifier, services, callback) {
                var _bluetoothLE;

                (_bluetoothLE = this.bluetoothLE(identifier)).startDiscoverServices.apply(_bluetoothLE, babelHelpers.toConsumableArray(services));

                _miot.BluetoothEvent.bluetoothSeviceDiscovered.addListener(function (blut, services) {
                    var newServices = {};
                    services.forEach(function (element) {
                        newServices[element.UUID] = element;
                    });

                    if (callback) {
                        callback(null, blut, newServices);
                    }
                });

                _miot.BluetoothEvent.bluetoothSeviceDiscoverFailed.addListener(function (blut, error) {
                    if (callback) {
                        callback(error, blut, null);
                    }
                });
            }
        }, {
            key: "retrieveConnectedPeripheralsWithServices",
            value: function retrieveConnectedPeripheralsWithServices(identifiers, callback) {
                _miot.Bluetooth.retrievePeripheralsWithServicesForIOS.apply(_miot.Bluetooth, babelHelpers.toConsumableArray(identifiers)).then(callback).catch(callback);
            }
        }, {
            key: "startScan",
            value: function startScan(serviceUUIDs, options, callback) {
                _miot.Bluetooth.startScan.apply(_miot.Bluetooth, [3000].concat(babelHelpers.toConsumableArray(serviceUUIDs)));
            }
        }, {
            key: "stopScan",
            value: function stopScan() {
                _miot.Bluetooth.stopScan();
            }
        }, {
            key: "isEnabled",
            value: function isEnabled(callback) {
                _miot.Bluetooth.checkBluetoothIsEnabled().then(callback).catch(callback);
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLIBluetoothLE();
                }

                return this.instance;
            }
        }]);
        return YLIBluetoothLE;
    }();

    module.exports = YLIBluetoothLE.getInstance();
},11225,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLIBluetoothLE.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var YLBluetoothEvent = function () {
        function YLBluetoothEvent() {
            babelHelpers.classCallCheck(this, YLBluetoothEvent);
        }

        babelHelpers.createClass(YLBluetoothEvent, [{
            key: "bluetoothDeviceDiscovered",
            value: function bluetoothDeviceDiscovered(callback) {
                return _miot.BluetoothEvent.bluetoothDeviceDiscovered.addListener(function (result) {
                    callback && callback(result);
                });
            }
        }], [{
            key: "getInstance",
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new YLBluetoothEvent();
                }

                return this.instance;
            }
        }]);
        return YLBluetoothEvent;
    }();

    module.exports = YLBluetoothEvent.getInstance();
},11228,[10074],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLBluetoothEvent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _miot = _require(_dependencyMap[0]);

    var _YLConstant = _require(_dependencyMap[1]);

    var localization = _miot.Host.locale.language;

    if (!localization) {
        console.error("Something went wrong initializing the native ReactLocalization module.\nPlease check your configuration.\nDid you run 'react-native link'?");
    }

    var interfaceLanguage = localization.replace(/_/g, '-');

    var LocalizedStrings = function () {
        babelHelpers.createClass(LocalizedStrings, [{
            key: "_getBestMatchingLanguage",
            value: function _getBestMatchingLanguage(language, props) {
                if (_YLConstant.NEW_LANGUAGE_CODE_MAP[language]) {
                    return _YLConstant.NEW_LANGUAGE_CODE_MAP[language];
                }

                if (props[language]) return language;
                if (props[language.toLowerCase()]) return language.toLowerCase();
                var idx = language.lastIndexOf("-");

                if (idx >= 0) {
                    language = language.substring(0, idx);
                    return this._getBestMatchingLanguage(language, props);
                }

                return Object.keys(props)[0];
            }
        }]);

        function LocalizedStrings(props) {
            babelHelpers.classCallCheck(this, LocalizedStrings);
            this.props = props;
            this.setLanguage(interfaceLanguage);
        }

        babelHelpers.createClass(LocalizedStrings, [{
            key: "setContent",
            value: function setContent(props) {
                this.props = props;
                this.setLanguage(this.language);
            }
        }, {
            key: "setLanguage",
            value: function setLanguage(language) {
                var bestLanguage = this._getBestMatchingLanguage(language, this.props);

                var defaultLanguage = Object.keys(this.props)[0];
                this.language = bestLanguage;

                if (this.props[bestLanguage]) {
                    var localizedStrings = babelHelpers.extends({}, this.props[defaultLanguage], this.props[this.language]);

                    for (var key in localizedStrings) {
                        if (localizedStrings.hasOwnProperty(key)) {
                            this[key] = localizedStrings[key];
                        }
                    }

                    if (defaultLanguage !== this.language) {
                        localizedStrings = this.props[defaultLanguage];

                        this._fallbackValues(localizedStrings, this);
                    }
                }
            }
        }, {
            key: "_fallbackValues",
            value: function _fallbackValues(defaultStrings, strings) {
                for (var key in defaultStrings) {
                    if (defaultStrings.hasOwnProperty(key) && !strings[key]) {
                        strings[key] = defaultStrings[key];
                        console.log("Missing localization for language '" + this.language + "' and key '" + key + "'.");
                    } else {
                        if (typeof strings[key] != "string") {
                            this._fallbackValues(defaultStrings[key], strings[key]);
                        }
                    }
                }
            }
        }, {
            key: "getLanguage",
            value: function getLanguage() {
                return this.language;
            }
        }, {
            key: "getInterfaceLanguage",
            value: function getInterfaceLanguage() {
                return interfaceLanguage;
            }
        }, {
            key: "getLocaleObject",
            value: function getLocaleObject() {
                return this.props;
            }
        }, {
            key: "getAvailableLanguages",
            value: function getAvailableLanguages() {
                if (!this.availableLanguages) {
                    this.availableLanguages = [];

                    for (var language in this.props) {
                        this.availableLanguages.push(language);
                    }
                }

                return this.availableLanguages;
            }
        }, {
            key: "formatString",
            value: function formatString(str) {
                var res = str;

                for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    values[_key - 1] = arguments[_key];
                }

                for (var i = 0; i < values.length; i++) {
                    res = this._replaceAll("{" + i + "}", values[i], res);
                }

                return res;
            }
        }, {
            key: "getString",
            value: function getString(key, language) {
                try {
                    return this.props[language][key];
                } catch (ex) {
                    console.log("No localization found for key " + key + " and language " + language);
                }

                return null;
            }
        }, {
            key: "_replaceAll",
            value: function _replaceAll(original, replacement, str) {
                original = original.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
                replacement = ("" + replacement).replace(/([$])/g, '$$$$');
                return str.replace(new RegExp(original, 'g'), replacement);
            }
        }]);
        return LocalizedStrings;
    }();

    module.exports = LocalizedStrings;
},11231,[10074,11186],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Logic/YLLocalizedStrings.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _Card = _require(_dependencyMap[1]);

  var _Card2 = babelHelpers.interopRequireDefault(_Card);

  module.exports = _Card2.default;
},11234,[10297,10377],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLCard.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _NavigationBar = _require(_dependencyMap[0]);

  var _NavigationBar2 = babelHelpers.interopRequireDefault(_NavigationBar);

  module.exports = _NavigationBar2.default;
},11237,[10719],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLNavigationBar.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _Separator = _require(_dependencyMap[0]);

  var _Separator2 = babelHelpers.interopRequireDefault(_Separator);

  module.exports = _Separator2.default;
},11240,[10332],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLSeparator.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.secondAllOptions = exports.firstAllOptions = exports.SETTING_KEYS = exports.CommonSetting = undefined;

  var _CommonSetting = _require(_dependencyMap[0]);

  var _CommonSetting2 = _require(_dependencyMap[1]);

  exports.CommonSetting = _CommonSetting.CommonSetting;
  exports.SETTING_KEYS = _CommonSetting.SETTING_KEYS;
  exports.firstAllOptions = _CommonSetting2.firstAllOptions;
  exports.secondAllOptions = _CommonSetting2.secondAllOptions;
},11243,[10353,10326],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLCommonSetting.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ListItemWithSwitch = exports.ListItem = undefined;

  var _ListItem = _require(_dependencyMap[0]);

  exports.ListItem = _ListItem.ListItem;
  exports.ListItemWithSwitch = _ListItem.ListItemWithSwitch;
},11246,[10338],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLListItem.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _resources = _require(_dependencyMap[0]);

  exports.Styles = _resources.Styles;
},11249,[10077],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CompatibleLayer/Components/CLResources.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _reactNative = _require(_dependencyMap[0]);

    var _Package = _require(_dependencyMap[1]);

    var _Package2 = babelHelpers.interopRequireDefault(_Package);

    var CommonYeelightModules = _require(_dependencyMap[2]);

    var packageInfo = _require(_dependencyMap[3]);

    var strings = CommonYeelightModules.strings,
        Api = CommonYeelightModules.Api,
        Cloud = CommonYeelightModules.Cloud,
        DefaultLightNewCommon = CommonYeelightModules.DefaultLightNewCommon,
        MibandAttachedPage = CommonYeelightModules.MibandAttachedPage,
        NightLightSettingPage = CommonYeelightModules.NightLightSettingPage,
        RemoteControlListPage = CommonYeelightModules.RemoteControlListPage,
        AmbilightSettingPage = CommonYeelightModules.AmbilightSettingPage,
        DelayTimer = CommonYeelightModules.DelayTimer,
        MenuIdentifiers = CommonYeelightModules.MenuIdentifiers,
        SettingMenuTypeEnum = CommonYeelightModules.SettingMenuTypeEnum,
        SettingMenuIcons = CommonYeelightModules.SettingMenuIcons,
        BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
        DeviceModel = CommonYeelightModules.DeviceModel,
        DefaultTimeManagementPage = CommonYeelightModules.DefaultTimeManagementPage,
        SmartSwitchDetailPage = CommonYeelightModules.SmartSwitchDetailPage,
        LocalStorageManager = CommonYeelightModules.LocalStorageManager,
        YLDevice = CommonYeelightModules.YLDevice,
        YLResource = CommonYeelightModules.YLResource,
        YLUI = CommonYeelightModules.YLUI,
        YLHostUI = CommonYeelightModules.YLHostUI,
        YLPackageEvent = CommonYeelightModules.YLPackageEvent,
        YLDeviceEvent = CommonYeelightModules.YLDeviceEvent,
        PluginInfo = CommonYeelightModules.PluginInfo,
        YLListViewType = CommonYeelightModules.YLListViewType,
        SettingMenuEnum = CommonYeelightModules.SettingMenuEnum,
        YLSmartHome = CommonYeelightModules.YLSmartHome,
        CLFIRST_ALL_OPTIONS = CommonYeelightModules.CLFIRST_ALL_OPTIONS,
        CLSECOND_ALL_OPTIONS = CommonYeelightModules.CLSECOND_ALL_OPTIONS,
        ResourcesManager = CommonYeelightModules.ResourcesManager;
    var YLListViewCellAccessoryType = YLListViewType.YLListViewCellAccessoryType;
    var SettingFirstOptionsKey = SettingMenuEnum.SettingFirstOptionsKey,
        SettingSecondOptionsKey = SettingMenuEnum.SettingSecondOptionsKey;
    var BaseComponentDataSource = BaseYeelightModulesDataSource.BaseComponentDataSource;
    var _commonMenuData = [];
    var _specificMenuData = [];

    var BaseSettingMenuDataSource = function (_BaseComponentDataSou) {
        babelHelpers.inherits(BaseSettingMenuDataSource, _BaseComponentDataSou);

        function BaseSettingMenuDataSource(props) {
            babelHelpers.classCallCheck(this, BaseSettingMenuDataSource);

            var _this = babelHelpers.possibleConstructorReturn(this, (BaseSettingMenuDataSource.__proto__ || Object.getPrototypeOf(BaseSettingMenuDataSource)).call(this, props));

            _this.props = babelHelpers.extends({}, props, _this.props);
            _this.ds = new _reactNative.ListView.DataSource({
                rowHasChanged: function rowHasChanged(r1, r2) {
                    return r1 !== r2;
                },
                sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
                    return s1 !== s2;
                }
            });
            _this.state = {
                model: YLDevice.deviceModel,
                did: YLDevice.deviceId,
                deviceName: DeviceModel.deviceName,
                newReply: false,
                delayTimer: false,
                forInternational: false,
                enableNightLight: false,
                hasSetEnableNightLight: false,
                dataSource: _this.getDataSource(),
                nightlightBeginTime: 0,
                nightlightEndTime: 0,
                nightlightDelayTime: 0,
                enableDelayTurnOffTime: false,
                isFirmwareLatest: true,
                supportBtGateway: false,
                enbaleGestureOn: false,
                enableSmartSwitch: false,
                hasSetEnableSmartSwitch: false,
                smartSwitchStatusHint: strings.common_settings_seesaw_switch_offed
            };
            return _this;
        }

        babelHelpers.createClass(BaseSettingMenuDataSource, [{
            key: "defaultLight",
            value: function defaultLight() {
                return DefaultLightNewCommon;
            }
        }, {
            key: "commonMenuData",
            value: function commonMenuData() {
                return _commonMenuData;
            }
        }, {
            key: "specificMenuData",
            value: function specificMenuData() {
                return _specificMenuData;
            }
        }, {
            key: "isVirtualDevice",
            value: function isVirtualDevice() {
                return false;
            }
        }, {
            key: "shouldRequestNightTime",
            value: function shouldRequestNightTime() {
                return true;
            }
        }, {
            key: "shouldShowDelayTimerValue",
            value: function shouldShowDelayTimerValue() {
                return true;
            }
        }, {
            key: "newReply",
            value: function newReply() {
                return this.state.newReply;
            }
        }, {
            key: "delayTimer",
            value: function delayTimer() {
                return this.state.delayTimer;
            }
        }, {
            key: "forInternational",
            value: function forInternational() {
                return this.state.forInternational;
            }
        }, {
            key: "enableNightLight",
            value: function enableNightLight() {
                return this.state.enableNightLight;
            }
        }, {
            key: "enableSmartSwitch",
            value: function enableSmartSwitch() {
                return this.state.enableSmartSwitch;
            }
        }, {
            key: "enbaleGestureOn",
            value: function enbaleGestureOn() {
                return this.state.enbaleGestureOn;
            }
        }, {
            key: "commonMenuIdentifiersArray",
            value: function commonMenuIdentifiersArray() {
                return [MenuIdentifiers.miHomeSettingEditDeviceName, MenuIdentifiers.miHomeSettingShareDevice, MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade, MenuIdentifiers.miHomeSettingRoomManagement, MenuIdentifiers.miHomeSettingIftttAuto, MenuIdentifiers.miHomeSettingNewMore, MenuIdentifiers.miHomeSettingAddToDesktop];
            }
        }, {
            key: "commonMenuIdentifiers",
            value: function commonMenuIdentifiers() {
                var commonMenuIdentifiersArray = void 0;
                var settingMenu = PluginInfo.settingMenu;

                if (settingMenu && settingMenu.commonMenuIdentifiers) {
                    commonMenuIdentifiersArray = settingMenu.commonMenuIdentifiers;
                } else {
                    commonMenuIdentifiersArray = this.commonMenuIdentifiersArray();
                }

                return commonMenuIdentifiersArray;
            }
        }, {
            key: "commonMenuIdentifiersFilterByCondition",
            value: function commonMenuIdentifiersFilterByCondition(isInternationalVersion, isShared) {
                var returnArray = this.commonMenuIdentifiers();

                if (isShared) {
                    return [MenuIdentifiers.miHomeSettingUnbindDevice];
                } else {
                    if (isInternationalVersion) {
                        returnArray = returnArray.filter(function (item) {
                            return item != MenuIdentifiers.miHomeSettingRoomManagement;
                        });
                    }

                    return returnArray;
                }
            }
        }, {
            key: "specificMenuIdentifiersArray",
            value: function specificMenuIdentifiersArray() {
                return [MenuIdentifiers.settingTime, MenuIdentifiers.settingSchedules, MenuIdentifiers.settingDefaultLight, MenuIdentifiers.settingNightLight, MenuIdentifiers.settingRemoteControl, MenuIdentifiers.settingMiband];
            }
        }, {
            key: "specificMenuIdentifiers",
            value: function specificMenuIdentifiers() {
                var settingMenu = PluginInfo.settingMenu;

                if (settingMenu && settingMenu.specificMenuIdentifiers) {
                    return settingMenu.specificMenuIdentifiers;
                } else {
                    return this.specificMenuIdentifiersArray();
                }
            }
        }, {
            key: "devMenuIdentifiers",
            value: function devMenuIdentifiers() {
                var settingMenu = PluginInfo.settingMenu || {};
                return settingMenu.devMenuIdentifiers || [];
            }
        }, {
            key: "specificMenuIdentifiersFilterByCondition",
            value: function specificMenuIdentifiersFilterByCondition(isInternationalVersion, isShared) {
                var returnArray = this.specificMenuIdentifiers();

                if (isShared) {
                    returnArray = returnArray.filter(function (item) {
                        return item != MenuIdentifiers.settingSchedules;
                    });
                }

                if (global.DEV) {
                    returnArray = returnArray.concat(this.devMenuIdentifiers());
                    returnArray = returnArray.filter(function (item, index) {
                        return returnArray.indexOf(item) === index;
                    });
                }

                return returnArray;
            }
        }, {
            key: "commonDataSource",
            value: function commonDataSource() {
                return [strings.common_text_delay_off_timer, strings.common_settings_schedules, strings.common_settings_night_light, strings.common_text_miband, strings.common_remote_control, strings.common_strings_gestureOn];
            }
        }, {
            key: "dataSourceByInternational",
            value: function dataSourceByInternational(isInternationalVersion) {
                var returnArray = this.commonDataSource();

                if (isInternationalVersion) {
                    returnArray = returnArray.filter(function (item) {
                        return item != strings.common_settings_schedules;
                    });
                }

                return returnArray;
            }
        }, {
            key: "commonImageNames",
            value: function commonImageNames() {
                return ['time', 'schedules', 'night_light', 'remote_control', 'miband', 'feedback', 'faq', 'about'];
            }
        }, {
            key: "iconImageNamesByInternational",
            value: function iconImageNamesByInternational(isInternationalVersion) {
                var returnArray = this.commonImageNames();

                if (isInternationalVersion) {
                    returnArray = returnArray.filter(function (item) {
                        return item != 'schedules';
                    });
                }

                return returnArray;
            }
        }, {
            key: "totalCommonMenuData",
            value: function totalCommonMenuData() {
                var _this2 = this;

                var unbindDeviceData = this.unbindDeviceData();
                var deviceName = YLDevice.deviceName;

                if (this.state && this.state.deviceName) {
                    deviceName = this.state.deviceName;
                }

                return babelHelpers.extends({
                    'miHomeSettingEditDeviceName': {
                        name: strings.common_text_rename,
                        identifier: MenuIdentifiers.miHomeSettingEditDeviceName,
                        subtitle: deviceName,
                        image: SettingMenuIcons.miHomeSettingEditDeviceName,
                        func: function func() {
                            YLHostUI.openChangeDeviceName();
                        }
                    },
                    'miHomeSettingShareDevice': {
                        name: strings.common_setting_share_device_ios,
                        identifier: MenuIdentifiers.miHomeSettingShareDevice,
                        image: SettingMenuIcons.miHomeSettingShareDevice,
                        func: function func() {
                            YLHostUI.openShareDevicePage();
                        }
                    },
                    'miHomeSettingCheckFirmwareUpgrade': {
                        name: strings.common_setting_check_firmware_upgrade_ios,
                        identifier: MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade,
                        image: SettingMenuIcons.miHomeSettingCheckFirmwareUpgrade,
                        func: function func() {
                            YLHostUI.openDeviceUpgradePage();
                        },
                        haveNews: function haveNews() {
                            return !_this2.state.isFirmwareLatest;
                        }
                    },
                    'miHomeFeedback': {
                        name: '反馈',
                        identifier: MenuIdentifiers.miHomeFeedback,
                        image: SettingMenuIcons.miHomeFeedback,
                        func: function func() {
                            YLHostUI.openFeedback();
                        }
                    },
                    'miHomeSettingRoomManagement': {
                        name: strings.common_setting_room_management_ios,
                        identifier: MenuIdentifiers.miHomeSettingRoomManagement,
                        image: SettingMenuIcons.miHomeSettingRoomManagement,
                        func: function func() {
                            YLHostUI.openRoomManagementPage();
                        }
                    },
                    'miHomeSettingIftttAuto': {
                        name: strings.common_setting_ifttt_auto_ios,
                        identifier: MenuIdentifiers.miHomeSettingIftttAuto,
                        image: SettingMenuIcons.miHomeSettingIftttAuto,
                        func: function func() {
                            YLHostUI.openIftttAutoPage();
                        }
                    },
                    'miHomeSettingNewMore': {
                        name: strings.common_setting_new_more_ios,
                        identifier: MenuIdentifiers.miHomeSettingNewMore,
                        image: SettingMenuIcons.miHomeSettingNewMore,
                        func: function func() {
                            YLHostUI.openNewMorePage();
                        }
                    },
                    'miHomeSettingAddToDesktop': {
                        name: strings.common_setting_add_to_desktop_ios,
                        identifier: MenuIdentifiers.miHomeSettingAddToDesktop,
                        image: SettingMenuIcons.miHomeSettingAddToDesktop,
                        func: function func() {
                            YLHostUI.openAddToDesktopPage();
                        }
                    },
                    'miHomeSettingOpenPrivacyAndLicense': {
                        name: strings.common_msg_agreement_and_policy,
                        identifier: MenuIdentifiers.miHomeSettingOpenPrivacyAndLicense,
                        image: 'default',
                        func: function func() {
                            if (YLHostUI.privacyAndProtocolReview) {
                                YLHostUI.privacyAndProtocolReview(strings.common_msg_user_agreement, Cloud.licenseURL(), strings.common_msg_privacy_policy, Cloud.privacyURL());
                            }
                        }
                    },
                    'miHomeSettingOpenBtGatewayPage': {
                        name: strings.common_setting_ble_gateway_ios,
                        identifier: MenuIdentifiers.miHomeSettingOpenBtGatewayPage,
                        image: 'default',
                        func: function func() {
                            YLHostUI.openBtGatewayPage();
                        }
                    }
                }, unbindDeviceData);
            }
        }, {
            key: "unbindDeviceData",
            value: function unbindDeviceData() {
                return {
                    'miHomeSettingUnbindDevice': {
                        name: strings.common_setting_unbind_device_ios,
                        identifier: MenuIdentifiers.miHomeSettingUnbindDevice,
                        image: SettingMenuIcons.miHomeSettingUnbindDevice,
                        func: function func() {
                            YLHostUI.openDeleteDevice();
                        }
                    }
                };
            }
        }, {
            key: "totalSpecificMenuData",
            value: function totalSpecificMenuData() {
                var _this3 = this;

                var settingTimeTitle = strings.common_text_delay_off_timer;

                if (this.shouldShowDelayTimerValue() && this.hasOwnProperty('state') && this.state.hasOwnProperty('remainningDelayTime') && undefined != this.state.remainningDelayTime && this.state.remainningDelayTime > 0 && this.state.delayTimer) {
                    settingTimeTitle = strings.common_open_delay_off_off_info_singular.format(this.state.remainningDelayTime);
                }

                return {
                    'settingTime': {
                        name: settingTimeTitle,
                        identifier: MenuIdentifiers.settingTime,
                        image: SettingMenuIcons.settingTime,
                        func: function func() {
                            _this3.gotoDelayTimerPage();
                        },
                        stateFunc: function stateFunc() {
                            return _this3.state.remainningDelayTime > 0 ? '已启动' : '未启动';
                        },
                        accessoryType: YLListViewCellAccessoryType.switch,
                        accessoryFunc: function accessoryFunc(value) {
                            _this3._toggleDelayTimer(value, function (isSuccess) {
                                if (!isSuccess) {
                                    YLUI.showFailTips(strings.common_add_delay_off_fail);
                                }
                            });
                        },
                        accessoryValue: function accessoryValue() {
                            return _this3.delayTimer();
                        }
                    },
                    'settingSchedules': {
                        name: strings.common_settings_schedules,
                        identifier: MenuIdentifiers.settingSchedules,
                        image: SettingMenuIcons.settingSchedules,
                        func: function func() {
                            _this3.openTimerSettingPage();
                        }
                    },
                    'settingNightLight': {
                        name: strings.common_settings_night_light,
                        identifier: MenuIdentifiers.settingNightLight,
                        image: SettingMenuIcons.settingNightLight,
                        func: function func() {
                            _this3.gotoNightLightSettingPagePage();
                        },
                        stateFunc: function stateFunc() {
                            return _this3.state.enableNightLight ? _this3.nightlightTimeState() : strings.common_setting_night_light_no_open_ios;
                        },
                        accessoryType: YLListViewCellAccessoryType.switch,
                        accessoryFunc: function accessoryFunc(value) {
                            _this3._toggleNightLight(value);
                        },
                        accessoryValue: function accessoryValue() {
                            return _this3.enableNightLight();
                        }
                    },
                    'settingRemoteControl': {
                        name: strings.common_remote_control_and_switch_title,
                        identifier: MenuIdentifiers.settingRemoteControl,
                        image: SettingMenuIcons.settingRemoteControl,
                        func: function func() {
                            _this3.gotoRemoteControlListPage();
                        }
                    },
                    'settingMiband': {
                        name: strings.common_text_miband,
                        identifier: MenuIdentifiers.settingMiband,
                        image: SettingMenuIcons.settingMiband,
                        func: function func() {
                            _this3.props.navigation.push(babelHelpers.extends({
                                title: strings.common_text_miband
                            }, MibandAttachedPage.route, {
                                passProps: {}
                            }));
                        },
                        stateFunc: function stateFunc() {
                            return _this3.state.isBindMiband ? strings.common_miband_band_ios : strings.common_miband_not_bind_ios;
                        }
                    },
                    'settingDefaultLight': {
                        name: strings.common_default_state_title,
                        identifier: MenuIdentifiers.settingDefaultLight,
                        image: SettingMenuIcons.settingDefaultLight,
                        func: function func() {
                            _this3.props.navigation.push(babelHelpers.extends({
                                title: strings.common_default_state_title
                            }, _this3.defaultLight().route, {
                                passProps: {}
                            }));
                        }
                    },
                    'settingAmbilight': {
                        name: strings.common_setting_ambi_setting_feature,
                        identifier: MenuIdentifiers.settingAmbilight,
                        image: SettingMenuIcons.settingAmbilight,
                        func: function func() {
                            _this3.props.navigation.push(babelHelpers.extends({
                                title: strings.common_setting_ambi_setting_feature
                            }, AmbilightSettingPage.route, {
                                passProps: {}
                            }));
                        }
                    },
                    'settingDefaultTimeManagement': {
                        name: strings.feature_default_time_mgr,
                        identifier: MenuIdentifiers.settingDefaultTimeManagement,
                        image: 'default',
                        func: function func() {
                            _this3.props.navigation.push(babelHelpers.extends({}, DefaultTimeManagementPage.route, {
                                passProps: {}
                            }));
                        }
                    },
                    'settingSmartSwitch': {
                        name: strings.common_settings_seesaw_switch,
                        identifier: MenuIdentifiers.settingSmartSwitch,
                        image: SettingMenuIcons.settingSmartSwitch,
                        value: this.smartSwitchState(),
                        func: function func() {
                            _this3.props.navigation.push(babelHelpers.extends({
                                title: strings.common_settings_seesaw_switch
                            }, SmartSwitchDetailPage.route, {
                                passProps: {
                                    events: _this3.eventEmitter,
                                    smartSwitchDidChange: function smartSwitchDidChange(newStatus) {
                                        _this3.state.enableSmartSwitch = newStatus;

                                        _this3.forceUpdateComponentOwnerWithState({
                                            enableSmartSwitch: newStatus
                                        });

                                        _this3.updateListView();
                                    }
                                }
                            }));
                        }
                    }
                };
            }
        }, {
            key: "_createMenuData",
            value: function _createMenuData() {
                var totalCommonMenuData = {};
                var unbindDeviceData = this.unbindDeviceData();
                totalCommonMenuData = this.totalCommonMenuData();

                if (this.shouldShowDelayTimerValue() && this.hasOwnProperty('state') && this.state.hasOwnProperty('remainningDelayTime') && undefined != this.state.remainningDelayTime) {}

                var totalSpecificMenuData = this.totalSpecificMenuData();
                var isInternationalVersion = this.getIsInternationalVersion();
                var isShared = !YLDevice.isOwner;
                var commonMenuIdentifiers = this.commonMenuIdentifiersFilterByCondition(isInternationalVersion, isShared);
                var specificMenuIdentifiers = this.specificMenuIdentifiersFilterByCondition(isInternationalVersion, isShared);
                _commonMenuData = [];

                for (var i = 0; i < commonMenuIdentifiers.length; i++) {
                    var itemIdentifier = commonMenuIdentifiers[i];
                    var item = totalCommonMenuData[itemIdentifier];

                    if (item) {
                        _commonMenuData.push(item);
                    }
                }

                _specificMenuData = [];

                for (var i = 0; i < specificMenuIdentifiers.length; i++) {
                    var itemIdentifier = specificMenuIdentifiers[i];
                    var item = totalSpecificMenuData[itemIdentifier];

                    if (item) {
                        _specificMenuData.push(item);
                    }
                }

                return {
                    0: _specificMenuData,
                    1: _commonMenuData,
                    2: unbindDeviceData
                };
            }
        }, {
            key: "getIsInternationalVersion",
            value: function getIsInternationalVersion() {
                return Cloud.isInternationalVersion();
            }
        }, {
            key: "gotoRemoteControlListPage",
            value: function gotoRemoteControlListPage() {
                this.props.navigation.push(babelHelpers.extends({
                    title: strings.common_remote_management_ios
                }, RemoteControlListPage.route, {
                    passProps: {}
                }));
            }
        }, {
            key: "gotoDelayTimerPage",
            value: function gotoDelayTimerPage() {
                var _this4 = this;

                this.props.navigation.push(babelHelpers.extends({
                    title: strings.common_text_delay_off_timer
                }, DelayTimer.route, {
                    passProps: {
                        events: this.eventEmitter,
                        delayTimerDidChange: function delayTimerDidChange(remainning) {
                            if (remainning) {
                                _this4.forceUpdateComponentOwnerWithState({
                                    delayTimer: true,
                                    remainningDelayTime: remainning
                                });

                                _this4.refreshDataSource();
                            }
                        }
                    },
                    leftButtonIcon: {
                        isStatic: true,
                        uri: YLResource.uriNaviBackButtonImage,
                        scale: _reactNative.PixelRatio.get()
                    },
                    onLeftButtonPress: function onLeftButtonPress() {
                        return _this4._backFromTimePressed("backFromTime");
                    },
                    rightButtonTitle: strings.common_text_save,
                    onRightButtonPress: function onRightButtonPress() {
                        return _this4._rightBtnPressed("timer");
                    }
                }));
            }
        }, {
            key: "gotoNightLightSettingPagePage",
            value: function gotoNightLightSettingPagePage() {
                var _this5 = this;

                this.props.navigation.push(babelHelpers.extends({
                    title: strings.common_settings_night_light
                }, NightLightSettingPage.route, {
                    passProps: {
                        events: this.eventEmitter,
                        valueChangeCallback: function valueChangeCallback(value) {
                            _this5.setState(babelHelpers.extends({}, value));
                        }
                    },
                    leftButtonIcon: {
                        isStatic: true,
                        uri: YLResource.uriNaviBackButtonImage,
                        scale: _reactNative.PixelRatio.get()
                    },
                    onLeftButtonPress: function onLeftButtonPress() {
                        return _this5._backFromNightTimeDataButtonPressed("backFromNightLightSetting");
                    },
                    rightButtonTitle: strings.common_text_save,
                    onRightButtonPress: function onRightButtonPress() {
                        return _this5._saveNightTimeDataButtonPressed("nightLightSetting");
                    }
                }));
            }
        }, {
            key: "_rightBtnPressed",
            value: function _rightBtnPressed(string) {
                this.eventEmitter.emit(string, {});
            }
        }, {
            key: "getDataSource",
            value: function getDataSource() {
                var settingMenuType = SettingMenuTypeEnum.AdvancedType;

                if (this.props.settingMenuType) {
                    settingMenuType = this.props.settingMenuType;
                }

                if (SettingMenuTypeEnum.AdvancedType == settingMenuType) {
                    return this.ds.cloneWithRowsAndSections(this.getMenuData(), [0]);
                } else if (SettingMenuTypeEnum.CommonType == settingMenuType) {
                    return this.ds.cloneWithRowsAndSections(this.getMenuData(), [1]);
                } else {
                    if (YLDevice.isOwner) {
                        return this.ds.cloneWithRowsAndSections(this.getMenuData(), [0, 1, 2]);
                    } else {
                        return this.ds.cloneWithRowsAndSections(this.getMenuData(), [0]);
                    }
                }
            }
        }, {
            key: "getMenuDataByType",
            value: function getMenuDataByType() {
                var settingMenuType = SettingMenuTypeEnum.AdvancedType;

                if (this.props.settingMenuType) {
                    settingMenuType = this.props.settingMenuType;
                }

                var menuData = this.getMenuData();

                if (SettingMenuTypeEnum.AdvancedType == settingMenuType) {
                    if (menuData.hasOwnProperty(0)) {
                        return {
                            0: menuData[0]
                        };
                    }
                } else if (SettingMenuTypeEnum.CommonType == settingMenuType) {
                    if (menuData.hasOwnProperty(1)) {
                        return {
                            1: menuData[1]
                        };
                    }
                } else {
                    if (YLDevice.isOwner) {
                        return menuData;
                    } else {
                        if (menuData.hasOwnProperty(0)) {
                            return {
                                0: menuData[0]
                            };
                        }
                    }
                }
            }
        }, {
            key: "checkSettingMenuExist",
            value: function checkSettingMenuExist(menuIdentifier) {
                var currentMenuData = this.getMenuDataByType();

                for (var key in currentMenuData) {
                    var menuArray = currentMenuData[key];

                    for (var index in menuArray) {
                        var menu = menuArray[index];

                        if (menu.identifier == menuIdentifier) {
                            return true;
                        }
                    }
                }

                return false;
            }
        }, {
            key: "getMenuData",
            value: function getMenuData() {
                return this._createMenuData();
            }
        }, {
            key: "updateListView",
            value: function updateListView() {
                this.refreshDataSource();
            }
        }, {
            key: "dataSource",
            value: function dataSource() {
                return this.state.dataSource;
            }
        }, {
            key: "clearComponentOwner",
            value: function clearComponentOwner() {
                this.props.componentOwner = null;
                this.props.stateValueChangeCallback = null;
            }
        }, {
            key: "forceUpdateComponentOwnerWithState",
            value: function forceUpdateComponentOwnerWithState(newState) {
                this.setState(babelHelpers.extends({}, newState));

                if (this.props.componentOwner && this.props.stateValueChangeCallback) {
                    this.props.stateValueChangeCallback(newState);
                }
            }
        }, {
            key: "_toggleNightLight",
            value: function _toggleNightLight(value, callback) {
                this.forceUpdateComponentOwnerWithState({
                    enableNightLight: value
                });
                this.setState({
                    hasSetEnableNightLight: true
                });
                this.updateListView();
                Api.setNightTimeEnable(value, function (isSuceess, response) {
                    if (callback) {} else {
                        if (isSuceess) {
                            if (value) {
                                YLUI.showFinishTips(strings.common_nightlight_open_success);
                            } else {
                                YLUI.showFinishTips(strings.common_nightlight_close_success);
                            }
                        } else {
                            YLUI.showFailTips(strings.common_nightlight_operate_failure_ios);
                        }
                    }
                });
            }
        }, {
            key: "_getCron",
            value: function _getCron() {
                var _this6 = this;

                Api.getCron(function (s, r) {
                    var on = false;
                    var shouldSetRemainning = false;
                    var remaingningToBeSet = 0;

                    if (s && r && Array.isArray(r.result) && r.result.length >= 1) {
                        var remainning = parseInt(r.result[0].delay);

                        if (!isNaN(remainning) && _this6.state.remainningDelayTime != remainning && remainning > 0) {
                            remaingningToBeSet = remainning;
                            shouldSetRemainning = true;
                        } else {}

                        on = remainning > 0;
                    } else {
                        if (_this6.state.remainningDelayTime != 0) {
                            remaingningToBeSet = 0;
                            shouldSetRemainning = true;
                        }
                    }

                    if (shouldSetRemainning) {
                        _this6.forceUpdateComponentOwnerWithState({
                            delayTimer: on,
                            remainningDelayTime: remaingningToBeSet
                        });

                        _this6.refreshDataSource();
                    } else {
                        _this6.forceUpdateComponentOwnerWithState({
                            delayTimer: on
                        });

                        _this6.refreshDataSource();
                    }
                });
            }
        }, {
            key: "refreshDataSource",
            value: function refreshDataSource() {
                var _this7 = this;

                setTimeout(function () {
                    _this7.forceUpdateComponentOwnerWithState({
                        dataSource: _this7.getDataSource()
                    });
                });
            }
        }, {
            key: "_getNightTime",
            value: function _getNightTime() {
                var _this8 = this;

                Api.getNightTime(function (response, nightTimeReturn) {
                    if (response) {
                        var nightTimeReturnArray = nightTimeReturn.result[0].split('|');

                        if (nightTimeReturnArray.length >= 3) {
                            var nightTimeEnableStr = nightTimeReturnArray[0];
                            var nightTimeEnableBool;

                            if (_this8.state.hasSetEnableNightLight) {
                                nightTimeEnableBool = _this8.state.enableNightLight;
                            } else {
                                if (nightTimeEnableStr == 'enable') {
                                    nightTimeEnableBool = true;
                                } else {
                                    nightTimeEnableBool = false;
                                }
                            }

                            var beginTimeTmp = parseInt(nightTimeReturnArray[1]);
                            var endTimeTmp = parseInt(nightTimeReturnArray[2]);
                            var delayTurnOffTimeTmp = parseInt(nightTimeReturnArray[3]);

                            _this8.forceUpdateComponentOwnerWithState({
                                enableNightLight: nightTimeEnableBool,
                                nightlightBeginTime: _this8._getTimeFromData(beginTimeTmp),
                                nightlightEndTime: _this8._getTimeFromData(endTimeTmp),
                                nightlightDelayTime: delayTurnOffTimeTmp,
                                enableDelayTurnOffTime: delayTurnOffTimeTmp > 0
                            });

                            _this8.updateListView();
                        }
                    }
                });
            }
        }, {
            key: "_getSmartSwitchStatus",
            value: function _getSmartSwitchStatus() {
                var _this9 = this;

                Api.getSmartSwitchStatus(function (response, smartSwitchReturn) {
                    if (response && Array.isArray(smartSwitchReturn.result)) {
                        var isOn = false;

                        if (smartSwitchReturn.result[0] == 1) {
                            isOn = true;
                        }

                        _this9.state.enableSmartSwitch = isOn;

                        _this9.forceUpdateComponentOwnerWithState({
                            enableSmartSwitch: isOn
                        });

                        _this9.updateListView();
                    } else {
                        setTimeout(function () {
                            return _this9._getSmartSwitchStatus();
                        }, 1000);
                    }
                });
            }
        }, {
            key: "_toggleSmartSwitchStatus",
            value: function _toggleSmartSwitchStatus(value, callback) {
                this.forceUpdateComponentOwnerWithState({
                    enableSmartSwitch: value
                });
                this.setState({
                    hasSetEnableSmartSwitch: true
                });
                this.updateListView();
                Api.setSmartSwitchEnable(value, function (isSuceess, response) {
                    if (callback) {} else {
                        if (isSuceess) {
                            if (value) {
                                YLUI.showFinishTips(strings.common_settings_seesaw_switch_opened);
                            } else {
                                YLUI.showFinishTips(strings.common_settings_seesaw_switch_offed);
                            }
                        } else {
                            YLUI.showFailTips(strings.common_settings_seesaw_switch_failed);
                        }
                    }
                });
            }
        }, {
            key: "_getTimeFromData",
            value: function _getTimeFromData(data) {
                return Math.floor(data / 10000) * 60 + Math.floor(data / 100) % 100;
            }
        }, {
            key: "getHourFromTime",
            value: function getHourFromTime(time) {
                return Math.floor(time / 60);
            }
        }, {
            key: "getMinuteFromTime",
            value: function getMinuteFromTime(time) {
                return Math.floor(time % 60);
            }
        }, {
            key: "_formatTime",
            value: function _formatTime(time) {
                var hour = this.getHourFromTime(time);
                var minute = this.getMinuteFromTime(time);
                var hourStr = hour;
                var minuteStr = minute;

                if (hour < 10) {
                    hourStr = '0' + hour;
                }

                if (minute < 10) {
                    minuteStr = '0' + minute;
                }

                return hourStr + ":" + minuteStr;
            }
        }, {
            key: "nightlightTimeState",
            value: function nightlightTimeState() {
                if (this.state.enableDelayTurnOffTime) {
                    return strings.common_scene_open_delay_off;
                } else {
                    return strings.common_night_light_enable_ios;
                }
            }
        }, {
            key: "smartSwitchState",
            value: function smartSwitchState() {
                if (this.state.enableSmartSwitch) {
                    return strings.common_settings_seesaw_switch_status_on;
                } else {
                    return strings.common_settings_seesaw_switch_status_off;
                }
            }
        }, {
            key: "_toggleDelayTimerWithValue",
            value: function _toggleDelayTimerWithValue(v, callback) {
                this.forceUpdateComponentOwnerWithState({
                    delayTimer: v > 0,
                    remainningDelayTime: v
                });
                this.refreshDataSource();

                if (v) {
                    this._setCron(v, callback);
                } else {
                    this._cancelCron(callback);
                }
            }
        }, {
            key: "_toggleDelayTimer",
            value: function _toggleDelayTimer(isOn, callback) {
                this.forceUpdateComponentOwnerWithState({
                    delayTimer: isOn
                });
                this.readDelayTimerData();
                this.refreshDataSource();

                if (isOn) {
                    this._setCron(null, callback);
                } else {
                    this._cancelCron(callback);
                }
            }
        }, {
            key: "_setCron",
            value: function _setCron(value, callback) {
                var _this10 = this;

                if (value) {
                    this._callCron(parseInt(value), callback);
                } else {
                    LocalStorageManager.readDelayTimer(function (isSuccess, content) {
                        if (isSuccess && content) {
                            var num = parseInt(content);

                            if (!isNaN(num)) {
                                _this10._callCron(num, callback);

                                return;
                            }
                        }

                        _this10._callCron(15, callback);
                    });
                }
            }
        }, {
            key: "_callCron",
            value: function _callCron(delay, callback) {
                var _this11 = this;

                Api.addCron(delay, function (s, r) {
                    var isDone = false;

                    if (s && r && Array.isArray(r.result)) {
                        for (var i = 0; i < r.result.length; i++) {
                            var object = r.result[i];

                            if (object !== undefined && object == "ok") {
                                isDone = true;
                            } else {}
                        }
                    }

                    if (isDone) {
                        _this11.forceUpdateComponentOwnerWithState({
                            remainningDelayTime: delay
                        });

                        _this11.refreshDataSource();
                    } else {
                        _this11.forceUpdateComponentOwnerWithState({
                            delayTimer: false,
                            remainningDelayTime: 0
                        });

                        _this11.refreshDataSource();
                    }

                    if (isDone) {
                        YLUI.showFinishTips(strings.common_open_delay_off_off_info_singular.format(delay));
                    } else {
                        YLUI.showFailTips(strings.common_add_delay_off_fail);
                    }

                    if (callback) {
                        callback(isDone);
                    } else {}
                });
            }
        }, {
            key: "_cancelCron",
            value: function _cancelCron(callback) {
                var _this12 = this;

                Api.delCron(function (s, r) {
                    if (s && r && Array.isArray(r.result)) {
                        _this12.forceUpdateComponentOwnerWithState({
                            delayTimer: false
                        });

                        _this12.refreshDataSource();

                        YLUI.showFinishTips(strings.common_delay_off_canceled);

                        if (callback) {
                            callback(true);
                        } else {}
                    } else {
                        YLUI.showFailTips(strings.common_del_delay_off_fail);

                        if (callback) {
                            callback(false);
                        }
                    }
                });
            }
        }, {
            key: "_checkFirmwareVersion",
            value: function _checkFirmwareVersion() {
                var _this13 = this;

                var fw_version = null;
                YLDevice.firmwareVersion.then(function (fw_version) {
                    if (fw_version && fw_version.lastIndexOf("_") > -1) {
                        var v = fw_version.substr(fw_version.lastIndexOf("_") + 1);

                        if (parseInt(v) < 24) {
                            _this13.forceUpdateComponentOwnerWithState({
                                showCustomKnob: false
                            });

                            _this13.refreshDataSource();
                        }
                    }
                });
                YLSmartHome.checkVersion({
                    "pid": 0,
                    "did": YLDevice.deviceId
                }, function (response) {
                    if (response["message"] == "ok" && response["result"]) {
                        _this13.forceUpdateComponentOwnerWithState({
                            isFirmwareLatest: response["result"]["isLatest"]
                        });

                        _this13.refreshDataSource();
                    }
                });
            }
        }, {
            key: "requestData",
            value: function requestData() {
                if (this.shouldRequestNightTime() && this.checkSettingMenuExist(MenuIdentifiers.settingNightLight)) {
                    this._getNightTime();
                }

                if (this.checkSettingMenuExist(MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade)) {
                    this._checkFirmwareVersion();
                }

                if (this.checkSettingMenuExist(MenuIdentifiers.settingSmartSwitch)) {
                    this._getSmartSwitchStatus();
                }

                if (!this.isVirtualDevice() && this.checkSettingMenuExist(MenuIdentifiers.settingTime)) {
                    this._getCron();

                    this.timer = setInterval(function () {
                        this._getCron();
                    }.bind(this), 60000);
                }

                if (this.checkSettingMenuExist(MenuIdentifiers.settingMiband)) {
                    this.checkIsBindMiband();
                }
            }
        }, {
            key: "readData",
            value: function readData() {
                this.readDelayTimerData();
            }
        }, {
            key: "readDelayTimerData",
            value: function readDelayTimerData() {
                var _this14 = this;

                LocalStorageManager.readDelayTimer(function (isSuccess, content) {
                    if (isSuccess && content) {
                        var num = parseInt(content);

                        _this14.forceUpdateComponentOwnerWithState({
                            remainningDelayTime: num
                        });
                    }
                });
            }
        }, {
            key: "setState",
            value: function setState(value) {
                this.state = babelHelpers.extends({}, this.state, value);
            }
        }, {
            key: "checkIsBindMiband",
            value: function checkIsBindMiband(callback) {
                var _this15 = this;

                Api.getMibandList(function (response, returnValue) {
                    if (response) {
                        _this15.forceUpdateComponentOwnerWithState({
                            isBindMiband: returnValue.length > 0
                        });

                        if (callback) {
                            callback(returnValue.length > 0);
                        }
                    }
                });
            }
        }, {
            key: "addObserver",
            value: function addObserver() {
                var _this16 = this;

                this.subscription = _reactNative.DeviceEventEmitter.addListener("FetchMibandBindInfo", function (object) {
                    _this16.checkIsBindMiband();
                });
                this.gestureOn = _reactNative.DeviceEventEmitter.addListener("gestureOnChanged", function (event) {
                    _this16.forceUpdateComponentOwnerWithState({
                        enbaleGestureOn: event.getGestureOn
                    });

                    _this16.refreshDataSource();
                });
                this._deviceNameChangedListener = YLDeviceEvent.deviceNameChanged(function (event) {
                    _this16.forceUpdateComponentOwnerWithState({
                        deviceName: event.newName
                    });

                    DeviceModel.deviceName = event.newName;

                    _this16.refreshDataSource();
                });
                this._deviceCancelAuthorization = YLPackageEvent.packageAuthorizationCancel(function (event) {
                    Cloud.deleteUserStoreFiles();
                    Cloud.removeCurrentPrivacyTime();
                });
            }
        }, {
            key: "removeObserver",
            value: function removeObserver() {
                if (this.subscription) {
                    this.subscription.remove();
                }

                if (this.gestureOn) {
                    this.gestureOn.remove();
                }

                if (this._deviceNameChangedListener) {
                    this._deviceNameChangedListener.remove();
                }

                this._deviceCancelAuthorization && this._deviceCancelAuthorization.remove();
            }
        }, {
            key: "openTimerSettingPage",
            value: function openTimerSettingPage() {
                YLHostUI.openTimerSettingPage("set_power", "on", "set_power", "off");
            }
        }, {
            key: "version",
            value: function version() {
                var version = _Package2.default.version;

                if (!_Package2.default.hasOwnProperty('version') || undefined == _Package2.default.version) {
                    version = 0;
                }

                return strings.common_text_version + packageInfo.min_api_level + '_' + version;
            }
        }, {
            key: "getSettingFirstOptions",
            value: function getSettingFirstOptions() {
                var menuDatas = this.getCommonFunctionOptions();
                var returnValue = [];
                menuDatas && menuDatas.forEach(function (element) {
                    var option = SettingFirstOptionsKey[element.identifier];

                    if (option) {
                        returnValue.push(option);
                    }
                });
                return returnValue;
            }
        }, {
            key: "showDotArray",
            value: function showDotArray() {
                var menuDatas = this.getCommonFunctionOptions();
                var showDotArray = [];
                menuDatas && menuDatas.map(function (item) {
                    if (item.hasOwnProperty('haveNews') && item.haveNews()) {
                        showDotArray.push(SettingFirstOptionsKey[item.identifier]);
                    }
                });
                return showDotArray;
            }
        }, {
            key: "getSpecificFunctionOptions",
            value: function getSpecificFunctionOptions() {
                return this.getMenuDataByType()[0] || [];
            }
        }, {
            key: "getCommonFunctionOptions",
            value: function getCommonFunctionOptions() {
                return this.getMenuDataByType()[1] || [];
            }
        }, {
            key: "getSettingMenuFirstOptions",
            value: function getSettingMenuFirstOptions() {
                var isShareDevice = !YLDevice.isOwner;
                var firstOptions = this.getSettingFirstOptions();
                var realFirstOptions = [];
                firstOptions.forEach(function (element) {
                    realFirstOptions.push(CLFIRST_ALL_OPTIONS[element]);
                });

                if (isShareDevice) {
                    realFirstOptions = this.shardDeviceFirstOptions();
                }

                return realFirstOptions;
            }
        }, {
            key: "shardDeviceFirstOptions",
            value: function shardDeviceFirstOptions() {
                return [CLFIRST_ALL_OPTIONS.MORE, CLFIRST_ALL_OPTIONS.HELP];
            }
        }, {
            key: "getSettingMenuSecondOptions",
            value: function getSettingMenuSecondOptions() {
                var isShareDevice = !YLDevice.isOwner;

                if (isShareDevice) {
                    return this.shardDeviceSecondOptions();
                }

                return [CLSECOND_ALL_OPTIONS.SECURITY, CLSECOND_ALL_OPTIONS.FEEDBACK, CLSECOND_ALL_OPTIONS.TIMEZONE, CLSECOND_ALL_OPTIONS.ADD_TO_DESKTOP];
            }
        }, {
            key: "shardDeviceSecondOptions",
            value: function shardDeviceSecondOptions() {
                return [CLSECOND_ALL_OPTIONS.FEEDBACK, CLSECOND_ALL_OPTIONS.TIMEZONE, CLSECOND_ALL_OPTIONS.ADD_TO_DESKTOP];
            }
        }, {
            key: "getSettingMenuExtraOptions",
            value: function getSettingMenuExtraOptions() {
                var extraOptions = {
                    showUpgrade: true,
                    licenseUrl: ResourcesManager.getInstance().getLicenseSourceByUrl(Cloud.licenseURL()),
                    policyUrl: ResourcesManager.getInstance().getPolicySourceByUrl(Cloud.privacyURL()),
                    option: {
                        agreementURL: ResourcesManager.getInstance().getLicenseSourceByUrl(Cloud.licenseURL()),
                        privacyURL: ResourcesManager.getInstance().getPolicySourceByUrl(Cloud.privacyURL()),
                        experiencePlanURL: '',
                        hideAgreement: false,
                        hideUserExperiencePlan: true
                    }
                };
                return extraOptions;
            }
        }, {
            key: "getSettingMenuDotOptions",
            value: function getSettingMenuDotOptions() {
                var showDotArray = this.showDotArray();
                var realShowDotArray = [];
                showDotArray.forEach(function (element) {
                    realShowDotArray.push(CLFIRST_ALL_OPTIONS[element]);
                });
                return realShowDotArray;
            }
        }]);
        return BaseSettingMenuDataSource;
    }(BaseComponentDataSource);

    module.exports = BaseSettingMenuDataSource;
},11252,[10033,10056,10007,11255],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseSettingMenuDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = {
        "min_api_level": "10023",
        "package_name": "com.yeelight.wifi.color1",
        "models": "yeelink.light.color1|yeelink.light.color2|yeelink.light.color4|yeelink.light.strip1|yeelink.light.color6|yeelink.light.color8",
        "platform": "iphone",
        "developer_id": "147758983",
        "version": "4",
        "app_version": "1.9(830)"
    };
},11255,[],"projects/com.yeelight.wifi.color1/packageInfo.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var DeviceModel = CommonYeelightModules.DeviceModel,
      YLListViewType = CommonYeelightModules.YLListViewType,
      Api = CommonYeelightModules.Api,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      DeviceTypeEnum = CommonYeelightModules.DeviceTypeEnum,
      strings = CommonYeelightModules.strings,
      YLAccount = CommonYeelightModules.YLAccount,
      YLUI = CommonYeelightModules.YLUI,
      YLDevice = CommonYeelightModules.YLDevice;
  var InitPowerOption = DeviceTypeEnum.InitPowerOption;
  var YLListViewCellAccessoryType = YLListViewType.YLListViewCellAccessoryType;
  var BaseComponentDataSource = BaseYeelightModulesDataSource.BaseComponentDataSource;
  var DefaultLightItemIdentifiers = {
    OnFromPower: 'DefaultLightItemOnFromPower',
    AutomaticallySaveDefaultLight: 'DefaultLightItemAutomaticallySaveDefaultLight',
    AutomaticallySaveDefaultState: 'DefaultLightItemAutomaticallySaveDefaultState',
    SetDefaultLight: 'DefaultLightItemSetDefaultLight'
  };

  var BaseDefaultLightDataSource = function (_BaseComponentDataSou) {
    babelHelpers.inherits(BaseDefaultLightDataSource, _BaseComponentDataSou);

    function BaseDefaultLightDataSource(props) {
      babelHelpers.classCallCheck(this, BaseDefaultLightDataSource);

      var _this = babelHelpers.possibleConstructorReturn(this, (BaseDefaultLightDataSource.__proto__ || Object.getPrototypeOf(BaseDefaultLightDataSource)).call(this, props));

      _this.state = {
        userId: YLAccount.userId
      };
      _this.requestCount = 0;
      return _this;
    }

    babelHelpers.createClass(BaseDefaultLightDataSource, [{
      key: "getDataSource",
      value: function getDataSource() {}
    }, {
      key: "getDefaultTintColor",
      value: function getDefaultTintColor() {
        if (YLDevice.deviceModel == 'yeelink.light.lamp7') {
          return '#29335A';
        }

        return "#1dc58a";
      }
    }, {
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var items = {
          'DefaultLightItemOnFromPower': {
            name: strings.common_default_state_on_from_power,
            identifier: DefaultLightItemIdentifiers.OnFromPower,
            accessoryType: YLListViewCellAccessoryType.switch,
            isAccessorySwitchOn: function isAccessorySwitchOn() {
              return InitPowerOption.On == _this2.state.initPowerOption;
            },
            func: function func(value) {
              _this2._saveInitPowerOption(value);
            }
          },
          'DefaultLightItemAutomaticallySaveDefaultLight': {
            name: strings.common_default_state_recovery_break_light,
            identifier: DefaultLightItemIdentifiers.AutomaticallySaveDefaultLight,
            accessoryType: YLListViewCellAccessoryType.switch,
            isAccessorySwitchOn: function isAccessorySwitchOn() {
              return _this2.state.saveState;
            },
            func: function func(value) {
              _this2._toggleSaveState(value);
            }
          },
          'DefaultLightItemAutomaticallySaveDefaultState': {
            name: strings.common_default_state_save_last,
            identifier: DefaultLightItemIdentifiers.AutomaticallySaveDefaultState,
            accessoryType: YLListViewCellAccessoryType.switch,
            isAccessorySwitchOn: function isAccessorySwitchOn() {
              return _this2.state.saveState;
            },
            func: function func(value) {
              _this2._toggleSaveState(value);
            }
          },
          'DefaultLightItemSetDefaultLight': {
            name: strings.common_default_state_set_default_title,
            identifier: DefaultLightItemIdentifiers.SetDefaultLight,
            accessoryType: YLListViewCellAccessoryType.custom,
            func: function func() {
              _this2._saveDefaultLight();
            }
          }
        };
        return items;
      }
    }, {
      key: "getMenuDataDic",
      value: function getMenuDataDic() {
        var menuDataArray = this.getMenuDataArray();
        var returnDic = {};

        for (var index in menuDataArray) {
          returnDic[index] = menuDataArray[index];
        }

        return returnDic;
      }
    }, {
      key: "getMenuDataArray",
      value: function getMenuDataArray() {
        var returnArray = [];
        var items = this.getItems();
        var lightState = [];

        if (DeviceModel.supportInitPowerOption) {
          returnArray.push([items[DefaultLightItemIdentifiers.OnFromPower]]);
        }

        if (DeviceModel.supportAutoSaveLight) {
          if (DeviceModel.supportInitPowerOption) {
            lightState.push(items[DefaultLightItemIdentifiers.AutomaticallySaveDefaultLight]);
          } else {
            lightState.push(items[DefaultLightItemIdentifiers.AutomaticallySaveDefaultState]);
          }
        } else {}

        lightState.push(items[DefaultLightItemIdentifiers.SetDefaultLight]);
        returnArray.push(lightState);
        return returnArray;
      }
    }, {
      key: "requestData",
      value: function requestData() {
        var _this3 = this;

        Api.getPropsByProperties(['save_state', 'init_power_opt', 'power'], function (success, response) {
          response = response || {};

          if (success && Array.isArray(response.result) && response.result.length > 1) {
            var saveState = response.result[0] == 1;
            var initPowerOption = response.result[1] == InitPowerOption.On;
            var isOn = true;

            if (response.result[2] == "off") {
              isOn = false;
            }

            _this3.setState({
              saveState: saveState,
              initPowerOption: initPowerOption,
              isOn: isOn,
              isFinishFetchList: true
            });

            DeviceModel.isSaveLastState = saveState;
            DeviceModel.initPowerOption = initPowerOption;
          } else {
            _this3.requestCount++;

            if (_this3.requestCount <= 3) {
              setTimeout(function () {
                _this3.requestData();
              }, 500);
            } else {
              _this3.setState({
                isFinishFetchList: true
              });
            }
          }
        });
      }
    }, {
      key: "_getSaveState",
      value: function _getSaveState() {
        var _this4 = this;

        Api.getSaveState(function (s, r) {
          if (s && r && Array.isArray(r.result)) {
            var state = parseInt(r.result[0]) == 1 ? true : false;

            _this4.setState({
              save_state: state
            });
          } else {
            setTimeout(function () {
              _this4._getSaveState();
            }, 1000);
          }
        });
      }
    }, {
      key: "_saveDefaultLight",
      value: function _saveDefaultLight() {
        if (this.state.saveState) {
          return;
        }

        Api.setDefault(function (s, r) {
          if (s && r && Array.isArray(r.result)) {
            YLUI.showFinishTips(strings.common_text_save_success);
          } else {
            YLUI.showFailTips(strings.common_open_light_failed_tips_ios);
          }
        });
      }
    }, {
      key: "_toggleSaveState",
      value: function _toggleSaveState(value) {
        this.setState({
          saveState: value
        });
        Api.setSaveState(value, function (s, r) {});
      }
    }, {
      key: "_saveInitPowerOption",
      value: function _saveInitPowerOption(value) {
        this.setState({
          initPowerOption: value
        });
        Api.setDefaultLightInitPower(value, function (s, r) {});
      }
    }, {
      key: "refreshDataSource",
      value: function refreshDataSource() {
        this.forceUpdateComponentOwnerWithState({
          dataSource: this.getDataSource()
        });
      }
    }, {
      key: "forceUpdateKey",
      value: function forceUpdateKey() {
        return ["saveState", "init_power_opt"];
      }
    }], [{
      key: "getBackgroundImage",
      value: function getBackgroundImage() {
        return 'default_state.png';
      }
    }]);
    return BaseDefaultLightDataSource;
  }(BaseComponentDataSource);

  module.exports = BaseDefaultLightDataSource;
},11258,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseDefaultLightDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseMibandAttachedPageDataSource = function () {
    function BaseMibandAttachedPageDataSource() {
      babelHelpers.classCallCheck(this, BaseMibandAttachedPageDataSource);
    }

    babelHelpers.createClass(BaseMibandAttachedPageDataSource, [{
      key: "getControlLargeIcon",
      get: function get() {
        return 'miband_control_luna_large_icon.png';
      }
    }]);
    return BaseMibandAttachedPageDataSource;
  }();

  module.exports = BaseMibandAttachedPageDataSource;
},11261,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseMibandAttachedPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var Cloud = CommonYeelightModules.Cloud,
      strings = CommonYeelightModules.strings,
      Api = CommonYeelightModules.Api,
      HsvToRgb = CommonYeelightModules.HsvToRgb,
      LightGenerator = CommonYeelightModules.LightGenerator,
      Tools = CommonYeelightModules.Tools,
      SignedIntConverter = CommonYeelightModules.SignedIntConverter,
      LightMode = CommonYeelightModules.LightMode,
      DeviceModel = CommonYeelightModules.DeviceModel,
      LightDataType = CommonYeelightModules.LightDataType,
      CLAlert = CommonYeelightModules.CLAlert,
      YLDevice = CommonYeelightModules.YLDevice,
      YLAccount = CommonYeelightModules.YLAccount,
      YLUI = CommonYeelightModules.YLUI;
  var entryModeType = {
    normal: 'normal',
    customScene: 'customScene',
    doubleClickCustomLight: 'doubleClickCustomLight'
  };
  var RECOMEND_SCENES_MAP = {
    "-1": {
      title: "默认图片",
      imageName: "scene_default.jpg"
    },
    "0": {
      title: "25%亮度",
      imageName: "scene_bright25.jpg"
    },
    "1": {
      title: "50%亮度",
      imageName: "scene_bright50.jpg"
    },
    "2": {
      title: "75%亮度",
      imageName: "scene_bright75.jpg"
    },
    "4": {
      title: "早安唤醒",
      imageName: "scene_sunrise.jpg"
    },
    "5": {
      title: "日落助眠",
      imageName: "scene_sunset.jpg"
    },
    "6": {
      title: "夜灯模式",
      imageName: "scene_nightlight.jpg"
    },
    "7": {
      title: "烛光效果",
      imageName: "scene_candleflicker.jpg"
    },
    "8": {
      title: "闪烁提醒",
      imageName: "scene_flashnotification.jpg"
    },
    "10": {
      title: "浪漫燃情",
      imageName: "scene_romanticevening.jpg"
    },
    "11": {
      title: "节日聚餐",
      imageName: "scene_festivefeast.jpg"
    },
    "12": {
      title: "约会之夜",
      imageName: "scene_datenight.jpg"
    },
    "13": {
      title: "浪漫约会",
      imageName: "scene_romanticdate.jpg"
    },
    "14": {
      title: "高效工作",
      imageName: "scene_concentration.jpg"
    },
    "15": {
      title: "阅读模式",
      imageName: "scene_reading.jpg"
    },
    "17": {
      title: "阅读模式",
      imageName: "scene_reading_book.jpg"
    },
    "18": {
      title: "夜间阅读",
      imageName: "scene_nightreading.jpg"
    },
    "16": {
      title: "防蓝光",
      imageName: "scene_bluelightblocking.jpg"
    },
    "19": {
      title: "婴儿模式",
      imageName: "scene_babymode.jpg"
    },
    "20": {
      title: "美颜模式",
      imageName: "scene_dressing.jpg"
    },
    "21": {
      title: "生日聚会",
      imageName: "scene_birthday.jpg"
    },
    "24": {
      title: "休闲时光",
      imageName: "scene_teatime.jpg"
    },
    "25": {
      title: "温馨佳肴",
      imageName: "scene_dishes.jpg"
    },
    "26": {
      title: "家的温馨",
      imageName: "scene_cosyhome.jpg"
    },
    "27": {
      title: "电影之夜",
      imageName: "scene_movie.jpg"
    }
  };
  var getUserCollectionCallCount = 0;
  var getRecommendCallCount = 0;

  var BaseCollectionDataSource = function () {
    function BaseCollectionDataSource(props) {
      babelHelpers.classCallCheck(this, BaseCollectionDataSource);
      this.props = babelHelpers.extends({}, this.props, props);
      var entryMode = entryModeType.normal;

      if (this.props.hasOwnProperty('entryMode')) {
        entryMode = this.props.entryMode;
      }

      var brightness;

      if (this.props.hasOwnProperty('brightness')) {
        brightness = this.props.brightness;
      }

      var ct;

      if (this.props.hasOwnProperty('ct')) {
        ct = this.props.ct;
      }

      var mode;

      if (this.props.hasOwnProperty('mode')) {
        mode = this.props.mode;
      }

      var state;
      var deviceModel = YLDevice.deviceModel;

      if (this.props.deviceModel) {
        deviceModel = this.props.deviceModel;
      }

      var nl_br;

      if (this.props.hasOwnProperty('nl_br')) {
        nl_br = this.props.nl_br;
      }

      var lightMode;

      if (this.props.hasOwnProperty('lightMode')) {
        lightMode = this.props.lightMode;
      }

      getUserCollectionCallCount = 0;
      this.state = {
        userId: YLAccount.userId,
        brightness: brightness,
        ct: ct,
        mode: mode,
        entryMode: entryMode,
        collectionState: state,
        nl_br: nl_br,
        deviceModel: deviceModel,
        lightMode: lightMode
      };
    }

    babelHelpers.createClass(BaseCollectionDataSource, [{
      key: "requestData",
      value: function requestData() {}
    }, {
      key: "shouldShowAddCollectionButton",
      value: function shouldShowAddCollectionButton() {
        return true;
      }
    }, {
      key: "getRecommendSceneWithType",
      value: function getRecommendSceneWithType(type) {
        var defaultSceneItem = this.recommendSceneMap["-1"];
        var sceneItem = this.recommendSceneMap[String(type)] || defaultSceneItem;
        return sceneItem;
      }
    }, {
      key: "addUserCollection",
      value: function addUserCollection(value, callback) {
        var mode = 2;
        var ct = -1;
        var wrgb = -1;
        var flow = -1;

        if (this.lightMode == LightMode.ct) {
          mode = DeviceModel.isFixedColorTemperature ? 1 : 3;
          ct = this.ct;

          if (ct < 1) {
            ct = LightGenerator.value2CT(this.ct);
          }

          wrgb = -1;
        } else if (this.lightMode == LightMode.flow) {
          mode = 4;
          wrgb = -1;
          flow = this.cf;
        } else if (this.lightMode == LightMode.color) {
          mode = 2;
          wrgb = HsvToRgb.getRGB(this.hue, 1, 1);
          wrgb = Tools.rgb2wrgb(wrgb.r, wrgb.g, wrgb.b);
        } else if (this.lightMode == LightMode.nightlight) {
          mode = 6;
          ct = -1;
        } else if (this.lightMode == LightMode.none) {
          mode = 1;
          ct = 2700;
        }

        var callbackHooker = function callbackHooker(data) {
          if (!data) {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
            return;
          }

          if (data.code == 0) {
            YLUI.showFinishTips(strings.common_collection_added_success);
          } else if (data.code == -3) {
            YLUI.showFailTips(strings.common_collection_judgement_existed);
          } else {
            YLUI.showFailTips(strings.common_collection_network_error_ios);
          }

          if (callback) {
            callback(data);
          }
        };

        this._postCollection(value, mode, this.currentBrightness(), ct, wrgb, flow, callbackHooker);
      }
    }, {
      key: "_postCollection",
      value: function _postCollection(title, mode, bright, ct, wrgb, flow, callback) {
        Cloud.addUserCollection(this.state.userId, title, mode, bright, ct, wrgb, flow, this.state.deviceModel, callback);
      }
    }, {
      key: "currentBrightness",
      value: function currentBrightness() {
        if (LightMode.nightlight == this.lightMode) {
          return this.nl_br;
        } else {
          return this.brightness;
        }
      }
    }, {
      key: "getUserCollection",
      value: function getUserCollection(value, callback) {
        if (this.GlobalUserCollectionScenes) {
          var scenes = this.GlobalUserCollectionScenes;

          if (scenes && scenes.length > 0) {
            if (callback) {
              callback(scenes);
            }
          }
        }

        this.requestUserCollection(value, callback);
      }
    }, {
      key: "requestUserCollection",
      value: function requestUserCollection(value, callback) {
        getUserCollectionCallCount++;

        if (3 == getUserCollectionCallCount) {
          getUserCollectionCallCount = 0;
          return;
        }

        var callbackHooker = function (data) {
          var _this = this;

          if ("customScene" != this.state.entryMode) {
            data = data.filter(function (item) {
              return item.device_model === _this.state.deviceModel;
            });
          }

          if (data) {
            if (callback) {
              callback(data);
            }

            getUserCollectionCallCount = 0;
            this.GlobalUserCollectionScenes = data;
          } else {
            this.requestUserCollection(this.state.userId, callback);
          }
        }.bind(this);

        Cloud.getUserCollection(this.state.userId, callbackHooker, this.state.deviceModel);
      }
    }, {
      key: "getRecommend",
      value: function getRecommend(value, callback) {
        if (this.GlobalUserRecommendsScenes) {
          var scenes = this.GlobalUserRecommendsScenes;

          if (scenes && scenes.length > 0) {
            if (callback) {
              callback(scenes);
            }
          }
        }

        this.requestRecommend(value, callback);
      }
    }, {
      key: "requestRecommend",
      value: function requestRecommend(value, callback) {
        getRecommendCallCount++;

        if (3 == getRecommendCallCount) {
          getRecommendCallCount = 0;
          return;
        }

        var callbackHooker = function (data) {
          console.log('collectionlist: ');
          console.log(data);

          if (data && data.code == 1 && data.scenes) {
            if (callback) {
              callback(data.scenes);
            }

            getRecommendCallCount = 0;
            this.GlobalUserRecommendsScenes = data.scenes;
          } else {
            this.requestRecommend(this.state.userId, callback);
          }
        }.bind(this);

        Cloud.getRecommend(this.state.userId, 1, callbackHooker, this.requestRecommendBySpecifiedModel() ? this.state.deviceModel : YLDevice.deviceModel);
      }
    }, {
      key: "requestRecommendBySpecifiedModel",
      value: function requestRecommendBySpecifiedModel() {
        return true;
      }
    }, {
      key: "selectRecommend",
      value: function selectRecommend(s) {
        if (entryModeType.customScene == this.state.entryMode) {
          this._showSceneSelectTip(s);
        } else if (entryModeType.doubleClickCustomLight == this.state.entryMode) {
          this._showConfrim(s);
        } else {
          this._applyRecommend(s);
        }
      }
    }, {
      key: "stateProcessor",
      value: function stateProcessor() {
        var _this2 = this;

        return {
          mode: function mode(value) {
            var mode = parseInt(value);
            var lightMode;

            if (mode == LightDataType.color) {
              lightMode = LightMode.color;
            } else if (mode == LightDataType.colorTemperature2) {
              lightMode = LightMode.ct;
            } else if (mode == LightDataType.flow || mode == LightDataType.complexColorFlow || LightDataType.colorTemperatureFlow == mode || LightDataType.brightnessFlow == mode) {
              lightMode = LightMode.flow;
            } else if (mode == LightDataType.colorTemperature1) {
              lightMode = LightMode.ct;
            }

            return {
              "mode": mode,
              "lightMode": lightMode
            };
          },
          bright: function bright(value) {
            return {
              "brightness": parseInt(value)
            };
          },
          ct: function ct(value) {
            return {
              "ct": parseInt(value)
            };
          },
          wrgb: function wrgb(value) {
            var wrgb = parseInt(value);

            var hue = _this2.getHueFromWrgb(wrgb);

            return {
              "hue": hue
            };
          },
          cf: function cf(value) {
            return {
              "cf": value
            };
          }
        };
      }
    }, {
      key: "handleDeviceUpdate",
      value: function handleDeviceUpdate(result) {
        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.stateProcessor()[key];

            if (processor) {
              var value = processor(item);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        this.setState(updateValue);
      }
    }, {
      key: "addObserver",
      value: function addObserver() {
        var _this3 = this;

        this.subscription = _reactNative.DeviceEventEmitter.addListener("get_status", function (object) {
          _this3.handleParseGetStatus(object);
        });
      }
    }, {
      key: "statusProcessor",
      value: function statusProcessor() {
        var _this4 = this;

        return {
          lampOn: function lampOn(value) {
            return {
              "lampOn": value
            };
          },
          ct: function ct(value) {
            return {
              "ct": LightGenerator.CT2Value(value, _this4.isRight)
            };
          },
          bright: function bright(value) {
            return {
              "brightness": value
            };
          },
          flow_params: function flow_params(value) {
            var flowString = '';

            if (value) {
              flowString = JSON.stringify(value);
            }

            var flowPartString = '[]';
            var flow = '';

            if (flowString && flowString.length > 5) {
              flowPartString = flowString.substring(5);

              if (flowPartString) {
                flow = '[' + JSON.stringify('cf') + ',0,0,' + '\"' + flowPartString + ']';
              }
            }

            return {
              "cf": flow
            };
          },
          nl_br: function nl_br(value) {
            var nl_br = _this4.nl_br;

            if (value && value > 0) {
              nl_br = value;
            }

            return {
              "nl_br": nl_br
            };
          },
          rgb: function rgb(value, object) {
            var hue = Tools.getHue(value);

            if (object.color_mode == 3) {
              hue = object.hue / 360.0;
            }

            return {
              "hue": hue
            };
          },
          flowing: function flowing(value) {
            return {
              "flowing": value
            };
          },
          common: function common(object) {
            var returnValue = {};

            if (object.hasOwnProperty('color_mode')) {
              var color_mode = object.color_mode;
              var flowing = _this4.state.flowing;

              if (object.hasOwnProperty('flowing')) {
                flowing = object.flowing;
              }

              var _nl_br = _this4.state.nl_br;

              if (object.hasOwnProperty('nl_br')) {
                _nl_br = object.nl_br;
              }

              returnValue = {
                "lightMode": LightMode.modeCheck(color_mode, flowing, _nl_br)
              };
            }

            return returnValue;
          }
        };
      }
    }, {
      key: "handleParseGetStatus",
      value: function handleParseGetStatus(result) {
        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.statusProcessor()[key];

            if (processor) {
              var value = processor(item);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        if (this.statusProcessor().common) {
          var _value = this.statusProcessor().common(result);

          updateValue = babelHelpers.extends({}, updateValue, _value);
        }

        this.setState(updateValue);
      }
    }, {
      key: "removeObserver",
      value: function removeObserver() {
        if (this.subscription) {
          this.subscription.remove();
        }
      }
    }, {
      key: "_showConfrim",
      value: function _showConfrim(s) {
        var _this5 = this;

        if (this.state.kidsModeOn && s.color_temperature > 4000) {
          CLAlert.alert(strings.common_dialog_notice_title, strings.common_collection_knob_kidmode_msg.format(s.color_temperature.toString()), [{
            text: strings.common_dialog_cancel,
            onPress: function onPress() {}
          }, {
            text: strings.common_dialog_kidmode_disable_apply,
            onPress: function onPress() {
              Api.setKidsMode(false, function (success, response) {
                if (success && Array.isArray(response.result)) {
                  _this5._applyRecommend(s);

                  _this5.setState({
                    kidsModeOn: false
                  });
                } else {
                  YLUI.showFailTips(strings.common_collection_network_error_ios);
                }
              });
            }
          }]);
          return;
        }

        var des = strings.common_text_confirm_knob_custom.format(s.title);
        CLAlert.alert("", des, [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress() {
            _this5._applyRecommend(s);
          }
        }]);
      }
    }, {
      key: "_showSceneSelectTip",
      value: function _showSceneSelectTip(s) {
        CLAlert.alert("", strings.common_collection_select_message.format(s.title), [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress() {
            var nl_br = 0;

            if (s.night_bright > 0) {
              nl_br = s.night_bright;
            } else {
              nl_br = s.bright;
            }

            _reactNative.DeviceEventEmitter.emit("deviceUpdateFromCustomScene", {
              mode: s.mode,
              wrgb: s.wrgb,
              ct: s.color_temperature,
              bright: s.bright,
              cf: s.colorflow,
              set_scene: true,
              nl_br: nl_br,
              params: s.params,
              device_model: s.device_model
            });
          }
        }]);
      }
    }, {
      key: "_showDescription",
      value: function _showDescription(s) {
        var _this6 = this;

        CLAlert.alert(s.title, s.description, [{
          text: strings.common_dialog_cancel,
          onPress: function onPress() {}
        }, {
          text: strings.common_dialog_ok,
          onPress: function onPress() {
            _this6._applyRecommend(s);
          }
        }]);
      }
    }, {
      key: "_applyRecommend",
      value: function _applyRecommend(s) {
        if (entryModeType.customScene == this.state.entryMode) {
          _reactNative.DeviceEventEmitter.emit("deviceUpdateFromCustomScene", {
            mode: s.mode,
            wrgb: s.wrgb,
            ct: s.color_temperature,
            bright: s.bright,
            cf: s.colorflow,
            set_scene: true,
            nl_br: nl_br
          });
        } else if (entryModeType.doubleClickCustomLight == this.state.entryMode) {
          this.props.needUpdate({
            ct: s.color_temperature,
            bright: s.bright,
            name: s.title
          });
          this.props.navigation.pop();
        } else {
          YLUI.showFinishTips(strings.common_collection_apply_success);
          var nl_br = 0;

          if (s.params && s.params.length > 0) {
            var mode = s.mode;

            if (typeof s.params == "string") {
              s.params = JSON.parse(s.params);
            }

            s = babelHelpers.extends({}, s, s.params[0]);
            s.mode = mode;
          }

          if (6 == s.mode) {
            if (s.night_bright > 0) {
              nl_br = s.night_bright;
            } else {
              nl_br = s.bright;
            }
          }

          var sendValue = {
            set_scene: true
          };

          if (nl_br) {
            sendValue = babelHelpers.extends({}, sendValue, {
              nl_br: nl_br
            });
          }

          if (s.mode) {
            sendValue = babelHelpers.extends({}, sendValue, {
              mode: s.mode
            });
          }

          if (s.wrgb) {
            sendValue = babelHelpers.extends({}, sendValue, {
              wrgb: s.wrgb
            });
          }

          if (s.color_temperature) {
            sendValue = babelHelpers.extends({}, sendValue, {
              ct: s.color_temperature
            });
          }

          if (s.ct) {
            sendValue = babelHelpers.extends({}, sendValue, {
              ct: s.ct
            });
          }

          if (s.bright) {
            sendValue = babelHelpers.extends({}, sendValue, {
              bright: s.bright
            });
          }

          if (s.colorflow) {
            sendValue = babelHelpers.extends({}, sendValue, {
              cf: s.colorflow
            });
          }

          if (s.params && s.params.length > 0) {
            sendValue = babelHelpers.extends({}, sendValue, {
              params: s.params
            });
          }

          _reactNative.DeviceEventEmitter.emit("deviceUpdate", sendValue);
        }
      }
    }, {
      key: "setState",
      value: function setState(value) {
        this.state = babelHelpers.extends({}, this.state, value);
      }
    }, {
      key: "isInMainLight",
      value: function isInMainLight() {
        return YLDevice.deviceModel == this.state.deviceModel;
      }
    }, {
      key: "pageBackgroundColor",
      value: function pageBackgroundColor() {
        var brightness = this.getDisplayBrightness(this.state.brightness);
        var alpha = 1.0;

        if (6 == this.state.mode) {
          alpha = 0.5;
        } else {}

        var backgroundColor = HsvToRgb.getRGBAString(0.08, 1, brightness, alpha);
        return backgroundColor;
      }
    }, {
      key: "getHueFromWrgb",
      value: function getHueFromWrgb(wrgb) {
        return SignedIntConverter.getHueFromInt(wrgb);
      }
    }, {
      key: "getCircleRenderSaturationFromWrgb",
      value: function getCircleRenderSaturationFromWrgb(wrgb) {
        return Tools.getSaturationFromWrgb(wrgb);
      }
    }, {
      key: "_ct2Saturation",
      value: function _ct2Saturation(ct) {
        var maxCT = 6500;
        var minCT = 1700;

        if (DeviceModel.maxCT) {
          maxCT = DeviceModel.maxCT;
        }

        if (DeviceModel.minCT) {
          minCT = DeviceModel.minCT;
        }

        return 0.6 / (maxCT - minCT) * (maxCT - ct) + 0.4;
      }
    }, {
      key: "getDisplayBrightness",
      value: function getDisplayBrightness(brightness) {
        return 0.0055 * brightness + 0.4;
      }
    }, {
      key: "ct",
      get: function get() {
        return this.state.ct;
      }
    }, {
      key: "cf",
      get: function get() {
        return this.state.cf;
      }
    }, {
      key: "hue",
      get: function get() {
        return this.state.hue;
      }
    }, {
      key: "lightMode",
      get: function get() {
        return this.state.lightMode;
      }
    }, {
      key: "nl_br",
      get: function get() {
        return this.state.nl_br;
      }
    }, {
      key: "brightness",
      get: function get() {
        return this.state.brightness;
      }
    }, {
      key: "recommendSceneMap",
      get: function get() {
        return RECOMEND_SCENES_MAP;
      }
    }, {
      key: "GlobalUserCollectionScenes",
      get: function get() {
        if (!global.userCollectionsScenes) {
          global.userCollectionsScenes = {};
        }

        return global.userCollectionsScenes[this.state.deviceModel];
      },
      set: function set(scenes) {
        if (!global.userCollectionsScenes) {
          global.userCollectionsScenes = {};
        }

        global.userCollectionsScenes[this.state.deviceModel] = scenes;
      }
    }, {
      key: "GlobalUserRecommendsScenes",
      get: function get() {
        if (!global.userRecommendsScenes) {
          global.userRecommendsScenes = {};
        }

        return global.userRecommendsScenes[this.state.deviceModel];
      },
      set: function set(scenes) {
        if (!global.userRecommendsScenes) {
          global.userRecommendsScenes = {};
        }

        global.userRecommendsScenes[this.state.deviceModel] = scenes;
      }
    }]);
    return BaseCollectionDataSource;
  }();

  module.exports = BaseCollectionDataSource;
},11264,[10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseCollectionDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var MainPage = CommonYeelightModules.MainPage;

  var BaseMainIndexIOSDataSource = function () {
    function BaseMainIndexIOSDataSource() {
      babelHelpers.classCallCheck(this, BaseMainIndexIOSDataSource);
    }

    babelHelpers.createClass(BaseMainIndexIOSDataSource, [{
      key: "getMainPage",
      get: function get() {
        return MainPage;
      }
    }]);
    return BaseMainIndexIOSDataSource;
  }();

  module.exports = BaseMainIndexIOSDataSource;
},11267,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseMainIndexIOSDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _CameraRollColorPick = _require(_dependencyMap[0]);

  var _CameraRollColorPick2 = babelHelpers.interopRequireDefault(_CameraRollColorPick);

  var _reactNative = _require(_dependencyMap[1]);

  var CommonYeelightModules = _require(_dependencyMap[2]);

  var cameraRollColorPick = new _CameraRollColorPick2.default();
  var strings = CommonYeelightModules.strings,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      DeviceModel = CommonYeelightModules.DeviceModel,
      LightMode = CommonYeelightModules.LightMode,
      Api = CommonYeelightModules.Api,
      Cloud = CommonYeelightModules.Cloud,
      SettingMenu = CommonYeelightModules.SettingMenu,
      SettingMenuTypeEnum = CommonYeelightModules.SettingMenuTypeEnum,
      CollectionYeelight = CommonYeelightModules.CollectionYeelight,
      Tools = CommonYeelightModules.Tools,
      LocalStorageManager = CommonYeelightModules.LocalStorageManager,
      CLAlert = CommonYeelightModules.CLAlert,
      YLDevice = CommonYeelightModules.YLDevice,
      YLPackage = CommonYeelightModules.YLPackage,
      YLUI = CommonYeelightModules.YLUI,
      YLHostUI = CommonYeelightModules.YLHostUI,
      YLPackageEvent = CommonYeelightModules.YLPackageEvent,
      YLDeviceEvent = CommonYeelightModules.YLDeviceEvent,
      PluginInfo = CommonYeelightModules.PluginInfo,
      HomeKitManager = CommonYeelightModules.HomeKitManager;
  var BaseComponentDataSource = BaseYeelightModulesDataSource.BaseComponentDataSource;
  var cronState = {
    disable: 'disable',
    normal: 'normal',
    selected: 'selected'
  };

  var BaseMainPageDataSource = function (_BaseComponentDataSou) {
    babelHelpers.inherits(BaseMainPageDataSource, _BaseComponentDataSou);

    function BaseMainPageDataSource(props) {
      babelHelpers.classCallCheck(this, BaseMainPageDataSource);

      var _this = babelHelpers.possibleConstructorReturn(this, (BaseMainPageDataSource.__proto__ || Object.getPrototypeOf(BaseMainPageDataSource)).call(this, props));

      _this.props = babelHelpers.extends({}, props, _this.props);
      DeviceModel.isInMainLight = true;

      _this.setState({
        topSegmentedControlSelectedIndex: 0,
        deviceName: DeviceModel.deviceName,
        cron: cronState.normal,
        lampOn: false,
        brightness: 1,
        lightMode: LightMode.ct,
        ct: 4000,
        delayoff: 0
      });

      return _this;
    }

    babelHelpers.createClass(BaseMainPageDataSource, [{
      key: "topSegmentedControlTitles",
      value: function topSegmentedControlTitles() {
        return [];
      }
    }, {
      key: "tapTopSegmentedControlAtIndex",
      value: function tapTopSegmentedControlAtIndex(index) {}
    }, {
      key: "shouldShowTopSegmentedControl",
      value: function shouldShowTopSegmentedControl() {
        return false;
      }
    }, {
      key: "currentBrightness",
      value: function currentBrightness() {
        if (LightMode.nightlight == this.lightMode) {
          return this.nl_br;
        } else {
          return this.brightness;
        }
      }
    }, {
      key: "setState",
      value: function setState(value) {
        value = this.processWillChangeStateValue(value);
        var shouldUpdate = this.shouldForceUpdateOfValue(value);
        this.state = babelHelpers.extends({}, this.state, value);

        if (shouldUpdate) {
          _reactNative.DeviceEventEmitter.emit("forceUpdate", {});
        }

        this.stateValueDidChange(value);
      }
    }, {
      key: "processWillChangeStateValue",
      value: function processWillChangeStateValue(value) {
        return value;
      }
    }, {
      key: "shouldForceUpdateOfValue",
      value: function shouldForceUpdateOfValue(value) {
        var forceUpdateKeys = this.forceUpdateKeys();

        for (var index in forceUpdateKeys) {
          var key = forceUpdateKeys[index];

          if (value.hasOwnProperty(key)) {
            if (this.state[key] != value[key]) {
              return true;
            }
          }
        }

        return false;
      }
    }, {
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['topSegmentedControlSelectedIndex'];
      }
    }, {
      key: "initPluginServices",
      value: function initPluginServices() {
        var _this2 = this;

        Cloud.shouldShowCurrentPrivacy(function (shouldShow) {
          if (shouldShow) {
            _this2.showPrivacyDialog();
          } else {
            _this2.checkPluginShouldUpdateVersion();
          }
        });
      }
    }, {
      key: "showPrivacyDialog",
      value: function showPrivacyDialog() {
        var _this3 = this;

        YLHostUI.openPrivacyLicense(strings.common_msg_user_agreement, Cloud.licenseURL(), strings.common_msg_privacy_policy, Cloud.privacyURL(), function (result) {
          if (result == "ok") {
            Cloud.snapCurrentPrivacyTime();

            _this3.checkPluginShouldUpdateVersion();
          } else {}
        });
      }
    }, {
      key: "checkPluginShouldUpdateVersion",
      value: function checkPluginShouldUpdateVersion() {
        var _this4 = this;

        YLDevice.isOnline.then(function (isOnline) {
          if (isOnline) {
            _this4.checkShouldForceUpdateFirmware();
          } else {}
        });
      }
    }, {
      key: "addObserver",
      value: function addObserver() {
        var _this5 = this;

        this.statusCheckTimer = setTimeout(function () {
          return _this5._checkNetworking();
        }, 8000);
        this.rightButtonNotify = _reactNative.DeviceEventEmitter.addListener("pressSettingInMainPage", function (object) {
          _this5.gotoCommonSettingMenu();
        });
        this._deviceNameChangedListener = YLDeviceEvent.deviceNameChanged(function (event) {
          _this5.forceUpdateComponentOwnerWithState({
            deviceName: event.newName
          });

          DeviceModel.deviceName = event.newName;
        });
      }
    }, {
      key: "gotoCommonSettingMenu",
      value: function gotoCommonSettingMenu() {
        var _this6 = this;

        this.props.navigation.push(babelHelpers.extends({}, SettingMenu.route, {
          title: strings.common_text_setting,
          passProps: {
            settingMenuType: this.settingMenuTypeEnum,
            events: null,
            style: "dark"
          },
          rightButtonTitle: "",
          onRightButtonPress: function onRightButtonPress() {
            return _this6._rightBtnPressed("feedback");
          }
        }));
      }
    }, {
      key: "removeObserver",
      value: function removeObserver() {
        if (this._deviceNameChangedListener) {
          this._deviceNameChangedListener.remove();
        }
      }
    }, {
      key: "forceUpdateComponentOwnerWithState",
      value: function forceUpdateComponentOwnerWithState(newState) {
        this.setState(babelHelpers.extends({}, newState));

        if (this.props.componentOwner && this.props.stateValueChangeCallback) {
          this.props.stateValueChangeCallback(newState);
        }
      }
    }, {
      key: "stateValueDidChange",
      value: function stateValueDidChange(value) {}
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this7 = this;

        Api.setPowerOnAndChangeMode(mode, function (success, response) {
          if (success) {
            _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
              mode: mode
            });

            _this7.lampOnOrOffFadeAnimate();

            _this7.lampOn = true;
          }
        });
      }
    }, {
      key: "_switch2Mode",
      value: function _switch2Mode(mode) {
        var _this8 = this;

        this.lightMode = mode;

        if (this.lampOn) {
          _reactNative.DeviceEventEmitter.emit("changeMode", {
            mode: mode
          });
        } else {
          if (LightMode.flow == mode) {
            Api.setPower('on', function (success, response) {
              if (success) {
                _this8.lampOnOrOffFadeAnimate();

                _this8.lampOn = true;

                _reactNative.DeviceEventEmitter.emit("changeMode", {
                  mode: mode
                });
              }
            });
          } else {
            this._setPowerOnAndSwitch2Mode(mode);
          }
        }
      }
    }, {
      key: "_setLightMode",
      value: function _setLightMode(value) {
        this.lightMode = value;
      }
    }, {
      key: "_getCron",
      value: function _getCron(success, response) {
        if (success && response && Array.isArray(response.result) && response.result[0] && response.result[0].delay) {
          this._showCron(response.result[0].delay, false);
        } else {
          if (this.lampOn) {
            this.setState({
              cron: cronState.normal
            });
          } else {
            this.setState({
              cron: cronState.disable
            });
          }
        }
      }
    }, {
      key: "_showCron",
      value: function _showCron(delay, showFinishTips) {
        this.cronState = cronState.selected;

        if (showFinishTips) {
          YLUI.showFinishTips(strings.common_open_delay_off_off_info_singular.format(delay));
        }
      }
    }, {
      key: "propProcessor",
      value: function propProcessor() {
        var _this9 = this;

        return {
          color_mode: function color_mode(value) {
            var mode = _this9.state.mode;

            if (!isNaN(parseInt(value))) {
              mode = parseInt(value);
            }

            return {
              "mode": mode
            };
          },
          power: function power(value) {
            var isOn = value == 'on' ? true : false;
            var cron = isOn ? cronState.normal : cronState.disable;

            if (_this9.cronState == cronState.selected && isOn) {
              cron = cronState.selected;
            }

            return {
              "cron": cron,
              "lampOn": isOn
            };
          },
          ct: function ct(value) {
            var ct = _this9.state.ct;

            if (DeviceModel.isFixedColorTemperature && DeviceModel.fixedColorTemperature > 0) {
              ct = DeviceModel.fixedColorTemperature;
            } else {
              if (!isNaN(parseInt(value))) {
                ct = parseInt(value);
              }
            }

            return {
              "ct": ct
            };
          },
          bright: function bright(value) {
            var bright = _this9.state.brightness;

            if (!isNaN(parseInt(value))) {
              bright = parseInt(value);
            }

            return {
              "brightness": bright
            };
          },
          nl_br: function nl_br(value) {
            var nl_br = _this9.state.nl_br;

            if (!isNaN(parseInt(value))) {
              nl_br = parseInt(value);
            }

            return {
              "nl_br": nl_br
            };
          },
          delayoff: function delayoff(value, result) {
            var currentCronState = {};
            var delayoff = 0;
            var lampOn = _this9.lampOn;

            if (result && result.hasOwnProperty('power')) {
              lampOn = _this9.propProcessor()['power'](result['power']).lampOn;
            }

            if (!isNaN(parseInt(value))) {
              delayoff = parseInt(value);

              if (delayoff) {
                currentCronState = {
                  cron: cronState.selected
                };
              } else {
                if (lampOn) {
                  currentCronState = {
                    cron: cronState.normal
                  };
                } else {
                  currentCronState = {
                    cron: cronState.disable
                  };
                }
              }
            }

            return babelHelpers.extends({
              "delayoff": delayoff
            }, currentCronState);
          },
          common: function common(values) {
            var color_mode = _this9.state.mode;

            if (values.hasOwnProperty('color_mode')) {
              color_mode = _this9.propProcessor()['color_mode'](values['color_mode']).mode;
            }

            var nl_br = _this9.state.nl_br;

            if (values.hasOwnProperty('nl_br')) {
              nl_br = _this9.propProcessor()['nl_br'](values['nl_br']).nl_br;
            }

            var lightMode = LightMode.modeCheck(color_mode, false, nl_br);
            return {
              "lightMode": lightMode
            };
          }
        };
      }
    }, {
      key: "convertPropsToStatus",
      value: function convertPropsToStatus(props) {
        var status = {};
        var keysFilter = ["mode", "ct", "brightness", "nl_br", "lampOn", "lightMode"];

        for (var key in props) {
          if (props.hasOwnProperty(key) && keysFilter.includes(key)) {
            var element = props[key];

            if (key == 'brightness') {
              status.bright = element;
            } else if (key == 'mode') {
              status.color_mode = element;
            } else {
              status[key] = element;
            }
          }
        }

        return status;
      }
    }, {
      key: "_handleProps",
      value: function _handleProps(result) {
        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.propProcessor()[key];

            if (processor) {
              var value = processor(item, result);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        if (this.propProcessor().common) {
          var _value = this.propProcessor().common(result);

          updateValue = babelHelpers.extends({}, updateValue, _value);
        }

        this.setState(updateValue);
        this.lampOnOrOffFadeAnimate();

        _reactNative.DeviceEventEmitter.emit("get_status", this.convertPropsToStatus(updateValue));
      }
    }, {
      key: "specificColorTemperature",
      value: function specificColorTemperature() {
        var model = YLDevice.deviceModel;
        return DeviceModel.fixedColorTemperature;
      }
    }, {
      key: "lampOnOrOffFadeAnimate",
      value: function lampOnOrOffFadeAnimate() {
        _reactNative.DeviceEventEmitter.emit("lampOnOrOffFadeAnimate", {});
      }
    }, {
      key: "_dismissLoading",
      value: function _dismissLoading() {
        _reactNative.DeviceEventEmitter.emit("dismiss_loading", {});
      }
    }, {
      key: "_rightBtnPressed",
      value: function _rightBtnPressed(string) {
        this.eventEmitter.emit(string, {});
      }
    }, {
      key: "_getProps",
      value: function _getProps(success, response) {
        if (success && response && Array.isArray(response.result)) {
          var result = this.convertResultToObject(response.result, Api.getDevicePropKeys());

          this._handleProps(result);
        }

        this._dismissLoading();
      }
    }, {
      key: "convertResultToObject",
      value: function convertResultToObject(result, keys) {
        var returnObject = {};

        for (var index in result) {
          if (index >= keys.length) {
            continue;
          }

          var key = keys[index];

          if (result.hasOwnProperty(index)) {
            var element = result[index];
            returnObject[key] = element;
          }
        }

        return returnObject;
      }
    }, {
      key: "_registerProps",
      value: function _registerProps() {
        Api.registerDeviceStatusProps();
      }
    }, {
      key: "_listenDeviceUpdate",
      value: function _listenDeviceUpdate() {
        var _this10 = this;

        this.subscription = YLDeviceEvent.deviceReceivedMessages(Api.registeringDeviceStatusProps(), function (props) {
          _this10._handleProps(props);

          _this10._dismissLoading();
        });
      }
    }, {
      key: "_sendLightInfo",
      value: function _sendLightInfo() {
        var brightness = this.brightness;
        var ct = this.ct;
        var nl_br = 0;

        if (LightMode.nightlight == this.lightMode) {
          nl_br = this.state.nl_br;
          ct = 2700;
        } else {}

        var mode = 3;

        if (nl_br > 0) {
          mode = 6;
        } else {}

        _reactNative.DeviceEventEmitter.emit("deviceUpdate", {
          bright: brightness,
          ct: ct,
          mode: mode,
          nl_br: nl_br
        });
      }
    }, {
      key: "requestData",
      value: function requestData() {
        var _this11 = this;

        Api.getProps(function (isSuceess, response) {
          return _this11._getProps(isSuceess, response);
        });

        this._registerProps();

        this._listenDeviceUpdate();

        Cloud.getUserCollection(0, function () {});
        this.modeObserver = _reactNative.DeviceEventEmitter.addListener("changeModeFromRemotecontroller", function () {
          var modeToBeSet;

          if (LightMode.ct == _this11.lightMode) {
            modeToBeSet = LightMode.color;

            _this11._setPowerOnAndSwitch2Mode(LightMode.color);
          } else if (LightMode.color == _this11.lightMode) {
            modeToBeSet = LightMode.flow;

            _this11._setPowerOnAndSwitch2Mode(LightMode.flow);
          } else if (LightMode.flow == _this11.lightMode) {
            modeToBeSet = LightMode.ct;

            _this11._setPowerOnAndSwitch2Mode(LightMode.ct);
          }

          _this11.setState({
            lightMode: modeToBeSet
          });
        });
      }
    }, {
      key: "clearDataWhenUnmount",
      value: function clearDataWhenUnmount() {
        if (this.subscription) {
          this.subscription.remove();
        }

        if (this.rightButtonNotify) {
          this.rightButtonNotify.remove();
        }

        if (this._viewWillAppearListener) {
          this._viewWillAppearListener.remove();
        }

        this.feedbackCheckTimer && clearTimeout(this.feedbackCheckTimer);
        this.statusCheckTimer && clearTimeout(this.statusCheckTimer);
      }
    }, {
      key: "_setLightOn",
      value: function _setLightOn() {
        this.setState({
          lampOn: true
        });
        this.lampOnOrOffFadeAnimate();
      }
    }, {
      key: "_pushCollection",
      value: function _pushCollection() {
        this.props.navigation.push(babelHelpers.extends({
          title: strings.common_collection_favorites
        }, this.CollectionPage.route, {
          passProps: {
            brightness: this.brightness,
            ct: this.ct,
            mode: 2,
            lampOn: this.lampOn,
            deviceModel: this.deviceModel
          }
        }));
      }
    }, {
      key: "_checkNetworking",
      value: function _checkNetworking() {
        if (this.state.loading) {
          CLAlert.alert(strings.common_collection_network_error_ios, '', [{
            text: strings.common_dialog_ok,
            onPress: function onPress() {
              YLPackage.closeCurrentPage();
            }
          }]);
        }
      }
    }, {
      key: "checkShouldForceUpdateFirmware",
      value: function checkShouldForceUpdateFirmware() {
        var _this12 = this;

        Cloud.shouldBeForcedUpdateByCallback(function (isShould) {
          if (isShould) {
            YLDevice.firmwareNotCheckUpdate(true, function (success, message) {
              if (success) {}
            });

            _this12.props.navigation.pop();

            CLAlert.alert(strings.common_dialog_text_upgrade_firmware, null, [{
              text: strings.common_dialog_cancel,
              onPress: function onPress() {
                YLPackage.closeCurrentPage();
              }
            }, {
              text: strings.common_dialog_ok,
              onPress: function onPress() {
                YLHostUI.openDeviceUpgradePage();

                _this12.observeViewWillAppear();
              }
            }]);
          } else {
            HomeKitManager.shouldShowHomeKitTip(function (res) {
              if (res) {
                CLAlert.alert("", strings.common_home_kit_add_tip, [{
                  text: strings.common_dialog_ok,
                  onPress: function onPress() {
                    HomeKitManager.saveIsHadShowHomeKitTip(true);
                    YLDevice.firmwareNotCheckUpdate(false, function (success, message) {
                      if (success) {}
                    });
                  }
                }], {
                  cancelable: false
                });
              } else {
                YLDevice.firmwareNotCheckUpdate(false, function (success, message) {
                  if (success) {}
                });
              }
            });
          }
        });
      }
    }, {
      key: "observeViewWillAppear",
      value: function observeViewWillAppear() {
        if (!this._viewWillAppearListener) {
          this._viewWillAppearListener = YLPackageEvent.packageViewWillAppear(function (event) {
            YLPackage.closeCurrentPage();
          });
        }
      }
    }, {
      key: "_toggle",
      value: function _toggle() {
        var _this13 = this;

        if (this.isInMainLight()) {
          var isOn = this.lampOn ? 'off' : 'on';
          var cron = this.lampOn ? cronState.disable : cronState.normal;
          Api.setPower(isOn, function (isSuceess, response) {
            if (isSuceess) {
              var isOn = _this13.lampOn ? 0 : 1;

              _this13.setDataSourceState({
                cron: cron
              });

              _this13.lampOn = !_this13.lampOn;

              _this13.lampOnOrOffFadeAnimate();
            }
          });
        } else {
          var isOn = this.lampOn ? 'off' : 'on';
          var cron = this.lampOn ? cronState.disable : cronState.normal;
          Api.setBgPower(isOn, function (isSuceess, response) {
            if (isSuceess) {
              _this13.setDataSourceState({
                cron: cron
              });

              _this13.lampOn = !_this13.lampOn;

              _this13.lampOnOrOffFadeAnimate();
            }
          });
        }
      }
    }, {
      key: "_handleDelayTimer",
      value: function _handleDelayTimer() {
        if (this.getCronState() == cronState.disable) {
          return;
        }

        if (this.getCronState() == cronState.normal) {
          this.setCronState(cronState.selected);

          this._setCron();
        } else if (this.getCronState() == cronState.selected) {
          this.setCronState(cronState.normal);

          this._cancelCron();
        }
      }
    }, {
      key: "_setCron",
      value: function _setCron() {
        var _this14 = this;

        LocalStorageManager.readDelayTimer(function (isSuccess, content) {
          if (isSuccess && content) {
            var num = parseInt(content);

            if (!isNaN(num)) {
              _this14._callCron(num);

              return;
            }
          }

          _this14._callCron(15);
        });
      }
    }, {
      key: "_callCron",
      value: function _callCron(delay) {
        var _this15 = this;

        Api.addCron(delay, function (isSuceess, response) {
          if (isSuceess) {
            YLUI.showFinishTips(strings.common_open_delay_off_off_info_singular.format(delay));

            _this15._showCron(delay, true);
          } else {
            YLUI.showFailTips(strings.common_add_delay_off_fail);
          }
        });
      }
    }, {
      key: "setCronState",
      value: function setCronState(cronState) {
        this.cronState = cronState;
      }
    }, {
      key: "setDataSourceState",
      value: function setDataSourceState(state) {
        this.setState(state);
      }
    }, {
      key: "getCronState",
      value: function getCronState() {
        return this.cronState;
      }
    }, {
      key: "_cancelCron",
      value: function _cancelCron() {
        var _this16 = this;

        Api.delCron(function (isSuceess, response) {
          if (isSuceess) {
            _this16.setCronState(cronState.normal);

            YLUI.showFinishTips(strings.common_delay_off_canceled);
          } else {
            YLUI.showFailTips(strings.common_del_delay_off_fail);
          }
        });
      }
    }, {
      key: "_showNewFBreply",
      value: function _showNewFBreply() {}
    }, {
      key: "applyColorPick",
      value: function applyColorPick(result) {
        var _this17 = this;

        if (result != 'FinishColorPick') {
          this.setState({
            colorResult: result
          });
          var red = result["red"] * 255;
          var green = result["green"] * 255;
          var blue = result["blue"] * 255;
          var wrgb = Tools.rgb2wrgb(red, green, blue);

          _reactNative.DeviceEventEmitter.emit("deviceUpdate", {
            mode: 2,
            wrgb: wrgb
          });

          this._setRgb(wrgb, this.brightness);

          _reactNative.DeviceEventEmitter.emit("forceUpdate", {});

          cameraRollColorPick.resetColorPickCompletion(function (result) {
            _this17.applyColorPick(result);
          });
        }
      }
    }, {
      key: "_setRgb",
      value: function _setRgb(wrgb, brightness) {
        brightness = parseInt(brightness);
        var i = Tools.wrgb2Int(wrgb);
        Api.setScene("color", i, brightness, function () {});
      }
    }, {
      key: "colorPick",
      value: function colorPick() {
        var _this18 = this;

        this.setState({
          colorResult: {}
        });
        cameraRollColorPick.beginColorPickWithCompletion(function (result) {
          _this18.applyColorPick(result);
        });
      }
    }, {
      key: "colorTemperatureButtonName",
      value: function colorTemperatureButtonName() {
        return strings.common_view_button_container_whitelight;
      }
    }, {
      key: "isInMainLight",
      value: function isInMainLight() {
        return true;
      }
    }, {
      key: "deviceModel",
      get: function get() {
        return YLDevice.deviceModel;
      }
    }, {
      key: "topSegmentedControlSelectedIndex",
      get: function get() {
        if (null == this.state.topSegmentedControlSelectedIndex) {
          return 0;
        } else {
          return this.state.topSegmentedControlSelectedIndex;
        }
      },
      set: function set(value) {
        DeviceModel.isInMainLight = value == 0;
        this.setState({
          topSegmentedControlSelectedIndex: value
        });
      }
    }, {
      key: "cronState",
      set: function set(cronState) {
        this.setState({
          cron: cronState
        });
      },
      get: function get() {
        return this.state.cron;
      }
    }, {
      key: "lampOn",
      get: function get() {
        return this.state.lampOn;
      },
      set: function set(lampOn) {
        this.setState({
          lampOn: lampOn
        });
      }
    }, {
      key: "mainLampOn",
      get: function get() {
        return false;
      }
    }, {
      key: "backgroundLampOn",
      get: function get() {
        return false;
      }
    }, {
      key: "lightMode",
      get: function get() {
        return this.state.lightMode;
      },
      set: function set(lightMode) {
        this.setState({
          lightMode: lightMode
        });
      }
    }, {
      key: "brightness",
      get: function get() {
        return this.state.brightness;
      }
    }, {
      key: "nl_br",
      get: function get() {
        return this.state.nl_br;
      }
    }, {
      key: "ct",
      get: function get() {
        return this.state.ct;
      }
    }, {
      key: "mode",
      get: function get() {
        return this.state.mode;
      }
    }, {
      key: "delayoff",
      get: function get() {
        return this.state.delayoff;
      },
      set: function set(delayoff) {
        this.setState({
          delayoff: delayoff
        });
      }
    }, {
      key: "SettingMenu",
      get: function get() {
        return SettingMenu;
      }
    }, {
      key: "CollectionPage",
      get: function get() {
        return CollectionYeelight;
      }
    }, {
      key: "settingMenuTypeEnum",
      get: function get() {
        return SettingMenuTypeEnum.CommboType;
      }
    }, {
      key: "whiteButtonNormalImageName",
      get: function get() {
        return 'menu_ct_normal.png';
      }
    }, {
      key: "whiteButtonPressedImageName",
      get: function get() {
        return 'menu_ct_pressed.png';
      }
    }]);
    return BaseMainPageDataSource;
  }(BaseComponentDataSource);

  module.exports = BaseMainPageDataSource;
},11270,[11273,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseMainPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var RCTYLCameraRollColorPickManager = _reactNative.NativeModules.CameraRollColorPickManager;

  if (!RCTYLCameraRollColorPickManager) {
    RCTYLCameraRollColorPickManager = _reactNative.NativeModules.YLCameraRollColorPickManager;
  } else {
    RCTYLCameraRollColorPickManager = _reactNative.NativeModules.CameraRollColorPickManager;
  }

  var CameraRollColorPick = function () {
    function CameraRollColorPick() {
      babelHelpers.classCallCheck(this, CameraRollColorPick);
    }

    babelHelpers.createClass(CameraRollColorPick, [{
      key: "beginColorPickWithCompletion",
      value: function beginColorPickWithCompletion(completion) {
        RCTYLCameraRollColorPickManager.beginColorPickWithCompletion(completion);
      }
    }, {
      key: "resetColorPickCompletion",
      value: function resetColorPickCompletion(completion) {
        RCTYLCameraRollColorPickManager.resetColorPickCompletion(completion);
      }
    }, {
      key: "versionWithCompletion",
      value: function versionWithCompletion(completion) {
        RCTYLCameraRollColorPickManager.versionWithCompletion(completion);
      }
    }]);
    return CameraRollColorPick;
  }();

  module.exports = CameraRollColorPick;
},11273,[10033],"projects/com.yeelight.wifi.color1/CommonModules/CameraRollColorPick.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var BaseComponentDataSource = function () {
    function BaseComponentDataSource(props) {
      babelHelpers.classCallCheck(this, BaseComponentDataSource);
      this.props = babelHelpers.extends({}, props, this.props);
      this.state = {};
    }

    babelHelpers.createClass(BaseComponentDataSource, [{
      key: "setState",
      value: function setState(value) {
        if (this.shouldForceUpdateOfValue(value)) {
          _reactNative.DeviceEventEmitter.emit(this.forceUpdateKey(), {});
        }

        this.state = babelHelpers.extends({}, this.state, value);
        this.stateValueDidChange(value);
      }
    }, {
      key: "stateValueDidChange",
      value: function stateValueDidChange(value) {
        if (this.props.componentOwner && this.props.stateValueChangeCallback) {
          this.props.stateValueChangeCallback(value);
        }
      }
    }, {
      key: "shouldForceUpdateOfValue",
      value: function shouldForceUpdateOfValue(value) {
        var forceUpdateKeys = this.forceUpdateKeys();

        for (var index in forceUpdateKeys) {
          var key = forceUpdateKeys[index];

          if (value.hasOwnProperty(key)) {
            if (this.state[key] != value[key]) {
              return true;
            }
          }
        }

        return false;
      }
    }, {
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return [];
      }
    }, {
      key: "forceUpdateKey",
      value: function forceUpdateKey() {
        return "BaseComponentDataSource";
      }
    }]);
    return BaseComponentDataSource;
  }();

  module.exports = BaseComponentDataSource;
},11276,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseComponentDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _CommonYeelightModules = _require(_dependencyMap[0]);

  var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

  var PluginInfo = _CommonYeelightModules2.default.PluginInfo,
      YLDevice = _CommonYeelightModules2.default.YLDevice;
  var firmwareVersion = void 0;

  if (YLDevice && YLDevice.deviceExtra && YLDevice.deviceExtra.fw_version) {
    firmwareVersion = YLDevice.deviceExtra.fw_version;
  }

  var DevicesCapability = {
    SunriseSunset: "SunriseSunset"
  };

  var BaseDeviceModelDataSource = function () {
    function BaseDeviceModelDataSource() {
      babelHelpers.classCallCheck(this, BaseDeviceModelDataSource);
    }

    babelHelpers.createClass(BaseDeviceModelDataSource, [{
      key: "supportInitPowerOptionMinVersion",
      value: function supportInitPowerOptionMinVersion() {
        return this.pluginDeviceInfo.supportInitPowerOptionMinVersion || -1;
      }
    }, {
      key: "supportSunriseSunsetMinVersion",
      value: function supportSunriseSunsetMinVersion() {
        return this.pluginDeviceInfo.supportSunriseSunsetMinVersion || -1;
      }
    }, {
      key: "supportSmartSwitchMinVersion",
      value: function supportSmartSwitchMinVersion() {
        return this.pluginDeviceInfo.supportSmartSwitchMinVersion || -1;
      }
    }, {
      key: "supportDeviceCapability",
      value: function supportDeviceCapability(capability) {
        if (!this.pluginDeviceInfo.capability) {
          return false;
        } else {
          return this.pluginDeviceInfo.capability.includes(capability);
        }
      }
    }, {
      key: "maxCT",
      get: function get() {
        if (PluginInfo.maxCT) {
          return PluginInfo.maxCT;
        } else {
          return 6500;
        }
      }
    }, {
      key: "minCT",
      get: function get() {
        if (PluginInfo.minCT) {
          return PluginInfo.minCT;
        } else {
          return 2700;
        }
      }
    }, {
      key: "supportSmartSwitch",
      get: function get() {
        console.log("FW:" + this.YeelightFrimwareVersion + "Sup:" + this.supportSmartSwitchMinVersion());

        if (this.YeelightFrimwareVersion >= this.supportSmartSwitchMinVersion()) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "supportSunriseSunset",
      get: function get() {
        if (this.YeelightFrimwareVersion >= this.supportSunriseSunsetMinVersion() && this.supportDeviceCapability(DevicesCapability.SunriseSunset)) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "subModelCapability",
      get: function get() {
        return this.pluginSubModelInfo;
      }
    }, {
      key: "supportInitPowerOption",
      get: function get() {
        if (this.YeelightFrimwareVersion >= this.supportInitPowerOptionMinVersion()) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "supportAutoSaveLight",
      get: function get() {
        if (this.YeelightFrimwareVersion >= this.supportInitPowerOptionMinVersion()) {
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "supportSaveDefaultLight",
      get: function get() {
        var deviceInfo = PluginInfo.deviceJson || {};
        return deviceInfo.supportSaveDefaultLight == undefined ? true : deviceInfo.supportSaveDefaultLight;
      }
    }, {
      key: "YeelightFrimwareVersion",
      get: function get() {
        var fw_version = firmwareVersion;

        if (fw_version) {
          var partsOfVersion = fw_version.split('_');

          if (partsOfVersion.length > 1) {
            return parseInt(partsOfVersion[1]);
          }
        }

        return null;
      }
    }, {
      key: "isFixedColorTemperature",
      get: function get() {
        var deviceInfo = PluginInfo.deviceJson || {};
        return deviceInfo.isFixedColorTemperature || false;
      }
    }, {
      key: "fixedColorTemperature",
      get: function get() {
        var deviceInfo = PluginInfo.deviceJson || {};
        return deviceInfo.fixedColorTemperature || -1;
      }
    }, {
      key: "pluginDeviceInfo",
      get: function get() {
        return PluginInfo.deviceJson || {};
      }
    }, {
      key: "pluginSubModelInfo",
      get: function get() {
        return PluginInfo.subModelCapability || {};
      }
    }, {
      key: "isSupportBgLight",
      get: function get() {
        return false;
      }
    }, {
      key: "isMeshDevice",
      get: function get() {
        return false;
      }
    }]);
    return BaseDeviceModelDataSource;
  }();

  module.exports = BaseDeviceModelDataSource;
},11279,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseYeelightModulesDataSource/BaseDeviceModelDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseYeelightModulesDataSource = _require(_dependencyMap[0]);

  var mainIndexIOSDataSource;

  var ProductModulesDataSource = function (_BaseYeelightModulesD) {
    babelHelpers.inherits(ProductModulesDataSource, _BaseYeelightModulesD);

    function ProductModulesDataSource(props) {
      babelHelpers.classCallCheck(this, ProductModulesDataSource);
      return babelHelpers.possibleConstructorReturn(this, (ProductModulesDataSource.__proto__ || Object.getPrototypeOf(ProductModulesDataSource)).call(this, props));
    }

    babelHelpers.createClass(ProductModulesDataSource, [{
      key: "UserGuideDataSource",
      get: function get() {
        return _require(_dependencyMap[1]);
      }
    }, {
      key: "CTIndicatorDataSource",
      get: function get() {
        return _require(_dependencyMap[2]);
      }
    }, {
      key: "BrightnessIndicatorDataSource",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "LampOnDataSource",
      get: function get() {
        return _require(_dependencyMap[4]);
      }
    }, {
      key: "ApiDataSource",
      get: function get() {
        return _require(_dependencyMap[5]);
        ;
      }
    }, {
      key: "AppUUIDDataSource",
      get: function get() {
        return _require(_dependencyMap[6]);
      }
    }, {
      key: "AppVersionDataSource",
      get: function get() {
        return _require(_dependencyMap[7]);
      }
    }, {
      key: "SettingMenuDataSource",
      get: function get() {
        return _require(_dependencyMap[8]);
      }
    }, {
      key: "DefaultLightDataSource",
      get: function get() {
        return _require(_dependencyMap[9]);
      }
    }, {
      key: "MibandAttachedPageDataSource",
      get: function get() {
        return _require(_dependencyMap[10]);
      }
    }, {
      key: "CollectionDataSource",
      get: function get() {
        return _require(_dependencyMap[11]);
      }
    }, {
      key: "MainIndexIOSDataSource",
      get: function get() {
        console.log(' fuck you color light product modules base MainIndexIOSDataSource');

        if (!mainIndexIOSDataSource) {
          var MainIndexIOSDataSource = _require(_dependencyMap[12]);

          mainIndexIOSDataSource = new MainIndexIOSDataSource();
        }

        return mainIndexIOSDataSource;
      }
    }, {
      key: "MainPageDataSource",
      get: function get() {
        return _require(_dependencyMap[13]);
      }
    }, {
      key: "CommonSceneMainDataSource",
      get: function get() {
        return _require(_dependencyMap[14]);
      }
    }, {
      key: "DeviceModelDataSource",
      get: function get() {
        return _require(_dependencyMap[15]);
      }
    }, {
      key: "ComponentDataSource",
      get: function get() {
        return _require(_dependencyMap[16]);
      }
    }]);
    return ProductModulesDataSource;
  }(BaseYeelightModulesDataSource);

  module.exports = ProductModulesDataSource;
},11282,[11081,11285,11288,11291,11294,11297,11300,11303,11306,11309,11312,11315,11318,11321,11324,11327,11330],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/CommonYeelightModulesDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var UserGuideDataSource = {
    get guideImageTopOffset() {
      return 150;
    }

  };
  module.exports = UserGuideDataSource;
},11285,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/UserGuideDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Dimensions = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var CTIndicatorDataSource = {
    get offset() {
      return 30;
    },

    get pointStyle() {
      return {
        width: 12,
        height: 11,
        marginBottom: 0.5
      };
    },

    get indicatorImageStyle() {
      return {
        marginLeft: this.offset,
        width: width - this.offset * 2,
        height: 3
      };
    }

  };
  module.exports = CTIndicatorDataSource;
},11288,[10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/CTIndicatorDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BrightnessIndicatorDataSource = {
    get containerWidth() {
      return 280;
    },

    get containerIndicatorImageStyle() {
      return {
        transform: [{
          rotate: '90deg'
        }],
        marginTop: 10,
        marginBottom: 10,
        marginLeft: 5,
        marginRight: 5,
        width: 24,
        height: 24
      };
    }

  };
  module.exports = BrightnessIndicatorDataSource;
},11291,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/BrightnessIndicatorDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var CollectionYeelight = CommonYeelightModules.CollectionYeelight,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      LightMode = CommonYeelightModules.LightMode,
      LightGenerator = CommonYeelightModules.LightGenerator,
      Tools = CommonYeelightModules.Tools,
      Api = CommonYeelightModules.Api,
      Theme = CommonYeelightModules.Theme,
      YLDevice = CommonYeelightModules.YLDevice;
  var BaseLampOnDataSource = BaseYeelightModulesDataSource.BaseLampOnDataSource;

  var LampOnDataSource = function (_BaseLampOnDataSource) {
    babelHelpers.inherits(LampOnDataSource, _BaseLampOnDataSource);

    function LampOnDataSource(props) {
      babelHelpers.classCallCheck(this, LampOnDataSource);
      return babelHelpers.possibleConstructorReturn(this, (LampOnDataSource.__proto__ || Object.getPrototypeOf(LampOnDataSource)).call(this, props));
    }

    babelHelpers.createClass(LampOnDataSource, [{
      key: "getCollection",
      value: function getCollection() {
        return CollectionYeelight;
      }
    }, {
      key: "nightlightColorTemperature",
      value: function nightlightColorTemperature() {
        return 2700;
      }
    }, {
      key: "isFixedColorTemperature",
      value: function isFixedColorTemperature() {
        return false;
      }
    }, {
      key: "handleParseGetStatus",
      value: function handleParseGetStatus(object) {
        this.handleParseGetStatusNormal(object);
      }
    }, {
      key: "handleParseGetStatusNormal",
      value: function handleParseGetStatusNormal(object) {
        if (this.indicatorShowed || this.HoriIndicatorShowed) {
          return;
        }

        var lightMode = LightMode.modeCheck(object.color_mode, object.flowing, object.nl_br);
        var bright = object.bright;
        var lampOn = object.lampOn;

        if (lightMode == LightMode.flow) {
          var flowString = '';

          if (object.flow_params) {
            flowString = JSON.stringify(object.flow_params);
          }

          var flowPartString = '[]';
          var flow = '';
          var cf_duration = 1;
          var cf_brightness = 100;

          if (flowString && flowString.length > 5) {
            flowPartString = flowString.substring(5);
            var flowArray = flowString.split(",") || [];
            var duration = flowArray[2] || 1000;
            duration = parseInt(duration) / 1000;
            cf_duration = (12 - duration) / 11;
            cf_brightness = parseInt(flowArray[5] || 100);

            if (flowPartString) {
              flow = '[' + JSON.stringify('cf') + ',0,0,' + '\"' + flowPartString + ']';
            }
          }

          var stateToSet = {
            lightState: lightState,
            lightMode: lightMode,
            cf: flow,
            cf_brightness: cf_brightness,
            brightness: bright,
            lampOn: lampOn,
            cf_duration: cf_duration
          };
          var lightState = this.getLightStateFromValue(stateToSet);
          this.setState(babelHelpers.extends({}, stateToSet, {
            lightState: lightState
          }));
          return;
        }

        var ct;

        if (object.ct) {
          ct = LightGenerator.CT2Value(object.ct, this.isRight);
        }

        var hue = Tools.getHue(object.rgb);

        if (object.color_mode == 3) {
          hue = object.hue / 360.0;
        }

        var nl_br = this.nl_br;

        if (object.nl_br && object.nl_br > 0) {
          nl_br = object.nl_br;
        }

        var stateToSet = {
          lightState: lightState,
          lightMode: lightMode,
          ct: ct,
          hue: hue,
          brightness: bright,
          nl_br: nl_br,
          lampOn: lampOn
        };
        var lightState = this.getLightStateFromValue(stateToSet);
        this.setState(babelHelpers.extends({}, stateToSet, {
          lightState: lightState
        }));
      }
    }, {
      key: "getLightStateFromValue",
      value: function getLightStateFromValue(value) {
        if (value) {
          var lightState = '';

          if (LightMode.nightlight == value.lightMode) {
            lightState = strings.common_title_bar_brightness + ' ' + value.nl_br + '%';
          } else {
            lightState = strings.common_title_bar_brightness + ' ' + value.brightness + '%' + '   ' + strings.common_title_bar_ct + ' ' + Math.floor(LightGenerator.value2CT(value.ct)) + 'K';
          }

          return lightState;
        }
      }
    }, {
      key: "handleParseDeviceUpdate",
      value: function handleParseDeviceUpdate(object) {
        if (this.indicatorShowed || this.HoriIndicatorShowed) {
          return;
        }

        var v = this.ct ? this.ct : 4000;
        var mode = this.lightMode ? this.lightMode : LightMode.ct;
        var bright = this.brightness ? this.brightness : 100;

        if (mode === LightMode.flow) {
          bright = this.cf_brightness ? this.cf_brightness : 100;
        }

        var wrgb = object.wrgb;
        var nl_br = this.nl_br ? this.nl_br : 1;
        var ctValue = LightGenerator.CT2Value(object.ct, this.isRight);

        if (ctValue) {
          v = ctValue;
        }

        if (undefined == object.bright || object.bright <= 0) {
          bright = this.brightness;
        } else {
          bright = object.bright;
        }

        if (object.nl_br && object.nl_br > 0) {
          nl_br = object.nl_br;
        }

        var colorflow = object.cf;
        var hue = Tools.getHueFromWrgb(wrgb);

        if (1 == object.mode) {
          mode = LightMode.ct;

          if (object.set_scene) {
            this._setCt(4000, object.bright);
          }
        }

        if (3 == object.mode) {
          mode = LightMode.ct;

          if (object.set_scene) {
            this._setCt(object.ct, object.bright);
          }
        } else if (2 == object.mode) {
          mode = LightMode.color;
          this.colorCache = hue;

          if (object.set_scene) {
            this._setRgb(object.wrgb, object.bright);
          }
        } else if (4 == object.mode || 5 == object.mode || 7 == object.mode || 8 == object.mode) {
          mode = LightMode.flow;

          if (object.set_scene) {
            this._setCf(object.cf);
          }
        } else if (6 == object.mode) {
          mode = LightMode.nightlight;

          if (object.set_scene) {
            if (!isNaN(object.nl_br)) {
              this._setNightLight(object.nl_br);
            } else if (!isNaN(object.bright)) {
              this._setNightLight(object.bright);
            }
          }
        }

        var stateToSet = {
          ct: v,
          brightness: bright,
          cf_brightness: bright,
          hue: hue,
          cf: colorflow,
          lightMode: mode,
          nl_br: nl_br
        };
        var lightState = this.getLightStateFromValue(stateToSet);
        this.setState(babelHelpers.extends({}, stateToSet, {
          lightState: lightState
        }));
      }
    }, {
      key: "updateLightState",
      value: function updateLightState() {
        var lightState = this.getLightStateFromValue(this.state);
        this.setState({
          lightState: lightState
        });
      }
    }, {
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lightMode', 'ct', 'brightness', 'cf_brightness', 'nl_br', 'lightState'];
      }
    }, {
      key: "isInMainLight",
      value: function isInMainLight() {
        return YLDevice.deviceModel == this.state.deviceModel;
      }
    }, {
      key: "getValueFromStateByKey",
      value: function getValueFromStateByKey(key) {
        var realKey = this.getRealKeyByKey(key);
        return this.state[realKey];
      }
    }, {
      key: "setValueFromStateByKey",
      value: function setValueFromStateByKey(key, value) {
        var realKey = this.getRealKeyByKey(key);
        var dict = {};
        dict[realKey] = value;
        this.setState(dict);
      }
    }, {
      key: "touchPointImageName",
      value: function touchPointImageName() {
        return 'touch_dot.png';
      }
    }, {
      key: "touchPointImageSize",
      value: function touchPointImageSize() {
        return 150;
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this2 = this;

        if (this.isInMainLight()) {
          Api.setPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _this2.setAdaptorState({
                lampOn: true,
                lightMode: mode
              });
            }
          });
        } else {
          Api.setBgPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _this2.setAdaptorState({
                lampOn: true,
                lightMode: mode
              });
            }
          });
        }
      }
    }, {
      key: "_turnOnSunlight",
      value: function _turnOnSunlight() {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "_turnOnSunlight", this).call(this, this);
        } else {
          if (LightMode.ct == this.lightMode && this.lampOn) {
            return;
          } else {
            this._setLightMode(LightMode.ct);

            this._setPowerOnAndSwitch2Mode(LightMode.ct);
          }
        }
      }
    }, {
      key: "changeCTDirectly",
      value: function changeCTDirectly() {
        if (this.isInMainLight()) {
          LightGenerator.changeCTDirectly(this.ct);
        } else {
          LightGenerator.changeBgCTDirectly(this.ct);
        }
      }
    }, {
      key: "changeColorDirectly",
      value: function changeColorDirectly() {
        if (this.isInMainLight()) {
          LightGenerator.changeColorDirectly(this.colorCache);
        } else {
          LightGenerator.changeBgColorDirectly(this.colorCache);
        }
      }
    }, {
      key: "applyBrightness",
      value: function applyBrightness(brightness, forceChange) {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "applyBrightness", this).call(this, brightness, forceChange);
        } else {
          this.brightness = brightness;
          LightGenerator.changeBgBrightness(brightness, function () {}, forceChange);
        }
      }
    }, {
      key: "changeLight",
      value: function changeLight(value, callback, forceChange) {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "changeLight", this).call(this, value, callback, forceChange);
        } else {
          LightGenerator.changeBgLight(value, this.lightMode, callback, forceChange);
        }
      }
    }, {
      key: "turnOnCT",
      value: function turnOnCT() {
        this._turnOnSunlight();
      }
    }, {
      key: "hIndicatorViewStyles",
      get: function get() {
        return {
          position: 'absolute',
          top: 82 + Theme.APPBAR_MARGINTOP,
          backgroundColor: 'transparent'
        };
      }
    }, {
      key: "lightState",
      get: function get() {
        return this.state.lightState;
      }
    }]);
    return LampOnDataSource;
  }(BaseLampOnDataSource);

  module.exports = LampOnDataSource;
},11294,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/LampOnDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _BaseApiDataSource2 = _require(_dependencyMap[0]);

    var _BaseApiDataSource3 = babelHelpers.interopRequireDefault(_BaseApiDataSource2);

    var ApiDataSource = function (_BaseApiDataSource) {
        babelHelpers.inherits(ApiDataSource, _BaseApiDataSource);

        function ApiDataSource() {
            babelHelpers.classCallCheck(this, ApiDataSource);
            return babelHelpers.possibleConstructorReturn(this, (ApiDataSource.__proto__ || Object.getPrototypeOf(ApiDataSource)).call(this));
        }

        babelHelpers.createClass(ApiDataSource, [{
            key: "getPropsArray",
            value: function getPropsArray() {
                return ['color_mode', 'power', 'ct', 'bright', 'nl_br'];
            }
        }, {
            key: "registerPropsArray",
            value: function registerPropsArray() {
                return ["power", "bright", "ct", 'color_mode', "nl_br"];
            }
        }]);
        return ApiDataSource;
    }(_BaseApiDataSource3.default);

    module.exports = ApiDataSource;
},11297,[11087],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/ApiDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
		'use strict';

		var CommonYeelightModules = _require(_dependencyMap[0]);

		var YLDevice = CommonYeelightModules.YLDevice,
		    YLAccount = CommonYeelightModules.YLAccount;
		var AppUUIDDataSource = {
				get uuidFile() {
						return YLDevice.deviceModel + 'app_uuid.dat';
				},

				get uuid() {
						var time = new Date().getTime();
						var userid = YLAccount.userId;
						var deviceid = YLDevice.deviceId;
						var randomNum = Math.floor(Math.random() * 100000 + 1);
						var sault = "zxcv-bnma-sdfg-hjkl-qwert-yuiop";
						var possible = time.toString() + userid.toString() + randomNum.toString() + sault + deviceid.toString();
						var uuid = "";

						for (var i = 0; i < 18; i++) {
								uuid += possible.charAt(Math.floor(Math.random() * possible.length));
						}

						return uuid;
				}

		};
		module.exports = AppUUIDDataSource;
},11300,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/AppUUIDDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var AppVersionDataSource = {
    get appVersion() {
      var packageInfo = _require(_dependencyMap[0]);

      return packageInfo.app_version;
    }

  };
  module.exports = AppVersionDataSource;
},11303,[11255],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/AppVersionDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      MenuIdentifiers = CommonYeelightModules.MenuIdentifiers,
      SettingMenuTypeEnum = CommonYeelightModules.SettingMenuTypeEnum;
  var BaseSettingMenuDataSource = BaseYeelightModulesDataSource.BaseSettingMenuDataSource;

  var SettingMenuDataSource = function (_BaseSettingMenuDataS) {
    babelHelpers.inherits(SettingMenuDataSource, _BaseSettingMenuDataS);

    function SettingMenuDataSource(props) {
      babelHelpers.classCallCheck(this, SettingMenuDataSource);
      return babelHelpers.possibleConstructorReturn(this, (SettingMenuDataSource.__proto__ || Object.getPrototypeOf(SettingMenuDataSource)).call(this, props));
    }

    babelHelpers.createClass(SettingMenuDataSource, [{
      key: "specificMenuIdentifiersArray",
      value: function specificMenuIdentifiersArray() {
        return [MenuIdentifiers.settingTime, MenuIdentifiers.settingSchedules, MenuIdentifiers.settingNightLight, MenuIdentifiers.settingMiband, MenuIdentifiers.settingDefaultLight, MenuIdentifiers.settingRemoteControl];
      }
    }, {
      key: "commonMenuIdentifiersArray",
      value: function commonMenuIdentifiersArray() {
        var commonMenu = [MenuIdentifiers.miHomeSettingEditDeviceName, MenuIdentifiers.miHomeSettingShareDevice, MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade, MenuIdentifiers.miHomeSettingRoomManagement, MenuIdentifiers.miHomeSettingIftttAuto, MenuIdentifiers.miHomeSettingNewMore, MenuIdentifiers.miHomeSettingAddToDesktop, MenuIdentifiers.miHomeSettingOpenPrivacyAndLicense];

        if (SettingMenuTypeEnum.CommboType != this.props.settingMenuType) {
          commonMenu.push(MenuIdentifiers.miHomeSettingUnbindDevice);
        }

        return commonMenu;
      }
    }]);
    return SettingMenuDataSource;
  }(BaseSettingMenuDataSource);

  module.exports = SettingMenuDataSource;
},11306,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/SettingMenuDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var CommonYeelightModules = _require(_dependencyMap[0]);

    var packageInfo = _require(_dependencyMap[1]);

    var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
    var BaseDefaultLightDataSource = BaseYeelightModulesDataSource.BaseDefaultLightDataSource;

    var DefaultLightDataSource = function (_BaseDefaultLightData) {
        babelHelpers.inherits(DefaultLightDataSource, _BaseDefaultLightData);

        function DefaultLightDataSource(props) {
            babelHelpers.classCallCheck(this, DefaultLightDataSource);
            return babelHelpers.possibleConstructorReturn(this, (DefaultLightDataSource.__proto__ || Object.getPrototypeOf(DefaultLightDataSource)).call(this, props));
        }

        babelHelpers.createClass(DefaultLightDataSource, null, [{
            key: "getBackgroundImage",
            value: function getBackgroundImage() {
                return packageInfo.default_light_background_image;
            }
        }]);
        return DefaultLightDataSource;
    }(BaseDefaultLightDataSource);

    module.exports = DefaultLightDataSource;
},11309,[10007,10448],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/DefaultLightDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseYeelightModulesDataSource = _require(_dependencyMap[0]).BaseYeelightModulesDataSource;

  var packageInfo = _require(_dependencyMap[1]);

  var BaseMibandAttachedPageDataSource = BaseYeelightModulesDataSource.BaseMibandAttachedPageDataSource;

  var MibandAttachedPageDataSource = function (_BaseMibandAttachedPa) {
    babelHelpers.inherits(MibandAttachedPageDataSource, _BaseMibandAttachedPa);

    function MibandAttachedPageDataSource() {
      babelHelpers.classCallCheck(this, MibandAttachedPageDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MibandAttachedPageDataSource.__proto__ || Object.getPrototypeOf(MibandAttachedPageDataSource)).apply(this, arguments));
    }

    babelHelpers.createClass(MibandAttachedPageDataSource, [{
      key: "getControlLargeIcon",
      get: function get() {
        return packageInfo.miband_control_large_icon;
      }
    }]);
    return MibandAttachedPageDataSource;
  }(BaseMibandAttachedPageDataSource);

  module.exports = MibandAttachedPageDataSource;
},11312,[10007,10448],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/MibandAttachedPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseCollectionDataSource = BaseYeelightModulesDataSource.BaseCollectionDataSource;

  var CollectionDataSource = function (_BaseCollectionDataSo) {
    babelHelpers.inherits(CollectionDataSource, _BaseCollectionDataSo);

    function CollectionDataSource(props) {
      babelHelpers.classCallCheck(this, CollectionDataSource);
      return babelHelpers.possibleConstructorReturn(this, (CollectionDataSource.__proto__ || Object.getPrototypeOf(CollectionDataSource)).call(this, props));
    }

    return CollectionDataSource;
  }(BaseCollectionDataSource);

  module.exports = CollectionDataSource;
},11315,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/CollectionDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var MainPage = CommonYeelightModules.MainPage,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseMainIndexIOSDataSource = BaseYeelightModulesDataSource.BaseMainIndexIOSDataSource;

  var MainIndexIOSDataSource = function (_BaseMainIndexIOSData) {
    babelHelpers.inherits(MainIndexIOSDataSource, _BaseMainIndexIOSData);

    function MainIndexIOSDataSource(props) {
      babelHelpers.classCallCheck(this, MainIndexIOSDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MainIndexIOSDataSource.__proto__ || Object.getPrototypeOf(MainIndexIOSDataSource)).call(this, props));
    }

    babelHelpers.createClass(MainIndexIOSDataSource, [{
      key: "getMainPage",
      get: function get() {
        return MainPage;
      }
    }]);
    return MainIndexIOSDataSource;
  }(BaseMainIndexIOSDataSource);

  module.exports = MainIndexIOSDataSource;
},11318,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/MainIndexIOSDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var strings = CommonYeelightModules.strings,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      Api = CommonYeelightModules.Api,
      YLDevice = CommonYeelightModules.YLDevice;
  var BaseMainPageDataSource = BaseYeelightModulesDataSource.BaseMainPageDataSource;

  var MainPageDataSource = function (_BaseMainPageDataSour) {
    babelHelpers.inherits(MainPageDataSource, _BaseMainPageDataSour);

    function MainPageDataSource(props) {
      babelHelpers.classCallCheck(this, MainPageDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MainPageDataSource.__proto__ || Object.getPrototypeOf(MainPageDataSource)).call(this, props));
    }

    babelHelpers.createClass(MainPageDataSource, [{
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lampOn', 'lightMode'];
      }
    }, {
      key: "topSegmentedControlTitles",
      value: function topSegmentedControlTitles() {
        return [strings.common_main_page_text_segmente_main_light, strings.common_main_page_text_segment_ambilight];
      }
    }, {
      key: "tapTopSegmentedControlAtIndex",
      value: function tapTopSegmentedControlAtIndex(index) {
        if (0 == index) {} else {}
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this2 = this;

        if (this.isInMainLight()) {
          Api.setPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
                mode: mode
              });

              _this2.lampOnOrOffFadeAnimate();

              _this2.lampOn = true;
            }
          });
        } else {
          Api.setBgPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
                mode: mode
              });

              _this2.lampOnOrOffFadeAnimate();

              _this2.lampOn = true;
            }
          });
        }
      }
    }, {
      key: "deviceModel",
      get: function get() {
        return YLDevice.deviceModel;
      }
    }, {
      key: "whiteButtonNormalImageName",
      get: function get() {
        return 'menu_sunlight_normal.png';
      }
    }, {
      key: "whiteButtonPressedImageName",
      get: function get() {
        return 'menu_sunlight_pressed.png';
      }
    }]);
    return MainPageDataSource;
  }(BaseMainPageDataSource);

  module.exports = MainPageDataSource;
},11321,[10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/MainPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var CollectionYeelight = CommonYeelightModules.CollectionYeelight;
  var CommonSceneMainDataSource = {
    get getCollection() {
      return CollectionYeelight;
    }

  };
  module.exports = CommonSceneMainDataSource;
},11324,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/CommonSceneMainDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseDeviceModelDataSource = BaseYeelightModulesDataSource.BaseDeviceModelDataSource;

  var DeviceModelDataSource = function (_BaseDeviceModelDataS) {
    babelHelpers.inherits(DeviceModelDataSource, _BaseDeviceModelDataS);

    function DeviceModelDataSource(props) {
      babelHelpers.classCallCheck(this, DeviceModelDataSource);
      return babelHelpers.possibleConstructorReturn(this, (DeviceModelDataSource.__proto__ || Object.getPrototypeOf(DeviceModelDataSource)).call(this, props));
    }

    babelHelpers.createClass(DeviceModelDataSource, [{
      key: "supportInitPowerOptionMinVersion",
      value: function supportInitPowerOptionMinVersion() {
        return -1;
      }
    }, {
      key: "supportAutoSaveLight",
      get: function get() {
        return true;
      }
    }]);
    return DeviceModelDataSource;
  }(BaseDeviceModelDataSource);

  module.exports = DeviceModelDataSource;
},11327,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/DeviceModelDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _BaseComponentDataSource = _require(_dependencyMap[0]);

  var _BaseComponentDataSource2 = babelHelpers.interopRequireDefault(_BaseComponentDataSource);

  var CollectionDataSource = function (_BaseComponentDataSou) {
    babelHelpers.inherits(CollectionDataSource, _BaseComponentDataSou);

    function CollectionDataSource(props) {
      babelHelpers.classCallCheck(this, CollectionDataSource);
      return babelHelpers.possibleConstructorReturn(this, (CollectionDataSource.__proto__ || Object.getPrototypeOf(CollectionDataSource)).call(this, props));
    }

    return CollectionDataSource;
  }(_BaseComponentDataSource2.default);

  module.exports = ComponentDataSource;
},11330,[11276],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/CommonYeelightModulesDataSource/ComponentDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var React = _require(_dependencyMap[0]);

  var PropTypes = React.PropTypes,
      StyleSheet = React.StyleSheet,
      Text = React.Text,
      TouchableHighlight = React.TouchableHighlight,
      Component = React.Component,
      View = React.View,
      Image = React.Image;

  var MHPluginSDK = _require(_dependencyMap[1]).MHPluginSDK;

  var coalesceNonElementChildren = _require(_dependencyMap[2]);

  var systemButtonOpacity = 0.2;

  var Button = function (_Component) {
    babelHelpers.inherits(Button, _Component);

    function Button(props) {
      babelHelpers.classCallCheck(this, Button);

      var _this = babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

      _this.state = babelHelpers.extends({}, TouchableHighlight.propTypes, {
        disabled: PropTypes.bool,
        style: Text.propTypes.style,
        imageName: _this.props.imageNormal,
        imageWidth: 54,
        imageHeight: 54,
        titleSize: 14
      });
      return _this;
    }

    babelHelpers.createClass(Button, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.imageWidth > 0) {
          this.setState({
            imageWidth: this.props.imageWidth
          });
        }

        if (this.props.imageHeight > 0) {
          this.setState({
            imageHeight: this.props.imageHeight
          });
        }

        if (this.props.titleSize > 0) {
          this.setState({
            titleSize: this.props.titleSize
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {}
    }, {
      key: "render",
      value: function render() {
        var viewProps = {
          style: [styles.base, this.props.style]
        };
        var touchableProps = viewProps;
        var opacityValue = this.props.opacityValue;

        if (this.props.enabled == false) {
          touchableProps = {};
          opacityValue = 0.4;
        } else {
          var that = this;
          touchableProps.onPress = this.props.onPress;

          touchableProps.onPressIn = function () {
            if (that.props.imageHighlight != null) {
              that.setState({
                imageName: that.props.imageHighlight
              });
            }
          };

          touchableProps.onPressOut = function () {
            if (that.props.imageHighlight != null) {
              that.setState({
                imageName: that.props.imageNormal
              });
            }
          };

          touchableProps.onLongPress = this.props.onLongPress;
          opacityValue = 1.0;
        }

        if (this.props.title != null) {
          return React.createElement(
            View,
            viewProps,
            React.createElement(
              TouchableHighlight,
              babelHelpers.extends({}, touchableProps, {
                underlayColor: this.props.highlightColor ? this.props.highlightColor : "transparent",
                style: [{
                  opacity: opacityValue,
                  alignSelf: 'center'
                }]
              }),
              React.createElement(Image, {
                style: [styles.image, {
                  width: this.state.imageWidth,
                  height: this.state.imageHeight
                }],
                source: {
                  isStatic: !MHPluginSDK.devMode,
                  uri: MHPluginSDK.basePath + this.state.imageName
                }
              })
            ),
            React.createElement(
              Text,
              {
                style: [styles.text, {
                  fontSize: this.state.titleSize,
                  opacity: opacityValue
                }]
              },
              this.props.title
            )
          );
        } else {
          return React.createElement(
            TouchableHighlight,
            babelHelpers.extends({}, touchableProps, {
              underlayColor: this.props.highlightColor ? this.props.highlightColor : "transparent",
              style: [{
                opacity: opacityValue,
                alignSelf: 'center'
              }]
            }),
            React.createElement(
              Image,
              {
                style: [styles.image, {
                  width: this.state.imageWidth,
                  height: this.state.imageHeight
                }],
                source: {
                  isStatic: !MHPluginSDK.devMode,
                  uri: MHPluginSDK.basePath + this.state.imageName
                }
              },
              this._renderGroupedChildren()
            )
          );
        }
      }
    }, {
      key: "_renderGroupedChildren",
      value: function _renderGroupedChildren() {
        var _this2 = this;

        var buttonStateStyle = this.props.disabled ? styles.disabledText : null;
        var children = coalesceNonElementChildren(this.props.children, function (children, index) {
          return React.createElement(
            Text,
            {
              key: index,
              style: [styles.text, buttonStateStyle, _this2.props.style]
            },
            children
          );
        });

        switch (children.length) {
          case 0:
            return null;

          case 1:
            return children[0];

          default:
            return React.createElement(
              View,
              {
                style: styles.group
              },
              children
            );
        }
      }
    }]);
    return Button;
  }(Component);

  ;
  var styles = StyleSheet.create({
    text: {
      alignSelf: 'center',
      color: '#000000',
      marginTop: 13
    },
    disabledText: {
      color: '#dcdcdc'
    },
    group: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    image: {
      alignSelf: 'center',
      resizeMode: 'contain'
    }
  });
  module.exports = Button;
},11333,[10033,10042,11336],"projects/com.yeelight.wifi.color1/CommonModules/Button.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var React = _require(_dependencyMap[0]);

  function coalesceNonElementChildren(children, coalesceNodes) {
    var coalescedChildren = [];
    var contiguousNonElements = [];
    React.Children.forEach(children, function (child) {
      if (!React.isValidElement(child)) {
        contiguousNonElements.push(child);
        return;
      }

      if (contiguousNonElements.length) {
        var coalescedChild = coalesceNodes(contiguousNonElements, coalescedChildren.length);
        coalescedChildren.push(coalesceNodes(contiguousNonElements, coalescedChildren.length));
        contiguousNonElements = [];
      }

      coalescedChildren.push(child);
    });

    if (contiguousNonElements.length) {
      coalescedChildren.push(coalesceNodes(contiguousNonElements, coalescedChildren.length));
    }

    return coalescedChildren;
  }

  module.exports = coalesceNonElementChildren;
},11336,[10033],"projects/com.yeelight.wifi.color1/CommonModules/coalesceNonElementChildren.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var _CommonYeelightModules = _require(_dependencyMap[2]);

	var _viewPropTypes = _require(_dependencyMap[3]);

	var _viewPropTypes2 = babelHelpers.interopRequireDefault(_viewPropTypes);

	var _SwipeRow = _require(_dependencyMap[4]);

	var _SwipeRow2 = babelHelpers.interopRequireDefault(_SwipeRow);

	var SwipeListView = function (_Component) {
		babelHelpers.inherits(SwipeListView, _Component);

		function SwipeListView(props) {
			babelHelpers.classCallCheck(this, SwipeListView);

			var _this = babelHelpers.possibleConstructorReturn(this, (SwipeListView.__proto__ || Object.getPrototypeOf(SwipeListView)).call(this, props));

			_this._rows = {};
			_this.openCellId = null;
			return _this;
		}

		babelHelpers.createClass(SwipeListView, [{
			key: "setScrollEnabled",
			value: function setScrollEnabled(enable) {
				this._listView.setNativeProps({
					scrollEnabled: enable
				});
			}
		}, {
			key: "safeCloseOpenRow",
			value: function safeCloseOpenRow() {
				if (this._rows[this.openCellId]) {
					this._rows[this.openCellId].closeRow();
				}
			}
		}, {
			key: "rowSwipeGestureBegan",
			value: function rowSwipeGestureBegan(id) {
				if (this.props.closeOnRowBeginSwipe && this.openCellId && this.openCellId !== id) {
					this.safeCloseOpenRow();
				}

				if (this.props.swipeGestureBegan) {
					this.props.swipeGestureBegan(id);
				}
			}
		}, {
			key: "onRowOpen",
			value: function onRowOpen(secId, rowId, rowMap) {
				var cellIdentifier = "" + secId + rowId;

				if (this.openCellId && this.openCellId !== cellIdentifier) {
					this.safeCloseOpenRow();
				}

				this.openCellId = cellIdentifier;
				this.props.onRowOpen && this.props.onRowOpen(secId, rowId, rowMap);
			}
		}, {
			key: "onRowPress",
			value: function onRowPress(id) {
				if (this.openCellId) {
					if (this.props.closeOnRowPress) {
						this.safeCloseOpenRow();
						this.openCellId = null;
					}
				}
			}
		}, {
			key: "onScroll",
			value: function onScroll(e) {
				if (this.openCellId) {
					if (this.props.closeOnScroll) {
						this.safeCloseOpenRow();
						this.openCellId = null;
					}
				}

				this.props.onScroll && this.props.onScroll(e);
			}
		}, {
			key: "setRefs",
			value: function setRefs(ref) {
				this._listView = ref;
				this.props.listViewRef && this.props.listViewRef(ref);
			}
		}, {
			key: "renderRow",
			value: function renderRow(rowData, secId, rowId, rowMap) {
				var _this2 = this;

				var Component = this.props.renderRow(rowData, secId, rowId, rowMap);

				if (!this.props.renderHiddenRow) {
					return _react2.default.cloneElement(Component, babelHelpers.extends({}, Component.props, {
						ref: function ref(row) {
							return _this2._rows["" + secId + rowId] = row;
						},
						onRowOpen: function onRowOpen(_) {
							return _this2.onRowOpen(secId, rowId, _this2._rows);
						},
						onRowDidOpen: function onRowDidOpen(_) {
							return _this2.props.onRowDidOpen && _this2.props.onRowDidOpen(secId, rowId, _this2._rows);
						},
						onRowClose: function onRowClose(_) {
							return _this2.props.onRowClose && _this2.props.onRowClose(secId, rowId, _this2._rows);
						},
						onRowDidClose: function onRowDidClose(_) {
							return _this2.props.onRowDidClose && _this2.props.onRowDidClose(secId, rowId, _this2._rows);
						},
						onRowPress: function onRowPress(_) {
							return _this2.onRowPress("" + secId + rowId);
						},
						setScrollEnabled: function setScrollEnabled(enable) {
							return _this2.setScrollEnabled(enable);
						},
						swipeGestureBegan: function swipeGestureBegan(_) {
							return _this2.rowSwipeGestureBegan("" + secId + rowId);
						}
					}));
				} else {
					var previewRowId = this.props.dataSource && this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);
					return _react2.default.createElement(
						_SwipeRow2.default,
						{
							ref: function ref(row) {
								return _this2._rows["" + secId + rowId] = row;
							},
							swipeGestureBegan: function swipeGestureBegan(_) {
								return _this2.rowSwipeGestureBegan("" + secId + rowId);
							},
							onRowOpen: function onRowOpen(_) {
								return _this2.onRowOpen(secId, rowId, _this2._rows);
							},
							onRowDidOpen: function onRowDidOpen(_) {
								return _this2.props.onRowDidOpen && _this2.props.onRowDidOpen(secId, rowId, _this2._rows);
							},
							onRowClose: function onRowClose(_) {
								return _this2.props.onRowClose && _this2.props.onRowClose(secId, rowId, _this2._rows);
							},
							onRowDidClose: function onRowDidClose(_) {
								return _this2.props.onRowDidClose && _this2.props.onRowDidClose(secId, rowId, _this2._rows);
							},
							onRowPress: function onRowPress(_) {
								return _this2.onRowPress("" + secId + rowId);
							},
							setScrollEnabled: function setScrollEnabled(enable) {
								return _this2.setScrollEnabled(enable);
							},
							leftOpenValue: rowData.leftOpenValue || this.props.leftOpenValue,
							rightOpenValue: rowData.rightOpenValue || this.props.rightOpenValue,
							closeOnRowPress: rowData.closeOnRowPress || this.props.closeOnRowPress,
							disableLeftSwipe: rowData.disableLeftSwipe || this.props.disableLeftSwipe,
							disableRightSwipe: rowData.disableRightSwipe || this.props.disableRightSwipe,
							stopLeftSwipe: rowData.stopLeftSwipe || this.props.stopLeftSwipe,
							stopRightSwipe: rowData.stopRightSwipe || this.props.stopRightSwipe,
							recalculateHiddenLayout: this.props.recalculateHiddenLayout,
							style: this.props.swipeRowStyle,
							preview: (this.props.previewFirstRow || this.props.previewRowIndex) && rowId === previewRowId,
							previewDuration: this.props.previewDuration,
							previewOpenValue: this.props.previewOpenValue,
							tension: this.props.tension,
							friction: this.props.friction,
							directionalDistanceChangeThreshold: this.props.directionalDistanceChangeThreshold,
							swipeToOpenPercent: this.props.swipeToOpenPercent,
							swipeToOpenVelocityContribution: this.props.swipeToOpenVelocityContribution,
							swipeToClosePercent: this.props.swipeToClosePercent
						},
						this.props.renderHiddenRow(rowData, secId, rowId, this._rows),
						this.props.renderRow(rowData, secId, rowId, this._rows)
					);
				}
			}
		}, {
			key: "render",
			value: function render() {
				var _this3 = this;

				return _react2.default.createElement(_reactNative.ListView, babelHelpers.extends({}, this.props, {
					ref: function ref(c) {
						return _this3.setRefs(c);
					},
					onScroll: function onScroll(e) {
						return _this3.onScroll(e);
					},
					renderRow: function renderRow(rowData, secId, rowId) {
						return _this3.renderRow(rowData, secId, rowId, _this3._rows);
					}
				}));
			}
		}]);
		return SwipeListView;
	}(_react.Component);

	SwipeListView.defaultProps = {
		leftOpenValue: 0,
		rightOpenValue: 0,
		closeOnRowBeginSwipe: false,
		closeOnScroll: true,
		closeOnRowPress: true,
		disableLeftSwipe: false,
		disableRightSwipe: false,
		recalculateHiddenLayout: false,
		previewFirstRow: false,
		directionalDistanceChangeThreshold: 2,
		swipeToOpenPercent: 50,
		swipeToOpenVelocityContribution: 0,
		swipeToClosePercent: 50
	};
	exports.default = SwipeListView;
},11339,[10297,10033,10007,11342,11345],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SwipeListView/SwipeListView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0]);

  var StyleSheetPropType = _require(_dependencyMap[1]);

  var ViewStylePropTypes = _require(_dependencyMap[2]);

  var stylePropType = StyleSheetPropType(ViewStylePropTypes);
  var ViewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;
  ViewPropTypes = babelHelpers.extends({}, ViewPropTypes, {
    style: stylePropType
  });
  exports.default = ViewPropTypes;
},11342,[10033,10351,10354],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SwipeListView/viewPropTypes.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react = _require(_dependencyMap[0]);

	var _react2 = babelHelpers.interopRequireDefault(_react);

	var _reactNative = _require(_dependencyMap[1]);

	var _CommonYeelightModules = _require(_dependencyMap[2]);

	var _viewPropTypes = _require(_dependencyMap[3]);

	var _viewPropTypes2 = babelHelpers.interopRequireDefault(_viewPropTypes);

	var PREVIEW_OPEN_DELAY = 700;
	var PREVIEW_CLOSE_DELAY = 300;
	var MAX_VELOCITY_CONTRIBUTION = 5;
	var SCROLL_LOCK_MILLISECONDS = 300;

	var SwipeRow = function (_Component) {
		babelHelpers.inherits(SwipeRow, _Component);

		function SwipeRow(props) {
			babelHelpers.classCallCheck(this, SwipeRow);

			var _this = babelHelpers.possibleConstructorReturn(this, (SwipeRow.__proto__ || Object.getPrototypeOf(SwipeRow)).call(this, props));

			_this.ensureScrollEnabled = function () {
				if (!_this.parentScrollEnabled) {
					_this.parentScrollEnabled = true;
					_this.props.setScrollEnabled && _this.props.setScrollEnabled(true);
				}
			};

			_this.horizontalSwipeGestureBegan = false;
			_this.swipeInitialX = null;
			_this.parentScrollEnabled = true;
			_this.ranPreview = false;
			_this._ensureScrollEnabledTimer = null;
			_this.state = {
				dimensionsSet: false,
				hiddenHeight: 0,
				hiddenWidth: 0
			};
			_this._translateX = new _reactNative.Animated.Value(0);
			return _this;
		}

		babelHelpers.createClass(SwipeRow, [{
			key: "componentWillMount",
			value: function componentWillMount() {
				var _this2 = this;

				this._panResponder = _reactNative.PanResponder.create({
					onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gs) {
						return _this2.handleOnMoveShouldSetPanResponder(e, gs);
					},
					onPanResponderMove: function onPanResponderMove(e, gs) {
						return _this2.handlePanResponderMove(e, gs);
					},
					onPanResponderRelease: function onPanResponderRelease(e, gs) {
						return _this2.handlePanResponderEnd(e, gs);
					},
					onPanResponderTerminate: function onPanResponderTerminate(e, gs) {
						return _this2.handlePanResponderEnd(e, gs);
					},
					onShouldBlockNativeResponder: function onShouldBlockNativeResponder(_) {
						return false;
					}
				});
			}
		}, {
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				this._ensureScrollEnabledTimer && clearTimeout(this._ensureScrollEnabledTimer);
			}
		}, {
			key: "getPreviewAnimation",
			value: function getPreviewAnimation(toValue, delay) {
				return _reactNative.Animated.timing(this._translateX, {
					duration: this.props.previewDuration,
					toValue: toValue,
					delay: delay
				});
			}
		}, {
			key: "onContentLayout",
			value: function onContentLayout(e) {
				var _this3 = this;

				this.setState({
					dimensionsSet: !this.props.recalculateHiddenLayout,
					hiddenHeight: e.nativeEvent.layout.height,
					hiddenWidth: e.nativeEvent.layout.width
				});

				if (this.props.preview && !this.ranPreview) {
					this.ranPreview = true;
					var previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;
					this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(function (_) {
						_this3.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();
					});
				}
			}
		}, {
			key: "onRowPress",
			value: function onRowPress() {
				if (this.props.onRowPress) {
					this.props.onRowPress();
				} else {
					if (this.props.closeOnRowPress) {
						this.closeRow();
					}
				}
			}
		}, {
			key: "handleOnMoveShouldSetPanResponder",
			value: function handleOnMoveShouldSetPanResponder(e, gs) {
				var dx = gs.dx;
				return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;
			}
		}, {
			key: "handlePanResponderMove",
			value: function handlePanResponderMove(e, gestureState) {
				var dx = gestureState.dx,
				    dy = gestureState.dy;
				var absDx = Math.abs(dx);
				var absDy = Math.abs(dy);

				if (absDx > this.props.directionalDistanceChangeThreshold || absDy > this.props.directionalDistanceChangeThreshold) {
					if (absDy > absDx && !this.horizontalSwipeGestureBegan) {
						return;
					}

					if (this.parentScrollEnabled) {
						this.parentScrollEnabled = false;
						this.props.setScrollEnabled && this.props.setScrollEnabled(false);
					}

					if (this.swipeInitialX === null) {
						this.swipeInitialX = this._translateX._value;
					}

					if (!this.horizontalSwipeGestureBegan) {
						this.horizontalSwipeGestureBegan = true;
						this.props.swipeGestureBegan && this.props.swipeGestureBegan();
					}

					var newDX = this.swipeInitialX + dx;

					if (this.props.disableLeftSwipe && newDX < 0) {
						newDX = 0;
					}

					if (this.props.disableRightSwipe && newDX > 0) {
						newDX = 0;
					}

					if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {
						newDX = this.props.stopLeftSwipe;
					}

					if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {
						newDX = this.props.stopRightSwipe;
					}

					this._translateX.setValue(newDX);
				}
			}
		}, {
			key: "handlePanResponderEnd",
			value: function handlePanResponderEnd(e, gestureState) {
				var swipeToOpenVelocityContribution = this.props.swipeToOpenVelocityContribution;
				var possibleExtraPixels = this.props.rightOpenValue * swipeToOpenVelocityContribution;
				var clampedVelocity = Math.min(gestureState.vx, MAX_VELOCITY_CONTRIBUTION);
				var projectedExtraPixels = possibleExtraPixels * (clampedVelocity / MAX_VELOCITY_CONTRIBUTION);
				this._ensureScrollEnabledTimer = setTimeout(this.ensureScrollEnabled, SCROLL_LOCK_MILLISECONDS);
				var toValue = 0;

				if (this._translateX._value >= 0) {
					if (this.swipeInitialX < this._translateX._value) {
						if (this._translateX._value - projectedExtraPixels > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {
							toValue = this.props.leftOpenValue;
						}
					} else {
						if (this._translateX._value - projectedExtraPixels > this.props.leftOpenValue * (1 - this.props.swipeToClosePercent / 100)) {
							toValue = this.props.leftOpenValue;
						}
					}
				} else {
					if (this.swipeInitialX > this._translateX._value) {
						if (this._translateX._value - projectedExtraPixels < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {
							toValue = this.props.rightOpenValue;
						}
					} else {
						if (this._translateX._value - projectedExtraPixels < this.props.rightOpenValue * (1 - this.props.swipeToClosePercent / 100)) {
							toValue = this.props.rightOpenValue;
						}
					}
				}

				this.manuallySwipeRow(toValue);
			}
		}, {
			key: "closeRow",
			value: function closeRow() {
				this.manuallySwipeRow(0);
			}
		}, {
			key: "manuallySwipeRow",
			value: function manuallySwipeRow(toValue) {
				var _this4 = this;

				_reactNative.Animated.spring(this._translateX, {
					toValue: toValue,
					friction: this.props.friction,
					tension: this.props.tension
				}).start(function (_) {
					_this4.ensureScrollEnabled();

					if (toValue === 0) {
						_this4.props.onRowDidClose && _this4.props.onRowDidClose();
					} else {
						_this4.props.onRowDidOpen && _this4.props.onRowDidOpen();
					}
				});

				if (toValue === 0) {
					this.props.onRowClose && this.props.onRowClose();
				} else {
					this.props.onRowOpen && this.props.onRowOpen(toValue);
				}

				this.swipeInitialX = null;
				this.horizontalSwipeGestureBegan = false;
			}
		}, {
			key: "renderVisibleContent",
			value: function renderVisibleContent() {
				var _this5 = this;

				var onPress = this.props.children[1].props.onPress;

				if (onPress) {
					var newOnPress = function newOnPress(_) {
						_this5.onRowPress();

						onPress();
					};

					return _react2.default.cloneElement(this.props.children[1], babelHelpers.extends({}, this.props.children[1].props, {
						onPress: newOnPress
					}));
				}

				return _react2.default.createElement(
					_reactNative.TouchableOpacity,
					{
						activeOpacity: 1,
						onPress: function onPress(_) {
							return _this5.onRowPress();
						}
					},
					this.props.children[1]
				);
			}
		}, {
			key: "renderRowContent",
			value: function renderRowContent() {
				var _this6 = this;

				if (this.state.dimensionsSet) {
					return _react2.default.createElement(
						_reactNative.Animated.View,
						babelHelpers.extends({}, this._panResponder.panHandlers, {
							style: {
								transform: [{
									translateX: this._translateX
								}]
							}
						}),
						this.renderVisibleContent()
					);
				} else {
					return _react2.default.createElement(
						_reactNative.Animated.View,
						babelHelpers.extends({}, this._panResponder.panHandlers, {
							onLayout: function onLayout(e) {
								return _this6.onContentLayout(e);
							},
							style: {
								transform: [{
									translateX: this._translateX
								}]
							}
						}),
						this.renderVisibleContent()
					);
				}
			}
		}, {
			key: "render",
			value: function render() {
				return _react2.default.createElement(
					_reactNative.View,
					{
						style: this.props.style ? this.props.style : styles.container
					},
					_react2.default.createElement(
						_reactNative.View,
						{
							style: [styles.hidden, {
								height: this.state.hiddenHeight,
								width: this.state.hiddenWidth
							}]
						},
						this.props.children[0]
					),
					this.renderRowContent()
				);
			}
		}]);
		return SwipeRow;
	}(_react.Component);

	var styles = _reactNative.StyleSheet.create({
		container: {},
		hidden: {
			bottom: 0,
			left: 0,
			overflow: 'hidden',
			position: 'absolute',
			right: 0,
			top: 0
		}
	});

	SwipeRow.defaultProps = {
		leftOpenValue: 0,
		rightOpenValue: 0,
		closeOnRowPress: true,
		disableLeftSwipe: false,
		disableRightSwipe: false,
		recalculateHiddenLayout: false,
		preview: false,
		previewDuration: 300,
		directionalDistanceChangeThreshold: 2,
		swipeToOpenPercent: 50,
		swipeToOpenVelocityContribution: 0,
		swipeToClosePercent: 50
	};
	exports.default = SwipeRow;
},11345,[10297,10033,10007,11342],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SwipeListView/SwipeRow.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _withOrientation = _require(_dependencyMap[2]);

  var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

  var _Theme = _require(_dependencyMap[3]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XR_WIDTH = 414;
  var XR_HEIGHT = 896;
  var PAD_WIDTH = 768;
  var PAD_HEIGHT = 1024;
  var dimKey = "screen";

  var _Dimensions$get = _reactNative.Dimensions.get(dimKey),
      D_HEIGHT = _Dimensions$get.height,
      D_WIDTH = _Dimensions$get.width;

  var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
      PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

  var _ref = PlatformConstants.reactNativeVersion || {},
      _ref$minor = _ref.minor,
      minor = _ref$minor === undefined ? 0 : _ref$minor;

  var isIPhoneX = function () {
    if (minor >= 50) {
      return _reactNative.DeviceInfo.isIPhoneX_deprecated;
    }

    return false;
  }();

  var isIPad = function () {
    return false;

    if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
      return false;
    }

    if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
      return false;
    }

    return true;
  }();

  var statusBarHeight = function statusBarHeight(isLandscape) {
    if (isIPhoneX) {
      return isLandscape ? 0 : 44;
    }

    if (isIPad) {
      return 20;
    }

    return isLandscape ? 0 : 20;
  };

  var doubleFromPercentString = function doubleFromPercentString(percent) {
    if (!percent.includes('%')) {
      return 0;
    }

    var dbl = parseFloat(percent) / 100;
    if (isNaN(dbl)) return 0;
    return dbl;
  };

  var YLSafeAreaView = function (_Component) {
    babelHelpers.inherits(YLSafeAreaView, _Component);

    function YLSafeAreaView() {
      var _ref2;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, YLSafeAreaView);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref2 = YLSafeAreaView.__proto__ || Object.getPrototypeOf(YLSafeAreaView)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
        touchesTop: true,
        touchesBottom: true,
        touchesLeft: true,
        touchesRight: true,
        orientation: null,
        viewWidth: 0,
        viewHeight: 0
      }, _this._onLayout = function () {
        if (!_this.view) return;
        var isLandscape = _this.props.isLandscape;
        var orientation = _this.state.orientation;
        var newOrientation = isLandscape ? 'landscape' : 'portrait';

        if (orientation && orientation === newOrientation) {
          return;
        }

        var WIDTH = isLandscape ? X_HEIGHT : X_WIDTH;
        var HEIGHT = isLandscape ? X_WIDTH : X_HEIGHT;

        _this.view.measureInWindow(function (winX, winY, winWidth, winHeight) {
          var realY = winY;
          var realX = winX;

          if (realY >= HEIGHT) {
            realY = realY % HEIGHT;
          } else if (realY < 0) {
            realY = realY % HEIGHT + HEIGHT;
          }

          if (realX >= WIDTH) {
            realX = realX % WIDTH;
          } else if (realX < 0) {
            realX = realX % WIDTH + WIDTH;
          }

          var touchesTop = realY === 0;
          var touchesBottom = realY + winHeight >= HEIGHT;
          var touchesLeft = realX === 0;
          var touchesRight = realX + winWidth >= WIDTH;

          _this.setState({
            touchesTop: touchesTop,
            touchesBottom: touchesBottom,
            touchesLeft: touchesLeft,
            touchesRight: touchesRight,
            orientation: newOrientation,
            viewWidth: winWidth,
            viewHeight: winHeight
          });
        });
      }, _this._getSafeAreaStyle = function () {
        var _this$state = _this.state,
            touchesTop = _this$state.touchesTop,
            touchesBottom = _this$state.touchesBottom,
            touchesLeft = _this$state.touchesLeft,
            touchesRight = _this$state.touchesRight;
        var _this$props = _this.props,
            forceInset = _this$props.forceInset,
            isLandscape = _this$props.isLandscape;

        var _this$_getViewStyles = _this._getViewStyles(),
            paddingTop = _this$_getViewStyles.paddingTop,
            paddingBottom = _this$_getViewStyles.paddingBottom,
            paddingLeft = _this$_getViewStyles.paddingLeft,
            paddingRight = _this$_getViewStyles.paddingRight,
            viewStyle = _this$_getViewStyles.viewStyle;

        var style = babelHelpers.extends({}, viewStyle, {
          paddingTop: touchesTop ? _this._getInset('top') : 0,
          paddingBottom: touchesBottom ? _this._getInset('bottom') : 0,
          paddingLeft: touchesLeft ? _this._getInset('left') : 0,
          paddingRight: touchesRight ? _this._getInset('right') : 0
        });

        if (isIPhoneX && forceInset) {
          Object.keys(forceInset).forEach(function (key) {
            var inset = forceInset[key];

            if (inset === 'always') {
              inset = _this._getInset(key);
            }

            if (inset === 'never') {
              inset = 0;
            }

            if (key === 'bottom' && inset === 'small') {
              inset = _Theme2.default.APPBAR_MARGINBottomSmall;
            }

            switch (key) {
              case 'horizontal':
                {
                  style.paddingLeft = inset;
                  style.paddingRight = inset;
                  break;
                }

              case 'vertical':
                {
                  style.paddingTop = inset;
                  style.paddingBottom = inset;
                  break;
                }

              case 'left':
              case 'right':
              case 'top':
              case 'bottom':
                {
                  var padding = "padding" + key[0].toUpperCase() + key.slice(1);
                  style[padding] = inset;
                  break;
                }
            }
          });
        }

        if (style.height && typeof style.height === 'number') {
          style.height += style.paddingTop + style.paddingBottom;
        }

        if (style.width && typeof style.width === 'number') {
          style.width += style.paddingLeft + style.paddingRight;
        }

        style.paddingTop += paddingTop;
        style.paddingBottom += paddingBottom;
        style.paddingLeft += paddingLeft;
        style.paddingRight += paddingRight;
        return style;
      }, _this._getViewStyles = function () {
        var viewWidth = _this.state.viewWidth;

        var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(_this.props.style || {}),
            _StyleSheet$flatten$p = _StyleSheet$flatten.padding,
            padding = _StyleSheet$flatten$p === undefined ? 0 : _StyleSheet$flatten$p,
            _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,
            paddingVertical = _StyleSheet$flatten$p2 === undefined ? padding : _StyleSheet$flatten$p2,
            _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,
            paddingHorizontal = _StyleSheet$flatten$p3 === undefined ? padding : _StyleSheet$flatten$p3,
            _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,
            paddingTop = _StyleSheet$flatten$p4 === undefined ? paddingVertical : _StyleSheet$flatten$p4,
            _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,
            paddingBottom = _StyleSheet$flatten$p5 === undefined ? paddingVertical : _StyleSheet$flatten$p5,
            _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,
            paddingLeft = _StyleSheet$flatten$p6 === undefined ? paddingHorizontal : _StyleSheet$flatten$p6,
            _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,
            paddingRight = _StyleSheet$flatten$p7 === undefined ? paddingHorizontal : _StyleSheet$flatten$p7,
            viewStyle = babelHelpers.objectWithoutProperties(_StyleSheet$flatten, ["padding", "paddingVertical", "paddingHorizontal", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight"]);

        if (typeof paddingTop !== 'number') {
          paddingTop = doubleFromPercentString(paddingTop) * viewWidth;
        }

        if (typeof paddingBottom !== 'number') {
          paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;
        }

        if (typeof paddingLeft !== 'number') {
          paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;
        }

        if (typeof paddingRight !== 'number') {
          paddingRight = doubleFromPercentString(paddingRight) * viewWidth;
        }

        return {
          paddingTop: paddingTop,
          paddingBottom: paddingBottom,
          paddingLeft: paddingLeft,
          paddingRight: paddingRight,
          viewStyle: viewStyle
        };
      }, _this._getInset = function (key) {
        var isLandscape = _this.props.isLandscape;

        switch (key) {
          case 'horizontal':
          case 'right':
          case 'left':
            {
              return isLandscape ? isIPhoneX ? 44 : 0 : 0;
            }

          case 'vertical':
          case 'top':
            {
              return statusBarHeight(isLandscape);
            }

          case 'bottom':
            {
              return isIPhoneX ? isLandscape ? 24 : 34 : 0;
            }
        }
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(YLSafeAreaView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _reactNative.InteractionManager.runAfterInteractions(function () {
          _this2._onLayout();
        });
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps() {
        this._onLayout();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _props = this.props,
            _props$forceInset = _props.forceInset,
            forceInset = _props$forceInset === undefined ? false : _props$forceInset,
            isLandscape = _props.isLandscape,
            children = _props.children,
            style = _props.style;
        {
          return _react2.default.createElement(
            _reactNative.View,
            {
              style: style
            },
            this.props.children
          );
        }

        var safeAreaStyle = this._getSafeAreaStyle();

        return _react2.default.createElement(
          _reactNative.View,
          {
            ref: function ref(c) {
              return _this3.view = c;
            },
            onLayout: this._onLayout,
            style: safeAreaStyle
          },
          this.props.children
        );
      }
    }]);
    return YLSafeAreaView;
  }(_react.Component);

  exports.default = (0, _withOrientation2.default)(YLSafeAreaView);
},11348,[10297,10033,11351,10601],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SafeAreaView/SafeAreaView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isOrientationLandscape = undefined;

  exports.default = function (WrappedComponent) {
    var withOrientation = function (_React$Component) {
      babelHelpers.inherits(withOrientation, _React$Component);

      function withOrientation() {
        babelHelpers.classCallCheck(this, withOrientation);

        var _this = babelHelpers.possibleConstructorReturn(this, (withOrientation.__proto__ || Object.getPrototypeOf(withOrientation)).call(this));

        _initialiseProps.call(_this);

        var isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));
        _this.state = {
          isLandscape: isLandscape
        };
        return _this;
      }

      babelHelpers.createClass(withOrientation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          _reactNativeOrientation2.default.addOrientationListener(this.handleOrientationChange);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          _reactNativeOrientation2.default.removeOrientationListener(this.handleOrientationChange);
        }
      }, {
        key: "render",
        value: function render() {
          return React.createElement(WrappedComponent, babelHelpers.extends({}, this.props, this.state));
        }
      }]);
      return withOrientation;
    }(React.Component);

    var _initialiseProps = function _initialiseProps() {
      var _this2 = this;

      this.handleOrientationChange = function (orientation) {
        var isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));

        _this2.setState({
          isLandscape: isLandscape
        });
      };
    };

    return (0, _hoistNonReactStatics2.default)(withOrientation, WrappedComponent);
  };

  var _react = _require(_dependencyMap[0]);

  var React = babelHelpers.interopRequireWildcard(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _hoistNonReactStatics = _require(_dependencyMap[2]);

  var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

  var _reactNativeOrientation = _require(_dependencyMap[3]);

  var _reactNativeOrientation2 = babelHelpers.interopRequireDefault(_reactNativeOrientation);

  var isOrientationLandscape = exports.isOrientationLandscape = function isOrientationLandscape(_ref) {
    var width = _ref.width,
        height = _ref.height;
    return width > height;
  };
},11351,[10297,10033,11354,11357],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SafeAreaView/withOrientation.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };
    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
    };
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

    module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== 'string') {
            if (objectPrototype) {
                var inheritedComponent = getPrototypeOf(sourceComponent);

                if (inheritedComponent && inheritedComponent !== objectPrototype) {
                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];

                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                    try {
                        defineProperty(targetComponent, key, descriptor);
                    } catch (e) {}
                }
            }

            return targetComponent;
        }

        return targetComponent;
    };
},11354,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/hoist-non-react-statics/hoist-non-react-statics.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  var Orientation = _require(_dependencyMap[0]).NativeModules.Orientation;

  var DeviceEventEmitter = _require(_dependencyMap[0]).DeviceEventEmitter;

  var listeners = {};
  var orientationDidChangeEvent = 'orientationDidChange';
  var specificOrientationDidChangeEvent = 'specificOrientationDidChange';
  var id = 0;
  var META = '__listener_id';

  function getKey(listener) {
    if (!listener.hasOwnProperty(META)) {
      if (!Object.isExtensible(listener)) {
        return 'F';
      }

      Object.defineProperty(listener, META, {
        value: 'L' + ++id
      });
    }

    return listener[META];
  }

  ;
  module.exports = {
    getOrientation: function getOrientation(cb) {
      Orientation.getOrientation(function (error, orientation) {
        cb(error, orientation);
      });
    },
    getSpecificOrientation: function getSpecificOrientation(cb) {
      Orientation.getSpecificOrientation(function (error, orientation) {
        cb(error, orientation);
      });
    },
    lockToPortrait: function lockToPortrait() {
      Orientation.lockToPortrait();
    },
    lockToLandscape: function lockToLandscape() {
      Orientation.lockToLandscape();
    },
    lockToLandscapeRight: function lockToLandscapeRight() {
      Orientation.lockToLandscapeRight();
    },
    lockToLandscapeLeft: function lockToLandscapeLeft() {
      Orientation.lockToLandscapeLeft();
    },
    unlockAllOrientations: function unlockAllOrientations() {
      Orientation.unlockAllOrientations();
    },
    addOrientationListener: function addOrientationListener(cb) {
      var key = getKey(cb);
      listeners[key] = DeviceEventEmitter.addListener(orientationDidChangeEvent, function (body) {
        cb(body.orientation);
      });
    },
    removeOrientationListener: function removeOrientationListener(cb) {
      var key = getKey(cb);

      if (!listeners[key]) {
        return;
      }

      listeners[key].remove();
      listeners[key] = null;
    },
    addSpecificOrientationListener: function addSpecificOrientationListener(cb) {
      var key = getKey(cb);
      listeners[key] = DeviceEventEmitter.addListener(specificOrientationDidChangeEvent, function (body) {
        cb(body.specificOrientation);
      });
    },
    removeSpecificOrientationListener: function removeSpecificOrientationListener(cb) {
      var key = getKey(cb);

      if (!listeners[key]) {
        return;
      }

      listeners[key].remove();
      listeners[key] = null;
    },
    getInitialOrientation: function getInitialOrientation() {
      return Orientation.initialOrientation;
    }
  };
},11357,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/react-native-orientation/react-native-orientation.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _SegmentedItem = _require(_dependencyMap[3]);

  var _SegmentedItem2 = babelHelpers.interopRequireDefault(_SegmentedItem);

  var CommonYeelightModules = _require(_dependencyMap[4]);

  var PropTypes = CommonYeelightModules.PropTypes;

  var SegmentedBar = function (_Component) {
    babelHelpers.inherits(SegmentedBar, _Component);

    function SegmentedBar(props) {
      babelHelpers.classCallCheck(this, SegmentedBar);

      var _this = babelHelpers.possibleConstructorReturn(this, (SegmentedBar.__proto__ || Object.getPrototypeOf(SegmentedBar)).call(this, props));

      _this._activeIndex = _this.props.activeIndex ? _this.props.activeIndex : 0;
      _this._buttonsLayout = _this.makeArray([], props.children);
      _this._itemsLayout = _this.makeArray([], props.children);
      _this._itemsAddWidth = _this.makeArray([], props.children, 0);
      _this._indicatorX = null;
      _this._indicatorWidth = null;
      _this._scrollViewWidth = 0;
      return _this;
    }

    babelHelpers.createClass(SegmentedBar, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var nextItemsLayout = this.makeArray(this._itemsLayout, nextProps.children);

        if (nextItemsLayout.length != this._itemsLayout.length) {
          this._buttonsLayout = this.makeArray(this._buttonsLayout, nextProps.children);
          this._itemsLayout = nextItemsLayout;
          this._itemsAddWidth = this.makeArray(this._itemsAddWidth, nextProps.children, 0);
        }

        if (nextProps.activeIndex || nextProps.activeIndex === 0) {
          this._activeIndex = nextProps.activeIndex;
        }

        if (this._activeIndex >= nextItemsLayout.length) {
          this._activeIndex = nextItemsLayout.length - 1;
        }

        this.props = nextProps;
        this.updateIndicator();
      }
    }, {
      key: "makeArray",
      value: function makeArray(olders, items) {
        var empty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
        if (items instanceof Array) return items.map(function (item, index) {
          return index < olders.length ? olders[index] : empty;
        });else if (items) return [olders.length > 0 ? olders[0] : empty];
        return [];
      }
    }, {
      key: "checkInitIndicator",
      value: function checkInitIndicator() {
        if (this._indicatorX && this._indicatorWidth) {
          this._indicatorX.setValue(this.indicatorXValue);

          this._indicatorWidth.setValue(this.indicatorWidthValue);
        } else {
          this._indicatorX = new _reactNative.Animated.Value(this.indicatorXValue);
          this._indicatorWidth = new _reactNative.Animated.Value(this.indicatorWidthValue);
        }

        this.forceUpdate();
      }
    }, {
      key: "updateIndicator",
      value: function updateIndicator() {
        if (!this._indicatorX || !this._indicatorWidth) return;
        var indicatorXValue = this.indicatorXValue;
        var indicatorWidthValue = this.indicatorWidthValue;

        if (indicatorXValue === this._saveIndicatorXValue && indicatorWidthValue === this._saveIndicatorWidthValue) {
          return;
        }

        this._saveIndicatorXValue = indicatorXValue;
        this._saveIndicatorWidthValue = indicatorWidthValue;

        if (this.props.animated) {
          _reactNative.Animated.parallel([_reactNative.Animated.spring(this._indicatorX, {
            toValue: indicatorXValue
          }), _reactNative.Animated.spring(this._indicatorWidth, {
            toValue: indicatorWidthValue
          })]).start();
        } else {
          this._indicatorX.setValue(indicatorXValue);

          this._indicatorWidth.setValue(indicatorWidthValue);
        }

        if (this.props.autoScroll && this.refs.scrollView) {
          var contextWidth = 0;

          this._buttonsLayout.map(function (item) {
            return contextWidth += item.width;
          });

          var x = indicatorXValue + indicatorWidthValue / 2 - this._scrollViewWidth / 2;

          if (x < 0) {
            x = 0;
          } else if (x > contextWidth - this._scrollViewWidth) {
            x = contextWidth - this._scrollViewWidth;
          }

          this.refs.scrollView.scrollTo({
            x: x,
            y: 0,
            animated: this.props.animated
          });
        }
      }
    }, {
      key: "isEqualLayout",
      value: function isEqualLayout(obj1, obj2) {
        return obj1.x == obj2.x && obj1.y == obj2.y && obj1.width == obj2.width && obj1.height == obj2.height;
      }
    }, {
      key: "onButtonPress",
      value: function onButtonPress(index) {
        this.activeIndex = index;
      }
    }, {
      key: "onButtonLayout",
      value: function onButtonLayout(index, e) {
        var layout = e.nativeEvent.layout;

        if (!this.isEqualLayout(layout, this._buttonsLayout[index])) {
          this._buttonsLayout[index] = layout;
          this.checkInitIndicator();
        }
      }
    }, {
      key: "onItemLayout",
      value: function onItemLayout(index, e) {
        var layout = e.nativeEvent.layout;

        if (!this.isEqualLayout(layout, this._itemsLayout[index])) {
          this._itemsLayout[index] = layout;
          this.checkInitIndicator();
        }
      }
    }, {
      key: "onScrollViewLayout",
      value: function onScrollViewLayout(e) {
        this._scrollViewWidth = e.nativeEvent.layout.width;
        this.props.onLayout && this.props.onLayout(e);
      }
    }, {
      key: "renderItem",
      value: function renderItem(item, index) {
        var _this2 = this;

        var saveOnLayout = item.props.onLayout;

        var newItem = _react2.default.cloneElement(item, {
          active: index === this.activeIndex,
          onLayout: function onLayout(e) {
            _this2.onItemLayout(index, e);

            saveOnLayout && saveOnLayout(e);
          },
          onAddWidth: function onAddWidth(width) {
            if (width != _this2._itemsAddWidth[index]) {
              _this2._itemsAddWidth[index] = width;

              _this2.forceUpdate();
            }
          },
          ref: function ref(e) {
            var ref = item.ref;

            if (typeof ref === 'function') {
              ref && ref(e);
            }
          }
        });

        return newItem;
      }
    }, {
      key: "renderIndicator",
      value: function renderIndicator() {
        var _props = this.props,
            indicatorLineColor = _props.indicatorLineColor,
            indicatorLineWidth = _props.indicatorLineWidth,
            indicatorPositionPadding = _props.indicatorPositionPadding;
        var height = indicatorLineWidth || indicatorLineWidth === 0 ? indicatorLineWidth : _Theme2.default.sbIndicatorLineWidth;
        var style = {
          backgroundColor: indicatorLineColor ? indicatorLineColor : _Theme2.default.sbIndicatorLineColor,
          position: 'absolute',
          left: this._indicatorX,
          width: this._indicatorWidth,
          height: height,
          borderRadius: height / 2
        };

        if (this.props.indicatorPosition == 'top') {
          style.top = indicatorPositionPadding || indicatorPositionPadding === 0 ? indicatorPositionPadding : _Theme2.default.sbIndicatorPositionPadding;
        } else {
          style.bottom = indicatorPositionPadding || indicatorPositionPadding === 0 ? indicatorPositionPadding : _Theme2.default.sbIndicatorPositionPadding;
        }

        return _react2.default.createElement(_reactNative.Animated.View, {
          style: style
        });
      }
    }, {
      key: "renderFixed",
      value: function renderFixed() {
        var _this3 = this;

        var _props2 = this.props,
            style = _props2.style,
            justifyItem = _props2.justifyItem,
            indicatorType = _props2.indicatorType,
            indicatorPosition = _props2.indicatorPosition,
            indicatorLineColor = _props2.indicatorLineColor,
            indicatorLineWidth = _props2.indicatorLineWidth,
            indicatorPositionPadding = _props2.indicatorPositionPadding,
            animated = _props2.animated,
            activeIndex = _props2.activeIndex,
            onChange = _props2.onChange,
            children = _props2.children,
            others = babelHelpers.objectWithoutProperties(_props2, ["style", "justifyItem", "indicatorType", "indicatorPosition", "indicatorLineColor", "indicatorLineWidth", "indicatorPositionPadding", "animated", "activeIndex", "onChange", "children"]);
        style = [{
          backgroundColor: _Theme2.default.sbColor,
          flexDirection: 'row'
        }].concat(style);

        if (!children) {
          children = [];
        } else if (!(children instanceof Array)) {
          children = [children];
        }

        return _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            style: style
          }, others),
          children.map(function (item, index) {
            return _react2.default.createElement(
              _reactNative.TouchableOpacity,
              {
                key: index,
                style: {
                  flex: 1,
                  alignItems: 'center',
                  justifyContent: 'center'
                },
                onPress: function onPress() {
                  return _this3.onButtonPress(index);
                },
                onLayout: function onLayout(e) {
                  return _this3.onButtonLayout(index, e);
                },
                activeOpacity: 1.0
              },
              _this3.renderItem(item, index)
            );
          }),
          this.renderIndicator()
        );
      }
    }, {
      key: "renderScrollable",
      value: function renderScrollable() {
        var _this4 = this;

        var _props3 = this.props,
            style = _props3.style,
            justifyItem = _props3.justifyItem,
            indicatorType = _props3.indicatorType,
            indicatorPosition = _props3.indicatorPosition,
            indicatorLineColor = _props3.indicatorLineColor,
            indicatorLineWidth = _props3.indicatorLineWidth,
            indicatorPositionPadding = _props3.indicatorPositionPadding,
            animated = _props3.animated,
            activeIndex = _props3.activeIndex,
            onChange = _props3.onChange,
            onLayout = _props3.onLayout,
            children = _props3.children,
            others = babelHelpers.objectWithoutProperties(_props3, ["style", "justifyItem", "indicatorType", "indicatorPosition", "indicatorLineColor", "indicatorLineWidth", "indicatorPositionPadding", "animated", "activeIndex", "onChange", "onLayout", "children"]);
        style = [{
          backgroundColor: _Theme2.default.sbColor
        }].concat(style);

        if (!children) {
          children = [];
        } else if (!(children instanceof Array)) {
          children = [children];
        }

        return _react2.default.createElement(
          _reactNative.ScrollView,
          babelHelpers.extends({
            style: style,
            horizontal: true,
            showsHorizontalScrollIndicator: false,
            scrollsToTop: false,
            removeClippedSubviews: false,
            onLayout: function onLayout(e) {
              return _this4.onScrollViewLayout(e);
            },
            ref: "scrollView"
          }, others),
          children.map(function (item, index) {
            return _react2.default.createElement(
              _reactNative.TouchableOpacity,
              {
                key: index,
                onPress: function onPress() {
                  return _this4.onButtonPress(index);
                },
                onLayout: function onLayout(e) {
                  return _this4.onButtonLayout(index, e);
                },
                activeOpacity: 1.0
              },
              _this4.renderItem(item, index)
            );
          }),
          this.renderIndicator()
        );
      }
    }, {
      key: "render",
      value: function render() {
        if (this.props.justifyItem === 'scrollable') return this.renderScrollable();else return this.renderFixed();
      }
    }, {
      key: "activeIndex",
      get: function get() {
        return this._activeIndex;
      },
      set: function set(value) {
        if (this._activeIndex != value) {
          this._activeIndex = value;
          this.updateIndicator();
          this.forceUpdate();
          this.props.onChange && this.props.onChange(value);
        }
      }
    }, {
      key: "indicatorXValue",
      get: function get() {
        switch (this.props.indicatorType) {
          case 'boxWidth':
            return this._buttonsLayout[this._activeIndex].x;

          case 'itemWidth':
            return this._buttonsLayout[this._activeIndex].x + this._itemsLayout[this._activeIndex].x + this._itemsAddWidth[this._activeIndex] / 2;

          case 'fixedWidth':
            return this._buttonsLayout[this._activeIndex].x + (this._buttonsLayout[this._activeIndex].width - this.indicatorWidthValue) / 2;
        }

        return 0;
      }
    }, {
      key: "indicatorWidthValue",
      get: function get() {
        switch (this.props.indicatorType) {
          case 'boxWidth':
            return this._buttonsLayout[this.activeIndex].width;

          case 'itemWidth':
            return this._itemsLayout[this.activeIndex].width - this._itemsAddWidth[this._activeIndex];

          case 'fixedWidth':
            return this.props.indicatorWidth && 20;
        }

        return 0;
      }
    }]);
    return SegmentedBar;
  }(_react.Component);

  SegmentedBar.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
    justifyItem: PropTypes.oneOf(['fixed', 'scrollable']),
    indicatorType: PropTypes.oneOf(['none', 'boxWidth', 'itemWidth', 'fixedWidth']),
    indicatorPosition: PropTypes.oneOf(['top', 'bottom']),
    indicatorLineColor: PropTypes.string,
    indicatorLineWidth: PropTypes.number,
    indicatorPositionPadding: PropTypes.number,
    animated: PropTypes.bool,
    autoScroll: PropTypes.bool,
    activeIndex: PropTypes.number,
    onChange: PropTypes.func
  });
  SegmentedBar.defaultProps = babelHelpers.extends({}, _reactNative.View.defaultProps, {
    justifyItem: 'fixed',
    indicatorType: 'itemWidth',
    indicatorPosition: 'bottom',
    animated: true,
    autoScroll: true
  });
  SegmentedBar.Item = _SegmentedItem2.default;
  exports.default = SegmentedBar;
},11360,[10297,10033,10601,11363,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/SegmentedBar/SegmentedBar.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _Badge = _require(_dependencyMap[3]);

  var _Badge2 = babelHelpers.interopRequireDefault(_Badge);

  var _CommonYeelightModules = _require(_dependencyMap[4]);

  var SegmentedItem = function (_Component) {
    babelHelpers.inherits(SegmentedItem, _Component);

    function SegmentedItem(props) {
      babelHelpers.classCallCheck(this, SegmentedItem);

      var _this = babelHelpers.possibleConstructorReturn(this, (SegmentedItem.__proto__ || Object.getPrototypeOf(SegmentedItem)).call(this, props));

      _this.state = {
        badgeWidth: 0
      };
      return _this;
    }

    babelHelpers.createClass(SegmentedItem, [{
      key: "buildProps",
      value: function buildProps() {
        var _this2 = this;

        var _props = this.props,
            style = _props.style,
            title = _props.title,
            titleStyle = _props.titleStyle,
            active = _props.active,
            activeTitleStyle = _props.activeTitleStyle,
            badge = _props.badge,
            onAddWidth = _props.onAddWidth,
            children = _props.children,
            others = babelHelpers.objectWithoutProperties(_props, ["style", "title", "titleStyle", "active", "activeTitleStyle", "badge", "onAddWidth", "children"]);
        var badgeWidth = this.state.badgeWidth;
        style = [{
          paddingTop: _Theme2.default.sbBtnPaddingTop,
          paddingBottom: _Theme2.default.sbBtnPaddingBottom,
          paddingLeft: _Theme2.default.sbBtnPaddingLeft + badgeWidth / 2,
          paddingRight: _Theme2.default.sbBtnPaddingRight + badgeWidth / 2,
          overflow: 'visible',
          alignItems: 'center',
          justifyContent: 'center'
        }].concat(style);

        if (!_react2.default.isValidElement(title) && (title || title === '' || title === 0)) {
          var textStyle = void 0;

          if (active) {
            textStyle = [{
              color: _Theme2.default.sbBtnActiveTitleColor,
              fontSize: _Theme2.default.sbBtnActiveTextFontSize
            }].concat(activeTitleStyle);
          } else {
            textStyle = [{
              color: _Theme2.default.sbBtnTitleColor,
              fontSize: _Theme2.default.sbBtnTextFontSize
            }].concat(titleStyle);
          }

          title = _react2.default.createElement(
            _reactNative.Text,
            {
              key: "title",
              style: textStyle,
              numberOfLines: 1
            },
            title
          );
        }

        if (badge === 0) {
          badge = null;
        } else if (!_react2.default.isValidElement(badge) && badge) {
          var badgeStyle = {
            position: 'absolute',
            right: 0,
            top: 0
          };
          badge = _react2.default.createElement(_Badge2.default, {
            key: "badge",
            style: badgeStyle,
            count: badge,
            onLayout: function onLayout(e) {
              var width = e.nativeEvent.layout.width;

              if (width != _this2.state.badgeWidth) {
                _this2.setState({
                  badgeWidth: width
                });

                onAddWidth && onAddWidth(width);
              }

              _this2.props.onLayout && _this2.props.onLayout(e);
            }
          });
        }

        children = [title, badge];
        this.props = babelHelpers.extends({
          style: style,
          title: title,
          titleStyle: titleStyle,
          active: active,
          activeTitleStyle: activeTitleStyle,
          badge: badge,
          children: children
        }, others);
      }
    }, {
      key: "render",
      value: function render() {
        this.buildProps();
        return _react2.default.createElement(_reactNative.View, this.props);
      }
    }]);
    return SegmentedItem;
  }(_react.Component);

  SegmentedItem.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
    title: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.element, _CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.number]),
    titleStyle: _reactNative.Text.propTypes.style,
    activeTitleStyle: _reactNative.Text.propTypes.style,
    active: _CommonYeelightModules.PropTypes.bool,
    badge: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.element, _CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.number]),
    onAddWidth: _CommonYeelightModules.PropTypes.func
  });
  SegmentedItem.defaultProps = babelHelpers.extends({}, _reactNative.View.defaultProps, {
    active: false
  });
  exports.default = SegmentedItem;
},11363,[10297,10033,10601,11366,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/SegmentedBar/SegmentedItem.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _CommonYeelightModules = _require(_dependencyMap[3]);

  var Badge = function (_Component) {
    babelHelpers.inherits(Badge, _Component);

    function Badge() {
      babelHelpers.classCallCheck(this, Badge);
      return babelHelpers.possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).apply(this, arguments));
    }

    babelHelpers.createClass(Badge, [{
      key: "buildProps",
      value: function buildProps() {
        var _props = this.props,
            style = _props.style,
            type = _props.type,
            count = _props.count,
            countStyle = _props.countStyle,
            maxCount = _props.maxCount,
            children = _props.children,
            others = babelHelpers.objectWithoutProperties(_props, ["style", "type", "count", "countStyle", "maxCount", "children"]);
        var width = void 0,
            height = void 0,
            minWidth = void 0,
            borderRadius = void 0,
            borderWidth = void 0,
            padding = void 0;

        switch (type) {
          case 'capsule':
            height = _Theme2.default.badgeSize;
            minWidth = _Theme2.default.badgeSize;
            borderRadius = _Theme2.default.badgeSize / 2;
            borderWidth = _Theme2.default.badgeBorderWidth;
            padding = (count + '').length === 1 ? 0 : _Theme2.default.badgePadding;
            break;

          case 'square':
            height = _Theme2.default.badgeSize;
            minWidth = _Theme2.default.badgeSize;
            borderRadius = 2;
            borderWidth = _Theme2.default.badgeBorderWidth;
            padding = (count + '').length === 1 ? 0 : _Theme2.default.badgePadding;
            break;

          case 'dot':
            width = _Theme2.default.badgeDotSize;
            height = _Theme2.default.badgeDotSize;
            borderRadius = _Theme2.default.badgeDotSize / 2;
            borderWidth = 0;
            padding = 0;
            break;
        }

        style = [{
          backgroundColor: _Theme2.default.badgeColor,
          width: width,
          height: height,
          minWidth: minWidth,
          borderRadius: borderRadius,
          borderColor: _Theme2.default.badgeBorderColor,
          borderWidth: borderWidth,
          paddingLeft: padding,
          paddingRight: padding,
          overflow: 'hidden',
          alignItems: 'center',
          justifyContent: 'center',
          flexDirection: 'row'
        }].concat(style);
        if (type === 'dot') children = null;else if (count || count === 0) {
          countStyle = [{
            color: _Theme2.default.badgeTextColor,
            fontSize: _Theme2.default.badgeFontSize
          }].concat(countStyle);
          children = _react2.default.createElement(
            _reactNative.Text,
            {
              style: countStyle,
              allowFontScaling: false,
              numberOfLines: 1
            },
            count > maxCount ? maxCount + '+' : count
          );
        }
        this.props = babelHelpers.extends({
          style: style,
          type: type,
          count: count,
          countStyle: countStyle,
          maxCount: maxCount,
          children: children
        }, others);
      }
    }, {
      key: "render",
      value: function render() {
        this.buildProps();
        return _react2.default.createElement(_reactNative.View, this.props);
      }
    }]);
    return Badge;
  }(_react.Component);

  Badge.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
    type: _CommonYeelightModules.PropTypes.oneOf(['capsule', 'square', 'dot']),
    count: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.number]),
    countStyle: _reactNative.Text.propTypes.style,
    maxCount: _CommonYeelightModules.PropTypes.number
  });
  Badge.defaultProps = babelHelpers.extends({}, _reactNative.View.defaultProps, {
    type: 'capsule',
    maxCount: 99
  });
  exports.default = Badge;
},11366,[10297,10033,10601,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Badge/Badge.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _viewPropTypes = _require(_dependencyMap[1]);

  var _viewPropTypes2 = babelHelpers.interopRequireDefault(_viewPropTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _CommonYeelightModules = _require(_dependencyMap[3]);

  var _CircularProgress = _require(_dependencyMap[4]);

  var _CircularProgress2 = babelHelpers.interopRequireDefault(_CircularProgress);

  var AnimatedProgress = _reactNative.Animated.createAnimatedComponent(_CircularProgress2.default);

  var AnimatedCircularProgress = function (_React$Component) {
    babelHelpers.inherits(AnimatedCircularProgress, _React$Component);

    function AnimatedCircularProgress(props) {
      babelHelpers.classCallCheck(this, AnimatedCircularProgress);

      var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedCircularProgress.__proto__ || Object.getPrototypeOf(AnimatedCircularProgress)).call(this, props));

      _this.state = {
        chartFillAnimation: new _reactNative.Animated.Value(props.prefill || 0)
      };
      return _this;
    }

    babelHelpers.createClass(AnimatedCircularProgress, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animateFill();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.fill !== this.props.fill) {
          this.animateFill();
        }
      }
    }, {
      key: "animateFill",
      value: function animateFill() {
        var _props = this.props,
            tension = _props.tension,
            friction = _props.friction,
            onAnimationComplete = _props.onAnimationComplete;

        _reactNative.Animated.spring(this.state.chartFillAnimation, {
          toValue: this.props.fill,
          tension: tension,
          friction: friction
        }).start(onAnimationComplete);
      }
    }, {
      key: "performTimingAnimation",
      value: function performTimingAnimation(toValue, duration) {
        var easing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _reactNative.Easing.linear;
        var onLinearAnimationComplete = this.props.onLinearAnimationComplete;

        _reactNative.Animated.timing(this.state.chartFillAnimation, {
          toValue: toValue,
          easing: easing,
          duration: duration
        }).start(onLinearAnimationComplete);
      }
    }, {
      key: "render",
      value: function render() {
        var _props2 = this.props,
            fill = _props2.fill,
            prefill = _props2.prefill,
            other = babelHelpers.objectWithoutProperties(_props2, ["fill", "prefill"]);
        return _react2.default.createElement(AnimatedProgress, babelHelpers.extends({}, other, {
          fill: this.state.chartFillAnimation
        }));
      }
    }]);
    return AnimatedCircularProgress;
  }(_react2.default.Component);

  exports.default = AnimatedCircularProgress;
  AnimatedCircularProgress.propTypes = {
    style: _viewPropTypes2.default.style,
    size: _CommonYeelightModules.PropTypes.number.isRequired,
    fill: _CommonYeelightModules.PropTypes.number,
    prefill: _CommonYeelightModules.PropTypes.number,
    width: _CommonYeelightModules.PropTypes.number.isRequired,
    tintColor: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.object]),
    backgroundColor: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.object]),
    tension: _CommonYeelightModules.PropTypes.number,
    friction: _CommonYeelightModules.PropTypes.number,
    onAnimationComplete: _CommonYeelightModules.PropTypes.func,
    onLinearAnimationComplete: _CommonYeelightModules.PropTypes.func
  };
  AnimatedCircularProgress.defaultProps = {
    tension: 7,
    friction: 10
  };
},11369,[10297,11342,10033,10007,11372],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/ProgressBar/AnimatedCircularProgress.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _viewPropTypes = _require(_dependencyMap[1]);

  var _viewPropTypes2 = babelHelpers.interopRequireDefault(_viewPropTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _CommonYeelightModules = _require(_dependencyMap[3]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Group = _reactNative.ART.Group;

  var CircularProgress = function (_React$Component) {
    babelHelpers.inherits(CircularProgress, _React$Component);

    function CircularProgress() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, CircularProgress);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CircularProgress.__proto__ || Object.getPrototypeOf(CircularProgress)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        appState: _reactNative.AppState.currentState
      }, _this.extractFill = function (fill) {
        return Math.min(100, Math.max(0, fill));
      }, _this.componentDidMount = function () {
        return _reactNative.AppState.addEventListener('change', _this.handleAppStateChange);
      }, _this.componentWillUnmount = function () {
        return _reactNative.AppState.removeEventListener('change', _this.handleAppStateChange);
      }, _this.handleAppStateChange = function (nextAppState) {
        return _this.setState({
          appState: nextAppState
        });
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(CircularProgress, [{
      key: "circlePath",
      value: function circlePath(cx, cy, r, startDegree, endDegree) {
        var p = Path();
        p.path.push(0, cx + r, cy);
        p.path.push(4, cx, cy, r, startDegree * Math.PI / 180, endDegree * Math.PI / 180, 1);
        return p;
      }
    }, {
      key: "render",
      value: function render() {
        var _props = this.props,
            size = _props.size,
            width = _props.width,
            backgroundWidth = _props.backgroundWidth,
            tintColor = _props.tintColor,
            backgroundColor = _props.backgroundColor,
            style = _props.style,
            rotation = _props.rotation,
            linecap = _props.linecap,
            arcSweepAngle = _props.arcSweepAngle,
            children = _props.children;
        var fill = this.extractFill(this.props.fill);
        var backgroundPath = this.circlePath(size / 2, size / 2, size / 2 - width / 2, 0, arcSweepAngle * .9999);
        var circlePath = this.circlePath(size / 2, size / 2, size / 2 - width / 2, 0, arcSweepAngle * .9999 * fill / 100);
        var offset = size - width * 2;
        var childContainerStyle = {
          position: 'absolute',
          left: width,
          top: width,
          width: offset,
          height: offset,
          borderRadius: offset / 2,
          alignItems: 'center',
          justifyContent: 'center'
        };
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: style
          },
          _react2.default.createElement(
            Surface,
            {
              width: size,
              height: size,
              key: this.state.appState,
              style: {
                backgroundColor: 'transparent'
              }
            },
            _react2.default.createElement(
              Group,
              {
                rotation: rotation - 90,
                originX: size / 2,
                originY: size / 2
              },
              backgroundColor !== 'transparent' && _react2.default.createElement(Shape, {
                d: backgroundPath,
                stroke: backgroundColor,
                strokeWidth: backgroundWidth != null ? backgroundWidth : width,
                strokeCap: linecap
              }),
              tintColor !== 'transparent' && _react2.default.createElement(Shape, {
                d: circlePath,
                stroke: tintColor,
                strokeWidth: width,
                strokeCap: linecap
              })
            )
          ),
          children && _react2.default.createElement(
            _reactNative.View,
            {
              style: childContainerStyle
            },
            children(fill)
          )
        );
      }
    }]);
    return CircularProgress;
  }(_react2.default.Component);

  exports.default = CircularProgress;
  CircularProgress.defaultProps = {
    tintColor: 'black',
    backgroundColor: '#e4e4e4',
    rotation: 90,
    linecap: 'butt',
    arcSweepAngle: 360
  };
},11372,[10297,11342,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/ProgressBar/CircularProgress.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _viewPropTypes = _require(_dependencyMap[1]);

    var _viewPropTypes2 = babelHelpers.interopRequireDefault(_viewPropTypes);

    var _CommonYeelightModules = _require(_dependencyMap[2]);

    var _reactNative = _require(_dependencyMap[3]);

    var handleTabPress = function handleTabPress(index, multiple, selectedIndex, onTabPress) {
        if (multiple) {
            onTabPress(index);
        } else if (selectedIndex !== index) {
            onTabPress(index);
        }
    };

    var TabOption = function TabOption(_ref) {
        var isTabActive = _ref.isTabActive,
            index = _ref.index,
            badge = _ref.badge,
            text = _ref.text,
            firstTabStyle = _ref.firstTabStyle,
            lastTabStyle = _ref.lastTabStyle,
            tabStyle = _ref.tabStyle,
            activeTabStyle = _ref.activeTabStyle,
            tabTextStyle = _ref.tabTextStyle,
            activeTabTextStyle = _ref.activeTabTextStyle,
            tabBadgeContainerStyle = _ref.tabBadgeContainerStyle,
            activeTabBadgeContainerStyle = _ref.activeTabBadgeContainerStyle,
            tabBadgeStyle = _ref.tabBadgeStyle,
            activeTabBadgeStyle = _ref.activeTabBadgeStyle,
            onTabPress = _ref.onTabPress;
        return _react2.default.createElement(
            _reactNative.TouchableOpacity,
            {
                style: [styles.tabStyle, tabStyle, isTabActive ? [styles.activeTabStyle, activeTabStyle] : {}, firstTabStyle, lastTabStyle],
                onPress: function onPress() {
                    return onTabPress(index);
                },
                activeOpacity: 1
            },
            _react2.default.createElement(
                _reactNative.View,
                {
                    style: {
                        flexDirection: "row"
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    {
                        style: [styles.tabTextStyle, tabTextStyle, isTabActive ? [styles.activeTabTextStyle, activeTabTextStyle] : {}],
                        numberOfLines: 1,
                        ellipsizeMode: "tail"
                    },
                    text
                ),
                badge ? _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: [styles.tabBadgeContainerStyle, tabBadgeContainerStyle, isTabActive ? [styles.activeTabBadgeContainerStyle, activeTabBadgeContainerStyle] : {}]
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        {
                            style: [styles.tabBadgeStyle, tabBadgeStyle, isTabActive ? [styles.activeTabBadgeStyle, activeTabBadgeStyle] : {}]
                        },
                        badge
                    )
                ) : false
            )
        );
    };

    var SegmentedControlTab = function SegmentedControlTab(_ref2) {
        var multiple = _ref2.multiple,
            selectedIndex = _ref2.selectedIndex,
            selectedIndices = _ref2.selectedIndices,
            values = _ref2.values,
            badges = _ref2.badges,
            borderRadius = _ref2.borderRadius,
            tabsContainerStyle = _ref2.tabsContainerStyle,
            tabStyle = _ref2.tabStyle,
            activeTabStyle = _ref2.activeTabStyle,
            tabTextStyle = _ref2.tabTextStyle,
            activeTabTextStyle = _ref2.activeTabTextStyle,
            tabBadgeContainerStyle = _ref2.tabBadgeContainerStyle,
            activeTabBadgeContainerStyle = _ref2.activeTabBadgeContainerStyle,
            tabBadgeStyle = _ref2.tabBadgeStyle,
            activeTabBadgeStyle = _ref2.activeTabBadgeStyle,
            _onTabPress = _ref2.onTabPress;
        var firstTabStyle = [{
            borderRightWidth: 0,
            borderTopLeftRadius: borderRadius,
            borderBottomLeftRadius: borderRadius,
            borderTopRightRadius: 0,
            borderBottomRightRadius: 0
        }];
        var lastTabStyle = [{
            borderLeftWidth: 0,
            borderTopLeftRadius: 0,
            borderTopRightRadius: borderRadius,
            borderBottomRightRadius: borderRadius,
            borderBottomLeftRadius: 0.1
        }];
        return _react2.default.createElement(
            _reactNative.View,
            {
                style: [styles.tabsContainerStyle, tabsContainerStyle],
                removeClippedSubviews: false
            },
            values.map(function (item, index) {
                return _react2.default.createElement(TabOption, {
                    key: index,
                    index: index,
                    badge: badges && badges[index] ? badges[index] : false,
                    isTabActive: multiple ? selectedIndices.includes(index) : selectedIndex === index,
                    text: item,
                    onTabPress: function onTabPress(index) {
                        return handleTabPress(index, multiple, selectedIndex, _onTabPress);
                    },
                    firstTabStyle: index === 0 ? [{
                        borderRightWidth: _reactNative.StyleSheet.hairlineWidth
                    }, firstTabStyle] : {},
                    lastTabStyle: index === values.length - 1 ? [{
                        borderRightWidth: 1
                    }, lastTabStyle] : {},
                    tabStyle: [tabStyle, index !== values.length - 1 ? {
                        borderRightWidth: _reactNative.StyleSheet.hairlineWidth * (_CommonYeelightModules.Theme.isIPhoneX ? 1.1 : 1)
                    } : {}],
                    activeTabStyle: [activeTabStyle, index !== values.length - 1 ? {
                        borderRightWidth: _reactNative.StyleSheet.hairlineWidth * (_CommonYeelightModules.Theme.isIPhoneX ? 1.1 : 1)
                    } : {}],
                    tabTextStyle: tabTextStyle,
                    activeTabTextStyle: activeTabTextStyle,
                    tabBadgeContainerStyle: tabBadgeContainerStyle,
                    activeTabBadgeContainerStyle: activeTabBadgeContainerStyle,
                    tabBadgeStyle: tabBadgeStyle,
                    activeTabBadgeStyle: activeTabBadgeStyle
                });
            })
        );
    };

    SegmentedControlTab.defaultProps = {
        values: ['One', 'Two', 'Three'],
        badges: ['', '', ''],
        multiple: false,
        selectedIndex: 0,
        selectedIndices: [0],
        onTabPress: function onTabPress() {},
        tabsContainerStyle: {},
        tabStyle: {},
        activeTabStyle: {},
        tabTextStyle: {},
        activeTabTextStyle: {},
        tabBadgeContainerStyle: {},
        activeTabBadgeContainerStyle: {},
        tabBadgeStyle: {},
        activeTabBadgeStyle: {},
        borderRadius: 5
    };

    var styles = _reactNative.StyleSheet.create({
        tabsContainerStyle: {
            backgroundColor: 'transparent',
            flexDirection: 'row',
            justifyContent: 'center',
            alignItems: 'stretch'
        },
        tabStyle: {
            paddingVertical: 5,
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center',
            borderColor: '#0076FF',
            borderWidth: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: 'white'
        },
        activeTabStyle: {
            backgroundColor: '#0076FF'
        },
        tabTextStyle: {
            color: '#0076FF'
        },
        activeTabTextStyle: {
            color: 'white'
        },
        tabBadgeContainerStyle: {
            borderRadius: 20,
            backgroundColor: 'red',
            paddingLeft: 5,
            paddingRight: 5,
            marginLeft: 5,
            marginBottom: 3
        },
        activeTabBadgeContainerStyle: {
            backgroundColor: 'white'
        },
        tabBadgeStyle: {
            color: 'white',
            fontSize: 11,
            fontWeight: 'bold'
        },
        activeTabBadgeStyle: {
            color: 'black'
        }
    });

    exports.default = SegmentedControlTab;
},11375,[10297,11342,10007,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/SegmentedBar/SegmentedControlTab.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var Dimensions = _require(_dependencyMap[2]);

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var Theme = CommonYeelightModules.Theme;
  var ratio = Theme.ratio;
  var progressBarHeight = 6 * ratio;

  var styles = _reactNative.StyleSheet.create({
    background: {
      height: progressBarHeight,
      overflow: 'hidden',
      borderRadius: progressBarHeight / 2
    },
    fill: {
      backgroundColor: '#3b5998',
      height: progressBarHeight,
      borderRadius: progressBarHeight / 2
    }
  });

  var progressWidth = 0;

  var ProgressBar = function (_Component) {
    babelHelpers.inherits(ProgressBar, _Component);

    function ProgressBar(props) {
      babelHelpers.classCallCheck(this, ProgressBar);

      var _this = babelHelpers.possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).call(this, props));

      _this.state = {
        progress: new _reactNative.Animated.Value(_this.props.initialProgress || 0)
      };
      return _this;
    }

    babelHelpers.createClass(ProgressBar, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (this.props.progress >= 0 && this.props.progress != prevProps.progress) {
          this.update();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var fillWidth = this.state.progress.interpolate({
          inputRange: [0, 1],
          outputRange: [0 * progressWidth, 1 * progressWidth]
        });
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.background, this.props.style],
            ref: function ref(view) {
              return _this2.progressView = view;
            },
            onLayout: this._onLayout
          },
          _react2.default.createElement(_reactNative.View, {
            style: [{
              position: 'absolute',
              left: 0,
              right: 0,
              bottom: 0,
              top: 0,
              backgroundColor: 'white'
            }, this.props.backgroundStyle]
          }),
          _react2.default.createElement(_reactNative.Animated.View, {
            style: [styles.fill, this.props.fillStyle, {
              width: fillWidth,
              backgroundColor: this.props.progressTintColor || '#3b5998'
            }]
          })
        );
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        if (this.progressView) {
          this.progressView.measureInWindow(function (winX, winY, winWidth, winHeight) {
            progressWidth = winWidth;
          });
        }
      }
    }, {
      key: "update",
      value: function update() {
        _reactNative.Animated.timing(this.state.progress, {
          easing: this.props.easing,
          duration: this.props.easingDuration,
          toValue: this.props.progress
        }).start();
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps() {
        this._onLayout();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._onLayout();
      }
    }]);
    return ProgressBar;
  }(_react.Component);

  ProgressBar.defaultProps = {
    style: styles,
    easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
    easingDuration: 500
  };
  ;
  module.exports = ProgressBar;
},11378,[10297,10033,10429,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/ProgressBar/ProgressBar.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _styles = _require(_dependencyMap[2]);

  var _styles2 = babelHelpers.interopRequireDefault(_styles);

  var CommonYeelightModules = _require(_dependencyMap[3]);

  var PropTypes = CommonYeelightModules.PropTypes;

  var Prompt = function (_Component) {
    babelHelpers.inherits(Prompt, _Component);

    function Prompt() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, Prompt);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Prompt.__proto__ || Object.getPrototypeOf(Prompt)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        value: '',
        visible: false
      }, _this._onChangeText = function (value) {
        _this.setState({
          value: value
        });

        _this.props.onChangeText(value);
      }, _this._onSubmitPress = function () {
        var value = _this.state.value;

        _this.props.onSubmit(value);
      }, _this._onCancelPress = function () {
        _this.props.onCancel();
      }, _this.close = function () {
        _this.setState({
          visible: false
        });
      }, _this._renderDialog = function () {
        var _this$props = _this.props,
            title = _this$props.title,
            placeholder = _this$props.placeholder,
            defaultValue = _this$props.defaultValue,
            cancelText = _this$props.cancelText,
            submitText = _this$props.submitText,
            borderColor = _this$props.borderColor,
            promptStyle = _this$props.promptStyle,
            titleStyle = _this$props.titleStyle,
            buttonStyle = _this$props.buttonStyle,
            buttonTextStyle = _this$props.buttonTextStyle,
            submitButtonStyle = _this$props.submitButtonStyle,
            submitButtonTextStyle = _this$props.submitButtonTextStyle,
            cancelButtonStyle = _this$props.cancelButtonStyle,
            cancelButtonTextStyle = _this$props.cancelButtonTextStyle,
            inputStyle = _this$props.inputStyle;
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: _styles2.default.dialog,
            key: "prompt"
          },
          _react2.default.createElement(_reactNative.View, {
            style: _styles2.default.dialogOverlay
          }),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: [_styles2.default.dialogContent, {
                borderColor: borderColor
              }, promptStyle]
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: [_styles2.default.dialogTitle, {
                  borderColor: borderColor
                }]
              },
              _react2.default.createElement(
                _reactNative.Text,
                {
                  style: [_styles2.default.dialogTitleText, titleStyle]
                },
                title
              )
            ),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: _styles2.default.dialogBody
              },
              _react2.default.createElement(_reactNative.TextInput, babelHelpers.extends({
                style: [_styles2.default.dialogInput, inputStyle],
                defaultValue: defaultValue,
                onChangeText: _this._onChangeText,
                placeholder: placeholder,
                autoFocus: true,
                underlineColorAndroid: "white"
              }, _this.props.textInputProps))
            ),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: [_styles2.default.dialogFooter, {
                  borderColor: borderColor
                }]
              },
              _react2.default.createElement(
                _reactNative.TouchableWithoutFeedback,
                {
                  onPress: _this._onCancelPress
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: [_styles2.default.dialogAction, buttonStyle, cancelButtonStyle]
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      style: [_styles2.default.dialogActionText, buttonTextStyle, cancelButtonTextStyle]
                    },
                    cancelText
                  )
                )
              ),
              _react2.default.createElement(
                _reactNative.TouchableWithoutFeedback,
                {
                  onPress: _this._onSubmitPress
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    style: [_styles2.default.dialogAction, buttonStyle, submitButtonStyle]
                  },
                  _react2.default.createElement(
                    _reactNative.Text,
                    {
                      style: [_styles2.default.dialogActionText, buttonTextStyle, submitButtonTextStyle]
                    },
                    submitText
                  )
                )
              )
            )
          )
        );
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(Prompt, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          value: this.props.defaultValue
        });
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var visible = nextProps.visible,
            defaultValue = nextProps.defaultValue;
        this.setState({
          visible: visible,
          value: defaultValue
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react2.default.createElement(
          _reactNative.Modal,
          {
            onRequestClose: function onRequestClose() {
              return _this2.close();
            },
            transparent: true,
            visible: this.props.visible
          },
          this._renderDialog()
        );
      }
    }]);
    return Prompt;
  }(_react.Component);

  Prompt.propTypes = {
    title: PropTypes.string.isRequired,
    visible: PropTypes.bool,
    defaultValue: PropTypes.string,
    placeholder: PropTypes.string,
    onCancel: PropTypes.func.isRequired,
    cancelText: PropTypes.string,
    onSubmit: PropTypes.func.isRequired,
    submitText: PropTypes.string,
    onChangeText: PropTypes.func.isRequired,
    borderColor: PropTypes.string,
    promptStyle: PropTypes.object,
    titleStyle: PropTypes.object,
    buttonStyle: PropTypes.object,
    buttonTextStyle: PropTypes.object,
    submitButtonStyle: PropTypes.object,
    submitButtonTextStyle: PropTypes.object,
    cancelButtonStyle: PropTypes.object,
    cancelButtonTextStyle: PropTypes.object,
    inputStyle: PropTypes.object,
    textInputProps: PropTypes.object
  };
  Prompt.defaultProps = {
    visible: false,
    defaultValue: '',
    cancelText: 'Cancel',
    submitText: 'OK',
    borderColor: '#ccc',
    promptStyle: {},
    titleStyle: {},
    buttonStyle: {},
    buttonTextStyle: {},
    submitButtonStyle: {},
    submitButtonTextStyle: {},
    cancelButtonStyle: {},
    cancelButtonTextStyle: {},
    inputStyle: {},
    onChangeText: function onChangeText() {}
  };
  exports.default = Prompt;
  ;
},11381,[10297,10033,11384,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Alert/YLPrompt.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0]);

  exports.default = _reactNative.StyleSheet.create({
    dialog: {
      flex: 1,
      alignItems: 'center'
    },
    dialogOverlay: {
      backgroundColor: 'rgba(0, 0, 0, 0.8)',
      position: 'absolute',
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    },
    dialogContent: {
      elevation: 5,
      marginTop: 150,
      width: 300,
      backgroundColor: 'white',
      borderRadius: 5,
      borderWidth: 1,
      overflow: 'hidden'
    },
    dialogTitle: {
      borderBottomWidth: 1,
      paddingVertical: 10,
      paddingHorizontal: 15
    },
    dialogTitleText: {
      fontSize: 18,
      fontWeight: '600'
    },
    dialogBody: {
      paddingHorizontal: 10
    },
    dialogInput: {
      height: 50,
      fontSize: 18
    },
    dialogFooter: {
      borderTopWidth: 1,
      flexDirection: 'row'
    },
    dialogAction: {
      flex: 1,
      padding: 15
    },
    dialogActionText: {
      fontSize: 18,
      textAlign: 'center',
      color: '#006dbf'
    }
  });
},11384,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Alert/styles.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Overlay2 = _require(_dependencyMap[2]);

  var _Overlay3 = babelHelpers.interopRequireDefault(_Overlay2);

  var _ToastView = _require(_dependencyMap[3]);

  var _ToastView2 = babelHelpers.interopRequireDefault(_ToastView);

  var Toast = function (_Overlay) {
    babelHelpers.inherits(Toast, _Overlay);

    function Toast() {
      babelHelpers.classCallCheck(this, Toast);
      return babelHelpers.possibleConstructorReturn(this, (Toast.__proto__ || Object.getPrototypeOf(Toast)).apply(this, arguments));
    }

    babelHelpers.createClass(Toast, null, [{
      key: "show",
      value: function show(options) {
        var _this2 = this;

        var _ref = options && typeof options === 'object' ? options : {},
            duration = _ref.duration,
            others = babelHelpers.objectWithoutProperties(_ref, ["duration"]);

        var key = babelHelpers.get(Toast.__proto__ || Object.getPrototypeOf(Toast), "show", this).call(this, _react2.default.createElement(this.ToastView, others));

        if (typeof duration !== 'number') {
          switch (duration) {
            case 'long':
              duration = 3500;
              break;

            default:
              duration = 2000;
              break;
          }
        }

        setTimeout(function () {
          return _this2.hide(key);
        }, duration);
        return key;
      }
    }, {
      key: "message",
      value: function message(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.messageDefaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.messageDefaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position
        });
      }
    }, {
      key: "success",
      value: function success(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'success'
        });
      }
    }, {
      key: "fail",
      value: function fail(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'fail'
        });
      }
    }, {
      key: "smile",
      value: function smile(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'smile'
        });
      }
    }, {
      key: "sad",
      value: function sad(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'sad'
        });
      }
    }, {
      key: "info",
      value: function info(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'info'
        });
      }
    }, {
      key: "stop",
      value: function stop(text) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDuration;
        var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPosition;
        return this.show({
          text: text,
          duration: duration,
          position: position,
          icon: 'stop'
        });
      }
    }]);
    return Toast;
  }(_Overlay3.default);

  Toast.ToastView = _ToastView2.default;
  Toast.defaultDuration = 'short';
  Toast.defaultPosition = 'center';
  Toast.messageDefaultDuration = 'short';
  Toast.messageDefaultPosition = 'bottom';
  exports.default = Toast;
},11387,[10297,10033,11390,11426],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Toast/Toast.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _TopView = _require(_dependencyMap[2]);

  var _TopView2 = babelHelpers.interopRequireDefault(_TopView);

  var _OverlayView = _require(_dependencyMap[3]);

  var _OverlayView2 = babelHelpers.interopRequireDefault(_OverlayView);

  var _OverlayPullView = _require(_dependencyMap[4]);

  var _OverlayPullView2 = babelHelpers.interopRequireDefault(_OverlayPullView);

  var _OverlayPopView = _require(_dependencyMap[5]);

  var _OverlayPopView2 = babelHelpers.interopRequireDefault(_OverlayPopView);

  var _OverlayPopoverView = _require(_dependencyMap[6]);

  var _OverlayPopoverView2 = babelHelpers.interopRequireDefault(_OverlayPopoverView);

  var Overlay = function () {
    function Overlay() {
      babelHelpers.classCallCheck(this, Overlay);
    }

    babelHelpers.createClass(Overlay, null, [{
      key: "show",
      value: function show(overlayView) {
        var key = void 0;
        var onDisappearCompletedSave = overlayView.props.onDisappearCompleted;

        var element = _react2.default.cloneElement(overlayView, {
          onDisappearCompleted: function onDisappearCompleted() {
            _TopView2.default.remove(key);

            onDisappearCompletedSave && onDisappearCompletedSave();
          }
        });

        key = _TopView2.default.add(element);
        return key;
      }
    }, {
      key: "hide",
      value: function hide(key) {
        _TopView2.default.remove(key);
      }
    }, {
      key: "transformRoot",
      value: function transformRoot(transform, animated) {
        var animatesOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        _TopView2.default.transform(transform, animated, animatesOnly);
      }
    }, {
      key: "restoreRoot",
      value: function restoreRoot(animated) {
        var animatesOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        _TopView2.default.restore(animated, animatesOnly);
      }
    }]);
    return Overlay;
  }();

  Overlay.View = _OverlayView2.default;
  Overlay.PullView = _OverlayPullView2.default;
  Overlay.PopView = _OverlayPopView2.default;
  Overlay.PopoverView = _OverlayPopoverView2.default;
  exports.default = Overlay;
},11390,[10297,10033,11393,11408,11414,11417,11420],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/Overlay.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var keyValue = 0;

  var TopView = function (_Component) {
    babelHelpers.inherits(TopView, _Component);
    babelHelpers.createClass(TopView, null, [{
      key: "add",
      value: function add(element) {
        var key = ++keyValue;

        _reactNative.DeviceEventEmitter.emit("addOverlay", {
          key: key,
          element: element
        });

        return key;
      }
    }, {
      key: "remove",
      value: function remove(key) {
        _reactNative.DeviceEventEmitter.emit("removeOverlay", {
          key: key
        });
      }
    }, {
      key: "removeAll",
      value: function removeAll() {
        _reactNative.DeviceEventEmitter.emit("removeAllOverlay", {});
      }
    }, {
      key: "transform",
      value: function transform(_transform, animated) {
        var animatesOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        _reactNative.DeviceEventEmitter.emit("transformRoot", {
          transform: _transform,
          animated: animated,
          animatesOnly: animatesOnly
        });
      }
    }, {
      key: "restore",
      value: function restore(animated) {
        var animatesOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        _reactNative.DeviceEventEmitter.emit("restoreRoot", {
          animated: animated,
          animatesOnly: animatesOnly
        });
      }
    }]);

    function TopView(props) {
      babelHelpers.classCallCheck(this, TopView);

      var _this = babelHelpers.possibleConstructorReturn(this, (TopView.__proto__ || Object.getPrototypeOf(TopView)).call(this, props));

      _this.state = {
        elements: [],
        translateX: new _reactNative.Animated.Value(0),
        translateY: new _reactNative.Animated.Value(0),
        scaleX: new _reactNative.Animated.Value(1),
        scaleY: new _reactNative.Animated.Value(1)
      };
      return _this;
    }

    babelHelpers.createClass(TopView, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        _reactNative.DeviceEventEmitter.addListener("addOverlay", function (e) {
          return _this2.add(e);
        });

        _reactNative.DeviceEventEmitter.addListener("removeOverlay", function (e) {
          return _this2.remove(e);
        });

        _reactNative.DeviceEventEmitter.addListener("removeAllOverlay", function (e) {
          return _this2.removeAll(e);
        });

        _reactNative.DeviceEventEmitter.addListener("transformRoot", function (e) {
          return _this2.transform(e);
        });

        _reactNative.DeviceEventEmitter.addListener("restoreRoot", function (e) {
          return _this2.restore(e);
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.DeviceEventEmitter.removeAllListeners("addOverlay");

        _reactNative.DeviceEventEmitter.removeAllListeners("removeOverlay");

        _reactNative.DeviceEventEmitter.removeAllListeners("removeAllOverlay");

        _reactNative.DeviceEventEmitter.removeAllListeners("transformRoot");

        _reactNative.DeviceEventEmitter.removeAllListeners("restoreRoot");
      }
    }, {
      key: "add",
      value: function add(e) {
        var elements = this.state.elements;
        elements.push(e);
        this.setState({
          elements: elements
        });
      }
    }, {
      key: "remove",
      value: function remove(e) {
        var elements = this.state.elements;

        for (var i = elements.length - 1; i >= 0; --i) {
          if (elements[i].key === e.key) {
            elements.splice(i, 1);
            break;
          }
        }

        this.setState({
          elements: elements
        });
      }
    }, {
      key: "removeAll",
      value: function removeAll(e) {
        var elements = this.state.elements;
        this.setState({
          elements: []
        });
      }
    }, {
      key: "transform",
      value: function transform(e) {
        var _state = this.state,
            translateX = _state.translateX,
            translateY = _state.translateY,
            scaleX = _state.scaleX,
            scaleY = _state.scaleY;
        var transform = e.transform,
            animated = e.animated,
            animatesOnly = e.animatesOnly;
        var tx = 0,
            ty = 0,
            sx = 1,
            sy = 1;
        transform.map(function (item) {
          if (item && typeof item === 'object') {
            for (var name in item) {
              var value = item[name];

              switch (name) {
                case 'translateX':
                  tx = value;
                  break;

                case 'translateY':
                  ty = value;
                  break;

                case 'scaleX':
                  sx = value;
                  break;

                case 'scaleY':
                  sy = value;
                  break;
              }
            }
          }
        });

        if (animated) {
          var animates = [_reactNative.Animated.spring(translateX, {
            toValue: tx,
            friction: 9
          }), _reactNative.Animated.spring(translateY, {
            toValue: ty,
            friction: 9
          }), _reactNative.Animated.spring(scaleX, {
            toValue: sx,
            friction: 9
          }), _reactNative.Animated.spring(scaleY, {
            toValue: sy,
            friction: 9
          })];
          animatesOnly ? animatesOnly(animates) : _reactNative.Animated.parallel(animates).start();
        } else {
          if (animatesOnly) {
            var _animates = [_reactNative.Animated.timing(translateX, {
              toValue: tx,
              duration: 1
            }), _reactNative.Animated.timing(translateY, {
              toValue: ty,
              duration: 1
            }), _reactNative.Animated.timing(scaleX, {
              toValue: sx,
              duration: 1
            }), _reactNative.Animated.timing(scaleY, {
              toValue: sy,
              duration: 1
            })];
            animatesOnly(_animates);
          } else {
            translateX.setValue(tx);
            translateY.setValue(ty);
            scaleX.setValue(sx);
            scaleY.setValue(sy);
          }
        }
      }
    }, {
      key: "restore",
      value: function restore(e) {
        var _state2 = this.state,
            translateX = _state2.translateX,
            translateY = _state2.translateY,
            scaleX = _state2.scaleX,
            scaleY = _state2.scaleY;
        var animated = e.animated,
            animatesOnly = e.animatesOnly;

        if (animated) {
          var animates = [_reactNative.Animated.spring(translateX, {
            toValue: 0,
            friction: 9
          }), _reactNative.Animated.spring(translateY, {
            toValue: 0,
            friction: 9
          }), _reactNative.Animated.spring(scaleX, {
            toValue: 1,
            friction: 9
          }), _reactNative.Animated.spring(scaleY, {
            toValue: 1,
            friction: 9
          })];
          animatesOnly ? animatesOnly(animates) : _reactNative.Animated.parallel(animates).start();
        } else {
          if (animatesOnly) {
            var _animates2 = [_reactNative.Animated.timing(translateX, {
              toValue: 0,
              duration: 1
            }), _reactNative.Animated.timing(translateY, {
              toValue: 0,
              duration: 1
            }), _reactNative.Animated.timing(scaleX, {
              toValue: 1,
              duration: 1
            }), _reactNative.Animated.timing(scaleY, {
              toValue: 1,
              duration: 1
            })];
            animatesOnly(_animates2);
          } else {
            translateX.setValue(0);
            translateY.setValue(0);
            scaleX.setValue(1);
            scaleY.setValue(1);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _state3 = this.state,
            elements = _state3.elements,
            translateX = _state3.translateX,
            translateY = _state3.translateY,
            scaleX = _state3.scaleX,
            scaleY = _state3.scaleY;
        var transform = [{
          translateX: translateX
        }, {
          translateY: translateY
        }, {
          scaleX: scaleX
        }, {
          scaleY: scaleY
        }];
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              backgroundColor: _Theme2.default.screenColor,
              flex: 1
            }
          },
          _react2.default.createElement(
            _reactNative.Animated.View,
            {
              style: {
                flex: 1,
                transform: transform
              }
            },
            this.props.children
          ),
          elements.map(function (item, index) {
            return _react2.default.createElement(
              _reactNative.View,
              {
                key: 'topView' + item.key,
                style: styles.overlay,
                pointerEvents: "box-none"
              },
              item.element
            );
          })
        );
      }
    }]);
    return TopView;
  }(_react.Component);

  exports.default = TopView;

  var styles = _reactNative.StyleSheet.create({
    overlay: {
      backgroundColor: 'rgba(0, 0, 0, 0)',
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }
  });

  if (!_reactNative.AppRegistry.registerComponentOld) {
    _reactNative.AppRegistry.registerComponentOld = _reactNative.AppRegistry.registerComponent;
  }

  _reactNative.AppRegistry.registerComponent = function (appKey, componentProvider) {
    var RootElement = function (_Component2) {
      babelHelpers.inherits(RootElement, _Component2);

      function RootElement() {
        babelHelpers.classCallCheck(this, RootElement);
        return babelHelpers.possibleConstructorReturn(this, (RootElement.__proto__ || Object.getPrototypeOf(RootElement)).apply(this, arguments));
      }

      babelHelpers.createClass(RootElement, [{
        key: "render",
        value: function render() {
          var Component = componentProvider();
          return _react2.default.createElement(
            TopView,
            null,
            _react2.default.createElement(Component, this.props)
          );
        }
      }]);
      return RootElement;
    }(_react.Component);

    return _reactNative.AppRegistry.registerComponentOld(appKey, function () {
      return RootElement;
    });
  };
},11393,[10297,10033,11396],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/TopView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var _ThemeDefault = _require(_dependencyMap[1]);

  var _ThemeDefault2 = babelHelpers.interopRequireDefault(_ThemeDefault);

  var _ThemeBlack = _require(_dependencyMap[2]);

  var _ThemeBlack2 = babelHelpers.interopRequireDefault(_ThemeBlack);

  var _ThemeViolet = _require(_dependencyMap[3]);

  var _ThemeViolet2 = babelHelpers.interopRequireDefault(_ThemeViolet);

  var X_WIDTH = 375;
  var X_HEIGHT = 812;
  var XSMAX_WIDTH = 414;
  var XSMAX_HEIGHT = 896;
  var PAD_WIDTH = 768;
  var PAD_HEIGHT = 1024;
  var dimKey = "screen";

  var _Dimensions$get = _reactNative.Dimensions.get(dimKey),
      D_WIDTH = _Dimensions$get.width,
      D_HEIGHT = _Dimensions$get.height;

  var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
      PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

  var _ref = PlatformConstants.reactNativeVersion || {},
      _ref$minor = _ref.minor,
      minor = _ref$minor === undefined ? 0 : _ref$minor;

  var isIPhoneX = function () {
    return D_HEIGHT === XSMAX_HEIGHT && D_WIDTH === XSMAX_WIDTH || D_HEIGHT === XSMAX_WIDTH && D_WIDTH === XSMAX_HEIGHT;
  }();

  var isIPad = function () {
    return false;

    if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
      return false;
    }

    if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
      return false;
    }

    return true;
  }();

  var Theme = {
    themes: {
      default: _ThemeDefault2.default,
      black: _ThemeBlack2.default,
      violet: _ThemeViolet2.default
    },
    set: function set(theme) {
      babelHelpers.extends(this, theme);
    },
    isPad: isIPad,
    isIPhoneX: isIPhoneX,
    fitIPhoneX: true,

    get isLandscape() {
      return _reactNative.Dimensions.get(dimKey).width > _reactNative.Dimensions.get(dimKey).height;
    },

    get statusBarHeight() {
      {
        if (_reactNative.Platform.Version > 20) return _reactNative.StatusBar.currentHeight;
        return 0;
      }
      return this.isLandscape ? 0 : 20;
    },

    get screenInset() {
      var isLandscape = this.isLandscape;
      var isIPhoneX = this.isIPhoneX;
      var fitIPhoneX = this.fitIPhoneX;
      return {
        left: isLandscape && isIPhoneX && fitIPhoneX ? 44 : 0,
        right: isLandscape && isIPhoneX && fitIPhoneX ? 44 : 0,
        top: this.statusBarHeight,
        bottom: isIPhoneX && fitIPhoneX ? isLandscape ? 24 : 34 : 0
      };
    }

  };
  Theme.set(_ThemeDefault2.default);
  module.exports = Theme;
},11396,[10033,11399,11402,11405],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/themes/Theme.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0]);

  var primaryColor = '#337ab7';
  var secondaryColor = '#5bc0de';
  var defaultColor = '#fff';
  var defaultTextColor = '#333';

  var pixelSize = function () {
    var pixelRatio = _reactNative.PixelRatio.get();

    if (pixelRatio >= 3) return 0.333;else if (pixelRatio >= 2) return 0.5;else return 1;
  }();

  exports.default = {
    screenColor: '#444',
    primaryColor: primaryColor,
    secondaryColor: secondaryColor,
    defaultColor: defaultColor,
    defaultTextColor: defaultTextColor,
    pageColor: '#f8f8f8',
    pixelSize: pixelSize,
    labelTextColor: defaultTextColor,
    labelTextTitleColor: '#000',
    labelTextDetailColor: '#989898',
    labelTextDangerColor: '#a94442',
    labelFontSizeXL: 26,
    labelFontSizeLG: 20,
    labelFontSizeMD: 14,
    labelFontSizeSM: 10,
    labelFontSizeXS: 8,
    labelTitleScale: 1.1,
    labelDetailScale: 0.9,
    labelDangerScale: 1,
    btnColor: defaultColor,
    btnPrimaryColor: primaryColor,
    btnSecondaryColor: secondaryColor,
    btnDangerColor: '#d9534f',
    btnLinkColor: 'rgba(0, 0, 0, 0)',
    btnTitleColor: primaryColor,
    btnPrimaryTitleColor: '#fff',
    btnSecondaryTitleColor: '#fff',
    btnDangerTitleColor: '#fff',
    btnLinkTitleColor: primaryColor,
    btnBorderColor: primaryColor,
    btnPrimaryBorderColor: primaryColor,
    btnSecondaryBorderColor: secondaryColor,
    btnDangerBorderColor: '#d9534f',
    btnLinkBorderColor: 'rgba(0, 0, 0, 0)',
    btnBorderWidth: 1,
    btnBorderRadiusXL: 6,
    btnBorderRadiusLG: 6,
    btnBorderRadiusMD: 4,
    btnBorderRadiusSM: 3,
    btnBorderRadiusXS: 3,
    btnFontSizeXL: 29,
    btnFontSizeLG: 22,
    btnFontSizeMD: 15,
    btnFontSizeSM: 11,
    btnFontSizeXS: 9,
    btnPaddingVerticalXL: 8,
    btnPaddingVerticalLG: 8,
    btnPaddingVerticalMD: 6,
    btnPaddingVerticalSM: 4,
    btnPaddingVerticalXS: 2,
    btnPaddingHorizontalXL: 20,
    btnPaddingHorizontalLG: 16,
    btnPaddingHorizontalMD: 12,
    btnPaddingHorizontalSM: 8,
    btnPaddingHorizontalXS: 4,
    btnDisabledOpacity: 0.65,
    cbTitleColor: defaultTextColor,
    cbFontSizeLG: 20,
    cbFontSizeMD: 14,
    cbFontSizeSM: 10,
    cbTitlePaddingLeftLG: 8,
    cbTitlePaddingLeftMD: 6,
    cbTitlePaddingLeftSM: 4,
    cbCheckedTintColor: primaryColor,
    cbUncheckedTintColor: '#ccc',
    cbIconSizeLG: 18,
    cbIconSizeMD: 13,
    cbIconSizeSM: 10,
    cbDisabledOpacity: 0.65,
    inputColor: defaultColor,
    inputTextColor: defaultTextColor,
    inputPlaceholderTextColor: '#c7c7c7',
    inputBorderColor: '#ccc',
    inputBorderWidth: 1,
    inputBorderRadiusLG: 6,
    inputBorderRadiusMD: 4,
    inputBorderRadiusSM: 3,
    inputFontSizeLG: 18,
    inputFontSizeMD: 14,
    inputFontSizeSM: 12,
    inputPaddingVerticalLG: 8,
    inputPaddingVerticalMD: 6,
    inputPaddingVerticalSM: 5,
    inputPaddingHorizontalLG: 16,
    inputPaddingHorizontalMD: 12,
    inputPaddingHorizontalSM: 10,
    inputHeightLG: 46,
    inputHeightMD: 34,
    inputHeightSM: 30,
    inputDisabledOpacity: 0.65,
    selectColor: defaultColor,
    selectTextColor: defaultTextColor,
    selectPlaceholderTextColor: '#c7c7c7',
    selectBorderColor: '#ccc',
    selectBorderWidth: 1,
    selectBorderRadiusLG: 6,
    selectBorderRadiusMD: 4,
    selectBorderRadiusSM: 3,
    selectFontSizeLG: 18,
    selectFontSizeMD: 14,
    selectFontSizeSM: 12,
    selectPaddingTopLG: 8,
    selectPaddingTopMD: 6,
    selectPaddingTopSM: 5,
    selectPaddingBottomLG: 8,
    selectPaddingBottomMD: 6,
    selectPaddingBottomSM: 5,
    selectPaddingLeftLG: 16,
    selectPaddingLeftMD: 12,
    selectPaddingLeftSM: 10,
    selectPaddingRightLG: 26,
    selectPaddingRightMD: 20,
    selectPaddingRightSM: 16,
    selectHeightLG: 46,
    selectHeightMD: 34,
    selectHeightSM: 30,
    selectIconSizeLG: 20,
    selectIconSizeMD: 15,
    selectIconSizeSM: 12,
    selectIconTintColor: '#777',
    selectDisabledOpacity: 0.65,
    stepperColor: defaultColor,
    stepperBorderColor: '#ccc',
    stepperBorderWidth: 1,
    stepperBorderRadius: 2,
    stepperTextColor: defaultTextColor,
    stepperFontSize: 13,
    stepperBtnTextColor: defaultTextColor,
    stepperBtnFontSize: 13,
    stepperValueMinWidth: 40,
    stepperValuePaddingHorizontal: 8,
    stepperButtonWidth: 20,
    stepperButtonHeight: 20,
    stepperDisabledOpacity: 0.35,
    siColor: defaultColor,
    siTextColor: defaultTextColor,
    siPlaceholderTextColor: '#c7c7c7',
    siBorderColor: '#ccc',
    siBorderWidth: 1,
    siBorderRadius: 3,
    siFontSize: 13,
    siPaddingVertical: 4,
    siPaddingHorizontal: 6,
    siHeight: 28,
    siIconSize: 12,
    siDisabledOpacity: 0.65,
    badgeSize: 18,
    badgeDotSize: 6,
    badgePadding: 5,
    badgeColor: '#f00',
    badgeBorderColor: '#f8f8f8',
    badgeBorderWidth: 0,
    badgeTextColor: '#fff',
    badgeFontSize: 11,
    popoverColor: defaultColor,
    popoverBorderColor: 'rgba(0, 0, 0, 0.15)',
    popoverBorderRadius: 4,
    popoverBorderWidth: pixelSize,
    popoverPaddingCorner: 8,
    navType: 'ios',
    navStatusBarStyle: 'light-content',
    navBarContentHeight: 44,
    navColor: primaryColor,
    navTintColor: '#fff',
    navTitleColor: '#fff',
    navTitleFontSize: 18,
    navButtonFontSize: 15,
    navSeparatorColor: primaryColor,
    navSeparatorLineWidth: 0,
    sbColor: defaultColor,
    sbHeight: 40,
    sbBtnPaddingTop: 8,
    sbBtnPaddingBottom: 8,
    sbBtnPaddingLeft: 8,
    sbBtnPaddingRight: 8,
    sbBtnTitleColor: '#989898',
    sbBtnTextFontSize: 13,
    sbBtnActiveTitleColor: primaryColor,
    sbBtnActiveTextFontSize: 13,
    sbIndicatorLineColor: primaryColor,
    sbIndicatorLineWidth: 2,
    sbIndicatorPositionPadding: 0,
    tvBarColor: '#f8f8f8',
    tvBarHeight: 49,
    tvBarPaddingTop: 2,
    tvBarPaddingBottom: 2,
    tvBarSeparatorWidth: pixelSize,
    tvBarSeparatorColor: '#ccc',
    tvBarBtnWidth: 44,
    tvBarBtnIconSize: 22,
    tvBarBtnIconTintColor: '#8f8f8f',
    tvBarBtnIconActiveTintColor: primaryColor,
    tvBarBtnTitleColor: '#8f8f8f',
    tvBarBtnTextFontSize: 10,
    tvBarBtnActiveTitleColor: primaryColor,
    tvBarBtnActiveTextFontSize: 10,
    rowColor: defaultColor,
    rowMinHeight: 44,
    rowPaddingLeft: 12,
    rowPaddingRight: 12,
    rowPaddingTop: 8,
    rowPaddingBottom: 8,
    rowIconWidth: 20,
    rowIconHeight: 20,
    rowIconPaddingRight: 12,
    rowAccessoryWidth: 10,
    rowAccessoryHeight: 10,
    rowAccessoryPaddingLeft: 8,
    rowAccessoryCheckColor: '#007aff',
    rowAccessoryIndicatorColor: '#bebebe',
    rowSeparatorColor: '#ccc',
    rowSeparatorLineWidth: pixelSize,
    rowPaddingTitleDetail: 4,
    rowDetailLineHeight: 18,
    rowActionButtonColor: '#c8c7cd',
    rowActionButtonDangerColor: '#d9534f',
    rowActionButtonTitleColor: '#fff',
    rowActionButtonDangerTitleColor: '#fff',
    rowActionButtonTitleFontSize: 15,
    rowActionButtonPaddingHorizontal: 12,
    carouselDotSize: 9,
    carouselDotUseSize: 16,
    carouselDotColor: 'rgba(255, 255, 255, 0.4)',
    carouselActiveDotColor: 'rgba(255, 255, 255, 0.85)',
    wheelColor: defaultColor,
    wheelFontSize: 14,
    wheelTextColor: defaultTextColor,
    wheelHoleHeight: 28,
    wheelHoleLineWidth: pixelSize,
    wheelHoleLineColor: '#ccc',
    wheelMaskColor: defaultColor,
    wheelMaskOpacity: 0.4,
    overlayOpacity: 0.4,
    overlayRootScale: 0.93,
    toastColor: 'rgba(0, 0, 0, 0.8)',
    toastPaddingLeft: 12,
    toastPaddingRight: 12,
    toastPaddingTop: 8,
    toastPaddingBottom: 8,
    toastBorderRadius: 4,
    toastIconTintColor: '#ddd',
    toastIconWidth: 40,
    toastIconHeight: 40,
    toastIconPaddingTop: 8,
    toastIconPaddingBottom: 8,
    toastTextColor: '#ddd',
    toastFontSize: 15,
    toastScreenPaddingLeft: 40,
    toastScreenPaddingRight: 40,
    toastScreenPaddingTop: 100,
    toastScreenPaddingBottom: 80,
    toastWidth: 150,
    toastScreenMarginTop: (_reactNative.Dimensions.get('window').height - 120) / 2,
    toastScreenMarginLeft: (_reactNative.Dimensions.get('window').width - 150) / 2,
    asItemDisabledOpacity: 0.65,
    asItemMinHeight: 53,
    asItemPaddingLeft: 12,
    asItemPaddingRight: 12,
    asItemPaddingTop: 8,
    asItemPaddingBottom: 8,
    asItemColor: 'rgba(255, 255, 255, 0.9)',
    asItemSeparatorColor: 'rgba(127, 127, 127, 0.3)',
    asItemSeparatorLineWidth: pixelSize,
    asItemTitleColor: '#000',
    asItemTitleAlign: 'center',
    asItemFontSize: 19,
    asCancelItemColor: 'rgba(255, 255, 255, 0.9)',
    asCancelItemSeparatorColor: 'rgba(127, 127, 127, 0.3)',
    asCancelItemSeparatorLineWidth: 7,
    asCancelItemTitleColor: '#a94442',
    asCancelItemTitleAlign: 'center',
    asCancelItemFontSize: 19,
    apColor: 'rgba(0, 0, 0, 0.9)',
    apPaddingVertical: 0,
    apPaddingHorizontal: 4,
    apBorderRadius: 8,
    apDirectionInsets: 4,
    apItemTitleColor: '#fff',
    apItemFontSize: 14,
    apItemPaddingVertical: 8,
    apItemPaddingHorizontal: 12,
    apSeparatorColor: '#ccc',
    apSeparatorWidth: pixelSize,
    pupColor: '#f8f8f8',
    pupMaxHeight: 258,
    pupHeaderColor: defaultColor,
    pupHeaderPaddingLeft: 12,
    pupHeaderPaddingRight: 12,
    pupHeaderPaddingTop: 12,
    pupHeaderPaddingBottom: 12,
    pupHeaderTitleColor: '#000',
    pupHeaderFontSize: 16,
    pupHeaderFontWeight: 'bold',
    pupHeaderSeparatorColor: '#f8f8f8',
    pupHeaderSeparatorHeight: 8,
    pupItemColor: defaultColor,
    pupSeparatorColor: '#ccc',
    poppColor: '#f8f8f8',
    poppShadowColor: '#333',
    poppMinWidth: 120,
    poppMaxWidth: 260,
    poppMinHeight: 44,
    poppMaxHeight: 246,
    poppDirectionInsets: 4,
    poppItemColor: defaultColor,
    poppItemPaddingLeft: 12,
    poppItemPaddingRight: 12,
    poppItemPaddingTop: 8,
    poppItemPaddingBottom: 8,
    poppItemTitleColor: defaultTextColor,
    poppItemFontSize: 14,
    poppItemSeparatorWidth: pixelSize,
    poppItemSeparatorColor: '#ccc',
    poppAccessoryWidth: 10,
    poppAccessoryHeight: 10,
    poppAccessoryPaddingLeft: 8,
    poppAccessoryCheckColor: '#007aff',
    menuColor: 'rgba(0, 0, 0, 0.9)',
    menuShadowColor: '#777',
    menuDirectionInsets: 4,
    menuItemColor: 'rgba(0, 0, 0, 0)',
    menuItemPaddingLeft: 16,
    menuItemPaddingRight: 16,
    menuItemPaddingTop: 12,
    menuItemPaddingBottom: 12,
    menuItemTitleColor: '#ccc',
    menuItemFontSize: 14,
    menuItemSeparatorWidth: pixelSize,
    menuItemSeparatorColor: '#777',
    menuItemIconWidth: 16,
    menuItemIconHeight: 16,
    menuItemIconColor: '#ccc',
    menuItemIconPaddingRight: 12,
    miIndicatorColor: '#fff',
    miTextColor: '#fff',
    miFontSize: 15,
    miTextPaddingTop: 12,
    miScreenPaddingLeft: 40,
    miScreenPaddingRight: 40,
    miScreenPaddingTop: 100,
    miScreenPaddingBottom: 80,
    backButtonTitle: 'Back'
  };
},11399,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/themes/ThemeDefault.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0]);

  var primaryColor = '#f46231';
  var secondaryColor = '#eea95b';
  var defaultColor = '#252527';
  var defaultTextColor = '#ccc';

  var pixelSize = function () {
    var pixelRatio = _reactNative.PixelRatio.get();

    if (pixelRatio >= 3) return 0.333;else if (pixelRatio >= 2) return 0.5;else return 1;
  }();

  exports.default = {
    screenColor: '#000',
    primaryColor: primaryColor,
    secondaryColor: secondaryColor,
    defaultColor: defaultColor,
    defaultTextColor: defaultTextColor,
    pageColor: '#212121',
    pixelSize: pixelSize,
    labelTextColor: defaultTextColor,
    labelTextTitleColor: '#ddd',
    labelTextDetailColor: '#949494',
    labelTextDangerColor: '#e34043',
    labelFontSizeXL: 26,
    labelFontSizeLG: 20,
    labelFontSizeMD: 14,
    labelFontSizeSM: 10,
    labelFontSizeXS: 8,
    labelTitleScale: 1.1,
    labelDetailScale: 0.9,
    labelDangerScale: 1,
    btnColor: defaultColor,
    btnPrimaryColor: primaryColor,
    btnSecondaryColor: secondaryColor,
    btnDangerColor: '#e34043',
    btnLinkColor: 'rgba(0, 0, 0, 0)',
    btnTitleColor: primaryColor,
    btnPrimaryTitleColor: '#fff',
    btnSecondaryTitleColor: '#fff',
    btnDangerTitleColor: '#fff',
    btnLinkTitleColor: primaryColor,
    btnBorderColor: primaryColor,
    btnPrimaryBorderColor: primaryColor,
    btnSecondaryBorderColor: secondaryColor,
    btnDangerBorderColor: '#e34043',
    btnLinkBorderColor: 'rgba(0, 0, 0, 0)',
    btnBorderWidth: 1,
    btnBorderRadiusXL: 6,
    btnBorderRadiusLG: 6,
    btnBorderRadiusMD: 4,
    btnBorderRadiusSM: 3,
    btnBorderRadiusXS: 3,
    btnFontSizeXL: 29,
    btnFontSizeLG: 22,
    btnFontSizeMD: 15,
    btnFontSizeSM: 11,
    btnFontSizeXS: 9,
    btnPaddingVerticalXL: 8,
    btnPaddingVerticalLG: 8,
    btnPaddingVerticalMD: 6,
    btnPaddingVerticalSM: 4,
    btnPaddingVerticalXS: 2,
    btnPaddingHorizontalXL: 20,
    btnPaddingHorizontalLG: 16,
    btnPaddingHorizontalMD: 12,
    btnPaddingHorizontalSM: 8,
    btnPaddingHorizontalXS: 4,
    btnDisabledOpacity: 0.65,
    cbTitleColor: defaultTextColor,
    cbFontSizeLG: 20,
    cbFontSizeMD: 14,
    cbFontSizeSM: 10,
    cbTitlePaddingLeftLG: 8,
    cbTitlePaddingLeftMD: 6,
    cbTitlePaddingLeftSM: 4,
    cbCheckedTintColor: '#ccc',
    cbUncheckedTintColor: '#8f8f8f',
    cbIconSizeLG: 18,
    cbIconSizeMD: 13,
    cbIconSizeSM: 10,
    cbDisabledOpacity: 0.65,
    inputColor: defaultColor,
    inputTextColor: defaultTextColor,
    inputPlaceholderTextColor: '#666',
    inputBorderColor: '#8f8f8f',
    inputBorderWidth: 1,
    inputBorderRadiusLG: 6,
    inputBorderRadiusMD: 4,
    inputBorderRadiusSM: 3,
    inputFontSizeLG: 18,
    inputFontSizeMD: 14,
    inputFontSizeSM: 12,
    inputPaddingVerticalLG: 8,
    inputPaddingVerticalMD: 6,
    inputPaddingVerticalSM: 5,
    inputPaddingHorizontalLG: 16,
    inputPaddingHorizontalMD: 12,
    inputPaddingHorizontalSM: 10,
    inputHeightLG: 46,
    inputHeightMD: 34,
    inputHeightSM: 30,
    inputDisabledOpacity: 0.65,
    selectColor: defaultColor,
    selectTextColor: defaultTextColor,
    selectPlaceholderTextColor: '#666',
    selectBorderColor: '#8f8f8f',
    selectBorderWidth: 1,
    selectBorderRadiusLG: 6,
    selectBorderRadiusMD: 4,
    selectBorderRadiusSM: 3,
    selectFontSizeLG: 18,
    selectFontSizeMD: 14,
    selectFontSizeSM: 12,
    selectPaddingTopLG: 8,
    selectPaddingTopMD: 6,
    selectPaddingTopSM: 5,
    selectPaddingBottomLG: 8,
    selectPaddingBottomMD: 6,
    selectPaddingBottomSM: 5,
    selectPaddingLeftLG: 16,
    selectPaddingLeftMD: 12,
    selectPaddingLeftSM: 10,
    selectPaddingRightLG: 26,
    selectPaddingRightMD: 20,
    selectPaddingRightSM: 16,
    selectHeightLG: 46,
    selectHeightMD: 34,
    selectHeightSM: 30,
    selectIconSizeLG: 20,
    selectIconSizeMD: 15,
    selectIconSizeSM: 12,
    selectIconTintColor: '#777',
    selectDisabledOpacity: 0.65,
    stepperColor: defaultColor,
    stepperBorderColor: '#8f8f8f',
    stepperBorderWidth: 1,
    stepperBorderRadius: 2,
    stepperTextColor: defaultTextColor,
    stepperFontSize: 13,
    stepperBtnTextColor: defaultTextColor,
    stepperBtnFontSize: 13,
    stepperValueMinWidth: 40,
    stepperValuePaddingHorizontal: 8,
    stepperButtonWidth: 20,
    stepperButtonHeight: 20,
    stepperDisabledOpacity: 0.35,
    siColor: defaultColor,
    siTextColor: defaultTextColor,
    siPlaceholderTextColor: '#666',
    siBorderColor: '#8f8f8f',
    siBorderWidth: 1,
    siBorderRadius: 3,
    siFontSize: 13,
    siPaddingVertical: 4,
    siPaddingHorizontal: 6,
    siHeight: 28,
    siIconSize: 12,
    siDisabledOpacity: 0.65,
    badgeSize: 18,
    badgeDotSize: 6,
    badgePadding: 5,
    badgeColor: '#f00',
    badgeBorderColor: '#f8f8f8',
    badgeBorderWidth: 0,
    badgeTextColor: '#fff',
    badgeFontSize: 11,
    popoverColor: defaultColor,
    popoverBorderColor: 'rgba(0, 0, 0, 0.15)',
    popoverBorderRadius: 4,
    popoverBorderWidth: pixelSize,
    popoverPaddingCorner: 8,
    navType: 'ios',
    navStatusBarStyle: 'light-content',
    navBarContentHeight: 44,
    navColor: '#262626',
    navTintColor: '#ddd',
    navTitleColor: '#fff',
    navTitleFontSize: 18,
    navButtonFontSize: 15,
    navSeparatorColor: '#282828',
    navSeparatorLineWidth: pixelSize,
    sbColor: defaultColor,
    sbHeight: 40,
    sbBtnPaddingTop: 8,
    sbBtnPaddingBottom: 8,
    sbBtnPaddingLeft: 8,
    sbBtnPaddingRight: 8,
    sbBtnTitleColor: '#989898',
    sbBtnTextFontSize: 13,
    sbBtnActiveTitleColor: primaryColor,
    sbBtnActiveTextFontSize: 13,
    sbIndicatorLineColor: primaryColor,
    sbIndicatorLineWidth: 2,
    sbIndicatorPositionPadding: 0,
    tvBarColor: '#262626',
    tvBarHeight: 49,
    tvBarPaddingTop: 2,
    tvBarPaddingBottom: 2,
    tvBarSeparatorWidth: pixelSize,
    tvBarSeparatorColor: '#282828',
    tvBarBtnWidth: 44,
    tvBarBtnIconSize: 22,
    tvBarBtnIconTintColor: '#989898',
    tvBarBtnIconActiveTintColor: '#fff',
    tvBarBtnTitleColor: '#989898',
    tvBarBtnTextFontSize: 10,
    tvBarBtnActiveTitleColor: '#fff',
    tvBarBtnActiveTextFontSize: 10,
    rowColor: defaultColor,
    rowMinHeight: 44,
    rowPaddingLeft: 12,
    rowPaddingRight: 12,
    rowPaddingTop: 8,
    rowPaddingBottom: 8,
    rowIconWidth: 20,
    rowIconHeight: 20,
    rowIconPaddingRight: 12,
    rowAccessoryWidth: 10,
    rowAccessoryHeight: 10,
    rowAccessoryPaddingLeft: 8,
    rowAccessoryCheckColor: '#007aff',
    rowAccessoryIndicatorColor: '#bebebe',
    rowSeparatorColor: '#383838',
    rowSeparatorLineWidth: pixelSize,
    rowPaddingTitleDetail: 4,
    rowDetailLineHeight: 18,
    rowActionButtonColor: '#58575d',
    rowActionButtonDangerColor: '#e34043',
    rowActionButtonTitleColor: '#fff',
    rowActionButtonDangerTitleColor: '#fff',
    rowActionButtonTitleFontSize: 15,
    rowActionButtonPaddingHorizontal: 12,
    carouselDotSize: 9,
    carouselDotUseSize: 16,
    carouselDotColor: 'rgba(255, 255, 255, 0.4)',
    carouselActiveDotColor: 'rgba(255, 255, 255, 0.85)',
    wheelColor: defaultColor,
    wheelFontSize: 14,
    wheelTextColor: defaultTextColor,
    wheelHoleHeight: 28,
    wheelHoleLineWidth: pixelSize,
    wheelHoleLineColor: '#555',
    wheelMaskColor: defaultColor,
    wheelMaskOpacity: 0.4,
    overlayOpacity: 0.4,
    overlayRootScale: 0.93,
    toastColor: 'rgba(0, 0, 0, 0.8)',
    toastPaddingLeft: 12,
    toastPaddingRight: 12,
    toastPaddingTop: 8,
    toastPaddingBottom: 8,
    toastBorderRadius: 4,
    toastIconTintColor: '#ddd',
    toastIconWidth: 40,
    toastIconHeight: 40,
    toastIconPaddingTop: 8,
    toastIconPaddingBottom: 8,
    toastTextColor: '#ddd',
    toastFontSize: 15,
    toastScreenPaddingLeft: 40,
    toastScreenPaddingRight: 40,
    toastScreenPaddingTop: 100,
    toastScreenPaddingBottom: 80,
    asItemDisabledOpacity: 0.65,
    asItemMinHeight: 53,
    asItemPaddingLeft: 12,
    asItemPaddingRight: 12,
    asItemPaddingTop: 8,
    asItemPaddingBottom: 8,
    asItemColor: 'rgba(64, 64, 64, 0.9)',
    asItemSeparatorColor: 'rgba(0, 0, 0, 0.3)',
    asItemSeparatorLineWidth: pixelSize,
    asItemTitleColor: '#fff',
    asItemTitleAlign: 'center',
    asItemFontSize: 19,
    asCancelItemColor: 'rgba(64, 64, 64, 0.9)',
    asCancelItemSeparatorColor: 'rgba(0, 0, 0, 0.3)',
    asCancelItemSeparatorLineWidth: 7,
    asCancelItemTitleColor: '#e34043',
    asCancelItemTitleAlign: 'center',
    asCancelItemFontSize: 19,
    apColor: 'rgba(64, 64, 64, 0.9)',
    apPaddingVertical: 0,
    apPaddingHorizontal: 4,
    apBorderRadius: 8,
    apDirectionInsets: 4,
    apItemTitleColor: '#fff',
    apItemFontSize: 14,
    apItemPaddingVertical: 8,
    apItemPaddingHorizontal: 12,
    apSeparatorColor: '#383838',
    apSeparatorWidth: pixelSize,
    pupColor: '#212121',
    pupMaxHeight: 258,
    pupHeaderColor: 'rgba(64, 64, 64, 0.9)',
    pupHeaderPaddingLeft: 12,
    pupHeaderPaddingRight: 12,
    pupHeaderPaddingTop: 12,
    pupHeaderPaddingBottom: 12,
    pupHeaderTitleColor: '#fff',
    pupHeaderFontSize: 16,
    pupHeaderFontWeight: 'bold',
    pupHeaderSeparatorColor: '#212121',
    pupHeaderSeparatorHeight: 8,
    pupItemColor: 'rgba(64, 64, 64, 0.9)',
    pupSeparatorColor: '#212121',
    poppColor: 'rgba(64, 64, 64, 0.9)',
    poppShadowColor: '#333',
    poppMinWidth: 120,
    poppMaxWidth: 260,
    poppMinHeight: 44,
    poppMaxHeight: 246,
    poppDirectionInsets: 4,
    poppItemColor: 'rgba(0, 0, 0, 0)',
    poppItemPaddingLeft: 12,
    poppItemPaddingRight: 12,
    poppItemPaddingTop: 8,
    poppItemPaddingBottom: 8,
    poppItemTitleColor: defaultTextColor,
    poppItemFontSize: 14,
    poppItemSeparatorWidth: pixelSize,
    poppItemSeparatorColor: '#212121',
    poppAccessoryWidth: 10,
    poppAccessoryHeight: 10,
    poppAccessoryPaddingLeft: 8,
    poppAccessoryCheckColor: '#007aff',
    menuColor: 'rgba(64, 64, 64, 0.9)',
    menuShadowColor: '#333',
    menuDirectionInsets: 4,
    menuItemColor: 'rgba(0, 0, 0, 0)',
    menuItemPaddingLeft: 16,
    menuItemPaddingRight: 16,
    menuItemPaddingTop: 12,
    menuItemPaddingBottom: 12,
    menuItemTitleColor: '#fff',
    menuItemFontSize: 14,
    menuItemSeparatorWidth: pixelSize,
    menuItemSeparatorColor: '#212121',
    menuItemIconWidth: 16,
    menuItemIconHeight: 16,
    menuItemIconColor: '#fff',
    menuItemIconPaddingRight: 12,
    miIndicatorColor: '#fff',
    miTextColor: '#fff',
    miFontSize: 15,
    miTextPaddingTop: 12,
    miScreenPaddingLeft: 40,
    miScreenPaddingRight: 40,
    miScreenPaddingTop: 100,
    miScreenPaddingBottom: 80,
    backButtonTitle: 'Back'
  };
},11402,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/themes/ThemeBlack.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0]);

  var primaryColor = '#e64692';
  var secondaryColor = '#bf7bfd';
  var defaultColor = '#292f4f';
  var defaultTextColor = '#898d9e';

  var pixelSize = function () {
    var pixelRatio = _reactNative.PixelRatio.get();

    if (pixelRatio >= 3) return 0.333;else if (pixelRatio >= 2) return 0.5;else return 1;
  }();

  exports.default = {
    screenColor: '#000',
    primaryColor: primaryColor,
    secondaryColor: secondaryColor,
    defaultColor: defaultColor,
    defaultTextColor: defaultTextColor,
    pageColor: '#20253f',
    pixelSize: pixelSize,
    labelTextColor: defaultTextColor,
    labelTextTitleColor: '#afb1bd',
    labelTextDetailColor: '#5e637b',
    labelTextDangerColor: '#e34043',
    labelFontSizeXL: 26,
    labelFontSizeLG: 20,
    labelFontSizeMD: 14,
    labelFontSizeSM: 10,
    labelFontSizeXS: 8,
    labelTitleScale: 1.1,
    labelDetailScale: 0.9,
    labelDangerScale: 1,
    btnColor: defaultColor,
    btnPrimaryColor: primaryColor,
    btnSecondaryColor: secondaryColor,
    btnDangerColor: '#e34043',
    btnLinkColor: 'rgba(0, 0, 0, 0)',
    btnTitleColor: primaryColor,
    btnPrimaryTitleColor: '#c1c2cc',
    btnSecondaryTitleColor: '#c1c2cc',
    btnDangerTitleColor: '#c1c2cc',
    btnLinkTitleColor: primaryColor,
    btnBorderColor: primaryColor,
    btnPrimaryBorderColor: primaryColor,
    btnSecondaryBorderColor: secondaryColor,
    btnDangerBorderColor: '#e34043',
    btnLinkBorderColor: 'rgba(0, 0, 0, 0)',
    btnBorderWidth: 1,
    btnBorderRadiusXL: 6,
    btnBorderRadiusLG: 6,
    btnBorderRadiusMD: 4,
    btnBorderRadiusSM: 3,
    btnBorderRadiusXS: 3,
    btnFontSizeXL: 29,
    btnFontSizeLG: 22,
    btnFontSizeMD: 15,
    btnFontSizeSM: 11,
    btnFontSizeXS: 9,
    btnPaddingVerticalXL: 8,
    btnPaddingVerticalLG: 8,
    btnPaddingVerticalMD: 6,
    btnPaddingVerticalSM: 4,
    btnPaddingVerticalXS: 2,
    btnPaddingHorizontalXL: 20,
    btnPaddingHorizontalLG: 16,
    btnPaddingHorizontalMD: 12,
    btnPaddingHorizontalSM: 8,
    btnPaddingHorizontalXS: 4,
    btnDisabledOpacity: 0.65,
    cbTitleColor: defaultTextColor,
    cbFontSizeLG: 20,
    cbFontSizeMD: 14,
    cbFontSizeSM: 10,
    cbTitlePaddingLeftLG: 8,
    cbTitlePaddingLeftMD: 6,
    cbTitlePaddingLeftSM: 4,
    cbCheckedTintColor: '#ccc',
    cbUncheckedTintColor: '#333858',
    cbIconSizeLG: 18,
    cbIconSizeMD: 13,
    cbIconSizeSM: 10,
    cbDisabledOpacity: 0.65,
    inputColor: defaultColor,
    inputTextColor: defaultTextColor,
    inputPlaceholderTextColor: '#626683',
    inputBorderColor: '#333858',
    inputBorderWidth: 1,
    inputBorderRadiusLG: 6,
    inputBorderRadiusMD: 4,
    inputBorderRadiusSM: 3,
    inputFontSizeLG: 18,
    inputFontSizeMD: 14,
    inputFontSizeSM: 12,
    inputPaddingVerticalLG: 8,
    inputPaddingVerticalMD: 6,
    inputPaddingVerticalSM: 5,
    inputPaddingHorizontalLG: 16,
    inputPaddingHorizontalMD: 12,
    inputPaddingHorizontalSM: 10,
    inputHeightLG: 46,
    inputHeightMD: 34,
    inputHeightSM: 30,
    inputDisabledOpacity: 0.65,
    selectColor: defaultColor,
    selectTextColor: defaultTextColor,
    selectPlaceholderTextColor: '#626683',
    selectBorderColor: '#333858',
    selectBorderWidth: 1,
    selectBorderRadiusLG: 6,
    selectBorderRadiusMD: 4,
    selectBorderRadiusSM: 3,
    selectFontSizeLG: 18,
    selectFontSizeMD: 14,
    selectFontSizeSM: 12,
    selectPaddingTopLG: 8,
    selectPaddingTopMD: 6,
    selectPaddingTopSM: 5,
    selectPaddingBottomLG: 8,
    selectPaddingBottomMD: 6,
    selectPaddingBottomSM: 5,
    selectPaddingLeftLG: 16,
    selectPaddingLeftMD: 12,
    selectPaddingLeftSM: 10,
    selectPaddingRightLG: 26,
    selectPaddingRightMD: 20,
    selectPaddingRightSM: 16,
    selectHeightLG: 46,
    selectHeightMD: 34,
    selectHeightSM: 30,
    selectIconSizeLG: 20,
    selectIconSizeMD: 15,
    selectIconSizeSM: 12,
    selectIconTintColor: '#777',
    selectDisabledOpacity: 0.65,
    stepperColor: defaultColor,
    stepperBorderColor: '#333858',
    stepperBorderWidth: 1,
    stepperBorderRadius: 2,
    stepperTextColor: defaultTextColor,
    stepperFontSize: 13,
    stepperBtnTextColor: defaultTextColor,
    stepperBtnFontSize: 13,
    stepperValueMinWidth: 40,
    stepperValuePaddingHorizontal: 8,
    stepperButtonWidth: 20,
    stepperButtonHeight: 20,
    stepperDisabledOpacity: 0.35,
    siColor: defaultColor,
    siTextColor: defaultTextColor,
    siPlaceholderTextColor: '#626683',
    siBorderColor: '#333858',
    siBorderWidth: 1,
    siBorderRadius: 3,
    siFontSize: 13,
    siPaddingVertical: 4,
    siPaddingHorizontal: 6,
    siHeight: 28,
    siIconSize: 12,
    siDisabledOpacity: 0.65,
    badgeSize: 18,
    badgeDotSize: 6,
    badgePadding: 5,
    badgeColor: '#d3aaf6',
    badgeBorderColor: '#f8f8f8',
    badgeBorderWidth: 0,
    badgeTextColor: '#fff',
    badgeFontSize: 11,
    popoverColor: defaultColor,
    popoverBorderColor: 'rgba(0, 0, 0, 0.15)',
    popoverBorderRadius: 4,
    popoverBorderWidth: pixelSize,
    popoverPaddingCorner: 8,
    navType: 'ios',
    navStatusBarStyle: 'light-content',
    navBarContentHeight: 44,
    navColor: '#383b5d',
    navTintColor: '#a3a4b3',
    navTitleColor: '#c1c2cc',
    navTitleFontSize: 18,
    navButtonFontSize: 15,
    navSeparatorColor: '#252a46',
    navSeparatorLineWidth: pixelSize,
    sbColor: defaultColor,
    sbHeight: 40,
    sbBtnPaddingTop: 8,
    sbBtnPaddingBottom: 8,
    sbBtnPaddingLeft: 8,
    sbBtnPaddingRight: 8,
    sbBtnTitleColor: '#989898',
    sbBtnTextFontSize: 13,
    sbBtnActiveTitleColor: primaryColor,
    sbBtnActiveTextFontSize: 13,
    sbIndicatorLineColor: primaryColor,
    sbIndicatorLineWidth: 2,
    sbIndicatorPositionPadding: 0,
    tvBarColor: '#383b5d',
    tvBarHeight: 49,
    tvBarPaddingTop: 2,
    tvBarPaddingBottom: 2,
    tvBarSeparatorWidth: 0,
    tvBarSeparatorColor: 'rgba(0, 0, 0, 0)',
    tvBarBtnWidth: 44,
    tvBarBtnIconSize: 22,
    tvBarBtnIconTintColor: '#626683',
    tvBarBtnIconActiveTintColor: '#c1c2cc',
    tvBarBtnTitleColor: '#626683',
    tvBarBtnTextFontSize: 10,
    tvBarBtnActiveTitleColor: '#c1c2cc',
    tvBarBtnActiveTextFontSize: 10,
    rowColor: defaultColor,
    rowMinHeight: 44,
    rowPaddingLeft: 12,
    rowPaddingRight: 12,
    rowPaddingTop: 8,
    rowPaddingBottom: 8,
    rowIconWidth: 20,
    rowIconHeight: 20,
    rowIconPaddingRight: 12,
    rowAccessoryWidth: 10,
    rowAccessoryHeight: 10,
    rowAccessoryPaddingLeft: 8,
    rowAccessoryCheckColor: '#007aff',
    rowAccessoryIndicatorColor: '#a7aab7',
    rowSeparatorColor: '#333858',
    rowSeparatorLineWidth: pixelSize,
    rowPaddingTitleDetail: 4,
    rowDetailLineHeight: 18,
    rowActionButtonColor: '#494f6f',
    rowActionButtonDangerColor: '#e34043',
    rowActionButtonTitleColor: '#fff',
    rowActionButtonDangerTitleColor: '#fff',
    rowActionButtonTitleFontSize: 15,
    rowActionButtonPaddingHorizontal: 12,
    carouselDotSize: 9,
    carouselDotUseSize: 16,
    carouselDotColor: 'rgba(255, 255, 255, 0.4)',
    carouselActiveDotColor: 'rgba(255, 255, 255, 0.85)',
    wheelColor: defaultColor,
    wheelFontSize: 14,
    wheelTextColor: defaultTextColor,
    wheelHoleHeight: 28,
    wheelHoleLineWidth: pixelSize,
    wheelHoleLineColor: '#494d5e',
    wheelMaskColor: defaultColor,
    wheelMaskOpacity: 0.4,
    overlayOpacity: 0.4,
    overlayRootScale: 0.93,
    toastColor: 'rgba(0, 0, 0, 0.8)',
    toastPaddingLeft: 12,
    toastPaddingRight: 12,
    toastPaddingTop: 8,
    toastPaddingBottom: 8,
    toastBorderRadius: 4,
    toastIconTintColor: '#ddd',
    toastIconWidth: 40,
    toastIconHeight: 40,
    toastIconPaddingTop: 8,
    toastIconPaddingBottom: 8,
    toastTextColor: '#ddd',
    toastFontSize: 15,
    toastScreenPaddingLeft: 40,
    toastScreenPaddingRight: 40,
    toastScreenPaddingTop: 100,
    toastScreenPaddingBottom: 80,
    asItemDisabledOpacity: 0.65,
    asItemMinHeight: 53,
    asItemPaddingLeft: 12,
    asItemPaddingRight: 12,
    asItemPaddingTop: 8,
    asItemPaddingBottom: 8,
    asItemColor: 'rgba(90, 74, 124, 0.9)',
    asItemSeparatorColor: 'rgba(0, 0, 0, 0.3)',
    asItemSeparatorLineWidth: pixelSize,
    asItemTitleColor: '#c1c2cc',
    asItemTitleAlign: 'center',
    asItemFontSize: 19,
    asCancelItemColor: 'rgba(90, 74, 124, 0.9)',
    asCancelItemSeparatorColor: 'rgba(0, 0, 0, 0.3)',
    asCancelItemSeparatorLineWidth: 7,
    asCancelItemTitleColor: '#e34043',
    asCancelItemTitleAlign: 'center',
    asCancelItemFontSize: 19,
    apColor: 'rgba(90, 74, 124, 0.9)',
    apPaddingVertical: 0,
    apPaddingHorizontal: 4,
    apBorderRadius: 8,
    apDirectionInsets: 4,
    apItemTitleColor: '#c1c2cc',
    apItemFontSize: 14,
    apItemPaddingVertical: 8,
    apItemPaddingHorizontal: 12,
    apSeparatorColor: '#333858',
    apSeparatorWidth: pixelSize,
    pupColor: '#292f4f',
    pupMaxHeight: 258,
    pupHeaderColor: 'rgba(90, 74, 124, 0.9)',
    pupHeaderPaddingLeft: 12,
    pupHeaderPaddingRight: 12,
    pupHeaderPaddingTop: 12,
    pupHeaderPaddingBottom: 12,
    pupHeaderTitleColor: '#c1c2cc',
    pupHeaderFontSize: 16,
    pupHeaderFontWeight: 'bold',
    pupHeaderSeparatorColor: '#292f4f',
    pupHeaderSeparatorHeight: 8,
    pupItemColor: 'rgba(90, 74, 124, 0.9)',
    pupSeparatorColor: '#333858',
    poppColor: 'rgba(90, 74, 124, 0.9)',
    poppShadowColor: '#333',
    poppMinWidth: 120,
    poppMaxWidth: 260,
    poppMinHeight: 44,
    poppMaxHeight: 246,
    poppDirectionInsets: 4,
    poppItemColor: 'rgba(0, 0, 0, 0)',
    poppItemPaddingLeft: 12,
    poppItemPaddingRight: 12,
    poppItemPaddingTop: 8,
    poppItemPaddingBottom: 8,
    poppItemTitleColor: defaultTextColor,
    poppItemFontSize: 14,
    poppItemSeparatorWidth: pixelSize,
    poppItemSeparatorColor: '#292f4f',
    poppAccessoryWidth: 10,
    poppAccessoryHeight: 10,
    poppAccessoryPaddingLeft: 8,
    poppAccessoryCheckColor: '#007aff',
    menuColor: 'rgba(90, 74, 124, 0.9)',
    menuShadowColor: '#333',
    menuDirectionInsets: 4,
    menuItemColor: 'rgba(0, 0, 0, 0)',
    menuItemPaddingLeft: 16,
    menuItemPaddingRight: 16,
    menuItemPaddingTop: 12,
    menuItemPaddingBottom: 12,
    menuItemTitleColor: '#c1c2cc',
    menuItemFontSize: 14,
    menuItemSeparatorWidth: pixelSize,
    menuItemSeparatorColor: '#292f4f',
    menuItemIconWidth: 16,
    menuItemIconHeight: 16,
    menuItemIconColor: '#c1c2cc',
    menuItemIconPaddingRight: 12,
    miIndicatorColor: '#c1c2cc',
    miTextColor: '#c1c2cc',
    miFontSize: 15,
    miTextPaddingTop: 12,
    miScreenPaddingLeft: 40,
    miScreenPaddingRight: 40,
    miScreenPaddingTop: 100,
    miScreenPaddingBottom: 80,
    backButtonTitle: 'Back'
  };
},11405,[10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/themes/ThemeViolet.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _reactNative2 = babelHelpers.interopRequireDefault(_reactNative);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _KeyboardSpace = _require(_dependencyMap[3]);

  var _KeyboardSpace2 = babelHelpers.interopRequireDefault(_KeyboardSpace);

  var _CommonYeelightModules = _require(_dependencyMap[4]);

  var OverlayView = function (_Component) {
    babelHelpers.inherits(OverlayView, _Component);

    function OverlayView(props) {
      babelHelpers.classCallCheck(this, OverlayView);

      var _this = babelHelpers.possibleConstructorReturn(this, (OverlayView.__proto__ || Object.getPrototypeOf(OverlayView)).call(this, props));

      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(e, gestureState) {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, gestureState) {
          return _this.touchStateID = gestureState.stateID;
        },
        onPanResponderRelease: function onPanResponderRelease(e, gestureState) {
          return _this.touchStateID == gestureState.stateID ? _this.closeRequest() : null;
        }
      });
      _this.state = {
        overlayOpacity: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    babelHelpers.createClass(OverlayView, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        {
          var BackHandler = _reactNative2.default.BackHandler ? _reactNative2.default.BackHandler : _reactNative2.default.BackAndroid;
          this.backListener = BackHandler.addEventListener('hardwareBackPress', function () {
            if (_this2.props.closeOnHardwareBackPress) {
              _this2.closeRequest();

              return true;
            } else {
              return false;
            }
          });
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.appearAfterMount && this.appear();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.removeBackListener();
      }
    }, {
      key: "removeBackListener",
      value: function removeBackListener() {
        if (this.backListener) {
          this.backListener.remove();
          this.backListener = null;
        }
      }
    }, {
      key: "appear",
      value: function appear() {
        var _this3 = this;

        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;
        var additionAnimates = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        if (animated) {
          this.state.overlayOpacity.setValue(0);

          _reactNative.Animated.parallel(this.appearAnimates.concat(additionAnimates)).start(function (e) {
            return _this3.appearCompleted();
          });
        } else {
          this.state.overlayOpacity.setValue(this.overlayOpacity);
          this.appearCompleted();
        }
      }
    }, {
      key: "disappear",
      value: function disappear() {
        var _this4 = this;

        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;
        var additionAnimates = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

        if (animated) {
          _reactNative.Animated.parallel(this.disappearAnimates.concat(additionAnimates)).start(function (e) {
            return _this4.disappearCompleted();
          });

          this.state.overlayOpacity.addListener(function (e) {
            if (e.value < 0.01) {
              _this4.state.overlayOpacity.stopAnimation();

              _this4.state.overlayOpacity.removeAllListeners();
            }
          });
        } else {
          this.disappearCompleted();
        }
      }
    }, {
      key: "appearCompleted",
      value: function appearCompleted() {
        var onAppearCompleted = this.props.onAppearCompleted;
        onAppearCompleted && onAppearCompleted();
      }
    }, {
      key: "disappearCompleted",
      value: function disappearCompleted() {
        var onDisappearCompleted = this.props.onDisappearCompleted;
        onDisappearCompleted && onDisappearCompleted();
      }
    }, {
      key: "close",
      value: function close() {
        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;
        if (this.closed) return true;
        this.closed = true;
        this.removeBackListener();
        this.disappear(animated);
        return true;
      }
    }, {
      key: "closeRequest",
      value: function closeRequest() {
        var _props = this.props,
            modal = _props.modal,
            onCloseRequest = _props.onCloseRequest;
        if (onCloseRequest) onCloseRequest(this);else if (!modal) this.close();
      }
    }, {
      key: "buildStyle",
      value: function buildStyle() {
        var style = this.props.style;
        style = [{
          backgroundColor: 'rgba(0, 0, 0, 0)',
          flex: 1
        }].concat(style);
        return style;
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        return this.props.children;
      }
    }, {
      key: "render",
      value: function render() {
        var autoKeyboardInsets = this.props.autoKeyboardInsets;
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: styles.screen,
            pointerEvents: this.overlayPointerEvents
          },
          _react2.default.createElement(_reactNative.Animated.View, babelHelpers.extends({
            style: [styles.screen, {
              backgroundColor: '#000',
              opacity: this.state.overlayOpacity
            }]
          }, this.panResponder.panHandlers)),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: this.buildStyle(),
              pointerEvents: "box-none"
            },
            this.renderContent()
          ),
          autoKeyboardInsets ? _react2.default.createElement(_KeyboardSpace2.default, null) : null
        );
      }
    }, {
      key: "overlayOpacity",
      get: function get() {
        var overlayOpacity = this.props.overlayOpacity;
        return overlayOpacity || overlayOpacity === 0 ? overlayOpacity : _Theme2.default.overlayOpacity;
      }
    }, {
      key: "appearAnimates",
      get: function get() {
        var duration = 200;
        var animates = [_reactNative.Animated.timing(this.state.overlayOpacity, {
          toValue: this.overlayOpacity,
          duration: duration
        })];
        return animates;
      }
    }, {
      key: "disappearAnimates",
      get: function get() {
        var duration = 200;
        var animates = [_reactNative.Animated.timing(this.state.overlayOpacity, {
          toValue: 0,
          duration: duration
        })];
        return animates;
      }
    }, {
      key: "appearAfterMount",
      get: function get() {
        return true;
      }
    }, {
      key: "overlayPointerEvents",
      get: function get() {
        return this.props.overlayPointerEvents;
      }
    }]);
    return OverlayView;
  }(_react.Component);

  OverlayView.propTypes = {
    style: _reactNative.ViewPropTypes.style,
    modal: _CommonYeelightModules.PropTypes.bool,
    animated: _CommonYeelightModules.PropTypes.bool,
    overlayOpacity: _CommonYeelightModules.PropTypes.number,
    overlayPointerEvents: _reactNative.ViewPropTypes.pointerEvents,
    autoKeyboardInsets: _CommonYeelightModules.PropTypes.bool,
    closeOnHardwareBackPress: _CommonYeelightModules.PropTypes.bool,
    onAppearCompleted: _CommonYeelightModules.PropTypes.func,
    onDisappearCompleted: _CommonYeelightModules.PropTypes.func,
    onCloseRequest: _CommonYeelightModules.PropTypes.func
  };
  OverlayView.defaultProps = {
    modal: false,
    animated: false,
    overlayPointerEvents: 'auto',
    autoKeyboardInsets: false,
    closeOnHardwareBackPress: true
  };
  exports.default = OverlayView;

  var styles = _reactNative.StyleSheet.create({
    screen: {
      backgroundColor: 'rgba(0, 0, 0, 0)',
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }
  });
},11408,[10297,10033,11396,11411,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/OverlayView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _CommonYeelightModules = _require(_dependencyMap[2]);

  var KeyboardSpace = function (_Component) {
    babelHelpers.inherits(KeyboardSpace, _Component);

    function KeyboardSpace(props) {
      babelHelpers.classCallCheck(this, KeyboardSpace);

      var _this = babelHelpers.possibleConstructorReturn(this, (KeyboardSpace.__proto__ || Object.getPrototypeOf(KeyboardSpace)).call(this, props));

      _this.showListener = null;
      _this.hideListener = null;
      _this.state = {
        keyboardHeight: 0
      };
      return _this;
    }

    babelHelpers.createClass(KeyboardSpace, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (!this.showListener) {
          var name = 'keyboardDidShow';
          this.showListener = _reactNative.Keyboard.addListener(name, function (e) {
            return _this2.onKeyboardShow(e);
          });
        }

        if (!this.hideListener) {
          var _name = 'keyboardDidHide';
          this.hideListener = _reactNative.Keyboard.addListener(_name, function () {
            return _this2.onKeyboardHide();
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.showListener) {
          this.showListener.remove();
          this.showListener = null;
        }

        if (this.hideListener) {
          this.hideListener.remove();
          this.hideListener = null;
        }
      }
    }, {
      key: "componentWillUpdate",
      value: function componentWillUpdate(props, state) {
        if (state.keyboardHeight !== this.state.keyboardHeight) {
          _reactNative.LayoutAnimation.configureNext({
            duration: 500,
            create: {
              duration: 300,
              type: _reactNative.LayoutAnimation.Types.easeInEaseOut,
              property: _reactNative.LayoutAnimation.Properties.opacity
            },
            update: {
              type: _reactNative.LayoutAnimation.Types.spring,
              springDamping: 200
            }
          });
        }
      }
    }, {
      key: "onKeyboardShow",
      value: function onKeyboardShow(e) {
        if (!e || !e.endCoordinates || !e.endCoordinates.height) return;
        var height = e.endCoordinates.height + (this.props.topInsets ? this.props.topInsets : 0);
        this.setState({
          keyboardHeight: height
        });
      }
    }, {
      key: "onKeyboardHide",
      value: function onKeyboardHide() {
        this.setState({
          keyboardHeight: 0
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(_reactNative.View, {
          style: [styles.keyboardSpace, {
            height: this.state.keyboardHeight
          }]
        });
      }
    }]);
    return KeyboardSpace;
  }(_react.Component);

  KeyboardSpace.propTypes = {
    topInsets: _CommonYeelightModules.PropTypes.number
  };
  KeyboardSpace.defaultProps = {
    topInsets: 0
  };
  exports.default = KeyboardSpace;

  var styles = _reactNative.StyleSheet.create({
    keyboardSpace: {
      backgroundColor: 'rgba(0, 0, 0, 0)',
      left: 0,
      right: 0,
      bottom: 0
    }
  });
},11411,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/KeyboardSpace/KeyboardSpace.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _CommonYeelightModules = _require(_dependencyMap[0]);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _Theme = _require(_dependencyMap[3]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _TopView = _require(_dependencyMap[4]);

  var _TopView2 = babelHelpers.interopRequireDefault(_TopView);

  var _OverlayView2 = _require(_dependencyMap[5]);

  var _OverlayView3 = babelHelpers.interopRequireDefault(_OverlayView2);

  var OverlayPullView = function (_OverlayView) {
    babelHelpers.inherits(OverlayPullView, _OverlayView);

    function OverlayPullView(props) {
      babelHelpers.classCallCheck(this, OverlayPullView);

      var _this = babelHelpers.possibleConstructorReturn(this, (OverlayPullView.__proto__ || Object.getPrototypeOf(OverlayPullView)).call(this, props));

      _this.viewLayout = {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
      babelHelpers.extends(_this.state, {
        marginValue: new _reactNative.Animated.Value(0),
        showed: false
      });
      return _this;
    }

    babelHelpers.createClass(OverlayPullView, [{
      key: "appear",
      value: function appear() {
        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;

        if (animated) {
          this.state.marginValue.setValue(this.marginSize);
        }

        babelHelpers.get(OverlayPullView.prototype.__proto__ || Object.getPrototypeOf(OverlayPullView.prototype), "appear", this).call(this, animated);
        var rootTransform = this.props.rootTransform;

        if (rootTransform && rootTransform !== 'none') {
          _TopView2.default.transform(this.rootTransformValue, animated);
        }
      }
    }, {
      key: "disappear",
      value: function disappear() {
        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;
        var rootTransform = this.props.rootTransform;

        if (rootTransform && rootTransform !== 'none') {
          _TopView2.default.restore(animated);
        }

        babelHelpers.get(OverlayPullView.prototype.__proto__ || Object.getPrototypeOf(OverlayPullView.prototype), "disappear", this).call(this, animated);
      }
    }, {
      key: "onLayout",
      value: function onLayout(e) {
        this.viewLayout = e.nativeEvent.layout;

        if (!this.state.showed) {
          this.setState({
            showed: true
          });
          this.appear();
        }
      }
    }, {
      key: "buildStyle",
      value: function buildStyle() {
        var side = this.props.side;
        var sideStyle = void 0;

        switch (side) {
          case 'top':
            sideStyle = {
              flexDirection: 'column',
              justifyContent: 'flex-start',
              alignItems: 'stretch'
            };
            break;

          case 'left':
            sideStyle = {
              flexDirection: 'row',
              justifyContent: 'flex-start',
              alignItems: 'stretch'
            };
            break;

          case 'right':
            sideStyle = {
              flexDirection: 'row',
              justifyContent: 'flex-end',
              alignItems: 'stretch'
            };
            break;

          default:
            sideStyle = {
              flexDirection: 'column',
              justifyContent: 'flex-end',
              alignItems: 'stretch'
            };
        }

        return babelHelpers.get(OverlayPullView.prototype.__proto__ || Object.getPrototypeOf(OverlayPullView.prototype), "buildStyle", this).call(this).concat(sideStyle);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var _props = this.props,
            side = _props.side,
            containerStyle = _props.containerStyle,
            children = _props.children;
        var contentStyle = void 0;

        switch (side) {
          case 'top':
            contentStyle = {
              marginTop: this.state.marginValue
            };
            break;

          case 'left':
            contentStyle = {
              marginLeft: this.state.marginValue
            };
            break;

          case 'right':
            contentStyle = {
              marginRight: this.state.marginValue
            };
            break;

          default:
            contentStyle = {
              marginBottom: this.state.marginValue
            };
        }

        contentStyle.opacity = this.state.showed ? 1 : 0;
        containerStyle = [{
          backgroundColor: _Theme2.default.defaultColor
        }].concat(containerStyle).concat(contentStyle);
        return _react2.default.createElement(
          _reactNative.Animated.View,
          {
            style: containerStyle,
            onLayout: function onLayout(e) {
              return _this2.onLayout(e);
            }
          },
          content ? content : children
        );
      }
    }, {
      key: "appearAnimates",
      get: function get() {
        var animates = babelHelpers.get(OverlayPullView.prototype.__proto__ || Object.getPrototypeOf(OverlayPullView.prototype), "appearAnimates", this);
        animates.push(_reactNative.Animated.spring(this.state.marginValue, {
          toValue: 0,
          friction: 9
        }));
        return animates;
      }
    }, {
      key: "disappearAnimates",
      get: function get() {
        var animates = babelHelpers.get(OverlayPullView.prototype.__proto__ || Object.getPrototypeOf(OverlayPullView.prototype), "disappearAnimates", this);
        animates.push(_reactNative.Animated.spring(this.state.marginValue, {
          toValue: this.marginSize,
          friction: 9
        }));
        return animates;
      }
    }, {
      key: "appearAfterMount",
      get: function get() {
        return false;
      }
    }, {
      key: "marginSize",
      get: function get() {
        var side = this.props.side;
        if (side === 'left' || side === 'right') return -this.viewLayout.width;else return -this.viewLayout.height;
      }
    }, {
      key: "rootTransformValue",
      get: function get() {
        var _props2 = this.props,
            side = _props2.side,
            rootTransform = _props2.rootTransform;

        if (!rootTransform || rootTransform === 'none') {
          return [];
        }

        var transform = void 0;

        switch (rootTransform) {
          case 'translate':
            switch (side) {
              case 'top':
                return [{
                  translateY: this.viewLayout.height
                }];

              case 'left':
                return [{
                  translateX: this.viewLayout.width
                }];

              case 'right':
                return [{
                  translateX: -this.viewLayout.width
                }];

              default:
                return [{
                  translateY: -this.viewLayout.height
                }];
            }

            break;

          case 'scale':
            return [{
              scaleX: _Theme2.default.overlayRootScale
            }, {
              scaleY: _Theme2.default.overlayRootScale
            }];

          default:
            return rootTransform;
        }
      }
    }]);
    return OverlayPullView;
  }(_OverlayView3.default);

  OverlayPullView.propTypes = babelHelpers.extends({}, _OverlayView3.default.propTypes, {
    side: _CommonYeelightModules.PropTypes.oneOf(['top', 'bottom', 'left', 'right']),
    containerStyle: _reactNative.ViewPropTypes.style,
    rootTransform: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.oneOf(['none', 'translate', 'scale']), _CommonYeelightModules.PropTypes.arrayOf(_CommonYeelightModules.PropTypes.shape({
      translateX: _CommonYeelightModules.PropTypes.number,
      translateY: _CommonYeelightModules.PropTypes.number,
      scaleX: _CommonYeelightModules.PropTypes.number,
      scaleY: _CommonYeelightModules.PropTypes.number
    }))])
  });
  OverlayPullView.defaultProps = babelHelpers.extends({}, _OverlayView3.default.defaultProps, {
    side: 'bottom',
    animated: true,
    rootTransform: 'none'
  });
  exports.default = OverlayPullView;
},11414,[10007,10297,10033,11396,11393,11408],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/OverlayPullView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _CommonYeelightModules = _require(_dependencyMap[0]);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _OverlayView2 = _require(_dependencyMap[3]);

  var _OverlayView3 = babelHelpers.interopRequireDefault(_OverlayView2);

  var OverlayPopView = function (_OverlayView) {
    babelHelpers.inherits(OverlayPopView, _OverlayView);

    function OverlayPopView(props) {
      babelHelpers.classCallCheck(this, OverlayPopView);

      var _this = babelHelpers.possibleConstructorReturn(this, (OverlayPopView.__proto__ || Object.getPrototypeOf(OverlayPopView)).call(this, props));

      _this.viewLayout = {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
      babelHelpers.extends(_this.state, {
        opacity: new _reactNative.Animated.Value(1),
        translateX: new _reactNative.Animated.Value(0),
        translateY: new _reactNative.Animated.Value(0),
        scaleX: new _reactNative.Animated.Value(1),
        scaleY: new _reactNative.Animated.Value(1),
        showed: false
      });
      return _this;
    }

    babelHelpers.createClass(OverlayPopView, [{
      key: "appear",
      value: function appear() {
        var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.animated;

        if (animated) {
          var _state = this.state,
              opacity = _state.opacity,
              translateX = _state.translateX,
              translateY = _state.translateY,
              scaleX = _state.scaleX,
              scaleY = _state.scaleY;
          var ft = this.fromTransform;
          opacity.setValue(0);
          translateX.setValue(ft.translateX);
          translateY.setValue(ft.translateY);
          scaleX.setValue(ft.scaleX);
          scaleY.setValue(ft.scaleY);
        }

        babelHelpers.get(OverlayPopView.prototype.__proto__ || Object.getPrototypeOf(OverlayPopView.prototype), "appear", this).call(this, animated);
      }
    }, {
      key: "onLayout",
      value: function onLayout(e) {
        this.viewLayout = e.nativeEvent.layout;

        if (!this.state.showed) {
          this.setState({
            showed: true
          });
          this.appear();
        }
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var _props = this.props,
            containerStyle = _props.containerStyle,
            children = _props.children;
        var _state2 = this.state,
            opacity = _state2.opacity,
            translateX = _state2.translateX,
            translateY = _state2.translateY,
            scaleX = _state2.scaleX,
            scaleY = _state2.scaleY;
        containerStyle = [{
          backgroundColor: 'rgba(0, 0, 0, 0)',
          minWidth: 1,
          minHeight: 1
        }].concat(containerStyle).concat({
          opacity: this.state.showed ? opacity : 0,
          transform: [{
            translateX: translateX
          }, {
            translateY: translateY
          }, {
            scaleX: scaleX
          }, {
            scaleY: scaleY
          }]
        });
        return _react2.default.createElement(
          _reactNative.Animated.View,
          {
            style: containerStyle,
            pointerEvents: "box-none",
            onLayout: function onLayout(e) {
              return _this2.onLayout(e);
            }
          },
          content ? content : children
        );
      }
    }, {
      key: "appearAnimates",
      get: function get() {
        var animates = babelHelpers.get(OverlayPopView.prototype.__proto__ || Object.getPrototypeOf(OverlayPopView.prototype), "appearAnimates", this);
        var duration = 200;
        animates = animates.concat([_reactNative.Animated.timing(this.state.opacity, {
          toValue: 1,
          duration: duration
        }), _reactNative.Animated.timing(this.state.translateX, {
          toValue: 0,
          duration: duration
        }), _reactNative.Animated.timing(this.state.translateY, {
          toValue: 0,
          duration: duration
        }), _reactNative.Animated.timing(this.state.scaleX, {
          toValue: 1,
          duration: duration
        }), _reactNative.Animated.timing(this.state.scaleY, {
          toValue: 1,
          duration: duration
        })]);
        return animates;
      }
    }, {
      key: "disappearAnimates",
      get: function get() {
        var animates = babelHelpers.get(OverlayPopView.prototype.__proto__ || Object.getPrototypeOf(OverlayPopView.prototype), "disappearAnimates", this);
        var duration = 200;
        var ft = this.fromTransform;
        animates = animates.concat([_reactNative.Animated.timing(this.state.opacity, {
          toValue: 0,
          duration: duration
        }), _reactNative.Animated.timing(this.state.translateX, {
          toValue: ft.translateX,
          duration: duration
        }), _reactNative.Animated.timing(this.state.translateY, {
          toValue: ft.translateY,
          duration: duration
        }), _reactNative.Animated.timing(this.state.scaleX, {
          toValue: ft.scaleX,
          duration: duration
        }), _reactNative.Animated.timing(this.state.scaleY, {
          toValue: ft.scaleY,
          duration: duration
        })]);
        return animates;
      }
    }, {
      key: "appearAfterMount",
      get: function get() {
        return false;
      }
    }, {
      key: "fromBounds",
      get: function get() {
        var _props2 = this.props,
            type = _props2.type,
            customBounds = _props2.customBounds;
        var bounds = void 0;

        if (type === 'custom' && !customBounds) {
          console.error('OverlayPopView: customBounds can not be null when type is "custom"');
        }

        if (type === 'custom' && customBounds) {
          bounds = customBounds;
        } else {
          var zoomRate = type === 'zoomIn' ? 0.3 : 1.2;
          var _viewLayout = this.viewLayout,
              x = _viewLayout.x,
              y = _viewLayout.y,
              width = _viewLayout.width,
              height = _viewLayout.height;
          bounds = {
            x: x - (width * zoomRate - width) / 2,
            y: y - (height * zoomRate - height) / 2,
            width: width * zoomRate,
            height: height * zoomRate
          };
        }

        return bounds;
      }
    }, {
      key: "fromTransform",
      get: function get() {
        var fb = this.fromBounds;
        var tb = this.viewLayout;
        var transform = {
          translateX: fb.x + fb.width / 2 - (tb.x + tb.width / 2),
          translateY: fb.y + fb.height / 2 - (tb.y + tb.height / 2),
          scaleX: fb.width / tb.width,
          scaleY: fb.height / tb.height
        };
        return transform;
      }
    }]);
    return OverlayPopView;
  }(_OverlayView3.default);

  OverlayPopView.propTypes = babelHelpers.extends({}, _OverlayView3.default.propTypes, {
    type: _CommonYeelightModules.PropTypes.oneOf(['zoomOut', 'zoomIn', 'custom']),
    containerStyle: _reactNative.ViewPropTypes.style,
    customBounds: _CommonYeelightModules.PropTypes.shape({
      x: _CommonYeelightModules.PropTypes.number.isRequired,
      y: _CommonYeelightModules.PropTypes.number.isRequired,
      width: _CommonYeelightModules.PropTypes.number.isRequired,
      height: _CommonYeelightModules.PropTypes.number.isRequired
    })
  });
  OverlayPopView.defaultProps = babelHelpers.extends({}, _OverlayView3.default.defaultProps, {
    type: 'zoomOut',
    animated: true
  });
  exports.default = OverlayPopView;
},11417,[10007,10297,10033,11408],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/OverlayPopView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _CommonYeelightModules = _require(_dependencyMap[0]);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _OverlayView2 = _require(_dependencyMap[3]);

  var _OverlayView3 = babelHelpers.interopRequireDefault(_OverlayView2);

  var _Popover = _require(_dependencyMap[4]);

  var _Popover2 = babelHelpers.interopRequireDefault(_Popover);

  var OverlayPopoverView = function (_OverlayView) {
    babelHelpers.inherits(OverlayPopoverView, _OverlayView);

    function OverlayPopoverView(props) {
      babelHelpers.classCallCheck(this, OverlayPopoverView);

      var _this = babelHelpers.possibleConstructorReturn(this, (OverlayPopoverView.__proto__ || Object.getPrototypeOf(OverlayPopoverView)).call(this, props));

      babelHelpers.extends(_this.state, {
        fromBounds: props.fromBounds,
        popoverWidth: null,
        popoverHeight: null
      });
      _this.defaultDirectionInsets = 0;
      return _this;
    }

    babelHelpers.createClass(OverlayPopoverView, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        babelHelpers.get(OverlayPopoverView.prototype.__proto__ || Object.getPrototypeOf(OverlayPopoverView.prototype), "componentWillReceiveProps", this) && babelHelpers.get(OverlayPopoverView.prototype.__proto__ || Object.getPrototypeOf(OverlayPopoverView.prototype), "componentWillReceiveProps", this).call(this, nextProps);

        if (JSON.stringify(nextProps.fromBounds) != JSON.stringify(this.state.fromBounds)) {
          this.setState({
            fromBounds: nextProps.fromBounds
          });
        }
      }
    }, {
      key: "updateFromBounds",
      value: function updateFromBounds(bounds) {
        this.setState({
          fromBounds: bounds
        });
      }
    }, {
      key: "onPopoverLayout",
      value: function onPopoverLayout(e) {
        if (this.state.popoverWidth !== null || this.state.popoverHeight != null) {
          return;
        }

        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        if (width !== this.state.popoverWidth || height !== this.state.popoverHeight) {
          this.setState({
            popoverWidth: width,
            popoverHeight: height
          });
        }
      }
    }, {
      key: "buildPopoverStyle",
      value: function buildPopoverStyle() {
        var _state = this.state,
            fromBounds = _state.fromBounds,
            popoverWidth = _state.popoverWidth,
            popoverHeight = _state.popoverHeight;
        var _props = this.props,
            popoverStyle = _props.popoverStyle,
            direction = _props.direction,
            autoDirection = _props.autoDirection,
            directionInsets = _props.directionInsets,
            align = _props.align,
            alignInsets = _props.alignInsets,
            showArrow = _props.showArrow,
            arrow = _props.arrow;

        if (popoverWidth === null || popoverHeight === null) {
          popoverStyle = [].concat(popoverStyle).concat({
            position: 'absolute',
            left: 0,
            top: 0,
            opacity: 0
          });
          if (!showArrow) arrow = 'none';else {
            switch (direction) {
              case 'right':
                arrow = 'left';
                break;

              case 'left':
                arrow = 'right';
                break;

              case 'up':
                arrow = 'bottom';
                break;

              default:
                arrow = 'top';
                break;
            }
          }
          return {
            popoverStyle: popoverStyle,
            arrow: arrow
          };
        }

        var screenWidth = _reactNative.Dimensions.get('window').width;

        var screenHeight = _reactNative.Dimensions.get('window').height;

        var _ref = fromBounds ? fromBounds : {},
            x = _ref.x,
            y = _ref.y,
            width = _ref.width,
            height = _ref.height;

        if (!x && x !== 0) x = screenWidth / 2;
        if (!y && y !== 0) y = screenHeight / 2;
        if (!width) width = 0;
        if (!height) height = 0;
        if (!directionInsets && directionInsets !== 0) directionInsets = this.defaultDirectionInsets;
        if (!alignInsets) alignInsets = 0;
        var ph = popoverHeight + directionInsets;
        var pw = popoverWidth + directionInsets;

        switch (direction) {
          case 'right':
            if (autoDirection && x + width + pw > screenWidth && x >= pw) direction = 'left';
            break;

          case 'left':
            if (autoDirection && x + width + pw <= screenWidth && x < pw) direction = 'right';
            break;

          case 'up':
            if (autoDirection && y + height + ph <= screenHeight && y < ph) direction = 'down';
            break;

          default:
            if (autoDirection && y + height + ph > screenHeight && y >= ph) direction = 'up';
            break;
        }

        var px = void 0,
            py = void 0;

        switch (direction) {
          case 'right':
            px = x + width + directionInsets;
            arrow = 'left';
            break;

          case 'left':
            px = x - popoverWidth - directionInsets;
            arrow = 'right';
            break;

          case 'up':
            py = y - popoverHeight - directionInsets;
            arrow = 'bottom';
            break;

          default:
            py = y + height + directionInsets;
            arrow = 'top';
            break;
        }

        if (direction == 'down' || direction == 'up') {
          switch (align) {
            case 'start':
              px = x - alignInsets;
              arrow += 'Left';
              break;

            case 'center':
              px = x + width / 2 - popoverWidth / 2;
              break;

            default:
              px = x + width - popoverWidth + alignInsets;
              arrow += 'Right';
              break;
          }
        } else if (direction == 'right' || direction == 'left') {
          switch (align) {
            case 'end':
              py = y + height - popoverHeight + alignInsets;
              arrow += 'Bottom';
              break;

            case 'center':
              py = y + height / 2 - popoverHeight / 2;
              break;

            default:
              py = y - alignInsets;
              arrow += 'Top';
              break;
          }
        }

        popoverStyle = [].concat(popoverStyle).concat({
          position: 'absolute',
          left: px,
          top: py
        });
        if (!showArrow) arrow = 'none';
        return {
          popoverStyle: popoverStyle,
          arrow: arrow
        };
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var _props2 = this.props,
            paddingCorner = _props2.paddingCorner,
            children = _props2.children;

        var _buildPopoverStyle = this.buildPopoverStyle(),
            popoverStyle = _buildPopoverStyle.popoverStyle,
            arrow = _buildPopoverStyle.arrow;

        return _react2.default.createElement(
          _Popover2.default,
          {
            style: popoverStyle,
            arrow: arrow,
            paddingCorner: paddingCorner,
            onLayout: function onLayout(e) {
              return _this2.onPopoverLayout(e);
            }
          },
          content ? content : children
        );
      }
    }]);
    return OverlayPopoverView;
  }(_OverlayView3.default);

  OverlayPopoverView.propTypes = babelHelpers.extends({}, _OverlayView3.default.propTypes, {
    popoverStyle: _Popover2.default.propTypes.style,
    fromBounds: _CommonYeelightModules.PropTypes.shape({
      x: _CommonYeelightModules.PropTypes.number.isRequired,
      y: _CommonYeelightModules.PropTypes.number.isRequired,
      width: _CommonYeelightModules.PropTypes.number,
      height: _CommonYeelightModules.PropTypes.number
    }).isRequired,
    direction: _CommonYeelightModules.PropTypes.oneOf(['down', 'up', 'right', 'left']),
    autoDirection: _CommonYeelightModules.PropTypes.bool,
    directionInsets: _CommonYeelightModules.PropTypes.number,
    align: _CommonYeelightModules.PropTypes.oneOf(['start', 'center', 'end']),
    alignInsets: _CommonYeelightModules.PropTypes.number,
    showArrow: _CommonYeelightModules.PropTypes.bool,
    paddingCorner: _Popover2.default.propTypes.paddingCorner
  });
  OverlayPopoverView.defaultProps = babelHelpers.extends({}, _OverlayView3.default.defaultProps, {
    overlayOpacity: 0,
    direction: 'down',
    autoDirection: true,
    align: 'end',
    showArrow: true
  });
  exports.default = OverlayPopoverView;
},11420,[10007,10297,10033,11408,11423],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Overlay/OverlayPopoverView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _CommonYeelightModules = _require(_dependencyMap[3]);

  var Popover = function (_Component) {
    babelHelpers.inherits(Popover, _Component);

    function Popover(props) {
      babelHelpers.classCallCheck(this, Popover);

      var _this = babelHelpers.possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this, props));

      _this.state = {
        width: 0,
        height: 0
      };
      return _this;
    }

    babelHelpers.createClass(Popover, [{
      key: "filterPopoverStyle",
      value: function filterPopoverStyle(fs, includeRadius) {
        var flexDirection = fs.flexDirection,
            alignItems = fs.alignItems,
            justifyContent = fs.justifyContent,
            margin = fs.margin,
            marginBottom = fs.marginBottom,
            marginHorizontal = fs.marginHorizontal,
            marginLeft = fs.marginLeft,
            marginRight = fs.marginRight,
            marginTop = fs.marginTop,
            marginVertical = fs.marginVertical,
            padding = fs.padding,
            paddingBottom = fs.paddingBottom,
            paddingHorizontal = fs.paddingHorizontal,
            paddingLeft = fs.paddingLeft,
            paddingRight = fs.paddingRight,
            paddingTop = fs.paddingTop,
            paddingVertical = fs.paddingVertical,
            backgroundColor = fs.backgroundColor,
            borderBottomColor = fs.borderBottomColor,
            borderBottomLeftRadius = fs.borderBottomLeftRadius,
            borderBottomRightRadius = fs.borderBottomRightRadius,
            borderBottomWidth = fs.borderBottomWidth,
            borderColor = fs.borderColor,
            borderLeftColor = fs.borderLeftColor,
            borderLeftWidth = fs.borderLeftWidth,
            borderRadius = fs.borderRadius,
            borderRightColor = fs.borderRightColor,
            borderRightWidth = fs.borderRightWidth,
            borderStyle = fs.borderStyle,
            borderTopColor = fs.borderTopColor,
            borderTopLeftRadius = fs.borderTopLeftRadius,
            borderTopRightRadius = fs.borderTopRightRadius,
            borderTopWidth = fs.borderTopWidth,
            borderWidth = fs.borderWidth,
            others = babelHelpers.objectWithoutProperties(fs, ["flexDirection", "alignItems", "justifyContent", "margin", "marginBottom", "marginHorizontal", "marginLeft", "marginRight", "marginTop", "marginVertical", "padding", "paddingBottom", "paddingHorizontal", "paddingLeft", "paddingRight", "paddingTop", "paddingVertical", "backgroundColor", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomWidth", "borderColor", "borderLeftColor", "borderLeftWidth", "borderRadius", "borderRightColor", "borderRightWidth", "borderStyle", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopWidth", "borderWidth"]);
        var style = includeRadius ? babelHelpers.extends({
          borderBottomLeftRadius: borderBottomLeftRadius,
          borderBottomRightRadius: borderBottomRightRadius,
          borderRadius: borderRadius,
          borderTopLeftRadius: borderTopLeftRadius,
          borderTopRightRadius: borderTopRightRadius
        }, others) : babelHelpers.extends({}, others);

        for (var key in style) {
          if (style[key] === undefined) {
            delete style[key];
          }
        }

        return style;
      }
    }, {
      key: "filterContentStyle",
      value: function filterContentStyle(fs) {
        var flexDirection = fs.flexDirection,
            alignItems = fs.alignItems,
            justifyContent = fs.justifyContent,
            margin = fs.margin,
            marginBottom = fs.marginBottom,
            marginHorizontal = fs.marginHorizontal,
            marginLeft = fs.marginLeft,
            marginRight = fs.marginRight,
            marginTop = fs.marginTop,
            marginVertical = fs.marginVertical,
            padding = fs.padding,
            paddingBottom = fs.paddingBottom,
            paddingHorizontal = fs.paddingHorizontal,
            paddingLeft = fs.paddingLeft,
            paddingRight = fs.paddingRight,
            paddingTop = fs.paddingTop,
            paddingVertical = fs.paddingVertical,
            backgroundColor = fs.backgroundColor,
            borderBottomColor = fs.borderBottomColor,
            borderBottomLeftRadius = fs.borderBottomLeftRadius,
            borderBottomRightRadius = fs.borderBottomRightRadius,
            borderBottomWidth = fs.borderBottomWidth,
            borderColor = fs.borderColor,
            borderLeftColor = fs.borderLeftColor,
            borderLeftWidth = fs.borderLeftWidth,
            borderRadius = fs.borderRadius,
            borderRightColor = fs.borderRightColor,
            borderRightWidth = fs.borderRightWidth,
            borderStyle = fs.borderStyle,
            borderTopColor = fs.borderTopColor,
            borderTopLeftRadius = fs.borderTopLeftRadius,
            borderTopRightRadius = fs.borderTopRightRadius,
            borderTopWidth = fs.borderTopWidth,
            borderWidth = fs.borderWidth,
            others = babelHelpers.objectWithoutProperties(fs, ["flexDirection", "alignItems", "justifyContent", "margin", "marginBottom", "marginHorizontal", "marginLeft", "marginRight", "marginTop", "marginVertical", "padding", "paddingBottom", "paddingHorizontal", "paddingLeft", "paddingRight", "paddingTop", "paddingVertical", "backgroundColor", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomWidth", "borderColor", "borderLeftColor", "borderLeftWidth", "borderRadius", "borderRightColor", "borderRightWidth", "borderStyle", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopWidth", "borderWidth"]);
        var style = {
          flexDirection: flexDirection,
          alignItems: alignItems,
          justifyContent: justifyContent,
          margin: margin,
          marginBottom: marginBottom,
          marginHorizontal: marginHorizontal,
          marginLeft: marginLeft,
          marginRight: marginRight,
          marginTop: marginTop,
          marginVertical: marginVertical,
          padding: padding,
          paddingBottom: paddingBottom,
          paddingHorizontal: paddingHorizontal,
          paddingLeft: paddingLeft,
          paddingRight: paddingRight,
          paddingTop: paddingTop,
          paddingVertical: paddingVertical,
          backgroundColor: backgroundColor,
          borderBottomColor: borderBottomColor,
          borderBottomLeftRadius: borderBottomLeftRadius,
          borderBottomRightRadius: borderBottomRightRadius,
          borderBottomWidth: borderBottomWidth,
          borderColor: borderColor,
          borderLeftColor: borderLeftColor,
          borderLeftWidth: borderLeftWidth,
          borderRadius: borderRadius,
          borderRightColor: borderRightColor,
          borderRightWidth: borderRightWidth,
          borderStyle: borderStyle,
          borderTopColor: borderTopColor,
          borderTopLeftRadius: borderTopLeftRadius,
          borderTopRightRadius: borderTopRightRadius,
          borderTopWidth: borderTopWidth,
          borderWidth: borderWidth
        };

        for (var key in style) {
          if (style[key] === undefined) {
            delete style[key];
          }
        }

        return style;
      }
    }, {
      key: "buildProps",
      value: function buildProps() {
        var _props = this.props,
            style = _props.style,
            arrow = _props.arrow,
            paddingCorner = _props.paddingCorner,
            headerStyle = _props.headerStyle,
            arrowStyle = _props.arrowStyle,
            contentStyle = _props.contentStyle,
            popoverStyle = _props.popoverStyle,
            others = babelHelpers.objectWithoutProperties(_props, ["style", "arrow", "paddingCorner", "headerStyle", "arrowStyle", "contentStyle", "popoverStyle"]);
        style = [{
          backgroundColor: _Theme2.default.popoverColor,
          borderColor: _Theme2.default.popoverBorderColor,
          borderRadius: _Theme2.default.popoverBorderRadius,
          borderWidth: _Theme2.default.popoverBorderWidth
        }].concat(style);

        var fs = _reactNative.StyleSheet.flatten(style);

        var backgroundColor = fs.backgroundColor,
            borderColor = fs.borderColor,
            borderRadius = fs.borderRadius,
            borderWidth = fs.borderWidth;
        var arrowSize = 7;
        var headerSize = Math.sqrt(arrowSize * arrowSize * 2) / 2 + borderWidth;
        var headerPadding = headerSize - arrowSize / 2;
        var headerPaddingCorner = paddingCorner ? paddingCorner : _Theme2.default.popoverPaddingCorner;
        var contentPadding = headerSize - borderWidth;
        var headerLayouts = {
          none: {},
          topLeft: {
            top: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingTop: headerPadding,
            alignItems: 'flex-start',
            paddingLeft: headerPaddingCorner
          },
          top: {
            top: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingTop: headerPadding,
            alignItems: 'center'
          },
          topRight: {
            top: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingTop: headerPadding,
            alignItems: 'flex-end',
            paddingRight: headerPaddingCorner
          },
          rightTop: {
            top: 0,
            bottom: 0,
            right: 0,
            width: headerSize,
            paddingRight: headerPadding,
            alignItems: 'flex-end',
            justifyContent: 'flex-start',
            paddingTop: headerPaddingCorner
          },
          right: {
            top: 0,
            bottom: 0,
            right: 0,
            width: headerSize,
            paddingRight: headerPadding,
            alignItems: 'flex-end',
            justifyContent: 'center'
          },
          rightBottom: {
            top: 0,
            bottom: 0,
            right: 0,
            width: headerSize,
            paddingRight: headerPadding,
            alignItems: 'flex-end',
            justifyContent: 'flex-end',
            paddingBottom: headerPaddingCorner
          },
          bottomRight: {
            bottom: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingBottom: headerPadding,
            alignItems: 'flex-end',
            justifyContent: 'flex-end',
            paddingRight: headerPaddingCorner
          },
          bottom: {
            bottom: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingBottom: headerPadding,
            alignItems: 'center',
            justifyContent: 'flex-end'
          },
          bottomLeft: {
            bottom: 0,
            left: 0,
            right: 0,
            height: headerSize,
            paddingBottom: headerPadding,
            alignItems: 'flex-start',
            justifyContent: 'flex-end',
            paddingLeft: headerPaddingCorner
          },
          leftBottom: {
            top: 0,
            bottom: 0,
            left: 0,
            width: headerSize,
            paddingLeft: headerPadding,
            alignItems: 'flex-start',
            justifyContent: 'flex-end',
            paddingBottom: headerPaddingCorner
          },
          left: {
            top: 0,
            bottom: 0,
            left: 0,
            width: headerSize,
            paddingLeft: headerPadding,
            alignItems: 'flex-start',
            justifyContent: 'center'
          },
          leftTop: {
            top: 0,
            bottom: 0,
            left: 0,
            width: headerSize,
            paddingLeft: headerPadding,
            alignItems: 'flex-start',
            justifyContent: 'flex-start',
            paddingTop: headerPaddingCorner
          }
        };
        var arrowLayouts = {
          none: {},
          topLeft: {
            transform: [{
              rotate: '45deg'
            }]
          },
          top: {
            transform: [{
              rotate: '45deg'
            }]
          },
          topRight: {
            transform: [{
              rotate: '45deg'
            }]
          },
          rightTop: {
            transform: [{
              rotate: '135deg'
            }]
          },
          right: {
            transform: [{
              rotate: '135deg'
            }]
          },
          rightBottom: {
            transform: [{
              rotate: '135deg'
            }]
          },
          bottomRight: {
            transform: [{
              rotate: '225deg'
            }]
          },
          bottom: {
            transform: [{
              rotate: '225deg'
            }]
          },
          bottomLeft: {
            transform: [{
              rotate: '225deg'
            }]
          },
          leftBottom: {
            transform: [{
              rotate: '315deg'
            }]
          },
          left: {
            transform: [{
              rotate: '315deg'
            }]
          },
          leftTop: {
            transform: [{
              rotate: '315deg'
            }]
          }
        };
        var popoverLayouts = {
          none: {},
          topLeft: {
            paddingTop: contentPadding
          },
          top: {
            paddingTop: contentPadding
          },
          topRight: {
            paddingTop: contentPadding
          },
          rightTop: {
            paddingRight: contentPadding
          },
          right: {
            paddingRight: contentPadding
          },
          rightBottom: {
            paddingRight: contentPadding
          },
          bottomRight: {
            paddingBottom: contentPadding
          },
          bottom: {
            paddingBottom: contentPadding
          },
          bottomLeft: {
            paddingBottom: contentPadding
          },
          leftBottom: {
            paddingLeft: contentPadding
          },
          left: {
            paddingLeft: contentPadding
          },
          leftTop: {
            paddingLeft: contentPadding
          }
        };
        if (!arrow) arrow = 'none';
        var useArrow = arrow;

        switch (arrow) {
          case 'topLeft':
          case 'topRight':
            if (headerPaddingCorner + contentPadding > this.state.width / 2) useArrow = 'top';
            break;

          case 'rightTop':
          case 'rightBottom':
            if (headerPaddingCorner + contentPadding > this.state.height / 2) useArrow = 'right';
            break;

          case 'bottomRight':
          case 'bottomLeft':
            if (headerPaddingCorner + contentPadding > this.state.width / 2) useArrow = 'bottom';
            break;

          case 'leftBottom':
          case 'leftTop':
            if (headerPaddingCorner + contentPadding > this.state.height / 2) useArrow = 'left';
            break;
        }

        headerStyle = babelHelpers.extends({
          position: 'absolute',
          overflow: 'hidden',
          backgroundColor: 'rgba(0, 0, 0, 0)'
        }, headerLayouts[useArrow]);
        arrowStyle = babelHelpers.extends({
          backgroundColor: backgroundColor,
          width: arrowSize,
          height: arrowSize,
          borderColor: borderColor,
          borderTopWidth: borderWidth,
          borderLeftWidth: borderWidth
        }, arrowLayouts[useArrow]);
        contentStyle = this.filterContentStyle(fs);
        popoverStyle = [this.filterPopoverStyle(fs, useArrow === 'none'), {
          backgroundColor: useArrow === 'none' ? _Theme2.default.popoverColor : 'rgba(0, 0, 0, 0)'
        }].concat(popoverLayouts[useArrow]);
        this.props = babelHelpers.extends({
          style: style,
          arrow: arrow,
          paddingCorner: paddingCorner,
          headerStyle: headerStyle,
          arrowStyle: arrowStyle,
          contentStyle: contentStyle,
          popoverStyle: popoverStyle
        }, others);
      }
    }, {
      key: "onLayout",
      value: function onLayout(e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        if (width != this.state.width || height != this.state.height) {
          this.setState({
            width: width,
            height: height
          });
        }

        this.props.onLayout && this.props.onLayout(e);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        this.buildProps();
        var _props2 = this.props,
            style = _props2.style,
            arrow = _props2.arrow,
            headerStyle = _props2.headerStyle,
            arrowStyle = _props2.arrowStyle,
            contentStyle = _props2.contentStyle,
            popoverStyle = _props2.popoverStyle,
            children = _props2.children,
            onLayout = _props2.onLayout,
            others = babelHelpers.objectWithoutProperties(_props2, ["style", "arrow", "headerStyle", "arrowStyle", "contentStyle", "popoverStyle", "children", "onLayout"]);
        return _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            style: popoverStyle,
            onLayout: function onLayout(e) {
              return _this2.onLayout(e);
            }
          }, others),
          _react2.default.createElement(
            _reactNative.View,
            {
              style: contentStyle,
              activeOpacity: 1
            },
            children
          ),
          !arrow || arrow === 'none' ? null : _react2.default.createElement(
            _reactNative.View,
            {
              style: headerStyle
            },
            _react2.default.createElement(_reactNative.View, {
              style: arrowStyle
            })
          )
        );
      }
    }]);
    return Popover;
  }(_react.Component);

  Popover.propTypes = babelHelpers.extends({}, _reactNative.ViewPropTypes, {
    arrow: _CommonYeelightModules.PropTypes.oneOf(['none', 'topLeft', 'top', 'topRight', 'rightTop', 'right', 'rightBottom', 'bottomRight', 'bottom', 'bottomLeft', 'leftBottom', 'left', 'leftTop']),
    paddingCorner: _CommonYeelightModules.PropTypes.number
  });
  Popover.defaultProps = babelHelpers.extends({}, _reactNative.View.defaultProps, {
    arrow: 'none'
  });
  exports.default = Popover;
},11423,[10297,10033,11396,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Popover/Popover.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _Overlay = _require(_dependencyMap[3]);

  var _Overlay2 = babelHelpers.interopRequireDefault(_Overlay);

  var CommonYeelightModules = _require(_dependencyMap[4]);

  var PropTypes = CommonYeelightModules.PropTypes,
      Images = CommonYeelightModules.Images;

  var ToastView = function (_Overlay$View) {
    babelHelpers.inherits(ToastView, _Overlay$View);

    function ToastView() {
      babelHelpers.classCallCheck(this, ToastView);
      return babelHelpers.possibleConstructorReturn(this, (ToastView.__proto__ || Object.getPrototypeOf(ToastView)).apply(this, arguments));
    }

    babelHelpers.createClass(ToastView, [{
      key: "buildStyle",
      value: function buildStyle() {
        var _props = this.props,
            style = _props.style,
            position = _props.position;
        style = [{
          paddingLeft: _Theme2.default.toastScreenPaddingLeft,
          paddingRight: _Theme2.default.toastScreenPaddingRight,
          paddingTop: _Theme2.default.toastScreenPaddingTop,
          paddingBottom: _Theme2.default.toastScreenPaddingBottom,
          justifyContent: position === 'top' ? 'flex-start' : position === 'bottom' ? 'flex-end' : 'center',
          alignItems: 'center'
        }].concat(babelHelpers.get(ToastView.prototype.__proto__ || Object.getPrototypeOf(ToastView.prototype), "buildStyle", this).call(this));
        return style;
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        var icon = this.props.icon;
        if (!icon && icon !== 0) return null;
        var image = void 0;

        if (!_react2.default.isValidElement(icon)) {
          var imageSource = void 0;

          if (typeof icon === 'string') {
            switch (icon) {
              case 'success':
                imageSource = Images('success.png');
                break;

              case 'fail':
                imageSource = Images('fail.png');
                break;

              case 'smile':
                imageSource = Images('smile.png');
                break;

              case 'sad':
                imageSource = Images('smile.png');
                break;

              case 'info':
                imageSource = Images('smile.png');
                break;

              case 'stop':
                imageSource = Images('smile.png');
                break;

              default:
                imageSource = null;
                break;
            }
          } else {
            imageSource = icon;
          }

          image = _react2.default.createElement(_reactNative.Image, {
            style: {
              width: _Theme2.default.toastIconWidth,
              height: _Theme2.default.toastIconHeight,
              tintColor: _Theme2.default.toastIconTintColor
            },
            source: imageSource
          });
        } else {
          image = icon;
        }

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              paddingTop: _Theme2.default.toastIconPaddingTop,
              paddingBottom: _Theme2.default.toastIconPaddingBottom
            }
          },
          image
        );
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var text = this.props.text;

        if (typeof text === 'string' || typeof text === 'number') {
          text = _react2.default.createElement(
            _reactNative.Text,
            {
              style: {
                color: _Theme2.default.toastTextColor,
                fontSize: _Theme2.default.toastFontSize
              }
            },
            text
          );
        }

        return text;
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var contentStyle = {
          backgroundColor: _Theme2.default.toastColor,
          paddingLeft: _Theme2.default.toastPaddingLeft,
          paddingRight: _Theme2.default.toastPaddingRight,
          paddingTop: _Theme2.default.toastPaddingTop,
          paddingBottom: _Theme2.default.toastPaddingBottom,
          borderRadius: _Theme2.default.toastBorderRadius,
          alignItems: 'center'
        };
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: contentStyle
          },
          this.renderIcon(),
          this.renderText()
        );
      }
    }, {
      key: "overlayPointerEvents",
      get: function get() {
        var _props2 = this.props,
            overlayPointerEvents = _props2.overlayPointerEvents,
            modal = _props2.modal;
        return modal ? 'auto' : overlayPointerEvents;
      }
    }]);
    return ToastView;
  }(_Overlay2.default.View);

  ToastView.propTypes = babelHelpers.extends({}, _Overlay2.default.View.propTypes, {
    text: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.number]),
    icon: PropTypes.oneOfType([PropTypes.element, PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number, PropTypes.oneOf(['none', 'success', 'fail', 'smile', 'sad', 'info', 'stop'])]),
    position: PropTypes.oneOf(['top', 'bottom', 'center'])
  });
  ToastView.defaultProps = babelHelpers.extends({}, _Overlay2.default.View.defaultProps, {
    overlayOpacity: 0,
    overlayPointerEvents: 'none',
    closeOnHardwareBackPress: false,
    position: 'center'
  });
  exports.default = ToastView;
},11426,[10297,10033,11396,11390,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/Toast/ToastView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.swipeDirections = undefined;

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var swipeDirections = exports.swipeDirections = {
    SWIPE_UP: 'SWIPE_UP',
    SWIPE_DOWN: 'SWIPE_DOWN',
    SWIPE_LEFT: 'SWIPE_LEFT',
    SWIPE_RIGHT: 'SWIPE_RIGHT'
  };
  var swipeConfig = {
    velocityThreshold: 0.3,
    directionalOffsetThreshold: 80
  };

  function isValidSwipe(velocity, velocityThreshold, directionalOffset, directionalOffsetThreshold) {
    return Math.abs(velocity) > velocityThreshold && Math.abs(directionalOffset) < directionalOffsetThreshold;
  }

  var GestureRecognizer = function (_Component) {
    babelHelpers.inherits(GestureRecognizer, _Component);

    function GestureRecognizer(props, context) {
      babelHelpers.classCallCheck(this, GestureRecognizer);

      var _this = babelHelpers.possibleConstructorReturn(this, (GestureRecognizer.__proto__ || Object.getPrototypeOf(GestureRecognizer)).call(this, props, context));

      _this.swipeConfig = babelHelpers.extends(swipeConfig, props.config);
      return _this;
    }

    babelHelpers.createClass(GestureRecognizer, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(props) {
        this.swipeConfig = babelHelpers.extends(swipeConfig, props.config);
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        var responderEnd = this._handlePanResponderEnd.bind(this);

        var shouldSetResponder = this._handleShouldSetPanResponder.bind(this);

        this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: shouldSetResponder,
          onMoveShouldSetPanResponder: shouldSetResponder,
          onPanResponderRelease: responderEnd,
          onPanResponderTerminate: responderEnd
        });
      }
    }, {
      key: "_handleShouldSetPanResponder",
      value: function _handleShouldSetPanResponder(evt, gestureState) {
        return evt.nativeEvent.touches.length === 1 && !this._gestureIsClick(gestureState);
      }
    }, {
      key: "_gestureIsClick",
      value: function _gestureIsClick(gestureState) {
        return Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5;
      }
    }, {
      key: "_handlePanResponderEnd",
      value: function _handlePanResponderEnd(evt, gestureState) {
        var swipeDirection = this._getSwipeDirection(gestureState);

        this._triggerSwipeHandlers(swipeDirection, gestureState);
      }
    }, {
      key: "_triggerSwipeHandlers",
      value: function _triggerSwipeHandlers(swipeDirection, gestureState) {
        var _props = this.props,
            onSwipe = _props.onSwipe,
            onSwipeUp = _props.onSwipeUp,
            onSwipeDown = _props.onSwipeDown,
            onSwipeLeft = _props.onSwipeLeft,
            onSwipeRight = _props.onSwipeRight;
        var SWIPE_LEFT = swipeDirections.SWIPE_LEFT,
            SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT,
            SWIPE_UP = swipeDirections.SWIPE_UP,
            SWIPE_DOWN = swipeDirections.SWIPE_DOWN;
        onSwipe && onSwipe(swipeDirection, gestureState);

        switch (swipeDirection) {
          case SWIPE_LEFT:
            onSwipeLeft && onSwipeLeft(gestureState);
            break;

          case SWIPE_RIGHT:
            onSwipeRight && onSwipeRight(gestureState);
            break;

          case SWIPE_UP:
            onSwipeUp && onSwipeUp(gestureState);
            break;

          case SWIPE_DOWN:
            onSwipeDown && onSwipeDown(gestureState);
            break;
        }
      }
    }, {
      key: "_getSwipeDirection",
      value: function _getSwipeDirection(gestureState) {
        var SWIPE_LEFT = swipeDirections.SWIPE_LEFT,
            SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT,
            SWIPE_UP = swipeDirections.SWIPE_UP,
            SWIPE_DOWN = swipeDirections.SWIPE_DOWN;
        var dx = gestureState.dx,
            dy = gestureState.dy;

        if (this._isValidHorizontalSwipe(gestureState)) {
          return dx > 0 ? SWIPE_RIGHT : SWIPE_LEFT;
        } else if (this._isValidVerticalSwipe(gestureState)) {
          return dy > 0 ? SWIPE_DOWN : SWIPE_UP;
        }

        return null;
      }
    }, {
      key: "_isValidHorizontalSwipe",
      value: function _isValidHorizontalSwipe(gestureState) {
        var vx = gestureState.vx,
            dy = gestureState.dy;
        var _swipeConfig = this.swipeConfig,
            velocityThreshold = _swipeConfig.velocityThreshold,
            directionalOffsetThreshold = _swipeConfig.directionalOffsetThreshold;
        return isValidSwipe(vx, velocityThreshold, dy, directionalOffsetThreshold);
      }
    }, {
      key: "_isValidVerticalSwipe",
      value: function _isValidVerticalSwipe(gestureState) {
        var vy = gestureState.vy,
            dx = gestureState.dx;
        var _swipeConfig2 = this.swipeConfig,
            velocityThreshold = _swipeConfig2.velocityThreshold,
            directionalOffsetThreshold = _swipeConfig2.directionalOffsetThreshold;
        return isValidSwipe(vy, velocityThreshold, dx, directionalOffsetThreshold);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(_reactNative.View, babelHelpers.extends({}, this.props, this._panResponder.panHandlers));
      }
    }]);
    return GestureRecognizer;
  }(_react.Component);

  ;
  exports.default = GestureRecognizer;
},11429,[10297,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/react-native-swipe-gestures/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var SCALE = 1.2;

  var _class = function (_Component) {
    babelHelpers.inherits(_class, _Component);

    function _class(props, context) {
      babelHelpers.classCallCheck(this, _class);

      var _this = babelHelpers.possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props, context));

      _initialiseProps.call(_this);

      var width = props.width,
          height = props.height,
          value = props.value;
      _this.offset = width - height + 1;
      _this.handlerSize = height - 2;
      _this.state = {
        value: value,
        toggleable: true,
        alignItems: value ? 'flex-end' : 'flex-start',
        handlerAnimation: new _reactNative.Animated.Value(_this.handlerSize),
        switchAnimation: new _reactNative.Animated.Value(value ? -1 : 1)
      };
      return _this;
    }

    babelHelpers.createClass(_class, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.value === this.state.value) {
          return;
        }

        if (typeof nextProps.value !== 'undefined' && nextProps.value !== this.props.value) {
          this.toggleSwitchToValue(true, nextProps.value);
        }
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        this._panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {
            return true;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
            return true;
          },
          onPanResponderGrant: this._onPanResponderGrant,
          onPanResponderMove: this._onPanResponderMove,
          onPanResponderRelease: this._onPanResponderRelease
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _state = this.state,
            switchAnimation = _state.switchAnimation,
            handlerAnimation = _state.handlerAnimation,
            alignItems = _state.alignItems,
            value = _state.value;
        var _props = this.props,
            backgroundActive = _props.backgroundActive,
            backgroundInactive = _props.backgroundInactive,
            width = _props.width,
            height = _props.height,
            circleColorActive = _props.circleColorActive,
            circleColorInactive = _props.circleColorInactive,
            style = _props.style,
            circleStyle = _props.circleStyle,
            rest = babelHelpers.objectWithoutProperties(_props, ["backgroundActive", "backgroundInactive", "width", "height", "circleColorActive", "circleColorInactive", "style", "circleStyle"]);
        var interpolatedBackgroundColor = switchAnimation.interpolate({
          inputRange: value ? [-this.offset, -1] : [1, this.offset],
          outputRange: [backgroundInactive, backgroundActive],
          extrapolate: 'clamp'
        });
        var interpolatedCircleColor = switchAnimation.interpolate({
          inputRange: value ? [-this.offset, -1] : [1, this.offset],
          outputRange: [circleColorInactive, circleColorActive],
          extrapolate: 'clamp'
        });
        var interpolatedTranslateX = switchAnimation.interpolate({
          inputRange: value ? [-this.offset, -1] : [1, this.offset],
          outputRange: value ? [-this.offset, -1] : [1, this.offset],
          extrapolate: 'clamp'
        });
        return _react2.default.createElement(
          _reactNative.Animated.View,
          babelHelpers.extends({}, rest, this._panResponder.panHandlers, {
            style: [styles.container, style, {
              width: width,
              height: height,
              alignItems: alignItems,
              borderRadius: height / 2,
              backgroundColor: interpolatedBackgroundColor
            }]
          }),
          _react2.default.createElement(_reactNative.Animated.View, {
            style: [{
              backgroundColor: interpolatedCircleColor,
              width: handlerAnimation,
              height: this.handlerSize,
              borderRadius: height / 2,
              transform: [{
                translateX: interpolatedTranslateX
              }]
            }, circleStyle]
          })
        );
      }
    }]);
    return _class;
  }(_react.Component);

  _class.defaultProps = {
    width: 40,
    height: 21,
    value: false,
    disabled: false,
    circleColorActive: 'white',
    circleColorInactive: 'white',
    backgroundActive: '#43d551',
    backgroundInactive: '#dddddd',
    onAsyncPress: function onAsyncPress(callback) {
      callback(true);
    }
  };

  var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this._onPanResponderGrant = function (evt, gestureState) {
      var disabled = _this2.props.disabled;
      if (disabled) return;

      _this2.setState({
        toggleable: true
      });

      _this2.animateHandler(_this2.handlerSize * SCALE);
    };

    this._onPanResponderMove = function (evt, gestureState) {
      var value = _this2.state.value;
      var disabled = _this2.props.disabled;
      if (disabled) return;

      _this2.setState({
        toggleable: value ? gestureState.dx < 10 : gestureState.dx > -10
      });
    };

    this._onPanResponderRelease = function (evt, gestureState) {
      var toggleable = _this2.state.toggleable;
      var _props2 = _this2.props,
          disabled = _props2.disabled,
          onAsyncPress = _props2.onAsyncPress,
          onSyncPress = _props2.onSyncPress;
      if (disabled) return;

      if (toggleable) {
        if (onSyncPress) {
          _this2.toggleSwitch(true, onSyncPress);
        } else {
          onAsyncPress(_this2.toggleSwitch);
        }
      } else {
        _this2.animateHandler(_this2.handlerSize);
      }
    };

    this.toggleSwitch = function (result) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
        return null;
      };
      var value = _this2.state.value;

      _this2.toggleSwitchToValue(result, !value, callback);
    };

    this.toggleSwitchToValue = function (result, toValue) {
      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
        return null;
      };
      var switchAnimation = _this2.state.switchAnimation;

      _this2.animateHandler(_this2.handlerSize);

      if (result) {
        _this2.animateSwitch(toValue, function () {
          _this2.setState({
            value: toValue,
            alignItems: toValue ? 'flex-end' : 'flex-start'
          }, function () {
            callback(toValue);
          });

          switchAnimation.setValue(toValue ? -1 : 1);
        });
      }
    };

    this.animateSwitch = function (value) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
        return null;
      };
      var switchAnimation = _this2.state.switchAnimation;

      _reactNative.Animated.timing(switchAnimation, {
        toValue: value ? _this2.offset : -_this2.offset,
        duration: 200,
        easing: _reactNative.Easing.linear
      }).start(callback);
    };

    this.animateHandler = function (value) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
        return null;
      };
      var handlerAnimation = _this2.state.handlerAnimation;

      _reactNative.Animated.timing(handlerAnimation, {
        toValue: value,
        duration: 200,
        easing: _reactNative.Easing.linear
      }).start(callback);
    };
  };

  exports.default = _class;

  var styles = _reactNative.StyleSheet.create({
    container: {
      overflow: 'hidden',
      justifyContent: 'center'
    }
  });
},11432,[10297,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Switch.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Overlay2 = _require(_dependencyMap[2]);

  var _Overlay3 = babelHelpers.interopRequireDefault(_Overlay2);

  var _ActionSheetView = _require(_dependencyMap[3]);

  var _ActionSheetView2 = babelHelpers.interopRequireDefault(_ActionSheetView);

  var ActionSheet = function (_Overlay) {
    babelHelpers.inherits(ActionSheet, _Overlay);

    function ActionSheet() {
      babelHelpers.classCallCheck(this, ActionSheet);
      return babelHelpers.possibleConstructorReturn(this, (ActionSheet.__proto__ || Object.getPrototypeOf(ActionSheet)).apply(this, arguments));
    }

    babelHelpers.createClass(ActionSheet, null, [{
      key: "show",
      value: function show(items, cancelItem) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        return babelHelpers.get(ActionSheet.__proto__ || Object.getPrototypeOf(ActionSheet), "show", this).call(this, _react2.default.createElement(this.ActionSheetView, babelHelpers.extends({
          items: items,
          cancelItem: cancelItem
        }, options)));
      }
    }]);
    return ActionSheet;
  }(_Overlay3.default);

  ActionSheet.ActionSheetView = _ActionSheetView2.default;
  exports.default = ActionSheet;
},11435,[10297,10033,11390,11438],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/ActionSheet/ActionSheet.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Overlay = _require(_dependencyMap[2]);

  var _Overlay2 = babelHelpers.interopRequireDefault(_Overlay);

  var _ActionSheetItem = _require(_dependencyMap[3]);

  var _ActionSheetItem2 = babelHelpers.interopRequireDefault(_ActionSheetItem);

  var _Theme = _require(_dependencyMap[4]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var CommonYeelightModules = _require(_dependencyMap[5]);

  var PropTypes = CommonYeelightModules.PropTypes;

  var ActionSheetView = function (_Overlay$PullView) {
    babelHelpers.inherits(ActionSheetView, _Overlay$PullView);

    function ActionSheetView() {
      babelHelpers.classCallCheck(this, ActionSheetView);
      return babelHelpers.possibleConstructorReturn(this, (ActionSheetView.__proto__ || Object.getPrototypeOf(ActionSheetView)).apply(this, arguments));
    }

    babelHelpers.createClass(ActionSheetView, [{
      key: "disappearCompleted",
      value: function disappearCompleted() {
        babelHelpers.get(ActionSheetView.prototype.__proto__ || Object.getPrototypeOf(ActionSheetView.prototype), "disappearCompleted", this).call(this);
        this.pressItem && this.pressItem.onPress && this.pressItem.onPress();
      }
    }, {
      key: "onItemPress",
      value: function onItemPress(item) {
        if (item && item.disabled) return;
        this.pressItem = item;
        this.close(false);
      }
    }, {
      key: "onCancelItemPress",
      value: function onCancelItemPress() {
        var cancelItem = this.props.cancelItem;
        if (cancelItem && cancelItem.disabled) return;
        this.pressItem = cancelItem;
        this.close(true);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _props = this.props,
            items = _props.items,
            cancelItem = _props.cancelItem;
        var list = [];

        var _loop = function _loop(i) {
          var item = items[i];
          list.push(_react2.default.createElement(_this2.constructor.Item, {
            key: 'item' + i,
            title: item.title,
            topSeparator: i === 0 ? 'none' : 'full',
            disabled: item.disabled,
            onPress: function onPress() {
              return _this2.onItemPress(item);
            }
          }));
        };

        for (var i = 0; items && i < items.length; ++i) {
          _loop(i);
        }

        if (cancelItem) {
          list.push(_react2.default.createElement(this.constructor.Item, {
            key: 'cancelItem',
            type: "cancel",
            title: cancelItem.title,
            topSeparator: "full",
            disabled: cancelItem.disabled,
            onPress: function onPress() {
              return _this2.onCancelItemPress();
            }
          }));
        }

        list.push(_react2.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: cancelItem ? _Theme2.default.asCancelItemColor : _Theme2.default.asItemColor,
            height: _Theme2.default.APPBAR_MARGINBottom
          },
          key: 'bottomSpace'
        }));
        return babelHelpers.get(ActionSheetView.prototype.__proto__ || Object.getPrototypeOf(ActionSheetView.prototype), "renderContent", this).call(this, list);
      }
    }]);
    return ActionSheetView;
  }(_Overlay2.default.PullView);

  ActionSheetView.propTypes = babelHelpers.extends({}, _Overlay2.default.PullView.propTypes, {
    items: PropTypes.arrayOf(PropTypes.shape({
      title: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.number]).isRequired,
      onPress: PropTypes.func,
      disabled: PropTypes.bool
    })),
    cancelItem: PropTypes.shape({
      title: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.number]).isRequired,
      onPress: PropTypes.func,
      disabled: PropTypes.bool
    })
  });
  ActionSheetView.Item = _ActionSheetItem2.default;
  exports.default = ActionSheetView;
},11438,[10297,10033,11390,11441,10601,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/ActionSheet/ActionSheetView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  var _Theme = _require(_dependencyMap[2]);

  var _Theme2 = babelHelpers.interopRequireDefault(_Theme);

  var _CommonYeelightModules = _require(_dependencyMap[3]);

  var ActionSheetItem = function (_Component) {
    babelHelpers.inherits(ActionSheetItem, _Component);

    function ActionSheetItem() {
      babelHelpers.classCallCheck(this, ActionSheetItem);
      return babelHelpers.possibleConstructorReturn(this, (ActionSheetItem.__proto__ || Object.getPrototypeOf(ActionSheetItem)).apply(this, arguments));
    }

    babelHelpers.createClass(ActionSheetItem, [{
      key: "buildStyle",
      value: function buildStyle() {
        var _props = this.props,
            style = _props.style,
            type = _props.type;
        style = [{
          backgroundColor: type === 'cancel' ? _Theme2.default.asCancelItemColor : _Theme2.default.asItemColor,
          paddingLeft: _Theme2.default.asItemPaddingLeft,
          paddingRight: _Theme2.default.asItemPaddingRight,
          paddingTop: _Theme2.default.asItemPaddingTop,
          paddingBottom: _Theme2.default.asItemPaddingBottom,
          minHeight: _Theme2.default.asItemMinHeight,
          overflow: 'hidden',
          justifyContent: 'center'
        }].concat(style);
        return style;
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator(separator) {
        var type = this.props.type;
        var indentViewStyle = {
          backgroundColor: 'rgba(0,0,0,0)',
          paddingLeft: _Theme2.default.asItemPaddingLeft
        };
        var separatorStyle = void 0;

        if (type === 'cancel') {
          separatorStyle = {
            backgroundColor: _Theme2.default.asCancelItemSeparatorColor,
            height: _Theme2.default.asCancelItemSeparatorLineWidth
          };
        } else {
          separatorStyle = {
            backgroundColor: _Theme2.default.asItemSeparatorColor,
            height: _Theme2.default.asItemSeparatorLineWidth
          };
        }

        switch (separator) {
          case 'full':
            return _react2.default.createElement(_reactNative.View, {
              style: separatorStyle
            });

          case 'indent':
            return _react2.default.createElement(
              _reactNative.View,
              {
                style: indentViewStyle
              },
              _react2.default.createElement(_reactNative.View, {
                style: separatorStyle
              })
            );

          default:
            return null;
        }
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _props2 = this.props,
            type = _props2.type,
            title = _props2.title,
            disabled = _props2.disabled;
        if (title === null || title === undefined || _react2.default.isValidElement(title)) return title;
        var textStyle = void 0;

        if (type === 'cancel') {
          textStyle = {
            backgroundColor: 'rgba(0, 0, 0, 0)',
            color: _Theme2.default.asCancelItemTitleColor,
            fontSize: _Theme2.default.asCancelItemFontSize,
            textAlign: _Theme2.default.asCancelItemTitleAlign,
            opacity: disabled ? _Theme2.default.asItemDisabledOpacity : 1,
            overflow: 'hidden'
          };
        } else {
          textStyle = {
            backgroundColor: 'rgba(0, 0, 0, 0)',
            color: _Theme2.default.asItemTitleColor,
            fontSize: _Theme2.default.asItemFontSize,
            textAlign: _Theme2.default.asItemTitleAlign,
            opacity: disabled ? _Theme2.default.asItemDisabledOpacity : 1,
            overflow: 'hidden'
          };
        }

        return _react2.default.createElement(
          _reactNative.Text,
          {
            style: textStyle,
            numberOfLines: 1
          },
          title
        );
      }
    }, {
      key: "render",
      value: function render() {
        var _props3 = this.props,
            style = _props3.style,
            children = _props3.children,
            type = _props3.type,
            title = _props3.title,
            topSeparator = _props3.topSeparator,
            bottomSeparator = _props3.bottomSeparator,
            disabled = _props3.disabled,
            activeOpacity = _props3.activeOpacity,
            others = babelHelpers.objectWithoutProperties(_props3, ["style", "children", "type", "title", "topSeparator", "bottomSeparator", "disabled", "activeOpacity"]);
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: {
              backgroundColor: 'rgba(0, 0, 0, 0)'
            }
          },
          this.renderSeparator(topSeparator),
          _react2.default.createElement(
            _reactNative.TouchableOpacity,
            babelHelpers.extends({
              style: this.buildStyle(),
              activeOpacity: disabled ? 1 : activeOpacity
            }, others),
            this.renderTitle()
          ),
          this.renderSeparator(bottomSeparator)
        );
      }
    }]);
    return ActionSheetItem;
  }(_react.Component);

  ActionSheetItem.propTypes = babelHelpers.extends({}, _reactNative.TouchableOpacity.propTypes, {
    type: _CommonYeelightModules.PropTypes.oneOf(['default', 'cancel']),
    title: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.element, _CommonYeelightModules.PropTypes.string, _CommonYeelightModules.PropTypes.number]),
    topSeparator: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.element, _CommonYeelightModules.PropTypes.oneOf(['none', 'full', 'indent'])]),
    bottomSeparator: _CommonYeelightModules.PropTypes.oneOfType([_CommonYeelightModules.PropTypes.element, _CommonYeelightModules.PropTypes.oneOf(['none', 'full', 'indent'])]),
    disabled: _CommonYeelightModules.PropTypes.bool
  });
  ActionSheetItem.defaultProps = babelHelpers.extends({}, _reactNative.TouchableOpacity.defaultProps, {
    type: 'default',
    topSeparator: 'none',
    bottomSeparator: 'none',
    disabled: false
  });
  exports.default = ActionSheetItem;
},11441,[10297,10033,10601,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/Teaset/Components/ActionSheet/ActionSheetItem.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[1]);

  _reactNative.UIManager.setLayoutAnimationEnabledExperimental && _reactNative.UIManager.setLayoutAnimationEnabledExperimental(true);
  var HOVER_SCALE = 1.05;
  var initialState = {
    activeRow: -1,
    showHoverComponent: false,
    spacerIndex: -1,
    scroll: false,
    hoverComponent: null,
    extraData: null
  };
  var layoutAnimConfig = {
    duration: 300,
    create: {
      type: _reactNative.LayoutAnimation.Types.easeInEaseOut,
      property: _reactNative.LayoutAnimation.Properties.scaleXY
    },
    update: {
      type: _reactNative.LayoutAnimation.Types.easeInEaseOut,
      property: _reactNative.LayoutAnimation.Properties.scaleXY
    }
  };

  var SortableFlatList = function (_Component) {
    babelHelpers.inherits(SortableFlatList, _Component);

    function SortableFlatList(props) {
      babelHelpers.classCallCheck(this, SortableFlatList);

      var _this = babelHelpers.possibleConstructorReturn(this, (SortableFlatList.__proto__ || Object.getPrototypeOf(SortableFlatList)).call(this, props));

      _initialiseProps.call(_this);

      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {
          if (!horizontal) {
            _this._androidStatusBarOffset = _reactNative.StatusBar.currentHeight || 0;
          }

          var _evt$nativeEvent = evt.nativeEvent,
              pageX = _evt$nativeEvent.pageX,
              pageY = _evt$nativeEvent.pageY;
          var horizontal = _this.props.horizontal;
          var tappedPixel = horizontal ? pageX : pageY;

          var tappedRow = _this._pixels[Math.floor(_this._scrollOffset + tappedPixel - _this._androidStatusBarOffset)];

          if (tappedRow === undefined) return false;
          _this._additionalOffset = tappedPixel + _this._scrollOffset - _this._measurements[tappedRow][horizontal ? 'x' : 'y'];

          if (_this._releaseAnim) {
            return false;
          }

          _this._moveAnim.setValue(tappedPixel);

          _this._move = tappedPixel;

          _this._offset.setValue((_this._additionalOffset + _this._containerOffset - _this._androidStatusBarOffset) * -1);

          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {
          var activeRow = _this.state.activeRow;
          var horizontal = _this.props.horizontal;
          var moveX = gestureState.moveX,
              moveY = gestureState.moveY;
          var move = horizontal ? moveX : moveY;
          var shouldSet = activeRow > -1;

          _this._moveAnim.setValue(move);

          if (shouldSet) {
            _this.setState({
              showHoverComponent: true
            });

            _this.animate();

            _this._hasMoved = true;
          }

          return shouldSet;
        },
        onPanResponderMove: _reactNative.Animated.event([null, babelHelpers.defineProperty({}, props.horizontal ? 'moveX' : 'moveY', _this._moveAnim)], {
          listener: function listener(evt, gestureState) {
            var moveX = gestureState.moveX,
                moveY = gestureState.moveY;
            var horizontal = _this.props.horizontal;
            _this._move = horizontal ? moveX : moveY;
          }
        }),
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(_ref2, gestureState) {
          var nativeEvent = _ref2.nativeEvent;
          return false;
        },
        onPanResponderRelease: function onPanResponderRelease() {
          var _this$state = _this.state,
              activeRow = _this$state.activeRow,
              spacerIndex = _this$state.spacerIndex;
          var _this$props = _this.props,
              data = _this$props.data,
              horizontal = _this$props.horizontal;
          var activeMeasurements = _this._measurements[activeRow];
          var spacerMeasurements = _this._measurements[spacerIndex];
          var lastElementMeasurements = _this._measurements[data.length - 1];
          if (activeRow === -1) return;
          var isAfterActive = spacerIndex > activeRow;
          var isLastElement = spacerIndex >= data.length;
          var spacerElement = isLastElement ? lastElementMeasurements : spacerMeasurements;
          if (!spacerElement) return;
          var x = spacerElement.x,
              y = spacerElement.y,
              width = spacerElement.width,
              height = spacerElement.height;
          var size = horizontal ? width : height;
          var offset = horizontal ? x : y;
          var pos = offset - _this._scrollOffset + _this._additionalOffset + (isLastElement ? size : 0);
          var activeItemSize = horizontal ? activeMeasurements.width : activeMeasurements.height;
          _this._releaseVal = pos - (isAfterActive ? activeItemSize : 0);
          if (_this._releaseAnim) _this._releaseAnim.stop();
          _this._releaseAnim = _reactNative.Animated.spring(_this._moveAnim, {
            toValue: _this._releaseVal,
            stiffness: 5000,
            damping: 500,
            mass: 3,
            useNativeDriver: true
          });

          _this._releaseAnim.start(_this.onReleaseAnimationEnd);
        }
      });
      _this.state = initialState;
      return _this;
    }

    babelHelpers.createClass(SortableFlatList, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var keyExtractor = this.props.keyExtractor;
        return _react2.default.createElement(
          _reactNative.View,
          babelHelpers.extends({
            ref: function ref(_ref4) {
              _this2.containerView = _ref4;
            },
            onLayout: this.measureContainer
          }, this._panResponder.panHandlers, {
            style: styles.wrapper
          }),
          _react2.default.createElement(_reactNative.FlatList, babelHelpers.extends({}, this.props, {
            scrollEnabled: this.state.activeRow === -1,
            ref: function ref(_ref3) {
              return _this2._flatList = _ref3;
            },
            renderItem: this.renderItem,
            extraData: this.state,
            keyExtractor: keyExtractor || this.keyExtractor,
            onScroll: this.onScroll
          })),
          this.renderHoverComponent()
        );
      }
    }]);
    return SortableFlatList;
  }(_react.Component);

  var _initialiseProps = function _initialiseProps() {
    var _this4 = this;

    this._moveAnim = new _reactNative.Animated.Value(0);
    this._offset = new _reactNative.Animated.Value(0);
    this._hoverAnim = _reactNative.Animated.add(this._moveAnim, this._offset);
    this._spacerIndex = -1;
    this._pixels = [];
    this._measurements = [];
    this._scrollOffset = 0;
    this._move = 0;
    this._hasMoved = false;
    this._refs = [];
    this._additionalOffset = 0;
    this._androidStatusBarOffset = 0;
    this._releaseVal = null;
    this._releaseAnim = null;

    this.onReleaseAnimationEnd = function () {
      var _props2 = _this4.props,
          data = _props2.data,
          onMoveEnd = _props2.onMoveEnd;
      var _state = _this4.state,
          activeRow = _state.activeRow,
          spacerIndex = _state.spacerIndex;

      var sortedData = _this4.getSortedList(data, activeRow, spacerIndex);

      var isAfterActive = spacerIndex > activeRow;
      var from = activeRow;
      var to = spacerIndex - (isAfterActive ? 1 : 0);

      _this4._moveAnim.setValue(_this4._releaseVal);

      _this4._spacerIndex = -1;
      _this4._hasMoved = false;
      _this4._move = 0;
      _this4._releaseAnim = null;

      _this4.setState(initialState, function () {
        onMoveEnd && onMoveEnd({
          row: data[activeRow],
          from: from,
          to: to,
          data: sortedData
        });
      });
    };

    this.getSortedList = function (data, activeRow, spacerIndex) {
      if (activeRow === spacerIndex) return data;
      var sortedData = data.reduce(function (acc, cur, i, arr) {
        if (i === activeRow) return acc;else if (i === spacerIndex) {
          acc = [].concat(babelHelpers.toConsumableArray(acc), [arr[activeRow], cur]);
        } else acc.push(cur);
        return acc;
      }, []);
      if (spacerIndex >= data.length) sortedData.push(data[activeRow]);
      return sortedData;
    };

    this.animate = function () {
      var activeRow = _this4.state.activeRow;
      var _props3 = _this4.props,
          scrollPercent = _props3.scrollPercent,
          data = _props3.data,
          horizontal = _props3.horizontal,
          scrollSpeed = _props3.scrollSpeed;
      var scrollRatio = scrollPercent / 100;
      if (activeRow === -1) return;

      var nextSpacerIndex = _this4.getSpacerIndex(_this4._move, activeRow);

      if (nextSpacerIndex > -1 && nextSpacerIndex !== _this4._spacerIndex) {
        _reactNative.LayoutAnimation.configureNext(layoutAnimConfig);

        _this4.setState({
          spacerIndex: nextSpacerIndex
        });

        _this4._spacerIndex = nextSpacerIndex;
        if (nextSpacerIndex === data.length) _this4._flatList.scrollToEnd();
      }

      var isLastItem = activeRow === data.length - 1 || nextSpacerIndex === data.length;
      var isFirstItem = activeRow === 0;

      if (_this4._measurements[activeRow]) {
        var rowSize = _this4._measurements[activeRow][horizontal ? 'width' : 'height'];
        var hoverItemTopPosition = Math.max(0, _this4._move - (_this4._additionalOffset + _this4._containerOffset));
        var hoverItemBottomPosition = Math.min(_this4._containerSize, hoverItemTopPosition + rowSize);
        var fingerPosition = Math.max(0, _this4._move - _this4._containerOffset);
        var shouldScrollUp = !isFirstItem && fingerPosition < _this4._containerSize * scrollRatio;
        var shouldScrollDown = !isLastItem && fingerPosition > _this4._containerSize * (1 - scrollRatio);
        if (shouldScrollUp) _this4.scroll(-scrollSpeed, nextSpacerIndex);else if (shouldScrollDown) _this4.scroll(scrollSpeed, nextSpacerIndex);
      }

      requestAnimationFrame(_this4.animate);
    };

    this.scroll = function (scrollAmt, spacerIndex) {
      if (spacerIndex >= _this4.props.data.length) return _this4._flatList.scrollToEnd();
      if (spacerIndex === -1) return;
      var currentScrollOffset = _this4._scrollOffset;
      var newOffset = currentScrollOffset + scrollAmt;
      var offset = Math.max(0, newOffset);

      _this4._flatList.scrollToOffset({
        offset: offset,
        animated: false
      });
    };

    this.getSpacerIndex = function (move, activeRow) {
      var horizontal = _this4.props.horizontal;
      if (activeRow === -1 || !_this4._measurements[activeRow]) return -1;
      var hoverItemSize = _this4._measurements[activeRow][horizontal ? 'width' : 'height'];
      var hoverItemMidpoint = move - _this4._additionalOffset + hoverItemSize / 2;
      var hoverPoint = Math.floor(hoverItemMidpoint + _this4._scrollOffset);
      var spacerIndex = _this4._pixels[hoverPoint];

      if (spacerIndex === undefined) {
        spacerIndex = _this4._measurements.findIndex(function (_ref6) {
          var width = _ref6.width,
              height = _ref6.height,
              x = _ref6.x,
              y = _ref6.y;
          var itemOffset = horizontal ? x : y;
          var itemSize = horizontal ? width : height;
          return hoverPoint > itemOffset && hoverPoint < itemOffset + itemSize;
        });
      }

      return spacerIndex > activeRow ? spacerIndex + 1 : spacerIndex;
    };

    this.measureItem = function (index) {
      var activeRow = _this4.state.activeRow;
      var horizontal = _this4.props.horizontal;
      !!_this4._refs[index] && setTimeout(function () {
        try {
          !!_this4._refs[index] && _this4._refs[index].measureInWindow(function (x, y, width, height) {
            if ((width || height) && activeRow === -1) {
              var ypos = y + _this4._scrollOffset;
              var xpos = x + _this4._scrollOffset;
              var pos = horizontal ? xpos : ypos;
              var size = horizontal ? width : height;
              var rowMeasurements = {
                y: ypos,
                x: xpos,
                width: width,
                height: height
              };
              _this4._measurements[index] = rowMeasurements;

              for (var i = Math.floor(pos); i < pos + size; i++) {
                _this4._pixels[i] = index;
              }
            }
          });
        } catch (e) {
          console.log('## measure error -- index: ', index, activeRow, _this4._refs[index], e);
        }
      }, 100);
    };

    this.move = function (hoverComponent, index) {
      var onMoveBegin = _this4.props.onMoveBegin;

      if (_this4._releaseAnim) {
        _this4._releaseAnim.stop();

        _this4.onReleaseAnimationEnd();

        return;
      }

      _this4._refs.forEach(function (ref, index) {
        return _this4.measureItem(ref, index);
      });

      _this4._spacerIndex = index;

      _this4.setState({
        activeRow: index,
        spacerIndex: index,
        hoverComponent: hoverComponent
      }, function () {
        return onMoveBegin && onMoveBegin(index);
      });
    };

    this.moveEnd = function () {
      if (!_this4._hasMoved) _this4.setState(initialState);
    };

    this.setRef = function (index) {
      return function (ref) {
        if (!!ref) {
          _this4._refs[index] = ref;

          _this4.measureItem(index);
        }
      };
    };

    this.renderItem = function (_ref7) {
      var item = _ref7.item,
          index = _ref7.index;
      var _props4 = _this4.props,
          renderItem = _props4.renderItem,
          data = _props4.data,
          horizontal = _props4.horizontal;
      var _state2 = _this4.state,
          activeRow = _state2.activeRow,
          spacerIndex = _state2.spacerIndex;
      var isActiveRow = activeRow === index;
      var isSpacerRow = spacerIndex === index;
      var isLastItem = index === data.length - 1;
      var spacerAfterLastItem = spacerIndex >= data.length;
      var activeRowSize = _this4._measurements[activeRow] ? _this4._measurements[activeRow][horizontal ? 'width' : 'height'] : 0;
      var endPadding = isLastItem && spacerAfterLastItem;
      var spacerStyle = babelHelpers.defineProperty({}, horizontal ? 'width' : 'height', activeRowSize);
      return _react2.default.createElement(
        _reactNative.View,
        {
          style: [styles.fullOpacity, {
            flexDirection: horizontal ? 'row' : 'column'
          }]
        },
        isSpacerRow && _react2.default.createElement(_reactNative.View, {
          style: spacerStyle
        }),
        _react2.default.createElement(RowItem, {
          horizontal: horizontal,
          index: index,
          isActiveRow: isActiveRow,
          renderItem: renderItem,
          item: item,
          setRef: _this4.setRef,
          move: _this4.move,
          moveEnd: _this4.moveEnd,
          extraData: _this4.state.extraData
        }),
        endPadding && _react2.default.createElement(_reactNative.View, {
          style: spacerStyle
        })
      );
    };

    this.renderHoverComponent = function () {
      var hoverComponent = _this4.state.hoverComponent;
      var horizontal = _this4.props.horizontal;
      return !!hoverComponent && _react2.default.createElement(
        _reactNative.Animated.View,
        {
          style: [horizontal ? styles.hoverComponentHorizontal : styles.hoverComponentVertical, {
            transform: [horizontal ? {
              translateX: _this4._hoverAnim
            } : {
              translateY: _this4._hoverAnim
            }, {
              scale: HOVER_SCALE
            }]
          }]
        },
        hoverComponent
      );
    };

    this.measureContainer = function (event) {
      if (_this4.containerView) {
        var horizontal = _this4.props.horizontal;

        _this4.containerView.measure(function (x, y, width, height, pageX, pageY) {
          _this4._containerOffset = horizontal ? pageX : pageY;
          _this4._containerSize = horizontal ? width : height;
        });
      }
    };

    this.keyExtractor = function (item, index) {
      return "sortable-flatlist-item-" + index;
    };

    this.componentDidUpdate = function (prevProps, prevState) {
      if (prevProps.extraData !== _this4.props.extraData) {
        _this4.setState({
          extraData: _this4.props.extraData
        });
      }
    };

    this.onScroll = function (props) {
      var _props5 = _this4.props,
          onScroll = _props5.onScroll,
          horizontal = _props5.horizontal;
      _this4._scrollOffset = props.nativeEvent.contentOffset[horizontal ? 'x' : 'y'];
      onScroll && onScroll(props);
    };
  };

  exports.default = SortableFlatList;
  SortableFlatList.defaultProps = {
    scrollPercent: 5,
    scrollSpeed: 5,
    contentContainerStyle: {}
  };

  var RowItem = function (_React$PureComponent) {
    babelHelpers.inherits(RowItem, _React$PureComponent);

    function RowItem() {
      var _ref5;

      var _temp, _this3, _ret;

      babelHelpers.classCallCheck(this, RowItem);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this3 = babelHelpers.possibleConstructorReturn(this, (_ref5 = RowItem.__proto__ || Object.getPrototypeOf(RowItem)).call.apply(_ref5, [this].concat(args))), _this3), _this3.move = function () {
        var _this3$props = _this3.props,
            move = _this3$props.move,
            moveEnd = _this3$props.moveEnd,
            renderItem = _this3$props.renderItem,
            item = _this3$props.item,
            index = _this3$props.index;
        var hoverComponent = renderItem({
          isActive: true,
          item: item,
          index: index,
          move: function move() {
            return null;
          },
          moveEnd: moveEnd
        });
        move(hoverComponent, index);
      }, _temp), babelHelpers.possibleConstructorReturn(_this3, _ret);
    }

    babelHelpers.createClass(RowItem, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            moveEnd = _props.moveEnd,
            isActiveRow = _props.isActiveRow,
            horizontal = _props.horizontal,
            renderItem = _props.renderItem,
            item = _props.item,
            index = _props.index,
            setRef = _props.setRef;
        var component = renderItem({
          isActive: false,
          item: item,
          index: index,
          move: this.move,
          moveEnd: moveEnd
        });
        var wrapperStyle = {
          opacity: 1
        };
        if (horizontal && isActiveRow) wrapperStyle = {
          width: 0,
          opacity: 0
        };else if (!horizontal && isActiveRow) wrapperStyle = {
          height: 0,
          opacity: 0
        };
        return _react2.default.createElement(
          _reactNative.View,
          {
            ref: setRef(index),
            collapsable: false,
            style: {
              opacity: 1,
              flexDirection: horizontal ? 'row' : 'column'
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              style: wrapperStyle
            },
            component
          )
        );
      }
    }]);
    return RowItem;
  }(_react2.default.PureComponent);

  var styles = _reactNative.StyleSheet.create({
    hoverComponentVertical: {
      position: 'absolute',
      left: 0,
      right: 0
    },
    hoverComponentHorizontal: {
      position: 'absolute',
      bottom: 0,
      top: 0
    },
    wrapper: {
      flex: 1,
      opacity: 1
    },
    fullOpacity: {
      opacity: 1
    }
  });
},11444,[10297,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableFlatList/SortableFlatList.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[1]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _utils = _require(_dependencyMap[3]);

  var _Row = _require(_dependencyMap[4]);

  var _Row2 = babelHelpers.interopRequireDefault(_Row);

  var AUTOSCROLL_INTERVAL = 100;
  var ZINDEX = 'elevation';

  function uniqueRowKey(key) {
    return "" + key + uniqueRowKey.id;
  }

  uniqueRowKey.id = 0;

  var SortableList = function (_Component) {
    babelHelpers.inherits(SortableList, _Component);

    function SortableList() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, SortableList);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = SortableList.__proto__ || Object.getPrototypeOf(SortableList)).call.apply(_ref, [this].concat(args))), _this), _this._rows = {}, _this._rowsLayouts = {}, _this._resolveRowLayout = {}, _this._contentOffset = {
        x: 0,
        y: 0
      }, _this.state = {
        animated: false,
        order: _this.props.order || Object.keys(_this.props.data),
        rowsLayouts: null,
        containerLayout: null,
        data: _this.props.data,
        activeRowKey: null,
        activeRowIndex: null,
        releasedRowKey: null,
        sortingEnabled: _this.props.sortingEnabled,
        scrollEnabled: _this.props.scrollEnabled
      }, _this._onLayoutHeader = function (_ref2) {
        var layout = _ref2.nativeEvent.layout;

        _this._resolveHeaderLayout(layout);
      }, _this._onLayoutFooter = function (_ref3) {
        var layout = _ref3.nativeEvent.layout;

        _this._resolveFooterLayout(layout);
      }, _this._onActivateRow = function (rowKey, index, e, gestureState, location) {
        _this._activeRowLocation = location;

        _this.setState({
          activeRowKey: rowKey,
          activeRowIndex: index,
          releasedRowKey: null,
          scrollEnabled: false
        });

        if (_this.props.onActivateRow) {
          _this.props.onActivateRow(rowKey);
        }
      }, _this._onPressRow = function (rowKey) {
        if (_this.props.onPressRow) {
          _this.props.onPressRow(rowKey);
        }
      }, _this._onReleaseRow = function (rowKey) {
        _this._stopAutoScroll();

        _this.setState(function (_ref4) {
          var activeRowKey = _ref4.activeRowKey;
          return {
            activeRowKey: null,
            activeRowIndex: null,
            releasedRowKey: activeRowKey,
            scrollEnabled: _this.props.scrollEnabled
          };
        });

        if (_this.props.onReleaseRow) {
          _this.props.onReleaseRow(rowKey, _this.state.order);
        }
      }, _this._onMoveRow = function (e, gestureState, location) {
        var prevMovingRowX = _this._activeRowLocation.x;
        var prevMovingRowY = _this._activeRowLocation.y;
        var prevMovingDirection = _this._movingDirection;
        _this._activeRowLocation = location;
        _this._movingDirection = _this.props.horizontal ? prevMovingRowX < _this._activeRowLocation.x : prevMovingRowY < _this._activeRowLocation.y;
        _this._movingDirectionChanged = prevMovingDirection !== _this._movingDirection;

        _this._setOrderOnMove();

        if (_this.state.scrollEnabled) {
          _this._scrollOnMove(e);
        }
      }, _this._onScroll = function (props) {
        _this._contentOffset = props.nativeEvent.contentOffset;
        _this.props.onScroll && _this.props.onScroll(props);
      }, _this._onRefContainer = function (component) {
        _this._container = component;
      }, _this._onRefScrollView = function (component) {
        _this._scrollView = component;
      }, _this._onRefRow = function (rowKey, component) {
        _this._rows[rowKey] = component;
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(SortableList, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this.state.order.forEach(function (key) {
          _this2._rowsLayouts[key] = new Promise(function (resolve) {
            _this2._resolveRowLayout[key] = resolve;
          });
        });

        if (this.props.renderHeader && !this.props.horizontal) {
          this._headerLayout = new Promise(function (resolve) {
            _this2._resolveHeaderLayout = resolve;
          });
        }

        if (this.props.renderFooter && !this.props.horizontal) {
          this._footerLayout = new Promise(function (resolve) {
            _this2._resolveFooterLayout = resolve;
          });
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._onUpdateLayouts();
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;

        var _state = this.state,
            data = _state.data,
            order = _state.order;
        var nextData = nextProps.data,
            nextOrder = nextProps.order;

        if (data && nextData && !(0, _utils.shallowEqual)(data, nextData)) {
          nextOrder = nextOrder || Object.keys(nextData);
          uniqueRowKey.id++;
          this._rowsLayouts = {};
          nextOrder.forEach(function (key) {
            _this3._rowsLayouts[key] = new Promise(function (resolve) {
              _this3._resolveRowLayout[key] = resolve;
            });
          });

          if (Object.keys(nextData).length > Object.keys(data).length) {
            this.setState({
              animated: false,
              data: nextData,
              containerLayout: null,
              rowsLayouts: null,
              order: nextOrder
            });
          } else {
            this.setState({
              data: nextData,
              order: nextOrder
            });
          }
        } else if (order && nextOrder && !(0, _utils.shallowEqual)(order, nextOrder)) {
          this.setState({
            order: nextOrder
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        var data = this.state.data;
        var prevData = prevState.data;

        if (data && prevData && !(0, _utils.shallowEqual)(data, prevData)) {
          this._onUpdateLayouts();
        }
      }
    }, {
      key: "scrollBy",
      value: function scrollBy(_ref5) {
        var _ref5$dx = _ref5.dx,
            dx = _ref5$dx === undefined ? 0 : _ref5$dx,
            _ref5$dy = _ref5.dy,
            dy = _ref5$dy === undefined ? 0 : _ref5$dy,
            _ref5$animated = _ref5.animated,
            animated = _ref5$animated === undefined ? false : _ref5$animated;

        if (this.props.horizontal) {
          this._contentOffset.x += dx;
        } else {
          this._contentOffset.y += dy;
        }

        this._scroll(animated);
      }
    }, {
      key: "scrollTo",
      value: function scrollTo(_ref6) {
        var _ref6$x = _ref6.x,
            x = _ref6$x === undefined ? 0 : _ref6$x,
            _ref6$y = _ref6.y,
            y = _ref6$y === undefined ? 0 : _ref6$y,
            _ref6$animated = _ref6.animated,
            animated = _ref6$animated === undefined ? false : _ref6$animated;

        if (this.props.horizontal) {
          this._contentOffset.x = x;
        } else {
          this._contentOffset.y = y;
        }

        this._scroll(animated);
      }
    }, {
      key: "scrollToRowKey",
      value: function scrollToRowKey(_ref7) {
        var key = _ref7.key,
            _ref7$animated = _ref7.animated,
            animated = _ref7$animated === undefined ? false : _ref7$animated;
        var _state2 = this.state,
            order = _state2.order,
            containerLayout = _state2.containerLayout,
            rowsLayouts = _state2.rowsLayouts;
        var keyX = 0;
        var keyY = 0;

        for (var _iterator = order, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref8;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref8 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref8 = _i.value;
          }

          var rowKey = _ref8;

          if (rowKey === key) {
            break;
          }

          keyX += rowsLayouts[rowKey].width;
          keyY += rowsLayouts[rowKey].height;
        }

        if (this.props.horizontal ? keyX < this._contentOffset.x || keyX > this._contentOffset.x + containerLayout.width : keyY < this._contentOffset.y || keyY > this._contentOffset.y + containerLayout.height) {
          if (this.props.horizontal) {
            this._contentOffset.x = keyX;
          } else {
            this._contentOffset.y = keyY;
          }

          this._scroll(animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _props = this.props,
            contentContainerStyle = _props.contentContainerStyle,
            innerContainerStyle = _props.innerContainerStyle,
            horizontal = _props.horizontal,
            style = _props.style,
            showsVerticalScrollIndicator = _props.showsVerticalScrollIndicator,
            showsHorizontalScrollIndicator = _props.showsHorizontalScrollIndicator,
            scrollEventThrottle = _props.scrollEventThrottle;
        var _state3 = this.state,
            animated = _state3.animated,
            contentHeight = _state3.contentHeight,
            contentWidth = _state3.contentWidth,
            scrollEnabled = _state3.scrollEnabled;

        var containerStyle = _reactNative.StyleSheet.flatten([style, {
          opacity: Number(animated)
        }]);

        innerContainerStyle = [styles.rowsContainer, horizontal ? {
          width: contentWidth
        } : {
          height: contentHeight
        }, innerContainerStyle];
        var refreshControl = this.props.refreshControl;

        if (refreshControl && refreshControl.type === _reactNative.RefreshControl) {
          refreshControl = _react2.default.cloneElement(this.props.refreshControl, {
            enabled: scrollEnabled
          });
        }

        return _react2.default.createElement(
          _reactNative.View,
          {
            style: containerStyle,
            ref: this._onRefContainer
          },
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              refreshControl: refreshControl,
              ref: this._onRefScrollView,
              horizontal: horizontal,
              contentContainerStyle: contentContainerStyle,
              scrollEventThrottle: scrollEventThrottle || 2,
              scrollEnabled: scrollEnabled,
              showsHorizontalScrollIndicator: showsHorizontalScrollIndicator,
              showsVerticalScrollIndicator: showsVerticalScrollIndicator,
              onScroll: this._onScroll
            },
            this._renderHeader(),
            _react2.default.createElement(
              _reactNative.View,
              {
                style: innerContainerStyle
              },
              this._renderRows()
            ),
            this._renderFooter()
          )
        );
      }
    }, {
      key: "_renderRows",
      value: function _renderRows() {
        var _this4 = this;

        var _props2 = this.props,
            horizontal = _props2.horizontal,
            rowActivationTime = _props2.rowActivationTime,
            sortingEnabled = _props2.sortingEnabled,
            renderRow = _props2.renderRow;
        var _state4 = this.state,
            animated = _state4.animated,
            order = _state4.order,
            data = _state4.data,
            activeRowKey = _state4.activeRowKey,
            releasedRowKey = _state4.releasedRowKey,
            rowsLayouts = _state4.rowsLayouts;
        var nextX = 0;
        var nextY = 0;
        return order.map(function (key, index) {
          var style = babelHelpers.defineProperty({}, ZINDEX, 0);
          var location = {
            x: 0,
            y: 0
          };

          if (rowsLayouts) {
            if (horizontal) {
              location.x = nextX;
              nextX += rowsLayouts[key] ? rowsLayouts[key].width : 0;
            } else {
              location.y = nextY;
              nextY += rowsLayouts[key] ? rowsLayouts[key].height : 0;
            }
          }

          var active = activeRowKey === key;
          var released = releasedRowKey === key;

          if (active || released) {
            style[ZINDEX] = 100;
          }

          return _react2.default.createElement(
            _Row2.default,
            {
              key: uniqueRowKey(key),
              ref: _this4._onRefRow.bind(_this4, key),
              horizontal: horizontal,
              activationTime: rowActivationTime,
              animated: animated && !active,
              disabled: !sortingEnabled,
              style: style,
              location: location,
              onLayout: !rowsLayouts ? _this4._onLayoutRow.bind(_this4, key) : null,
              onActivate: _this4._onActivateRow.bind(_this4, key, index),
              onPress: _this4._onPressRow.bind(_this4, key),
              onRelease: _this4._onReleaseRow.bind(_this4, key),
              onMove: _this4._onMoveRow,
              manuallyActivateRows: _this4.props.manuallyActivateRows
            },
            renderRow({
              key: key,
              data: data[key],
              disabled: !sortingEnabled,
              active: active,
              index: index
            })
          );
        });
      }
    }, {
      key: "_renderHeader",
      value: function _renderHeader() {
        if (!this.props.renderHeader || this.props.horizontal) {
          return null;
        }

        var headerLayout = this.state.headerLayout;
        return _react2.default.createElement(
          _reactNative.View,
          {
            onLayout: !headerLayout ? this._onLayoutHeader : null
          },
          this.props.renderHeader()
        );
      }
    }, {
      key: "_renderFooter",
      value: function _renderFooter() {
        if (!this.props.renderFooter || this.props.horizontal) {
          return null;
        }

        var footerLayout = this.state.footerLayout;
        return _react2.default.createElement(
          _reactNative.View,
          {
            onLayout: !footerLayout ? this._onLayoutFooter : null
          },
          this.props.renderFooter()
        );
      }
    }, {
      key: "_onUpdateLayouts",
      value: function _onUpdateLayouts() {
        var _this5 = this;

        Promise.all([this._headerLayout, this._footerLayout].concat(babelHelpers.toConsumableArray(Object.values(this._rowsLayouts)))).then(function (_ref9) {
          var _ref10 = babelHelpers.toArray(_ref9),
              headerLayout = _ref10[0],
              footerLayout = _ref10[1],
              rowsLayouts = _ref10.slice(2);

          _this5._container.measure(function (x, y, width, height, pageX, pageY) {
            var rowsLayoutsByKey = {};
            var contentHeight = 0;
            var contentWidth = 0;
            rowsLayouts.forEach(function (_ref11) {
              var rowKey = _ref11.rowKey,
                  layout = _ref11.layout;
              rowsLayoutsByKey[rowKey] = layout;
              contentHeight += layout.height;
              contentWidth += layout.width;
            });

            _this5.setState({
              containerLayout: {
                x: x,
                y: y,
                width: width,
                height: height,
                pageX: pageX,
                pageY: pageY
              },
              rowsLayouts: rowsLayoutsByKey,
              headerLayout: headerLayout,
              footerLayout: footerLayout,
              contentHeight: contentHeight,
              contentWidth: contentWidth
            }, function () {
              _this5.setState({
                animated: true
              });
            });
          });
        });
      }
    }, {
      key: "_scroll",
      value: function _scroll(animated) {
        this._scrollView.scrollTo(babelHelpers.extends({}, this._contentOffset, {
          animated: animated
        }));
      }
    }, {
      key: "_setOrderOnMove",
      value: function _setOrderOnMove() {
        var _this6 = this;

        var _state5 = this.state,
            activeRowKey = _state5.activeRowKey,
            activeRowIndex = _state5.activeRowIndex,
            order = _state5.order;

        if (activeRowKey === null || this._autoScrollInterval) {
          return;
        }

        var _findRowUnderActiveRo = this._findRowUnderActiveRow(),
            rowUnderActiveKey = _findRowUnderActiveRo.rowKey,
            rowUnderActiveIndex = _findRowUnderActiveRo.rowIndex;

        if (this._movingDirectionChanged) {
          this._prevSwapedRowKey = null;
        }

        if (rowUnderActiveKey !== activeRowKey && rowUnderActiveKey !== this._prevSwapedRowKey) {
          var isNeighbours = Math.abs(rowUnderActiveIndex - activeRowIndex) === 1;
          var nextOrder = void 0;

          if (isNeighbours) {
            this._prevSwapedRowKey = rowUnderActiveKey;
            nextOrder = (0, _utils.swapArrayElements)(order, activeRowIndex, rowUnderActiveIndex);
          } else {
            nextOrder = order.slice();
            nextOrder.splice(activeRowIndex, 1);
            nextOrder.splice(rowUnderActiveIndex, 0, activeRowKey);
          }

          this.setState({
            order: nextOrder,
            activeRowIndex: rowUnderActiveIndex
          }, function () {
            if (_this6.props.onChangeOrder) {
              _this6.props.onChangeOrder(nextOrder);
            }
          });
        }
      }
    }, {
      key: "_findRowUnderActiveRow",
      value: function _findRowUnderActiveRow() {
        var horizontal = this.props.horizontal;
        var _state6 = this.state,
            rowsLayouts = _state6.rowsLayouts,
            activeRowKey = _state6.activeRowKey,
            activeRowIndex = _state6.activeRowIndex,
            order = _state6.order;
        var movingRowLayout = rowsLayouts[activeRowKey];
        var rowLeftX = this._activeRowLocation.x;
        var rowRightX = rowLeftX + movingRowLayout.width;
        var rowTopY = this._activeRowLocation.y;
        var rowBottomY = rowTopY + movingRowLayout.height;

        for (var currentRowIndex = 0, x = 0, y = 0, rowsCount = order.length; currentRowIndex < rowsCount - 1; currentRowIndex++) {
          var currentRowKey = order[currentRowIndex];
          var currentRowLayout = rowsLayouts[currentRowKey];
          var nextRowIndex = currentRowIndex + 1;
          var nextRowLayout = rowsLayouts[order[nextRowIndex]];
          x += currentRowLayout.width;
          y += currentRowLayout.height;

          if (currentRowKey !== activeRowKey && (horizontal ? (x - currentRowLayout.width <= rowLeftX || currentRowIndex === 0) && rowLeftX <= x - currentRowLayout.width / 3 : (y - currentRowLayout.height <= rowTopY || currentRowIndex === 0) && rowTopY <= y - currentRowLayout.height / 3)) {
            return {
              rowKey: order[currentRowIndex],
              rowIndex: currentRowIndex
            };
          }

          if (horizontal ? x + nextRowLayout.width / 3 <= rowRightX && (rowRightX <= x + nextRowLayout.width || nextRowIndex === rowsCount - 1) : y + nextRowLayout.height / 3 <= rowBottomY && (rowBottomY <= y + nextRowLayout.height || nextRowIndex === rowsCount - 1)) {
            return {
              rowKey: order[nextRowIndex],
              rowIndex: nextRowIndex
            };
          }
        }

        return {
          rowKey: activeRowKey,
          rowIndex: activeRowIndex
        };
      }
    }, {
      key: "_scrollOnMove",
      value: function _scrollOnMove(e) {
        var _this7 = this;

        var _e$nativeEvent = e.nativeEvent,
            pageX = _e$nativeEvent.pageX,
            pageY = _e$nativeEvent.pageY;
        var horizontal = this.props.horizontal;
        var containerLayout = this.state.containerLayout;
        var inAutoScrollBeginArea = false;
        var inAutoScrollEndArea = false;

        if (horizontal) {
          inAutoScrollBeginArea = pageX < containerLayout.pageX + this.props.autoscrollAreaSize;
          inAutoScrollEndArea = pageX > containerLayout.pageX + containerLayout.width - this.props.autoscrollAreaSize;
        } else {
          inAutoScrollBeginArea = pageY < containerLayout.pageY + this.props.autoscrollAreaSize;
          inAutoScrollEndArea = pageY > containerLayout.pageY + containerLayout.height - this.props.autoscrollAreaSize;
        }

        if (!inAutoScrollBeginArea && !inAutoScrollEndArea && this._autoScrollInterval !== null) {
          this._stopAutoScroll();
        }

        if (this._autoScrollInterval !== null) {
          return;
        }

        if (inAutoScrollBeginArea) {
          this._startAutoScroll({
            direction: -1,
            shouldScroll: function shouldScroll() {
              return _this7._contentOffset[horizontal ? 'x' : 'y'] > 0;
            },
            getScrollStep: function getScrollStep(stepIndex) {
              var nextStep = _this7._getScrollStep(stepIndex);

              var contentOffset = _this7._contentOffset[horizontal ? 'x' : 'y'];
              return contentOffset - nextStep < 0 ? contentOffset : nextStep;
            }
          });
        } else if (inAutoScrollEndArea) {
          this._startAutoScroll({
            direction: 1,
            shouldScroll: function shouldScroll() {
              var _state7 = _this7.state,
                  contentHeight = _state7.contentHeight,
                  contentWidth = _state7.contentWidth,
                  containerLayout = _state7.containerLayout,
                  _state7$footerLayout = _state7.footerLayout,
                  footerLayout = _state7$footerLayout === undefined ? {
                height: 0
              } : _state7$footerLayout;

              if (horizontal) {
                return _this7._contentOffset.x < contentWidth - containerLayout.width;
              } else {
                return _this7._contentOffset.y < contentHeight + footerLayout.height - containerLayout.height;
              }
            },
            getScrollStep: function getScrollStep(stepIndex) {
              var nextStep = _this7._getScrollStep(stepIndex);

              var _state8 = _this7.state,
                  contentHeight = _state8.contentHeight,
                  contentWidth = _state8.contentWidth,
                  containerLayout = _state8.containerLayout,
                  _state8$footerLayout = _state8.footerLayout,
                  footerLayout = _state8$footerLayout === undefined ? {
                height: 0
              } : _state8$footerLayout;

              if (horizontal) {
                return _this7._contentOffset.x + nextStep > contentWidth - containerLayout.width ? contentWidth - containerLayout.width - _this7._contentOffset.x : nextStep;
              } else {
                var scrollHeight = contentHeight + footerLayout.height - containerLayout.height;
                return _this7._contentOffset.y + nextStep > scrollHeight ? scrollHeight - _this7._contentOffset.y : nextStep;
              }
            }
          });
        }
      }
    }, {
      key: "_getScrollStep",
      value: function _getScrollStep(stepIndex) {
        return stepIndex > 3 ? 60 : 30;
      }
    }, {
      key: "_startAutoScroll",
      value: function _startAutoScroll(_ref12) {
        var _this8 = this;

        var direction = _ref12.direction,
            shouldScroll = _ref12.shouldScroll,
            getScrollStep = _ref12.getScrollStep;

        if (!shouldScroll()) {
          return;
        }

        var activeRowKey = this.state.activeRowKey;
        var horizontal = this.props.horizontal;
        var counter = 0;
        this._autoScrollInterval = setInterval(function () {
          if (shouldScroll()) {
            var movement = babelHelpers.defineProperty({}, horizontal ? 'dx' : 'dy', direction * getScrollStep(counter++));

            _this8.scrollBy(movement);

            _this8._rows[activeRowKey].moveBy(movement);
          } else {
            _this8._stopAutoScroll();
          }
        }, AUTOSCROLL_INTERVAL);
      }
    }, {
      key: "_stopAutoScroll",
      value: function _stopAutoScroll() {
        clearInterval(this._autoScrollInterval);
        this._autoScrollInterval = null;
      }
    }, {
      key: "_onLayoutRow",
      value: function _onLayoutRow(rowKey, _ref13) {
        var layout = _ref13.nativeEvent.layout;

        this._resolveRowLayout[rowKey]({
          rowKey: rowKey,
          layout: layout
        });
      }
    }]);
    return SortableList;
  }(_react.Component);

  SortableList.propTypes = {
    data: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]).isRequired,
    order: _propTypes2.default.arrayOf(_propTypes2.default.any),
    style: _reactNative.ViewPropTypes.style,
    contentContainerStyle: _reactNative.ViewPropTypes.style,
    innerContainerStyle: _reactNative.ViewPropTypes.style,
    sortingEnabled: _propTypes2.default.bool,
    scrollEnabled: _propTypes2.default.bool,
    horizontal: _propTypes2.default.bool,
    showsVerticalScrollIndicator: _propTypes2.default.bool,
    showsHorizontalScrollIndicator: _propTypes2.default.bool,
    refreshControl: _propTypes2.default.element,
    autoscrollAreaSize: _propTypes2.default.number,
    rowActivationTime: _propTypes2.default.number,
    manuallyActivateRows: _propTypes2.default.bool,
    renderRow: _propTypes2.default.func.isRequired,
    renderHeader: _propTypes2.default.func,
    renderFooter: _propTypes2.default.func,
    onChangeOrder: _propTypes2.default.func,
    onActivateRow: _propTypes2.default.func,
    onReleaseRow: _propTypes2.default.func
  };
  SortableList.defaultProps = {
    sortingEnabled: true,
    scrollEnabled: true,
    autoscrollAreaSize: 60,
    manuallyActivateRows: false,
    showsVerticalScrollIndicator: true,
    showsHorizontalScrollIndicator: true
  };
  exports.default = SortableList;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    rowsContainer: {
      flex: 1,
      zIndex: 1
    }
  });
},11447,[10297,10318,10033,11450,11459],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableList/SortableList.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.swapArrayElements = exports.shallowEqual = undefined;

  var _shallowEqual = _require(_dependencyMap[0]);

  var _shallowEqual2 = babelHelpers.interopRequireDefault(_shallowEqual);

  var _swapArrayElements = _require(_dependencyMap[1]);

  var _swapArrayElements2 = babelHelpers.interopRequireDefault(_swapArrayElements);

  exports.shallowEqual = _shallowEqual2.default;
  exports.swapArrayElements = _swapArrayElements2.default;
},11450,[11453,11456],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableList/utils/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = shallowEqual;

  function shallowEqual(objA, objB) {
    if (objA === objB) {
      return true;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    var hasOwn = Object.prototype.hasOwnProperty;

    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
        return false;
      }
    }

    return true;
  }
},11453,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableList/utils/shallowEqual.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = swapArrayElements;

  function swapArrayElements(array, indexA, indexB) {
    if (indexA === indexB) {
      return array;
    }

    if (indexA > indexB) {
      var _ref = [indexB, indexA];
      indexA = _ref[0];
      indexB = _ref[1];
    }

    return [].concat(babelHelpers.toConsumableArray(array.slice(0, indexA)), [array[indexB]], babelHelpers.toConsumableArray(array.slice(indexA + 1, indexB)), [array[indexA]], babelHelpers.toConsumableArray(array.slice(indexB + 1)));
  }
},11456,[],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableList/utils/swapArrayElements.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[1]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[2]);

  var _utils = _require(_dependencyMap[3]);

  var Row = function (_Component) {
    babelHelpers.inherits(Row, _Component);

    function Row(props) {
      babelHelpers.classCallCheck(this, Row);

      var _this = babelHelpers.possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).call(this, props));

      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return !_this._isDisabled();
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(e, gestureState) {
          if (_this._isDisabled()) return false;
          var vy = Math.abs(gestureState.vy);
          var vx = Math.abs(gestureState.vx);
          return _this._active && (_this.props.horizontal ? vx > vy : vy > vx);
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderGrant: function onPanResponderGrant(e, gestureState) {
          e.persist();
          _this._target = e.nativeEvent.target;
          _this._prevGestureState = babelHelpers.extends({}, gestureState, {
            moveX: gestureState.x0,
            moveY: gestureState.y0
          });
          if (_this.props.manuallyActivateRows) return;
          _this._longPressTimer = setTimeout(function () {
            if (_this._active) return;

            _this._toggleActive(e, gestureState);
          }, _this.props.activationTime);
        },
        onPanResponderMove: function onPanResponderMove(e, gestureState) {
          if (!_this._active || gestureState.numberActiveTouches > 1 || e.nativeEvent.target !== _this._target) {
            if (!_this._isTouchInsideElement(e)) {
              _this._cancelLongPress();
            }

            return;
          }

          var elementMove = _this._mapGestureToMove(_this._prevGestureState, gestureState);

          _this.moveBy(elementMove);

          _this._prevGestureState = babelHelpers.extends({}, gestureState);

          if (_this.props.onMove) {
            _this.props.onMove(e, gestureState, _this._nextLocation);
          }
        },
        onPanResponderRelease: function onPanResponderRelease(e, gestureState) {
          if (_this._active) {
            _this._toggleActive(e, gestureState);
          } else {
            _this._cancelLongPress();

            if (_this._isTouchInsideElement(e) && _this.props.onPress) {
              _this.props.onPress();
            }
          }
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          if (_this._active) {
            return false;
          }

          _this._cancelLongPress();

          return true;
        },
        onPanResponderTerminate: function onPanResponderTerminate(e, gestureState) {
          _this._cancelLongPress();

          if (_this._active) {
            _this._toggleActive(e, gestureState);

            if ((0, _utils.shallowEqual)(_this.props.location, _this._location)) {
              _this._relocate(_this.props.location);
            }
          }
        }
      });

      _this._toggleActive = function (e, gestureState) {
        var callback = _this._active ? _this.props.onRelease : _this.props.onActivate;
        _this._active = !_this._active;

        if (callback) {
          callback(e, gestureState, _this._location);
        }
      };

      _this._onChangeLocation = function (value) {
        _this._location = value;
      };

      _this._onLayout = function (e) {
        _this._layout = e.nativeEvent.layout;

        if (_this.props.onLayout) {
          _this.props.onLayout(e);
        }
      };

      _this._animatedLocation = new _reactNative.Animated.ValueXY(props.location);
      _this._location = props.location;

      _this._animatedLocation.addListener(_this._onChangeLocation);

      return _this;
    }

    babelHelpers.createClass(Row, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        if (!this._active && !(0, _utils.shallowEqual)(this._location, nextProps.location)) {
          var animated = !this._active && nextProps.animated;

          this._relocate(nextProps.location, animated);
        }
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps, nextState) {
        return this.props.disabled !== nextProps.disabled || this.props.children !== nextProps.children || !(0, _utils.shallowEqual)(this.props.style, nextProps.style);
      }
    }, {
      key: "moveBy",
      value: function moveBy(_ref) {
        var _ref$dx = _ref.dx,
            dx = _ref$dx === undefined ? 0 : _ref$dx,
            _ref$dy = _ref.dy,
            dy = _ref$dy === undefined ? 0 : _ref$dy,
            _ref$animated = _ref.animated,
            animated = _ref$animated === undefined ? false : _ref$animated;
        this._nextLocation = {
          x: this._location.x + dx,
          y: this._location.y + dy
        };

        this._relocate(this._nextLocation, animated);
      }
    }, {
      key: "render",
      value: function render() {
        var _props = this.props,
            children = _props.children,
            style = _props.style,
            horizontal = _props.horizontal;
        var rowStyle = [style, styles.container, this._animatedLocation.getLayout(), horizontal ? styles.horizontalContainer : styles.verticalContainer];
        return _react2.default.createElement(
          _reactNative.Animated.View,
          babelHelpers.extends({}, this._panResponder.panHandlers, {
            style: rowStyle,
            onLayout: this._onLayout
          }),
          this.props.manuallyActivateRows && children ? (0, _react.cloneElement)(children, {
            toggleRowActive: this._toggleActive
          }) : children
        );
      }
    }, {
      key: "_cancelLongPress",
      value: function _cancelLongPress() {
        clearTimeout(this._longPressTimer);
      }
    }, {
      key: "_relocate",
      value: function _relocate(nextLocation, animated) {
        var _this2 = this;

        this._location = nextLocation;

        if (animated) {
          this._isAnimationRunning = true;

          _reactNative.Animated.timing(this._animatedLocation, {
            toValue: nextLocation,
            duration: 300
          }).start(function () {
            _this2._isAnimationRunning = false;
          });
        } else {
          this._animatedLocation.setValue(nextLocation);
        }
      }
    }, {
      key: "_mapGestureToMove",
      value: function _mapGestureToMove(prevGestureState, gestureState) {
        return this.props.horizontal ? {
          dx: gestureState.moveX - prevGestureState.moveX
        } : {
          dy: gestureState.moveY - prevGestureState.moveY
        };
      }
    }, {
      key: "_isDisabled",
      value: function _isDisabled() {
        return this.props.disabled || this._isAnimationRunning;
      }
    }, {
      key: "_isTouchInsideElement",
      value: function _isTouchInsideElement(_ref2) {
        var nativeEvent = _ref2.nativeEvent;
        return this._layout && nativeEvent.locationX >= 0 && nativeEvent.locationX <= this._layout.width && nativeEvent.locationY >= 0 && nativeEvent.locationY <= this._layout.height;
      }
    }]);
    return Row;
  }(_react.Component);

  Row.propTypes = {
    children: _propTypes2.default.node,
    animated: _propTypes2.default.bool,
    disabled: _propTypes2.default.bool,
    horizontal: _propTypes2.default.bool,
    style: _reactNative.ViewPropTypes.style,
    location: _propTypes2.default.shape({
      x: _propTypes2.default.number,
      y: _propTypes2.default.number
    }),
    manuallyActivateRows: _propTypes2.default.bool,
    activationTime: _propTypes2.default.number,
    onActivate: _propTypes2.default.func,
    onLayout: _propTypes2.default.func,
    onPress: _propTypes2.default.func,
    onMove: _propTypes2.default.func,
    onRelease: _propTypes2.default.func
  };
  Row.defaultProps = {
    location: {
      x: 0,
      y: 0
    },
    activationTime: 200
  };
  exports.default = Row;

  var styles = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute'
    },
    horizontalContainer: {
      top: 0,
      bottom: 0
    },
    verticalContainer: {
      left: 0,
      right: 0
    }
  });
},11459,[10297,10318,10033,11450],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/ThirdPartLibrary/SortableList/Row.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _react = _require(_dependencyMap[0]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseComponentDataSource = BaseYeelightModulesDataSource.BaseComponentDataSource;

  var BaseReactComponent = function (_Component) {
    babelHelpers.inherits(BaseReactComponent, _Component);

    function BaseReactComponent(props) {
      babelHelpers.classCallCheck(this, BaseReactComponent);

      var _this = babelHelpers.possibleConstructorReturn(this, (BaseReactComponent.__proto__ || Object.getPrototypeOf(BaseReactComponent)).call(this, props));

      _this._created = true;
      _this._didMount = false;
      _this.componentDataSource = {};
      _this.state = {};

      _this.initialComponentDataSource(babelHelpers.extends({}, _this.props, {
        componentOwner: _this,
        stateValueChangeCallback: function stateValueChangeCallback(newState) {
          _this.stateValueChangeHandle(newState);
        }
      }));

      return _this;
    }

    babelHelpers.createClass(BaseReactComponent, [{
      key: "setState",
      value: function setState(value) {
        if (this._created) {
          babelHelpers.get(BaseReactComponent.prototype.__proto__ || Object.getPrototypeOf(BaseReactComponent.prototype), "setState", this).call(this, value);
        }
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {}
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._didMount = true;
      }
    }, {
      key: "datasource",
      value: function datasource() {
        return this.componentDataSource;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._created = false;
      }
    }, {
      key: "shouldOptimizationState",
      value: function shouldOptimizationState() {
        return false;
      }
    }, {
      key: "stateValueChangeHandle",
      value: function stateValueChangeHandle(newState) {
        var _this2 = this;

        if (this.shouldOptimizationState() && !this._didMount) {
          this.state = babelHelpers.extends({}, this.state, newState);
        } else {
          setTimeout(function () {
            _this2.setState(babelHelpers.extends({}, _this2.state, newState));
          });
        }

        if (this.props.stateValueChangeCallback) {
          this.props.stateValueChangeCallback(newState);
        }
      }
    }, {
      key: "initialComponentDataSource",
      value: function initialComponentDataSource(props) {
        var componentDataSourceClassName = this.componentDataSourceClassName;
        this.componentDataSource = new componentDataSourceClassName(props);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement(View, null);
      }
    }, {
      key: "componentDataSourceInitialParameter",
      get: function get() {
        return this.props;
      }
    }, {
      key: "componentDataSourceClassName",
      get: function get() {
        return BaseComponentDataSource;
      }
    }]);
    return BaseReactComponent;
  }(_react.Component);

  module.exports = BaseReactComponent;
},11462,[10297,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/BaseReactComponent.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _CommonYeelightModules = _require(_dependencyMap[0]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var MainPage = _CommonYeelightModules2.default.MainPage,
        ColorPicker = _CommonYeelightModules2.default.ColorPicker,
        SettingMenu = _CommonYeelightModules2.default.SettingMenu,
        CollectionYeelight = _CommonYeelightModules2.default.CollectionYeelight,
        MibandAttachedPage = _CommonYeelightModules2.default.MibandAttachedPage,
        DefaultLightNewCommon = _CommonYeelightModules2.default.DefaultLightNewCommon,
        AmbilightSettingPage = _CommonYeelightModules2.default.AmbilightSettingPage,
        RemoteControlListPage = _CommonYeelightModules2.default.RemoteControlListPage,
        DelayTimer = _CommonYeelightModules2.default.DelayTimer,
        NightLightSettingPage = _CommonYeelightModules2.default.NightLightSettingPage,
        MibandBroadcastTipPage = _CommonYeelightModules2.default.MibandBroadcastTipPage,
        MibandSearchPage = _CommonYeelightModules2.default.MibandSearchPage,
        WebViewPage = _CommonYeelightModules2.default.WebViewPage,
        CommonSceneMain = _CommonYeelightModules2.default.CommonSceneMain,
        SmartSwitchDetailPage = _CommonYeelightModules2.default.SmartSwitchDetailPage;
    exports.default = {
        MainPage: MainPage.component,
        ColorPicker: ColorPicker.component,
        SettingMenu: SettingMenu.component,
        CollectionYeelight: CollectionYeelight.component,
        MibandAttachedPage: MibandAttachedPage.component,
        DefaultLightNewCommon: DefaultLightNewCommon.component,
        AmbilightSettingPage: AmbilightSettingPage.component,
        RemoteControlListPage: RemoteControlListPage.component,
        DelayTimer: DelayTimer.component,
        NightLightSettingPage: NightLightSettingPage.component,
        MibandBroadcastTipPage: MibandBroadcastTipPage.component,
        MibandSearchPage: MibandSearchPage.component,
        WebViewPage: WebViewPage.component,
        CommonSceneMain: CommonSceneMain.component,
        SmartSwitchDetailPage: SmartSwitchDetailPage.component
    };
},11465,[10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/RouteConfigMap.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _propTypes = _require(_dependencyMap[0]);

  var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

  var _react = _require(_dependencyMap[1]);

  var _react2 = babelHelpers.interopRequireDefault(_react);

  var _reactNative = _require(_dependencyMap[2]);

  var _resources = _require(_dependencyMap[3]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 100.0;
  var minMargin = 1.0;

  var Switch = function (_React$Component) {
    babelHelpers.inherits(Switch, _React$Component);

    function Switch(props) {
      babelHelpers.classCallCheck(this, Switch);

      var _this = babelHelpers.possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props));

      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight - 2 * margin;
      _this.offsetXMax = backWidth - backHeight;
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    babelHelpers.createClass(Switch, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var backgroundColor = this.state.value ? this.props.onTintColor : this.props.tintColor;
        var opacity = 1;
        return _react2.default.createElement(
          _reactNative.View,
          {
            style: [styles.container, this.props.style]
          },
          _react2.default.createElement(
            _reactNative.TouchableOpacity,
            {
              style: [styles.back, this.backStyle, {
                backgroundColor: backgroundColor,
                opacity: opacity
              }],
              disabled: this.props.disabled,
              activeOpacity: 0.8,
              onPress: function onPress(_) {
                return _this2._onValueChange();
              }
            },
            _react2.default.createElement(_reactNative.Animated.View, {
              style: [styles.circle, this.circleStyle, {
                transform: [{
                  translateX: this.offsetX
                }]
              }]
            })
          )
        );
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var value = !this.state.value;

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }

        this.setState({
          value: value
        }, this.animated);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react2.default.Component);

  Switch.propTypes = {
    value: _propTypes2.default.bool.isRequired,
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
    onTintColor: _propTypes2.default.string,
    tintColor: _propTypes2.default.string,
    disabled: _propTypes2.default.bool,
    onValueChange: _propTypes2.default.func.isRequired
  };
  Switch.defaultProps = {
    value: false,
    style: {},
    onTintColor: _resources.Styles.common.MHGreen,
    tintColor: OFF_COLOR,
    disabled: false
  };
  exports.default = Switch;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center',
      borderWidth: BORDER_WIDTH,
      borderColor: BORDER_COLOR
    },
    circle: {
      position: 'absolute',
      borderWidth: BORDER_WIDTH,
      borderColor: BORDER_COLOR,
      backgroundColor: '#fff'
    }
  });
},11468,[10318,10297,10033,10077],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLSwitch.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _propTypes = _require(_dependencyMap[1]);

    var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[2]);

    var YLImageStateButton = function (_React$Component) {
        babelHelpers.inherits(YLImageStateButton, _React$Component);

        function YLImageStateButton(props) {
            babelHelpers.classCallCheck(this, YLImageStateButton);

            var _this = babelHelpers.possibleConstructorReturn(this, (YLImageStateButton.__proto__ || Object.getPrototypeOf(YLImageStateButton)).call(this, props));

            _this.state = {
                buttonSelected: _this.props.selected,
                buttonOnPress: false
            };
            return _this;
        }

        babelHelpers.createClass(YLImageStateButton, [{
            key: "_buttonPressIn",
            value: function _buttonPressIn() {
                this.setState({
                    buttonOnPress: true
                });
            }
        }, {
            key: "_buttonPressOut",
            value: function _buttonPressOut() {
                this.setState({
                    buttonOnPress: false
                });
            }
        }, {
            key: "_isButtonSelected",
            value: function _isButtonSelected() {
                return this.state.buttonSelected;
            }
        }, {
            key: "_isButtonOnPress",
            value: function _isButtonOnPress() {
                return this.state.buttonOnPress;
            }
        }, {
            key: "changeSelected",
            value: function changeSelected(value) {
                this.setState({
                    buttonOnPress: false,
                    buttonSelected: value
                });
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                if (nextProps && nextProps.selected && nextProps.selected != this.state.buttonSelected) {
                    this.setState({
                        buttonOnPress: false,
                        buttonSelected: nextProps.selected
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var source = this.props.unselectNormal;

                if (this._isButtonSelected()) {
                    source = this._isButtonOnPress() && this.props.selectPress ? this.props.selectPress : this.props.selectNormal;
                } else {
                    source = this._isButtonOnPress() && this.props.unselectPress ? this.props.unselectPress : this.props.unselectNormal;
                }

                return _react2.default.createElement(
                    _reactNative.TouchableWithoutFeedback,
                    {
                        disabled: this.props.disabled,
                        onPress: this.props.onStateChanged ? function () {
                            _this2.changeSelected(!_this2._isButtonSelected());

                            _this2.props.onStateChanged(!_this2._isButtonSelected());
                        } : this.props.onPress,
                        onPressIn: this._buttonPressIn.bind(this),
                        onPressOut: this._buttonPressOut.bind(this)
                    },
                    _react2.default.createElement(_reactNative.Image, {
                        style: this.props.style,
                        source: source
                    })
                );
            }
        }]);
        return YLImageStateButton;
    }(_react2.default.Component);

    YLImageStateButton.propTypes = {
        unselectNormal: _propTypes2.default.number.isRequired,
        selectNormal: _propTypes2.default.number.isRequired,
        unselectPress: _propTypes2.default.number,
        selectPress: _propTypes2.default.number,
        onPress: _propTypes2.default.func,
        disable: _propTypes2.default.bool,
        selected: _propTypes2.default.bool,
        onStateChanged: _propTypes2.default.func
    };
    YLImageStateButton.defaultProps = {
        unselectNormal: null,
        selectNormal: null,
        unselectPress: null,
        selectPress: null,
        onPress: null
    };
    exports.default = YLImageStateButton;
},11471,[10297,10318,10033],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLImageStateButton.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _propTypes = _require(_dependencyMap[1]);

    var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[2]);

    var _YLImageStateButton = _require(_dependencyMap[3]);

    var _YLImageStateButton2 = babelHelpers.interopRequireDefault(_YLImageStateButton);

    var YLRadioStateButton = function (_React$Component) {
        babelHelpers.inherits(YLRadioStateButton, _React$Component);

        function YLRadioStateButton() {
            babelHelpers.classCallCheck(this, YLRadioStateButton);
            return babelHelpers.possibleConstructorReturn(this, (YLRadioStateButton.__proto__ || Object.getPrototypeOf(YLRadioStateButton)).apply(this, arguments));
        }

        babelHelpers.createClass(YLRadioStateButton, [{
            key: "selectChanged",
            value: function selectChanged(value) {
                this.ImgBtn.changeSelected(value);
            }
        }, {
            key: "_OnPress",
            value: function _OnPress() {
                this.props.onPress && this.props.onPress();
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: this.props.style
                    },
                    _react2.default.createElement(_YLImageStateButton2.default, {
                        ref: function ref(_ref) {
                            return _this2.ImgBtn = _ref;
                        },
                        style: this.props.imgStyle,
                        unselectNormal: this.props.unselectNormal,
                        unselectPress: this.props.unselectPress,
                        selectNormal: this.props.selectNormal,
                        selectPress: this.props.selectPress,
                        onPress: this._OnPress.bind(this)
                    }),
                    _react2.default.createElement(
                        _reactNative.Text,
                        {
                            style: this.props.textStyle
                        },
                        this.props.text
                    )
                );
            }
        }]);
        return YLRadioStateButton;
    }(_react2.default.Component);

    YLRadioStateButton.propTypes = {
        unselectNormal: _propTypes2.default.number.isRequired,
        selectNormal: _propTypes2.default.number.isRequired,
        onPress: _propTypes2.default.func.isRequired
    };
    exports.default = YLRadioStateButton;
},11474,[10297,10318,10033,11471],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLRadioStateButton.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _YLRadioStateButton = _require(_dependencyMap[2]);

    var _YLRadioStateButton2 = babelHelpers.interopRequireDefault(_YLRadioStateButton);

    var YLRadioStateGroup = function (_React$Component) {
        babelHelpers.inherits(YLRadioStateGroup, _React$Component);

        function YLRadioStateGroup(props) {
            babelHelpers.classCallCheck(this, YLRadioStateGroup);

            var _this = babelHelpers.possibleConstructorReturn(this, (YLRadioStateGroup.__proto__ || Object.getPrototypeOf(YLRadioStateGroup)).call(this, props));

            _this._currentIndex = -1;
            _this._previewIndex = -1;
            _this.referencesArray = [];
            _this.itemChange = props.itemChange;
            return _this;
        }

        babelHelpers.createClass(YLRadioStateGroup, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                this.referencesArray = [];
                var _props = this.props,
                    data = _props.data,
                    imgStyle = _props.imgStyle,
                    textStyle = _props.textStyle,
                    style = _props.style;
                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: style
                    },
                    data.map(function (radioData, index) {
                        return _react2.default.createElement(_YLRadioStateButton2.default, {
                            key: index,
                            ref: function ref(radioButton) {
                                radioButton ? _this2.referencesArray.push(radioButton) : radioButton;
                            },
                            text: radioData.text,
                            unselectNormal: radioData.unselectNormal,
                            unselectPress: radioData.unselectPress,
                            selectNormal: radioData.selectNormal,
                            selectPress: radioData.selectPress,
                            imgStyle: imgStyle,
                            textStyle: textStyle,
                            onPress: function onPress() {
                                _this2.change(index, true);

                                if (_this2.props.onPress) {
                                    _this2.props.onPress(index);
                                }
                            }
                        });
                    })
                );
            }
        }, {
            key: "getCurrentIndex",
            value: function getCurrentIndex() {
                return this._currentIndex;
            }
        }, {
            key: "getPreviewIndex",
            value: function getPreviewIndex() {
                return this._previewIndex;
            }
        }, {
            key: "change",
            value: function change(index) {
                var _this3 = this;

                var isSendCmdControl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                this._currentIndex = index;
                this.referencesArray.map(function (refer, index2) {
                    if (refer !== null) {
                        refer.selectChanged(index2 === _this3._currentIndex);
                    }
                });

                if (index >= 0) {
                    this.itemChange(this._currentIndex, isSendCmdControl);
                }

                this._previewIndex = this._currentIndex;
            }
        }]);
        return YLRadioStateGroup;
    }(_react2.default.Component);

    exports.default = YLRadioStateGroup;
},11477,[10297,10033,11474],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLRadioStateGroup.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _propTypes = _require(_dependencyMap[1]);

    var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[2]);

    var _CommonYeelightModules = _require(_dependencyMap[3]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var Theme = _CommonYeelightModules2.default.Theme,
        Images = _CommonYeelightModules2.default.Images;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width;

    var YLCollapsingHeaderView = function (_React$Component) {
        babelHelpers.inherits(YLCollapsingHeaderView, _React$Component);

        function YLCollapsingHeaderView(props, context) {
            babelHelpers.classCallCheck(this, YLCollapsingHeaderView);

            var _this = babelHelpers.possibleConstructorReturn(this, (YLCollapsingHeaderView.__proto__ || Object.getPrototypeOf(YLCollapsingHeaderView)).call(this, props, context));

            _this.props.customDeviceLogoViewStyle = _this.props.deviceLogoStyle;
            return _this;
        }

        babelHelpers.createClass(YLCollapsingHeaderView, [{
            key: "render",
            value: function render() {
                var headerHeight = this.props.scrollY.interpolate({
                    inputRange: [0, this.props.headerContainerHeight - Theme.NAVIGATION_BAR_HEIGHT],
                    outputRange: [this.props.headerContainerHeight, Theme.NAVIGATION_BAR_HEIGHT],
                    extrapolate: 'clamp'
                });
                var headerImageWidthScale = this.props.scrollY.interpolate({
                    inputRange: [0, this.props.headerContainerHeight - Theme.NAVIGATION_BAR_HEIGHT],
                    outputRange: [this.props.deviceLogoWidth, 0],
                    extrapolate: 'clamp'
                });
                var headerImageHeightScale = this.props.scrollY.interpolate({
                    inputRange: [0, this.props.headerContainerHeight - Theme.NAVIGATION_BAR_HEIGHT],
                    outputRange: [this.props.deviceLogoHeight, 0],
                    extrapolate: 'clamp'
                });
                var headerImageOpacity = this.props.scrollY.interpolate({
                    inputRange: [0, this.props.headerContainerHeight - Theme.NAVIGATION_BAR_HEIGHT],
                    outputRange: [1, 0],
                    extrapolate: 'clamp'
                });
                var deviceLogoBgView = this.props.deviceLogoBg ? _react2.default.createElement(_reactNative.Animated.Image, {
                    style: [this.props.deviceLogoStyle, {
                        width: headerImageWidthScale
                    }, {
                        height: headerImageHeightScale
                    }, {
                        left: 0
                    }, {
                        top: 0
                    }, {
                        opacity: this.props.deviceLogoBgOpacityAnim
                    }],
                    source: Images(this.props.deviceLogoBg)
                }) : null;
                var deviceLogoFgView = this.props.deviceLogoFg ? _react2.default.createElement(_reactNative.Animated.Image, {
                    style: [this.props.deviceLogoStyle, {
                        width: headerImageWidthScale
                    }, {
                        height: headerImageHeightScale
                    }, {
                        left: 0
                    }, {
                        top: 0
                    }],
                    source: Images(this.props.deviceLogoFg)
                }) : null;
                var customLogoView = this.props.customDeviceLogoView ? _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                        style: [this.props.customDeviceLogoViewStyle, {
                            width: headerImageWidthScale
                        }, {
                            height: headerImageHeightScale
                        }, {
                            left: 0
                        }, {
                            top: 0
                        }]
                    },
                    this.props.customDeviceLogoView
                ) : null;
                return _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                        style: [this.props.containerStyle, {
                            height: headerHeight
                        }]
                    },
                    _react2.default.createElement(_reactNative.Animated.Image, {
                        style: {
                            width: width,
                            position: "absolute",
                            left: 0,
                            top: 0,
                            height: headerHeight
                        },
                        source: Images(this.props.headerBg)
                    }),
                    _react2.default.createElement(
                        _reactNative.Animated.View,
                        {
                            style: [this.props.deviceLogoStyle, {
                                backgroundColor: "transparent"
                            }, {
                                width: headerImageWidthScale
                            }, {
                                height: headerImageHeightScale
                            }, {
                                opacity: headerImageOpacity
                            }]
                        },
                        deviceLogoBgView,
                        deviceLogoFgView,
                        customLogoView
                    )
                );
            }
        }]);
        return YLCollapsingHeaderView;
    }(_react2.default.Component);

    YLCollapsingHeaderView.propTypes = {
        containerStyle: _propTypes2.default.number.isRequired,
        scrollY: _propTypes2.default.object.isRequired,
        headerContainerHeight: _propTypes2.default.number.isRequired,
        deviceLogoStyle: _propTypes2.default.number.isRequired,
        deviceLogoWidth: _propTypes2.default.number.isRequired,
        deviceLogoHeight: _propTypes2.default.number.isRequired,
        headerBg: _propTypes2.default.string.isRequired,
        deviceLogoBgOpacityAnim: _propTypes2.default.number,
        deviceLogoFg: _propTypes2.default.string,
        deviceLogoBg: _propTypes2.default.string,
        customDeviceLogoView: _propTypes2.default.object,
        customDeviceLogoViewStyle: _propTypes2.default.number
    };
    YLCollapsingHeaderView.defaultProps = {};
    exports.default = YLCollapsingHeaderView;
    ;
},11480,[10297,10318,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLCollapsingHeaderView.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _reactNativeSlider = _require(_dependencyMap[2]);

    var _reactNativeSlider2 = babelHelpers.interopRequireDefault(_reactNativeSlider);

    var _CommonYeelightModules = _require(_dependencyMap[3]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var Theme = _CommonYeelightModules2.default.Theme,
        CLImage = _CommonYeelightModules2.default.CLImage;
    var ratio = Theme.ratio;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var defaultThumbWidth = 25 * ratio;
    var defaultSliderHeight = 25 * ratio;
    var defaultSliderWidth = width - 70 * ratio;
    var defaultSliderStyle = {
        width: defaultSliderWidth,
        height: defaultSliderHeight,
        backgroundColor: 'transparent'
    };
    var defaultTrackStyle = {
        width: defaultSliderWidth,
        height: 6 * ratio,
        justifyContent: "center"
    };
    var defaultThumbStyle = {
        width: defaultThumbWidth,
        height: defaultSliderHeight,
        backgroundColor: '#FFFFFF',
        borderWidth: 1 * ratio,
        borderRadius: 12 * ratio,
        borderColor: '#E5E5E5'
    };
    var MIN_IMUM_VALUE = 1;
    var MAX_IMUM_VALUE = 100;
    var STEP = 1;
    var VALUE = 1;
    var MIN_IMUM_TRACK_TINT_COLOR = "#FFC874";
    var MAX_IMUM_TRACK_TINT_COLOR = "#ECECEC";
    var MIN_IMUM_TRACK_DISABLED_TINT_COLOR = "#ECECEC";
    var MAX_IMUM_TRACK_DISABLED_TINT_COLOR = "#ECECEC";

    var YLSlider = function (_Component) {
        babelHelpers.inherits(YLSlider, _Component);

        function YLSlider(props) {
            babelHelpers.classCallCheck(this, YLSlider);

            var _this = babelHelpers.possibleConstructorReturn(this, (YLSlider.__proto__ || Object.getPrototypeOf(YLSlider)).call(this, props));

            _this.sliderStyle = babelHelpers.extends({}, defaultSliderStyle, _this.props.sliderStyle);
            _this.trackStyle = babelHelpers.extends({}, defaultTrackStyle, _this.props.trackStyle);
            _this.trackContainerStyle = {
                width: _this.sliderStyle.width,
                height: _this.sliderStyle.height,
                position: "absolute",
                justifyContent: "center"
            };
            _this.trackImageStyle = babelHelpers.extends({}, defaultTrackStyle, _this.props.trackStyle);
            _this.thumbStyle = babelHelpers.extends({}, defaultThumbStyle, _this.props.thumbStyle);

            if (_this.props.thumbImage) {
                _this.thumbStyle = babelHelpers.extends({}, _this.thumbStyle, {
                    backgroundColor: 'transparent',
                    borderWidth: 0 * ratio,
                    borderRadius: 0 * ratio,
                    borderColor: 'transparent',
                    opacity: 0
                });
            }

            _this.minimumValue = _this.props.minimumValue == undefined ? MIN_IMUM_VALUE : _this.props.minimumValue;
            _this.maximumValue = _this.props.maximumValue == undefined ? MAX_IMUM_VALUE : _this.props.maximumValue;
            _this.step = _this.props.step == undefined ? STEP : _this.props.step;
            _this.widthStepValue = (_this.sliderStyle.width - _this.thumbStyle.width) / (_this.maximumValue - _this.minimumValue);
            _this.minimumTrackTintColor = _this.props.minimumTrackTintColor == undefined ? MIN_IMUM_TRACK_TINT_COLOR : _this.props.minimumTrackTintColor;
            _this.maximumTrackTintColor = _this.props.maximumTrackTintColor == undefined ? MAX_IMUM_TRACK_TINT_COLOR : _this.props.maximumTrackTintColor;
            _this.minimumTrackDisabledTintColor = _this.props.minimumTrackDisabledTintColor == undefined ? MIN_IMUM_TRACK_DISABLED_TINT_COLOR : _this.props.minimumTrackDisabledTintColor;
            _this.maximumTrackDisabledTintColor = _this.props.maximumTrackDisabledTintColor == undefined ? MAX_IMUM_TRACK_DISABLED_TINT_COLOR : _this.props.maximumTrackDisabledTintColor;
            var value = _this.props.value == undefined ? VALUE : _this.props.value;
            _this.state = {
                value: value,
                disabled: _this.props.disabled == undefined ? false : _this.props.disabled,
                sliderThumbLeft: _this._getSliderThumgLeft(value)
            };
            _this.parentProps = {
                value: value
            };
            return _this;
        }

        babelHelpers.createClass(YLSlider, [{
            key: "componentWillMount",
            value: function componentWillMount() {}
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                if (nextProps && nextProps.value != null && nextProps.value != this.parentProps.value) {
                    this.parentProps = babelHelpers.extends({}, this.parentProps, {
                        value: nextProps.value
                    });
                    this.setValue(nextProps.value);
                }

                if (nextProps && nextProps.disabled != null && nextProps.disabled != this.state.disabled) {
                    this.setState({
                        disabled: nextProps.disabled
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: this.sliderStyle
                    },
                    this._getTrackView(),
                    _react2.default.createElement(_reactNativeSlider2.default, {
                        style: this.sliderStyle,
                        minimumValue: this.minimumValue,
                        maximumValue: this.maximumValue,
                        minimumTrackTintColor: this.state.disabled ? this.minimumTrackDisabledTintColor : this.minimumTrackTintColor,
                        maximumTrackTintColor: this.state.disabled ? this.maximumTrackDisabledTintColor : this.maximumTrackTintColor,
                        trackStyle: this.trackStyle,
                        thumbStyle: this.thumbStyle,
                        step: this.step,
                        value: this.state.value,
                        onValueChange: function onValueChange(value) {
                            return _this2._valueChange(value);
                        },
                        onSlidingComplete: function onSlidingComplete(value) {
                            return _this2._valueChangeComplete(value);
                        },
                        disabled: this.state.disabled,
                        pointerEvents: this.state.disabled ? "none" : null
                    }),
                    this._getThumbView()
                );
            }
        }, {
            key: "_getTrackView",
            value: function _getTrackView() {
                var trackView = null;

                if (this.state.disabled) {
                    if (this.props.trackImage) {
                        this.trackStyle = babelHelpers.extends({}, this.trackStyle, {
                            opacity: 1.0
                        });
                    }
                } else {
                    if (this.props.trackImage) {
                        this.trackStyle = babelHelpers.extends({}, this.trackStyle, {
                            opacity: 0
                        });
                        trackView = _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: this.trackContainerStyle,
                                pointerEvents: "none"
                            },
                            _react2.default.createElement(CLImage, {
                                imagePath: this.props.trackImage,
                                style: this.trackImageStyle,
                                pointerEvents: "none"
                            })
                        );
                    }
                }

                return trackView;
            }
        }, {
            key: "_getThumbView",
            value: function _getThumbView() {
                var _this3 = this;

                var thumbView = null;
                var thumbImage = this.props.thumbImage;

                if (thumbImage) {
                    var thumbContainerStyle = babelHelpers.extends({}, this.thumbStyle, {
                        position: "absolute",
                        opacity: 1,
                        left: this.state.sliderThumbLeft
                    });
                    {}
                    var thumbImageStyle = {
                        width: this.thumbStyle.width,
                        height: this.thumbStyle.height,
                        resizeMode: "contain"
                    };
                    var disabled = !this.state.disabled;
                    var pointerEvents = disabled ? "none" : "box-only";
                    thumbView = _react2.default.createElement(
                        _reactNative.TouchableWithoutFeedback,
                        {
                            disabled: disabled,
                            onLongPress: function onLongPress() {
                                _this3._touchListener(false);
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: thumbContainerStyle,
                                pointerEvents: pointerEvents
                            },
                            _react2.default.createElement(CLImage, {
                                imagePath: thumbImage,
                                style: thumbImageStyle,
                                pointerEvents: pointerEvents
                            })
                        )
                    );
                }

                return thumbView;
            }
        }, {
            key: "_getSliderThumgLeft",
            value: function _getSliderThumgLeft(value) {
                var left = this.widthStepValue * (value - this.minimumValue);
                return left;
            }
        }, {
            key: "_valueChange",
            value: function _valueChange(value) {
                this.setValue(value);

                if (this.props.onValueChange != null) {
                    this.props.onValueChange(value);
                }
            }
        }, {
            key: "_valueChangeComplete",
            value: function _valueChangeComplete(value) {
                if (this.props.onSlidingComplete != null) {
                    this.props.onSlidingComplete(value);
                }
            }
        }, {
            key: "setValue",
            value: function setValue(value) {
                var newState = {
                    value: value
                };

                if (this.props.thumbImage) {
                    newState = babelHelpers.extends({}, newState, {
                        sliderThumbLeft: this._getSliderThumgLeft(value)
                    });
                }

                this.setState(newState);
            }
        }, {
            key: "_touchListener",
            value: function _touchListener(isCanTouch) {
                if (this.props.onTouchListener != null) {
                    this.props.onTouchListener(isCanTouch);
                }
            }
        }]);
        return YLSlider;
    }(_react.Component);

    module.exports = YLSlider;
},11483,[10297,10033,13687,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/YLSlider.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var _CommonYeelightModules = _require(_dependencyMap[2]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var Theme = _CommonYeelightModules2.default.Theme,
        CLImage = _CommonYeelightModules2.default.CLImage,
        YLSlider = _CommonYeelightModules2.default.YLSlider,
        strings = _CommonYeelightModules2.default.strings;
    var ratio = Theme.ratio;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var defaultSliderContainerWidth = width - 30 * ratio;
    var defaultSliderContainerPaddingLeft = 20 * ratio;
    var defaultSliderContainerPaddingRight = 20 * ratio;
    var defaultSliderWidth = defaultSliderContainerWidth - defaultSliderContainerPaddingLeft - defaultSliderContainerPaddingRight;
    var defaultSliderThumbWidth = 24 * ratio;
    var defaultSliderThumbHeight = 32 * ratio;
    var defaultSliderHeight = (defaultSliderThumbHeight - 11 * ratio) * 2;
    var defaultTimeScaleContainerHeight = defaultSliderHeight;
    var defaultScaleContainerPaddingLeft = defaultSliderThumbWidth / 2 - 0.8 * ratio;
    var defaultScaleContainerPaddingRight = defaultSliderThumbWidth / 2 - 0.8 * ratio;
    var defaultSliderContainerStyle = {
        width: defaultSliderContainerWidth,
        paddingLeft: defaultSliderContainerPaddingLeft,
        paddingRight: defaultSliderContainerPaddingRight
    };
    var defaultTimeScaleContainerStyle = {
        width: defaultSliderWidth,
        height: defaultTimeScaleContainerHeight,
        marginLeft: defaultSliderContainerPaddingLeft,
        marginRight: defaultSliderContainerPaddingRight,
        position: "absolute",
        top: defaultSliderHeight - 12 * ratio
    };
    var defaultScaleContainerStyle = {
        flexDirection: "row",
        width: defaultSliderWidth,
        height: defaultTimeScaleContainerHeight / 2,
        justifyContent: "space-between",
        alignItems: "flex-start",
        paddingLeft: defaultScaleContainerPaddingLeft,
        paddingRight: defaultScaleContainerPaddingRight
    };
    var defaultTimeContainerStyle = {
        flexDirection: "row",
        width: defaultSliderWidth,
        height: defaultTimeScaleContainerHeight / 2,
        justifyContent: "space-between",
        alignItems: "flex-start",
        position: "absolute",
        top: 22 * ratio
    };
    var defaultSliderStyle = {
        width: defaultSliderWidth,
        height: defaultSliderHeight
    };
    var defaultTrackStyle = {
        height: 3 * ratio
    };
    var defaultThumbStyle = {
        width: defaultSliderThumbWidth,
        height: defaultSliderThumbHeight,
        top: 1 * ratio
    };
    var defaultScaleText = {
        fontSize: 11 * ratio,
        color: "#666666",
        fontWeight: "300"
    };
    var MIN_IMUM_VALUE = 0;
    var MAX_IMUM_VALUE = 100;
    var STEP = 1;
    var MIN_IMUM_TRACK_TINT_COLOR = "#0F86FF";
    var MAX_IMUM_TRACK_TINT_COLOR = "#ECECEC";
    var THUMB_IMAGE = "icon_slider_thumb_delay_off_time.png";

    var DelayOffTimeScaleSlider = function (_Component) {
        babelHelpers.inherits(DelayOffTimeScaleSlider, _Component);

        function DelayOffTimeScaleSlider(props) {
            babelHelpers.classCallCheck(this, DelayOffTimeScaleSlider);

            var _this = babelHelpers.possibleConstructorReturn(this, (DelayOffTimeScaleSlider.__proto__ || Object.getPrototypeOf(DelayOffTimeScaleSlider)).call(this, props));

            _this.timeScaleArr = _this.props.timeScaleArr;
            _this.sliderContainerStyle = babelHelpers.extends({}, defaultSliderContainerStyle, _this.props.sliderContainerStyle);
            _this.timeScaleContainerStyle = babelHelpers.extends({}, defaultTimeScaleContainerStyle, _this.props.timeScaleContainerStyle);
            _this.scaleContainerStyle = babelHelpers.extends({}, defaultScaleContainerStyle, _this.props.scaleContainerStyle);
            _this.timeContainerStyle = babelHelpers.extends({}, defaultTimeContainerStyle, _this.props.timeContainerStyle);
            _this.sliderStyle = babelHelpers.extends({}, defaultSliderStyle, _this.props.sliderStyle);
            _this.trackStyle = babelHelpers.extends({}, defaultTrackStyle, _this.props.trackStyle);
            _this.thumbStyle = babelHelpers.extends({}, defaultThumbStyle, _this.props.thumbStyle);
            _this.minimumValue = _this.props.minimumValue == undefined ? MIN_IMUM_VALUE : _this.props.minimumValue;
            _this.maximumValue = _this.props.maximumValue == undefined ? MAX_IMUM_VALUE : _this.props.maximumValue;
            _this.step = _this.props.step == undefined ? STEP : _this.props.step;
            _this.minimumTrackTintColor = _this.props.minimumTrackTintColor == undefined ? MIN_IMUM_TRACK_TINT_COLOR : _this.props.minimumTrackTintColor;
            _this.maximumTrackTintColor = _this.props.maximumTrackTintColor == undefined ? MAX_IMUM_TRACK_TINT_COLOR : _this.props.maximumTrackTintColor;
            _this.thumbImage = _this.props.thumbImage == undefined ? THUMB_IMAGE : _this.props.thumbImage;
            var disabled = _this.props.disabled == undefined ? false : _this.props.disabled;
            var time = _this.props.value == undefined ? 0 : _this.props.value;
            _this.state = {
                value: time,
                disabled: disabled,
                step: _this.step
            };
            _this.parentProps = {
                time: time,
                disabled: disabled
            };
            _this.state = babelHelpers.extends({}, _this.state, _this._changeTimeToValue(time));
            return _this;
        }

        babelHelpers.createClass(DelayOffTimeScaleSlider, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                if (this.timeScaleArr == null || this.timeScaleArr.length == 0) return null;
                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: this.sliderContainerStyle
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: this.timeScaleContainerStyle
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: this.scaleContainerStyle
                            },
                            this._getScaleViews()
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            {
                                style: this.timeContainerStyle
                            },
                            this._getTimeViews()
                        )
                    ),
                    _react2.default.createElement(YLSlider, {
                        ref: function ref(_ref) {
                            return _this2._fanDelayOffSlider = _ref;
                        },
                        sliderStyle: this.sliderStyle,
                        trackStyle: this.trackStyle,
                        thumbImage: this.thumbImage,
                        thumbStyle: this.thumbStyle,
                        minimumTrackTintColor: this.minimumTrackTintColor,
                        maximumTrackTintColor: this.maximumTrackTintColor,
                        minimumValue: this.minimumValue,
                        maximumValue: this.maximumValue,
                        disabled: this._getDisabled(),
                        value: this._getValue(),
                        step: this.state.step,
                        onValueChange: function onValueChange(value) {
                            return _this2._onValueChange(value);
                        },
                        onSlidingComplete: function onSlidingComplete(value) {
                            return _this2._onSlidingComplete(value);
                        },
                        onTouchListener: function onTouchListener(isCanTouch) {
                            if (_this2.props.onTouchListener) {
                                _this2.props.onTouchListener(isCanTouch);
                            }
                        }
                    })
                );
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                if (nextProps && nextProps.value != null && nextProps.value != this.parentProps.time) {
                    this.parentProps = babelHelpers.extends({}, this.parentProps, {
                        time: nextProps.value
                    });
                    this.setState(this._changeTimeToValue(nextProps.value));
                }

                if (nextProps && nextProps.disabled != null && nextProps.disabled != this.parentProps.disabled) {
                    this.parentProps = babelHelpers.extends({}, this.parentProps, {
                        disabled: nextProps.disabled
                    });
                    this.setState({
                        disabled: nextProps.disabled
                    });
                }
            }
        }, {
            key: "_getValue",
            value: function _getValue() {
                return this.state.value;
            }
        }, {
            key: "_getDisabled",
            value: function _getDisabled() {
                return this.state.disabled;
            }
        }, {
            key: "_getScaleViews",
            value: function _getScaleViews() {
                var scaleViews = [];

                for (var i = 0; i < this.timeScaleArr.length; i++) {
                    var itemFistScaleHighWidth = 0.5 * ratio;
                    var itemLastScaleHighWidth = 0.5 * ratio;

                    if (i == 0) {
                        itemFistScaleHighWidth = 1 * ratio;
                    } else if (i == this.timeScaleArr.length - 1) {
                        itemLastScaleHighWidth = 1 * ratio;
                    }

                    scaleViews.push(_react2.default.createElement(
                        _reactNative.View,
                        {
                            style: {
                                flex: 1,
                                height: defaultTimeScaleContainerHeight / 2,
                                flexDirection: "row",
                                justifyContent: "space-between",
                                alignItems: "flex-start",
                                padding: 0
                            },
                            key: i
                        },
                        this._getScaleHighs(1, itemFistScaleHighWidth),
                        this._getScaleLows(this.timeScaleArr[i].part - 1),
                        this._getScaleHighs(1, itemLastScaleHighWidth)
                    ));
                }

                return scaleViews;
            }
        }, {
            key: "_getTimeViews",
            value: function _getTimeViews() {
                var timeViews = [];

                for (var i = 0; i < this.timeScaleArr.length; i++) {
                    var timeScaleItem = this.timeScaleArr[i];
                    if (timeScaleItem == undefined) continue;
                    var endTime = timeScaleItem.endTime;
                    var endTimeStr = "";

                    if (timeScaleItem.endTimeUnit == strings.common_text_min) {
                        endTimeStr = endTime + strings.common_text_min;
                    } else if (timeScaleItem.endTimeUnit == strings.common_text_hour) {
                        endTimeStr = this._formateTimeStr(endTime);
                    }

                    if (i == 0) {
                        var startTime = timeScaleItem.startTime;
                        var startTimeStr = "";

                        if (startTime <= 0) {
                            startTimeStr = strings.common_settings_seesaw_switch_status_off;
                        } else {
                            if (timeScaleItem.startTimeUnit == strings.common_text_min) {
                                startTimeStr = startTime + strings.common_text_min;
                            } else if (timeScaleItem.startTimeUnit == strings.common_text_hour) {
                                startTimeStr = this._formateTimeStr(startTime);
                            }
                        }

                        timeViews.push(_react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: defaultScaleText,
                                key: "time0"
                            },
                            startTimeStr
                        ));
                        timeViews.push(_react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: defaultScaleText,
                                key: "time1"
                            },
                            endTimeStr
                        ));
                    } else {
                        timeViews.push(_react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: defaultScaleText,
                                key: 'time' + (i + 1)
                            },
                            endTimeStr
                        ));
                    }
                }

                return timeViews;
            }
        }, {
            key: "_changeTimeToValue",
            value: function _changeTimeToValue(time) {
                var itemCount = this.timeScaleArr.length;
                var totalValue = this.maximumValue - this.minimumValue;
                var sliderAverageValue = totalValue / itemCount;
                var sliderValue = 0;
                var step = 0;

                if (time <= this.minimumValue) {
                    time = this.minimumValue;
                    sliderValue = this.minimumValue;
                    step = (this.timeScaleArr[0].endTime - this.timeScaleArr[0].startTime) / sliderAverageValue;
                } else if (time >= this.maximumValue) {
                    time = this.maximumValue;
                    sliderValue = this.maximumValue;
                    step = (this.timeScaleArr[itemCount - 1].endTime - this.timeScaleArr[itemCount - 1].startTime) / sliderAverageValue;
                } else {
                    for (var i = 0; i < itemCount; i++) {
                        var timeScaleItem = this.timeScaleArr[i];
                        if (timeScaleItem == null) continue;
                        var startTime = timeScaleItem.startTime;
                        var endTime = timeScaleItem.endTime;

                        if (time >= startTime && time <= endTime) {
                            sliderValue = sliderAverageValue * i + (time - startTime) / (endTime - startTime) * sliderAverageValue;
                            step = (endTime - startTime) / sliderAverageValue;
                            break;
                        }
                    }
                }

                return {
                    value: sliderValue,
                    step: step
                };
            }
        }, {
            key: "_onValueChange",
            value: function _onValueChange(value) {
                this.setState({
                    value: value
                });

                var time = this._changeValueToTime(value);

                if (this.props.onValueChange != null) {
                    this.props.onValueChange(time);
                }
            }
        }, {
            key: "_onSlidingComplete",
            value: function _onSlidingComplete(value) {
                this.setState({
                    value: value
                });

                var time = this._changeValueToTime(value);

                if (this.props._onSlidingComplete != null) {
                    this.props._onSlidingComplete(time);
                }
            }
        }, {
            key: "_changeValueToTime",
            value: function _changeValueToTime(value) {
                var itemCount = this.timeScaleArr.length;
                var sliderAverageValue = (this.maximumValue - this.minimumValue) / itemCount;

                if (value < this.minimumValue) {
                    value = this.minimumValue;
                } else if (value > this.maximumValue) {
                    value = this.maximumValue;
                }

                var curItemIndex = parseInt(value / sliderAverageValue);

                if (curItemIndex < 0) {
                    curItemIndex = 0;
                    value = this.minimumValue;
                } else if (curItemIndex == itemCount) {
                    curItemIndex = itemCount - 1;
                    value = this.maximumValue;
                } else if (curItemIndex > itemCount) {
                    return;
                }

                var curItem = this.timeScaleArr[curItemIndex];
                var curItemStartTime = curItem.startTime;
                var curItemEndTime = curItem.endTime;
                var curItemTimeAverageValue = (curItemEndTime - curItemStartTime) / sliderAverageValue;
                var time = curItemStartTime + curItemTimeAverageValue * (value - curItemIndex * sliderAverageValue);

                if (time != curItemStartTime && time != curItemEndTime) {
                    var curItemPart = curItem.part;
                    var curItemTimePartAverageValue = (curItemEndTime - curItemStartTime) / curItemPart;

                    for (var j = 0; j <= curItemPart; j++) {
                        var curScaleTime = curItemStartTime + curItemTimePartAverageValue * j;

                        if (time - curScaleTime > 0 && time - curScaleTime < 1) {
                            if (time - curScaleTime <= 0.25) {
                                time = curScaleTime;
                            }

                            break;
                        } else if (time - curScaleTime < 0 && time - curScaleTime > -1) {
                            if (curScaleTime - time <= 0.25) {
                                time = curScaleTime;
                            }

                            break;
                        }
                    }
                }

                time = Math.floor(time);
                this.parentProps = babelHelpers.extends({}, this.parentProps, {
                    time: time
                });

                if (curItemTimeAverageValue != this.state.step) {
                    this.setState({
                        step: curItemTimeAverageValue
                    });
                }

                return time;
            }
        }, {
            key: "_formateTimeStr",
            value: function _formateTimeStr(time) {
                time = Math.ceil(time);
                var timeStr = "";
                var hour = parseInt(time / 60);
                var min = time % 60;

                if (hour < 1) {
                    timeStr = min + strings.common_text_min;
                } else {
                    if (min == 0) {
                        timeStr = hour + strings.common_text_hour;
                    } else if (min > 0 && min < 10) {
                        timeStr = hour + strings.common_text_hour + "0" + min + strings.common_text_min;
                    } else {
                        timeStr = hour + strings.common_text_hour + min + strings.common_text_min;
                    }
                }

                return timeStr;
            }
        }, {
            key: "_getScaleHighs",
            value: function _getScaleHighs(number, width) {
                if (number <= 0) return null;
                var scaleHighs = [];

                for (var i = 0; i < number; i++) {
                    scaleHighs.push(_react2.default.createElement(CLImage, {
                        imagePath: "icon_slider_delay_off_time_scale.png",
                        style: {
                            width: width,
                            height: defaultTimeScaleContainerHeight / 2 * 0.7
                        },
                        pointerEvents: "none",
                        key: 'scaleHigh' + i
                    }));
                }

                return scaleHighs;
            }
        }, {
            key: "_getScaleLows",
            value: function _getScaleLows(number) {
                if (number <= 0) return null;
                var scaleLows = [];

                for (var i = 0; i < number; i++) {
                    scaleLows.push(_react2.default.createElement(CLImage, {
                        imagePath: "icon_slider_delay_off_time_scale.png",
                        style: {
                            width: 1 * ratio,
                            height: defaultTimeScaleContainerHeight / 2 * 0.3
                        },
                        pointerEvents: "none",
                        key: 'scaleLow' + i
                    }));
                }

                return scaleLows;
            }
        }]);
        return DelayOffTimeScaleSlider;
    }(_react.Component);

    module.exports = DelayOffTimeScaleSlider;
},11486,[10297,10033,10007],"projects/com.yeelight.wifi.color1/Main/CommonYeelightModules/Component/DelayOffTimeScaleSlider.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _index = _require(_dependencyMap[0]);

    var ParentModulesEntity = _require(_dependencyMap[1]);

    var MultilingualResources = ParentModulesEntity.MultilingualResources;

    var maybePluralize = function maybePluralize(count, noun) {
        var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 's';
        return count === undefined ? noun + suffix : count + " " + noun + (count !== 1 ? suffix : '');
    };

    var ProductMultilingualResources = function (_MultilingualResource) {
        babelHelpers.inherits(ProductMultilingualResources, _MultilingualResource);

        function ProductMultilingualResources() {
            babelHelpers.classCallCheck(this, ProductMultilingualResources);
            return babelHelpers.possibleConstructorReturn(this, (ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources)).apply(this, arguments));
        }

        babelHelpers.createClass(ProductMultilingualResources, null, [{
            key: "hansStrings",
            value: function hansStrings() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "hansStrings", this).call(this);
                var selfStrings = _index.hans;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "hantHK",
            value: function hantHK() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "hantHK", this).call(this);
                var selfStrings = _index.hant_hk;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "hantTW",
            value: function hantTW() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "hantTW", this).call(this);
                var selfStrings = _index.hant_tw;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "enStrings",
            value: function enStrings() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "enStrings", this).call(this);
                var selfStrings = _index.en;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "hantStrings",
            value: function hantStrings() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "hantStrings", this).call(this);
                var selfStrings = _index.hant;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "esStrings",
            value: function esStrings() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "esStrings", this).call(this);
                var selfStrings = _index.es;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "ko",
            value: function ko() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "ko", this).call(this);
                var selfStrings = _index.ko;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "ruStrings",
            value: function ruStrings() {
                var superStrings = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "ruStrings", this).call(this);
                var selfStrings = _index.ru;
                return babelHelpers.extends({}, superStrings, selfStrings);
            }
        }, {
            key: "it",
            value: function it() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "it", this).call(this);
                return babelHelpers.extends({}, object, _index.it);
            }
        }, {
            key: "de",
            value: function de() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "de", this).call(this);
                return babelHelpers.extends({}, object, _index.de);
                ;
            }
        }, {
            key: "fr",
            value: function fr() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "fr", this).call(this);
                return babelHelpers.extends({}, object, _index.fr);
                ;
            }
        }, {
            key: "pl",
            value: function pl() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "pl", this).call(this);
                return babelHelpers.extends({}, object, _index.pl);
                ;
            }
        }, {
            key: "vi",
            value: function vi() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "vi", this).call(this);
                return babelHelpers.extends({}, object, _index.vi);
                ;
            }
        }, {
            key: "nl",
            value: function nl() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "nl", this).call(this);
                return babelHelpers.extends({}, object, _index.nl);
                ;
            }
        }, {
            key: "ar",
            value: function ar() {
                var object = babelHelpers.get(ProductMultilingualResources.__proto__ || Object.getPrototypeOf(ProductMultilingualResources), "ar", this).call(this);
                return babelHelpers.extends({}, object, _index.ar);
                ;
            }
        }]);
        return ProductMultilingualResources;
    }(MultilingualResources);

    module.exports = ProductMultilingualResources;
},11489,[11492,11585],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ar = exports.nl = exports.vi = exports.pl = exports.it = exports.de = exports.fr = exports.ru = exports.ko = exports.hant_tw = exports.hant_hk = exports.hant = exports.hans = exports.es = exports.en = undefined;

  var _en = _require(_dependencyMap[0]);

  var _en2 = babelHelpers.interopRequireDefault(_en);

  var _es = _require(_dependencyMap[1]);

  var _es2 = babelHelpers.interopRequireDefault(_es);

  var _hans = _require(_dependencyMap[2]);

  var _hans2 = babelHelpers.interopRequireDefault(_hans);

  var _hant = _require(_dependencyMap[3]);

  var _hant2 = babelHelpers.interopRequireDefault(_hant);

  var _hant_hk = _require(_dependencyMap[4]);

  var _hant_hk2 = babelHelpers.interopRequireDefault(_hant_hk);

  var _hant_tw = _require(_dependencyMap[5]);

  var _hant_tw2 = babelHelpers.interopRequireDefault(_hant_tw);

  var _ko = _require(_dependencyMap[6]);

  var _ko2 = babelHelpers.interopRequireDefault(_ko);

  var _ru = _require(_dependencyMap[7]);

  var _ru2 = babelHelpers.interopRequireDefault(_ru);

  var _fr = _require(_dependencyMap[8]);

  var _fr2 = babelHelpers.interopRequireDefault(_fr);

  var _de = _require(_dependencyMap[9]);

  var _de2 = babelHelpers.interopRequireDefault(_de);

  var _it = _require(_dependencyMap[10]);

  var _it2 = babelHelpers.interopRequireDefault(_it);

  var _pl = _require(_dependencyMap[11]);

  var _pl2 = babelHelpers.interopRequireDefault(_pl);

  var _vi = _require(_dependencyMap[12]);

  var _vi2 = babelHelpers.interopRequireDefault(_vi);

  var _nl = _require(_dependencyMap[13]);

  var _nl2 = babelHelpers.interopRequireDefault(_nl);

  var _ar = _require(_dependencyMap[14]);

  var _ar2 = babelHelpers.interopRequireDefault(_ar);

  exports.en = _en2.default;
  exports.es = _es2.default;
  exports.hans = _hans2.default;
  exports.hant = _hant2.default;
  exports.hant_hk = _hant_hk2.default;
  exports.hant_tw = _hant_tw2.default;
  exports.ko = _ko2.default;
  exports.ru = _ru2.default;
  exports.fr = _fr2.default;
  exports.de = _de2.default;
  exports.it = _it2.default;
  exports.pl = _pl2.default;
  exports.vi = _vi2.default;
  exports.nl = _nl2.default;
  exports.ar = _ar2.default;
},11492,[11495,11501,11507,11513,11519,11525,11531,11537,11543,11549,11555,11561,11567,11573,11579],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11495,[11498],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/en/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Touch panel: Turn off light automatically",
    "common_setting_item_touch_panel_bgl_hint": "Enable the function, the touch panel will automatically turn off after 10 seconds without operation, to prevent visual interference."
  };
},11498,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/en/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11501,[11504],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/es/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Panel táctil: Encender la luz automáticamente"
  };
},11504,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/es/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11507,[11510],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hans/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    module.exports = {
        "setting_item_touch_panel_bgl": "触控板灯光勿扰",
        "common_setting_item_touch_panel_bgl_hint": "开启触控板灯光勿扰功能，触控板在无操作的10秒后将自动关闭，防止引起视觉干扰。"
    };
},11510,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hans/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11513,[11516],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = {
		"setting_item_touch_panel_bgl": "觸控板燈光勿擾"
	};
},11516,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11519,[11522],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant_hk/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = {
		"setting_item_touch_panel_bgl": "觸控板燈光勿擾"
	};
},11522,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant_hk/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11525,[11528],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant_tw/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = {
		"setting_item_touch_panel_bgl": "觸控板燈光勿擾"
	};
},11528,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/hant_tw/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11531,[11534],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ko/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
	module.exports = {
		"setting_item_touch_panel_bgl": "Touch panel light auto off"
	};
},11534,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ko/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11537,[11540],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ru/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Сенсорная панель. Автоматическое выключение света"
  };
},11540,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ru/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11543,[11546],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/fr/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Panneau tactile : éteindre la lampe automatiquement"
  };
},11546,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/fr/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11549,[11552],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/de/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Touchpanel: Licht automatisch ausschalten"
  };
},11552,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/de/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11555,[11558],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/it/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Pannello touchscreen: Spegni la luce automaticamente"
  };
},11558,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/it/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11561,[11564],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/pl/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Panel dotykowy: Automatyczne wyłączenie światła"
  };
},11564,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/pl/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11567,[11570],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/vi/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Bảng điều khiển cảm ứng: Tự động tắt đèn"
  };
},11570,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/vi/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11573,[11576],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/nl/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "Aanraakpaneel: Lamp automatisch uitschakelen",
    "common_setting_item_touch_panel_bgl_hint": "Als u deze functie inschakelt, wordt het aanraakscherm na tien seconden zonder handeling automatisch uitgeschakeld. Hierdoor wordt visuele interferentie voorkomen."
  };
},11576,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/nl/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _require(_dependencyMap[0]);
},11579,[11582],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ar/index.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = {
    "setting_item_touch_panel_bgl": "لوحة اللمس: إيقاف تشغيل الإضاءة تلقائيًا",
    "common_setting_item_touch_panel_bgl_hint": "بعد بتمكين الوظيفة، سيتم إيقاف لوحة اللمس تلقائيًا بعد 10 ثوان بدون تشغيل، لتجنب التداخل البصري."
  };
},11582,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/MultilingualResources/ar/strings.json");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _BaseModules = _require(_dependencyMap[0]);

  var _BaseModules2 = babelHelpers.interopRequireDefault(_BaseModules);

  module.exports = new _BaseModules2.default();
},11585,[10022],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/ParentModulesEntity.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var ModulesEntity = _require(_dependencyMap[0]);

    var Api = ModulesEntity.Api;
    module.exports = babelHelpers.extends({}, Api, {
        getTouchIndicator: function getTouchIndicator(callback) {
            return Api.callMiSDKMethod('get_prop', ['indicator'], callback);
        },
        setTouchIndicator: function setTouchIndicator(value, callback) {
            var switchValue = value ? "1" : "0";
            var time = "10";
            var parameters = [switchValue, time];
            return Api.callMiSDKMethod('set_ps', ['cfg_indicator', parameters.join(",")], callback);
        }
    });
},11588,[11585],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Helper/Api.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var ModulesEntity = _require(_dependencyMap[0]);

    var SettingMenuEnum = ModulesEntity.SettingMenuEnum;
    var MenuIdentifiers = {
        settingTouchPanelConfiguration: 'settingTouchPanelConfiguration'
    };
    SettingMenuEnum.MenuIdentifiers = babelHelpers.extends({}, SettingMenuEnum.MenuIdentifiers, MenuIdentifiers);
    module.exports = SettingMenuEnum;
},11591,[11585],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Setting/ProductSettingMenuEnum.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var _react = _require(_dependencyMap[0]);

    var _react2 = babelHelpers.interopRequireDefault(_react);

    var _reactNative = _require(_dependencyMap[1]);

    var CommonYeelightModules = _require(_dependencyMap[2]);

    var BaseReactComponent = CommonYeelightModules.BaseReactComponent;
    var strings = CommonYeelightModules.strings,
        Theme = CommonYeelightModules.Theme,
        YLSwitch = CommonYeelightModules.YLSwitch,
        Api = CommonYeelightModules.Api,
        YLUI = CommonYeelightModules.YLUI,
        CLImage = CommonYeelightModules.CLImage;

    var TouchPanelConfigurationPage = function (_BaseReactComponent) {
        babelHelpers.inherits(TouchPanelConfigurationPage, _BaseReactComponent);

        function TouchPanelConfigurationPage(props) {
            babelHelpers.classCallCheck(this, TouchPanelConfigurationPage);

            var _this = babelHelpers.possibleConstructorReturn(this, (TouchPanelConfigurationPage.__proto__ || Object.getPrototypeOf(TouchPanelConfigurationPage)).call(this, props));

            _this.state = {
                touchIndicator: false
            };
            return _this;
        }

        babelHelpers.createClass(TouchPanelConfigurationPage, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.requestTouchLightConfiguration();
            }
        }, {
            key: "_toggleInductionOn",
            value: function _toggleInductionOn(value) {
                var _this2 = this;

                this.setState({
                    touchIndicator: value
                });
                Api.setTouchIndicator(value, function (isSuceess, response) {
                    if (isSuceess) {
                        if (_this2.props.touchIndicatorStateDidChange) {
                            _this2.props.touchIndicatorStateDidChange(value);
                        }

                        if (value) {
                            YLUI.showFinishTips(strings.common_settings_seesaw_switch_status_on);
                        } else {
                            YLUI.showFinishTips(strings.common_settings_seesaw_switch_status_off);
                        }
                    } else {
                        YLUI.showFailTips(strings.common_text_fail_ios);
                    }
                });
            }
        }, {
            key: "requestTouchLightConfiguration",
            value: function requestTouchLightConfiguration() {
                var _this3 = this;

                Api.getTouchIndicator(function (success, response) {
                    if (success && response.result && Array.isArray(response.result) && response.result.length >= 1) {
                        var value = response.result[0];
                        var valueArray = value.split(',');

                        if (valueArray.length >= 1) {
                            _this3.setState({
                                touchIndicator: Boolean(parseInt(valueArray[0]))
                            });
                        }
                    } else {
                        _this3.requestTouchConfigTimer && clearTimeout(_this3.requestTouchConfigTimer);
                        _this3.requestTouchConfigTimer = setTimeout(function () {
                            return _this3.requestTouchLightConfiguration();
                        }, 3000);
                    }
                });
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                return _react2.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.rowContainer
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                numberOfLines: 0,
                                style: styles.title
                            },
                            strings.setting_item_touch_panel_bgl
                        ),
                        _react2.default.createElement(YLSwitch, {
                            tintColor: '#ECECEC',
                            style: {
                                width: 45 * ratio,
                                height: 25 * ratio
                            },
                            onTintColor: '#71C873',
                            thumbTintColor: '#ececec',
                            onValueChange: function onValueChange(value) {
                                return _this4._toggleInductionOn(value);
                            },
                            value: this.state.touchIndicator
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.imgContent
                        },
                        _react2.default.createElement(CLImage, {
                            style: styles.img,
                            imagePath: 'touch_panel_detail.png'
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                style: styles.subTitle
                            },
                            strings.common_setting_item_touch_panel_bgl_hint
                        )
                    )
                );
            }
        }]);
        return TouchPanelConfigurationPage;
    }(BaseReactComponent);

    TouchPanelConfigurationPage.navigationOptions = function (_ref) {
        var navigation = _ref.navigation;
        return {
            headerStyle: {
                paddingTop: Theme.STATUSBAR_HEIGHT,
                height: Theme.NAVBAR_HEIGHT + (_reactNative.StatusBar.currentHeight || 0),
                backgroundColor: "white",
                borderBottomWidth: 0,
                elevation: 0
            }
        };
    };

    var ratio = Theme.ratio;
    var rowCellHeight = 50 * ratio;
    var margin = 30 * ratio;

    var _Theme$getScreenSize = Theme.getScreenSize(),
        width = _Theme$getScreenSize.width,
        height = _Theme$getScreenSize.height;

    var styles = _reactNative.StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#fff'
        },
        title: babelHelpers.extends({
            fontSize: 19 * ratio,
            color: '#333333',
            flex: 1
        }, {
            fontFamily: ''
        }, {
            textAlign: 'left'
        }),
        rowContainer: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            height: rowCellHeight,
            width: width - margin * 2,
            marginTop: 35 * ratio,
            marginRight: margin,
            marginLeft: margin,
            backgroundColor: '#fff'
        },
        subTitle: babelHelpers.extends({
            marginTop: 20 * ratio,
            fontSize: 14 * ratio,
            color: '#666666'
        }, {
            fontFamily: ''
        }),
        imgContent: {
            marginTop: 25 * ratio,
            marginRight: margin,
            marginLeft: margin
        },
        img: {
            resizeMode: 'contain',
            width: 315 * ratio,
            height: 323 * ratio
        }
    });

    var route = {
        component: TouchPanelConfigurationPage,
        isNavigationBarHidden: false,
        navigationBarStyle: null,
        title: '',
        barStyle: "default",
        isNavigationBarRightButtonHidden: false,
        navLeftButtonStyle: {
            tintColor: "#000000"
        },
        passRouteProps: {
            insetForNavigator: {
                top: 44
            }
        }
    };
    module.exports = {
        component: TouchPanelConfigurationPage,
        route: route
    };
},11594,[10297,10033,10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Setting/TouchPanelConfigurationPage.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var mainIndexIOSDataSource;

  var ProductModulesDataSource = function () {
    function ProductModulesDataSource() {
      babelHelpers.classCallCheck(this, ProductModulesDataSource);
    }

    babelHelpers.createClass(ProductModulesDataSource, [{
      key: "UserGuideDataSource",
      get: function get() {
        return _require(_dependencyMap[0]);
      }
    }, {
      key: "CTIndicatorDataSource",
      get: function get() {
        return _require(_dependencyMap[1]);
      }
    }, {
      key: "BrightnessIndicatorDataSource",
      get: function get() {
        return _require(_dependencyMap[2]);
      }
    }, {
      key: "LampOnDataSource",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "ApiDataSource",
      get: function get() {
        return _require(_dependencyMap[4]);
        ;
      }
    }, {
      key: "AppUUIDDataSource",
      get: function get() {
        return _require(_dependencyMap[5]);
      }
    }, {
      key: "AppVersionDataSource",
      get: function get() {
        return _require(_dependencyMap[6]);
      }
    }, {
      key: "SettingMenuDataSource",
      get: function get() {
        return _require(_dependencyMap[7]);
      }
    }, {
      key: "DefaultLightDataSource",
      get: function get() {
        return _require(_dependencyMap[8]);
      }
    }, {
      key: "MibandAttachedPageDataSource",
      get: function get() {
        return _require(_dependencyMap[9]);
      }
    }, {
      key: "CollectionDataSource",
      get: function get() {
        return _require(_dependencyMap[10]);
      }
    }, {
      key: "MainIndexIOSDataSource",
      get: function get() {
        console.log(' fuck you color light product modules data source');

        if (!mainIndexIOSDataSource) {
          var MainIndexIOSDataSource = _require(_dependencyMap[11]);

          mainIndexIOSDataSource = new MainIndexIOSDataSource();
        }

        return mainIndexIOSDataSource;
      }
    }, {
      key: "MainPageDataSource",
      get: function get() {
        return _require(_dependencyMap[12]);
      }
    }, {
      key: "CommonSceneMainDataSource",
      get: function get() {
        return _require(_dependencyMap[13]);
      }
    }, {
      key: "DeviceModelDataSource",
      get: function get() {
        return _require(_dependencyMap[14]);
      }
    }]);
    return ProductModulesDataSource;
  }();

  module.exports = ProductModulesDataSource;
},11597,[11600,11603,11606,11609,11612,11615,11618,11621,11624,11627,11630,11633,11636,11639,11642],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/ProductModulesDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var UserGuideDataSource = {
    get guideImageTopOffset() {
      return 150;
    }

  };
  module.exports = UserGuideDataSource;
},11600,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/UserGuideDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var Theme = CommonYeelightModules.Theme;

  var _Theme$getScreenSize = Theme.getScreenSize(),
      width = _Theme$getScreenSize.width,
      height = _Theme$getScreenSize.height;

  var CTIndicatorDataSource = {
    get offset() {
      return 30;
    },

    get pointStyle() {
      return {
        width: 12,
        height: 11,
        marginBottom: 0.5
      };
    },

    get indicatorImageStyle() {
      return {
        marginLeft: this.offset,
        width: width - this.offset * 2,
        height: 3
      };
    }

  };
  module.exports = CTIndicatorDataSource;
},11603,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/CTIndicatorDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BrightnessIndicatorDataSource = {
    get containerWidth() {
      return 280;
    },

    get containerIndicatorImageStyle() {
      return {
        transform: [{
          rotate: '90deg'
        }],
        marginTop: 10,
        marginBottom: 10,
        marginLeft: 5,
        marginRight: 5,
        width: 24,
        height: 24
      };
    }

  };
  module.exports = BrightnessIndicatorDataSource;
},11606,[],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/BrightnessIndicatorDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var CollectionYeelight = CommonYeelightModules.CollectionYeelight,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      LightMode = CommonYeelightModules.LightMode,
      LightGenerator = CommonYeelightModules.LightGenerator,
      Tools = CommonYeelightModules.Tools,
      Api = CommonYeelightModules.Api,
      Theme = CommonYeelightModules.Theme,
      YLDevice = CommonYeelightModules.YLDevice;
  var BaseLampOnDataSource = BaseYeelightModulesDataSource.BaseLampOnDataSource;

  var LampOnDataSource = function (_BaseLampOnDataSource) {
    babelHelpers.inherits(LampOnDataSource, _BaseLampOnDataSource);

    function LampOnDataSource(props) {
      babelHelpers.classCallCheck(this, LampOnDataSource);
      return babelHelpers.possibleConstructorReturn(this, (LampOnDataSource.__proto__ || Object.getPrototypeOf(LampOnDataSource)).call(this, props));
    }

    babelHelpers.createClass(LampOnDataSource, [{
      key: "getCollection",
      value: function getCollection() {
        return CollectionYeelight;
      }
    }, {
      key: "nightlightColorTemperature",
      value: function nightlightColorTemperature() {
        return 2700;
      }
    }, {
      key: "isFixedColorTemperature",
      value: function isFixedColorTemperature() {
        return false;
      }
    }, {
      key: "handleParseGetStatus",
      value: function handleParseGetStatus(object) {
        this.handleParseGetStatusNormal(object);
      }
    }, {
      key: "handleParseGetStatusNormal",
      value: function handleParseGetStatusNormal(object) {
        if (this.indicatorShowed || this.HoriIndicatorShowed) {
          return;
        }

        var lightMode = LightMode.modeCheck(object.color_mode, object.flowing, object.nl_br);
        var bright = object.bright;
        var lampOn = object.lampOn;

        if (lightMode == LightMode.flow) {
          var flowString = '';

          if (object.flow_params) {
            flowString = JSON.stringify(object.flow_params);
          }

          var flowPartString = '[]';
          var flow = '';
          var cf_duration = 1;
          var cf_brightness = 100;

          if (flowString && flowString.length > 5) {
            flowPartString = flowString.substring(5);
            var flowArray = flowString.split(",") || [];
            var duration = flowArray[2] || 1000;
            duration = parseInt(duration) / 1000;
            cf_duration = (12 - duration) / 11;
            cf_brightness = parseInt(flowArray[5] || 100);

            if (flowPartString) {
              flow = '[' + JSON.stringify('cf') + ',0,0,' + '\"' + flowPartString + ']';
            }
          }

          var stateToSet = {
            lightState: lightState,
            lightMode: lightMode,
            cf: flow,
            cf_brightness: cf_brightness,
            brightness: bright,
            lampOn: lampOn,
            cf_duration: cf_duration
          };
          var lightState = this.getLightStateFromValue(stateToSet);
          this.setState(babelHelpers.extends({}, stateToSet, {
            lightState: lightState
          }));
          return;
        }

        var ct;

        if (object.ct) {
          ct = LightGenerator.CT2Value(object.ct, this.isRight);
        }

        var hue = Tools.getHue(object.rgb);

        if (object.color_mode == 3) {
          hue = object.hue / 360.0;
        }

        var nl_br = this.nl_br;

        if (object.nl_br && object.nl_br > 0) {
          nl_br = object.nl_br;
        }

        var stateToSet = {
          lightState: lightState,
          lightMode: lightMode,
          ct: ct,
          hue: hue,
          brightness: bright,
          nl_br: nl_br,
          lampOn: lampOn
        };
        var lightState = this.getLightStateFromValue(stateToSet);
        this.setState(babelHelpers.extends({}, stateToSet, {
          lightState: lightState
        }));
      }
    }, {
      key: "getLightStateFromValue",
      value: function getLightStateFromValue(value) {
        if (value) {
          var lightState = '';

          if (LightMode.nightlight == value.lightMode) {
            lightState = '亮度值 ' + value.nl_br + '%';
          } else if (value.brightness) {
            lightState = '亮度值 ' + value.brightness + '%' + '   色温值 ' + Math.floor(LightGenerator.value2CT(value.ct || this.ct)) + 'k';
          }

          return lightState;
        }
      }
    }, {
      key: "shouldForceUpdateOfValue",
      value: function shouldForceUpdateOfValue(value) {
        var forceUpdateKeys = this.forceUpdateKeys();

        for (var index in forceUpdateKeys) {
          var key = forceUpdateKeys[index];

          if (value.hasOwnProperty(key)) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "updateLightState",
      value: function updateLightState() {
        var lightState = this.getLightStateFromValue(this.state);
        this.setState({
          lightState: lightState
        });
      }
    }, {
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lightMode', 'ct', 'brightness', 'cf_brightness', 'nl_br', 'lightState'];
      }
    }, {
      key: "isInMainLight",
      value: function isInMainLight() {
        return YLDevice.deviceModel == this.state.deviceModel;
      }
    }, {
      key: "getValueFromStateByKey",
      value: function getValueFromStateByKey(key) {
        var realKey = this.getRealKeyByKey(key);
        return this.state[realKey];
      }
    }, {
      key: "setValueFromStateByKey",
      value: function setValueFromStateByKey(key, value) {
        var realKey = this.getRealKeyByKey(key);
        var dict = {};
        dict[realKey] = value;
        this.setState(dict);
      }
    }, {
      key: "touchPointImageName",
      value: function touchPointImageName() {
        return 'touch_dot.png';
      }
    }, {
      key: "touchPointImageSize",
      value: function touchPointImageSize() {
        return 150;
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this2 = this;

        if (this.isInMainLight()) {
          Api.setPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _this2.setAdaptorState({
                lampOn: true,
                lightMode: mode
              });
            }
          });
        } else {
          Api.setBgPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _this2.setAdaptorState({
                lampOn: true,
                lightMode: mode
              });
            }
          });
        }
      }
    }, {
      key: "_turnOnSunlight",
      value: function _turnOnSunlight() {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "_turnOnSunlight", this).call(this, this);
        } else {
          if (LightMode.ct == this.lightMode && this.lampOn) {
            return;
          } else {
            this._setLightMode(LightMode.ct);

            this._setPowerOnAndSwitch2Mode(LightMode.ct);
          }
        }
      }
    }, {
      key: "changeCTDirectly",
      value: function changeCTDirectly() {
        if (this.isInMainLight()) {
          LightGenerator.changeCTDirectly(this.ct);
        } else {
          LightGenerator.changeBgCTDirectly(this.ct);
        }
      }
    }, {
      key: "changeColorDirectly",
      value: function changeColorDirectly() {
        if (this.isInMainLight()) {
          LightGenerator.changeColorDirectly(this.colorCache);
        } else {
          LightGenerator.changeBgColorDirectly(this.colorCache);
        }
      }
    }, {
      key: "applyBrightness",
      value: function applyBrightness(brightness, forceChange) {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "applyBrightness", this).call(this, brightness, forceChange);
        } else {
          this.brightness = brightness;
          LightGenerator.changeBgBrightness(brightness, function () {}, forceChange);
        }
      }
    }, {
      key: "changeLight",
      value: function changeLight(value, callback, forceChange) {
        if (this.isInMainLight()) {
          babelHelpers.get(LampOnDataSource.prototype.__proto__ || Object.getPrototypeOf(LampOnDataSource.prototype), "changeLight", this).call(this, value, callback, forceChange);
        } else {
          LightGenerator.changeBgLight(value, this.lightMode, callback, forceChange);
        }
      }
    }, {
      key: "turnOnCT",
      value: function turnOnCT() {
        this._turnOnSunlight();
      }
    }, {
      key: "hIndicatorViewStyles",
      get: function get() {
        return {
          position: 'absolute',
          top: 82 + Theme.APPBAR_MARGINTOP,
          backgroundColor: 'transparent'
        };
      }
    }, {
      key: "lightState",
      get: function get() {
        return this.state.lightState;
      }
    }]);
    return LampOnDataSource;
  }(BaseLampOnDataSource);

  module.exports = LampOnDataSource;
},11609,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/LampOnDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _ParentModulesEntity = _require(_dependencyMap[0]);

  var BaseApiDataSource = _ParentModulesEntity.BaseYeelightModulesDataSource.BaseApiDataSource;

  var ApiDataSource = function (_BaseApiDataSource) {
    babelHelpers.inherits(ApiDataSource, _BaseApiDataSource);

    function ApiDataSource() {
      babelHelpers.classCallCheck(this, ApiDataSource);
      return babelHelpers.possibleConstructorReturn(this, (ApiDataSource.__proto__ || Object.getPrototypeOf(ApiDataSource)).call(this));
    }

    babelHelpers.createClass(ApiDataSource, [{
      key: "getPropsArray",
      value: function getPropsArray() {
        return ['color_mode', 'power', 'ct', 'bright', 'nl_br'];
      }
    }, {
      key: "registerPropsArray",
      value: function registerPropsArray() {
        return ["power", "bright", "ct", 'color_mode', "nl_br"];
      }
    }]);
    return ApiDataSource;
  }(BaseApiDataSource);

  module.exports = ApiDataSource;
},11612,[11585],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/ApiDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
		'use strict';

		var CommonYeelightModules = _require(_dependencyMap[0]);

		var YLDevice = CommonYeelightModules.YLDevice,
		    YLAccount = CommonYeelightModules.YLAccount;
		var AppUUIDDataSource = {
				get uuidFile() {
						return YLDevice.deviceModel + 'app_uuid.dat';
				},

				get uuid() {
						var time = new Date().getTime();
						var userid = YLAccount.userId;
						var deviceid = YLDevice.deviceId;
						var randomNum = Math.floor(Math.random() * 100000 + 1);
						var sault = "zxcv-bnma-sdfg-hjkl-qwert-yuiop";
						var possible = time.toString() + userid.toString() + randomNum.toString() + sault + deviceid.toString();
						var uuid = "";

						for (var i = 0; i < 18; i++) {
								uuid += possible.charAt(Math.floor(Math.random() * possible.length));
						}

						return uuid;
				}

		};
		module.exports = AppUUIDDataSource;
},11615,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/AppUUIDDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var AppVersionDataSource = {
    get appVersion() {
      var packageInfo = _require(_dependencyMap[0]);

      return packageInfo.app_version;
    }

  };
  module.exports = AppVersionDataSource;
},11618,[11255],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/AppVersionDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      MenuIdentifiers = CommonYeelightModules.MenuIdentifiers,
      SettingMenuTypeEnum = CommonYeelightModules.SettingMenuTypeEnum,
      Api = CommonYeelightModules.Api,
      TouchPanelConfigurationPage = CommonYeelightModules.TouchPanelConfigurationPage,
      strings = CommonYeelightModules.strings,
      SettingMenuIcons = CommonYeelightModules.SettingMenuIcons;
  var BaseSettingMenuDataSource = BaseYeelightModulesDataSource.BaseSettingMenuDataSource;

  var SettingMenuDataSource = function (_BaseSettingMenuDataS) {
    babelHelpers.inherits(SettingMenuDataSource, _BaseSettingMenuDataS);

    function SettingMenuDataSource(props) {
      babelHelpers.classCallCheck(this, SettingMenuDataSource);
      return babelHelpers.possibleConstructorReturn(this, (SettingMenuDataSource.__proto__ || Object.getPrototypeOf(SettingMenuDataSource)).call(this, props));
    }

    babelHelpers.createClass(SettingMenuDataSource, [{
      key: "requestData",
      value: function requestData() {
        babelHelpers.get(SettingMenuDataSource.prototype.__proto__ || Object.getPrototypeOf(SettingMenuDataSource.prototype), "requestData", this).call(this);

        if (this.checkSettingMenuExist(MenuIdentifiers.settingTouchPanelConfiguration)) {
          this.requestTouchLightConfiguration();
        }
      }
    }, {
      key: "totalSpecificMenuData",
      value: function totalSpecificMenuData() {
        var _this2 = this;

        var menuData = babelHelpers.get(SettingMenuDataSource.prototype.__proto__ || Object.getPrototypeOf(SettingMenuDataSource.prototype), "totalSpecificMenuData", this).call(this);
        var selfMenuData = {
          'settingTouchPanelConfiguration': {
            name: strings.setting_item_touch_panel_bgl,
            identifier: MenuIdentifiers.settingTouchPanelConfiguration,
            image: SettingMenuIcons.settingSmartSwitch,
            value: this.touchIndicatorState(),
            func: function func() {
              _this2.props.navigation.push(babelHelpers.extends({
                title: strings.common_settings_seesaw_switch
              }, TouchPanelConfigurationPage.route, {
                passProps: {
                  events: _this2.eventEmitter,
                  touchIndicatorStateDidChange: function touchIndicatorStateDidChange(newStatus) {
                    _this2.state.touchIndicator = newStatus;

                    _this2.forceUpdateComponentOwnerWithState({
                      touchIndicator: newStatus
                    });

                    _this2.updateListView();
                  }
                }
              }));
            }
          }
        };
        return babelHelpers.extends({}, menuData, selfMenuData);
      }
    }, {
      key: "requestTouchLightConfiguration",
      value: function requestTouchLightConfiguration() {
        var _this3 = this;

        Api.getTouchIndicator(function (success, response) {
          if (success && response.result && Array.isArray(response.result) && response.result.length >= 1) {
            var value = response.result[0];
            var valueArray = value.split(',');

            if (valueArray.length >= 1) {
              _this3.forceUpdateComponentOwnerWithState({
                touchIndicator: Boolean(parseInt(valueArray[0]))
              });

              _this3.updateListView();
            }
          }
        });
      }
    }, {
      key: "touchIndicatorState",
      value: function touchIndicatorState() {
        if (this.state.touchIndicator) {
          return strings.common_settings_seesaw_switch_status_on;
        } else {
          return strings.common_settings_seesaw_switch_status_off;
        }
      }
    }, {
      key: "specificMenuIdentifiersArray",
      value: function specificMenuIdentifiersArray() {
        return [MenuIdentifiers.settingTime, MenuIdentifiers.settingSchedules, MenuIdentifiers.settingNightLight, MenuIdentifiers.settingGestureOn, MenuIdentifiers.settingMiband, MenuIdentifiers.settingDefaultLight, MenuIdentifiers.settingRemoteControl];
      }
    }, {
      key: "commonMenuIdentifiersArray",
      value: function commonMenuIdentifiersArray() {
        var commonMenu = [MenuIdentifiers.miHomeSettingEditDeviceName, MenuIdentifiers.miHomeSettingShareDevice, MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade, MenuIdentifiers.miHomeSettingRoomManagement, MenuIdentifiers.miHomeSettingIftttAuto, MenuIdentifiers.miHomeSettingNewMore, MenuIdentifiers.miHomeSettingAddToDesktop, MenuIdentifiers.miHomeSettingOpenPrivacyAndLicense];

        if (SettingMenuTypeEnum.CommboType != this.props.settingMenuType) {
          commonMenu.push(MenuIdentifiers.miHomeSettingUnbindDevice);
        }

        return commonMenu;
      }
    }]);
    return SettingMenuDataSource;
  }(BaseSettingMenuDataSource);

  module.exports = SettingMenuDataSource;
},11621,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/SettingMenuDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var CommonYeelightModules = _require(_dependencyMap[0]);

    var packageInfo = _require(_dependencyMap[1]);

    var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
    var BaseDefaultLightDataSource = BaseYeelightModulesDataSource.BaseDefaultLightDataSource;

    var DefaultLightDataSource = function (_BaseDefaultLightData) {
        babelHelpers.inherits(DefaultLightDataSource, _BaseDefaultLightData);

        function DefaultLightDataSource(props) {
            babelHelpers.classCallCheck(this, DefaultLightDataSource);
            return babelHelpers.possibleConstructorReturn(this, (DefaultLightDataSource.__proto__ || Object.getPrototypeOf(DefaultLightDataSource)).call(this, props));
        }

        babelHelpers.createClass(DefaultLightDataSource, null, [{
            key: "getBackgroundImage",
            value: function getBackgroundImage() {
                return packageInfo.default_light_background_image;
            }
        }]);
        return DefaultLightDataSource;
    }(BaseDefaultLightDataSource);

    module.exports = DefaultLightDataSource;
},11624,[10007,10448],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/DefaultLightDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var BaseYeelightModulesDataSource = _require(_dependencyMap[0]).BaseYeelightModulesDataSource;

  var packageInfo = _require(_dependencyMap[1]);

  var BaseMibandAttachedPageDataSource = BaseYeelightModulesDataSource.BaseMibandAttachedPageDataSource;

  var MibandAttachedPageDataSource = function (_BaseMibandAttachedPa) {
    babelHelpers.inherits(MibandAttachedPageDataSource, _BaseMibandAttachedPa);

    function MibandAttachedPageDataSource() {
      babelHelpers.classCallCheck(this, MibandAttachedPageDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MibandAttachedPageDataSource.__proto__ || Object.getPrototypeOf(MibandAttachedPageDataSource)).apply(this, arguments));
    }

    babelHelpers.createClass(MibandAttachedPageDataSource, [{
      key: "getControlLargeIcon",
      get: function get() {
        return packageInfo.miband_control_large_icon;
      }
    }]);
    return MibandAttachedPageDataSource;
  }(BaseMibandAttachedPageDataSource);

  module.exports = MibandAttachedPageDataSource;
},11627,[10007,10448],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/MibandAttachedPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      Cloud = CommonYeelightModules.Cloud;
  var BaseCollectionDataSource = BaseYeelightModulesDataSource.BaseCollectionDataSource;
  var getUserCollectionCallCount = 0;

  var CollectionDataSource = function (_BaseCollectionDataSo) {
    babelHelpers.inherits(CollectionDataSource, _BaseCollectionDataSo);

    function CollectionDataSource(props) {
      babelHelpers.classCallCheck(this, CollectionDataSource);
      return babelHelpers.possibleConstructorReturn(this, (CollectionDataSource.__proto__ || Object.getPrototypeOf(CollectionDataSource)).call(this, props));
    }

    babelHelpers.createClass(CollectionDataSource, [{
      key: "requestUserCollection",
      value: function requestUserCollection(value, callback) {
        getUserCollectionCallCount++;

        if (3 == getUserCollectionCallCount) {
          getUserCollectionCallCount = 0;
          return;
        }

        var callbackHooker = function (data) {
          var _this2 = this;

          if ("customScene" != this.state.entryMode) {
            data = data.filter(function (item) {
              return item.device_model === _this2.state.deviceModel;
            });
          }

          if (data) {
            if (callback) {
              callback(data);
            }

            getUserCollectionCallCount = 0;
            this.GlobalUserCollectionScenes = data;
          } else {
            this.requestUserCollection(this.state.userId, callback);
          }
        }.bind(this);

        Cloud.getUserCollection(this.state.userId, callbackHooker, this.state.deviceModel);
      }
    }]);
    return CollectionDataSource;
  }(BaseCollectionDataSource);

  module.exports = CollectionDataSource;
},11630,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/CollectionDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var MainPage = CommonYeelightModules.MainPage,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseMainIndexIOSDataSource = BaseYeelightModulesDataSource.BaseMainIndexIOSDataSource;

  var MainIndexIOSDataSource = function (_BaseMainIndexIOSData) {
    babelHelpers.inherits(MainIndexIOSDataSource, _BaseMainIndexIOSData);

    function MainIndexIOSDataSource(props) {
      babelHelpers.classCallCheck(this, MainIndexIOSDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MainIndexIOSDataSource.__proto__ || Object.getPrototypeOf(MainIndexIOSDataSource)).call(this, props));
    }

    babelHelpers.createClass(MainIndexIOSDataSource, [{
      key: "getMainPage",
      get: function get() {
        return MainPage;
      }
    }]);
    return MainIndexIOSDataSource;
  }(BaseMainIndexIOSDataSource);

  module.exports = MainIndexIOSDataSource;
},11633,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/MainIndexIOSDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var strings = CommonYeelightModules.strings,
      BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource,
      Api = CommonYeelightModules.Api,
      YLDevice = CommonYeelightModules.YLDevice;
  var BaseMainPageDataSource = BaseYeelightModulesDataSource.BaseMainPageDataSource;

  var MainPageDataSource = function (_BaseMainPageDataSour) {
    babelHelpers.inherits(MainPageDataSource, _BaseMainPageDataSour);

    function MainPageDataSource(props) {
      babelHelpers.classCallCheck(this, MainPageDataSource);
      return babelHelpers.possibleConstructorReturn(this, (MainPageDataSource.__proto__ || Object.getPrototypeOf(MainPageDataSource)).call(this, props));
    }

    babelHelpers.createClass(MainPageDataSource, [{
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lampOn', 'lightMode'];
      }
    }, {
      key: "topSegmentedControlTitles",
      value: function topSegmentedControlTitles() {
        return [strings.common_main_page_text_segmente_main_light, strings.common_main_page_text_segment_ambilight];
      }
    }, {
      key: "tapTopSegmentedControlAtIndex",
      value: function tapTopSegmentedControlAtIndex(index) {
        if (0 == index) {} else {}
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this2 = this;

        if (this.isInMainLight()) {
          Api.setPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
                mode: mode
              });

              _this2.lampOn = true;

              _this2.lampOnOrOffFadeAnimate();
            }
          });
        } else {
          Api.setBgPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
                mode: mode
              });

              _this2.lampOn = true;

              _this2.lampOnOrOffFadeAnimate();
            }
          });
        }
      }
    }, {
      key: "deviceModel",
      get: function get() {
        return YLDevice.deviceModel;
      }
    }, {
      key: "whiteButtonNormalImageName",
      get: function get() {
        return 'menu_sunlight_normal.png';
      }
    }, {
      key: "whiteButtonPressedImageName",
      get: function get() {
        return 'menu_sunlight_pressed.png';
      }
    }]);
    return MainPageDataSource;
  }(BaseMainPageDataSource);

  module.exports = MainPageDataSource;
},11636,[10033,10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/MainPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var CollectionYeelight = CommonYeelightModules.CollectionYeelight;
  var CommonSceneMainDataSource = {
    get getCollection() {
      return CollectionYeelight;
    }

  };
  module.exports = CommonSceneMainDataSource;
},11639,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/CommonSceneMainDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var CommonYeelightModules = _require(_dependencyMap[0]);

  var BaseYeelightModulesDataSource = CommonYeelightModules.BaseYeelightModulesDataSource;
  var BaseDeviceModelDataSource = BaseYeelightModulesDataSource.BaseDeviceModelDataSource;

  var DeviceModelDataSource = function (_BaseDeviceModelDataS) {
    babelHelpers.inherits(DeviceModelDataSource, _BaseDeviceModelDataS);

    function DeviceModelDataSource(props) {
      babelHelpers.classCallCheck(this, DeviceModelDataSource);
      return babelHelpers.possibleConstructorReturn(this, (DeviceModelDataSource.__proto__ || Object.getPrototypeOf(DeviceModelDataSource)).call(this, props));
    }

    babelHelpers.createClass(DeviceModelDataSource, [{
      key: "supportAutoSaveLight",
      get: function get() {
        return true;
      }
    }]);
    return DeviceModelDataSource;
  }(BaseDeviceModelDataSource);

  module.exports = DeviceModelDataSource;
},11642,[10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/CommonYeelightModulesDataSource/DeviceModelDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _ParentModulesEntity = _require(_dependencyMap[0]);

    var _ParentModulesEntity2 = babelHelpers.interopRequireDefault(_ParentModulesEntity);

    var _CommonYeelightModules = _require(_dependencyMap[1]);

    var _CommonYeelightModules2 = babelHelpers.interopRequireDefault(_CommonYeelightModules);

    var RouteConfigMap = _ParentModulesEntity2.default.RouteConfigMap;
    var TouchPanelConfigurationPage = _CommonYeelightModules2.default.TouchPanelConfigurationPage;
    exports.default = babelHelpers.extends({}, RouteConfigMap, {
        TouchPanelConfigurationPage: TouchPanelConfigurationPage.component
    });
},11645,[11585,10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/ProductModules/Component/RouteConfigMap.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var ProductModulesDataSource = _require(_dependencyMap[0]);

  var DeviceModulesDataSource = function (_ProductModulesDataSo) {
    babelHelpers.inherits(DeviceModulesDataSource, _ProductModulesDataSo);

    function DeviceModulesDataSource(props) {
      babelHelpers.classCallCheck(this, DeviceModulesDataSource);
      return babelHelpers.possibleConstructorReturn(this, (DeviceModulesDataSource.__proto__ || Object.getPrototypeOf(DeviceModulesDataSource)).call(this, props));
    }

    babelHelpers.createClass(DeviceModulesDataSource, [{
      key: "ApiDataSource",
      get: function get() {
        return _require(_dependencyMap[1]);
        ;
      }
    }, {
      key: "MainPageDataSource",
      get: function get() {
        return _require(_dependencyMap[2]);
      }
    }, {
      key: "LampOnDataSource",
      get: function get() {
        return _require(_dependencyMap[3]);
      }
    }, {
      key: "SettingMenuDataSource",
      get: function get() {
        return _require(_dependencyMap[4]);
      }
    }]);
    return DeviceModulesDataSource;
  }(ProductModulesDataSource);

  module.exports = DeviceModulesDataSource;
},11648,[11597,11651,11657,11660,11663],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesDataSource/DeviceModulesDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  var _ParentModulesEntity = _require(_dependencyMap[0]);

  var ApiDataSource = _ParentModulesEntity.CommonYeelightModulesDataSource.ApiDataSource;

  var Color1ApiDataSource = function (_ApiDataSource) {
    babelHelpers.inherits(Color1ApiDataSource, _ApiDataSource);

    function Color1ApiDataSource() {
      babelHelpers.classCallCheck(this, Color1ApiDataSource);
      return babelHelpers.possibleConstructorReturn(this, (Color1ApiDataSource.__proto__ || Object.getPrototypeOf(Color1ApiDataSource)).call(this));
    }

    babelHelpers.createClass(Color1ApiDataSource, [{
      key: "getPropsArray",
      value: function getPropsArray() {
        return ['color_mode', 'power', 'ct', 'rgb', 'flowing', 'bright', 'hue', 'sat', 'flow_params', 'delayoff'];
      }
    }, {
      key: "registerPropsArray",
      value: function registerPropsArray() {
        return ['power', 'bright', 'rgb', 'ct', 'color_mode', 'flowing', 'hue', 'sat', 'flow_params', 'delayoff'];
      }
    }]);
    return Color1ApiDataSource;
  }(ApiDataSource);

  module.exports = Color1ApiDataSource;
},11651,[11654],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesDataSource/ApiDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _ProductModules = _require(_dependencyMap[0]);

  var _ProductModules2 = babelHelpers.interopRequireDefault(_ProductModules);

  module.exports = new _ProductModules2.default();
},11654,[10019],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/ParentModulesEntity.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var MainPageDataSource = _require(_dependencyMap[2]);

  var LightMode = CommonYeelightModules.LightMode,
      DeviceTypeEnum = CommonYeelightModules.DeviceTypeEnum,
      Api = CommonYeelightModules.Api,
      YLDevice = CommonYeelightModules.YLDevice,
      PluginInfo = CommonYeelightModules.PluginInfo,
      DeviceModel = CommonYeelightModules.DeviceModel;
  var cronState = DeviceTypeEnum.cronState;

  var Color1MainPageDataSource = function (_MainPageDataSource) {
    babelHelpers.inherits(Color1MainPageDataSource, _MainPageDataSource);

    function Color1MainPageDataSource(props) {
      babelHelpers.classCallCheck(this, Color1MainPageDataSource);
      return babelHelpers.possibleConstructorReturn(this, (Color1MainPageDataSource.__proto__ || Object.getPrototypeOf(Color1MainPageDataSource)).call(this, props));
    }

    babelHelpers.createClass(Color1MainPageDataSource, [{
      key: "forceUpdateKeys",
      value: function forceUpdateKeys() {
        return ['lampOn', 'lightMode', 'cron'];
      }
    }, {
      key: "_setPowerOnAndSwitch2Mode",
      value: function _setPowerOnAndSwitch2Mode(mode) {
        var _this2 = this;

        var devicePackageInfo = PluginInfo.packageInfo[YLDevice.deviceModel] || {};
        var supportVersion = devicePackageInfo["device"] || {};
        var setPowerOnAndChangeModeVersion = supportVersion.setPowerOnAndChangeModeVersion || -1;
        var shouldUseSetPower = false;

        if (LightMode.flow != mode && YLDevice.deviceExtra && YLDevice.deviceExtra.hasOwnProperty('fw_version') && YLDevice.deviceExtra.fw_version) {
          var fwVersion = YLDevice.deviceExtra.fw_version;
          var fields = fwVersion.split(/_/);

          if (fields.length > 1) {
            var yeelightFwVersion = fields[1];

            if (yeelightFwVersion > setPowerOnAndChangeModeVersion) {
              shouldUseSetPower = true;
            }
          }
        }

        if (shouldUseSetPower) {
          Api.setPowerOnAndChangeMode(mode, function (success, response) {
            if (success) {
              _reactNative.DeviceEventEmitter.emit("changeModeWithoutSendCommand", {
                mode: mode
              });

              _this2.setState({
                lampOn: true
              });

              _this2.lampOnOrOffFadeAnimate();
            }
          });
        } else {
          Api.setPower('on');
          setTimeout(function () {
            _reactNative.DeviceEventEmitter.emit("changeMode", {
              mode: mode
            });

            _this2.setState({
              lampOn: true
            });

            _this2.lampOnOrOffFadeAnimate();
          }, 300);
        }
      }
    }, {
      key: "propProcessor",
      value: function propProcessor() {
        var _this3 = this;

        return {
          color_mode: function color_mode(value) {
            var mode = _this3.state.mode || -1;

            if (!isNaN(parseInt(value))) {
              mode = parseInt(value);
            }

            return {
              "mode": mode
            };
          },
          power: function power(value) {
            var isOn = value == 'on' ? true : false;
            var cron = isOn ? cronState.normal : cronState.disable;

            if (_this3.cronState == cronState.selected && isOn) {
              cron = cronState.selected;
            }

            return {
              "cron": cron,
              "lampOn": isOn
            };
          },
          ct: function ct(value) {
            var ct = _this3.state.ct || -1;

            if (DeviceModel.isFixedColorTemperature && DeviceModel.fixedColorTemperature > 0) {
              ct = DeviceModel.fixedColorTemperature;
            } else {
              if (!isNaN(parseInt(value))) {
                ct = parseInt(value);
              }
            }

            return {
              "ct": ct
            };
          },
          bright: function bright(value) {
            var bright = -1;

            if (!isNaN(parseInt(value))) {
              bright = parseInt(value);
            }

            return {
              "brightness": bright,
              "bright": bright
            };
          },
          rgb: function rgb(value) {
            var rgb = _this3.state.rgb || -1;

            if (!isNaN(parseInt(value))) {
              rgb = parseInt(value);
            }

            return {
              "rgb": rgb
            };
          },
          flowing: function flowing(value) {
            var flowing = value == 1;
            return {
              "flowing": flowing
            };
          },
          hue: function hue(value) {
            var hue = _this3.state.hue || -1;

            if (!isNaN(parseInt(value))) {
              hue = parseInt(value);
            }

            return {
              "hue": hue
            };
          },
          sat: function sat(value) {
            var sat = _this3.state.sat || -1;

            if (!isNaN(parseInt(value))) {
              sat = parseInt(value);
            }

            return {
              "sat": sat
            };
          },
          flow_params: function flow_params(value) {
            var flow_params = value;

            if (flow_params && Array.isArray(flow_params)) {
              flow_params = flow_params[0] || "";
            }

            return {
              "flow_params": flow_params || ""
            };
          },
          delayoff: function delayoff(value, result) {
            var currentCronState = {};
            var delayoff = 0;
            var lampOn = _this3.lampOn;

            if (result.hasOwnProperty('power')) {
              lampOn = _this3.propProcessor()['power'](result['power']).lampOn;
            }

            if (!isNaN(parseInt(value))) {
              delayoff = parseInt(value);

              if (delayoff) {
                currentCronState = {
                  cron: cronState.selected
                };
              } else {
                if (lampOn) {
                  currentCronState = {
                    cron: cronState.normal
                  };
                } else {
                  currentCronState = {
                    cron: cronState.disable
                  };
                }
              }
            }

            return babelHelpers.extends({
              "delayoff": delayoff
            }, currentCronState);
          },
          common: function common(values) {
            var color_mode = _this3.state.mode;

            if (values.hasOwnProperty('color_mode')) {
              color_mode = _this3.propProcessor()['color_mode'](values['color_mode']).mode;
            }

            var flowing = _this3.state.flowing;

            if (values.hasOwnProperty('flowing')) {
              flowing = _this3.propProcessor()['flowing'](values['flowing']).flowing;
            }

            var lightMode = LightMode.modeCheck(color_mode, flowing);
            return {
              "lightMode": lightMode
            };
          }
        };
      }
    }, {
      key: "_handleProps",
      value: function _handleProps(result) {
        var updateValue = {};

        for (var key in result) {
          if (result.hasOwnProperty(key)) {
            var item = result[key];
            var processor = this.propProcessor()[key];

            if (processor) {
              var value = processor(item, result);
              updateValue = babelHelpers.extends({}, updateValue, value);
            }
          }
        }

        if (this.propProcessor().common) {
          var _value = this.propProcessor().common(result);

          updateValue = babelHelpers.extends({}, updateValue, _value);
        }

        this.setState(updateValue);
        this.lampOnOrOffFadeAnimate();

        _reactNative.DeviceEventEmitter.emit("get_status", this.convertPropsToStatus(updateValue));
      }
    }, {
      key: "convertPropsToStatus",
      value: function convertPropsToStatus(props) {
        var status = {};
        var keysFilter = ["mode", "ct", "brightness", "lightMode", "color_mode", "lampOn", "rgb", "flowing", "bright", "hue", "sat", "flow_params"];

        for (var key in props) {
          if (props.hasOwnProperty(key) && keysFilter.includes(key)) {
            var element = props[key];

            if (key == 'brightness') {
              status.bright = element;
            } else if (key == 'mode') {
              status.color_mode = element;
            } else {
              status[key] = element;
            }
          }
        }

        return status;
      }
    }]);
    return Color1MainPageDataSource;
  }(MainPageDataSource);

  module.exports = Color1MainPageDataSource;
},11657,[10033,10007,11636],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesDataSource/MainPageDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var LampOnDataSource = _require(_dependencyMap[0]);

    var CommonYeelightModules = _require(_dependencyMap[1]);

    var LightMode = CommonYeelightModules.LightMode,
        LightGenerator = CommonYeelightModules.LightGenerator,
        Tools = CommonYeelightModules.Tools,
        Theme = CommonYeelightModules.Theme,
        FlowingPanel = CommonYeelightModules.FlowingPanel;

    var Color1LampOnDataSource = function (_LampOnDataSource) {
        babelHelpers.inherits(Color1LampOnDataSource, _LampOnDataSource);

        function Color1LampOnDataSource(props) {
            babelHelpers.classCallCheck(this, Color1LampOnDataSource);
            return babelHelpers.possibleConstructorReturn(this, (Color1LampOnDataSource.__proto__ || Object.getPrototypeOf(Color1LampOnDataSource)).call(this, props));
        }

        babelHelpers.createClass(Color1LampOnDataSource, [{
            key: "turnOnCT",
            value: function turnOnCT() {
                this.changeCTDirectly();
            }
        }, {
            key: "handleParseGetStatus",
            value: function handleParseGetStatus(object) {
                this.handleParseGetStatusWithLight(object);
            }
        }, {
            key: "statusProcessor",
            value: function statusProcessor() {
                var _this2 = this;

                return {
                    lampOn: function lampOn(value) {
                        return {
                            "lampOn": value
                        };
                    },
                    ct: function ct(value) {
                        return {
                            "ct": LightGenerator.CT2Value(value, _this2.isRight)
                        };
                    },
                    bright: function bright(value) {
                        return {
                            "brightness": value
                        };
                    },
                    flow_params: function flow_params(value) {
                        var flowString = '';

                        if (value) {
                            flowString = JSON.stringify(value);
                        }

                        var flowPartString = '[]';
                        var flow = '';
                        var cf_duration = 1;
                        var cf_brightness = 100;

                        if (flowString && flowString.length > 5) {
                            flowPartString = flowString.substring(5);
                            var flowArray = flowString.split(",") || [];
                            var duration = flowArray[2] || 1000;
                            duration = parseInt(duration) / 1000;
                            cf_duration = (12 - duration) / 11;
                            cf_brightness = parseInt(flowArray[5] || 100);

                            if (flowPartString) {
                                flow = '[' + JSON.stringify('cf') + ',0,0,' + '"' + flowPartString + ']';
                            }
                        }

                        return {
                            cf_brightness: cf_brightness,
                            cf_duration: cf_duration,
                            "cf": flow
                        };
                    },
                    nl_br: function nl_br(value) {
                        var nl_br = _this2.nl_br;

                        if (value && value > 0) {
                            nl_br = value;
                        }

                        return {
                            "nl_br": nl_br
                        };
                    },
                    rgb: function rgb(value, object) {
                        var hue = Tools.getHue(value);

                        if (object.color_mode == 3) {
                            hue = object.hue / 360.0;
                        }

                        _this2.colorCache = hue;
                        return {
                            "hue": hue
                        };
                    },
                    common: function common(object) {
                        var returnValue = {};

                        if (object.hasOwnProperty('lightMode')) {
                            returnValue = {
                                lightMode: object.lightMode
                            };
                        } else if (object.hasOwnProperty('color_mode')) {
                            var color_mode = object.color_mode;
                            var flowing = _this2.state.flowing;

                            if (object.hasOwnProperty('flowing')) {
                                flowing = object.flowing;
                            }

                            returnValue = {
                                "lightMode": LightMode.modeCheck(color_mode, flowing)
                            };
                        }

                        return returnValue;
                    }
                };
            }
        }, {
            key: "handleParseGetStatusWithLight",
            value: function handleParseGetStatusWithLight(result) {
                if (this.indicatorShowed || this.HoriIndicatorShowed) {
                    return;
                }

                var updateValue = {};

                for (var key in result) {
                    if (result.hasOwnProperty(key)) {
                        var item = result[key];
                        var processor = this.statusProcessor()[key];

                        if (processor) {
                            var value = processor(item, result);
                            updateValue = babelHelpers.extends({}, updateValue, value);
                        }
                    }
                }

                if (this.statusProcessor().common) {
                    var _value = this.statusProcessor().common(result);

                    updateValue = babelHelpers.extends({}, updateValue, _value);
                }

                this.setState(updateValue);
            }
        }, {
            key: "forceUpdateKeys",
            value: function forceUpdateKeys() {
                return ['deviceModel', 'lightMode', 'ct', 'hue', 'brightness', 'cf_brightness', 'nl_br', 'lightState', 'cf_duration'];
            }
        }, {
            key: "getFlowingPanel",
            value: function getFlowingPanel() {
                return FlowingPanel;
            }
        }, {
            key: "hIndicatorViewStyles",
            get: function get() {
                return {
                    position: 'absolute',
                    top: 76 + Theme.APPBAR_MARGINTOP,
                    backgroundColor: 'transparent'
                };
            }
        }]);
        return Color1LampOnDataSource;
    }(LampOnDataSource);

    module.exports = Color1LampOnDataSource;
},11660,[11609,10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesDataSource/LampOnDataSource.js");
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var SettingMenuDataSource = _require(_dependencyMap[0]);

  var CommonYeelightModules = _require(_dependencyMap[1]);

  var MenuIdentifiers = CommonYeelightModules.MenuIdentifiers,
      SettingMenuTypeEnum = CommonYeelightModules.SettingMenuTypeEnum,
      DefaultLightNewCommon = CommonYeelightModules.DefaultLightNewCommon;

  var Color1SettingMenuDataSource = function (_SettingMenuDataSourc) {
    babelHelpers.inherits(Color1SettingMenuDataSource, _SettingMenuDataSourc);

    function Color1SettingMenuDataSource(props) {
      babelHelpers.classCallCheck(this, Color1SettingMenuDataSource);
      return babelHelpers.possibleConstructorReturn(this, (Color1SettingMenuDataSource.__proto__ || Object.getPrototypeOf(Color1SettingMenuDataSource)).call(this, props));
    }

    babelHelpers.createClass(Color1SettingMenuDataSource, [{
      key: "defaultLight",
      value: function defaultLight() {
        return DefaultLightNewCommon;
      }
    }, {
      key: "specificMenuIdentifiersArray",
      value: function specificMenuIdentifiersArray() {
        return [MenuIdentifiers.settingTime, MenuIdentifiers.settingSchedules, MenuIdentifiers.settingDefaultLight];
      }
    }, {
      key: "commonMenuIdentifiersArray",
      value: function commonMenuIdentifiersArray() {
        var commonMenu = [MenuIdentifiers.miHomeSettingEditDeviceName, MenuIdentifiers.miHomeSettingShareDevice, MenuIdentifiers.miHomeSettingCheckFirmwareUpgrade, MenuIdentifiers.miHomeSettingRoomManagement, MenuIdentifiers.miHomeSettingIftttAuto, MenuIdentifiers.miHomeSettingNewMore, MenuIdentifiers.miHomeSettingAddToDesktop, MenuIdentifiers.miHomeSettingOpenPrivacyAndLicense];

        if (SettingMenuTypeEnum.CommboType != this.props.settingMenuType) {
          commonMenu.push(MenuIdentifiers.miHomeSettingUnbindDevice);
        }

        return commonMenu;
      }
    }]);
    return Color1SettingMenuDataSource;
  }(SettingMenuDataSource);

  module.exports = Color1SettingMenuDataSource;
},11663,[11621,10007],"projects/com.yeelight.wifi.color1/SubProducts/com.yeelight.colorlight.ios/SubModels/yeelink.light.color1/DeviceModules/DeviceModulesDataSource/SettingMenuDataSource.js");
require(10120);
require(10001);